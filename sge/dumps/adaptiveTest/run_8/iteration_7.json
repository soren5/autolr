[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.8145714402198792, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0252921438456495, 1.5462481896985303, 1.1571092962541631, 0.8928545367180821, 0.830283222575119, 0.7492422093064668, 0.743313031843105, 0.6936721014797003, 0.6538877975844657, 0.6940566731198369, 0.6482536094126653, 0.6267304518014654, 0.5947675630007406, 0.5925529796402326, 0.6187182945613737, 0.5582511756146479, 0.5617186062922646, 0.5485734826837312, 0.5497342939972641, 0.5068072489680647, 0.5078607327067983, 0.506259484675897, 0.505961505067095, 0.4860177211096384, 0.4861691310704581, 0.47058294841626286, 0.4771579667057863, 0.44927029881054115, 0.45237133965799603, 0.4288912369252007, 0.4288150964317352], "accuracy": [0.33139610290527344, 0.5132743120193481, 0.5947695374488831, 0.6734909415245056, 0.6873596906661987, 0.7162858247756958, 0.7205125093460083, 0.7331924438476562, 0.752212405204773, 0.7375511527061462, 0.7481178045272827, 0.7604015469551086, 0.7784969210624695, 0.7685906887054443, 0.76106196641922, 0.791441023349762, 0.7910447716712952, 0.7890635132789612, 0.7965922355651855, 0.8079513907432556, 0.8064984679222107, 0.8105930685997009, 0.8059701323509216, 0.8158763647079468, 0.817461371421814, 0.8259146809577942, 0.8224804997444153, 0.8359529972076416, 0.8321225643157959, 0.8392550349235535, 0.8418967127799988], "val_loss": [1.3060280254908971, 0.8635960306440081, 0.6251115117754255, 0.621252281325204, 0.5554208755493164, 0.605368937764849, 0.5504304851804461, 0.5478659016745431, 0.6093183755874634, 0.5092153889792306, 0.4789679901940482, 0.49864026478358675, 0.5052002157483783, 0.5540377242224557, 0.4619074889591762, 0.4547996861594064, 0.4388894098145621, 0.4440572346959795, 0.4273762447493417, 0.42159303597041536, 0.4593724693570818, 0.4551930086953299, 0.4110939247267587, 0.4296570760863168, 0.400144100189209, 0.3931127531187875, 0.4009267772947039, 0.42342605761119295, 0.38463673421314787, 0.3818275247301374, 0.38714033365249634], "val_accuracy": [0.5509999990463257, 0.637666642665863, 0.7353333234786987, 0.7296666502952576, 0.7606666684150696, 0.7256666421890259, 0.7473333477973938, 0.7476666569709778, 0.7326666712760925, 0.7699999809265137, 0.7803333401679993, 0.7853333353996277, 0.7703333497047424, 0.7386666536331177, 0.8159999847412109, 0.8086666464805603, 0.8006666898727417, 0.8096666932106018, 0.8203333616256714, 0.8240000009536743, 0.7889999747276306, 0.7960000038146973, 0.8273333311080933, 0.8083333373069763, 0.8259999752044678, 0.840666651725769, 0.82833331823349, 0.8153333067893982, 0.8399999737739563, 0.8333333134651184, 0.8263333439826965]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 3, 5, 9], [1, 1, 2, 0, 0], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 0, 1, 1], [0, 3], [2, 0], [45]], "fitness": -0.8145714402198792, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0252921438456495, 1.5462481896985303, 1.1571092962541631, 0.8928545367180821, 0.830283222575119, 0.7492422093064668, 0.743313031843105, 0.6936721014797003, 0.6538877975844657, 0.6940566731198369, 0.6482536094126653, 0.6267304518014654, 0.5947675630007406, 0.5925529796402326, 0.6187182945613737, 0.5582511756146479, 0.5617186062922646, 0.5485734826837312, 0.5497342939972641, 0.5068072489680647, 0.5078607327067983, 0.506259484675897, 0.505961505067095, 0.4860177211096384, 0.4861691310704581, 0.47058294841626286, 0.4771579667057863, 0.44927029881054115, 0.45237133965799603, 0.4288912369252007, 0.4288150964317352], "accuracy": [0.33139610290527344, 0.5132743120193481, 0.5947695374488831, 0.6734909415245056, 0.6873596906661987, 0.7162858247756958, 0.7205125093460083, 0.7331924438476562, 0.752212405204773, 0.7375511527061462, 0.7481178045272827, 0.7604015469551086, 0.7784969210624695, 0.7685906887054443, 0.76106196641922, 0.791441023349762, 0.7910447716712952, 0.7890635132789612, 0.7965922355651855, 0.8079513907432556, 0.8064984679222107, 0.8105930685997009, 0.8059701323509216, 0.8158763647079468, 0.817461371421814, 0.8259146809577942, 0.8224804997444153, 0.8359529972076416, 0.8321225643157959, 0.8392550349235535, 0.8418967127799988], "val_loss": [1.3060280254908971, 0.8635960306440081, 0.6251115117754255, 0.621252281325204, 0.5554208755493164, 0.605368937764849, 0.5504304851804461, 0.5478659016745431, 0.6093183755874634, 0.5092153889792306, 0.4789679901940482, 0.49864026478358675, 0.5052002157483783, 0.5540377242224557, 0.4619074889591762, 0.4547996861594064, 0.4388894098145621, 0.4440572346959795, 0.4273762447493417, 0.42159303597041536, 0.4593724693570818, 0.4551930086953299, 0.4110939247267587, 0.4296570760863168, 0.400144100189209, 0.3931127531187875, 0.4009267772947039, 0.42342605761119295, 0.38463673421314787, 0.3818275247301374, 0.38714033365249634], "val_accuracy": [0.5509999990463257, 0.637666642665863, 0.7353333234786987, 0.7296666502952576, 0.7606666684150696, 0.7256666421890259, 0.7473333477973938, 0.7476666569709778, 0.7326666712760925, 0.7699999809265137, 0.7803333401679993, 0.7853333353996277, 0.7703333497047424, 0.7386666536331177, 0.8159999847412109, 0.8086666464805603, 0.8006666898727417, 0.8096666932106018, 0.8203333616256714, 0.8240000009536743, 0.7889999747276306, 0.7960000038146973, 0.8273333311080933, 0.8083333373069763, 0.8259999752044678, 0.840666651725769, 0.82833331823349, 0.8153333067893982, 0.8399999737739563, 0.8333333134651184, 0.8263333439826965]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [11], [1, 1, 1, 0, 0], [0, 0, 0, 1, 1], [5, 1, 8], [4, 1], [65, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0], [3], [45]], "fitness": -0.39971429109573364, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.316718264656485, 2.306165494529594, 2.3024576185496257, 2.2546426712041674, 2.308536172401258, 2.302699439262024], "accuracy": [0.23074890673160553, 0.13195087015628815, 0.10196803510189056, 0.19416193664073944, 0.10038304328918457, 0.09919429570436478], "val_loss": [1.6912411962236678, 1.973343781062535, 1.971346310206822, 1.9894135338919503, 1.9744411196027483, 1.9704249245779855], "val_accuracy": [0.3426666557788849, 0.09966666996479034, 0.11433333158493042, 0.10233332961797714, 0.09833333641290665, 0.195333331823349]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 2], [1, 2, 2, 0, 0], [44, 80], [0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [4, 6, 6], [3, 0, 0, 4], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0, 3], [3, 0], [45]], "fitness": -0.39971429109573364, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.316718264656485, 2.306165494529594, 2.3024576185496257, 2.2546426712041674, 2.308536172401258, 2.302699439262024], "accuracy": [0.23074890673160553, 0.13195087015628815, 0.10196803510189056, 0.19416193664073944, 0.10038304328918457, 0.09919429570436478], "val_loss": [1.6912411962236678, 1.973343781062535, 1.971346310206822, 1.9894135338919503, 1.9744411196027483, 1.9704249245779855], "val_accuracy": [0.3426666557788849, 0.09966666996479034, 0.11433333158493042, 0.10233332961797714, 0.09833333641290665, 0.195333331823349]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 5, 4, 2, 7, 4, 0, 5], [3, 1, 1, 1, 3, 0], [44, 78, 81, 73], [1, 0, 1, 0, 0], [0, 0, 0, 1, 1], [5, 1, 8], [3, 5], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0], [3], [45]], "fitness": -0.39971429109573364, "mapping_values": [1, 14, 14, 8, 6, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.316718264656485, 2.306165494529594, 2.3024576185496257, 2.2546426712041674, 2.308536172401258, 2.302699439262024], "accuracy": [0.23074890673160553, 0.13195087015628815, 0.10196803510189056, 0.19416193664073944, 0.10038304328918457, 0.09919429570436478], "val_loss": [1.6912411962236678, 1.973343781062535, 1.971346310206822, 1.9894135338919503, 1.9744411196027483, 1.9704249245779855], "val_accuracy": [0.3426666557788849, 0.09966666996479034, 0.11433333158493042, 0.10233332961797714, 0.09833333641290665, 0.195333331823349]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [2, 1, 3, 9], [1, 1, 3, 0, 0], [11], [0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1], [4, 6, 6, 0], [3, 1, 3, 1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0, 3], [3, 0], [45]], "fitness": -0.39971429109573364, "mapping_values": [1, 7, 7, 4, 3, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), alpha), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.316718264656485, 2.306165494529594, 2.3024576185496257, 2.2546426712041674, 2.308536172401258, 2.302699439262024], "accuracy": [0.23074890673160553, 0.13195087015628815, 0.10196803510189056, 0.19416193664073944, 0.10038304328918457, 0.09919429570436478], "val_loss": [1.6912411962236678, 1.973343781062535, 1.971346310206822, 1.9894135338919503, 1.9744411196027483, 1.9704249245779855], "val_accuracy": [0.3426666557788849, 0.09966666996479034, 0.11433333158493042, 0.10233332961797714, 0.09833333641290665, 0.195333331823349]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [1, 0, 1, 0, 0], [0, 0, 0, 1, 1], [5, 1, 0], [3, 5], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0], [3], [45]], "fitness": -0.39971429109573364, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.316718264656485, 2.306165494529594, 2.3024576185496257, 2.2546426712041674, 2.308536172401258, 2.302699439262024], "accuracy": [0.23074890673160553, 0.13195087015628815, 0.10196803510189056, 0.19416193664073944, 0.10038304328918457, 0.09919429570436478], "val_loss": [1.6912411962236678, 1.973343781062535, 1.971346310206822, 1.9894135338919503, 1.9744411196027483, 1.9704249245779855], "val_accuracy": [0.3426666557788849, 0.09966666996479034, 0.11433333158493042, 0.10233332961797714, 0.09833333641290665, 0.195333331823349]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [0, 3, 2, 2, 2, 3, 5, 4], [53, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [3, 2, 2, 6, 3, 8, 4, 4, 8, 7, 7, 1, 8, 7, 1, 7, 7, 0, 9], [2, 0, 1, 3, 0, 3, 0, 1, 2, 0, 1, 2, 1, 0], [45, 32, 1, 73, 49, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 33, 19, 14, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha), sigma)), tf.math.multiply(tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(sigma, tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))), tf.math.add(tf.math.subtract(tf.math.sqrt(beta), tf.math.add(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha), beta)), tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [0, 2, 0, 2, 0, 3, 0], [62, 80, 59, 1], [1, 0, 1, 0, 0], [1, 0, 0, 0, 1], [2, 6, 9], [3, 5], [64, 19], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [5, 7], [], [0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1], [3, 2, 2, 3], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 7, 4, 9], [1, 1, 2, 0, 0], [44, 80], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 3, 1, 0, 0, 6, 0, 6, 1, 8, 8, 3, 5, 5, 4, 5, 1, 2], [3, 0, 3, 3, 3, 3, 0, 0, 1, 1], [45, 33, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 28, 18, 10, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(sigma, tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.math.square(sigma), tf.math.square(sigma))))), sigma))))), tf.math.pow(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 6, 4, 9, 7], [0, 1, 2, 1], [78, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(tf.math.add(alpha, grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 6, 2, 3, 1, 3, 7, 5, 7, 0, 1, 1, 7, 7, 7, 3, 7, 8, 7, 9], [3, 3, 2, 2, 2, 3, 5, 4, 4, 0, 2, 2, 4, 4, 2, 1, 4, 0], [80, 70, 3, 14], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [0, 0], [45, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [18.433260127994537, 173.49669082796788, 639.617211878591, 1608.3067684513687, 3260.0384194340454, 5900.140167546704], "accuracy": [0.09840179979801178, 0.10394927859306335, 0.09708096832036972, 0.10011887550354004, 0.10315678268671036, 0.1014397069811821], "val_loss": [46.212001255580354, 238.25816999162947, 695.7038922991071, 1552.993687220982, 2936.3145926339284, 4976.215401785715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1], [8, 1, 6, 5, 4, 9, 2, 0, 6, 5, 3, 4, 8, 4, 2], [0, 2, 3, 2, 1, 0, 0, 2, 1, 1], [44, 78, 78, 73], [1, 0, 1], [1, 0, 0, 1, 1], [5, 9, 8], [3], [93, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [7, 8], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30246846661072, 2.3024827663090095, 2.3029496223226498, 2.306188085469367, 2.3230962016720733, 2.449217745530654], "accuracy": [0.09932637959718704, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737390109470911, 1.9740330832345145, 1.9754084178379603, 1.9820260320390974, 2.019535882132394, 2.421527181352888], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0], [7, 6, 4, 9], [3, 0, 3, 0, 1, 0, 0, 2, 1, 1], [44, 57], [0, 0, 1], [0, 1, 0, 1, 1], [5, 9, 8], [1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 1], [0], [0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302842073877647, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 6, 6], [3, 0, 3, 1], [22]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 4], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [11], [1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1], [4, 9, 7, 4], [3, 5, 3], [24, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [34], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 4, 1, 3, 2, 6, 4, 3, 5, 9, 4, 0, 8, 3, 9, 0, 1, 8, 2, 6, 2], [3, 3, 3, 1, 1, 0, 3, 2, 2, 2, 2, 3], [45, 97, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 33, 21, 12, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.math.subtract(sigma, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.multiply(alpha, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))))), tf.math.subtract(beta, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, beta), beta), sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1], [2, 7, 5, 0, 6, 9, 3], [3, 3, 2], [44, 78, 81, 73], [0, 1, 1, 1, 1], [0, 1, 0, 1, 0], [4, 9, 7], [3, 4], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [20], [1, 1], [0], [3], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [45.81283571200206, 527.2773030061511, 2154.705050876443, 5667.909582579188, 11734.414493059454, 21497.37976685296], "accuracy": [0.09853387624025345, 0.10368511080741882, 0.09668471664190292, 0.10011887550354004, 0.10302469879388809, 0.1014397069811821], "val_loss": [128.20268903459822, 770.7821568080357, 2415.0963309151784, 5546.330915178572, 10651.378348214286, 18212.44754464286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0], [7, 5, 4, 9], [0, 1, 1], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [0, 0], [45, 4]], "fitness": -0.09885714203119278, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.305744374700588, 2.3182378535131503, 2.3511569942103527, 2.4063264953934236, 2.480703018061505, 2.615171657498518, 2.777806194435415, 3.0074197283636357, 3.2834711265034917, 3.610713793286369, 3.8908662560782523], "accuracy": [0.0866464152932167, 0.08915598690509796, 0.08757099509239197, 0.09470347315073013, 0.10196803510189056, 0.09642054885625839, 0.10302469879388809, 0.09813763201236725, 0.09536388516426086, 0.09430722147226334, 0.09972262382507324], "val_loss": [1.9751144817897253, 1.9821593420846122, 2.0012104170663014, 2.034408296857561, 2.0844922065734863, 2.1549882888793945, 2.2493296350751604, 2.3705428668430875, 2.5210772923060825, 2.702661922999791, 2.9162538392203197], "val_accuracy": [0.03799999877810478, 0.09066666662693024, 0.09600000083446503, 0.09799999743700027, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [4, 6], [3, 2, 0, 0, 0, 0, 0, 2, 1, 1], [62, 80, 59, 1], [0, 0, 1, 0, 0], [1, 0, 0, 0, 1], [2, 6, 9], [3, 3], [65, 19], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1], [6, 1, 6, 2, 9], [3, 1, 2, 3], [6]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(sigma, alpha), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3024041401695943, 2.301717846857448, 2.3023235526744323, 2.3023492933154155, 2.3007166254018134, 2.302495245196013], "accuracy": [0.08994849026203156, 0.09232597798109055, 0.0878351628780365, 0.08796724677085876, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 4, 5, 0, 6, 9, 3], [0, 1, 2, 1], [44, 23, 81, 73], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [1], [64, 19], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024041401695943, 2.301717846857448, 2.3023235526744323, 2.3023492933154155, 2.3007166254018134, 2.302495245196013], "accuracy": [0.08994849026203156, 0.09232597798109055, 0.0878351628780365, 0.08796724677085876, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]