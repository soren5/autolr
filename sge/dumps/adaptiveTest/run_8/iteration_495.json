[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8214285969734192, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.0564555841556014, 1.5368520781002213, 1.4187782101107784, 0.9803322863427639, 0.9169470746251712, 0.7475861049740778, 0.7164801724944936, 0.6798856496307056, 0.6546993670903177, 0.6331189382251039, 0.6229668256786474, 0.5811710871599606, 0.5807554942348204, 0.5502776427118454, 0.5328228860373164, 0.5477536822338429, 0.5131233878470116, 0.4947188261154857, 0.5015204966091886, 0.4668814442916994, 0.4681107035174173, 0.462125168921626, 0.45789550059207945, 0.4527634501913834, 0.43418786918104535, 0.4415742926601689, 0.45120139402909254, 0.426615791825602, 0.42330962189625376], "accuracy": [0.31726324558258057, 0.4574032425880432, 0.49385812878608704, 0.6419231295585632, 0.6627922058105469, 0.7210407853126526, 0.7228899598121643, 0.7429665923118591, 0.7469290494918823, 0.7541936039924622, 0.7617223858833313, 0.7817989587783813, 0.7777044177055359, 0.7936864495277405, 0.7993659973144531, 0.7947431206703186, 0.8062343001365662, 0.8178576231002808, 0.806630551815033, 0.8277638554573059, 0.824329674243927, 0.8274996876716614, 0.8321225643157959, 0.830669641494751, 0.8391229510307312, 0.8384625315666199, 0.826310932636261, 0.8374059200286865, 0.841500461101532], "val_loss": [1.6092939717429025, 1.3050482273101807, 1.042593206678118, 0.6276149238858905, 0.582903334072658, 0.6754263639450073, 0.5312659399850028, 0.552327173096793, 0.504035234451294, 0.6266833714076451, 0.515824692589896, 0.4520226631845747, 0.4776648623602731, 0.43601410729544504, 0.48130316393715994, 0.4404507449695042, 0.41877044098717825, 0.4125461663518633, 0.4182503989764622, 0.3902075971875872, 0.4098696623529707, 0.3839980363845825, 0.3837207981518337, 0.3733574492590768, 0.38909556184496197, 0.38241282531193327, 0.3791284476007734, 0.3708186745643616, 0.37160498755318777], "val_accuracy": [0.38466668128967285, 0.4463333189487457, 0.5576666593551636, 0.6990000009536743, 0.7393333315849304, 0.6903333067893982, 0.7586666941642761, 0.7353333234786987, 0.7720000147819519, 0.6963333487510681, 0.762666642665863, 0.7976666688919067, 0.7803333401679993, 0.8086666464805603, 0.7829999923706055, 0.7950000166893005, 0.8173333406448364, 0.8273333311080933, 0.8146666884422302, 0.8276666402816772, 0.8066666722297668, 0.8263333439826965, 0.8349999785423279, 0.8423333168029785, 0.82833331823349, 0.8413333296775818, 0.8330000042915344, 0.8383333086967468, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.230530091312032, 1.818177970062551, 1.275844894506046, 1.1002764123195607, 0.9682470448674338, 0.9019320265665156, 0.851173374749225, 0.8243308047246246, 0.7892753137038164, 0.7747829114882198, 0.7391533389177777, 0.7406761632257244, 0.7093455104654051, 0.6999556466872114, 0.6806241160748484, 0.6783428727486162, 0.6659182819078123, 0.6555660660980778, 0.6502564298068968, 0.6386756114499318, 0.6349003075640105, 0.6178704912258476, 0.6224329369084836, 0.6010263032444622, 0.6157611744703949, 0.5938093915213651, 0.5958783867462767, 0.5817480722296869, 0.5862468911861117], "accuracy": [0.24607053399085999, 0.4348170757293701, 0.561352550983429, 0.6132611036300659, 0.652621865272522, 0.6765288710594177, 0.6851142644882202, 0.6948884129524231, 0.7079645991325378, 0.7144366502761841, 0.7288337349891663, 0.7269845604896545, 0.7308149337768555, 0.7407211661338806, 0.7457403540611267, 0.7454761862754822, 0.7544577717781067, 0.7594769597053528, 0.7536653280258179, 0.7597411274909973, 0.7594769597053528, 0.7687227725982666, 0.7601373791694641, 0.7755910754203796, 0.7660810947418213, 0.77677983045578, 0.778232753276825, 0.785101056098938, 0.7791573405265808], "val_loss": [1.7469473566327776, 1.098745686667306, 0.7932841266904559, 0.7485656057085309, 0.6904257365635463, 0.6102828638894218, 0.5947728838239398, 0.5892062187194824, 0.575731635093689, 0.5467485019138881, 0.5394175222941807, 0.5577377932412284, 0.5135131563459124, 0.5189421347209385, 0.5176462786538261, 0.4930977480752127, 0.492632406098502, 0.49211277280535015, 0.49096308435712543, 0.4923952988215855, 0.4652724436351231, 0.47924000876290457, 0.46922503198896137, 0.4567270874977112, 0.46964401858193533, 0.45200391326631817, 0.4512063520295279, 0.44725264821733746, 0.4770447867257254], "val_accuracy": [0.47600001096725464, 0.6209999918937683, 0.6733333468437195, 0.6893333196640015, 0.7026666402816772, 0.7363333106040955, 0.7423333525657654, 0.734666645526886, 0.7540000081062317, 0.7599999904632568, 0.7546666860580444, 0.7556666731834412, 0.777999997138977, 0.7816666960716248, 0.7666666507720947, 0.7979999780654907, 0.7833333611488342, 0.7910000085830688, 0.79666668176651, 0.7889999747276306, 0.8003333210945129, 0.7956666946411133, 0.8066666722297668, 0.812333345413208, 0.7903333306312561, 0.809333324432373, 0.812333345413208, 0.8113333582878113, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.23228570818901062, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [3.4179090949065967, 2.303624235202828, 2.2526398773883645, 2.4316918924893716, 2.309714836199459, 2.28526386416678, 2.2970618720792144, 2.28433230584245, 2.3043904479909423, 2.3033000215830945, 2.3029104122443522], "accuracy": [0.17421740293502808, 0.10394927859306335, 0.14251750707626343, 0.17831197381019592, 0.10130762308835983, 0.13736626505851746, 0.15281997621059418, 0.14040417969226837, 0.10289261490106583, 0.09959053993225098, 0.09919429570436478], "val_loss": [1.975168296269008, 1.9727925573076521, 1.979126044682094, 1.9839154652186803, 1.9743989535740443, 1.7420266015189034, 1.7123616422925676, 1.9758132525852747, 1.9739633287702287, 1.9738893508911133, 1.9738943917410714], "val_accuracy": [0.10400000214576721, 0.09733333438634872, 0.17599999904632568, 0.10233332961797714, 0.13699999451637268, 0.34599998593330383, 0.23466666042804718, 0.09966666996479034, 0.09833333641290665, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 5, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.11257142573595047, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3002355746809737, 2.301740273917907, 2.3025689838332837, 2.3027517040722785, 2.3045973080244706, 2.3251432971616763], "accuracy": [0.10157178342342377, 0.08057060092687607, 0.07885351777076721, 0.08836349099874496, 0.07647603005170822, 0.09813763201236725], "val_loss": [1.968923841203962, 1.9736691883632116, 1.9737020901271276, 1.9744566508701868, 1.9787590163094657, 2.0496350015912737], "val_accuracy": [0.10633333027362823, 0.05299999937415123, 0.0689999982714653, 0.07500000298023224, 0.08933333307504654, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 9, 6, 9, 6, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 4], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [115869153.06158829, 2.687479346041918, 2.4821909442632553, 2.5768277250843403, 2.6299527469895, 2.4810047984485375], "accuracy": [0.09972262382507324, 0.09470347315073013, 0.0944393053650856, 0.09840179979801178, 0.10236428678035736, 0.09919429570436478], "val_loss": [2.3361531666346957, 2.2949372019086565, 2.318580082484654, 2.1980579921177457, 2.310908113207136, 2.2912448474339078], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.10400000214576721, 0.09733333438634872, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 9, 6, 9, 6, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.733831864149028, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18491612374782562, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2931.165108816964, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 52, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 3, 4, 7, 9, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [7.712964891678842, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18451987206935883, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3717.1886160714284, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [66, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 7, 8, 9, 6, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [6, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8, 1, 7, 7], [2, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [0, 0, 1, 0], [3, 9, 0], [5, 3], [83], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [0, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 5, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, beta), tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [15133531713692.83, 2.922372940367302, 2.784245991987118, 2.9383534551249393, 4.336013752692065, 8.082567547511085], "accuracy": [0.09774138033390045, 0.1022322028875351, 0.09906221181154251, 0.09800554811954498, 0.1010434553027153, 0.1010434553027153], "val_loss": [2.526332105909075, 2.466652052743094, 2.3560798508780345, 2.9066313334873746, 5.14998585837228, 9.820569447108678], "val_accuracy": [0.10400000214576721, 0.0976666659116745, 0.09700000286102295, 0.0976666659116745, 0.09700000286102295, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [1, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0], [3, 3, 0, 5], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 7, 2, 9, 2, 9], [2, 2, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 7, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 2, 5, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 1, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 3, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 5, 2, 5, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [2, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 9, 9, 4, 5, 1, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2560682.8886268074, 2971047.3647140404, 2970915.874818386, 2970849.001221767, 2967202.6230022456, 2960113.5669990755], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2536994.714285714, 2536983.5714285714, 2536825.0714285714, 2536826.5714285714, 2527600.1428571427, 2527600.9285714286], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 9, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 5, 4, 1, 9, 9], [0, 3, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(sigma, tf.math.subtract(sigma, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 4, 4, 0, 3, 1, 1, 0, 0, 9, 5, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [18, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [6, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 5, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [6, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), beta)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 5, 8, 5, 0, 3, 3, 2, 5, 2, 1, 8, 3, 6, 2, 3, 5, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 2, 9, 2, 9], [0, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [16, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 4], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029408297439877, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 8, 6, 0, 4, 8, 0, 5, 4, 1, 8], [2, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 11, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [890358.4127721796, 2.4527006864138348, 2.3923107357135995, 2.3737312972411786, 2.3745610138932554, 2.393290443663521], "accuracy": [0.09945846349000931, 0.09866596013307571, 0.09998679161071777, 0.09906221181154251, 0.1002509593963623, 0.09998679161071777], "val_loss": [2.080953461783273, 2.0934623990740096, 2.0132215363638744, 2.0917260306222096, 2.0060788563319614, 2.0988940511431013], "val_accuracy": [0.10400000214576721, 0.10233332961797714, 0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06670188903808594, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]