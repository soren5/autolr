[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.8077142834663391, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.103926995820562, 1.8872688268201225, 1.7699110907271334, 1.1344426966236252, 0.9343015690285059, 0.8078730939606382, 0.7486903113601482, 0.7210238988310386, 0.6705060674844716, 0.6417754604328011, 0.6381264028374733, 0.6024702327236634, 0.6095161673541176, 0.5689833553522932, 0.5798021666897507, 0.5456307585787984, 0.5498890015726564, 0.5003416972106175, 0.5113262513514917, 0.5246853009742154, 0.4984989461409433, 0.47396567271779544, 0.4753304414107673, 0.48441323920200685, 0.46280450162996534, 0.4352981067446985, 0.46168049030363156, 0.4401827798567082, 0.42107656912214136, 0.4440359167450565, 0.42580719302595255, 0.41406460724187455, 0.39287130867863346, 0.4186171917804496, 0.4012659743847455, 0.4181514427355173, 0.3838568454909208, 0.3839166880425461, 0.3861683517627555, 0.37445522406082016, 0.3770561695705079, 0.3524061992160239, 0.34946554890949305, 0.36227920123173846, 0.34489963920975186], "accuracy": [0.30299827456474304, 0.3381323516368866, 0.44644036889076233, 0.5802403688430786, 0.6503764390945435, 0.7014925479888916, 0.7209087014198303, 0.7269845604896545, 0.7519482374191284, 0.7576277852058411, 0.7573636174201965, 0.7725531458854675, 0.7707040309906006, 0.7889314293861389, 0.7874785661697388, 0.7955356240272522, 0.7884030938148499, 0.8101968169212341, 0.8107251524925232, 0.8034605979919434, 0.8098005652427673, 0.828292191028595, 0.8212917447090149, 0.8208954930305481, 0.8273676037788391, 0.8372738361358643, 0.82683926820755, 0.8385946154594421, 0.8462554216384888, 0.8383304476737976, 0.8433496356010437, 0.8470479249954224, 0.8527275323867798, 0.8487650156021118, 0.8545766472816467, 0.842028796672821, 0.8568220734596252, 0.8555012345314026, 0.8556333184242249, 0.858671247959137, 0.858671247959137, 0.8730682730674744, 0.8660678863525391, 0.8617091774940491, 0.868049144744873], "val_loss": [1.7774897302900041, 1.926288332257952, 1.213559593473162, 0.7782565695898873, 0.6478860889162336, 0.595636418887547, 0.5677728652954102, 0.5177725212914603, 0.5205394370215279, 0.5676177058901105, 0.5456748008728027, 0.4986038548605783, 0.46163569177900043, 0.4635266831942967, 0.4934618983949934, 0.44979160172598703, 0.46928748062678743, 0.4782130888530186, 0.4627073407173157, 0.4200896280152457, 0.4134486062186105, 0.41053119727543425, 0.4326613886015756, 0.42329600879124235, 0.37375782217298237, 0.3937474659511021, 0.38374654735837666, 0.37366351059504915, 0.3743275489125933, 0.366240314074925, 0.3853708675929478, 0.34878132172993254, 0.37418835503714426, 0.35551091602870394, 0.36570105382374357, 0.35214734077453613, 0.3604962144579206, 0.3505707383155823, 0.36113832678113666, 0.33153886454445974, 0.3467691881316049, 0.32776143721171785, 0.34188777208328247, 0.3602688567978995, 0.35129777022770475], "val_accuracy": [0.3526666760444641, 0.34200000762939453, 0.5383333563804626, 0.6836666464805603, 0.7046666741371155, 0.7226666808128357, 0.7390000224113464, 0.7696666717529297, 0.7586666941642761, 0.7183333039283752, 0.7553333044052124, 0.7739999890327454, 0.7953333258628845, 0.8009999990463257, 0.777999997138977, 0.8046666383743286, 0.8053333163261414, 0.7766666412353516, 0.7860000133514404, 0.8086666464805603, 0.8119999766349792, 0.8080000281333923, 0.8090000152587891, 0.8059999942779541, 0.8360000252723694, 0.8306666612625122, 0.840666651725769, 0.8410000205039978, 0.8383333086967468, 0.8420000076293945, 0.8416666388511658, 0.8523333072662354, 0.8399999737739563, 0.8523333072662354, 0.8379999995231628, 0.8496666550636292, 0.8526666760444641, 0.8443333506584167, 0.8503333330154419, 0.8616666793823242, 0.8463333249092102, 0.8616666793823242, 0.8553333282470703, 0.8476666808128357, 0.8370000123977661]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.8077142834663391, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.103926995820562, 1.8872688268201225, 1.7699110907271334, 1.1344426966236252, 0.9343015690285059, 0.8078730939606382, 0.7486903113601482, 0.7210238988310386, 0.6705060674844716, 0.6417754604328011, 0.6381264028374733, 0.6024702327236634, 0.6095161673541176, 0.5689833553522932, 0.5798021666897507, 0.5456307585787984, 0.5498890015726564, 0.5003416972106175, 0.5113262513514917, 0.5246853009742154, 0.4984989461409433, 0.47396567271779544, 0.4753304414107673, 0.48441323920200685, 0.46280450162996534, 0.4352981067446985, 0.46168049030363156, 0.4401827798567082, 0.42107656912214136, 0.4440359167450565, 0.42580719302595255, 0.41406460724187455, 0.39287130867863346, 0.4186171917804496, 0.4012659743847455, 0.4181514427355173, 0.3838568454909208, 0.3839166880425461, 0.3861683517627555, 0.37445522406082016, 0.3770561695705079, 0.3524061992160239, 0.34946554890949305, 0.36227920123173846, 0.34489963920975186], "accuracy": [0.30299827456474304, 0.3381323516368866, 0.44644036889076233, 0.5802403688430786, 0.6503764390945435, 0.7014925479888916, 0.7209087014198303, 0.7269845604896545, 0.7519482374191284, 0.7576277852058411, 0.7573636174201965, 0.7725531458854675, 0.7707040309906006, 0.7889314293861389, 0.7874785661697388, 0.7955356240272522, 0.7884030938148499, 0.8101968169212341, 0.8107251524925232, 0.8034605979919434, 0.8098005652427673, 0.828292191028595, 0.8212917447090149, 0.8208954930305481, 0.8273676037788391, 0.8372738361358643, 0.82683926820755, 0.8385946154594421, 0.8462554216384888, 0.8383304476737976, 0.8433496356010437, 0.8470479249954224, 0.8527275323867798, 0.8487650156021118, 0.8545766472816467, 0.842028796672821, 0.8568220734596252, 0.8555012345314026, 0.8556333184242249, 0.858671247959137, 0.858671247959137, 0.8730682730674744, 0.8660678863525391, 0.8617091774940491, 0.868049144744873], "val_loss": [1.7774897302900041, 1.926288332257952, 1.213559593473162, 0.7782565695898873, 0.6478860889162336, 0.595636418887547, 0.5677728652954102, 0.5177725212914603, 0.5205394370215279, 0.5676177058901105, 0.5456748008728027, 0.4986038548605783, 0.46163569177900043, 0.4635266831942967, 0.4934618983949934, 0.44979160172598703, 0.46928748062678743, 0.4782130888530186, 0.4627073407173157, 0.4200896280152457, 0.4134486062186105, 0.41053119727543425, 0.4326613886015756, 0.42329600879124235, 0.37375782217298237, 0.3937474659511021, 0.38374654735837666, 0.37366351059504915, 0.3743275489125933, 0.366240314074925, 0.3853708675929478, 0.34878132172993254, 0.37418835503714426, 0.35551091602870394, 0.36570105382374357, 0.35214734077453613, 0.3604962144579206, 0.3505707383155823, 0.36113832678113666, 0.33153886454445974, 0.3467691881316049, 0.32776143721171785, 0.34188777208328247, 0.3602688567978995, 0.35129777022770475], "val_accuracy": [0.3526666760444641, 0.34200000762939453, 0.5383333563804626, 0.6836666464805603, 0.7046666741371155, 0.7226666808128357, 0.7390000224113464, 0.7696666717529297, 0.7586666941642761, 0.7183333039283752, 0.7553333044052124, 0.7739999890327454, 0.7953333258628845, 0.8009999990463257, 0.777999997138977, 0.8046666383743286, 0.8053333163261414, 0.7766666412353516, 0.7860000133514404, 0.8086666464805603, 0.8119999766349792, 0.8080000281333923, 0.8090000152587891, 0.8059999942779541, 0.8360000252723694, 0.8306666612625122, 0.840666651725769, 0.8410000205039978, 0.8383333086967468, 0.8420000076293945, 0.8416666388511658, 0.8523333072662354, 0.8399999737739563, 0.8523333072662354, 0.8379999995231628, 0.8496666550636292, 0.8526666760444641, 0.8443333506584167, 0.8503333330154419, 0.8616666793823242, 0.8463333249092102, 0.8616666793823242, 0.8553333282470703, 0.8476666808128357, 0.8370000123977661]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 9, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [75, 47, 50]], "fitness": -0.8074285984039307, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.107569837157658, 1.8761162342821776, 1.373473138321723, 1.1336754567083698, 0.9672153417098288, 0.8469954268445177, 0.7438271677001215, 0.7461098292720726, 0.7241747023926718, 0.6370884432469566, 0.6391595812080685, 0.632466048801328, 0.6041025263506423, 0.5631809094956428, 0.6067746052132967, 0.5521284491866886, 0.5489934121675936, 0.5167520876416378, 0.5200096315648561, 0.5257368908660948, 0.4994043966546397, 0.4671340404232621, 0.4735116595841512, 0.4516570253961704, 0.491367672967747, 0.4475356840603954, 0.4579777004830259, 0.43174729375098564, 0.4286757882882764, 0.4515040607941133, 0.4173512818665001, 0.4117197323476854, 0.3958051899137309, 0.4007965976244675, 0.407861797808971, 0.41094285113117746, 0.3704972891657344], "accuracy": [0.30458328127861023, 0.35609564185142517, 0.5251618027687073, 0.5847312211990356, 0.6399418711662292, 0.68101966381073, 0.718399167060852, 0.7240787148475647, 0.7293620109558105, 0.7577598690986633, 0.7532690763473511, 0.761590301990509, 0.7724210619926453, 0.7901201844215393, 0.7745344042778015, 0.791441023349762, 0.7885351777076721, 0.8035926818847656, 0.8063663840293884, 0.8006868362426758, 0.8125742673873901, 0.8297450542449951, 0.8271034359931946, 0.8325188159942627, 0.8191784620285034, 0.8366134166717529, 0.8271034359931946, 0.8403117060661316, 0.8438779711723328, 0.8333113193511963, 0.846387505531311, 0.8457271456718445, 0.8536521196365356, 0.8511425256729126, 0.8482366800308228, 0.8429533839225769, 0.86118084192276], "val_loss": [1.6113873209272112, 1.3368801730019706, 0.9654901027679443, 0.8479059934616089, 0.6911170142037528, 0.6521650041852679, 0.6121671880994525, 0.553542937551226, 0.5245872054781232, 0.5107424088886806, 0.5522997549601963, 0.4766636405672346, 0.484438385282244, 0.5458084174564907, 0.4767723424094064, 0.45602355684552875, 0.4614794935498919, 0.45112725666591097, 0.41772808347429546, 0.4169950655528477, 0.41249110868998934, 0.44108836139951435, 0.40722265413829256, 0.4843884025301252, 0.37752074003219604, 0.37577003240585327, 0.37278707538332256, 0.36696501289095196, 0.3756329417228699, 0.3678271174430847, 0.3872297321047102, 0.34728446177073885, 0.37031846387045725, 0.345099219254085, 0.3456492509160723, 0.34947508573532104, 0.35447631563459125], "val_accuracy": [0.38066667318344116, 0.5073333382606506, 0.5696666836738586, 0.6516666412353516, 0.6809999942779541, 0.6803333163261414, 0.7120000123977661, 0.7419999837875366, 0.7603333592414856, 0.7710000276565552, 0.7273333072662354, 0.7963333129882812, 0.7889999747276306, 0.7419999837875366, 0.7826666831970215, 0.8016666769981384, 0.8069999814033508, 0.796999990940094, 0.8180000185966492, 0.8199999928474426, 0.8196666836738586, 0.7983333468437195, 0.8209999799728394, 0.7846666574478149, 0.8303333520889282, 0.8360000252723694, 0.840666651725769, 0.843999981880188, 0.8323333263397217, 0.8379999995231628, 0.8460000157356262, 0.8566666841506958, 0.8360000252723694, 0.8523333072662354, 0.847000002861023, 0.8483333587646484, 0.8553333282470703]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 0, 3, 1], [69, 55, 50]], "fitness": -0.3937142789363861, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3073918067106813, 2.265093773111392, 2.1791578469700297, 2.059018476779954, 2.237284738437107, 2.237527542330916, 2.3035378839676453], "accuracy": [0.20618148148059845, 0.2382776439189911, 0.2645621597766876, 0.29943203926086426, 0.17223615944385529, 0.19772817194461823, 0.11213842034339905], "val_loss": [1.9648682730538505, 1.9173872130257743, 1.925194331577846, 1.9828480311802454, 1.9770124299185616, 1.995722430092948, 1.8926008088248116], "val_accuracy": [0.18566666543483734, 0.3786666691303253, 0.20100000500679016, 0.11866666376590729, 0.09733333438634872, 0.1003333330154419, 0.2836666703224182]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 1, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 0, 3, 1], [60, 47, 50]], "fitness": -0.3840000033378601, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5936121142315214, 2.306276778660871, 2.3035379703475374, 2.307720365808971, 2.3046549344028167, 2.3030330765091462], "accuracy": [0.18914277851581573, 0.2207106053829193, 0.10038304328918457, 0.15889579057693481, 0.10289261490106583, 0.09853387624025345], "val_loss": [1.8705367360796248, 1.9749030385698592, 1.9693728855678014, 1.97633273260934, 1.9740357398986816, 1.9733822686331612], "val_accuracy": [0.28600001335144043, 0.10199999809265137, 0.11633333563804626, 0.10633333027362823, 0.09733333438634872, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 0, 3, 1], [83, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 4, 9, 3, 9], [3, 0, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 7, 0, 9, 9], [2, 0, 0, 3, 1, 0], [5, 57, 27], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 9, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 0, 3, 1], [69, 42, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 7, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301972102715811, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 9, 1, 9], [0, 1, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [3058349535.4414983, 60044982756.47603, 275845960325.427, 758647887960.4554, 1653108829880.688, 3017346420574.2373], "accuracy": [0.10117553919553757, 0.0952318087220192, 0.1026284471154213, 0.10130762308835983, 0.10434553027153015, 0.10091137140989304], "val_loss": [11819727725.714285, 94536473453.71428, 319038179620.5714, 756204961792.0, 1476944012434.2856, 2552215858614.857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 9], [3, 0, 3, 1], [69, 42, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021864936399328, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [2, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3021864936399328, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 0, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1154762475.072194, 22668324390.614716, 104133396485.68062, 286388654320.75024, 624045977757.4344, 1139023685848.6753], "accuracy": [0.10117553919553757, 0.0952318087220192, 0.1026284471154213, 0.10130762308835983, 0.10421344637870789, 0.10091137140989304], "val_loss": [4462477458.285714, 35688608329.14286, 120437286034.28572, 285465097947.4286, 557539112667.4286, 963414364745.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 9, 5, 3, 9], [1, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1154762475.072194, 22668324390.614716, 104133396485.68062, 286388654320.75024, 624045977757.4344, 1139023685848.6753], "accuracy": [0.10117553919553757, 0.0952318087220192, 0.1026284471154213, 0.10130762308835983, 0.10421344637870789, 0.10091137140989304], "val_loss": [4462477458.285714, 35688608329.14286, 120437286034.28572, 285465097947.4286, 557539112667.4286, 963414364745.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 3, 9, 3, 9], [0, 3, 0, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3025863339730606, 2.303008980896526, 2.3029686342755076, 2.302913447759092, 2.302945654358547, 2.3029489025636956, 2.3029542930090607, 2.3031019640479027], "accuracy": [0.09919429570436478, 0.09351472556591034, 0.09325055778026581, 0.09576013684272766, 0.09351472556591034, 0.09430722147226334, 0.09628847241401672, 0.0944393053650856], "val_loss": [1.9738093784877233, 1.9737226622445243, 1.9736226626804896, 1.973689147404262, 1.9738235473632812, 1.9736975261143275, 1.9737481389726912, 1.9738544736589705], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.08914285898208618, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [8.548489536800523e+22, 9.850694856531287e+22, 9.66192434442771e+22, 9.837051543676635e+22, 9.935393268452212e+22, 9.580269066705292e+22], "accuracy": [0.10447761416435242, 0.1072513535618782, 0.10751552134752274, 0.10619468986988068, 0.10659094154834747, 0.10870426893234253], "val_loss": [6.60984361579623e+22, 6.60984361579623e+22, 6.60984361579623e+22, 6.60984361579623e+22, 6.60984361579623e+22, 6.60984361579623e+22], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [62, 57], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 8, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [3, 0, 3, 1], [69, 47, 50]], "fitness": -0.08571428805589676, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.1519324556111406e+25, 2.5426819470328547e+25, 2.5329221453351565e+25, 2.538821822234192e+25, 2.57671343176092e+25, 2.5401765780971154e+25], "accuracy": [0.09694888442754745, 0.09430722147226334, 0.09338264167308807, 0.1006472036242485, 0.09721305221319199, 0.09311848133802414], "val_loss": [1.6678810756934381e+25, 1.6678810756934381e+25, 1.6678810756934381e+25, 1.6678810756934381e+25, 1.6678810756934381e+25, 1.6678810756934381e+25], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 3, 3, 3, 9], [0, 3, 3, 1], [69, 55, 50]], "fitness": -0.056285712867975235, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma), sigma), alpha))", "other_info": {"loss": [2.3028823326701864, 2.303579944110014, 2.3000638604305834, 2.3015471389658653, 2.302464022785681, 2.3012236987657992, 2.302529899278227, 2.3018571525249247, 2.3028029899839018, 2.301522653305362, 2.302139808662091, 2.302450477297532, 2.302396569820742, 2.302170752534273, 2.301198092591509, 2.3010096498657417, 2.300353461756698, 2.3007883405515375, 2.3000877926992374, 2.3019599330392198, 2.3003469220777277, 2.3001893319316498, 2.2998812329326688, 2.3002037648054996, 2.3010901081847037, 2.300125103081222, 2.2998430076418237, 2.2999615327572824, 2.2996129048042264, 2.300601195602558, 2.300566484521582, 2.300031939958616, 2.298435973201556, 2.3002949935286794, 2.299869239196455, 2.2990409608026456, 2.2990004296441984, 2.299123365235697, 2.2990805557957885, 2.299541665987804, 2.2996077943770894, 2.299313601879412, 2.300459368353932, 2.298658925434224, 2.2977752838908185, 2.2992947777390498, 2.2982283230266236, 2.298025869123373, 2.298730764186236, 2.298154749811727, 2.2974239221070785, 2.2987757024196918, 2.298639882872086, 2.2983218761341306, 2.2984656423483827, 2.2992603818517807, 2.2991681698527175, 2.2981303062232383, 2.2973456849763423, 2.2974750295275506, 2.2985068129321697, 2.297191753457991, 2.2980768317166036, 2.2991432858936824, 2.29715730913752, 2.298384695698037, 2.2977357980770727, 2.298309191705182, 2.2985630849443486, 2.2988954335785716, 2.2988776846049155, 2.297764963147001, 2.2977399654108788, 2.297106398850888, 2.297795194188255, 2.2970797876404134, 2.298131096522097, 2.2967413417131923, 2.2969986132784386, 2.2974872036758685, 2.2968288456145025, 2.296833038109641, 2.295545338608129, 2.2970685095063383, 2.2960735549543827, 2.2963241100500227, 2.2972263705697373, 2.2963816259893304, 2.2970540654216824, 2.296521133986667, 2.2973715415987845, 2.296994381860389, 2.296797672708068, 2.2958717746127473, 2.297181751308912, 2.2976250149050816, 2.2975051261021116, 2.2963248619298264, 2.2958134515898623, 2.2956139732424328], "accuracy": [0.09060890227556229, 0.08638224750757217, 0.09576013684272766, 0.08968432247638702, 0.09417514503002167, 0.09840179979801178, 0.09140139818191528, 0.09298639744520187, 0.0882314071059227, 0.09351472556591034, 0.09325055778026581, 0.09391097724437714, 0.08796724677085876, 0.09140139818191528, 0.09113723784685135, 0.09074098616838455, 0.0956280529499054, 0.09140139818191528, 0.09628847241401672, 0.09232597798109055, 0.09351472556591034, 0.10342095047235489, 0.09721305221319199, 0.09642054885625839, 0.09668471664190292, 0.09457138925790787, 0.09945846349000931, 0.09734513610601425, 0.09576013684272766, 0.09813763201236725, 0.09694888442754745, 0.09457138925790787, 0.10157178342342377, 0.09734513610601425, 0.09721305221319199, 0.1002509593963623, 0.09985470771789551, 0.1022322028875351, 0.1014397069811821, 0.09826971590518951, 0.09628847241401672, 0.10460969805717468, 0.09853387624025345, 0.09628847241401672, 0.10474177449941635, 0.09813763201236725, 0.09681680053472519, 0.10038304328918457, 0.09932637959718704, 0.09747721254825592, 0.10368511080741882, 0.10170386731624603, 0.10210011899471283, 0.09985470771789551, 0.10170386731624603, 0.09800554811954498, 0.09813763201236725, 0.09853387624025345, 0.10355303436517715, 0.1022322028875351, 0.10632677376270294, 0.10130762308835983, 0.1026284471154213, 0.09430722147226334, 0.108440101146698, 0.09747721254825592, 0.1022322028875351, 0.10421344637870789, 0.09959053993225098, 0.10276053100824356, 0.10408136248588562, 0.10408136248588562, 0.09694888442754745, 0.10368511080741882, 0.10513802617788315, 0.10196803510189056, 0.1022322028875351, 0.10447761416435242, 0.10236428678035736, 0.10130762308835983, 0.10500594228506088, 0.10685510188341141, 0.1080438494682312, 0.10593052208423615, 0.10434553027153015, 0.11015717685222626, 0.10315678268671036, 0.10645885765552521, 0.10302469879388809, 0.10619468986988068, 0.10381719470024109, 0.10870426893234253, 0.1072513535618782, 0.10606260597705841, 0.10394927859306335, 0.1006472036242485, 0.10870426893234253, 0.10474177449941635, 0.10619468986988068, 0.10408136248588562], "val_loss": [1.9705088479178292, 1.9704232215881348, 1.9703446115766252, 1.9702697481427873, 1.9701854842049735, 1.970113754272461, 1.9700356210981096, 1.9699591909136092, 1.9698851449148995, 1.9698023796081543, 1.9697229521615165, 1.96964693069458, 1.9695658002580916, 1.9694976125444685, 1.9694112368992396, 1.9693443434579032, 1.9692699568612235, 1.9691999980381556, 1.9691293580191476, 1.9690561294555664, 1.9689864431108748, 1.9689128058297294, 1.9688381467546736, 1.968771525791713, 1.968705517905099, 1.9686354909624373, 1.9685680525643485, 1.9685008866446358, 1.968435559953962, 1.9683668954031808, 1.9682963235037667, 1.9682307924543108, 1.9681693485804967, 1.9681062698364258, 1.9680451665605818, 1.9679854256766183, 1.967923641204834, 1.9678589957101005, 1.9678026608058385, 1.967745099748884, 1.9676921027047294, 1.9676311356680733, 1.9675727571759904, 1.9675179890223913, 1.9674609048025948, 1.9674026625497, 1.9673453739711217, 1.9672904014587402, 1.9672345433916365, 1.9671728951590401, 1.967115879058838, 1.9670547076633997, 1.967001506260463, 1.9669469424656458, 1.9668966020856584, 1.9668452399117606, 1.966794763292585, 1.966745172228132, 1.966698374067034, 1.9666476249694824, 1.9665935380118233, 1.9665474891662598, 1.966496467590332, 1.9664490563528878, 1.9664019857134138, 1.9663533483232771, 1.9663049152919225, 1.9662530081612724, 1.9662068230765206, 1.9661578450884138, 1.9661077771868025, 1.966059344155448, 1.966006074632917, 1.9659625462123327, 1.9659172466823034, 1.9658710615975517, 1.9658208574567522, 1.9657707214355469, 1.9657250813075475, 1.9656806673322404, 1.9656335966927665, 1.9655835287911552, 1.9655367987496513, 1.9654885019574846, 1.9654367310660226, 1.9653820310320174, 1.9653340067182268, 1.9652846881321497, 1.965235642024449, 1.9651852335248674, 1.9651380266462053, 1.9650955881391252, 1.9650515828813826, 1.9650048528398787, 1.9649600301470076, 1.9649158886500768, 1.9648701122828893, 1.9648283549717493, 1.9647833279200964, 1.9647387777056013], "val_accuracy": [0.039000000804662704, 0.03933333232998848, 0.03999999910593033, 0.04100000113248825, 0.0416666679084301, 0.0430000014603138, 0.0430000014603138, 0.04333333298563957, 0.044333335012197495, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.04699999839067459, 0.04699999839067459, 0.04766666516661644, 0.04800000041723251, 0.04899999871850014, 0.049666665494441986, 0.05000000074505806, 0.05066666752099991, 0.05133333429694176, 0.052666667848825455, 0.052666667848825455, 0.05366666615009308, 0.05366666615009308, 0.05433333292603493, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.05666666850447655, 0.05700000002980232, 0.058666665107011795, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05999999865889549, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.061000000685453415, 0.06133333221077919, 0.061000000685453415, 0.061666667461395264, 0.061666667461395264, 0.06233333423733711, 0.06233333423733711, 0.06233333423733711, 0.06233333423733711, 0.06266666948795319, 0.06266666948795319, 0.06266666948795319, 0.06300000101327896, 0.06300000101327896, 0.06366666406393051, 0.06400000303983688, 0.06433333456516266, 0.06433333456516266, 0.06433333456516266, 0.06566666811704636, 0.06599999964237213, 0.0663333311676979, 0.0663333311676979, 0.0663333311676979, 0.06700000166893005, 0.06800000369548798, 0.06866666674613953, 0.0689999982714653, 0.06933332979679108, 0.06966666877269745, 0.07000000029802322, 0.07066666334867477, 0.07066666334867477, 0.07066666334867477, 0.07133333384990692, 0.07199999690055847, 0.07199999690055847, 0.07266666740179062, 0.0729999989271164, 0.07333333045244217, 0.07433333247900009, 0.07466666400432587, 0.07533333450555801, 0.07500000298023224, 0.07500000298023224, 0.07599999755620956, 0.07733333110809326, 0.07699999958276749, 0.07733333110809326, 0.07833333313465118, 0.07900000363588333, 0.0793333351612091]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [7, 3], [], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 2, 3, 9], [3, 0, 3, 1], [69, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029131947601664, 2.3036960458018605, 2.3002681643373033, 2.3018344553344208, 2.3028460685146515, 2.30167373592481], "accuracy": [0.09074098616838455, 0.08598599582910538, 0.09615638852119446, 0.0886276587843895, 0.09285431355237961, 0.09787346422672272], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [69, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3029131947601664, 2.3036960458018605, 2.3002681643373033, 2.3018344553344208, 2.3028460685146515, 2.30167373592481], "accuracy": [0.09074098616838455, 0.08598599582910538, 0.09615638852119446, 0.0886276587843895, 0.09285431355237961, 0.09787346422672272], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 7, 1, 3, 9], [3, 0, 3, 1], [69, 55, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 4, 2, 2, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.multiply(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), sigma), alpha))", "other_info": {"loss": [2.3029131947601664, 2.3036960458018605, 2.3002681643373033, 2.3018344553344208, 2.3028460685146515, 2.30167373592481], "accuracy": [0.09074098616838455, 0.08598599582910538, 0.09615638852119446, 0.0886276587843895, 0.09285431355237961, 0.09787346422672272], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]