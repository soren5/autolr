[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8311428427696228, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3921298157222486, 2.2704092615142932, 2.0507690353542194, 1.8540750201572564, 1.4286425367023305, 1.111123573495066, 0.892871673364429, 0.8197706642876432, 0.747388989744941, 0.725876680084617, 0.6993224594366627, 0.6398660126788631, 0.6266967794993109, 0.6284267792628032, 0.584571001496943, 0.6092375830384671, 0.5662811847804418, 0.5508705162534372, 0.5740406902600682, 0.5366061838579184, 0.5249111323450472, 0.5232646916646684, 0.5212642284054341, 0.505021819065685, 0.49083201305552276, 0.4860517796492611, 0.4805546892616711, 0.475719392287843, 0.4596904779209547, 0.45524326869053, 0.4389581269103743, 0.44625309228960075], "accuracy": [0.2339189052581787, 0.21965394914150238, 0.3093382716178894, 0.3910976052284241, 0.4896314740180969, 0.5909391045570374, 0.6641130447387695, 0.6926429867744446, 0.7217012047767639, 0.7269845604896545, 0.7338528633117676, 0.761590301990509, 0.7625148296356201, 0.7625148296356201, 0.7848368883132935, 0.7732135653495789, 0.7913089394569397, 0.7910447716712952, 0.7848368883132935, 0.800818920135498, 0.8070268034934998, 0.8064984679222107, 0.8061022162437439, 0.8103289008140564, 0.8175934553146362, 0.8162726163864136, 0.8234050869941711, 0.8269713521003723, 0.8325188159942627, 0.8298771381378174, 0.8370096683502197, 0.8284242749214172], "val_loss": [1.970529351915632, 1.732943398611886, 1.5741846902029855, 1.0394495555332728, 0.8425775596073696, 0.6889650481087821, 0.6312659127371651, 0.558490480695452, 0.6100244351795742, 0.5190784590584892, 0.5471792391368321, 0.5318007639476231, 0.5025935683931623, 0.47384182044437956, 0.5408074515206474, 0.4479897618293762, 0.4636152556964329, 0.4272181987762451, 0.4298656242234366, 0.42530772515705656, 0.4680019276482718, 0.41019591263362337, 0.44446768930980135, 0.42871417318071636, 0.4024189966065543, 0.42612034933907644, 0.3933361683573042, 0.378726065158844, 0.42195944275174824, 0.38277459144592285, 0.4170842341014317, 0.4135189311844962], "val_accuracy": [0.1626666635274887, 0.40066665410995483, 0.4193333387374878, 0.5706666707992554, 0.6566666960716248, 0.6953333616256714, 0.7096666693687439, 0.753000020980835, 0.7093333601951599, 0.7643333077430725, 0.7459999918937683, 0.7450000047683716, 0.7760000228881836, 0.7903333306312561, 0.7773333191871643, 0.8100000023841858, 0.7926666736602783, 0.8159999847412109, 0.8136666417121887, 0.815666675567627, 0.7793333530426025, 0.8299999833106995, 0.8006666898727417, 0.8176666498184204, 0.8243333101272583, 0.8153333067893982, 0.8420000076293945, 0.8413333296775818, 0.8240000009536743, 0.8333333134651184, 0.8226666450500488, 0.8233333230018616]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 9, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8311428427696228, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3921298157222486, 2.2704092615142932, 2.0507690353542194, 1.8540750201572564, 1.4286425367023305, 1.111123573495066, 0.892871673364429, 0.8197706642876432, 0.747388989744941, 0.725876680084617, 0.6993224594366627, 0.6398660126788631, 0.6266967794993109, 0.6284267792628032, 0.584571001496943, 0.6092375830384671, 0.5662811847804418, 0.5508705162534372, 0.5740406902600682, 0.5366061838579184, 0.5249111323450472, 0.5232646916646684, 0.5212642284054341, 0.505021819065685, 0.49083201305552276, 0.4860517796492611, 0.4805546892616711, 0.475719392287843, 0.4596904779209547, 0.45524326869053, 0.4389581269103743, 0.44625309228960075], "accuracy": [0.2339189052581787, 0.21965394914150238, 0.3093382716178894, 0.3910976052284241, 0.4896314740180969, 0.5909391045570374, 0.6641130447387695, 0.6926429867744446, 0.7217012047767639, 0.7269845604896545, 0.7338528633117676, 0.761590301990509, 0.7625148296356201, 0.7625148296356201, 0.7848368883132935, 0.7732135653495789, 0.7913089394569397, 0.7910447716712952, 0.7848368883132935, 0.800818920135498, 0.8070268034934998, 0.8064984679222107, 0.8061022162437439, 0.8103289008140564, 0.8175934553146362, 0.8162726163864136, 0.8234050869941711, 0.8269713521003723, 0.8325188159942627, 0.8298771381378174, 0.8370096683502197, 0.8284242749214172], "val_loss": [1.970529351915632, 1.732943398611886, 1.5741846902029855, 1.0394495555332728, 0.8425775596073696, 0.6889650481087821, 0.6312659127371651, 0.558490480695452, 0.6100244351795742, 0.5190784590584892, 0.5471792391368321, 0.5318007639476231, 0.5025935683931623, 0.47384182044437956, 0.5408074515206474, 0.4479897618293762, 0.4636152556964329, 0.4272181987762451, 0.4298656242234366, 0.42530772515705656, 0.4680019276482718, 0.41019591263362337, 0.44446768930980135, 0.42871417318071636, 0.4024189966065543, 0.42612034933907644, 0.3933361683573042, 0.378726065158844, 0.42195944275174824, 0.38277459144592285, 0.4170842341014317, 0.4135189311844962], "val_accuracy": [0.1626666635274887, 0.40066665410995483, 0.4193333387374878, 0.5706666707992554, 0.6566666960716248, 0.6953333616256714, 0.7096666693687439, 0.753000020980835, 0.7093333601951599, 0.7643333077430725, 0.7459999918937683, 0.7450000047683716, 0.7760000228881836, 0.7903333306312561, 0.7773333191871643, 0.8100000023841858, 0.7926666736602783, 0.8159999847412109, 0.8136666417121887, 0.815666675567627, 0.7793333530426025, 0.8299999833106995, 0.8006666898727417, 0.8176666498184204, 0.8243333101272583, 0.8153333067893982, 0.8420000076293945, 0.8413333296775818, 0.8240000009536743, 0.8333333134651184, 0.8226666450500488, 0.8233333230018616]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 5, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 13, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8311428427696228, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3921298157222486, 2.2704092615142932, 2.0507690353542194, 1.8540750201572564, 1.4286425367023305, 1.111123573495066, 0.892871673364429, 0.8197706642876432, 0.747388989744941, 0.725876680084617, 0.6993224594366627, 0.6398660126788631, 0.6266967794993109, 0.6284267792628032, 0.584571001496943, 0.6092375830384671, 0.5662811847804418, 0.5508705162534372, 0.5740406902600682, 0.5366061838579184, 0.5249111323450472, 0.5232646916646684, 0.5212642284054341, 0.505021819065685, 0.49083201305552276, 0.4860517796492611, 0.4805546892616711, 0.475719392287843, 0.4596904779209547, 0.45524326869053, 0.4389581269103743, 0.44625309228960075], "accuracy": [0.2339189052581787, 0.21965394914150238, 0.3093382716178894, 0.3910976052284241, 0.4896314740180969, 0.5909391045570374, 0.6641130447387695, 0.6926429867744446, 0.7217012047767639, 0.7269845604896545, 0.7338528633117676, 0.761590301990509, 0.7625148296356201, 0.7625148296356201, 0.7848368883132935, 0.7732135653495789, 0.7913089394569397, 0.7910447716712952, 0.7848368883132935, 0.800818920135498, 0.8070268034934998, 0.8064984679222107, 0.8061022162437439, 0.8103289008140564, 0.8175934553146362, 0.8162726163864136, 0.8234050869941711, 0.8269713521003723, 0.8325188159942627, 0.8298771381378174, 0.8370096683502197, 0.8284242749214172], "val_loss": [1.970529351915632, 1.732943398611886, 1.5741846902029855, 1.0394495555332728, 0.8425775596073696, 0.6889650481087821, 0.6312659127371651, 0.558490480695452, 0.6100244351795742, 0.5190784590584892, 0.5471792391368321, 0.5318007639476231, 0.5025935683931623, 0.47384182044437956, 0.5408074515206474, 0.4479897618293762, 0.4636152556964329, 0.4272181987762451, 0.4298656242234366, 0.42530772515705656, 0.4680019276482718, 0.41019591263362337, 0.44446768930980135, 0.42871417318071636, 0.4024189966065543, 0.42612034933907644, 0.3933361683573042, 0.378726065158844, 0.42195944275174824, 0.38277459144592285, 0.4170842341014317, 0.4135189311844962], "val_accuracy": [0.1626666635274887, 0.40066665410995483, 0.4193333387374878, 0.5706666707992554, 0.6566666960716248, 0.6953333616256714, 0.7096666693687439, 0.753000020980835, 0.7093333601951599, 0.7643333077430725, 0.7459999918937683, 0.7450000047683716, 0.7760000228881836, 0.7903333306312561, 0.7773333191871643, 0.8100000023841858, 0.7926666736602783, 0.8159999847412109, 0.8136666417121887, 0.815666675567627, 0.7793333530426025, 0.8299999833106995, 0.8006666898727417, 0.8176666498184204, 0.8243333101272583, 0.8153333067893982, 0.8420000076293945, 0.8413333296775818, 0.8240000009536743, 0.8333333134651184, 0.8226666450500488, 0.8233333230018616]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 5, 6, 0, 3, 8, 2, 8, 6, 1, 8], [2, 3, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [21, 25, 50, 71, 34]], "fitness": -0.7208571434020996, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.299602072583119, 2.2928424810516113, 2.2867215976833495, 2.2795500425598987, 2.2720155608557975, 2.269409750178978, 2.2610718855028376, 2.2506239794311806, 2.2439227690235057, 2.2368311214724144, 2.2275808401048587, 2.2175126704935386, 2.2082484841677394, 2.1990635686342066, 2.186406595107665, 2.173347694494973, 2.1598448997412407, 2.1441770075743998, 2.1308995329897558, 2.112410217086637, 2.094332029286975, 2.0719786544974137, 2.050225636395701, 2.029357120077828, 2.0049550028178578, 1.9801896847533575, 1.9474063169183102, 1.9193744365927439, 1.8919075175110123, 1.8579285908463357, 1.8288764237979651, 1.7968869920042072, 1.767031155683109, 1.729503491708647, 1.698939527471414, 1.6662680068744755, 1.6274044129511842, 1.5956788888271727, 1.5727970209639417, 1.5465865167628632, 1.5210221045840102, 1.4844799719592443, 1.4650374922565323, 1.4318687169307165, 1.4099756619240928, 1.3942091280616364, 1.3692333034441817, 1.3514862906868275, 1.3316316577059608, 1.2977950340721192, 1.2956743750511113, 1.2831260580444033, 1.2678277888050515, 1.2424562684832436, 1.236907295956509, 1.2243718229280471, 1.2087512810500134, 1.1934619250629461, 1.1890222204674694, 1.1759550918315334, 1.15480970303459, 1.1452196421104888, 1.140532476428698, 1.1403261272268934, 1.1247391205390747, 1.1156297697918274, 1.1097906206766093, 1.0903362148489226, 1.0782681043043176, 1.0769587825270786, 1.070162141926143, 1.0553923825609244, 1.0579842197865132, 1.0571731146946086, 1.0545140508458504, 1.0269835925514765, 1.0263989005484333, 1.0233503040730787, 1.0192582460993458, 1.014500007354163, 1.01134119121516, 1.0007394911464746, 1.0005287679588601, 1.0035403521305628, 0.9817499693563317, 0.975288609243765, 0.9724632617174248, 0.9732299338730492, 0.9607674683625153, 0.97102569341817, 0.9519739453472308, 0.9582122703427416, 0.9339521068544782, 0.9489904580776324, 0.9415429233008876, 0.9433059001784551, 0.9350249301000058, 0.9311333890557053, 0.9261038168672369, 0.9236024679398854], "accuracy": [0.0944393053650856, 0.11293092370033264, 0.1274600476026535, 0.15414080023765564, 0.17131158709526062, 0.17461365461349487, 0.19865275919437408, 0.2211068570613861, 0.2308809906244278, 0.24725927412509918, 0.26720380783081055, 0.28899750113487244, 0.29560163617134094, 0.31501781940460205, 0.3199048936367035, 0.33007529377937317, 0.34367984533309937, 0.35583147406578064, 0.3597939610481262, 0.37102100253105164, 0.3815876245498657, 0.39241844415664673, 0.3980979919433594, 0.40206050872802734, 0.4115704596042633, 0.41566503047943115, 0.4356095492839813, 0.43111875653266907, 0.44010037183761597, 0.44564786553382874, 0.45647865533828735, 0.4581957459449768, 0.4636111557483673, 0.47364944219589233, 0.4773477613925934, 0.48514068126678467, 0.49927353858947754, 0.505877673625946, 0.5027077198028564, 0.5070664286613464, 0.5111610293388367, 0.5200105905532837, 0.5258222222328186, 0.5315017700195312, 0.5369172096252441, 0.5386342406272888, 0.5395588278770447, 0.549068808555603, 0.5585787892341614, 0.5676925182342529, 0.5639941692352295, 0.5654470920562744, 0.5649187564849854, 0.577070415019989, 0.5766741633415222, 0.5782591700553894, 0.5868445634841919, 0.5913353562355042, 0.5900145173072815, 0.5980715751647949, 0.5954299569129944, 0.604939877986908, 0.6000528335571289, 0.6041474342346191, 0.6090344786643982, 0.6081098914146423, 0.6126006841659546, 0.6184123754501343, 0.6193369626998901, 0.6234315037727356, 0.6256769299507141, 0.63096022605896, 0.633469820022583, 0.6324131488800049, 0.63096022605896, 0.6408664584159851, 0.6415268778800964, 0.6415268778800964, 0.6419231295585632, 0.6395456194877625, 0.6452252268791199, 0.6497160196304321, 0.6489235162734985, 0.6489235162734985, 0.6579051613807678, 0.6551313996315002, 0.651168942451477, 0.6604147553443909, 0.6618676781654358, 0.6600185036659241, 0.6651697158813477, 0.6571126580238342, 0.6695284843444824, 0.6637167930603027, 0.6679434776306152, 0.6680755615234375, 0.6684718132019043, 0.667811393737793, 0.6679434776306152, 0.6750759482383728], "val_loss": [1.9643418448311942, 1.9581218447004045, 1.9519912174769811, 1.9457550730024065, 1.9393935884748186, 1.9329122134617396, 1.9261772292000907, 1.9189847537449427, 1.9114902360098702, 1.90350798198155, 1.8950415338788713, 1.8858707291739327, 1.8760783331734794, 1.8654394149780273, 1.853829996926444, 1.8413237162998743, 1.8276700292314803, 1.8129515647888184, 1.7971723420279366, 1.7800228255135673, 1.7614659581865584, 1.741339819771903, 1.7197731563023158, 1.6969030584607805, 1.6723193441118513, 1.6463642801557268, 1.6186276163373674, 1.589475359235491, 1.559366089957101, 1.5279839379446847, 1.495936495917184, 1.4631638186318534, 1.4301319803510393, 1.3963921410696847, 1.362863608769008, 1.3296690668378557, 1.2964694159371513, 1.2639928885868617, 1.2328815460205078, 1.2025127751486642, 1.1737576552799769, 1.1461316517421178, 1.1200057779039656, 1.0948639937809534, 1.0707645756857735, 1.048638003213065, 1.0274806703839983, 1.0073869909558977, 0.9886749471936908, 0.9702949864523751, 0.9533241476331439, 0.9379533358982631, 0.9228856222970145, 0.9083947113582066, 0.895409345626831, 0.8828703675951276, 0.8709162814276559, 0.8592448234558105, 0.8485848903656006, 0.838311893599374, 0.8283752032688686, 0.8187443699155535, 0.8100200550896781, 0.8019411052976336, 0.7941268852778843, 0.7866031101771763, 0.7793420553207397, 0.7721317836216518, 0.7655368362154279, 0.7586768354688372, 0.7524687392371041, 0.7466869865145002, 0.7410129649298531, 0.7359309707369123, 0.73085960320064, 0.7255954572132656, 0.7206973688943046, 0.7156110150473458, 0.7117279257093158, 0.707500832421439, 0.7032913821084159, 0.6990759202412197, 0.6954331908907209, 0.6915570667811802, 0.6875440904072353, 0.6839088712419782, 0.6806053944996425, 0.6770898444311959, 0.6736119134085519, 0.6710376569202968, 0.6675026927675519, 0.6648702451160976, 0.6611036232539585, 0.6585217714309692, 0.6556768417358398, 0.6531118665422712, 0.6505744286945888, 0.6478308779852731, 0.6454887049538749, 0.6431513854435512], "val_accuracy": [0.07999999821186066, 0.1420000046491623, 0.20600000023841858, 0.2553333342075348, 0.3023333251476288, 0.33766666054725647, 0.36266666650772095, 0.3790000081062317, 0.39366665482521057, 0.40533334016799927, 0.4189999997615814, 0.43033334612846375, 0.4429999887943268, 0.453000009059906, 0.4620000123977661, 0.47200000286102295, 0.4819999933242798, 0.4883333444595337, 0.4973333477973938, 0.5073333382606506, 0.5203333497047424, 0.5270000100135803, 0.534333348274231, 0.5406666398048401, 0.5419999957084656, 0.5450000166893005, 0.5516666769981384, 0.5546666383743286, 0.5600000023841858, 0.5676666498184204, 0.5730000138282776, 0.5770000219345093, 0.578000009059906, 0.5806666612625122, 0.5876666903495789, 0.5903333425521851, 0.5926666855812073, 0.6000000238418579, 0.6079999804496765, 0.6119999885559082, 0.6163333058357239, 0.621999979019165, 0.6290000081062317, 0.6346666812896729, 0.6420000195503235, 0.6486666798591614, 0.6579999923706055, 0.6620000004768372, 0.6663333177566528, 0.671999990940094, 0.6753333210945129, 0.6773333549499512, 0.6800000071525574, 0.6850000023841858, 0.687666654586792, 0.6893333196640015, 0.6909999847412109, 0.6923333406448364, 0.6943333148956299, 0.6953333616256714, 0.6949999928474426, 0.6959999799728394, 0.6990000009536743, 0.6996666789054871, 0.7013333439826965, 0.70333331823349, 0.7046666741371155, 0.7046666741371155, 0.7053333520889282, 0.7066666483879089, 0.7066666483879089, 0.7093333601951599, 0.7083333134651184, 0.7096666693687439, 0.7106666564941406, 0.7129999995231628, 0.7133333086967468, 0.7153333425521851, 0.7143333554267883, 0.718666672706604, 0.7170000076293945, 0.7179999947547913, 0.7210000157356262, 0.721666693687439, 0.7206666469573975, 0.7246666550636292, 0.7246666550636292, 0.7256666421890259, 0.7273333072662354, 0.7273333072662354, 0.7279999852180481, 0.7293333411216736, 0.7316666841506958, 0.7306666374206543, 0.7333333492279053, 0.7333333492279053, 0.734000027179718, 0.734000027179718, 0.7350000143051147, 0.7366666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8, 2, 9, 7], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 49, 68, 73, 46, 59, 65, 96], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.39742857217788696, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.42442395951313, 2.2450281499068594, 2.137308645698735, 2.048597025786251, 2.3106042211711713, 2.3043677823544493, 2.3043049193329233, 2.3028172767078874], "accuracy": [0.18570862710475922, 0.18518029153347015, 0.23893804848194122, 0.32862237095832825, 0.1010434553027153, 0.09787346422672272, 0.09589222073554993, 0.10394927859306335], "val_loss": [1.9716080256870814, 1.549421753202166, 1.6381565162113734, 1.9975844791957311, 1.9745776993887765, 1.9739139420645577, 1.9736103330339705, 1.9724999836512975], "val_accuracy": [0.1340000033378601, 0.34599998593330383, 0.3986666798591614, 0.09733333438634872, 0.09733333438634872, 0.09700000286102295, 0.1613333374261856, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 6, 9, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.17428570985794067, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.414321608122046, 2.779859401861344, 2.305115171317112, 2.3033072357684112, 2.303037558753241, 2.3029124495249698], "accuracy": [0.19323734939098358, 0.15361246466636658, 0.09708096832036972, 0.09800554811954498, 0.09509972482919693, 0.09457138925790787], "val_loss": [1.8104656764439173, 1.9771502358572823, 1.9742394856044225, 1.9737406458173479, 1.9736888749258858, 1.9736279078892298], "val_accuracy": [0.1899999976158142, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.09700000286102295, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 1, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8, 3], [2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, grad)), grad)), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3031659527792354, 2.302981404486019, 2.3029475828691512, 2.302973121621149, 2.3030020715128776, 2.3029114567073043, 2.302886734643648], "accuracy": [0.09219389408826828, 0.09496764093637466, 0.09734513610601425, 0.0944393053650856, 0.09760929644107819, 0.09470347315073013, 0.09932637959718704], "val_loss": [1.9736367634364538, 1.973569052559989, 1.9736616270882743, 1.9736757959638322, 1.9736879893711634, 1.973625932421003, 1.9735535212925501], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 9, 2, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [11, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 0, 1, 0], [3, 7, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [4, 6, 2, 9, 2, 9], [1, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [86, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.divide_no_nan(alpha, alpha), tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302914944118308, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 5, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302914944118308, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.061814818531274796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [40, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [87, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302914944118308, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [2, 6, 6, 6, 6, 3, 8, 2, 5, 6, 1, 8, 7, 5, 6, 3, 0, 5, 1, 8, 6, 0, 1, 0, 2, 7, 5, 4, 8], [2, 3, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 2, 3, 3, 0, 1], [3, 92, 30, 64, 46, 14], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 6, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 48, 29, 19, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))))), grad))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.pow(grad, tf.math.add(alpha, grad)))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 1, 5, 6, 0, 3, 8, 2, 8, 6, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [12, 98, 68, 30, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [21, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 2, 6, 0, 3, 8, 2, 5, 6, 1, 8, 5, 5, 9, 3], [2, 3, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 2, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 16, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.square(grad))), tf.math.square(alpha))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), grad)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(sigma), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1249750968.719733, 23984979720.75763, 110830360634.15877, 309713280877.9268, 648136906981.1185, 1204019269292.7856], "accuracy": [0.09734513610601425, 0.09628847241401672, 0.09945846349000931, 0.09866596013307571, 0.10487385839223862, 0.09734513610601425], "val_loss": [4723210678.857142, 37773980233.14286, 127476657590.85715, 302147539529.1429, 590105055817.1428, 1019704995254.8572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 9, 6, 3, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [34756.1864861496, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.044247787445783615, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.7812220763514e+16, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 70, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [0, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08994849026203156, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 9, 5, 6, 0, 3, 8, 2, 8, 6, 1, 8], [2, 3, 2, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 30, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 1, 1], [0, 0, 1, 0], [8, 3, 0], [2, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 4, 1, 6, 0, 9, 8, 2, 5, 6, 1, 8], [2, 1, 2, 2, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 5, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [21, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(grad, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 3, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 0, 8, 2, 1, 7, 8], [2, 3, 0, 1, 2, 2, 2, 2, 0, 0, 2, 3, 2, 2], [26, 70, 14, 73, 46, 59, 65, 96], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 36, 36, 22, 14, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))))))))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))), tf.math.sqrt(grad))))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.3023490326326788, 2.3022495932850493, 2.3025160835025775, 2.30196067562917, 2.3009333870335658, 2.3051230942080316], "accuracy": [0.08757099509239197, 0.09179764986038208, 0.09074098616838455, 0.09351472556591034, 0.09192973375320435, 0.0878351628780365], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 6, 3, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, beta)", "other_info": {"loss": [2.3023490326326788, 2.3022495932850493, 2.3025160835025775, 2.30196067562917, 2.3009333870335658, 2.3051230942080316], "accuracy": [0.08757099509239197, 0.09179764986038208, 0.09074098616838455, 0.09351472556591034, 0.09192973375320435, 0.0878351628780365], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]