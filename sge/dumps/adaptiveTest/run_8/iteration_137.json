[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.0864443043991088, 1.8650188060122364, 1.3307725233786678, 0.9985913897722688, 0.883945847916455, 0.7865611782572792, 0.7296388103993121, 0.7058914382113536, 0.6975487621626314, 0.636117497022362, 0.6188778747436534, 0.6383729641778578, 0.5690943730852119, 0.5954564316256046, 0.5570252527571499, 0.5472343991524224, 0.5206420881881092, 0.5118511948193761, 0.5138701530511212, 0.4963775740213335, 0.4747576018436915, 0.4864225504601778, 0.47610911109727433, 0.4512931075527243, 0.46293835799140765, 0.44659757552728235, 0.45596120392862105, 0.4231278743285387, 0.43374793202161255], "accuracy": [0.30524370074272156, 0.334169864654541, 0.529388427734375, 0.6304318904876709, 0.6676793098449707, 0.7112666964530945, 0.7231541275978088, 0.7338528633117676, 0.7359662055969238, 0.7621186375617981, 0.7581561207771301, 0.7567031979560852, 0.7906485199928284, 0.7770439982414246, 0.789988100528717, 0.7932901978492737, 0.8050455451011658, 0.8062343001365662, 0.8072909712791443, 0.8168009519577026, 0.8251221776008606, 0.8204993009567261, 0.8211596608161926, 0.8309338092803955, 0.8281601071357727, 0.8310658931732178, 0.8317263126373291, 0.8479725122451782, 0.8343679904937744], "val_loss": [1.6358417442866735, 1.1186540126800537, 0.8466566630772182, 0.7399543012891497, 0.6074036700384957, 0.5806782926831927, 0.5580578701836723, 0.5353290353502546, 0.5367399965013776, 0.5453593220029559, 0.4885021959032331, 0.47712111473083496, 0.4473757062639509, 0.44256541558674406, 0.49221461159842356, 0.460791962487357, 0.42055749893188477, 0.42878509419304983, 0.398175767489842, 0.40009102651051115, 0.398827144077846, 0.38667191777910503, 0.3881339430809021, 0.37903283323560444, 0.41372827121189665, 0.4139022486550467, 0.3651569826262338, 0.37500988585608347, 0.3628022415297372], "val_accuracy": [0.32466667890548706, 0.5816666483879089, 0.6460000276565552, 0.6463333368301392, 0.734333336353302, 0.7203333377838135, 0.734000027179718, 0.7519999742507935, 0.7599999904632568, 0.7283333539962769, 0.7696666717529297, 0.7773333191871643, 0.8046666383743286, 0.8146666884422302, 0.7703333497047424, 0.7893333435058594, 0.8176666498184204, 0.8046666383743286, 0.8273333311080933, 0.8223333358764648, 0.8166666626930237, 0.8360000252723694, 0.8386666774749756, 0.847000002861023, 0.8133333325386047, 0.8103333115577698, 0.8360000252723694, 0.8460000157356262, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.212194366981608, 1.6451998680432427, 1.218414677069597, 1.0247144534792236, 0.9218548867743738, 0.8797908321331993, 0.8145172214227786, 0.8060370628560743, 0.7775528473294154, 0.7336211447797006, 0.7276374018581205, 0.7253836218187476, 0.6874731463400947, 0.7060069956516215, 0.6612996301945757, 0.6558413664741349, 0.6466827096877364, 0.6555860112875743, 0.6228948084039931, 0.6149037826991809, 0.630860139295142, 0.609468625025144, 0.6067703507280684, 0.5955652263831815, 0.5984731944182672, 0.5932351433054615, 0.5939676483167775], "accuracy": [0.2456742823123932, 0.4802536070346832, 0.5698058605194092, 0.6357152462005615, 0.666358470916748, 0.6827367544174194, 0.7014925479888916, 0.7045304179191589, 0.7168141603469849, 0.7308149337768555, 0.7289658188819885, 0.7331924438476562, 0.7434949278831482, 0.7368907928466797, 0.7495707273483276, 0.7561748623847961, 0.7623828053474426, 0.7564390301704407, 0.7689869403839111, 0.7683265209197998, 0.7650244235992432, 0.7714964747428894, 0.7761194109916687, 0.7734777331352234, 0.774798572063446, 0.778232753276825, 0.7761194109916687], "val_loss": [1.664736032485962, 1.0033748149871826, 0.7676174129758563, 0.6701163053512573, 0.6353692156927926, 0.5862493685313633, 0.5932542255946568, 0.5928677831377301, 0.5521631070545742, 0.5206504889896938, 0.580234204019819, 0.5152931383677891, 0.5422402109418597, 0.5046334436961583, 0.4929061106273106, 0.4898233413696289, 0.5037142038345337, 0.47065212045397076, 0.4643867697034563, 0.46792878423418316, 0.4668867588043213, 0.46621978282928467, 0.45516330003738403, 0.478717429297311, 0.44875540903636385, 0.4470143573624747, 0.44864955970219206], "val_accuracy": [0.49133333563804626, 0.5733333230018616, 0.6990000009536743, 0.7096666693687439, 0.7096666693687439, 0.7599999904632568, 0.7350000143051147, 0.7286666631698608, 0.7676666378974915, 0.7803333401679993, 0.7549999952316284, 0.7673333287239075, 0.762666642665863, 0.7726666927337646, 0.7826666831970215, 0.7893333435058594, 0.7726666927337646, 0.7983333468437195, 0.8086666464805603, 0.796999990940094, 0.7990000247955322, 0.8163333535194397, 0.8096666932106018, 0.7910000085830688, 0.8090000152587891, 0.8113333582878113, 0.8100000023841858]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 1, 1, 1], [6, 3, 0, 9], [3, 3], [60], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 3, 9, 3, 2, 9], [2, 0, 3, 1], [95, 18]], "fitness": -0.28057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.229131956142032, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2071060687303543, 0.11332716792821884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.516939844403948, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.27166667580604553, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 3, 0, 3, 8], [1, 0, 0, 3, 1, 0], [73, 14, 23], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [32, 17, 56]], "fitness": -0.10285714268684387, "mapping_values": [1, 10, 10, 7, 3, 3, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3030053654429996, 2.301519333332159, 2.301470372214246, 2.302821636231442, 2.3018598634931218, 2.301077424606013, 2.301893886148717, 2.3023799287329703, 2.3030363070163364, 2.3015173146627395, 2.300704243885071, 2.3019527081469535, 2.3017368299015413, 2.3010811792813777, 2.2999113581325745, 2.300872006924586, 2.300437238757731, 2.3015951613677004, 2.3009412740247126, 2.300125625643354, 2.2997883009857047, 2.2997967426598334, 2.30053445187857, 2.30026262059361, 2.2995252179400385, 2.3005957129199697, 2.301058124006385, 2.298869520146314, 2.2994460092795728, 2.299292037830597, 2.299026126922035, 2.298429731459209, 2.2994178929238855, 2.2986430755900416, 2.299821469604599, 2.299064886930549, 2.2991489304716497, 2.300179379191995, 2.2986572086378065, 2.3010255803584485, 2.2997984006625, 2.300231637389133, 2.3008881855666, 2.299969261065135, 2.2992939142235485, 2.3000825918613566, 2.2992476562325668, 2.2990927750077685, 2.298704067414636, 2.2972037163015053, 2.29727422455755, 2.2977729509409315, 2.2976944179519796, 2.298827639817719, 2.297600947256495, 2.296697893729693, 2.299134216792296, 2.297509987907576, 2.2961681277414026, 2.295631814012438, 2.2977006258414705, 2.295442723610681, 2.297998696396364, 2.2971931955581644, 2.297735121933193, 2.295134057048888, 2.2969423725998332, 2.297783569621372, 2.295934670227488, 2.295104361764507, 2.2959827669796424, 2.2972056761456834, 2.2962401295224706, 2.295823439599469, 2.297146743865864, 2.2948536684547416, 2.2945832013296585, 2.2958144666401936, 2.294956792567652, 2.2950380177246563, 2.294845946760005, 2.295063943658853, 2.295017348776845, 2.29551435351419, 2.295288718970161, 2.295603796538581, 2.2950179908474313, 2.2956778581163526, 2.2953937953379113, 2.29457182636067, 2.294107466325973, 2.2945179108851588, 2.295374533598213, 2.2944627135988114, 2.294578665298887, 2.2941374313939975, 2.294923068572974, 2.293677394416244, 2.2927416715923004, 2.294165046192069], "accuracy": [0.08492933213710785, 0.09192973375320435, 0.09126931428909302, 0.08625016361474991, 0.09377889335155487, 0.09430722147226334, 0.09087307006120682, 0.09272222965955734, 0.09074098616838455, 0.09311848133802414, 0.09351472556591034, 0.0956280529499054, 0.09153348207473755, 0.09840179979801178, 0.09589222073554993, 0.08928807079792023, 0.09470347315073013, 0.09272222965955734, 0.09272222965955734, 0.0944393053650856, 0.0948355570435524, 0.10315678268671036, 0.09391097724437714, 0.09549596905708313, 0.09813763201236725, 0.09325055778026581, 0.09787346422672272, 0.1002509593963623, 0.09721305221319199, 0.09813763201236725, 0.0948355570435524, 0.09774138033390045, 0.10196803510189056, 0.09721305221319199, 0.09853387624025345, 0.09893012791872025, 0.09615638852119446, 0.09774138033390045, 0.10210011899471283, 0.09325055778026581, 0.09800554811954498, 0.09536388516426086, 0.09509972482919693, 0.09826971590518951, 0.09272222965955734, 0.09734513610601425, 0.09800554811954498, 0.09893012791872025, 0.0952318087220192, 0.10236428678035736, 0.10210011899471283, 0.10130762308835983, 0.09893012791872025, 0.09959053993225098, 0.10051512718200684, 0.10355303436517715, 0.09694888442754745, 0.1002509593963623, 0.10500594228506088, 0.1014397069811821, 0.1088363528251648, 0.10989301651716232, 0.10460969805717468, 0.10381719470024109, 0.10210011899471283, 0.10368511080741882, 0.09853387624025345, 0.10566636174917221, 0.10434553027153015, 0.10817593336105347, 0.10355303436517715, 0.09760929644107819, 0.10540219396352768, 0.10460969805717468, 0.10289261490106583, 0.10328886657953262, 0.10447761416435242, 0.10685510188341141, 0.10606260597705841, 0.10606260597705841, 0.10672302544116974, 0.10593052208423615, 0.10830801725387573, 0.10368511080741882, 0.10685510188341141, 0.10394927859306335, 0.10276053100824356, 0.1088363528251648, 0.11200633645057678, 0.1088363528251648, 0.10685510188341141, 0.11293092370033264, 0.10460969805717468, 0.11279883980751038, 0.10606260597705841, 0.10962884873151779, 0.1072513535618782, 0.11147800832986832, 0.11028926074504852, 0.10659094154834747], "val_loss": [1.9705101421901159, 1.9704303741455078, 1.9703505379813058, 1.9702709061758858, 1.970191478729248, 1.9701119831630163, 1.9700323513575964, 1.9699526514325822, 1.9698730196271623, 1.9697937965393066, 1.9697135516575404, 1.9696339198521204, 1.9695536068507604, 1.9694738388061523, 1.9693942070007324, 1.9693152563912528, 1.9692360333033971, 1.969156129019601, 1.9690775190080916, 1.9689978190830775, 1.968918936593192, 1.9688387598310197, 1.968759264264788, 1.9686800411769323, 1.968600136893136, 1.968522208077567, 1.968442780630929, 1.9683642387390137, 1.9682862418038505, 1.9682060650416784, 1.9681268419538225, 1.9680465970720564, 1.9679683957781111, 1.9678901944841658, 1.967810767037528, 1.9677316120692663, 1.9676515715462821, 1.9675727571759904, 1.9674948964800154, 1.967416218348912, 1.967336927141462, 1.9672596114022392, 1.9671802520751953, 1.967102118900844, 1.9670225552150182, 1.9669441495622908, 1.9668654714311873, 1.9667859758649553, 1.9667070252554757, 1.9666285514831543, 1.966550418308803, 1.9664717401776994, 1.966393334524972, 1.9663153375898088, 1.9662360463823592, 1.9661579132080078, 1.9660802568708147, 1.9660020555768694, 1.9659239224025182, 1.9658453805106026, 1.965766225542341, 1.9656877517700195, 1.965609414236886, 1.965531689780099, 1.9654545102800642, 1.9653758321489607, 1.9652968815394811, 1.9652177946908134, 1.9651384353637695, 1.965059552873884, 1.9649809428623743, 1.964902741568429, 1.9648239271981376, 1.9647455215454102, 1.964667456490653, 1.9645893914358956, 1.9645112582615443, 1.9644325801304408, 1.9643536295209612, 1.9642748151506697, 1.9641970906938826, 1.964118208203997, 1.9640395300728934, 1.963960920061384, 1.9638828550066267, 1.9638052667890276, 1.9637276785714286, 1.9636489323207311, 1.9635708672659737, 1.9634923253740584, 1.9634144646780831, 1.9633368764604842, 1.9632585389273507, 1.9631808144705636, 1.9631034306117467, 1.9630252293178014, 1.9629479816981725, 1.962869507925851, 1.9627916472298759, 1.9627141952514648], "val_accuracy": [0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.03999999910593033, 0.04066666588187218, 0.04066666588187218, 0.0416666679084301, 0.041999999433755875, 0.04233333468437195, 0.04399999976158142, 0.044333335012197495, 0.044333335012197495, 0.045666664838790894, 0.04633333161473274, 0.04699999839067459, 0.04800000041723251, 0.04899999871850014, 0.04899999871850014, 0.04933333396911621, 0.049666665494441986, 0.049666665494441986, 0.04933333396911621, 0.05000000074505806, 0.050333332270383835, 0.050999999046325684, 0.052000001072883606, 0.05233333259820938, 0.0533333346247673, 0.0533333346247673, 0.05400000140070915, 0.05433333292603493, 0.05533333495259285, 0.05533333495259285, 0.056333333253860474, 0.0573333315551281, 0.057999998331069946, 0.05900000035762787, 0.05966666713356972, 0.05999999865889549, 0.061000000685453415, 0.061000000685453415, 0.061000000685453415, 0.06133333221077919, 0.06133333221077919, 0.061666667461395264, 0.061666667461395264, 0.06233333423733711, 0.06366666406393051, 0.06433333456516266, 0.06433333456516266, 0.06466666609048843, 0.06499999761581421, 0.06533333659172058, 0.06533333659172058, 0.06566666811704636, 0.06533333659172058, 0.0663333311676979, 0.0689999982714653, 0.06933332979679108, 0.07000000029802322, 0.070333331823349, 0.070333331823349, 0.07100000232458115, 0.07266666740179062, 0.0729999989271164, 0.07433333247900009, 0.07466666400432587, 0.07466666400432587, 0.07533333450555801, 0.07599999755620956, 0.07599999755620956, 0.07633333653211594, 0.07733333110809326, 0.07800000160932541, 0.07800000160932541, 0.07800000160932541, 0.0793333351612091, 0.08033332973718643, 0.0806666687130928, 0.08166666328907013, 0.08233333379030228, 0.0833333358168602, 0.08399999886751175, 0.08500000089406967, 0.08566666394472122, 0.0860000029206276, 0.08699999749660492, 0.08766666799783707, 0.08766666799783707, 0.08900000154972076, 0.08900000154972076, 0.09066666662693024, 0.09133332967758179, 0.09200000017881393, 0.09266666322946548, 0.09300000220537186, 0.09333333373069763, 0.09366666525602341, 0.09433333575725555, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57, 19], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [3, 3, 0, 6], [4, 3, 4], [0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 3, 0, 3, 6, 4, 4], [0, 0, 3, 1, 1, 0], [65, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 13, 7, 6, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.pow(alpha, alpha)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 5, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 9, 9], [3, 3, 3, 1], [31, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 4, 0, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [28.46682849652763, 301.7489367500036, 1186.434775885936, 3111.243018371397, 6409.051566395415, 11583.524263147412], "accuracy": [0.09457138925790787, 0.09787346422672272, 0.1014397069811821, 0.09853387624025345, 0.09813763201236725, 0.09747721254825592], "val_loss": [77.11451721191406, 430.2027151925223, 1309.590087890625, 2971.8282645089284, 5672.521763392857, 9665.769252232143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0, 9], [5, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 2, 9], [2, 2, 3, 1], [95, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1211847011.6834838, 23523273121.93158, 110877285920.66359, 310348041638.9359, 659838134261.4503, 1214372725880.7808], "accuracy": [0.09338264167308807, 0.09787346422672272, 0.10077928751707077, 0.09826971590518951, 0.09774138033390045, 0.09760929644107819], "val_loss": [4727326427.428572, 37807588498.28571, 127586884461.71428, 302414383396.5714, 590636814921.1428, 1020621151085.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [0, 2, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [1143960838.6601052, 22205212352.53256, 104664606586.0996, 292958989640.79987, 622863533003.6571, 1146329554678.9043], "accuracy": [0.09338264167308807, 0.09787346422672272, 0.10077928751707077, 0.09826971590518951, 0.09787346422672272, 0.09760929644107819], "val_loss": [4462477458.285714, 35688608329.14286, 120437286034.28572, 285465097947.4286, 557539112667.4286, 963414364745.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [60], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [2, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06749438494443893, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 1], [3, 3, 0, 9], [4, 3], [60], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [2, 3, 3, 1], [95, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [60], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027245178671087, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 2, 6, 0, 9], [1, 0, 0, 3, 1, 0], [66, 57, 98], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 1, 1, 1], [3, 3, 0, 9], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 2, 9], [2, 3, 3, 1], [95, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 9, 9, 5, 4, 1, 3, 3, 1, 2, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.multiply(alpha, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 3, 9, 3, 9], [0, 3, 3, 1, 1, 2, 3, 1, 2], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027245178671087, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 6, 8, 3, 2, 4, 0, 7, 4, 1, 2, 3, 3, 1, 3, 1, 1], [0, 3, 3, 0, 3, 2, 2, 2, 1, 2, 2, 0, 0, 2, 2, 1], [69, 17, 50, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 33, 17, 16, 4], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma)), sigma), tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.subtract(beta, beta), tf.math.add(tf.math.multiply(tf.math.multiply(beta, tf.math.subtract(tf.math.multiply(alpha, tf.math.subtract(beta, beta)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)), beta)))), alpha)))", "other_info": {"loss": [1217148459.4806044, 23626116831.099724, 111362476360.12363, 311708205265.91254, 662730728799.2518, 1219698138063.7146], "accuracy": [0.09338264167308807, 0.09787346422672272, 0.10077928751707077, 0.09813763201236725, 0.09774138033390045, 0.09760929644107819], "val_loss": [4747993234.285714, 37972698258.28571, 128145756745.14285, 303744389705.1429, 593238725193.1428, 1025071719570.2858], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 1, 0, 1, 0, 0], [0, 1, 1, 1], [3, 3, 0], [1, 3], [60], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 2, 9], [2, 3, 3, 1], [69, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027245178671087, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 1, 6, 0, 7], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [53, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [2, 3, 3, 1], [69, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029731443891626, 2.3033727805029685, 2.3029743173040216, 2.303201896072678, 2.3073300559837837, 2.306511177756547], "accuracy": [0.0936468094587326, 0.09615638852119446, 0.10091137140989304, 0.10342095047235489, 0.09615638852119446, 0.10711926966905594], "val_loss": [1.973658561706543, 1.97424282346453, 1.9746526309422083, 1.9752058301653181, 1.9779861313956124, 1.9815068926130022], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [5, 3, 0, 3, 9], [0, 3, 3, 1], [75, 50, 30]], "fitness": -0.07000000029802322, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [2.30290421871477, 2.301189300579685, 2.3009393435301733, 2.302107950605343, 2.3009614363448527, 2.3002694236635453, 2.3008983734497668, 2.301126957915919, 2.3014924403714496, 2.300323451656502, 2.2996328224705636, 2.300614064348498, 2.3003046729262038, 2.299780046872144, 2.2990795637339083, 2.299924085452304, 2.299455092457449, 2.300457203062282, 2.300138436004927, 2.2993120603935515, 2.2991839865998287, 2.299210319744519, 2.2999514288606897, 2.2998835822893815, 2.299166581791626, 2.300066317392142, 2.30053028259232, 2.299315332972756, 2.2992845313770425, 2.2992347365656327, 2.299405127405538, 2.298601526169178, 2.2994665088371407, 2.2992878937686614, 2.299763145479528, 2.299352384876377], "accuracy": [0.08519349992275238, 0.09219389408826828, 0.09325055778026581, 0.08796724677085876, 0.09708096832036972, 0.09721305221319199, 0.09325055778026581, 0.0952318087220192, 0.09192973375320435, 0.09576013684272766, 0.09325055778026581, 0.09721305221319199, 0.09681680053472519, 0.09879804402589798, 0.0940430611371994, 0.09298639744520187, 0.09760929644107819, 0.09536388516426086, 0.09430722147226334, 0.09391097724437714, 0.09932637959718704, 0.10408136248588562, 0.09576013684272766, 0.09840179979801178, 0.09866596013307571, 0.09642054885625839, 0.09430722147226334, 0.0952318087220192, 0.1010434553027153, 0.1022322028875351, 0.09694888442754745, 0.09972262382507324, 0.10342095047235489, 0.09787346422672272, 0.09945846349000931, 0.0956280529499054], "val_loss": [1.9703235626220703, 1.9700802394321986, 1.9698700223650252, 1.9696927751813615, 1.9694921629769462, 1.9693948881966727, 1.9692951611110143, 1.969179970877511, 1.9690385546003069, 1.9689826284136092, 1.968963554927281, 1.9689099448067802, 1.9688775198800224, 1.9688661439078194, 1.9688973426818848, 1.9689021791730608, 1.9689204352242606, 1.9689314705984933, 1.9689508165631975, 1.9689734322684151, 1.9690043585641044, 1.9690295628138952, 1.9690465927124023, 1.9690616471426827, 1.9690722056797572, 1.9690426417759486, 1.9690306527273995, 1.9690426417759486, 1.9690448897225517, 1.9690427098955428, 1.96906920841762, 1.9690944807870048, 1.9691106251307897, 1.9691534042358398, 1.9691810607910156, 1.969229016985212], "val_accuracy": [0.0416666679084301, 0.04466666653752327, 0.047333333641290665, 0.047333333641290665, 0.04899999871850014, 0.05000000074505806, 0.052666667848825455, 0.054666668176651, 0.055666666477918625, 0.05700000002980232, 0.057999998331069946, 0.06066666543483734, 0.06133333221077919, 0.06233333423733711, 0.06266666948795319, 0.06333333253860474, 0.06566666811704636, 0.06599999964237213, 0.06733333319425583, 0.0689999982714653, 0.07000000029802322, 0.07100000232458115, 0.07199999690055847, 0.07233333587646484, 0.07266666740179062, 0.07333333045244217, 0.07400000095367432, 0.07433333247900009, 0.07533333450555801, 0.07566666603088379, 0.07599999755620956, 0.07500000298023224, 0.07599999755620956, 0.07533333450555801, 0.07433333247900009, 0.07400000095367432]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57, 69], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 5, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 3, 3, 1], [75, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030401633447424, 2.3016389405108586, 2.3016742130768786, 2.303108828462362, 2.3022309528948406, 2.3015341753374554], "accuracy": [0.08492933213710785, 0.09153348207473755, 0.09087307006120682, 0.08558975160121918, 0.09325055778026581, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 23], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3030401633447424, 2.3016389405108586, 2.3016742130768786, 2.303108828462362, 2.3022309528948406, 2.3015341753374554], "accuracy": [0.08492933213710785, 0.09153348207473755, 0.09087307006120682, 0.08558975160121918, 0.09325055778026581, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 1, 0, 1], [3, 3, 0, 9], [3, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 9, 3, 2, 9], [0, 3, 3, 1], [99, 18]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3030401633447424, 2.3016389405108586, 2.3016742130768786, 2.303108828462362, 2.3022309528948406, 2.3015341753374554], "accuracy": [0.08492933213710785, 0.09153348207473755, 0.09087307006120682, 0.08558975160121918, 0.09325055778026581, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]