[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2384103915915277, 1.861515038285226, 1.3103644375032075, 1.0944664510895217, 0.9800994396288444, 0.8853964104691454, 0.8394558859334378, 0.8050529690403523, 0.7786960330983793, 0.7517289182828355, 0.7189148720449791, 0.7160688410770812, 0.6919856208221961, 0.6851595792520347, 0.6716412125388314, 0.6611969794390649, 0.6573132843058642, 0.6423592988872541, 0.6456804513112507, 0.6199935640342137, 0.620281269088665, 0.5975811390388029, 0.6095364607163015, 0.5997579198755277, 0.6167716264897932, 0.5916660598886011, 0.5913620909537937, 0.5666171416173821, 0.5742836105683382, 0.5688561685112694, 0.5666441505123139, 0.562221654087183], "accuracy": [0.22520142793655396, 0.4336283206939697, 0.5559371113777161, 0.6165632009506226, 0.6493197679519653, 0.6822084188461304, 0.6947563290596008, 0.7043983340263367, 0.7091533541679382, 0.7238145470619202, 0.7313432693481445, 0.7296261787414551, 0.7454761862754822, 0.7539294958114624, 0.7469290494918823, 0.7547219395637512, 0.7589486241340637, 0.7557786107063293, 0.7560427784919739, 0.7676661014556885, 0.7683265209197998, 0.7778365015983582, 0.7771760821342468, 0.7798177003860474, 0.7671377658843994, 0.7746664881706238, 0.7744023203849792, 0.7911768555641174, 0.7873464822769165, 0.789988100528717, 0.7882710099220276, 0.7909126877784729], "val_loss": [1.7747627667018346, 1.159790141241891, 0.8156655856541225, 0.7253377437591553, 0.6592614139829364, 0.6649975776672363, 0.5980512755257743, 0.6240475007465908, 0.5532803194863456, 0.5688385452542987, 0.5308135747909546, 0.5362032992499215, 0.5226491689682007, 0.5077601500919887, 0.5309629099709647, 0.5047065019607544, 0.4845778260912214, 0.4936492783682687, 0.47879656723567415, 0.4792265551430838, 0.47382307052612305, 0.4754282236099243, 0.46077236107417513, 0.4726541212626866, 0.46108077253614155, 0.48212363038744244, 0.47110421316964285, 0.45389542409351896, 0.4731514113289969, 0.4761004958833967, 0.4574811373438154, 0.4555682795388358], "val_accuracy": [0.503000020980835, 0.6516666412353516, 0.6850000023841858, 0.687666654586792, 0.7366666793823242, 0.6943333148956299, 0.7413333058357239, 0.7273333072662354, 0.7580000162124634, 0.7443333268165588, 0.7739999890327454, 0.7646666765213013, 0.7609999775886536, 0.7863333225250244, 0.7593333125114441, 0.7793333530426025, 0.7919999957084656, 0.7906666398048401, 0.7933333516120911, 0.8033333420753479, 0.7993333339691162, 0.8013333082199097, 0.8053333163261414, 0.8006666898727417, 0.8056666851043701, 0.781000018119812, 0.8133333325386047, 0.8106666803359985, 0.7986666560173035, 0.7906666398048401, 0.8113333582878113, 0.8053333163261414]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 3, 5, 4, 2, 2, 0, 6, 5, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(beta))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2384103915915277, 1.861515038285226, 1.3103644375032075, 1.0944664510895217, 0.9800994396288444, 0.8853964104691454, 0.8394558859334378, 0.8050529690403523, 0.7786960330983793, 0.7517289182828355, 0.7189148720449791, 0.7160688410770812, 0.6919856208221961, 0.6851595792520347, 0.6716412125388314, 0.6611969794390649, 0.6573132843058642, 0.6423592988872541, 0.6456804513112507, 0.6199935640342137, 0.620281269088665, 0.5975811390388029, 0.6095364607163015, 0.5997579198755277, 0.6167716264897932, 0.5916660598886011, 0.5913620909537937, 0.5666171416173821, 0.5742836105683382, 0.5688561685112694, 0.5666441505123139, 0.562221654087183], "accuracy": [0.22520142793655396, 0.4336283206939697, 0.5559371113777161, 0.6165632009506226, 0.6493197679519653, 0.6822084188461304, 0.6947563290596008, 0.7043983340263367, 0.7091533541679382, 0.7238145470619202, 0.7313432693481445, 0.7296261787414551, 0.7454761862754822, 0.7539294958114624, 0.7469290494918823, 0.7547219395637512, 0.7589486241340637, 0.7557786107063293, 0.7560427784919739, 0.7676661014556885, 0.7683265209197998, 0.7778365015983582, 0.7771760821342468, 0.7798177003860474, 0.7671377658843994, 0.7746664881706238, 0.7744023203849792, 0.7911768555641174, 0.7873464822769165, 0.789988100528717, 0.7882710099220276, 0.7909126877784729], "val_loss": [1.7747627667018346, 1.159790141241891, 0.8156655856541225, 0.7253377437591553, 0.6592614139829364, 0.6649975776672363, 0.5980512755257743, 0.6240475007465908, 0.5532803194863456, 0.5688385452542987, 0.5308135747909546, 0.5362032992499215, 0.5226491689682007, 0.5077601500919887, 0.5309629099709647, 0.5047065019607544, 0.4845778260912214, 0.4936492783682687, 0.47879656723567415, 0.4792265551430838, 0.47382307052612305, 0.4754282236099243, 0.46077236107417513, 0.4726541212626866, 0.46108077253614155, 0.48212363038744244, 0.47110421316964285, 0.45389542409351896, 0.4731514113289969, 0.4761004958833967, 0.4574811373438154, 0.4555682795388358], "val_accuracy": [0.503000020980835, 0.6516666412353516, 0.6850000023841858, 0.687666654586792, 0.7366666793823242, 0.6943333148956299, 0.7413333058357239, 0.7273333072662354, 0.7580000162124634, 0.7443333268165588, 0.7739999890327454, 0.7646666765213013, 0.7609999775886536, 0.7863333225250244, 0.7593333125114441, 0.7793333530426025, 0.7919999957084656, 0.7906666398048401, 0.7933333516120911, 0.8033333420753479, 0.7993333339691162, 0.8013333082199097, 0.8053333163261414, 0.8006666898727417, 0.8056666851043701, 0.781000018119812, 0.8133333325386047, 0.8106666803359985, 0.7986666560173035, 0.7906666398048401, 0.8113333582878113, 0.8053333163261414]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 0, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2384103915915277, 1.861515038285226, 1.3103644375032075, 1.0944664510895217, 0.9800994396288444, 0.8853964104691454, 0.8394558859334378, 0.8050529690403523, 0.7786960330983793, 0.7517289182828355, 0.7189148720449791, 0.7160688410770812, 0.6919856208221961, 0.6851595792520347, 0.6716412125388314, 0.6611969794390649, 0.6573132843058642, 0.6423592988872541, 0.6456804513112507, 0.6199935640342137, 0.620281269088665, 0.5975811390388029, 0.6095364607163015, 0.5997579198755277, 0.6167716264897932, 0.5916660598886011, 0.5913620909537937, 0.5666171416173821, 0.5742836105683382, 0.5688561685112694, 0.5666441505123139, 0.562221654087183], "accuracy": [0.22520142793655396, 0.4336283206939697, 0.5559371113777161, 0.6165632009506226, 0.6493197679519653, 0.6822084188461304, 0.6947563290596008, 0.7043983340263367, 0.7091533541679382, 0.7238145470619202, 0.7313432693481445, 0.7296261787414551, 0.7454761862754822, 0.7539294958114624, 0.7469290494918823, 0.7547219395637512, 0.7589486241340637, 0.7557786107063293, 0.7560427784919739, 0.7676661014556885, 0.7683265209197998, 0.7778365015983582, 0.7771760821342468, 0.7798177003860474, 0.7671377658843994, 0.7746664881706238, 0.7744023203849792, 0.7911768555641174, 0.7873464822769165, 0.789988100528717, 0.7882710099220276, 0.7909126877784729], "val_loss": [1.7747627667018346, 1.159790141241891, 0.8156655856541225, 0.7253377437591553, 0.6592614139829364, 0.6649975776672363, 0.5980512755257743, 0.6240475007465908, 0.5532803194863456, 0.5688385452542987, 0.5308135747909546, 0.5362032992499215, 0.5226491689682007, 0.5077601500919887, 0.5309629099709647, 0.5047065019607544, 0.4845778260912214, 0.4936492783682687, 0.47879656723567415, 0.4792265551430838, 0.47382307052612305, 0.4754282236099243, 0.46077236107417513, 0.4726541212626866, 0.46108077253614155, 0.48212363038744244, 0.47110421316964285, 0.45389542409351896, 0.4731514113289969, 0.4761004958833967, 0.4574811373438154, 0.4555682795388358], "val_accuracy": [0.503000020980835, 0.6516666412353516, 0.6850000023841858, 0.687666654586792, 0.7366666793823242, 0.6943333148956299, 0.7413333058357239, 0.7273333072662354, 0.7580000162124634, 0.7443333268165588, 0.7739999890327454, 0.7646666765213013, 0.7609999775886536, 0.7863333225250244, 0.7593333125114441, 0.7793333530426025, 0.7919999957084656, 0.7906666398048401, 0.7933333516120911, 0.8033333420753479, 0.7993333339691162, 0.8013333082199097, 0.8053333163261414, 0.8006666898727417, 0.8056666851043701, 0.781000018119812, 0.8133333325386047, 0.8106666803359985, 0.7986666560173035, 0.7906666398048401, 0.8113333582878113, 0.8053333163261414]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 2, 4, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.34857141971588135, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5801241551533884, 2.3026144652240044, 2.3037734290218594, 2.303221937309812, 2.266754056610341, 2.4396450349510213, 2.3042597260536253, 2.3032581100153995, 2.302816091574509, 2.3021724757233692], "accuracy": [0.1554616242647171, 0.13974376022815704, 0.09826971590518951, 0.09945846349000931, 0.1644432693719864, 0.10857218503952026, 0.09919429570436478, 0.09694888442754745, 0.10315678268671036, 0.1022322028875351], "val_loss": [1.9760308946881975, 1.973977838243757, 1.9737693241664342, 1.9720281873430525, 2.4115447998046875, 1.9755800110953194, 1.974104608808245, 1.973698547908238, 1.9734771592276437, 1.969254766191755], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.10000000149011612, 0.10533333569765091, 0.25066667795181274, 0.09966666996479034, 0.09733333438634872, 0.10233332961797714, 0.09733333438634872, 0.20466665923595428]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 59, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.34857141971588135, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.5801241551533884, 2.3026144652240044, 2.3037734290218594, 2.303221937309812, 2.266754056610341, 2.4396450349510213, 2.3042597260536253, 2.3032581100153995, 2.302816091574509, 2.3021724757233692], "accuracy": [0.1554616242647171, 0.13974376022815704, 0.09826971590518951, 0.09945846349000931, 0.1644432693719864, 0.10857218503952026, 0.09919429570436478, 0.09694888442754745, 0.10315678268671036, 0.1022322028875351], "val_loss": [1.9760308946881975, 1.973977838243757, 1.9737693241664342, 1.9720281873430525, 2.4115447998046875, 1.9755800110953194, 1.974104608808245, 1.973698547908238, 1.9734771592276437, 1.969254766191755], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.10000000149011612, 0.10533333569765091, 0.25066667795181274, 0.09966666996479034, 0.09733333438634872, 0.10233332961797714, 0.09733333438634872, 0.20466665923595428]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 1, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 2, 3, 1], [56, 38]], "fitness": -0.34857141971588135, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5801241551533884, 2.3026144652240044, 2.3037734290218594, 2.303221937309812, 2.266754056610341, 2.4396450349510213, 2.3042597260536253, 2.3032581100153995, 2.302816091574509, 2.3021724757233692], "accuracy": [0.1554616242647171, 0.13974376022815704, 0.09826971590518951, 0.09945846349000931, 0.1644432693719864, 0.10857218503952026, 0.09919429570436478, 0.09694888442754745, 0.10315678268671036, 0.1022322028875351], "val_loss": [1.9760308946881975, 1.973977838243757, 1.9737693241664342, 1.9720281873430525, 2.4115447998046875, 1.9755800110953194, 1.974104608808245, 1.973698547908238, 1.9734771592276437, 1.969254766191755], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.10000000149011612, 0.10533333569765091, 0.25066667795181274, 0.09966666996479034, 0.09733333438634872, 0.10233332961797714, 0.09733333438634872, 0.20466665923595428]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 4, 4, 1, 2, 3, 3, 0], [89, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [4, 3, 9, 3, 9], [3, 1, 3, 1], [32, 38]], "fitness": -0.16514286398887634, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.7920516499627803, 2.4824042874808483, 2.3682461674848585, 2.331154695071753, 2.3446421496950953, 2.3286582534937668, 2.3244117807482274], "accuracy": [0.16695284843444824, 0.11874257028102875, 0.10355303436517715, 0.1014397069811821, 0.10170386731624603, 0.10249637067317963, 0.0956280529499054], "val_loss": [2.0367990902491977, 2.0673413276672363, 2.0278879574366977, 1.992502212524414, 1.986790997641427, 2.001959732600621, 2.0193298203604564], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.09966666996479034, 0.10000000149011612, 0.0976666659116745, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 4, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 4, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [612511276.9614133, 11626717229.444988, 53542457494.942276, 150389611160.09192, 321837971121.3842, 585834803017.6791], "accuracy": [0.0952318087220192, 0.10051512718200684, 0.10447761416435242, 0.09893012791872025, 0.09285431355237961, 0.10342095047235489], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 4, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [6, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(beta)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 6, 3, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 4, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 7, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3052683586709612, 2.3244679700334734, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.07594769448041916, 0.09272222965955734, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9774914469037737, 2.0240584782191684, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.019333332777023315, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 2, 4, 3, 0, 2, 3, 3, 0], [19, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, alpha)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 0, 0, 2, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [28, 92, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 6, 4, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 4, 1, 2, 3, 3, 0], [21, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031476628211953, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 2, 3, 0, 1, 2, 3, 3, 0], [78, 35, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302533146885046, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 2, 4, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [94, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 0, 0, 2, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [3, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.05485714226961136, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.303316293407063, 2.3027088975610357, 2.301171582845129, 2.3027090272725834, 2.3016820855506612, 2.3009784514515736, 2.30196488531841, 2.3024578383570065, 2.3014431877725743, 2.3020040600637732, 2.301376397851247, 2.301442464990481, 2.3024230254970255, 2.301436975222411, 2.3017233111492756, 2.3021772500467557, 2.3004500716353893, 2.299882212555593, 2.2998546735564274, 2.300139721972579, 2.2993288549685977, 2.302258962621904, 2.3003488162946013, 2.3001569314104393, 2.301131391537865, 2.301434244099956, 2.301826429499328, 2.3014940117422964, 2.3010494470627805, 2.300674748442759, 2.3002399042880515, 2.301283117298594, 2.30096333525389, 2.300371392559555, 2.300912121362249, 2.3010044016023716, 2.29961593616215, 2.299918749265982, 2.301198807248917, 2.300620254382576, 2.3009841551696932, 2.300363815062239, 2.301076017523864], "accuracy": [0.08757099509239197, 0.09047681838274002, 0.08981640636920929, 0.08875974267721176, 0.08849557489156723, 0.09034473448991776, 0.09113723784685135, 0.0866464152932167, 0.08889182657003403, 0.08915598690509796, 0.08836349099874496, 0.08955223858356476, 0.09113723784685135, 0.09060890227556229, 0.09113723784685135, 0.09074098616838455, 0.09430722147226334, 0.09747721254825592, 0.09272222965955734, 0.09245806187391281, 0.09681680053472519, 0.0866464152932167, 0.09681680053472519, 0.08968432247638702, 0.09166556596755981, 0.09126931428909302, 0.09496764093637466, 0.09113723784685135, 0.09774138033390045, 0.09668471664190292, 0.1002509593963623, 0.0944393053650856, 0.0940430611371994, 0.08849557489156723, 0.09192973375320435, 0.09549596905708313, 0.09787346422672272, 0.09668471664190292, 0.09747721254825592, 0.09509972482919693, 0.08889182657003403, 0.09813763201236725, 0.09113723784685135], "val_loss": [1.9705195426940918, 1.9704649788992745, 1.9704079627990723, 1.9703535352434431, 1.97029025214059, 1.970242704663958, 1.9701856204441615, 1.9701243128095354, 1.970067092350551, 1.970024858202253, 1.9699713843209403, 1.9699228150503976, 1.9698769024440221, 1.969834668295724, 1.969796793801444, 1.9697555814470564, 1.9697222709655762, 1.9696941375732422, 1.9696620532444544, 1.9696365765162878, 1.9696074213300432, 1.969574247087751, 1.9695536749703544, 1.9695311955043249, 1.96950101852417, 1.9694702284676688, 1.9694323539733887, 1.9694064685276575, 1.9693739073617118, 1.9693536758422852, 1.9693267686026437, 1.9693072863987513, 1.9692841257367815, 1.9692648478916712, 1.969240733555385, 1.969226292201451, 1.9692184584481376, 1.9692019735063826, 1.9691846030099052, 1.9691784722464425, 1.9691576276506697, 1.969144344329834, 1.969137532370431], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03966666758060455, 0.04233333468437195, 0.04266666620969772, 0.04333333298563957, 0.044333335012197495, 0.04500000178813934, 0.045666664838790894, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.04800000041723251, 0.04800000041723251, 0.04800000041723251, 0.04866666719317436, 0.04866666719317436, 0.04899999871850014, 0.04899999871850014, 0.049666665494441986, 0.05000000074505806, 0.050333332270383835, 0.050999999046325684, 0.0533333346247673, 0.0533333346247673, 0.05366666615009308, 0.05400000140070915, 0.05433333292603493, 0.05533333495259285, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.056333333253860474, 0.05766666680574417, 0.05766666680574417, 0.0573333315551281, 0.0573333315551281, 0.05700000002980232, 0.05700000002980232]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 1, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 2, 4, 4, 1, 2, 3, 3, 0], [18, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [51, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 6, 5, 3, 2, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.add(beta, grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3033526479733415, 2.3028085077474967, 2.3013432067792494, 2.3029612104544124, 2.302012946832103, 2.301341424450001], "accuracy": [0.08757099509239197, 0.09047681838274002, 0.08994849026203156, 0.08928807079792023, 0.0874389111995697, 0.09021265059709549], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 2, 6, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 5, 3, 0, 1, 2, 3, 3, 0], [78, 35, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [0, 3, 3, 1], [42, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.303444397778575, 2.303088223724758, 2.301870495179357, 2.303740297436415, 2.303055378140838, 2.3025738948907173], "accuracy": [0.0874389111995697, 0.09074098616838455, 0.08836349099874496, 0.08928807079792023, 0.0866464152932167, 0.0886276587843895], "val_loss": [1.9707730838230677, 1.97096620287214, 1.971165725163051, 1.9713590485709054, 1.9715637479509627, 1.9717591830662318], "val_accuracy": [0.03866666555404663, 0.038333334028720856, 0.03733333200216293, 0.035999998450279236, 0.03500000014901161, 0.033666666597127914]}}]