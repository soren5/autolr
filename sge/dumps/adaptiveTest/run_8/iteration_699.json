[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 1, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 5, 3, 1, 1, 0, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1.96920465575926, 1.5241146487425095, 1.0918976455836358, 0.8793528188236984, 0.8110074839256916, 0.7558226873137459, 0.7227732875343673, 0.6951164549698589, 0.7154684421361446, 0.6640386292569437, 0.6221392648709118, 0.6314049801255229, 0.6197328412411566, 0.5998425686584566, 0.5970915536272087, 0.5665427458725585, 0.5540460641389479, 0.5731764046775194, 0.5483093473181009, 0.5428367386939992, 0.5282993866090115], "accuracy": [0.3427552580833435, 0.4772156774997711, 0.6248844265937805, 0.6696605682373047, 0.6913221478462219, 0.7071720957756042, 0.7234182953834534, 0.7346453666687012, 0.7275128960609436, 0.7483819723129272, 0.76542067527771, 0.7534011602401733, 0.7656848430633545, 0.7651565074920654, 0.7693831920623779, 0.7843085527420044, 0.7872143983840942, 0.7798177003860474, 0.7884030938148499, 0.7911768555641174, 0.8005547523498535], "val_loss": [1.6854397569383894, 0.8590550082070487, 0.7738521950585502, 0.6095605918339321, 0.5888079915727887, 0.5629915169307164, 0.558921183858599, 0.5664270945957729, 0.545669538634164, 0.5144054378782, 0.48462915420532227, 0.536315952028547, 0.5207982914788383, 0.47338266032082693, 0.46274671384266447, 0.4578292114394052, 0.5281690359115601, 0.4552189196859087, 0.4461167965616499, 0.44320803029196604, 0.45455126251493183], "val_accuracy": [0.2370000034570694, 0.6846666932106018, 0.6553333401679993, 0.7333333492279053, 0.7379999756813049, 0.7490000128746033, 0.7300000190734863, 0.7269999980926514, 0.7620000243186951, 0.7726666927337646, 0.781000018119812, 0.7400000095367432, 0.7549999952316284, 0.79666668176651, 0.7993333339691162, 0.8066666722297668, 0.7390000224113464, 0.7990000247955322, 0.8009999990463257, 0.8019999861717224, 0.8043333292007446]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 7], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.7839999794960022, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 4, 3, 3, 1, 2, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2866149170681185, 2.2440762443313225, 2.186824661377572, 2.094247818119128, 1.9493554982652816, 1.7665021715068452, 1.5787429067956584, 1.419596360596085, 1.3073102382699717, 1.211521132810162, 1.1456932388575731, 1.092625835914622, 1.0525065192992362, 1.0111246633885511, 0.9768391720071807, 0.9599292381816552, 0.9306495567559093, 0.9112331947283958, 0.8877010339869327, 0.8719517691669809, 0.8663538149586916, 0.8525700742825856, 0.8367464859975942, 0.8184705844188112, 0.8125276227731746, 0.8010457369078577, 0.790554765736375, 0.784361639735784, 0.7868234325692859, 0.7588107099370587, 0.7677691496279828, 0.7514409026402398, 0.749379081481074, 0.7440618013016158, 0.740094037347891, 0.7344639974184607, 0.7334516799492433, 0.7271561862423813, 0.7199974816551833, 0.7142062067843825, 0.706462236309505, 0.7028212485186192, 0.7017733366608132, 0.6989681323395587, 0.6999314714967614, 0.6953040646555685, 0.6911074737232784, 0.6737879833462153, 0.676464515693782, 0.678419253648532, 0.6734809328804021, 0.6758938190282344, 0.6727485075886255, 0.6548065292506154, 0.6654655106976803, 0.6609923624879003, 0.6595519483916087, 0.6609377773635344, 0.6492593945718129, 0.6508813814606098, 0.6503023303589565, 0.6452776575998592, 0.6369864079993494, 0.6445798118116676, 0.6381929277303023, 0.634259647515944, 0.6287692745269455, 0.6291080689732551, 0.6196043498449006, 0.6228053365968017, 0.6202457588992146, 0.62647487562661, 0.6192623782372036, 0.613555623122714, 0.6199576646628838], "accuracy": [0.1298375427722931, 0.2359001487493515, 0.31805574893951416, 0.37828555703163147, 0.41923126578330994, 0.4675736427307129, 0.5007264614105225, 0.5317659378051758, 0.5523709058761597, 0.5766741633415222, 0.5971469879150391, 0.6141856908798218, 0.63096022605896, 0.6453573107719421, 0.6593580842018127, 0.6622639298439026, 0.6729626059532166, 0.672698438167572, 0.6869634389877319, 0.6892088055610657, 0.6930392384529114, 0.6931713223457336, 0.6952846646308899, 0.7082287669181824, 0.7091533541679382, 0.7106062769889832, 0.7160216569900513, 0.7195879220962524, 0.7160216569900513, 0.7209087014198303, 0.7187954187393188, 0.7281733155250549, 0.7280412316322327, 0.7297582626342773, 0.7280412316322327, 0.7305507659912109, 0.7318716049194336, 0.7388719916343689, 0.741909921169281, 0.7400607466697693, 0.7404569983482361, 0.7432307600975037, 0.744419515132904, 0.7466648817062378, 0.746268630027771, 0.7458723783493042, 0.7503632307052612, 0.7508915662765503, 0.7515519857406616, 0.7494386434555054, 0.7564390301704407, 0.7520803213119507, 0.7540615797042847, 0.7582882046699524, 0.7549861073493958, 0.7528728246688843, 0.7582882046699524, 0.7582882046699524, 0.7605336308479309, 0.7568352818489075, 0.7582882046699524, 0.7623828053474426, 0.7643640041351318, 0.7629110813140869, 0.7664773464202881, 0.7656848430633545, 0.7716285586357117, 0.7733456492424011, 0.7749306559562683, 0.7741381525993347, 0.7721568942070007, 0.7725531458854675, 0.7736098170280457, 0.7738739848136902, 0.7677981853485107], "val_loss": [1.9330623490469796, 1.8870713370186942, 1.8167120388575964, 1.7021237441471644, 1.5341698442186629, 1.3359405653817313, 1.1495904581887382, 1.0101667131696428, 0.9146910394941058, 0.8414112670081002, 0.7904938629695347, 0.7504403931753976, 0.7189782006399972, 0.6930922099522182, 0.6734845467976162, 0.6584914582116264, 0.6404491833278111, 0.629800728389195, 0.6182478666305542, 0.6068207536424909, 0.5982530287333897, 0.590005772454398, 0.5837027175085885, 0.5732460873467582, 0.5661217144557408, 0.5626455204827445, 0.5571577208382743, 0.5521278211048671, 0.5467279297964913, 0.5421325990131923, 0.5401116950171334, 0.5334638016564506, 0.5322082553591047, 0.528545788356236, 0.5243538958685738, 0.5232539517538888, 0.5194776909691947, 0.5153277601514544, 0.5138710226331439, 0.5099103621074131, 0.5056630713599068, 0.506565945489066, 0.502460241317749, 0.5008396761757987, 0.4978818212236677, 0.4962447030203683, 0.49419592108045307, 0.49238412720816477, 0.4897803068161011, 0.4854135513305664, 0.48547967842647005, 0.484597989491054, 0.48386480127062115, 0.4820116417748587, 0.4830918482371739, 0.4841709647859846, 0.4754140377044678, 0.4743562766483852, 0.47157749107905794, 0.46928065163748606, 0.46883424690791536, 0.468124406678336, 0.46803433554513113, 0.46869821207863943, 0.46452384335654123, 0.46216836997440885, 0.4616005080086844, 0.45880321093967985, 0.45842230319976807, 0.45882817677089144, 0.45870234285082134, 0.4611873115812029, 0.45600262710026335, 0.4543862853731428, 0.452231764793396], "val_accuracy": [0.3356666564941406, 0.43433332443237305, 0.48233333230018616, 0.5260000228881836, 0.5733333230018616, 0.5926666855812073, 0.6153333187103271, 0.6629999876022339, 0.6896666884422302, 0.6983333230018616, 0.7003333568572998, 0.7036666870117188, 0.7213333249092102, 0.7233333587646484, 0.7279999852180481, 0.7300000190734863, 0.7390000224113464, 0.7393333315849304, 0.7393333315849304, 0.7543333172798157, 0.7543333172798157, 0.7576666474342346, 0.7556666731834412, 0.7616666555404663, 0.7673333287239075, 0.7646666765213013, 0.7696666717529297, 0.7710000276565552, 0.7716666460037231, 0.7756666541099548, 0.7743333578109741, 0.7753333449363708, 0.7746666669845581, 0.7683333158493042, 0.778333306312561, 0.7763333320617676, 0.781333327293396, 0.7803333401679993, 0.7806666493415833, 0.7886666655540466, 0.7863333225250244, 0.7836666703224182, 0.7866666913032532, 0.7889999747276306, 0.7893333435058594, 0.7916666865348816, 0.7916666865348816, 0.7889999747276306, 0.7953333258628845, 0.7983333468437195, 0.7963333129882812, 0.796999990940094, 0.7926666736602783, 0.7973333597183228, 0.8003333210945129, 0.8003333210945129, 0.7973333597183228, 0.7990000247955322, 0.8029999732971191, 0.8016666769981384, 0.8036666512489319, 0.8043333292007446, 0.8066666722297668, 0.8003333210945129, 0.8013333082199097, 0.8086666464805603, 0.8050000071525574, 0.8076666593551636, 0.8063333630561829, 0.8130000233650208, 0.8080000281333923, 0.8053333163261414, 0.8109999895095825, 0.8083333373069763, 0.8109999895095825]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.7699999809265137, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2792586830896457, 2.209840731047022, 2.088355436458595, 1.8645800222510973, 1.5818002302853533, 1.3666301124430666, 1.2281496233833684, 1.1333074922716582, 1.0681925790814708, 1.0063364303280506, 0.9653719412006675, 0.9307038329454099, 0.9052672703362821, 0.8761807967170733, 0.8552415067918737, 0.8456937326510757, 0.8271195248306672, 0.8129001292633169, 0.7949744071454703, 0.7853511234930147, 0.7808470761598046, 0.7687032368629994, 0.7549526207813293, 0.7422522947993245, 0.7376383957200283, 0.7273590040402154, 0.7187295197700513, 0.713283564641003, 0.7171126583059938, 0.6935384232590716, 0.7018679807750131, 0.6870800798059912, 0.6861431384917972, 0.6815803510921349, 0.6784719364549568], "accuracy": [0.1526878923177719, 0.28543123602867126, 0.3847576379776001, 0.44525161385536194, 0.50350022315979, 0.5432571768760681, 0.5769383311271667, 0.6032228469848633, 0.6176198720932007, 0.6419231295585632, 0.6608110070228577, 0.6705851554870605, 0.6812838315963745, 0.687491774559021, 0.6914542317390442, 0.6940959095954895, 0.7059833407402039, 0.7040021419525146, 0.7162858247756958, 0.7156254053115845, 0.7172104120254517, 0.7214370369911194, 0.719852089881897, 0.7321357727050781, 0.7317395210266113, 0.7325320243835449, 0.7409853339195251, 0.7423061728477478, 0.7417778372764587, 0.7432307600975037, 0.7390040755271912, 0.7499669790267944, 0.7460044622421265, 0.7500990629196167, 0.7508915662765503], "val_loss": [1.914649827139718, 1.826880727495466, 1.658484731401716, 1.3875242641993932, 1.1172585146767753, 0.9404690265655518, 0.8351888316018241, 0.765319858278547, 0.7265264817646572, 0.6859429052897862, 0.6625057969774518, 0.6405356441225324, 0.6182425362723214, 0.6030969619750977, 0.5976063523973737, 0.5904842444828579, 0.5755806139537266, 0.5666582754680088, 0.560867360660008, 0.55337997845241, 0.5456406218664986, 0.5372863837650844, 0.5365089859281268, 0.5254630872181484, 0.5206485986709595, 0.5191114630017962, 0.5145711558205741, 0.5119736364909581, 0.5045775685991559, 0.5029393775122506, 0.5029394626617432, 0.49443680899483816, 0.49514549119131906, 0.49143528938293457, 0.4880652938570295], "val_accuracy": [0.37299999594688416, 0.4896666705608368, 0.5443333387374878, 0.5763333439826965, 0.643666684627533, 0.6803333163261414, 0.687666654586792, 0.7126666903495789, 0.7196666598320007, 0.7253333330154419, 0.7236666679382324, 0.7263333201408386, 0.7480000257492065, 0.7586666941642761, 0.7556666731834412, 0.7546666860580444, 0.7609999775886536, 0.762333333492279, 0.7596666812896729, 0.7743333578109741, 0.7739999890327454, 0.7746666669845581, 0.7710000276565552, 0.7806666493415833, 0.784333348274231, 0.7823333144187927, 0.7850000262260437, 0.7876666784286499, 0.7863333225250244, 0.7979999780654907, 0.7873333096504211, 0.7946666479110718, 0.7913333177566528, 0.7850000262260437, 0.7953333258628845]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 30, 78, 85], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.7699999809265137, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 7, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha)))))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2792586830896457, 2.209840731047022, 2.088355436458595, 1.8645800222510973, 1.5818002302853533, 1.3666301124430666, 1.2281496233833684, 1.1333074922716582, 1.0681925790814708, 1.0063364303280506, 0.9653719412006675, 0.9307038329454099, 0.9052672703362821, 0.8761807967170733, 0.8552415067918737, 0.8456937326510757, 0.8271195248306672, 0.8129001292633169, 0.7949744071454703, 0.7853511234930147, 0.7808470761598046, 0.7687032368629994, 0.7549526207813293, 0.7422522947993245, 0.7376383957200283, 0.7273590040402154, 0.7187295197700513, 0.713283564641003, 0.7171126583059938, 0.6935384232590716, 0.7018679807750131, 0.6870800798059912, 0.6861431384917972, 0.6815803510921349, 0.6784719364549568], "accuracy": [0.1526878923177719, 0.28543123602867126, 0.3847576379776001, 0.44525161385536194, 0.50350022315979, 0.5432571768760681, 0.5769383311271667, 0.6032228469848633, 0.6176198720932007, 0.6419231295585632, 0.6608110070228577, 0.6705851554870605, 0.6812838315963745, 0.687491774559021, 0.6914542317390442, 0.6940959095954895, 0.7059833407402039, 0.7040021419525146, 0.7162858247756958, 0.7156254053115845, 0.7172104120254517, 0.7214370369911194, 0.719852089881897, 0.7321357727050781, 0.7317395210266113, 0.7325320243835449, 0.7409853339195251, 0.7423061728477478, 0.7417778372764587, 0.7432307600975037, 0.7390040755271912, 0.7499669790267944, 0.7460044622421265, 0.7500990629196167, 0.7508915662765503], "val_loss": [1.914649827139718, 1.826880727495466, 1.658484731401716, 1.3875242641993932, 1.1172585146767753, 0.9404690265655518, 0.8351888316018241, 0.765319858278547, 0.7265264817646572, 0.6859429052897862, 0.6625057969774518, 0.6405356441225324, 0.6182425362723214, 0.6030969619750977, 0.5976063523973737, 0.5904842444828579, 0.5755806139537266, 0.5666582754680088, 0.560867360660008, 0.55337997845241, 0.5456406218664986, 0.5372863837650844, 0.5365089859281268, 0.5254630872181484, 0.5206485986709595, 0.5191114630017962, 0.5145711558205741, 0.5119736364909581, 0.5045775685991559, 0.5029393775122506, 0.5029394626617432, 0.49443680899483816, 0.49514549119131906, 0.49143528938293457, 0.4880652938570295], "val_accuracy": [0.37299999594688416, 0.4896666705608368, 0.5443333387374878, 0.5763333439826965, 0.643666684627533, 0.6803333163261414, 0.687666654586792, 0.7126666903495789, 0.7196666598320007, 0.7253333330154419, 0.7236666679382324, 0.7263333201408386, 0.7480000257492065, 0.7586666941642761, 0.7556666731834412, 0.7546666860580444, 0.7609999775886536, 0.762333333492279, 0.7596666812896729, 0.7743333578109741, 0.7739999890327454, 0.7746666669845581, 0.7710000276565552, 0.7806666493415833, 0.784333348274231, 0.7823333144187927, 0.7850000262260437, 0.7876666784286499, 0.7863333225250244, 0.7979999780654907, 0.7873333096504211, 0.7946666479110718, 0.7913333177566528, 0.7850000262260437, 0.7953333258628845]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 1, 9, 4, 8, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 2, 0, 0], [32, 33, 2, 82, 91, 78, 26], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.7699999809265137, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 5, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2792586830896457, 2.209840731047022, 2.088355436458595, 1.8645800222510973, 1.5818002302853533, 1.3666301124430666, 1.2281496233833684, 1.1333074922716582, 1.0681925790814708, 1.0063364303280506, 0.9653719412006675, 0.9307038329454099, 0.9052672703362821, 0.8761807967170733, 0.8552415067918737, 0.8456937326510757, 0.8271195248306672, 0.8129001292633169, 0.7949744071454703, 0.7853511234930147, 0.7808470761598046, 0.7687032368629994, 0.7549526207813293, 0.7422522947993245, 0.7376383957200283, 0.7273590040402154, 0.7187295197700513, 0.713283564641003, 0.7171126583059938, 0.6935384232590716, 0.7018679807750131, 0.6870800798059912, 0.6861431384917972, 0.6815803510921349, 0.6784719364549568], "accuracy": [0.1526878923177719, 0.28543123602867126, 0.3847576379776001, 0.44525161385536194, 0.50350022315979, 0.5432571768760681, 0.5769383311271667, 0.6032228469848633, 0.6176198720932007, 0.6419231295585632, 0.6608110070228577, 0.6705851554870605, 0.6812838315963745, 0.687491774559021, 0.6914542317390442, 0.6940959095954895, 0.7059833407402039, 0.7040021419525146, 0.7162858247756958, 0.7156254053115845, 0.7172104120254517, 0.7214370369911194, 0.719852089881897, 0.7321357727050781, 0.7317395210266113, 0.7325320243835449, 0.7409853339195251, 0.7423061728477478, 0.7417778372764587, 0.7432307600975037, 0.7390040755271912, 0.7499669790267944, 0.7460044622421265, 0.7500990629196167, 0.7508915662765503], "val_loss": [1.914649827139718, 1.826880727495466, 1.658484731401716, 1.3875242641993932, 1.1172585146767753, 0.9404690265655518, 0.8351888316018241, 0.765319858278547, 0.7265264817646572, 0.6859429052897862, 0.6625057969774518, 0.6405356441225324, 0.6182425362723214, 0.6030969619750977, 0.5976063523973737, 0.5904842444828579, 0.5755806139537266, 0.5666582754680088, 0.560867360660008, 0.55337997845241, 0.5456406218664986, 0.5372863837650844, 0.5365089859281268, 0.5254630872181484, 0.5206485986709595, 0.5191114630017962, 0.5145711558205741, 0.5119736364909581, 0.5045775685991559, 0.5029393775122506, 0.5029394626617432, 0.49443680899483816, 0.49514549119131906, 0.49143528938293457, 0.4880652938570295], "val_accuracy": [0.37299999594688416, 0.4896666705608368, 0.5443333387374878, 0.5763333439826965, 0.643666684627533, 0.6803333163261414, 0.687666654586792, 0.7126666903495789, 0.7196666598320007, 0.7253333330154419, 0.7236666679382324, 0.7263333201408386, 0.7480000257492065, 0.7586666941642761, 0.7556666731834412, 0.7546666860580444, 0.7609999775886536, 0.762333333492279, 0.7596666812896729, 0.7743333578109741, 0.7739999890327454, 0.7746666669845581, 0.7710000276565552, 0.7806666493415833, 0.784333348274231, 0.7823333144187927, 0.7850000262260437, 0.7876666784286499, 0.7863333225250244, 0.7979999780654907, 0.7873333096504211, 0.7946666479110718, 0.7913333177566528, 0.7850000262260437, 0.7953333258628845]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 3, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.7699999809265137, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2792586830896457, 2.209840731047022, 2.088355436458595, 1.8645800222510973, 1.5818002302853533, 1.3666301124430666, 1.2281496233833684, 1.1333074922716582, 1.0681925790814708, 1.0063364303280506, 0.9653719412006675, 0.9307038329454099, 0.9052672703362821, 0.8761807967170733, 0.8552415067918737, 0.8456937326510757, 0.8271195248306672, 0.8129001292633169, 0.7949744071454703, 0.7853511234930147, 0.7808470761598046, 0.7687032368629994, 0.7549526207813293, 0.7422522947993245, 0.7376383957200283, 0.7273590040402154, 0.7187295197700513, 0.713283564641003, 0.7171126583059938, 0.6935384232590716, 0.7018679807750131, 0.6870800798059912, 0.6861431384917972, 0.6815803510921349, 0.6784719364549568], "accuracy": [0.1526878923177719, 0.28543123602867126, 0.3847576379776001, 0.44525161385536194, 0.50350022315979, 0.5432571768760681, 0.5769383311271667, 0.6032228469848633, 0.6176198720932007, 0.6419231295585632, 0.6608110070228577, 0.6705851554870605, 0.6812838315963745, 0.687491774559021, 0.6914542317390442, 0.6940959095954895, 0.7059833407402039, 0.7040021419525146, 0.7162858247756958, 0.7156254053115845, 0.7172104120254517, 0.7214370369911194, 0.719852089881897, 0.7321357727050781, 0.7317395210266113, 0.7325320243835449, 0.7409853339195251, 0.7423061728477478, 0.7417778372764587, 0.7432307600975037, 0.7390040755271912, 0.7499669790267944, 0.7460044622421265, 0.7500990629196167, 0.7508915662765503], "val_loss": [1.914649827139718, 1.826880727495466, 1.658484731401716, 1.3875242641993932, 1.1172585146767753, 0.9404690265655518, 0.8351888316018241, 0.765319858278547, 0.7265264817646572, 0.6859429052897862, 0.6625057969774518, 0.6405356441225324, 0.6182425362723214, 0.6030969619750977, 0.5976063523973737, 0.5904842444828579, 0.5755806139537266, 0.5666582754680088, 0.560867360660008, 0.55337997845241, 0.5456406218664986, 0.5372863837650844, 0.5365089859281268, 0.5254630872181484, 0.5206485986709595, 0.5191114630017962, 0.5145711558205741, 0.5119736364909581, 0.5045775685991559, 0.5029393775122506, 0.5029394626617432, 0.49443680899483816, 0.49514549119131906, 0.49143528938293457, 0.4880652938570295], "val_accuracy": [0.37299999594688416, 0.4896666705608368, 0.5443333387374878, 0.5763333439826965, 0.643666684627533, 0.6803333163261414, 0.687666654586792, 0.7126666903495789, 0.7196666598320007, 0.7253333330154419, 0.7236666679382324, 0.7263333201408386, 0.7480000257492065, 0.7586666941642761, 0.7556666731834412, 0.7546666860580444, 0.7609999775886536, 0.762333333492279, 0.7596666812896729, 0.7743333578109741, 0.7739999890327454, 0.7746666669845581, 0.7710000276565552, 0.7806666493415833, 0.784333348274231, 0.7823333144187927, 0.7850000262260437, 0.7876666784286499, 0.7863333225250244, 0.7979999780654907, 0.7873333096504211, 0.7946666479110718, 0.7913333177566528, 0.7850000262260437, 0.7953333258628845]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 4, 3, 2, 6, 1, 9, 9, 3, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 0, 0, 2, 2, 3, 0, 0], [32, 33, 2, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.7068571448326111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.258337247861359, 1.8143473524758214, 1.3707953617793536, 0.9638056058720543, 0.8723578308126505, 0.8300328951989813, 0.7751552450453774, 0.7681346680935048, 0.7130693235984331, 0.6725157777379139, 0.6453469360918653, 0.6269996572306065, 0.6098189977937607, 0.6021884971165056, 0.584317287937714, 0.5769855618917742, 0.5525246519989514, 0.5486458474618884, 0.5333572355605954, 0.5155289550861111, 0.5081944920603846, 0.5031950283658314, 0.4985044210058839, 0.4813477285565512, 0.4785743016671385, 0.4715548871436123, 0.4737140040875678, 0.4548647074438971], "accuracy": [0.19363360106945038, 0.42847707867622375, 0.5551446080207825, 0.6458855867385864, 0.6775855422019958, 0.7020208835601807, 0.6977941989898682, 0.718399167060852, 0.7337207794189453, 0.7448157668113708, 0.7563069462776184, 0.7637035846710205, 0.7717606425285339, 0.763439416885376, 0.783119797706604, 0.7824593782424927, 0.7858935594558716, 0.7898560166358948, 0.7891955971717834, 0.805177628993988, 0.8084797263145447, 0.8055738806724548, 0.8115176558494568, 0.8129705190658569, 0.8149517774581909, 0.8207634687423706, 0.8183859586715698, 0.8276317715644836], "val_loss": [1.805922508239746, 0.9446934291294643, 0.6697556972503662, 0.7213726384299142, 0.5937111377716064, 0.5598027535847255, 0.5841887678418841, 0.5347523008074079, 0.5027694191251483, 0.48980826990945, 0.4842515672956194, 0.4716585533959525, 0.45347911970955984, 0.43921944073268343, 0.42638570070266724, 0.43447991779872347, 0.42892950773239136, 0.4160495230129787, 0.40575586897986277, 0.41629633733204435, 0.3937706691878183, 0.4021708880152021, 0.3863147667476109, 0.4023604818752834, 0.4029626335416521, 0.38650905234473093, 0.38997435569763184, 0.3952370115688869], "val_accuracy": [0.44566667079925537, 0.6430000066757202, 0.7039999961853027, 0.7226666808128357, 0.7350000143051147, 0.749666690826416, 0.762333333492279, 0.7646666765213013, 0.7886666655540466, 0.7889999747276306, 0.7876666784286499, 0.7913333177566528, 0.8080000281333923, 0.8033333420753479, 0.8096666932106018, 0.8063333630561829, 0.8159999847412109, 0.8106666803359985, 0.8223333358764648, 0.8266666531562805, 0.8299999833106995, 0.8316666483879089, 0.8403333425521851, 0.8246666789054871, 0.8320000171661377, 0.8353333473205566, 0.8330000042915344, 0.8336666822433472]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [91, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.5357142686843872, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 8, 5, 6, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021579375750103, 2.2999948203807747, 2.298173231581624, 2.297019681847406, 2.2946563878032307, 2.293530823642457, 2.292048514464024, 2.2898349288652726, 2.2887970510648303, 2.2865370855418337, 2.2846791675266824, 2.283977403931724, 2.2842708167430197, 2.2814436108759604, 2.2800779245029177, 2.279209519925292, 2.2776217853955276, 2.27459434120804, 2.2709175419923953, 2.2706601212541457, 2.2693257942459195, 2.267908207130407, 2.266491120470324, 2.264657739068161, 2.260696330799198, 2.2611514372265713, 2.2596895539796806, 2.2574141314001035, 2.2560348070497604, 2.253276317882626, 2.252234911449424, 2.249862211664764, 2.2478945830305728, 2.2453316726137884, 2.2444342455891033, 2.2432579716450785, 2.2429597456189763, 2.237683618671748, 2.236360641723107, 2.2358448110819023, 2.233140105600323, 2.229786381666702, 2.229119054802877, 2.225428830111394, 2.22432777233222, 2.221301575032019, 2.219144695265859, 2.2178943947935776, 2.2157922377124706, 2.212292245350431, 2.209566514505576, 2.20849135850698, 2.205975197971048, 2.201286670475462, 2.199706387321443, 2.19761924053369, 2.1951017199002236, 2.1917412346852627, 2.1895470628334057, 2.1837003089024045, 2.1828583364772634, 2.180500972949597, 2.175600172679469, 2.1740039914685028, 2.1704383329110075, 2.166228598764843, 2.1637864411388956, 2.1587077852379393, 2.155951171015169, 2.152507862001126, 2.1492317123120848, 2.1453424503995033, 2.1426782160859617, 2.137305350493226, 2.1356927296740897, 2.1308355298985138, 2.124267776235062, 2.1207968923850635, 2.115686601887699, 2.1127414552527113, 2.107267811156346, 2.1050929222061585, 2.1012511384044705, 2.0962624518689603, 2.092026454708627, 2.085062593217728, 2.0811054420005126, 2.074050166902604, 2.0694299284587716, 2.0666816712937353, 2.061303083749574, 2.055361385689341, 2.04906499409452, 2.041160698501331, 2.037559908394643, 2.031433162561985, 2.027542755509632, 2.021358019451282, 2.017126590253623, 2.01088726739401], "accuracy": [0.09140139818191528, 0.09866596013307571, 0.09747721254825592, 0.10487385839223862, 0.10447761416435242, 0.11094967275857925, 0.11821424216032028, 0.1220446452498436, 0.11979923397302628, 0.1310262829065323, 0.13247919082641602, 0.13419628143310547, 0.13617752492427826, 0.1438383311033249, 0.1488574892282486, 0.1546691358089447, 0.149649977684021, 0.1574428677558899, 0.17170783877372742, 0.17884030938148499, 0.17553824186325073, 0.18359529972076416, 0.18161405622959137, 0.19178444147109985, 0.1954827606678009, 0.19944524765014648, 0.20076608657836914, 0.20737022161483765, 0.2082948088645935, 0.21555937826633453, 0.21938978135585785, 0.2250693440437317, 0.2312772423028946, 0.2351076453924179, 0.23537181317806244, 0.23999471962451935, 0.23576806485652924, 0.24818386137485504, 0.25584468245506287, 0.25122177600860596, 0.2546559274196625, 0.2642979919910431, 0.26601505279541016, 0.26997753977775574, 0.26826047897338867, 0.2759212851524353, 0.2810725271701813, 0.2829216718673706, 0.28041210770606995, 0.2903183102607727, 0.2896578907966614, 0.29745081067085266, 0.2950733006000519, 0.2977149784564972, 0.31145158410072327, 0.3027341067790985, 0.30841368436813354, 0.31581032276153564, 0.3147536516189575, 0.32465988397598267, 0.3280940353870392, 0.32201823592185974, 0.32981112599372864, 0.3283582031726837, 0.32703739404678345, 0.3369435966014862, 0.33060362935066223, 0.3471139967441559, 0.34183067083358765, 0.35081231594085693, 0.35239729285240173, 0.3498877286911011, 0.35543522238731384, 0.3539822995662689, 0.3567560315132141, 0.3630960285663605, 0.3677189350128174, 0.37247392535209656, 0.37287017703056335, 0.3699643313884735, 0.3774930536746979, 0.3757759928703308, 0.37670058012008667, 0.38541802763938904, 0.38462555408477783, 0.3819838762283325, 0.37247392535209656, 0.3928146958351135, 0.39400342106819153, 0.39162594079971313, 0.39004093408584595, 0.3910976052284241, 0.39941883087158203, 0.4103817343711853, 0.4029850661754608, 0.4049663245677948, 0.4021925628185272, 0.40483424067497253, 0.41249504685401917, 0.41024965047836304], "val_loss": [1.9690515654427665, 1.9675354276384627, 1.9660248756408691, 1.9645068986075265, 1.9630008425031389, 1.961495808192662, 1.9600238800048828, 1.9585355349949427, 1.9570385387965612, 1.9555348668779646, 1.9540326935904366, 1.9525288854326521, 1.9510462624686105, 1.9495342118399483, 1.948025907788958, 1.946517058781215, 1.9450018746512276, 1.9434550149100167, 1.9419153077261788, 1.940363883972168, 1.938805307660784, 1.9372383526393346, 1.9356559344700404, 1.9340485845293318, 1.9324161665780204, 1.930788312639509, 1.9291485377720423, 1.9274962970188685, 1.9258108139038086, 1.92411892754691, 1.9224071502685547, 1.920651640210833, 1.9188758305140905, 1.9170570373535156, 1.9152405602591378, 1.9133946555001395, 1.9115479333060128, 1.9096403121948242, 1.9077021053859167, 1.9057395798819405, 1.903735569545201, 1.9016968182155065, 1.8996332713535853, 1.8975332123892648, 1.8953945977347237, 1.8932334354945592, 1.8910438673836845, 1.8888057981218611, 1.8865200451442175, 1.884195327758789, 1.8818306922912598, 1.879446029663086, 1.8769937242780412, 1.8744676453726632, 1.8719058718000139, 1.869345256260463, 1.8667003086635046, 1.8640035901750838, 1.8612452915736608, 1.858410154070173, 1.85554381779262, 1.8526348386492049, 1.8496223177228654, 1.8465869767325265, 1.8434523854936873, 1.840263502938407, 1.8370366777692522, 1.8337186404636927, 1.8303215844290597, 1.8268495287214006, 1.8233348301478796, 1.819768020084926, 1.8161273683820451, 1.812375204903739, 1.808591365814209, 1.8047387940543038, 1.8007441248212541, 1.7967246600559779, 1.7926197052001953, 1.7884187017168318, 1.7841642243521554, 1.7798689433506556, 1.7754987989153181, 1.7710223197937012, 1.766493456704276, 1.7618281500680106, 1.757118088858468, 1.7522407259259904, 1.7473231724330358, 1.7423320497785295, 1.737257412501744, 1.7320642471313477, 1.7268026215689523, 1.72140714100429, 1.7159573691231864, 1.7103967666625977, 1.7047697816576277, 1.699044840676444, 1.6932878153664725, 1.6874281678880965], "val_accuracy": [0.04933333396911621, 0.05966666713356972, 0.06700000166893005, 0.0793333351612091, 0.09300000220537186, 0.11166666448116302, 0.12566666305065155, 0.13833333551883698, 0.15333333611488342, 0.16966666281223297, 0.18566666543483734, 0.20200000703334808, 0.21466666460037231, 0.2253333330154419, 0.23766666650772095, 0.25066667795181274, 0.2643333375453949, 0.2763333320617676, 0.2893333435058594, 0.2983333468437195, 0.30933332443237305, 0.31700000166893005, 0.32633334398269653, 0.3356666564941406, 0.3453333377838135, 0.3513333201408386, 0.3566666543483734, 0.3616666793823242, 0.36399999260902405, 0.36766666173934937, 0.37033334374427795, 0.3773333430290222, 0.3816666603088379, 0.382999986410141, 0.3853333294391632, 0.3903333246707916, 0.3946666717529297, 0.39766666293144226, 0.40166667103767395, 0.4050000011920929, 0.4073333442211151, 0.4099999964237213, 0.4129999876022339, 0.4163333475589752, 0.4216666519641876, 0.42500001192092896, 0.42933332920074463, 0.43066665530204773, 0.4339999854564667, 0.43666666746139526, 0.4386666715145111, 0.44066667556762695, 0.4416666626930237, 0.44466665387153625, 0.4463333189487457, 0.44999998807907104, 0.45233333110809326, 0.4546666741371155, 0.45766666531562805, 0.4593333303928375, 0.4623333215713501, 0.4663333296775818, 0.46799999475479126, 0.46966665983200073, 0.47333332896232605, 0.4749999940395355, 0.476666659116745, 0.4790000021457672, 0.4806666672229767, 0.48399999737739563, 0.4860000014305115, 0.4869999885559082, 0.4893333315849304, 0.4906666576862335, 0.4933333396911621, 0.4963333308696747, 0.49666666984558105, 0.4976666569709778, 0.49966666102409363, 0.5026666522026062, 0.5070000290870667, 0.5090000033378601, 0.5096666812896729, 0.5130000114440918, 0.515333354473114, 0.5189999938011169, 0.5213333368301392, 0.5230000019073486, 0.5256666541099548, 0.528333306312561, 0.5306666493415833, 0.5326666831970215, 0.5329999923706055, 0.5333333611488342, 0.5370000004768372, 0.5373333096504211, 0.5383333563804626, 0.5389999747276306, 0.5419999957084656, 0.5426666736602783]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 4, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.3382857143878937, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4033669908647255, 2.266003269482251, 2.509600252601937, 2.2103501194739907, 2.305349599604971, 2.3034649697340175, 2.3031046073103876], "accuracy": [0.20618148148059845, 0.14542332291603088, 0.15097081661224365, 0.19495442509651184, 0.09945846349000931, 0.09998679161071777, 0.1026284471154213], "val_loss": [1.9756300108773368, 1.6674622467585973, 1.8320421491350447, 1.9773714882986886, 1.9742735454014368, 1.973771367754255, 1.9735525676182337], "val_accuracy": [0.10233332961797714, 0.33533334732055664, 0.2290000021457672, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 3, 1, 3, 0, 0], [32, 33, 2, 15, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 40, 50, 71, 34]], "fitness": -0.3382857143878937, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4033669908647255, 2.266003269482251, 2.509600252601937, 2.2103501194739907, 2.305349599604971, 2.3034649697340175, 2.3031046073103876], "accuracy": [0.20618148148059845, 0.14542332291603088, 0.15097081661224365, 0.19495442509651184, 0.09945846349000931, 0.09998679161071777, 0.1026284471154213], "val_loss": [1.9756300108773368, 1.6674622467585973, 1.8320421491350447, 1.9773714882986886, 1.9742735454014368, 1.973771367754255, 1.9735525676182337], "val_accuracy": [0.10233332961797714, 0.33533334732055664, 0.2290000021457672, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 8, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 3, 2, 1, 3, 0, 0], [85, 33, 2, 82, 58, 7], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [3, 4], [8], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [83, 25, 61, 71, 34]], "fitness": -0.3034285604953766, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 4, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4152744297558653, 2.283427760270703, 2.5839578077510015, 2.3061687633613666, 2.303604100374356, 2.3030909120823964, 2.3030008096358623], "accuracy": [0.20578522980213165, 0.14093250036239624, 0.14872540533542633, 0.09642054885625839, 0.09576013684272766, 0.09893012791872025, 0.09694888442754745], "val_loss": [1.975897993360247, 1.653376545224871, 1.9774377005440849, 1.9740618297031947, 1.9737161908830916, 1.9736336980547224, 1.973510469709124], "val_accuracy": [0.10233332961797714, 0.3230000138282776, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 2, 71, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 4, 1, 1, 0, 1, 0, 12, 6, 6, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [58, 16, 15, 82, 91, 78, 31], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 8, 9, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 7, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5.21474335899348, 31.559054671844173, 97.31591788611755, 215.88504218173426, 406.9253887820946, 693.4676659508089], "accuracy": [0.09945846349000931, 0.10659094154834747, 0.10302469879388809, 0.10434553027153015, 0.10157178342342377, 0.09813763201236725], "val_loss": [9.863481521606445, 39.283865792410715, 98.21781921386719, 197.5290309361049, 349.62794712611606, 568.1060442243304], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 3, 2, 6, 0, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 50, 7], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [4, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 4, 3, 3, 1, 2, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [43, 33, 2, 82, 91, 78], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 6, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10830801725387573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 2, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 7], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [5, 3, 8, 9, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028268519330886, 2.3022750067342432, 2.302045765648649, 2.3025317586345317, 2.3017917261021625, 2.3022360272332585], "accuracy": [0.08994849026203156, 0.09272222965955734, 0.08757099509239197, 0.08968432247638702, 0.08730682730674744, 0.09047681838274002], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [43, 33, 2, 82, 91, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [3, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3028268519330886, 2.3022750067342432, 2.302045765648649, 2.3025317586345317, 2.3017917261021625, 2.3022360272332585], "accuracy": [0.08994849026203156, 0.09272222965955734, 0.08757099509239197, 0.08968432247638702, 0.08730682730674744, 0.09047681838274002], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 3, 2, 6, 4, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.02914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 6, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.6269875385222448, 3.2608964907699463, 2.5293944627381175, 2.473820464076651, 2.5306150108327827, 2.5360190683525348, 2.584483230118707, 3.655996775441339], "accuracy": [0.20221899449825287, 0.11319508403539658, 0.09932637959718704, 0.09787346422672272, 0.10394927859306335, 0.1010434553027153, 0.09536388516426086, 0.10117553919553757], "val_loss": [4.3080306734357565, 2.114372594015939, 2.213458606175014, 2.2443839481898715, 2.1383232389177596, 2.171459879193987, 2.2570604596819197, 2.1097343989780972], "val_accuracy": [0.10233332961797714, 0.09833333641290665, 0.10400000214576721, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.09733333438634872, 0.10233332961797714]}}]