[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.7851428389549255, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [2.1057978224650413, 1.365637308318995, 1.1235820320319851, 0.9467825858253829, 0.8815635052717373, 0.8032545701088513, 0.7535054557563733, 0.7298582479891099, 0.7206181564886557, 0.7270697037289723, 0.6713624955908403, 0.6602704610885678, 0.6609042499594764, 0.6655079352227437, 0.630957387008876, 0.6187741469634664, 0.5917363887008911, 0.5917007012799306, 0.6210408176822811, 0.5787844271896664, 0.5753014836061302], "accuracy": [0.3129045069217682, 0.5221238732337952, 0.6016378402709961, 0.6483951807022095, 0.6733588576316833, 0.6975300312042236, 0.7190595865249634, 0.7257958054542542, 0.728701651096344, 0.7214370369911194, 0.7531369924545288, 0.750231146812439, 0.7500990629196167, 0.7458723783493042, 0.7644960880279541, 0.772288978099823, 0.7835160493850708, 0.7824593782424927, 0.7623828053474426, 0.7877426743507385, 0.7799497842788696], "val_loss": [1.2236078466687883, 0.8121118375233242, 0.7409118754523141, 0.6583351578031268, 0.5889522688729423, 0.6076656239373344, 0.5472484145845685, 0.5667105742863247, 0.539339508329119, 0.5408531427383423, 0.49204845087868826, 0.5040338039398193, 0.4945603438786098, 0.4827601739338466, 0.49271024976457867, 0.4597407068525042, 0.46484826292310444, 0.49923302446092876, 0.4725679840360369, 0.48565828800201416, 0.45790429626192364], "val_accuracy": [0.57833331823349, 0.6740000247955322, 0.6613333225250244, 0.721666693687439, 0.7450000047683716, 0.7263333201408386, 0.75, 0.7369999885559082, 0.7476666569709778, 0.7536666393280029, 0.7863333225250244, 0.7649999856948853, 0.7829999923706055, 0.777999997138977, 0.7856666445732117, 0.8040000200271606, 0.8009999990463257, 0.778333306312561, 0.7770000100135803, 0.7773333191871643, 0.8006666898727417]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4], [0, 3, 3, 2, 3, 1, 2, 0, 0, 2], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1], [0, 3], [3, 0], [87]], "fitness": -0.2522857189178467, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.8569747142630515, 2.211033829514062, 2.2969712091553496, 2.303043748314953, 2.303133387937837, 2.2769623274469986, 2.3712341134826254], "accuracy": [0.19099193811416626, 0.16061286628246307, 0.11610091477632523, 0.10394927859306335, 0.09774138033390045, 0.13895125687122345, 0.10751552134752274], "val_loss": [1.9757330758231026, 1.6392013004847936, 1.9738121713910783, 1.9736969130379813, 1.9729320662362235, 2.115065438406808, 1.9754398209708077], "val_accuracy": [0.10000000149011612, 0.2356666624546051, 0.10233332961797714, 0.10400000214576721, 0.10233332961797714, 0.13899999856948853, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 1], [3, 3, 3, 1, 2, 1, 2, 0, 0, 0], [69, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 4], [3, 1, 3, 1], [45, 38]], "fitness": -0.2491428554058075, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8571995604921563, 2.3036666369283867, 2.304361341116435, 2.3029031114587064, 2.290844418636922, 2.21561989597184, 2.2791568338595454, 2.3039524213843547, 2.3037421971327277, 2.303154781494221], "accuracy": [0.190859854221344, 0.09774138033390045, 0.0940430611371994, 0.1014397069811821, 0.11438383162021637, 0.16853784024715424, 0.15374454855918884, 0.10408136248588562, 0.09602430462837219, 0.09906221181154251], "val_loss": [1.9786975724356515, 1.9737228666033064, 1.9737450735909599, 1.9728131975446428, 1.697378192629133, 1.9695395742143904, 1.9745759282793318, 1.9739855357578822, 1.9736542701721191, 1.9736992291041784], "val_accuracy": [0.10000000149011612, 0.10400000214576721, 0.0976666659116745, 0.10233332961797714, 0.24433332681655884, 0.11233333498239517, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 0, 4, 9, 6, 4, 5, 9, 6, 1, 7, 1, 6, 7, 4, 2, 0, 4, 9, 3, 1, 0, 6, 3, 7, 7, 9, 0, 4, 7, 1, 4, 4, 7, 1, 2, 1, 1, 5, 5, 1, 3, 6, 9, 0, 4, 6, 7, 5, 5, 0, 1, 1, 1, 8, 0, 2, 0, 5, 0, 9, 4, 6, 7, 5, 1, 6, 5], [2, 1, 2, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57, 42, 27, 0, 44, 42, 35, 73, 42, 46, 86, 85, 6, 20, 59, 93, 8], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3, 1, 3, 1, 0, 1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [7], [], [0, 1, 0, 1, 0, 1], [0, 3], [3, 0, 0], [45, 11]], "fitness": -0.2491428554058075, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8571995604921563, 2.3036666369283867, 2.304361341116435, 2.3029031114587064, 2.290844418636922, 2.21561989597184, 2.2791568338595454, 2.3039524213843547, 2.3037421971327277, 2.303154781494221], "accuracy": [0.190859854221344, 0.09774138033390045, 0.0940430611371994, 0.1014397069811821, 0.11438383162021637, 0.16853784024715424, 0.15374454855918884, 0.10408136248588562, 0.09602430462837219, 0.09906221181154251], "val_loss": [1.9786975724356515, 1.9737228666033064, 1.9737450735909599, 1.9728131975446428, 1.697378192629133, 1.9695395742143904, 1.9745759282793318, 1.9739855357578822, 1.9736542701721191, 1.9736992291041784], "val_accuracy": [0.10000000149011612, 0.10400000214576721, 0.0976666659116745, 0.10233332961797714, 0.24433332681655884, 0.11233333498239517, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [8, 6, 4, 6], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [27, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [7], [], [0, 1, 0, 1, 0, 1], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 11]], "fitness": -0.2491428554058075, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8571995604921563, 2.3036666369283867, 2.304361341116435, 2.3029031114587064, 2.290844418636922, 2.21561989597184, 2.2791568338595454, 2.3039524213843547, 2.3037421971327277, 2.303154781494221], "accuracy": [0.190859854221344, 0.09774138033390045, 0.0940430611371994, 0.1014397069811821, 0.11438383162021637, 0.16853784024715424, 0.15374454855918884, 0.10408136248588562, 0.09602430462837219, 0.09906221181154251], "val_loss": [1.9786975724356515, 1.9737228666033064, 1.9737450735909599, 1.9728131975446428, 1.697378192629133, 1.9695395742143904, 1.9745759282793318, 1.9739855357578822, 1.9736542701721191, 1.9736992291041784], "val_accuracy": [0.10000000149011612, 0.10400000214576721, 0.0976666659116745, 0.10233332961797714, 0.24433332681655884, 0.11233333498239517, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [8, 6, 4, 6], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [4, 0, 6, 1, 1, 8, 4, 4, 4, 3, 9, 5, 5, 2, 5, 2, 4, 4, 2, 5, 1, 7, 8], [3, 2, 2, 3, 2, 0, 2, 1, 4, 1, 3, 2, 1, 3, 5], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 0, 1, 0, 1], [0, 3, 3], [3, 0, 0], [45]], "fitness": -0.2491428554058075, "mapping_values": [1, 1, 1, 0, 1, 0, 38, 38, 23, 15, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.pow(grad, beta), tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(beta, beta)))), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))), tf.math.pow(tf.math.pow(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta)))))), alpha), grad), tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8571995604921563, 2.3036666369283867, 2.304361341116435, 2.3029031114587064, 2.290844418636922, 2.21561989597184, 2.2791568338595454, 2.3039524213843547, 2.3037421971327277, 2.303154781494221], "accuracy": [0.190859854221344, 0.09774138033390045, 0.0940430611371994, 0.1014397069811821, 0.11438383162021637, 0.16853784024715424, 0.15374454855918884, 0.10408136248588562, 0.09602430462837219, 0.09906221181154251], "val_loss": [1.9786975724356515, 1.9737228666033064, 1.9737450735909599, 1.9728131975446428, 1.697378192629133, 1.9695395742143904, 1.9745759282793318, 1.9739855357578822, 1.9736542701721191, 1.9736992291041784], "val_accuracy": [0.10000000149011612, 0.10400000214576721, 0.0976666659116745, 0.10233332961797714, 0.24433332681655884, 0.11233333498239517, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0], [5, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 2, 3, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [1, 70], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 6], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 4, 0, 8, 0], [3, 1, 3, 1], [45, 38]], "fitness": -0.11457142978906631, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 7, 5, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(sigma), tf.math.sqrt(tf.math.negative(alpha))))", "other_info": {"loss": [2.4285650326984904, 2.4484743445603887, 2.452707258906457, 2.448876204822577, 2.441379178012792, 2.4551060051414804], "accuracy": [0.12851670384407043, 0.1340641975402832, 0.13459251821041107, 0.13274335861206055, 0.13551710546016693, 0.13195087015628815], "val_loss": [2.0291737147739957, 2.02917412349156, 2.02917412349156, 2.02917412349156, 2.02917412349156, 2.02917412349156], "val_accuracy": [0.10966666787862778, 0.10966666787862778, 0.10966666787862778, 0.10966666787862778, 0.10966666787862778, 0.10966666787862778]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0], [6, 8, 4, 9], [3, 1, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 9, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 3, 3, 0, 1, 1, 0, 0, 0], [69, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 1, 1, 1], [2, 3], [3, 0], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07092854380607605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 9, 3, 2, 8], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.pow(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029607950562516, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [5, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 9, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 1, 0, 1, 2, 0, 0, 0], [1, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [2, 0], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [1, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 1, 0, 4, 5], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 10, 6, 4, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(sigma, tf.math.negative(tf.math.pow(alpha, tf.math.square(sigma)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 6, 4, 9], [2, 2, 2, 3], [44, 57, 44, 27, 0, 94, 42, 86, 73, 42, 21, 46, 85, 6, 20, 75], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 2, 3, 2, 4, 1], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 4], [1, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(beta, tf.math.square(tf.math.add(beta, grad)))))))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 6, 6, 2, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [64, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 3, 3, 6, 6, 0], [3, 1, 3, 1, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 11, 6, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, sigma), alpha)), tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08109892904758453, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [6, 6, 4, 9, 2, 9], [3, 2, 2, 3], [44, 57], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [8, 6, 6, 1, 1, 8, 4, 5], [3, 5, 2, 2, 2, 5, 0], [1, 41], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [0, 4], [2, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 14, 14, 8, 6, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(beta))))), beta)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 2, 0, 1, 2, 0, 0, 2], [1, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 4, 7, 4, 2, 8, 2, 5, 2, 5, 8, 1], [3, 1, 3, 1, 1, 2, 2, 0], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 18, 11, 7, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.math.add(tf.math.pow(tf.math.add(alpha, sigma), alpha), tf.math.sqrt(tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.square(beta), tf.math.sqrt(beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [8, 6, 4, 6], [2, 2, 2, 3], [44, 57], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 0, 6, 4, 9], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 6], [], [0, 1, 0, 1, 0, 1, 0, 0, 1], [6, 3, 3, 6, 9], [3, 0, 0, 1], [45, 11, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 7, 5, 2, 5, 4, 2, 2, 0, 9, 5, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), grad)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 2, 5, 2, 2, 4, 5, 8, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 2, 0, 1, 2, 0, 0, 2], [1, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 3, 3, 8, 4, 5, 9], [3, 3, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 10, 7, 3, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.sqrt(tf.math.pow(sigma, tf.math.square(alpha)))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1], [5, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 2, 5, 2, 2, 4, 5, 8, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 2, 0, 1, 2, 0, 0, 2], [1, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0], [3, 3, 6, 8], [4], [], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301832731515504, 2.302316019579467, 2.3020877395685813, 2.3007717728378623, 2.301558305275297, 2.3023987201541534], "accuracy": [0.09179764986038208, 0.09087307006120682, 0.08915598690509796, 0.09153348207473755, 0.08836349099874496, 0.09166556596755981], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 2, 5, 2, 2, 4, 5, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [1, 71, 49, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [3, 3, 2, 6, 0], [3, 1, 0, 1], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301832731515504, 2.302316019579467, 2.3020877395685813, 2.3007717728378623, 2.301558305275297, 2.3023987201541534], "accuracy": [0.09179764986038208, 0.09087307006120682, 0.08915598690509796, 0.09153348207473755, 0.08836349099874496, 0.09166556596755981], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 5], [], [0, 0, 1, 1, 1], [7, 3], [3, 1, 3, 1], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 2, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, alpha), sigma)", "other_info": {"loss": [2.301832731515504, 2.302316019579467, 2.3020877395685813, 2.3007717728378623, 2.301558305275297, 2.3023987201541534], "accuracy": [0.09179764986038208, 0.09087307006120682, 0.08915598690509796, 0.09153348207473755, 0.08836349099874496, 0.09166556596755981], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]