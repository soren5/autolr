[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.767714262008667, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2939170735497374, 2.2724979414427837, 2.2491745481779546, 2.222614301115436, 2.187500271358195, 2.1449098958315362, 2.0916582754558624, 2.0178418487778838, 1.9419767378878994, 1.8339697778689439, 1.7370060009333468, 1.6212205453209354, 1.528592011428166, 1.4544970200377023, 1.3683403469804192, 1.3162824806520228, 1.263909728267898, 1.2224559732762625, 1.1849469847415244, 1.1496899770849558, 1.1151069530548279, 1.0903271018962788, 1.06134967091628, 1.0305502775118194, 1.016959494587736, 0.9941548510565182, 0.9721053991146438, 0.9607328579741037, 0.9558193486569155, 0.9418980950188753, 0.9268030963081332, 0.9169123780536865, 0.893968906999028, 0.8860648519972989, 0.8789842503811816, 0.8730348904591667, 0.8655316734027396, 0.8634436654613129, 0.8547105874682713, 0.850758492127858, 0.8330293649050066, 0.8340728684360357, 0.8229886429531227, 0.8150443010058748, 0.8071586456848032, 0.8217105118826222, 0.8077332278709402, 0.8032107133245613, 0.7915573581224576, 0.7859537538961255, 0.7698677497107859, 0.781994324452558, 0.7797146029460384, 0.7746465906821631, 0.7700961602913501, 0.7668162762229123, 0.7623972174057225, 0.7638070649789577, 0.7505081779748032, 0.7566492965334458, 0.7557749216267776, 0.7396334450809537, 0.7370118506989852, 0.7322383978662552, 0.7464818581220355, 0.7366003307132925, 0.7167659273174035, 0.724904697891775, 0.7182875299072694, 0.7225700152973693, 0.7236647561966011, 0.72635274290204], "accuracy": [0.10711926966905594, 0.16800950467586517, 0.22559767961502075, 0.27341169118881226, 0.3245278000831604, 0.354510635137558, 0.3747193217277527, 0.40443798899650574, 0.42306166887283325, 0.4558182656764984, 0.46664905548095703, 0.48527276515960693, 0.5134063959121704, 0.5221238732337952, 0.5461629629135132, 0.549068808555603, 0.5671641826629639, 0.5773345828056335, 0.5900145173072815, 0.6029586791992188, 0.611411988735199, 0.6207898855209351, 0.6281865239143372, 0.6379606127738953, 0.6432439684867859, 0.6503764390945435, 0.6547351479530334, 0.6600185036659241, 0.654999315738678, 0.6646413803100586, 0.6682076454162598, 0.6692643165588379, 0.6773213744163513, 0.681547999382019, 0.6790384650230408, 0.687491774559021, 0.6919825673103333, 0.6905296444892883, 0.6948884129524231, 0.6857746839523315, 0.6964733600616455, 0.6977941989898682, 0.6980583667755127, 0.7069079279899597, 0.7055870890617371, 0.7099458575248718, 0.7092854380607605, 0.7087571024894714, 0.7121912837028503, 0.7073041796684265, 0.7206445932388306, 0.7143045663833618, 0.7174745798110962, 0.7173424959182739, 0.7218332886695862, 0.7202483415603638, 0.724739134311676, 0.7246070504188538, 0.7293620109558105, 0.7263241410255432, 0.7251353859901428, 0.7347774505615234, 0.728701651096344, 0.7300224304199219, 0.7190595865249634, 0.7358341217041016, 0.7427024245262146, 0.735041618347168, 0.7390040755271912, 0.7342491149902344, 0.7329282760620117, 0.7322678565979004], "val_loss": [1.951131956917899, 1.930443218776158, 1.9068629401070731, 1.8776679039001465, 1.840336731501988, 1.7920937538146973, 1.7306924547467912, 1.65399854523795, 1.5641558851514543, 1.4613406317574638, 1.3560713359287806, 1.250201599938529, 1.1555236748286657, 1.076000111443656, 1.0064843722752161, 0.948239973613194, 0.9022278785705566, 0.8635761737823486, 0.8305707318442208, 0.8035862616130284, 0.7779613392693656, 0.7591037579945156, 0.7395388909748623, 0.7225015504019601, 0.7093068190983364, 0.6960706029619489, 0.6835559265954154, 0.674471208027431, 0.6677417244229998, 0.6567081553595406, 0.6493159362248012, 0.6412100791931152, 0.6337941033499581, 0.6270773921694074, 0.6208595548357282, 0.61518623147692, 0.6105106387819562, 0.6061607088361468, 0.60031601360866, 0.5972961017063686, 0.5936259882790702, 0.588631306375776, 0.5865381274904523, 0.5806280033929008, 0.5792289631707328, 0.5757413591657367, 0.5736814907618931, 0.5707487549100604, 0.5669300726481846, 0.5639257601329258, 0.5601943390710014, 0.5578181403023856, 0.5554990598133632, 0.5550009693418231, 0.549819997378758, 0.5472245216369629, 0.5470653772354126, 0.5445262534277779, 0.541698864528111, 0.5386036123548236, 0.5373821088245937, 0.5343395130974906, 0.5319929633821759, 0.5300991875784737, 0.5289762701307025, 0.527604375566755, 0.5257909638541085, 0.5233280318123954, 0.5213755198887416, 0.5218114682606289, 0.5186838252203805, 0.5190739291054862], "val_accuracy": [0.21066667139530182, 0.34933334589004517, 0.4013333320617676, 0.4449999928474426, 0.4740000069141388, 0.4963333308696747, 0.5236666798591614, 0.5463333129882812, 0.5633333325386047, 0.5803333520889282, 0.5933333039283752, 0.6050000190734863, 0.6273333430290222, 0.6443333625793457, 0.6679999828338623, 0.6746666431427002, 0.6850000023841858, 0.6916666626930237, 0.6956666707992554, 0.70333331823349, 0.7043333053588867, 0.7049999833106995, 0.715666651725769, 0.7163333296775818, 0.7089999914169312, 0.7213333249092102, 0.7283333539962769, 0.7273333072662354, 0.7279999852180481, 0.7303333282470703, 0.7350000143051147, 0.7350000143051147, 0.734666645526886, 0.737333357334137, 0.7396666407585144, 0.7456666827201843, 0.7426666617393494, 0.7436666488647461, 0.7440000176429749, 0.7436666488647461, 0.7493333220481873, 0.7476666569709778, 0.7493333220481873, 0.7486666440963745, 0.7536666393280029, 0.7570000290870667, 0.7553333044052124, 0.7593333125114441, 0.753333330154419, 0.762666642665863, 0.753333330154419, 0.762333333492279, 0.762666642665863, 0.7609999775886536, 0.765333354473114, 0.7673333287239075, 0.7599999904632568, 0.7663333415985107, 0.7699999809265137, 0.768666684627533, 0.7713333368301392, 0.7710000276565552, 0.7720000147819519, 0.7713333368301392, 0.7716666460037231, 0.7739999890327454, 0.7760000228881836, 0.7736666798591614, 0.7753333449363708, 0.7760000228881836, 0.7756666541099548, 0.7710000276565552]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 2, 8, 1, 2, 6, 4, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7674285769462585, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2939170735497374, 2.272497873989, 2.2491741478325054, 2.2226144900616087, 2.1875025384288502, 2.1449106381065763, 2.0916587837840495, 2.017843328856238, 1.9419812546619066, 1.8339767914721523, 1.737005510917193, 1.621215346356771, 1.5285894807776, 1.4544967581583068, 1.3683415183364722, 1.316282936279973, 1.263924988725985, 1.222472031339127, 1.1849989112279105, 1.1497168761706702, 1.1151758897038435, 1.0903631959845126, 1.061381927649453, 1.030566284858382, 1.0169552848670051, 0.9941434014223003, 0.9721085961941069, 0.960736126286274, 0.9558014492978509, 0.9418942727480173, 0.9268098894347762, 0.9169211675226098, 0.8939941759595089, 0.8860460890125148, 0.878977484832807, 0.8730263300559871, 0.8655072758383896, 0.8634139448266539, 0.8547335612838451, 0.8507268937067696, 0.8330556776750011, 0.8340683294293619, 0.822983620779594, 0.8150448002725182, 0.807194505566383, 0.8217127930533853, 0.8077410013605465, 0.8032322374742422, 0.791615773579385, 0.785940927056872, 0.7698605870369198, 0.7820015686803159, 0.7797226818986241, 0.7746151177528244, 0.7700680635624464, 0.7668446439006278, 0.7623823896973534, 0.7637995987473194, 0.750509463832237, 0.7566569082930009, 0.7557733248033072, 0.7396259273536107, 0.7370050451176403, 0.7322653569423795, 0.7464579178782785, 0.7365454137758288, 0.7168055219247813, 0.7249230841572541, 0.7183836204437862, 0.7225321152537427, 0.7237126600110945, 0.726389845309398], "accuracy": [0.10711926966905594, 0.16800950467586517, 0.22559767961502075, 0.27341169118881226, 0.32465988397598267, 0.3547748029232025, 0.3747193217277527, 0.40443798899650574, 0.42306166887283325, 0.45568618178367615, 0.46651697158813477, 0.48527276515960693, 0.5135384798049927, 0.5221238732337952, 0.5457667708396912, 0.5489367246627808, 0.5671641826629639, 0.5774666666984558, 0.5901466012001038, 0.602562427520752, 0.6111478209495544, 0.620261549949646, 0.6283186078071594, 0.637432336807251, 0.6433760523796082, 0.6498481035232544, 0.6544709801673889, 0.6597543358802795, 0.654999315738678, 0.6646413803100586, 0.6682076454162598, 0.6693964004516602, 0.6775855422019958, 0.6811517477035522, 0.6789063811302185, 0.6873596906661987, 0.6921146512031555, 0.6906617283821106, 0.6951525807380676, 0.685510516166687, 0.6964733600616455, 0.698190450668335, 0.6977941989898682, 0.7061154246330261, 0.7055870890617371, 0.7102100253105164, 0.7088891863822937, 0.7088891863822937, 0.7121912837028503, 0.7078325152397156, 0.720380425453186, 0.7143045663833618, 0.7174745798110962, 0.717870831489563, 0.7213049530982971, 0.7202483415603638, 0.7253995537757874, 0.7243428826332092, 0.7294940948486328, 0.7263241410255432, 0.724739134311676, 0.735569953918457, 0.7290979027748108, 0.7302865982055664, 0.7194558382034302, 0.7358341217041016, 0.7423061728477478, 0.7345132827758789, 0.7395324110984802, 0.7346453666687012, 0.733060359954834, 0.7322678565979004], "val_loss": [1.951132025037493, 1.9304428100585938, 1.9068622589111328, 1.8776694706508092, 1.8403374808175224, 1.7920917102268763, 1.7306909561157227, 1.6540030070713587, 1.5641635826655798, 1.461350747517177, 1.356072187423706, 1.2502012252807617, 1.155529533113752, 1.075998306274414, 1.00648409979684, 0.9482381003243583, 0.902233362197876, 0.8635914155415126, 0.8306207486561367, 0.8036547558648246, 0.7779772281646729, 0.7591404063361031, 0.7395439488547189, 0.7225189890180316, 0.7093038388660976, 0.6960342441286359, 0.683560984475272, 0.6744683470044818, 0.66774582862854, 0.6567044939313617, 0.6493035214287894, 0.6412270409720284, 0.6337881258555821, 0.6270990542003086, 0.6208734001432147, 0.6152029378073556, 0.6104898793356759, 0.6061633484704154, 0.6003002098628453, 0.5973001207624163, 0.5936506135123116, 0.5886424098696027, 0.5864787442343575, 0.5806213276726859, 0.5791609968457904, 0.5756993634360177, 0.5736979246139526, 0.5707847561155047, 0.5669006620134626, 0.5639359951019287, 0.5601968084062848, 0.5578392403466361, 0.5554755244936261, 0.5548878908157349, 0.5497794662203107, 0.5471656322479248, 0.5470587355749947, 0.544637782233102, 0.5417443173272269, 0.538618837084089, 0.5373919180461338, 0.5343311173575265, 0.5320643186569214, 0.5301445211683001, 0.5289523090635028, 0.527539815221514, 0.5258004154477801, 0.5233451638902936, 0.5214364358357021, 0.5218303714479718, 0.5186980622155326, 0.5190405164446149], "val_accuracy": [0.21066667139530182, 0.34933334589004517, 0.4013333320617676, 0.4449999928474426, 0.47433334589004517, 0.4963333308696747, 0.5236666798591614, 0.5463333129882812, 0.5633333325386047, 0.5806666612625122, 0.5933333039283752, 0.6050000190734863, 0.6269999742507935, 0.6443333625793457, 0.6679999828338623, 0.6746666431427002, 0.6850000023841858, 0.6916666626930237, 0.6956666707992554, 0.70333331823349, 0.7046666741371155, 0.7056666612625122, 0.715666651725769, 0.7166666388511658, 0.7089999914169312, 0.7213333249092102, 0.7283333539962769, 0.7269999980926514, 0.7279999852180481, 0.7306666374206543, 0.7350000143051147, 0.7350000143051147, 0.7350000143051147, 0.7369999885559082, 0.7400000095367432, 0.7456666827201843, 0.7426666617393494, 0.7436666488647461, 0.7443333268165588, 0.7436666488647461, 0.75, 0.7476666569709778, 0.7493333220481873, 0.7486666440963745, 0.7536666393280029, 0.7570000290870667, 0.7556666731834412, 0.7599999904632568, 0.7536666393280029, 0.7630000114440918, 0.7536666393280029, 0.762333333492279, 0.762666642665863, 0.7616666555404663, 0.765333354473114, 0.7676666378974915, 0.7593333125114441, 0.765999972820282, 0.7696666717529297, 0.768666684627533, 0.7713333368301392, 0.7713333368301392, 0.7720000147819519, 0.7706666588783264, 0.7720000147819519, 0.7739999890327454, 0.7760000228881836, 0.7730000019073486, 0.7753333449363708, 0.7756666541099548, 0.7756666541099548, 0.7710000276565552]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 6, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 1, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7668571472167969, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2939170735497374, 2.2724979414427837, 2.2491744851958972, 2.2226144495326547, 2.1875016163400356, 2.1449101522314926, 2.091658423778608, 2.0178401488764033, 1.941970493862453, 1.833969179681106, 1.7370112165090288, 1.621234971455705, 1.5286072274051747, 1.4545135479782079, 1.368360134289643, 1.3163123656541065, 1.2639262396126312, 1.2224838423171551, 1.1849792729499806, 1.1497088487295348, 1.11513127156095, 1.0903567219958281, 1.0613603909978335, 1.0305568930999147, 1.0169741145340427, 0.9941433065083395, 0.9721147769225854, 0.9607171199703103, 0.9558208564552475, 0.9418842383048884, 0.9268061259970327, 0.9169357574264749, 0.8939911154408922, 0.8860682397313232, 0.8789754337433732, 0.8730537700552304, 0.8655130390430628, 0.8634545839599662, 0.8547032830375392, 0.8507338601442895, 0.8330657438532142, 0.834120573872793, 0.8229859122479234, 0.8150709613659725, 0.807217285767239, 0.8217422445657121, 0.8077020777403923, 0.8031689684073907, 0.791569286341586, 0.7859799196108882, 0.7698482725803233, 0.781968704689889, 0.7796821450009369, 0.7746317124936748, 0.7700857307302827, 0.7668301435257576, 0.7623649360544378, 0.7637814048447896, 0.7504683874223714, 0.7566104353993655, 0.7558125919512219, 0.7396091411079414, 0.7369656948491551, 0.7322183880099311, 0.7464397111195363, 0.7365791605621391, 0.7167246140792558, 0.7249287349074635, 0.7182252884871609, 0.7225927042450966, 0.7236621814113582, 0.7263401656370625, 0.7153828918437884, 0.7112632212999742, 0.7097858299495459], "accuracy": [0.10711926966905594, 0.16800950467586517, 0.22559767961502075, 0.27341169118881226, 0.3245278000831604, 0.354510635137558, 0.3747193217277527, 0.40443798899650574, 0.42306166887283325, 0.4558182656764984, 0.46664905548095703, 0.48514068126678467, 0.5134063959121704, 0.5222559571266174, 0.5458987951278687, 0.5489367246627808, 0.5672962665557861, 0.5772024989128113, 0.5900145173072815, 0.6026945114135742, 0.6111478209495544, 0.6209219098091125, 0.6281865239143372, 0.637828528881073, 0.6431118845939636, 0.6503764390945435, 0.6548672318458557, 0.6601505875587463, 0.654999315738678, 0.6647734642028809, 0.6682076454162598, 0.669792652130127, 0.6778497099876404, 0.6814159154891968, 0.678642213344574, 0.6872276067733765, 0.6919825673103333, 0.6907938122749329, 0.6952846646308899, 0.6857746839523315, 0.6970016956329346, 0.6984546184539795, 0.6977941989898682, 0.7067758440971375, 0.7053229212760925, 0.7104741930961609, 0.7086250185966492, 0.7091533541679382, 0.7121912837028503, 0.707040011882782, 0.7209087014198303, 0.7145687341690063, 0.717870831489563, 0.7170783281326294, 0.7211728692054749, 0.7205125093460083, 0.7251353859901428, 0.7244749665260315, 0.7293620109558105, 0.7265883088111877, 0.7253995537757874, 0.7353057861328125, 0.728701651096344, 0.7302865982055664, 0.7189275026321411, 0.7362303733825684, 0.7425703406333923, 0.7347774505615234, 0.7400607466697693, 0.7342491149902344, 0.7331924438476562, 0.7325320243835449, 0.737022876739502, 0.7409853339195251, 0.7366266250610352], "val_loss": [1.951132025037493, 1.930443286895752, 1.906862735748291, 1.8776694706508092, 1.8403372083391463, 1.7920940944126673, 1.7306925909859794, 1.653991460800171, 1.564150333404541, 1.4613397802625383, 1.3560850620269775, 1.2502293246132987, 1.1555490834372384, 1.0760221140725272, 1.0065116882324219, 0.9482644966670445, 0.9022425242832729, 0.8635879755020142, 0.830585139138358, 0.8036019631794521, 0.7779849597385952, 0.7591254200254168, 0.7395586626870292, 0.7225031171526227, 0.709312013217381, 0.6960851124354771, 0.6835932561329433, 0.6745036840438843, 0.6677466971533639, 0.6567013434001377, 0.6493211814335415, 0.6412105730601719, 0.6337816374642509, 0.627096448625837, 0.6208879777363369, 0.6152114186968122, 0.6105206864220756, 0.6061735664095197, 0.6002917119434902, 0.597241963659014, 0.5936976841517857, 0.5886633566447667, 0.5865520238876343, 0.5806351218904767, 0.5791746037346976, 0.5757998738970075, 0.5737018414906093, 0.5708082744053432, 0.5669627700533185, 0.5639511517116002, 0.5602595976420811, 0.5578298057828631, 0.5555131775992257, 0.5548761742455619, 0.5498177324022565, 0.547181418963841, 0.5471112728118896, 0.544533235686166, 0.541725584438869, 0.538619841848101, 0.5373484236853463, 0.5343925612313407, 0.5321654762540545, 0.5301464625767299, 0.5289643151419503, 0.5275892870766776, 0.5257935013089862, 0.5233816249029977, 0.5213726758956909, 0.5217372860227313, 0.5186186517987933, 0.519007648740496, 0.5157183238438198, 0.5141125576836723, 0.5135715178080967], "val_accuracy": [0.21066667139530182, 0.34933334589004517, 0.4013333320617676, 0.445333331823349, 0.4740000069141388, 0.4963333308696747, 0.5236666798591614, 0.5463333129882812, 0.5633333325386047, 0.5803333520889282, 0.5933333039283752, 0.6050000190734863, 0.6273333430290222, 0.6443333625793457, 0.6679999828338623, 0.6746666431427002, 0.6846666932106018, 0.6916666626930237, 0.6956666707992554, 0.7036666870117188, 0.7046666741371155, 0.7046666741371155, 0.715666651725769, 0.7163333296775818, 0.7089999914169312, 0.7213333249092102, 0.7273333072662354, 0.7273333072662354, 0.7279999852180481, 0.7303333282470703, 0.7350000143051147, 0.734666645526886, 0.7350000143051147, 0.7379999756813049, 0.7400000095367432, 0.7453333139419556, 0.7426666617393494, 0.7433333396911621, 0.7436666488647461, 0.7436666488647461, 0.75, 0.7480000257492065, 0.7493333220481873, 0.7490000128746033, 0.7536666393280029, 0.7563333511352539, 0.7553333044052124, 0.7593333125114441, 0.753333330154419, 0.7633333206176758, 0.753000020980835, 0.762333333492279, 0.762333333492279, 0.7606666684150696, 0.7649999856948853, 0.7676666378974915, 0.7596666812896729, 0.7663333415985107, 0.7699999809265137, 0.7689999938011169, 0.7706666588783264, 0.7713333368301392, 0.7716666460037231, 0.7706666588783264, 0.7720000147819519, 0.7736666798591614, 0.7753333449363708, 0.7730000019073486, 0.7756666541099548, 0.7760000228881836, 0.7756666541099548, 0.7703333497047424, 0.7753333449363708, 0.7743333578109741, 0.7753333449363708]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [75, 15, 5, 88, 41, 79, 61, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.15114285051822662, "mapping_values": [1, 40, 40, 24, 16, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.462792618399708, 2.3003418146422385, 2.303090625230615, 2.3001876634109792, 2.3197941991395137, 2.301781073474393], "accuracy": [0.1872936189174652, 0.14370624721050262, 0.09800554811954498, 0.11768590658903122, 0.1710474193096161, 0.10936468094587326], "val_loss": [1.9643114634922572, 1.9739129883902413, 1.9732202802385603, 1.9603876386369978, 1.977814061301095, 1.9610251017979212], "val_accuracy": [0.19333332777023315, 0.10400000214576721, 0.10166666656732559, 0.14300000667572021, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 8, 7, 1, 6, 8, 4, 2, 6, 4, 2, 2, 9, 5, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [1, 0, 2, 0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 3, 0, 0, 2, 3, 1], [40, 28, 79, 92, 41, 36, 50, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 5, 0, 4, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 28, 16, 12, 7, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))))))), tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.square(grad), beta)), grad))), tf.math.add(beta, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5, 5, 4, 9, 1, 6, 7], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2, 3, 2, 2], [86, 28, 79, 92, 41, 36, 75], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 2, 1, 5, 5], [42], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0], [3, 4, 4, 6], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 53, 53, 33, 20, 7, 17, 17, 9, 8, 1, 9, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(alpha, grad)))))), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))))))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), grad), grad)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(beta, beta), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 5, 4, 2, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 2, 1, 2, 3, 9, 5, 8, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 3, 0, 4, 2], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [1, 0, 1, 5, 3, 4], [65], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 17, 17, 9, 8, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031597240426835, 2.304519894163701, 2.3288822353256218, 2.523945857032793, 3.231035210374261, 4.457304598869129, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.09998679161071777, 0.09628847241401672, 0.10157178342342377, 0.09800554811954498, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.974590573992048, 1.9813460622514998, 2.04886531829834, 2.432596342904227, 3.4368485042027066, 3.672137669154576, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10166666656732559, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 23, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 0, 1, 0, 1, 5], [42, 26], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [9, 2, 3, 1, 2, 6, 4, 3, 2, 4, 0, 1, 7, 0, 5, 1, 2, 3, 9, 5, 5, 5, 9, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 0, 2, 0, 2, 2, 3, 2, 0, 2], [40, 66, 27, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 0, 5, 0, 2, 2], [42, 70], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4211.518372149374, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20974771678447723, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12836302.285714285, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 5, 4, 2, 1, 8, 4, 1, 6, 4, 3, 2, 3, 4, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 0, 0, 2], [40, 28, 16, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [65], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [1, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 0, 0, 0, 1, 1], [0, 0, 1, 0], [3, 4, 0], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.negative(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031368342845386, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 8, 1, 1, 8, 4, 3, 2, 6, 3, 2, 7, 0, 0, 1, 2, 3, 2, 5, 5, 5, 0, 5, 8, 4, 5], [2, 1, 2, 2, 0, 3, 1, 0, 1, 0, 0, 2, 0, 3, 2, 0, 2, 3, 1], [75, 83, 5, 39, 41, 79, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 2, 1, 5, 3, 5, 2, 5], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [28], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 24, 24, 14, 10, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(grad, tf.math.add(beta, beta)), tf.math.add(beta, alpha)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3138703966121854, 2.3456765858724906, 2.390381458428841, 2.4669943418579647, 2.6474904201569545, 5.1663480595417495, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06366398185491562, 0.033681150525808334, 0.01558578759431839, 0.013868709094822407, 0.011359133757650852, 0.05336151272058487, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9975343431745256, 2.0320868492126465, 2.083183084215437, 2.1784915242876326, 2.494349343436105, 20.667142050606863, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.00566666666418314, 0.004000000189989805, 0.004333333112299442, 0.005333333276212215, 0.011666666716337204, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5, 1, 6, 6, 7, 7], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2, 1, 3, 1, 2, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 5, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09828571230173111, "mapping_values": [1, 54, 54, 32, 22, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), tf.math.square(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), grad)))), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011827240562113, 2.2969548654373626, 2.298011811244694, 2.2995901257685385, 2.3000145743567444, 2.3006890701217864, 2.301249817393601], "accuracy": [0.08558975160121918, 0.10910051316022873, 0.10130762308835983, 0.09866596013307571, 0.08994849026203156, 0.09008057415485382, 0.08479725569486618], "val_loss": [1.9674647194998605, 1.9671081134251185, 1.969862461090088, 1.9708049637930733, 1.9714155878339494, 1.9719807761056083, 1.9722184453691756], "val_accuracy": [0.08033332973718643, 0.11533333361148834, 0.09066666662693024, 0.08866667002439499, 0.08399999886751175, 0.08766666799783707, 0.07666666805744171]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 4, 2, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 1, 1, 0, 1], [0, 1, 1, 0], [7, 4], [1, 0, 1, 5, 3, 4], [65], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302613888780722, 2.302414429390892, 2.3018713899969407, 2.302560670264661, 2.3021974465976442, 2.3025930540011528], "accuracy": [0.08374059200286865, 0.09509972482919693, 0.09192973375320435, 0.09259014576673508, 0.0878351628780365, 0.08955223858356476], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 2, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 37, 37, 22, 15, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302613888780722, 2.302414429390892, 2.3018713899969407, 2.302560670264661, 2.3021974465976442, 2.3025930540011528], "accuracy": [0.08374059200286865, 0.09509972482919693, 0.09192973375320435, 0.09259014576673508, 0.0878351628780365, 0.08955223858356476], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [8, 0, 7, 1, 1, 2, 4, 2, 2, 2, 3, 4, 7, 0, 8, 1, 2, 2, 1, 5, 5, 5, 0, 5, 1, 4, 5], [1, 0, 2, 2, 0, 0, 0, 2, 1, 1, 0, 1, 0, 3, 0, 0, 2, 3, 1], [40, 28, 79, 92, 41, 67, 80, 41], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302613888780722, 2.302414429390892, 2.3018713899969407, 2.302560670264661, 2.3021974465976442, 2.3025930540011528], "accuracy": [0.08374059200286865, 0.09509972482919693, 0.09192973375320435, 0.09259014576673508, 0.0878351628780365, 0.08955223858356476], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 3, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 0, 5, 0, 2, 2], [42, 70], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [6, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 40, 40, 24, 16, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302613888780722, 2.302414429390892, 2.3018713899969407, 2.302560670264661, 2.3021974465976442, 2.3025930540011528], "accuracy": [0.08374059200286865, 0.09509972482919693, 0.09192973375320435, 0.09259014576673508, 0.0878351628780365, 0.08955223858356476], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 28, 79, 99, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302613888780722, 2.302414429390892, 2.3018713899969407, 2.302560670264661, 2.3021974465976442, 2.3025930540011528], "accuracy": [0.08374059200286865, 0.09509972482919693, 0.09192973375320435, 0.09259014576673508, 0.0878351628780365, 0.08955223858356476], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 2, 0, 3, 4, 7, 0, 6, 1, 2, 2, 1, 5, 5, 5, 0, 5, 8, 4, 5], [0, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 1, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [8, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 30, 30, 16, 14, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))), tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), grad)))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302613888780722, 2.302414429390892, 2.3018713899969407, 2.302560670264661, 2.3021974465976442, 2.3025930540011528], "accuracy": [0.08374059200286865, 0.09509972482919693, 0.09192973375320435, 0.09259014576673508, 0.0878351628780365, 0.08955223858356476], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 9, 7, 1, 1, 8, 4, 3, 2, 4, 3, 6, 7, 0, 6, 1, 2, 2, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [75, 15, 5, 39, 41, 79, 61, 47, 99, 9], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [39], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302613888780722, 2.302414429390892, 2.3018713899969407, 2.302560670264661, 2.3021974465976442, 2.3025930540011528], "accuracy": [0.08374059200286865, 0.09509972482919693, 0.09192973375320435, 0.09259014576673508, 0.0878351628780365, 0.08955223858356476], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]