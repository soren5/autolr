[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7548571228981018, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 9, 10, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, alpha)), tf.math.add(beta, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.298426600684107, 2.287901374689419, 2.2794685774097636, 2.2696713113891858, 2.257801953245069, 2.250300878515459, 2.2352017702569484, 2.2236950080691704, 2.2083202537969435, 2.1937174239666897, 2.174006609443692, 2.1539604192113266, 2.1304016861508095, 2.1075362650914484, 2.076056467212974, 2.0432942579325086, 2.009211371713673, 1.9692264469056286, 1.9314064231168924, 1.8848906358345514, 1.8409230523751223, 1.7829476896608982, 1.7377857631302434, 1.6961984009932314, 1.6455959471666173, 1.6083969177114588, 1.5608250105842356, 1.5147053918440454, 1.4804344177403548, 1.4400306467083483, 1.404470696315128, 1.3774545354897305, 1.3446503738134512, 1.320317857474258, 1.2921648829951027, 1.2660912368212867, 1.2540453509128073, 1.222443694876894, 1.2037414663172732, 1.1950420783479625, 1.1799407974289016, 1.1563207540907612, 1.1320532825817884, 1.1215009028176905, 1.1121198720683858, 1.1032051472789213, 1.090934426981964, 1.0693924010248705, 1.0533825136320607, 1.0501899831346344, 1.044061333259902, 1.0285037788401947, 1.0227115308729853, 1.010790423489738, 1.004602435644135, 0.9996756996854642, 0.9881554563693272, 0.9830142335412431, 0.9798177163740427, 0.9792472529704183, 0.9684804570657576, 0.9618703414892807, 0.9554449766775904, 0.9466065780015245, 0.9232396158906274, 0.9273441290464919, 0.9218117231784826, 0.9224178358753045, 0.9164621379507405, 0.9154325414721078, 0.9071341718208394, 0.8996974289409394, 0.901330293035778, 0.8928588025558264, 0.8842111883650303, 0.8824690955741106, 0.8751577892008711, 0.8783865682972641, 0.8788070149031832, 0.8621494397668633, 0.8607265279041447, 0.8738344047898079, 0.8623015136530434, 0.8534498614264108, 0.8483127743230127, 0.841753400280617, 0.8356246307793389, 0.8312741270107505, 0.835152198790937, 0.8353695984073146, 0.8338383589406858, 0.8309604610276968, 0.8298659815827318, 0.8265132635434259, 0.8237788577940108, 0.8285465483274348, 0.8144353425435071, 0.8154564816812246, 0.8142391582049273, 0.8084235416899709], "accuracy": [0.10091137140989304, 0.12812046706676483, 0.1566503793001175, 0.1826707124710083, 0.20591731369495392, 0.22493726015090942, 0.25901466608047485, 0.2727513015270233, 0.29903578758239746, 0.31158366799354553, 0.325320303440094, 0.34420815110206604, 0.36785101890563965, 0.3723418414592743, 0.38383305072784424, 0.39704135060310364, 0.41024965047836304, 0.4251750111579895, 0.4299300014972687, 0.43864747881889343, 0.4488178491592407, 0.4683661460876465, 0.47285696864128113, 0.47906485199928284, 0.4881785809993744, 0.4827631711959839, 0.5024435520172119, 0.5108968615531921, 0.523048460483551, 0.5268788933753967, 0.5326905250549316, 0.5453705191612244, 0.5462950468063354, 0.5539559125900269, 0.5621450543403625, 0.5639941692352295, 0.5674283504486084, 0.5769383311271667, 0.5831462144851685, 0.583410382270813, 0.5914674401283264, 0.5963544845581055, 0.6100911498069763, 0.6045436263084412, 0.6022982597351074, 0.6062607169151306, 0.6106194853782654, 0.6236956715583801, 0.6259410977363586, 0.6236956715583801, 0.6337339878082275, 0.635451078414917, 0.6386210322380066, 0.6449610590934753, 0.6457535624504089, 0.6395456194877625, 0.6520935297012329, 0.6543388962745667, 0.6497160196304321, 0.6519614458084106, 0.6619997620582581, 0.6609430909156799, 0.6600185036659241, 0.6613393425941467, 0.6692643165588379, 0.6656980514526367, 0.6699247360229492, 0.6748117804527283, 0.6770572066307068, 0.674679696559906, 0.6785101294517517, 0.6729626059532166, 0.6740192770957947, 0.6744155287742615, 0.6848500967025757, 0.6841896772384644, 0.687491774559021, 0.6843217611312866, 0.6870955228805542, 0.6930392384529114, 0.6885483860969543, 0.6863030195236206, 0.691850483417511, 0.6921146512031555, 0.6980583667755127, 0.7022850513458252, 0.6963412761688232, 0.6973979473114014, 0.6996433734893799, 0.703209638595581, 0.7025492191314697, 0.7041342258453369, 0.7043983340263367, 0.7024171352386475, 0.6992471218109131, 0.6960771083831787, 0.7073041796684265, 0.7067758440971375, 0.700171709060669, 0.7096816897392273], "val_loss": [1.9618124280657088, 1.952737603868757, 1.9436397552490234, 1.9341014453342982, 1.9240190642220634, 1.9133548055376326, 1.901491914476667, 1.88839966910226, 1.8738025256565638, 1.8574962615966797, 1.838832242148263, 1.817990507398333, 1.7946268490382604, 1.7684924943106515, 1.7390921456473214, 1.7064104420798165, 1.6705388682229179, 1.6311359746115548, 1.5890473978860038, 1.543816123689924, 1.4969501495361328, 1.4478544848305839, 1.3981602191925049, 1.3491037913731165, 1.3006806714194161, 1.2544347899300712, 1.20991849899292, 1.1671554020472936, 1.12734511920384, 1.0903735160827637, 1.0566434519631522, 1.0262588092258997, 0.9971230370657784, 0.9707260131835938, 0.9464879035949707, 0.9244499547140939, 0.9043911865779332, 0.8849456991468158, 0.867625526019505, 0.8522262402943203, 0.8378979137965611, 0.8236754281180245, 0.8102244138717651, 0.7979322331292289, 0.7869505541665214, 0.7763911655970982, 0.7667235476630074, 0.7566495963505336, 0.7484125580106463, 0.7396984951836723, 0.7322037901197161, 0.7247741052082607, 0.7182399715696063, 0.711868405342102, 0.7061676808765956, 0.7000920261655535, 0.6948834146772113, 0.6891599552971976, 0.6844894545418876, 0.6802040338516235, 0.6761059420449393, 0.6715773684637887, 0.6677755628313337, 0.6637406689780099, 0.6594560657228742, 0.6554902621677944, 0.6514755657741002, 0.6482272148132324, 0.6447038309914725, 0.641419632094247, 0.6385826213019234, 0.635619078363691, 0.6330910069601876, 0.6298918553761074, 0.6260214022227696, 0.6236839975629535, 0.6204140697206769, 0.6180041347231183, 0.6156478779656547, 0.6137857266834804, 0.6105563129697528, 0.6086013657706124, 0.6064650842121669, 0.6045609882899693, 0.6019228867122105, 0.5996432985578265, 0.5978156839098249, 0.5955104827880859, 0.5939582245690482, 0.5923196247645787, 0.5905759845461164, 0.5890640871865409, 0.587273188999721, 0.5853949274335589, 0.5839622701917376, 0.5827533347266061, 0.5811996630259922, 0.5792954649244036, 0.5779566083635602, 0.5756640945162091], "val_accuracy": [0.10199999809265137, 0.1966666728258133, 0.2763333320617676, 0.3293333351612091, 0.3606666624546051, 0.38499999046325684, 0.40166667103767395, 0.42100000381469727, 0.4413333237171173, 0.4506666660308838, 0.46266666054725647, 0.48100000619888306, 0.49166667461395264, 0.5049999952316284, 0.5226666927337646, 0.5336666703224182, 0.5433333516120911, 0.5523333549499512, 0.5616666674613953, 0.5730000138282776, 0.57833331823349, 0.5836666822433472, 0.590666651725769, 0.590666651725769, 0.5963333249092102, 0.6043333411216736, 0.6103333234786987, 0.6206666827201843, 0.6370000243186951, 0.6460000276565552, 0.6526666879653931, 0.6623333096504211, 0.6706666946411133, 0.6740000247955322, 0.6803333163261414, 0.6816666722297668, 0.6850000023841858, 0.6913333535194397, 0.6926666498184204, 0.6936666369438171, 0.6976666450500488, 0.6996666789054871, 0.7006666660308838, 0.70333331823349, 0.7036666870117188, 0.7043333053588867, 0.7080000042915344, 0.7103333473205566, 0.7106666564941406, 0.7129999995231628, 0.7170000076293945, 0.715666651725769, 0.7183333039283752, 0.7173333168029785, 0.7206666469573975, 0.7210000157356262, 0.7183333039283752, 0.7233333587646484, 0.7243333458900452, 0.7250000238418579, 0.7286666631698608, 0.7266666889190674, 0.7246666550636292, 0.7310000061988831, 0.7316666841506958, 0.731333315372467, 0.7326666712760925, 0.7303333282470703, 0.7326666712760925, 0.7336666584014893, 0.7356666922569275, 0.7333333492279053, 0.7353333234786987, 0.7390000224113464, 0.7403333187103271, 0.7396666407585144, 0.7423333525657654, 0.7400000095367432, 0.7416666746139526, 0.7436666488647461, 0.7436666488647461, 0.7423333525657654, 0.7436666488647461, 0.7456666827201843, 0.7463333606719971, 0.7483333349227905, 0.746999979019165, 0.746999979019165, 0.7480000257492065, 0.7486666440963745, 0.7453333139419556, 0.750333309173584, 0.7493333220481873, 0.749666690826416, 0.753000020980835, 0.753333330154419, 0.7546666860580444, 0.7526666522026062, 0.7523333430290222, 0.753333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 6, 4, 2, 8, 1, 9, 2, 6, 6, 6, 5, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7548571228981018, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.298426600684107, 2.287901374689419, 2.2794685774097636, 2.2696712934078085, 2.2578018587719826, 2.2503010089513, 2.2352017072748906, 2.223695224034646, 2.2083206946713467, 2.1937172755494707, 2.1740056152404215, 2.1539596094825026, 2.130400197129003, 2.1075341461545927, 2.076054492316084, 2.0432906951634733, 2.009207161237157, 1.9692218807064514, 1.9314043516055264, 1.8848890366886175, 1.840920897475512, 1.782943789150579, 1.7377833160096314, 1.6961968422817784, 1.6455989317288724, 1.6084041692608808, 1.5608332677524261, 1.5147048788079496, 1.480438214031114, 1.4400328864762812, 1.4044713940618534, 1.3774538136208772, 1.344647596320456, 1.3203132283874963, 1.29216160359809, 1.2660848161626597, 1.2540325576980997, 1.222434405826417, 1.2037260763838211, 1.1950194651597779, 1.1798952410108048, 1.1562798371199745, 1.1319874610410878, 1.1214288911641848, 1.112054752446972, 1.103042003012856, 1.0906859651422456, 1.0692579795529797, 1.05322296142956, 1.0499990662846976, 1.0439114425444034, 1.0283749250766703, 1.022623169785871, 1.0106844711675305, 1.0045792442649157, 0.9995983848088705, 0.9881105536420064, 0.982974029606076, 0.9798150919117019, 0.9792069581993788, 0.9684717679508704, 0.9618574594462537, 0.9554318553263627, 0.9465882580876429, 0.9232497995225052, 0.9273393293413362, 0.9218005576563265, 0.9224181213572261, 0.916460464344269, 0.9154287356002031, 0.9071356564968837, 0.8996911626749539, 0.9013213672500638, 0.8928515708142615, 0.8841989257899038, 0.8824669507122657, 0.8751502993745796, 0.8783761725811801, 0.8787937891355768, 0.86213604337299, 0.8607282402367089, 0.8738255160926529, 0.8622902046577601, 0.853452336558293, 0.8483128027987754, 0.8417410129616525, 0.8356320161971245, 0.8312523150960484, 0.8351580124993476, 0.8353770798569925, 0.8338811631294651, 0.8309880636229948, 0.8298477664001394, 0.826486195248541, 0.8237929747498598, 0.8285285046134941, 0.8144328916124806, 0.8154735813019943, 0.8142375332835864, 0.8084223061788194], "accuracy": [0.10091137140989304, 0.12812046706676483, 0.1566503793001175, 0.1826707124710083, 0.20591731369495392, 0.22493726015090942, 0.25901466608047485, 0.2727513015270233, 0.29903578758239746, 0.31158366799354553, 0.325320303440094, 0.34420815110206604, 0.36785101890563965, 0.3723418414592743, 0.38383305072784424, 0.3971734344959259, 0.41024965047836304, 0.42504292726516724, 0.4297979176044464, 0.43891164660453796, 0.448949933052063, 0.4683661460876465, 0.4725928008556366, 0.47906485199928284, 0.48831066489219666, 0.48289525508880615, 0.5024435520172119, 0.5108968615531921, 0.523048460483551, 0.527010977268219, 0.5328226089477539, 0.5453705191612244, 0.5461629629135132, 0.5539559125900269, 0.5622771382331848, 0.5639941692352295, 0.5675604343414307, 0.5766741633415222, 0.5828820466995239, 0.583410382270813, 0.5915995240211487, 0.5963544845581055, 0.6102232336997986, 0.6048077940940857, 0.6016378402709961, 0.6067890524864197, 0.6115440726280212, 0.6239598393440247, 0.6255448460578918, 0.6248844265937805, 0.6341302394866943, 0.6353189945220947, 0.6388852000236511, 0.6452252268791199, 0.6458855867385864, 0.6399418711662292, 0.6518293619155884, 0.6542068123817444, 0.6497160196304321, 0.6519614458084106, 0.661471426486969, 0.6608110070228577, 0.6601505875587463, 0.661471426486969, 0.6695284843444824, 0.6656980514526367, 0.6699247360229492, 0.6748117804527283, 0.6770572066307068, 0.6745476126670837, 0.6785101294517517, 0.6730946898460388, 0.6740192770957947, 0.6742834448814392, 0.6852463483810425, 0.6839255094528198, 0.687491774559021, 0.6841896772384644, 0.6872276067733765, 0.6925109028816223, 0.6889446377754211, 0.6863030195236206, 0.6915863156318665, 0.691850483417511, 0.6976621150970459, 0.7025492191314697, 0.6964733600616455, 0.6971337795257568, 0.6996433734893799, 0.7034738063812256, 0.702681303024292, 0.7042662501335144, 0.7043983340263367, 0.7028133869171143, 0.6992471218109131, 0.6960771083831787, 0.7073041796684265, 0.7067758440971375, 0.6999075412750244, 0.7099458575248718], "val_loss": [1.9618124280657088, 1.952737603868757, 1.9436397552490234, 1.9341013090951102, 1.9240189961024694, 1.9133547374180384, 1.9014923913138253, 1.8884000097002303, 1.8738036155700684, 1.8574961934770857, 1.8388311522347587, 1.8179890768868583, 1.794624192374093, 1.7684907913208008, 1.7390892846243722, 1.7064079557146346, 1.6705340657915388, 1.6311312402997697, 1.589045626776559, 1.5438127177102225, 1.4969467776162284, 1.4478487287248885, 1.398155689239502, 1.3491010325295585, 1.3006856100899833, 1.2544374465942383, 1.209921053477696, 1.1671639851161413, 1.1273503303527832, 1.0903747422354562, 1.0566429070064, 1.026254756110055, 0.9971152373722622, 0.9707180772508893, 0.9464871202196393, 0.924445356641497, 0.9043833187648228, 0.8849351746695382, 0.8676115444728306, 0.8522071668079921, 0.8378649779728481, 0.823630860873631, 0.8101428236280169, 0.7978138412748065, 0.7868208374295916, 0.7762202194758824, 0.766532438141959, 0.7564708164760044, 0.7482702391488212, 0.7395716054098946, 0.7321126290730068, 0.7247177192143032, 0.718206661088126, 0.7118363039834159, 0.7061228581837246, 0.7000773804528373, 0.6948673043932233, 0.6891434192657471, 0.684486814907619, 0.6801868677139282, 0.6760848760604858, 0.6715616668973651, 0.6677764483860561, 0.6637460333960397, 0.6594629458018711, 0.6555007355553764, 0.6514793975012643, 0.6482311316898891, 0.6447140659604754, 0.6414183889116559, 0.6385892118726458, 0.6356165068490165, 0.6330955369131905, 0.6298778908593314, 0.6260143859045846, 0.6236792632511684, 0.6204141889299665, 0.6179993493216378, 0.6156483548028129, 0.6137793234416417, 0.610551289149693, 0.6085945538112095, 0.6064597879137311, 0.6045701503753662, 0.601932236126491, 0.5996423448835101, 0.5978110006877354, 0.5954832179205758, 0.5939198391778129, 0.5922942842755999, 0.5905705690383911, 0.5890577690941947, 0.5872548818588257, 0.5854080745152065, 0.5839746849877494, 0.582759005682809, 0.5812163523265294, 0.5793005909238543, 0.577964288847787, 0.5756546599524361], "val_accuracy": [0.10199999809265137, 0.1966666728258133, 0.2763333320617676, 0.3293333351612091, 0.3606666624546051, 0.38499999046325684, 0.40166667103767395, 0.42100000381469727, 0.4416666626930237, 0.4506666660308838, 0.46266666054725647, 0.48133334517478943, 0.49166667461395264, 0.5049999952316284, 0.5226666927337646, 0.5333333611488342, 0.5433333516120911, 0.5523333549499512, 0.5616666674613953, 0.5730000138282776, 0.57833331823349, 0.5836666822433472, 0.590666651725769, 0.590666651725769, 0.5963333249092102, 0.6043333411216736, 0.6103333234786987, 0.6206666827201843, 0.6370000243186951, 0.6460000276565552, 0.6526666879653931, 0.6623333096504211, 0.6706666946411133, 0.6740000247955322, 0.6803333163261414, 0.6816666722297668, 0.6850000023841858, 0.6913333535194397, 0.6926666498184204, 0.6936666369438171, 0.6976666450500488, 0.6996666789054871, 0.7006666660308838, 0.703000009059906, 0.7036666870117188, 0.7043333053588867, 0.7076666951179504, 0.7103333473205566, 0.7110000252723694, 0.7126666903495789, 0.7160000205039978, 0.715666651725769, 0.7183333039283752, 0.7176666855812073, 0.7206666469573975, 0.7210000157356262, 0.7183333039283752, 0.7229999899864197, 0.7243333458900452, 0.7250000238418579, 0.7286666631698608, 0.7266666889190674, 0.7246666550636292, 0.7310000061988831, 0.7319999933242798, 0.731333315372467, 0.7326666712760925, 0.7303333282470703, 0.7326666712760925, 0.7336666584014893, 0.7356666922569275, 0.7333333492279053, 0.7353333234786987, 0.7390000224113464, 0.7406666874885559, 0.7396666407585144, 0.7423333525657654, 0.7400000095367432, 0.7419999837875366, 0.7436666488647461, 0.7440000176429749, 0.7419999837875366, 0.7440000176429749, 0.7456666827201843, 0.746666669845581, 0.7483333349227905, 0.746999979019165, 0.746999979019165, 0.7476666569709778, 0.7486666440963745, 0.7453333139419556, 0.7506666779518127, 0.7493333220481873, 0.749666690826416, 0.753000020980835, 0.753333330154419, 0.7546666860580444, 0.7526666522026062, 0.7526666522026062, 0.753333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7548571228981018, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.298426600684107, 2.2879014061804477, 2.2794686089007925, 2.2696712934078085, 2.2578018272809537, 2.2503008650058076, 2.2352016848217873, 2.223695849289023, 2.208321913783545, 2.1937190928967434, 2.1740074956642244, 2.1539609995594966, 2.130400417566205, 2.107535180792344, 2.0760550861739056, 2.043293695471243, 2.009208794204456, 1.969222337562552, 1.931403915202849, 1.8848865760583542, 1.8409162528321823, 1.7829381258039585, 1.7377767932728345, 1.6961897461405835, 1.645590524427202, 1.6083931704207401, 1.5608199564158216, 1.514699154526188, 1.4804306566565657, 1.440027936102298, 1.4044725206534088, 1.3774574057867877, 1.3446490717853743, 1.3203181294780193, 1.292162671915497, 1.2660925936909904, 1.254041538640351, 1.222437212574578, 1.2037360165113187, 1.1950314754760183, 1.1799229322533487, 1.156308210442457, 1.1320187025507287, 1.1214575911273637, 1.112077642724719, 1.103095558860818, 1.0907716681031094, 1.0692958537818356, 1.0532713937658629, 1.0500700578335616, 1.0439660201739043, 1.0284224221609084, 1.0226585218195021, 1.0107209629402216, 1.0045857345265892, 0.9996190243676795, 0.9881199813396104, 0.9829833892279486, 0.9798176572181451, 0.9792151529523502, 0.968475626782813, 0.9618649923601454, 0.9554363821066445, 0.9465817224788879, 0.9232312156665657, 0.927330997358334, 0.921803709916183, 0.9224097223691874, 0.9164683948402722, 0.9154246904200976, 0.9071286989162154, 0.8996915967945315, 0.9013346350581938, 0.8928500624018543, 0.8842040826269444, 0.8824837856194473, 0.8751571993266649, 0.8783836715634882, 0.8788055276999841, 0.8621327221086548, 0.8607377725553834, 0.8738442015937605, 0.8622982109526696, 0.8534338618660049, 0.8483112536605952, 0.8417578370201747, 0.8356153929805114, 0.8312697879248733, 0.8351735242637173, 0.835364197892693, 0.8338563655030852, 0.8309736798908952, 0.8298792049727656, 0.8264965185510043, 0.8237887673358466, 0.82852646468763, 0.8144304766284634, 0.8154648116409282, 0.814244673953096, 0.8084057550845349], "accuracy": [0.10091137140989304, 0.12812046706676483, 0.1566503793001175, 0.1826707124710083, 0.20591731369495392, 0.22493726015090942, 0.25901466608047485, 0.2727513015270233, 0.29903578758239746, 0.31158366799354553, 0.325320303440094, 0.34420815110206604, 0.36785101890563965, 0.37247392535209656, 0.38383305072784424, 0.39704135060310364, 0.4103817343711853, 0.42504292726516724, 0.4299300014972687, 0.4387795627117157, 0.448949933052063, 0.4683661460876465, 0.47285696864128113, 0.47906485199928284, 0.4881785809993744, 0.48289525508880615, 0.5024435520172119, 0.5108968615531921, 0.5229163765907288, 0.527010977268219, 0.5326905250549316, 0.5453705191612244, 0.5462950468063354, 0.5539559125900269, 0.5624092221260071, 0.5639941692352295, 0.5672962665557861, 0.5766741633415222, 0.5832782983779907, 0.583410382270813, 0.5914674401283264, 0.5963544845581055, 0.6100911498069763, 0.6046757102012634, 0.6016378402709961, 0.6069211363792419, 0.6108836531639099, 0.6240919232368469, 0.6256769299507141, 0.6242240071296692, 0.6342623233795166, 0.6355831623077393, 0.6387531161308289, 0.6450931429862976, 0.6456214785575867, 0.6399418711662292, 0.6516972780227661, 0.6546030640602112, 0.6495839357376099, 0.6519614458084106, 0.6616035103797913, 0.6609430909156799, 0.6600185036659241, 0.6616035103797913, 0.6696605682373047, 0.6656980514526367, 0.6700568199157715, 0.6748117804527283, 0.6770572066307068, 0.674679696559906, 0.678642213344574, 0.6730946898460388, 0.6741513609886169, 0.6741513609886169, 0.6853784322738647, 0.6840575933456421, 0.6876237988471985, 0.6841896772384644, 0.6870955228805542, 0.6927750706672668, 0.6892088055610657, 0.6868313550949097, 0.6911900639533997, 0.6919825673103333, 0.698190450668335, 0.7024171352386475, 0.6970016956329346, 0.6972658634185791, 0.7000396251678467, 0.7033417224884033, 0.7028133869171143, 0.7042662501335144, 0.7045304179191589, 0.7028133869171143, 0.6993792057037354, 0.6959450244903564, 0.7073041796684265, 0.707040011882782, 0.6999075412750244, 0.7096816897392273], "val_loss": [1.9618124280657088, 1.952737671988351, 1.9436397552490234, 1.9341013772147042, 1.9240189279828752, 1.9133548736572266, 1.9014922550746374, 1.8884013720921107, 1.8738048417227608, 1.85749728339059, 1.838831560952323, 1.817988055092948, 1.7946234430585588, 1.7684899738856725, 1.73908908026559, 1.7064076491764613, 1.6705335889543806, 1.6311286176953996, 1.5890435491289412, 1.5438069616045271, 1.4969380242483956, 1.447840997150966, 1.398148809160505, 1.3490959576198034, 1.300677674157279, 1.2544276714324951, 1.209916455405099, 1.1671548230307442, 1.1273445742470878, 1.09036956514631, 1.0566415105547224, 1.026257038116455, 0.997126749583653, 0.970726455960955, 0.9464892659868512, 0.9244513511657715, 0.904386043548584, 0.8849383081708636, 0.8676209279469081, 0.8522158861160278, 0.837884954043797, 0.8236479248319354, 0.8101728473390851, 0.7978511708123344, 0.7868715354374477, 0.7762784617287772, 0.7665829317910331, 0.7565142938068935, 0.7483099188123431, 0.7396133456911359, 0.7321332011904035, 0.7247321775981358, 0.7182120255061558, 0.7118431159428188, 0.7061360393251691, 0.700074451310294, 0.6948673384530204, 0.6891445772988456, 0.6844837835856846, 0.6801938329424176, 0.6761095183236259, 0.6715810639517648, 0.6677815914154053, 0.6637510061264038, 0.6594682080405099, 0.65549293586186, 0.651461124420166, 0.6482260056904384, 0.644707202911377, 0.6414323704583305, 0.6385882241385323, 0.6356247322899955, 0.6331042391913277, 0.6298953465053013, 0.6260187796183995, 0.6236835547855922, 0.6204281023570469, 0.6180048670087542, 0.615653395652771, 0.6137887750353131, 0.6105597359793526, 0.6086012976510184, 0.6064596857343402, 0.6045727218900409, 0.601928540638515, 0.5996327229908535, 0.5978023494992938, 0.5954762697219849, 0.5939102513449532, 0.5923014879226685, 0.5905772277287075, 0.5890808275767735, 0.5872789451054165, 0.5854171514511108, 0.5839796917779105, 0.5827716929571969, 0.5812247821262905, 0.5793076753616333, 0.5779751539230347, 0.5756595645632062], "val_accuracy": [0.10199999809265137, 0.1966666728258133, 0.2763333320617676, 0.3293333351612091, 0.3606666624546051, 0.38499999046325684, 0.40166667103767395, 0.42100000381469727, 0.4416666626930237, 0.4506666660308838, 0.46266666054725647, 0.48100000619888306, 0.492000013589859, 0.5049999952316284, 0.5226666927337646, 0.5333333611488342, 0.5433333516120911, 0.5523333549499512, 0.5616666674613953, 0.5730000138282776, 0.57833331823349, 0.5836666822433472, 0.590666651725769, 0.590666651725769, 0.5960000157356262, 0.6043333411216736, 0.6103333234786987, 0.6206666827201843, 0.6370000243186951, 0.6460000276565552, 0.6526666879653931, 0.6623333096504211, 0.6706666946411133, 0.6740000247955322, 0.6803333163261414, 0.6816666722297668, 0.6850000023841858, 0.6909999847412109, 0.6926666498184204, 0.6936666369438171, 0.6976666450500488, 0.6996666789054871, 0.7006666660308838, 0.703000009059906, 0.7036666870117188, 0.7043333053588867, 0.7080000042915344, 0.7106666564941406, 0.7106666564941406, 0.7129999995231628, 0.7170000076293945, 0.715666651725769, 0.7183333039283752, 0.7176666855812073, 0.7206666469573975, 0.7210000157356262, 0.7183333039283752, 0.7229999899864197, 0.7243333458900452, 0.7250000238418579, 0.7286666631698608, 0.7266666889190674, 0.7246666550636292, 0.7310000061988831, 0.7319999933242798, 0.731333315372467, 0.7326666712760925, 0.7303333282470703, 0.7326666712760925, 0.7336666584014893, 0.7356666922569275, 0.7333333492279053, 0.7353333234786987, 0.7390000224113464, 0.7403333187103271, 0.7396666407585144, 0.7423333525657654, 0.7400000095367432, 0.7419999837875366, 0.7436666488647461, 0.7436666488647461, 0.7426666617393494, 0.7436666488647461, 0.7456666827201843, 0.7463333606719971, 0.7480000257492065, 0.746999979019165, 0.746999979019165, 0.7476666569709778, 0.7486666440963745, 0.7453333139419556, 0.7506666779518127, 0.7493333220481873, 0.749666690826416, 0.753000020980835, 0.753333330154419, 0.7546666860580444, 0.7519999742507935, 0.7523333430290222, 0.753333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [72, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.22828571498394012, "mapping_values": [1, 3, 3, 2, 1, 1, 30, 30, 15, 15, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(beta, alpha)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)), grad))))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8302670817853217, 2.3230928085137195, 2.299928041071924, 2.264566081374187, 2.2895420398127686, 2.3053820982837188, 2.3035592541261956, 2.303538592736231, 2.303021386188995], "accuracy": [0.21820102632045746, 0.09602430462837219, 0.11728965491056442, 0.15863162279129028, 0.20314356684684753, 0.10130762308835983, 0.1022322028875351, 0.09338264167308807, 0.09893012791872025], "val_loss": [2.064788750239781, 1.9738990238734655, 1.9546734946114677, 1.9612955365862166, 1.9775996208190918, 1.9742661203656877, 1.9738209588187081, 1.973662989480155, 1.9736503873552596], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.19166666269302368, 0.3346666693687439, 0.10166666656732559, 0.09799999743700027, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 2, 2, 0, 2, 1, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1062857136130333, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(beta, beta))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.871009072009142, 2.28330591515055, 2.2987063042224123, 2.54702171871864, 2.4946716245548712, 2.306175925145611], "accuracy": [0.18016114830970764, 0.1516312211751938, 0.11108175665140152, 0.17804782092571259, 0.1310262829065323, 0.09245806187391281], "val_loss": [1.8308920860290527, 1.97605528150286, 1.7821118491036552, 1.975541659763881, 1.981137820652553, 1.974534170968192], "val_accuracy": [0.17633333802223206, 0.10433333367109299, 0.1756666600704193, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 1, 9, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [84, 15, 70, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10485713928937912, "mapping_values": [1, 4, 4, 3, 1, 1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024490249627743, 2.3016243320745233, 2.302688373755376, 2.3027839926428815, 2.3012994108513722, 2.3038089158843302, 2.3004933851836866, 2.3019416825079473, 2.301169239755131, 2.3020117513381764, 2.3007124530609335, 2.3005924778150892, 2.2996225427595567, 2.300426132060817, 2.2995356585072204, 2.29879865808856, 2.2991953104588774, 2.2988411068617154, 2.2991305032442146, 2.2995470042210435, 2.2988414563176622, 2.298020495998074, 2.2974609341430563, 2.2985977651956073, 2.297875696815095, 2.298910792257178, 2.299150649283493, 2.2986383957712326, 2.2986725173401497, 2.2988774310076603, 2.2988956713988213, 2.2993073313542642, 2.299866046667445], "accuracy": [0.09140139818191528, 0.09325055778026581, 0.08902391046285629, 0.09153348207473755, 0.09021265059709549, 0.08651433140039444, 0.09377889335155487, 0.0870426595211029, 0.09760929644107819, 0.09153348207473755, 0.09826971590518951, 0.09800554811954498, 0.09774138033390045, 0.09919429570436478, 0.09959053993225098, 0.09642054885625839, 0.10487385839223862, 0.09972262382507324, 0.09879804402589798, 0.10091137140989304, 0.10276053100824356, 0.10910051316022873, 0.11134592443704605, 0.11227050423622131, 0.12230881303548813, 0.09932637959718704, 0.10447761416435242, 0.11068551242351532, 0.108440101146698, 0.10857218503952026, 0.10619468986988068, 0.10896842926740646, 0.10434553027153015], "val_loss": [1.9709858894348145, 1.9709300313677107, 1.970843723842076, 1.97073119027274, 1.9705923625401087, 1.9704226085117884, 1.9702296257019043, 1.9700211797441756, 1.9697967256818498, 1.9695836475917272, 1.969367231641497, 1.9691670962742396, 1.9689854213169642, 1.9688281331743513, 1.9686942100524902, 1.9686040878295898, 1.9685474804469518, 1.9685136250087194, 1.968478066580636, 1.9684416225978307, 1.9684136254446847, 1.9684173039027624, 1.9684386934552873, 1.9685042926243372, 1.9686149188450404, 1.9687489782060896, 1.9689016342163086, 1.9690929821559362, 1.969301632472447, 1.9695052419389998, 1.9697012220110213, 1.9698994500296456, 1.9700845309666224], "val_accuracy": [0.03733333200216293, 0.03799999877810478, 0.039000000804662704, 0.04066666588187218, 0.041999999433755875, 0.044333335012197495, 0.04699999839067459, 0.05000000074505806, 0.05366666615009308, 0.05666666850447655, 0.05833333358168602, 0.06233333423733711, 0.06666667014360428, 0.07266666740179062, 0.07833333313465118, 0.0846666693687439, 0.09099999815225601, 0.09833333641290665, 0.10499999672174454, 0.1080000028014183, 0.10833333432674408, 0.11299999803304672, 0.11666666716337204, 0.11900000274181366, 0.12066666781902313, 0.1236666664481163, 0.12533333897590637, 0.12566666305065155, 0.1223333328962326, 0.11900000274181366, 0.11900000274181366, 0.11533333361148834, 0.11366666853427887]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 2, 1, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [19, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10171428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.multiply(beta, tf.math.add(beta, beta)), beta)))), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), beta)), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.991955124864237, 8.970904594551127e+20, NaN, NaN, NaN, NaN], "accuracy": [0.19152027368545532, 0.12217672914266586, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0740556035723006, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 1, 2, 5, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [6, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.multiply(beta, grad))), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), beta)), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(beta), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7.13210689336585, 1290260.8816927616, 27489149408.38251, 422701946606020.8, 4.597905014779456e+18, 3.170107308348658e+22, 1.032791560806799e+27, NaN], "accuracy": [0.09509972482919693, 0.09919429570436478, 0.09589222073554993, 0.09985470771789551, 0.09959053993225098, 0.09774138033390045, 0.09826971590518951, 0.10077928751707077], "val_loss": [955.5823451450893, 19040470.85714286, 451794670153.1429, 9279821997071214.0, 1.628623664764931e+20, 1.079830110561199e+24, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10433333367109299, 0.10100000351667404, 0.10066666454076767, 0.09966666996479034, 0.09833333641290665, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), beta))), grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), grad))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023017551826213, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 2, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 3, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 25, 25, 12, 13, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.multiply(beta, beta), tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), beta)), alpha)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023017551826213, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [8, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 1, 3, 1, 8, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 16, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.subtract(beta, tf.math.add(beta, tf.math.multiply(grad, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 5, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 5, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302133435633645, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10460969805717468, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 2, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 77, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), beta)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [5, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [75, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.09914285689592361, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300672724073463, 2.3025274054406735, 2.303152010283686, 2.309963361351891, 2.421623316297379, 3.3418465381789093, 5.866335612246546, 10.573441511478407, 17.783763533050454], "accuracy": [0.09866596013307571, 0.08387266844511032, 0.10117553919553757, 0.10051512718200684, 0.09998679161071777, 0.09602430462837219, 0.09985470771789551, 0.0956280529499054, 0.10276053100824356], "val_loss": [1.9733522278921944, 1.9740801538739885, 1.975698402949742, 1.997885022844587, 2.357090813773019, 3.904571669442313, 7.207289287022182, 12.591941016060966, 20.341480800083705], "val_accuracy": [0.08833333104848862, 0.09733333438634872, 0.09799999743700027, 0.10166666656732559, 0.10166666656732559, 0.0989999994635582, 0.10166666656732559, 0.09799999743700027, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 1, 3, 4, 1, 2, 4, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), beta)), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024558752692528, 2.3016733013171216, 2.302819244172894, 2.3030475979987513, 2.301653641530819, 2.3045278072609108], "accuracy": [0.09140139818191528, 0.09325055778026581, 0.08928807079792023, 0.09140139818191528, 0.09087307006120682, 0.08479725569486618], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 1, 3, 9, 3, 1, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 1, 3, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 14, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), beta)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024558752692528, 2.3016733013171216, 2.302819244172894, 2.3030475979987513, 2.301653641530819, 2.3045278072609108], "accuracy": [0.09140139818191528, 0.09325055778026581, 0.08928807079792023, 0.09140139818191528, 0.09087307006120682, 0.08479725569486618], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 3, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 0, 0, 3, 1, 3, 3, 2, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 41, 39, 57, 9], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 10, 7, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, beta)), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024558752692528, 2.3016733013171216, 2.302819244172894, 2.3030475979987513, 2.301653641530819, 2.3045278072609108], "accuracy": [0.09140139818191528, 0.09325055778026581, 0.08928807079792023, 0.09140139818191528, 0.09087307006120682, 0.08479725569486618], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 9, 10, 3, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, alpha)), tf.math.add(beta, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024558752692528, 2.3016733013171216, 2.302819244172894, 2.3030475979987513, 2.301653641530819, 2.3045278072609108], "accuracy": [0.09140139818191528, 0.09325055778026581, 0.08928807079792023, 0.09140139818191528, 0.09087307006120682, 0.08479725569486618], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]