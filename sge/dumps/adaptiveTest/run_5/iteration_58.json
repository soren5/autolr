[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7442857027053833, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29991698488662, 2.291263912993494, 2.2839966635300324, 2.275871700063405, 2.266782074336126, 2.260443768748801, 2.249694318094935, 2.2400755480437655, 2.2291578886893446, 2.2197251946241816, 2.2087561122147066, 2.1958238767075455, 2.1803155225013873, 2.1628100663254273, 2.1466461459580444, 2.130967063611572, 2.1055047863809233, 2.080759564820313, 2.059263169726109, 2.0348774775254523, 2.0036865428233774, 1.97665462558768, 1.9405157075755237, 1.9038909970808653, 1.8696085254293564, 1.8369849523485864, 1.794952367574248, 1.7481720452421392, 1.7134913379616032, 1.6755941042165086, 1.6317305277052367, 1.6008285867256211, 1.5727629932540361, 1.535087643770604, 1.504517080415084, 1.4766401408166145, 1.4452780174966564, 1.4107089406542412, 1.3887587804930352, 1.3603068074026223, 1.3424411440852957, 1.3235019808353419, 1.2959204082869424, 1.2680758175801419, 1.2591378490733685, 1.2449790630452684, 1.2198744386871494, 1.2072638894242225, 1.1965157065204484, 1.1830296498626025, 1.1667237112220126, 1.152583762387306, 1.140477287550455, 1.1230460936445932, 1.1254407493839207, 1.1074516231263272, 1.099827555239618, 1.0796907199860375, 1.0712517361363179, 1.0723741945888483, 1.0584721793556542, 1.046449352201926, 1.0399772940279077, 1.0400953325754805, 1.030676241280648, 1.0126686807416292, 1.012052112480023, 1.0117886817497805, 1.0053434357934734, 0.99906441227257, 0.9852046811144507, 0.9868513022777884, 0.9723350370974195, 0.9674063784933487, 0.9749334762754882, 0.9593183620022335, 0.9536693419101389, 0.9465628766963164, 0.9454951810484092, 0.9334670075918657, 0.9325055935757272, 0.9348374846478841, 0.9295057552271138, 0.9168000351861484, 0.9216861475838205, 0.9113629185890462, 0.9210276732811948, 0.9024028299412534, 0.898348365044471, 0.8985732741217966, 0.8911337056306091, 0.89468294723773, 0.893236106562498, 0.8992600487664454, 0.8744643800498914, 0.8667618772687851, 0.8709285208388815, 0.8751049579142454, 0.867501540127967, 0.8624841582899505], "accuracy": [0.09655263274908066, 0.1158367469906807, 0.13697001338005066, 0.15995244681835175, 0.18663319945335388, 0.2067098170518875, 0.22440892457962036, 0.2429005354642868, 0.2631092369556427, 0.27961960434913635, 0.2921674847602844, 0.3136970102787018, 0.3273015320301056, 0.3419627547264099, 0.35662394762039185, 0.3533218801021576, 0.37683266401290894, 0.3885880410671234, 0.3877955377101898, 0.4035134017467499, 0.41011756658554077, 0.4085325598716736, 0.42345792055130005, 0.431779146194458, 0.44089287519454956, 0.44670453667640686, 0.454629510641098, 0.46427157521247864, 0.47589486837387085, 0.48210275173187256, 0.48831066489219666, 0.499009370803833, 0.4987452030181885, 0.5081230998039246, 0.511821448802948, 0.5145951509475708, 0.5267468094825745, 0.5425967574119568, 0.5357284545898438, 0.5519746541976929, 0.5503896474838257, 0.549068808555603, 0.5601637959480286, 0.5655791759490967, 0.5678246021270752, 0.5692775249481201, 0.5815612077713013, 0.5835424661636353, 0.5822216272354126, 0.5845991373062134, 0.590278685092926, 0.6009774208068848, 0.6012415885925293, 0.6053361296653748, 0.6024303436279297, 0.6152423620223999, 0.6127327680587769, 0.6213181614875793, 0.6240919232368469, 0.6277902722358704, 0.6240919232368469, 0.6225069165229797, 0.6305639743804932, 0.6342623233795166, 0.6339981555938721, 0.6411306262016296, 0.6436402201652527, 0.640338122844696, 0.6446968913078308, 0.6415268778800964, 0.6583014130592346, 0.6473385095596313, 0.6497160196304321, 0.655527651309967, 0.6584334969520569, 0.6612072587013245, 0.6618676781654358, 0.6650376319885254, 0.6639809608459473, 0.6741513609886169, 0.6643772125244141, 0.663848876953125, 0.6692643165588379, 0.6757363677024841, 0.6716417670249939, 0.6750759482383728, 0.6756042838096619, 0.6773213744163513, 0.6853784322738647, 0.6793025732040405, 0.6832650899887085, 0.6832650899887085, 0.6845859289169312, 0.6767930388450623, 0.6903975605964661, 0.6926429867744446, 0.6816800832748413, 0.684982180595398, 0.6864351034164429, 0.6906617283821106], "val_loss": [1.9635708672659737, 1.9562173570905412, 1.948812416621617, 1.9413649695260184, 1.9335459981645857, 1.925393785749163, 1.9166344915117537, 1.907353401184082, 1.8973043305533273, 1.886439664023263, 1.874652521950858, 1.8615710394723075, 1.8471059117998396, 1.831200395311628, 1.813652515411377, 1.794794695717948, 1.7736655644008092, 1.7504730224609375, 1.725407259804862, 1.6984419482094901, 1.6692362853458949, 1.638106107711792, 1.6047985213143485, 1.5697415215628487, 1.5332990033285958, 1.4953948429652624, 1.4566864626748222, 1.416670628956386, 1.3770047255924769, 1.3376579284667969, 1.298170464379447, 1.2597637176513672, 1.22347320829119, 1.1885956696101598, 1.1554015023367745, 1.1238743918282645, 1.0944933550698417, 1.0667142868041992, 1.0409096309116908, 1.016411576952253, 0.9936618464333671, 0.9725077152252197, 0.9525298731667655, 0.9336216790335519, 0.9165402821132115, 0.900547913142613, 0.8849147047315326, 0.870742951120649, 0.8579298257827759, 0.8451483249664307, 0.8332874945231846, 0.8219481706619263, 0.8115276438849313, 0.8016169582094465, 0.7927979060581752, 0.7838768277849469, 0.7758721283503941, 0.7674652338027954, 0.7594338144574847, 0.7524773904255458, 0.7457444838115147, 0.7391586644308907, 0.7333504642759051, 0.7273169245038714, 0.7219841139657157, 0.7162347521100726, 0.7110426936830793, 0.7064260244369507, 0.7021176985331944, 0.697575569152832, 0.6927240576062884, 0.6885051727294922, 0.6844791344233921, 0.6803795439856393, 0.6770758969443185, 0.6734151329313006, 0.6701377970831734, 0.6666801656995501, 0.6632786989212036, 0.6600140503474644, 0.6571354014532906, 0.6537505388259888, 0.6512227058410645, 0.6479027782167707, 0.6453345673424857, 0.6427209717886788, 0.640987753868103, 0.637956040246146, 0.6352464982441494, 0.6330166033336094, 0.6306356191635132, 0.6282424415860858, 0.6264417512076241, 0.6241454056331089, 0.6217411926814488, 0.6193728106362479, 0.6172613756997245, 0.6150462286812919, 0.6130118710654122, 0.6109599215643746], "val_accuracy": [0.09066666662693024, 0.1616666615009308, 0.2329999953508377, 0.29100000858306885, 0.3370000123977661, 0.3633333444595337, 0.38233333826065063, 0.3956666588783264, 0.40966665744781494, 0.4269999861717224, 0.4399999976158142, 0.44600000977516174, 0.4596666693687439, 0.4690000116825104, 0.4830000102519989, 0.49300000071525574, 0.5043333172798157, 0.5170000195503235, 0.5263333320617676, 0.5353333353996277, 0.5440000295639038, 0.5526666641235352, 0.5609999895095825, 0.5669999718666077, 0.5763333439826965, 0.581333339214325, 0.5870000123977661, 0.590666651725769, 0.5923333168029785, 0.5933333039283752, 0.6013333201408386, 0.6050000190734863, 0.609333336353302, 0.6169999837875366, 0.6256666779518127, 0.6380000114440918, 0.6463333368301392, 0.6549999713897705, 0.6626666784286499, 0.6663333177566528, 0.6713333129882812, 0.675000011920929, 0.6776666641235352, 0.6806666851043701, 0.6803333163261414, 0.6813333630561829, 0.6883333325386047, 0.6919999718666077, 0.6946666836738586, 0.6940000057220459, 0.6973333358764648, 0.6976666450500488, 0.6993333101272583, 0.7016666531562805, 0.7020000219345093, 0.7043333053588867, 0.7056666612625122, 0.706333339214325, 0.7066666483879089, 0.7099999785423279, 0.7126666903495789, 0.7133333086967468, 0.7126666903495789, 0.7126666903495789, 0.7129999995231628, 0.7179999947547913, 0.7179999947547913, 0.7203333377838135, 0.718666672706604, 0.7233333587646484, 0.7243333458900452, 0.7250000238418579, 0.7243333458900452, 0.7253333330154419, 0.7263333201408386, 0.7273333072662354, 0.7286666631698608, 0.7289999723434448, 0.7300000190734863, 0.7303333282470703, 0.7316666841506958, 0.7319999933242798, 0.7319999933242798, 0.7333333492279053, 0.7329999804496765, 0.7329999804496765, 0.734000027179718, 0.7353333234786987, 0.7360000014305115, 0.7363333106040955, 0.7366666793823242, 0.7379999756813049, 0.7379999756813049, 0.7379999756813049, 0.7379999756813049, 0.7393333315849304, 0.7419999837875366, 0.7426666617393494, 0.7440000176429749, 0.7436666488647461]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7440000176429749, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29991698488662, 2.2912639759755518, 2.2839966635300324, 2.275871695591679, 2.26678202486372, 2.2604437372577726, 2.2496943675673413, 2.2400755660251432, 2.2291580461444886, 2.2197254330427607, 2.2087559547595625, 2.1958233953986612, 2.180314505845013, 2.1628088562511545, 2.146644751503798, 2.1309648098616223, 2.1055016959773205, 2.0807571986159, 2.0592592921412587, 2.0348731140655185, 2.0036818598869566, 1.9766502329198172, 1.9405124170936692, 1.9038865166002685, 1.8696051336723531, 1.8369827007872632, 1.7949503162801226, 1.7481690335661082, 1.713489264356084, 1.6755888405540253, 1.6317300258012197, 1.6008296104202402, 1.57276115773644, 1.535083797771256, 1.504513497381572, 1.476636508216223, 1.4452732486054725, 1.4107087903790518, 1.3887562746731454, 1.3603041302400447, 1.3424381413054802, 1.323500481012113, 1.2959194206495515, 1.2680779924135734, 1.2591369044842138, 1.2449833686089455, 1.2198761269369491, 1.2072659329558093, 1.1965175353776918, 1.183032098557766, 1.1667270789671065, 1.1525827263639492, 1.1404755444117918, 1.1230501726933002, 1.1254439363547635, 1.1074488123788053, 1.0998325376714682, 1.0797003380232923, 1.0712540441610559, 1.072372609330458, 1.0584696165527476, 1.0464501031842355, 1.0399620824438973, 1.0400861114983893, 1.0306646569750455, 1.0126713804754015, 1.0120589171402552, 1.0117941737064768, 1.0053507433811812, 0.9990786466112289, 0.9852237496803056, 0.9868484179987144, 0.9723406966493713, 0.9674027747308668, 0.974941083830991, 0.9593217159542567, 0.9536791647886634, 0.9465700983843705, 0.9454883398822018, 0.9334650855447952, 0.9325127580603273, 0.9348437768152409, 0.9294949670777014, 0.9168088009816906, 0.9216860552914878, 0.9113596488519068, 0.9210324434398928, 0.9024056635591348, 0.898338405250826, 0.8985701636111716, 0.8911560988303393, 0.8946943771664366, 0.8932383231609063, 0.8992489410224545, 0.8744792764638125, 0.8667688035867344, 0.8709098012723534, 0.8751048513486038, 0.8675000355968291, 0.8624717612245126], "accuracy": [0.09655263274908066, 0.1158367469906807, 0.13697001338005066, 0.15995244681835175, 0.18663319945335388, 0.2067098170518875, 0.22440892457962036, 0.2429005354642868, 0.2631092369556427, 0.27961960434913635, 0.2921674847602844, 0.3136970102787018, 0.3273015320301056, 0.3420948386192322, 0.35662394762039185, 0.3533218801021576, 0.3769647479057312, 0.3885880410671234, 0.3879276216030121, 0.4035134017467499, 0.41011756658554077, 0.4085325598716736, 0.42345792055130005, 0.431779146194458, 0.44089287519454956, 0.44670453667640686, 0.454629510641098, 0.46427157521247864, 0.47589486837387085, 0.48210275173187256, 0.4881785809993744, 0.49887728691101074, 0.49887728691101074, 0.5081230998039246, 0.511821448802948, 0.5145951509475708, 0.5268788933753967, 0.5428609251976013, 0.5357284545898438, 0.5518425703048706, 0.550521731376648, 0.549068808555603, 0.5602958798408508, 0.5654470920562744, 0.5678246021270752, 0.5692775249481201, 0.581429123878479, 0.5835424661636353, 0.5822216272354126, 0.5845991373062134, 0.5901466012001038, 0.601109504699707, 0.6013736724853516, 0.6053361296653748, 0.602562427520752, 0.6153744459152222, 0.6129969358444214, 0.6214502453804016, 0.6239598393440247, 0.6279223561286926, 0.6240919232368469, 0.6225069165229797, 0.6305639743804932, 0.6343944072723389, 0.6341302394866943, 0.6409985423088074, 0.6435081362724304, 0.640338122844696, 0.6449610590934753, 0.6415268778800964, 0.6581693291664124, 0.6473385095596313, 0.6497160196304321, 0.6553955674171448, 0.6583014130592346, 0.6612072587013245, 0.6619997620582581, 0.6649055480957031, 0.6639809608459473, 0.6741513609886169, 0.6645092964172363, 0.6639809608459473, 0.6692643165588379, 0.6756042838096619, 0.6716417670249939, 0.6750759482383728, 0.6756042838096619, 0.6773213744163513, 0.685510516166687, 0.6794346570968628, 0.6833971738815308, 0.683000922203064, 0.6845859289169312, 0.6770572066307068, 0.6903975605964661, 0.6929071545600891, 0.6818121671676636, 0.6851142644882202, 0.6863030195236206, 0.6906617283821106], "val_loss": [1.9635708672659737, 1.9562173570905412, 1.948812416621617, 1.9413649014064245, 1.9335459981645857, 1.925393717629569, 1.9166347639901298, 1.9073535374232702, 1.8973048073904855, 1.8864399365016393, 1.8746521132332938, 1.861569949558803, 1.8471044131687708, 1.8311990329197474, 1.8136508124215263, 1.7947914259774345, 1.773662907736642, 1.7504704339163644, 1.725402900150844, 1.6984368392399378, 1.6692320959908622, 1.6381031785692488, 1.6047945703778947, 1.5697368894304549, 1.5332952908107214, 1.495391573224749, 1.4566840444292342, 1.4166669845581055, 1.3769960403442383, 1.3376539434705461, 1.2981651169913155, 1.259763274874006, 1.2234700407300676, 1.1885910034179688, 1.1553960187094552, 1.1238703387124198, 1.0944933210100447, 1.066711698259626, 1.040905441556658, 1.0164079325539725, 0.993657044001988, 0.9725039345877511, 0.9525266374860492, 0.9336216790335519, 0.9165410654885429, 0.9005504335675921, 0.8849236624581474, 0.8707532712391445, 0.8579418999808175, 0.8451611825398037, 0.8332958051136562, 0.8219581842422485, 0.8115361077444894, 0.8016214881624494, 0.7927992343902588, 0.7838802507945469, 0.7758758578981672, 0.7674651997429984, 0.7594350235802787, 0.7524763005120414, 0.7457445178713117, 0.7391530105045864, 0.7333510092326573, 0.7273090566907611, 0.7219750370298114, 0.7162432159696307, 0.7110513619014195, 0.7064285789217267, 0.7021238292966571, 0.6975892271314349, 0.6927377666745868, 0.6885095664433071, 0.6844813823699951, 0.6803804806300572, 0.6770853485379901, 0.6734226431165423, 0.6701415436608451, 0.6666895491736275, 0.6632807084492275, 0.6600191593170166, 0.6571385860443115, 0.6537527016230992, 0.6512201002665928, 0.6479118381227765, 0.6453285046986171, 0.6427178382873535, 0.6409898315157209, 0.6379455838884626, 0.6352364846638271, 0.6330209118979317, 0.6306336096354893, 0.6282399381910052, 0.6264335768563407, 0.6241468191146851, 0.621742708342416, 0.6193649768829346, 0.6172553130558559, 0.6150520869663784, 0.6130254438945225, 0.6109669378825596], "val_accuracy": [0.09066666662693024, 0.1616666615009308, 0.2329999953508377, 0.29100000858306885, 0.3370000123977661, 0.3633333444595337, 0.38233333826065063, 0.3956666588783264, 0.40966665744781494, 0.4269999861717224, 0.4399999976158142, 0.44600000977516174, 0.4596666693687439, 0.4690000116825104, 0.4830000102519989, 0.49300000071525574, 0.5043333172798157, 0.5163333415985107, 0.5263333320617676, 0.5353333353996277, 0.5440000295639038, 0.5526666641235352, 0.5609999895095825, 0.5669999718666077, 0.5763333439826965, 0.581333339214325, 0.5870000123977661, 0.590666651725769, 0.5923333168029785, 0.593666672706604, 0.6013333201408386, 0.6050000190734863, 0.609333336353302, 0.6166666746139526, 0.6259999871253967, 0.6380000114440918, 0.6463333368301392, 0.6549999713897705, 0.6626666784286499, 0.6663333177566528, 0.6713333129882812, 0.675000011920929, 0.6776666641235352, 0.6806666851043701, 0.6803333163261414, 0.6813333630561829, 0.6883333325386047, 0.6919999718666077, 0.6946666836738586, 0.6940000057220459, 0.6976666450500488, 0.6976666450500488, 0.6993333101272583, 0.7016666531562805, 0.7020000219345093, 0.7043333053588867, 0.7056666612625122, 0.706333339214325, 0.7066666483879089, 0.7099999785423279, 0.7126666903495789, 0.7136666774749756, 0.7129999995231628, 0.7126666903495789, 0.7129999995231628, 0.7179999947547913, 0.7179999947547913, 0.7203333377838135, 0.718666672706604, 0.7233333587646484, 0.7243333458900452, 0.7250000238418579, 0.7243333458900452, 0.7253333330154419, 0.7260000109672546, 0.7276666760444641, 0.7286666631698608, 0.7289999723434448, 0.7300000190734863, 0.7303333282470703, 0.7316666841506958, 0.7319999933242798, 0.7319999933242798, 0.7333333492279053, 0.7323333621025085, 0.7333333492279053, 0.734000027179718, 0.7353333234786987, 0.7356666922569275, 0.7363333106040955, 0.7363333106040955, 0.7379999756813049, 0.7379999756813049, 0.737666666507721, 0.7379999756813049, 0.7393333315849304, 0.7419999837875366, 0.7423333525657654, 0.7440000176429749, 0.7440000176429749]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1], [1, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7139999866485596, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.501186709220714, 2.3720041529660874, 2.216085680314279, 2.263816719719007, 2.5362534283993345, 2.1057052467918322, 2.0376182837083814, 1.6184333278014598, 1.4695148579968185, 1.3055922371159299, 1.1248058191364183, 1.0919416633658106, 0.954313353918421, 0.8978984469294218, 0.8898727371550633, 0.8722489365749135, 0.8684087907554703, 0.8462990501600565, 0.7740087490654294, 0.7628633086833467, 0.7544216173215706, 0.7263647744904703, 0.7275536259986375, 0.6934933332467297, 0.6815873033035826, 0.6817222132800577, 0.6749944499832937, 0.6748683311447664, 0.648352661050621, 0.6315408726614605, 0.6250124039934642, 0.5817336610925196, 0.5839820931049433], "accuracy": [0.21714437007904053, 0.1628582775592804, 0.1834632158279419, 0.16100911796092987, 0.19442610442638397, 0.2588825821876526, 0.2954695522785187, 0.44710078835487366, 0.4760269522666931, 0.520142674446106, 0.5888257622718811, 0.6000528335571289, 0.6407343745231628, 0.6561880707740784, 0.6617355942726135, 0.667811393737793, 0.6717738509178162, 0.677189290523529, 0.6929071545600891, 0.7028133869171143, 0.7065116763114929, 0.717870831489563, 0.709021270275116, 0.7226257920265198, 0.7292299270629883, 0.735569953918457, 0.7407211661338806, 0.7318716049194336, 0.7448157668113708, 0.750231146812439, 0.7581561207771301, 0.7736098170280457, 0.7696473598480225], "val_loss": [1.9748622349330358, 1.973479952130999, 2.1455114909580777, 1.9333703858511788, 1.456336600439889, 1.4390883105141776, 1.3600438662937708, 1.256042446408953, 1.0958027499062675, 0.791047385760716, 0.7760789905275617, 0.7141550438744682, 0.6847048316683088, 0.7216961213520595, 0.7570269618715558, 0.6614078964505877, 0.6335343292781285, 0.5977842296872821, 0.602159857749939, 0.6051129102706909, 0.5807128633771624, 0.5922575167247227, 0.5437972545623779, 0.5410664422171456, 0.5958859920501709, 0.5195377213614327, 0.5300418308803013, 0.5048478501183646, 0.5338532243456159, 0.5113628080912999, 0.49399047238486155, 0.5196595532553536, 0.4667447805404663], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10166666656732559, 0.2133333384990692, 0.37466666102409363, 0.4793333411216736, 0.4816666543483734, 0.47333332896232605, 0.49266666173934937, 0.6549999713897705, 0.6186666488647461, 0.6773333549499512, 0.6840000152587891, 0.6826666593551636, 0.6513333320617676, 0.6840000152587891, 0.7003333568572998, 0.7166666388511658, 0.721666693687439, 0.7233333587646484, 0.7276666760444641, 0.6883333325386047, 0.7453333139419556, 0.7443333268165588, 0.7099999785423279, 0.7540000081062317, 0.749666690826416, 0.7836666703224182, 0.749666690826416, 0.7563333511352539, 0.7723333239555359, 0.7570000290870667, 0.7760000228881836]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [1, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 3, 5, 1, 1, 2], [42], [0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0], [3, 4, 7], [2, 7, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, alpha)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 0, 2, 0, 5, 3], [42, 87], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(beta, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 4, 0, 5, 4, 1], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 1, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(beta), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 1, 4, 5], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 1, 2, 0, 1], [42, 17], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4, 9], [2, 0, 1, 5, 3, 4], [35], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [25, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(beta, tf.math.pow(grad, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [3, 0, 2, 1], [6, 28, 79], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022228339092843, 2.302592174393736, 2.3025919452020283, 2.302592777478429, 2.3026084429426374, 2.3025972259011582, 2.3025975050691287], "accuracy": [0.09100515395402908, 0.09893012791872025, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736432347978865, 1.9736392157418388, 1.9736452783857072, 1.9736437116350447, 1.9736512047903878, 1.9736527034214564, 1.9736553600856237], "val_accuracy": [0.09833333641290665, 0.10433333367109299, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [9, 5, 8, 3, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 1, 4, 1, 1, 5, 4], [42], [0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1], [3, 4, 9], [2, 0, 1, 5, 3, 4], [4], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7450424.5597485425, 140093918.05996567, 659253135.9091269, 1809697799.0331528, 3906007499.6571126, 7201119074.971338], "accuracy": [0.09826971590518951, 0.10447761416435242, 0.09602430462837219, 0.10091137140989304, 0.10355303436517715, 0.1014397069811821], "val_loss": [27952700.57142857, 223245737.14285713, 753036763.4285715, 1784482925.7142856, 3484744557.714286, 6020970349.714286], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1], [7, 5, 9, 4, 5], [3, 0, 2, 1], [6, 28, 79], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 0, 2, 1, 4, 0, 2, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 2, 1, 4, 3], [42], [1, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 3, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [25, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 8, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(grad)))))))), tf.math.add(tf.math.pow(beta, alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [1, 0, 2, 1], [1, 28, 79], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1], [1, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(sigma, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302209977098444, 2.3025782599252023, 2.302579073842333, 2.30257882704714, 2.30256633723275, 2.302581508445261, 2.302583159960776], "accuracy": [0.1018359512090683, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736457552228654, 1.9736497061593192, 1.9736454146248954, 1.9736486843654089, 1.9736460277012415, 1.9736486162458147, 1.9736521584647042], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1], [3, 4, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 3, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(sigma))", "other_info": {"loss": [2.302206138782907, 2.302576549899356, 2.302683401573855, 2.303520796620504, 2.363441532849478, 2.4423159769796627, 2.3811322171154936, 2.325180949536234, 2.3287021042475247, 2.4630329671584383, 2.508797138815212], "accuracy": [0.1014397069811821, 0.09747721254825592, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09774138033390045, 0.09747721254825592, 0.09998679161071777, 0.09972262382507324, 0.1006472036242485, 0.09589222073554993], "val_loss": [1.9736646243504115, 1.9736450740269251, 1.9738489559718542, 1.9784722328186035, 2.029268673488072, 2.096954277583531, 1.996885027204241, 1.9788391249520438, 2.0737408910478865, 2.1022736685616628, 2.0666983468191966], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 0, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [0, 0, 1, 1], [3, 4, 9], [5, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 3, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 9, 4, 5], [3, 0, 2, 1], [39, 10, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [44, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3069239940310764, 2.402269444114827, 2.908492467595822, 3.812070744904576, 4.950750688976852, 6.286376294521624], "accuracy": [0.09747721254825592, 0.10355303436517715, 0.09906221181154251, 0.10210011899471283, 0.09192973375320435, 0.10117553919553757], "val_loss": [1.9903712272644043, 2.2461389814104353, 2.901030949183873, 3.7979811259678433, 4.883803367614746, 6.12387752532959], "val_accuracy": [0.10100000351667404, 0.0989999994635582, 0.10100000351667404, 0.0989999994635582, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1], [8, 5, 9, 4, 5], [3, 0, 2, 1], [39, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [35], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [25, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022147320548476, 2.302585053421865, 2.302584361658435, 2.3025861888309085, 2.302585386502477, 2.3025845330011228], "accuracy": [0.10117553919553757, 0.1014397069811821, 0.10091137140989304, 0.09866596013307571, 0.109232597053051, 0.10130762308835983], "val_loss": [1.9736413955688477, 1.9736425536019462, 1.9736407824925013, 1.9736425536019462, 1.9736418724060059, 1.9736415999276298], "val_accuracy": [0.10433333367109299, 0.10100000351667404, 0.10100000351667404, 0.09799999743700027, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [0, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06771428883075714, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302679298670694, 2.3012360455164456, 2.3010708569630087, 2.300452778100369, 2.299790044455024, 2.3015604449647404, 2.2999789971780027, 2.2992326833820456, 2.2992347210720467, 2.2997519131649, 2.3000301905060017, 2.299827378990628, 2.299397596861346, 2.2994233653089076, 2.299834515519067, 2.300682882292081, 2.3000188240710817, 2.2997921800821244], "accuracy": [0.09113723784685135, 0.09087307006120682, 0.09668471664190292, 0.0956280529499054, 0.0952318087220192, 0.09549596905708313, 0.09800554811954498, 0.10170386731624603, 0.10315678268671036, 0.10051512718200684, 0.1014397069811821, 0.10606260597705841, 0.09866596013307571, 0.10091137140989304, 0.10751552134752274, 0.09893012791872025, 0.09826971590518951, 0.10302469879388809], "val_loss": [1.970146587916783, 1.9697374616350447, 1.9693574905395508, 1.9693497930254256, 1.9694288117544991, 1.969423702784947, 1.9693759509495325, 1.96936069216047, 1.9693569455827986, 1.9694293567112513, 1.9694196156093053, 1.96953889301845, 1.9697962488446916, 1.9700309889657157, 1.9702123233250208, 1.9703950200762068, 1.9707084383283342, 1.970895494733538], "val_accuracy": [0.04833333194255829, 0.054999999701976776, 0.059333331882953644, 0.060333333909511566, 0.06199999898672104, 0.06599999964237213, 0.07199999690055847, 0.07199999690055847, 0.07466666400432587, 0.07599999755620956, 0.07900000363588333, 0.08033332973718643, 0.08233333379030228, 0.08166666328907013, 0.08233333379030228, 0.0820000022649765, 0.08166666328907013, 0.08133333176374435]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 3, 1, 2, 3, 4, 0, 2], [42], [1, 0, 1, 0, 1], [0, 1, 1, 0], [0, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30314934189136, 2.302395733576472, 2.302961529269588, 2.3024924888492433, 2.301804338038763, 2.303786057617214], "accuracy": [0.08928807079792023, 0.08849557489156723, 0.09311848133802414, 0.09100515395402908, 0.08611807972192764, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [9, 5, 9, 4, 8], [2, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 2, 3, 0, 5, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [35], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30314934189136, 2.302395733576472, 2.302961529269588, 2.3024924888492433, 2.301804338038763, 2.303786057617214], "accuracy": [0.08928807079792023, 0.08849557489156723, 0.09311848133802414, 0.09100515395402908, 0.08611807972192764, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [2, 0, 2, 1], [6, 28, 79], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 4, 0, 4, 5], [42, 52], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [22], [1, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30314934189136, 2.302395733576472, 2.302961529269588, 2.3024924888492433, 2.301804338038763, 2.303786057617214], "accuracy": [0.08928807079792023, 0.08849557489156723, 0.09311848133802414, 0.09100515395402908, 0.08611807972192764, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]