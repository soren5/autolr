[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 9, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.840571403503418, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.0016655041289413, 1.0774596829329972, 0.7683582688051838, 0.6879002529679509, 0.6334940138557221, 0.5945448947777885, 0.570235848127654, 0.5260852739803386, 0.5068095023873586, 0.4861641839321783, 0.47128533808436485, 0.44873848471265537, 0.4298313853369413, 0.4145318073855415, 0.4062372980541667, 0.40341560021997397, 0.3903926349807299, 0.3739457328038335, 0.36724980694506665, 0.3487119420510651, 0.3457810288454327, 0.32789232545147134, 0.3227717986259289, 0.3204217580181654, 0.31746099256111915, 0.30810605614822395, 0.3060806703455712, 0.30397353789054044, 0.28959457246603165, 0.286017596646858, 0.2652984838270949, 0.2552558236299426, 0.25179948631278937, 0.2455347106441326, 0.2477738009806338, 0.2412842025082613, 0.2313649258506832, 0.23256634740450946, 0.21680960960793474, 0.2208021649075474, 0.21564524647046734, 0.2037574732859436, 0.191061433705325, 0.1999961408279544, 0.18807782118015948, 0.18619351094117995, 0.18328653469636472], "accuracy": [0.3171311616897583, 0.609430730342865, 0.7025492191314697, 0.7380794882774353, 0.754589855670929, 0.7709681391716003, 0.7803460359573364, 0.8006868362426758, 0.8064984679222107, 0.8146876096725464, 0.824329674243927, 0.8327829837799072, 0.844010055065155, 0.8459912538528442, 0.8482366800308228, 0.8518029451370239, 0.8556333184242249, 0.8527275323867798, 0.8609166741371155, 0.8647470474243164, 0.8640866279602051, 0.8749174475669861, 0.8811253309249878, 0.8784837126731873, 0.8795403242111206, 0.8829745054244995, 0.878351628780365, 0.8815215826034546, 0.8897107243537903, 0.8831065893173218, 0.9019944667816162, 0.8988244533538818, 0.9022586345672607, 0.9039757251739502, 0.90423983335495, 0.904768168926239, 0.9125610589981079, 0.9062210917472839, 0.9141460657119751, 0.913089394569397, 0.9144102334976196, 0.9204860925674438, 0.9249768853187561, 0.9220710396766663, 0.927882730960846, 0.9285431504249573, 0.9294676780700684], "val_loss": [0.9163188593728202, 0.6237534625189645, 0.5541927984782627, 0.5090857063020978, 0.4809391839163644, 0.44859198161533903, 0.43047490290233065, 0.4132491775921413, 0.40164071321487427, 0.3862217835017613, 0.37029040711266653, 0.363980165549687, 0.36730373757226126, 0.34885951450892855, 0.34319948298590525, 0.3613140157290867, 0.3517891253743853, 0.33280626365116667, 0.33632532187870573, 0.32762694358825684, 0.32158398628234863, 0.32533308437892366, 0.3240665537970407, 0.327748783997127, 0.3241559607642038, 0.3209907327379499, 0.3184454185622079, 0.32293582814080374, 0.31558057240077425, 0.31257721355983187, 0.31404643399374826, 0.31494065693446566, 0.3188940627234323, 0.3066131728036063, 0.30797102621623446, 0.3126910414014544, 0.31605161087853567, 0.31334640298570904, 0.3165784478187561, 0.3088752882821219, 0.30663271461214336, 0.3130433814866202, 0.31533481393541607, 0.311758075441633, 0.3264944553375244, 0.3234621456691197, 0.32100012472697664], "val_accuracy": [0.5676666498184204, 0.715666651725769, 0.7483333349227905, 0.7646666765213013, 0.7746666669845581, 0.7960000038146973, 0.8109999895095825, 0.8106666803359985, 0.8216666579246521, 0.8323333263397217, 0.8456666469573975, 0.8446666598320007, 0.8450000286102295, 0.8516666889190674, 0.856333315372467, 0.8429999947547913, 0.8506666421890259, 0.8656666874885559, 0.8576666712760925, 0.8603333234786987, 0.8653333187103271, 0.8663333058357239, 0.8663333058357239, 0.8666666746139526, 0.8616666793823242, 0.8640000224113464, 0.8666666746139526, 0.8633333444595337, 0.8723333477973938, 0.8700000047683716, 0.8700000047683716, 0.8743333220481873, 0.871999979019165, 0.878000020980835, 0.8769999742507935, 0.8743333220481873, 0.8730000257492065, 0.8723333477973938, 0.8803333044052124, 0.8759999871253967, 0.8799999952316284, 0.8843333125114441, 0.8816666603088379, 0.8786666393280029, 0.8740000128746033, 0.875333309173584, 0.8806666731834412]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8391428589820862, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.001657979237389, 1.0781928274956172, 0.7688613173795051, 0.6880662466131575, 0.6342584669015285, 0.5948067788733876, 0.5669483477019709, 0.5255471765325841, 0.5075322478879728, 0.4877786969881898, 0.4716309390724957, 0.4517329153903109, 0.4322460043888523, 0.418818485180243, 0.41078267294606985, 0.40895718830908134, 0.3935668494179894, 0.38237654972684193, 0.36848957962001616, 0.35117724961010127, 0.3492934898284007, 0.32990092385509595, 0.32388334396083546, 0.3219534472042402, 0.3182955049229273, 0.3095437956130295, 0.29908303820997134, 0.2960788294222251, 0.2883281603607094, 0.28016966988366154, 0.2666537499643509, 0.2546536456072697, 0.2503654336719906, 0.24582879653090042, 0.24505175231879556, 0.23210017660416474, 0.22684786237580445, 0.22747581896450006, 0.21969317241257302, 0.2207443407281452], "accuracy": [0.3171311616897583, 0.6089023947715759, 0.7024171352386475, 0.7387399077415466, 0.757099449634552, 0.7693831920623779, 0.785101056098938, 0.8000264167785645, 0.8067626357078552, 0.8170651197433472, 0.8222163319587708, 0.8285563588142395, 0.8422929644584656, 0.845859169960022, 0.8459912538528442, 0.8515387773513794, 0.8515387773513794, 0.8508783578872681, 0.863558292388916, 0.8673887252807617, 0.8660678863525391, 0.8766345381736755, 0.8754457831382751, 0.878879964351654, 0.876370370388031, 0.8817857503890991, 0.885219931602478, 0.8850878477096558, 0.8907673954963684, 0.8927486538887024, 0.8957865834236145, 0.9019944667816162, 0.9037115573883057, 0.9037115573883057, 0.9051644206047058, 0.9091269373893738, 0.9113723635673523, 0.9099194407463074, 0.9132214784622192, 0.9179764986038208], "val_loss": [0.9162940638405936, 0.6244127409798759, 0.5536344562258039, 0.5101221970149449, 0.48077174595424105, 0.4482462065560477, 0.4300928882190159, 0.41294199228286743, 0.4038757256099156, 0.3854759505816868, 0.37237013237816946, 0.3628527522087097, 0.36788311174937655, 0.3506383214678083, 0.34580165999276297, 0.36505777495247976, 0.3521780116217477, 0.33041265181132723, 0.3343052353177752, 0.32071226835250854, 0.3227898733956473, 0.32062906878335135, 0.3267437645367214, 0.32721411330359323, 0.3196496367454529, 0.31710594041006906, 0.3228210636547634, 0.3258019004549299, 0.31286113602774485, 0.31708050625664846, 0.3131957565035139, 0.3110619783401489, 0.31948678834097727, 0.3065619724137442, 0.306714083467211, 0.312033474445343, 0.31863521678107126, 0.32011490208762033, 0.31144607067108154, 0.308964593069894], "val_accuracy": [0.5676666498184204, 0.7153333425521851, 0.749666690826416, 0.7636666893959045, 0.7776666879653931, 0.7973333597183228, 0.812333345413208, 0.8119999766349792, 0.8176666498184204, 0.831333339214325, 0.8396666646003723, 0.8403333425521851, 0.8443333506584167, 0.8516666889190674, 0.8553333282470703, 0.8420000076293945, 0.8493333458900452, 0.8646666407585144, 0.8573333621025085, 0.8650000095367432, 0.8663333058357239, 0.8690000176429749, 0.8663333058357239, 0.8696666955947876, 0.8616666793823242, 0.8700000047683716, 0.871666669845581, 0.8640000224113464, 0.8679999709129333, 0.8743333220481873, 0.8763333559036255, 0.8796666860580444, 0.8723333477973938, 0.8806666731834412, 0.8823333382606506, 0.8796666860580444, 0.878333330154419, 0.8723333477973938, 0.8796666860580444, 0.8806666731834412]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8308571577072144, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.0016685335029307, 1.0775021686372568, 0.7682994884065963, 0.6868669676459492, 0.6342421243959462, 0.5933099821920423, 0.5698360422220937, 0.5262694568477208, 0.5066615108485707, 0.4863877100967193, 0.4710258121787124, 0.44831540263434444, 0.4288611701214712, 0.41561306114556407, 0.41169254169834446, 0.41025667123790777, 0.39023784656786664, 0.3765419736561632, 0.3699088636178067, 0.35446124599751794, 0.3554688491180132, 0.3346685742965039, 0.3255573922120947, 0.32551395072755623, 0.3193658369092295, 0.30600355949935315, 0.3016204442196613, 0.29401690110302464, 0.28901744187626116, 0.2809537925842715, 0.26728455660727674, 0.2582672319222813, 0.25448451672901234, 0.24688746961919372, 0.2481200183780989, 0.2349205658286554, 0.22809066120281732], "accuracy": [0.3171311616897583, 0.6090344786643982, 0.7020208835601807, 0.7386078238487244, 0.7556465268135071, 0.7720248103141785, 0.7820631265640259, 0.7998943328857422, 0.8049134612083435, 0.8150838613510132, 0.8241975903511047, 0.8297450542449951, 0.8438779711723328, 0.8444063067436218, 0.8451988101005554, 0.8491612672805786, 0.8519350290298462, 0.8549728989601135, 0.859199583530426, 0.8623695969581604, 0.8627657890319824, 0.8721436858177185, 0.8734645247459412, 0.8774270415306091, 0.876370370388031, 0.8805969953536987, 0.8838990926742554, 0.8838990926742554, 0.8883898854255676, 0.8899748921394348, 0.8988244533538818, 0.9002773761749268, 0.902390718460083, 0.9038436412811279, 0.9055606722831726, 0.9075419306755066, 0.9103156924247742], "val_loss": [0.9163308484213692, 0.624117204121181, 0.5534053870609829, 0.5102859224591937, 0.47725158078329905, 0.4472597667149135, 0.43305095604487825, 0.4140043428965977, 0.40357859645571026, 0.3822396056992667, 0.3744204895836966, 0.36108700718198505, 0.3656417301722935, 0.35455518109457834, 0.3507375291415623, 0.3600271088736398, 0.35086930649621145, 0.3317648598126003, 0.3354945863996233, 0.33254384994506836, 0.3291798744882856, 0.3291778990200588, 0.33064383268356323, 0.3311941368239267, 0.32444651637758526, 0.32341437680380686, 0.31662935870034353, 0.3340416635785784, 0.3188777906554086, 0.31416756766183035, 0.3134838512965611, 0.31450577293123516, 0.31458514077322824, 0.30968527282987324, 0.3127997006688799, 0.31577587127685547, 0.32120920930589947], "val_accuracy": [0.5676666498184204, 0.7143333554267883, 0.7493333220481873, 0.7646666765213013, 0.7786666750907898, 0.7979999780654907, 0.8100000023841858, 0.8103333115577698, 0.8203333616256714, 0.8379999995231628, 0.8423333168029785, 0.8433333039283752, 0.8479999899864197, 0.8500000238418579, 0.8553333282470703, 0.843666672706604, 0.8536666631698608, 0.8636666536331177, 0.8573333621025085, 0.8569999933242798, 0.8633333444595337, 0.8679999709129333, 0.8669999837875366, 0.8616666793823242, 0.8613333106040955, 0.8633333444595337, 0.871999979019165, 0.862666666507721, 0.8666666746139526, 0.8736666440963745, 0.8740000128746033, 0.8799999952316284, 0.8766666650772095, 0.8769999742507935, 0.8776666522026062, 0.8756666779518127, 0.8766666650772095]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7022857069969177, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9909714137747334, 1.2879972370183228, 0.9390254887560213, 0.8360890467735943, 0.7281759357912162, 0.6847889935335763, 0.658367644329711, 0.6418226120210894, 0.6054762061938728, 0.5960948818222155, 0.5993531585416743, 0.5701393333046333, 0.5798845733114285, 0.543317059161499, 0.556819019812351, 0.5467502127753714, 0.5369841346981944, 0.5607236666040745, 0.5705105868533398, 0.6599170687396717, 0.7486325292822833], "accuracy": [0.3241315484046936, 0.5742966532707214, 0.655527651309967, 0.6915863156318665, 0.7308149337768555, 0.7471932172775269, 0.7497028112411499, 0.7637035846710205, 0.772288978099823, 0.7755910754203796, 0.778761088848114, 0.7905164361000061, 0.7841764688491821, 0.7943468689918518, 0.7987055778503418, 0.7922335267066956, 0.7973847389221191, 0.7967243194580078, 0.7852331399917603, 0.7718927264213562, 0.765949010848999], "val_loss": [0.9961765834263393, 0.6734462295259748, 0.6428384440285819, 0.5673620360238212, 0.5166124446051461, 0.49932449204581125, 0.48358590262276785, 0.47922859873090473, 0.46144763060978483, 0.45171397072928293, 0.44246749367032734, 0.4439442328044346, 0.4307051386151995, 0.4510241576603481, 0.4402210201535906, 0.42258427824292866, 0.44535861696515766, 0.41758463212421965, 0.4239772047315325, 0.5123801742281232, 0.5017725910459246], "val_accuracy": [0.609666645526886, 0.6949999928474426, 0.7103333473205566, 0.7463333606719971, 0.7636666893959045, 0.778333306312561, 0.7829999923706055, 0.7963333129882812, 0.809333324432373, 0.8096666932106018, 0.8159999847412109, 0.812666654586792, 0.8133333325386047, 0.8223333358764648, 0.8149999976158142, 0.8333333134651184, 0.8296666741371155, 0.8186666369438171, 0.8246666789054871, 0.8043333292007446, 0.8103333115577698]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 1, 7, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [155954.44261858307, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04411570355296135, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.218538984162984e+18, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 4, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [3, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3063223134603765, 2.3280782746191684, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.07660810649394989, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9776708739144462, 2.020172255379813, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.018666666001081467, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [3, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 5, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [25, 86, 97, 38, 8], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 6, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 7, 7, 4, 3, 1, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, sigma)", "other_info": {"loss": [2.4133419340564717, 4.193653496107515, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.10249637067317963, 0.10421344637870789, 0.10170386731624603, 0.09959053993225098, 0.09906221181154251], "val_loss": [2.714503969464983, 4.769876752580915, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.09966666996479034, 0.10100000351667404, 0.0989999994635582, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [60, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 2, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 10, 6, 5, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), sigma)), sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 3, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [92, 86, 97, 38, 8], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1228371411561966, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [79, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 6, 0, 2, 8, 8, 4, 0, 7, 6], [2, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 8, 5, 4, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 2, 6, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304364725646247, 2.304955211345152, 2.3061847181021657, 2.3138660655880114, 2.3202562686742305, 2.3404416850592247, 2.3915651740493744, 10.05084997022692, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.09113723784685135, 0.08611807972192764, 0.07938185334205627, 0.07951393723487854, 0.07938185334205627, 0.08308017253875732, 0.09285431355237961, 0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9715379987444197, 1.9731849261692591, 1.9762640680585588, 1.9815188135419572, 1.9892950057983398, 2.005716528211321, 2.0758047103881836, 17095672.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03433333337306976, 0.0273333340883255, 0.022333333268761635, 0.03933333232998848, 0.07466666400432587, 0.09666666388511658, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 9, 5, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [3, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, sigma)", "other_info": {"loss": [2.3029147910404166, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 2, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [25, 86, 97, 38, 8], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 4, 6, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.08428571373224258, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, grad)))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3017425512861283, 2.2993701518314107, 2.3020600109619314, 2.3027545365328645, 2.3031228219103963, 2.3036224774050913, 2.304418828021014, 2.3062211135752904], "accuracy": [0.09787346422672272, 0.10381719470024109, 0.10527011007070541, 0.10051512718200684, 0.0944393053650856, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.967644555228097, 1.9719578879220145, 1.9733148983546667, 1.9738435064043318, 1.9742232050214494, 1.9748693193708147, 1.9761384555271693, 1.978407519204276], "val_accuracy": [0.1066666692495346, 0.09099999815225601, 0.11500000208616257, 0.08900000154972076, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06142857298254967, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3041183707925383, 2.303375581661472, 2.3015260536121795, 2.303319635140567, 2.3012210195405594, 2.301738531267355, 2.30196448739777, 2.3019968917923768, 2.302683844999032, 2.300580852933296, 2.301655969127231, 2.301546747374922, 2.3007779370492965, 2.3010974122769072, 2.300933850644492, 2.3009377184356317, 2.2994902051435155, 2.300588239437522, 2.2996779422812916, 2.3004766487095885, 2.3008717195059663, 2.3019879594880197, 2.3006710745418832, 2.3016844252081374, 2.300337465668178, 2.299609134383347, 2.3015522589032926, 2.300785723961954, 2.300817875105707, 2.3008615665778414, 2.302422314744505, 2.300253709577188, 2.301203124511511, 2.2981387663826007, 2.300366542468753, 2.3011355098401394, 2.298741855830438, 2.301344025262579, 2.299927508716082, 2.300856669093041, 2.3000099240135383, 2.3011527455730083, 2.3001851765644346, 2.2991851005634816, 2.3005574612081516, 2.3017029160159597, 2.300385963584548, 2.301196457293874, 2.300106321327785, 2.3001828186106703, 2.3009465605811736, 2.299851846386334, 2.300679050085803, 2.299883565945538, 2.299974879442567, 2.3005690093777984, 2.299881149323987, 2.2998247935771627, 2.299669874090765, 2.30109263823694, 2.30010979472528, 2.3001509082788143, 2.2997844699445955, 2.299138388219936, 2.300038746870457, 2.300203508374052, 2.2993300384014606, 2.301320246166289, 2.2991192021531797, 2.299323624655114, 2.3000641407952127, 2.300105086627527, 2.300332017247829, 2.300246689219154, 2.29981668265331, 2.299905380127594, 2.3000828836257385, 2.299551046220555, 2.3003443675569617, 2.2995242056609175, 2.3003839768470318, 2.300301208031286, 2.299610000071729, 2.2986626369983703, 2.299666965421889, 2.2995388902425606, 2.2993157877976853, 2.2995030190950656, 2.298997628674641, 2.299680879386566, 2.3004651788266393], "accuracy": [0.09113723784685135, 0.09272222965955734, 0.09430722147226334, 0.09087307006120682, 0.09509972482919693, 0.0956280529499054, 0.09549596905708313, 0.08836349099874496, 0.09259014576673508, 0.09628847241401672, 0.08981640636920929, 0.0948355570435524, 0.09259014576673508, 0.09589222073554993, 0.09377889335155487, 0.09034473448991776, 0.09232597798109055, 0.09298639744520187, 0.09576013684272766, 0.09760929644107819, 0.09325055778026581, 0.08796724677085876, 0.09285431355237961, 0.09272222965955734, 0.09206181764602661, 0.09377889335155487, 0.09298639744520187, 0.09272222965955734, 0.09879804402589798, 0.08981640636920929, 0.08955223858356476, 0.10619468986988068, 0.09866596013307571, 0.10011887550354004, 0.09919429570436478, 0.09391097724437714, 0.10051512718200684, 0.09589222073554993, 0.1014397069811821, 0.09655263274908066, 0.10011887550354004, 0.0944393053650856, 0.10077928751707077, 0.10249637067317963, 0.09536388516426086, 0.0952318087220192, 0.09853387624025345, 0.09219389408826828, 0.09826971590518951, 0.10645885765552521, 0.08836349099874496, 0.09734513610601425, 0.09655263274908066, 0.09985470771789551, 0.1018359512090683, 0.09813763201236725, 0.09959053993225098, 0.09932637959718704, 0.09866596013307571, 0.09747721254825592, 0.09972262382507324, 0.09919429570436478, 0.09681680053472519, 0.1006472036242485, 0.09879804402589798, 0.1022322028875351, 0.10315678268671036, 0.10038304328918457, 0.10368511080741882, 0.09879804402589798, 0.09972262382507324, 0.10328886657953262, 0.10342095047235489, 0.10038304328918457, 0.10038304328918457, 0.10210011899471283, 0.10474177449941635, 0.10170386731624603, 0.10130762308835983, 0.09959053993225098, 0.09602430462837219, 0.09813763201236725, 0.09787346422672272, 0.1006472036242485, 0.1010434553027153, 0.10091137140989304, 0.10170386731624603, 0.10157178342342377, 0.09879804402589798, 0.10157178342342377, 0.09866596013307571], "val_loss": [1.9708993775503976, 1.9708145005362374, 1.9707228796822684, 1.970622948237828, 1.9705310549054826, 1.9704408645629883, 1.9703707013811385, 1.9703160694667272, 1.9702399798801966, 1.9701933860778809, 1.9701260839189803, 1.9700507436479842, 1.9699945449829102, 1.969949449811663, 1.9699032647269112, 1.9698657308306013, 1.969829831804548, 1.969794613974435, 1.9697761535644531, 1.9697372572762626, 1.9697141647338867, 1.9696783338274275, 1.9696312631879533, 1.969588279724121, 1.9695709092276437, 1.9695555141993932, 1.969540732247489, 1.9695480891636439, 1.9695393698556083, 1.9695226805550712, 1.9695016997201102, 1.9694972719464983, 1.9694807870047433, 1.9694947515215193, 1.9694950921194894, 1.9694935253688268, 1.9695042882646834, 1.9694928441728865, 1.9694952283586775, 1.9694974081856864, 1.9695142337254115, 1.969505786895752, 1.9695124626159668, 1.9695235661097936, 1.9695193426949638, 1.9694984299795968, 1.9694981575012207, 1.9695027896336146, 1.9695008141653878, 1.9695195470537459, 1.9695211819240026, 1.9695312636239188, 1.9695361682346888, 1.9695375987461634, 1.9695322172982352, 1.9695278576442175, 1.9695184571402413, 1.969524724142892, 1.9695287431989397, 1.9695209775652205, 1.9695143018450056, 1.9695110321044922, 1.969515255519322, 1.9695193426949638, 1.9695151873997279, 1.9695111002240862, 1.969494206564767, 1.9694701603480749, 1.9694687298366003, 1.9694633483886719, 1.9694621903555733, 1.969454560961042, 1.9694419588361467, 1.9694245883396693, 1.9694185938153947, 1.9694014276776994, 1.969379220690046, 1.9693734986441476, 1.9693636213030135, 1.9693559919084822, 1.969357626778739, 1.9693538802010673, 1.9693408012390137, 1.9693348067147392, 1.969334534236363, 1.9693377358572823, 1.969334534236363, 1.9693332399640764, 1.969336918422154, 1.9693378720964705, 1.9693305151803153], "val_accuracy": [0.038333334028720856, 0.03966666758060455, 0.0416666679084301, 0.0416666679084301, 0.0430000014603138, 0.04333333298563957, 0.04466666653752327, 0.04600000008940697, 0.046666666865348816, 0.04699999839067459, 0.04800000041723251, 0.049666665494441986, 0.049666665494441986, 0.05000000074505806, 0.05000000074505806, 0.05133333429694176, 0.052666667848825455, 0.05299999937415123, 0.05366666615009308, 0.05433333292603493, 0.05533333495259285, 0.05533333495259285, 0.0560000017285347, 0.05666666850447655, 0.05666666850447655, 0.05700000002980232, 0.05766666680574417, 0.05766666680574417, 0.05833333358168602, 0.059333331882953644, 0.05966666713356972, 0.05999999865889549, 0.060333333909511566, 0.060333333909511566, 0.060333333909511566, 0.06066666543483734, 0.061000000685453415, 0.061666667461395264, 0.061666667461395264, 0.06199999898672104, 0.06133333221077919, 0.06199999898672104, 0.06300000101327896, 0.06333333253860474, 0.06433333456516266, 0.06400000303983688, 0.06433333456516266, 0.06466666609048843, 0.06433333456516266, 0.06433333456516266, 0.06366666406393051, 0.06466666609048843, 0.06499999761581421, 0.06433333456516266, 0.06499999761581421, 0.0663333311676979, 0.06733333319425583, 0.06833333522081375, 0.0689999982714653, 0.06933332979679108, 0.070333331823349, 0.07100000232458115, 0.07266666740179062, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07366666942834854, 0.07400000095367432, 0.07433333247900009, 0.07433333247900009, 0.07433333247900009, 0.07433333247900009, 0.07533333450555801, 0.07566666603088379, 0.07633333653211594, 0.07666666805744171, 0.07699999958276749, 0.07699999958276749, 0.07733333110809326, 0.07733333110809326, 0.07699999958276749, 0.07733333110809326, 0.07766667008399963, 0.07766667008399963, 0.07866666465997696, 0.07900000363588333, 0.07800000160932541, 0.07833333313465118, 0.07800000160932541, 0.07833333313465118, 0.07866666465997696]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [6, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304178442606726, 2.303557471041162, 2.3018229188479453, 2.303743557387717, 2.3017133903415243, 2.3023891046834173], "accuracy": [0.09113723784685135, 0.09206181764602661, 0.09311848133802414, 0.08994849026203156, 0.09457138925790787, 0.0952318087220192], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [76, 86, 97, 38, 8], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 3, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304178442606726, 2.303557471041162, 2.3018229188479453, 2.303743557387717, 2.3017133903415243, 2.3023891046834173], "accuracy": [0.09113723784685135, 0.09206181764602661, 0.09311848133802414, 0.08994849026203156, 0.09457138925790787, 0.0952318087220192], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 4, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 6, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034285712987184525, "mapping_values": [1, 4, 4, 3, 1, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304236611260588, 2.303747326611937, 2.3021547361970214, 2.304236458245679, 2.3023156594480616, 2.3031903835823666], "accuracy": [0.09179764986038208, 0.09259014576673508, 0.09259014576673508, 0.08928807079792023, 0.09325055778026581, 0.09311848133802414], "val_loss": [1.9711148398263114, 1.9712172916957311, 1.9713429042271204, 1.9714702878679549, 1.9715931074959892, 1.9717215129307337], "val_accuracy": [0.036666665226221085, 0.035999998450279236, 0.03633333370089531, 0.035999998450279236, 0.03500000014901161, 0.03466666489839554]}}]