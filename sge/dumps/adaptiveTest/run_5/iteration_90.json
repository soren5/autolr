[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7774285674095154, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.294364169793059, 2.2714270105955228, 2.248771739815362, 2.220991141571581, 2.184872627636193, 2.141158340881372, 2.084353831371438, 2.013192322244419, 1.9277933553981113, 1.8322877824078179, 1.721408931917093, 1.6214620535006188, 1.5180139702387678, 1.4388808562314395, 1.3755667640579974, 1.3047394200464706, 1.261119220124858, 1.2162318421298204, 1.1824132471729532, 1.138141554785348, 1.1111177433404658, 1.087956552161611, 1.0675130622293405, 1.0368898187598785, 1.0175180686321619, 0.9883228435397952, 0.9828568280979217, 0.9593270224287934, 0.9560779387279194, 0.9531928788496125, 0.9298710647811507, 0.9132832515477473, 0.9114753857359296, 0.8954098665356841, 0.8854789788838564, 0.8798422692883615, 0.8606694904159105, 0.8720743664739753, 0.8543015719089904, 0.8459398917880403, 0.8356365574317884, 0.8334642295052646, 0.826776926937262, 0.8184039703118976, 0.8108186158978345, 0.8033131020196032, 0.8072374506224069, 0.7870010367206312, 0.7906131693526754, 0.7863875659481094, 0.7823658714425437, 0.7836097068144834, 0.7806514012358523, 0.765099299810566, 0.7748335565101705, 0.7547753344059557, 0.7723713332179232, 0.7616639478630819, 0.7532739533629825, 0.7455002867062299, 0.7479835019733896, 0.7441888040697034, 0.7512532341607794, 0.7367661768072836, 0.7370774888910433, 0.7284285440625705, 0.7261006186871622, 0.7281145512656199, 0.7217144952820529, 0.7154265838433975, 0.7195465871844041, 0.7180512996633779, 0.7196487188103051, 0.7089425263749988, 0.711280920265877, 0.7029857639276971, 0.7022630493434003, 0.701582189831893, 0.6931716623543717, 0.6923601108613882, 0.6935085623161337, 0.6913641415582656, 0.6934050619484112, 0.6989436049849335, 0.6824138442113683, 0.6834942476781856, 0.6832008822215248], "accuracy": [0.11253467202186584, 0.16972659528255463, 0.22691850364208221, 0.2743362784385681, 0.3257165551185608, 0.35345396399497986, 0.3789459764957428, 0.41249504685401917, 0.4290054142475128, 0.44828951358795166, 0.4675736427307129, 0.4935939908027649, 0.5130101442337036, 0.5287280678749084, 0.5407475829124451, 0.5556729435920715, 0.5606921315193176, 0.5809007883071899, 0.5826178789138794, 0.6037511825561523, 0.6066569685935974, 0.6111478209495544, 0.6231673359870911, 0.6313564777374268, 0.6420552134513855, 0.6490556001663208, 0.6502443552017212, 0.666358470916748, 0.6585655808448792, 0.6605468392372131, 0.6684718132019043, 0.6750759482383728, 0.6753401160240173, 0.68101966381073, 0.6816800832748413, 0.6807554960250854, 0.694360077381134, 0.6860388517379761, 0.6950204968452454, 0.6988508701324463, 0.7020208835601807, 0.7009642124176025, 0.7079645991325378, 0.7077004313468933, 0.707568347454071, 0.7080966830253601, 0.709549605846405, 0.7132478952407837, 0.7123233675956726, 0.7116629481315613, 0.7148329019546509, 0.7187954187393188, 0.7180029153823853, 0.7223616242408752, 0.7165499925613403, 0.7284374833106995, 0.7140403985977173, 0.722229540348053, 0.7320036888122559, 0.7310791015625, 0.724210798740387, 0.7257958054542542, 0.7218332886695862, 0.7306828498840332, 0.7305507659912109, 0.7338528633117676, 0.733060359954834, 0.7354378700256348, 0.7346453666687012, 0.7337207794189453, 0.7371549606323242, 0.7326641082763672, 0.7404569983482361, 0.7413815855979919, 0.7413815855979919, 0.7448157668113708, 0.7416457533836365, 0.7458723783493042, 0.7446836829185486, 0.7448157668113708, 0.7432307600975037, 0.7465327978134155, 0.7445515990257263, 0.7466648817062378, 0.7506273984909058, 0.7512878179550171, 0.7515519857406616], "val_loss": [1.9509285518101283, 1.9302569798060827, 1.906400408063616, 1.8767148426600866, 1.8383349009922572, 1.7890915870666504, 1.726863179888044, 1.649562188557216, 1.5577357496534074, 1.4555977412632533, 1.347672769001552, 1.2446494443075997, 1.1489339215414864, 1.0680506229400635, 1.0031075818198067, 0.9464570113590786, 0.9003431456429618, 0.8612359762191772, 0.8296476602554321, 0.8021419899804252, 0.7782218967165265, 0.7585607426507133, 0.740864634513855, 0.7241038765226092, 0.7098241874149868, 0.6957612037658691, 0.685317873954773, 0.6747653995241437, 0.6662379673549107, 0.6575392825262887, 0.6495618309293475, 0.64140066078731, 0.6356666088104248, 0.6289065054484776, 0.622770973614284, 0.6168100663593837, 0.612603851727077, 0.6079348836626325, 0.602690475327628, 0.5983132805143084, 0.5938828161784581, 0.5894726685115269, 0.5873192208153861, 0.5818612234933036, 0.5787262235369001, 0.5736487592969622, 0.5708308560507638, 0.5667100293295724, 0.5648540599005563, 0.5613316467830113, 0.5586272648402623, 0.5572958503450666, 0.5553740092686245, 0.5519113200051444, 0.5493042979921613, 0.545330354145595, 0.5458142416817802, 0.543154205594744, 0.5391685962677002, 0.5368402004241943, 0.5357418741498675, 0.5337294851030622, 0.5327334744589669, 0.5303538697106498, 0.5287578276225499, 0.5266875198909214, 0.525302597454616, 0.5220920698983329, 0.5214500256947109, 0.5182960374014718, 0.5200729540416172, 0.5163672821862357, 0.5135349205562046, 0.5118849788393293, 0.5103321586336408, 0.5100359235491071, 0.5073108162198748, 0.5067077193941388, 0.5045018877301898, 0.5035408394677299, 0.5019334384373256, 0.5008319446018764, 0.4994210515703474, 0.5007178783416748, 0.49887558392116, 0.4975724901471819, 0.49607101508549284], "val_accuracy": [0.21766667068004608, 0.3440000116825104, 0.3996666669845581, 0.43933331966400146, 0.468666672706604, 0.4950000047683716, 0.5286666750907898, 0.5503333210945129, 0.5673333406448364, 0.5863333344459534, 0.5979999899864197, 0.6086666584014893, 0.6276666522026062, 0.6473333239555359, 0.6646666526794434, 0.6769999861717224, 0.6830000281333923, 0.6880000233650208, 0.6940000057220459, 0.6993333101272583, 0.7106666564941406, 0.7116666436195374, 0.7173333168029785, 0.718666672706604, 0.7166666388511658, 0.7200000286102295, 0.7236666679382324, 0.7203333377838135, 0.7283333539962769, 0.7279999852180481, 0.7300000190734863, 0.7353333234786987, 0.7369999885559082, 0.734000027179718, 0.734333336353302, 0.7393333315849304, 0.7459999918937683, 0.7456666827201843, 0.7476666569709778, 0.7483333349227905, 0.7536666393280029, 0.7513333559036255, 0.753333330154419, 0.7559999823570251, 0.7506666779518127, 0.7543333172798157, 0.7546666860580444, 0.7599999904632568, 0.7576666474342346, 0.7570000290870667, 0.762333333492279, 0.762666642665863, 0.7613333463668823, 0.7613333463668823, 0.7609999775886536, 0.7676666378974915, 0.7683333158493042, 0.7673333287239075, 0.7699999809265137, 0.7710000276565552, 0.7716666460037231, 0.7723333239555359, 0.7726666927337646, 0.7726666927337646, 0.7723333239555359, 0.7720000147819519, 0.7723333239555359, 0.7746666669845581, 0.7736666798591614, 0.7746666669845581, 0.7760000228881836, 0.7733333110809326, 0.7766666412353516, 0.777999997138977, 0.7753333449363708, 0.7766666412353516, 0.7770000100135803, 0.7766666412353516, 0.7786666750907898, 0.7773333191871643, 0.7799999713897705, 0.7860000133514404, 0.7793333530426025, 0.781000018119812, 0.7833333611488342, 0.7833333611488342, 0.7803333401679993]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.774571418762207, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.294364169793059, 2.2714270420865517, 2.248771816307071, 2.2209908492088695, 2.1848704461896458, 2.1411591957998217, 2.084351069104355, 2.013185650948693, 1.9277890339944468, 1.8322906358256836, 1.7214113748021618, 1.6214708411666805, 1.5180334043603578, 1.4388975765978766, 1.375562051598737, 1.3047294781869665, 1.2611128854997218, 1.216232915249609, 1.182391906946626, 1.1381445168315176, 1.1111169349657561, 1.0879407329424544, 1.0674719957863854, 1.0368936021708068, 1.017548113285889, 0.9883289960444391, 0.9828488027430671, 0.9593379613729972, 0.9560896498400222, 0.9532253379205183, 0.9298955419312033, 0.9132602338887886, 0.9115337919108761, 0.8954213414729436, 0.8855082905602698, 0.8798073208280102, 0.8606767560969317, 0.8720542592395172, 0.8542866380915997, 0.8459376504219377, 0.8356265179028585, 0.8334751755192044, 0.8267977884605875, 0.8184210038015068, 0.8108023717859717, 0.8033153967551268, 0.807258603177948, 0.7870199190800327, 0.7906179179557641, 0.7864075041702159, 0.7823629832270911, 0.7835626780412075, 0.7806613001337204, 0.7651324370092861, 0.7748111585789133, 0.754730412028233, 0.772350187897446, 0.7616775325496892, 0.7532746127693802, 0.74554777237497, 0.7480437716929479, 0.744235545180304, 0.7512988642600108, 0.736751713670555, 0.7371028443258892, 0.7283538268651976, 0.7261106950684687, 0.7280963968056037, 0.7216801319013986, 0.7154688961029431, 0.7194927547192451, 0.7181361178916601, 0.719632961990622, 0.708904484480033, 0.7112629563659488, 0.7030991379217371, 0.7022630790709316, 0.7015997787051591, 0.693192195221575], "accuracy": [0.11253467202186584, 0.16972659528255463, 0.22691850364208221, 0.27420419454574585, 0.3257165551185608, 0.3535860478878021, 0.37947431206703186, 0.41249504685401917, 0.4290054142475128, 0.44828951358795166, 0.46730947494506836, 0.4935939908027649, 0.5128780603408813, 0.5284639000892639, 0.5408796668052673, 0.555408775806427, 0.5609562993049622, 0.5809007883071899, 0.5827499628067017, 0.6038832664489746, 0.6070532202720642, 0.6116761565208435, 0.6232994198799133, 0.6312243938446045, 0.6421872973442078, 0.6489235162734985, 0.6502443552017212, 0.6660943031311035, 0.6584334969520569, 0.6606789231300354, 0.6682076454162598, 0.6750759482383728, 0.6756042838096619, 0.68101966381073, 0.6823405027389526, 0.6812838315963745, 0.6948884129524231, 0.6863030195236206, 0.6954167485237122, 0.6995112895965576, 0.7020208835601807, 0.7010962963104248, 0.7084929347038269, 0.707568347454071, 0.707568347454071, 0.7079645991325378, 0.709549605846405, 0.7136441469192505, 0.7124554514884949, 0.7121912837028503, 0.7150970697402954, 0.7181349992752075, 0.717870831489563, 0.7219653725624084, 0.7169462442398071, 0.728701651096344, 0.7135120630264282, 0.7224937081336975, 0.7316074371337891, 0.7316074371337891, 0.7240787148475647, 0.7265883088111877, 0.7215691208839417, 0.7308149337768555, 0.7301545143127441, 0.7338528633117676, 0.7325320243835449, 0.7364945411682129, 0.7346453666687012, 0.7339849472045898, 0.7366266250610352, 0.7323999404907227, 0.7401928305625916, 0.741909921169281, 0.7405890822410583, 0.7445515990257263, 0.7420420050621033, 0.7465327978134155, 0.7441553473472595], "val_loss": [1.9509284836905343, 1.9302569798060827, 1.9063995906284876, 1.8767127990722656, 1.8383333342415946, 1.7890878404889787, 1.72685364314488, 1.6495554106576102, 1.5577327864510673, 1.4555981840406145, 1.3476875168936593, 1.2446752956935339, 1.1489555154527937, 1.06803332056318, 1.0030909265790666, 0.9464259147644043, 0.9002929755619594, 0.8612055097307477, 0.8296420063291278, 0.802154404776437, 0.7782374450138637, 0.7585452113832746, 0.7408418825694493, 0.7240753514426095, 0.7098381008420672, 0.6957322188786098, 0.6853351593017578, 0.6748040744236538, 0.6662858894893101, 0.6575647422245571, 0.6495435578482491, 0.6413648639406476, 0.6356453895568848, 0.6288158893585205, 0.6227249247687203, 0.6167577334812709, 0.6125836542674473, 0.6079045363834926, 0.6026181323187692, 0.598300405911037, 0.593846218926566, 0.5894860369818551, 0.5873309033257621, 0.5818616322108677, 0.5787141493388585, 0.5736137287957328, 0.5708022798810687, 0.566766449383327, 0.5648630857467651, 0.5613830770765033, 0.5585744040352958, 0.5572860581534249, 0.5553633996418544, 0.551938363483974, 0.5493405887058803, 0.5452920368739537, 0.5458355971745082, 0.5432777915682111, 0.53926192011152, 0.5368389231818063, 0.5357149158205304, 0.533708964075361, 0.5327356202261788, 0.5302941458565849, 0.5287201234272548, 0.526698180607387, 0.5252013717378888, 0.5220467022487095, 0.5214150122233799, 0.5182480301175799, 0.5200821501868111, 0.516416072845459, 0.5135567528860909, 0.5118072884423392, 0.5102931090763637, 0.5099272898265294, 0.5072607142584664, 0.5066979782921928, 0.5044292892728534], "val_accuracy": [0.21766667068004608, 0.3440000116825104, 0.3996666669845581, 0.43933331966400146, 0.46833333373069763, 0.4950000047683716, 0.5286666750907898, 0.5503333210945129, 0.5669999718666077, 0.5870000123977661, 0.5979999899864197, 0.6083333492279053, 0.6273333430290222, 0.6473333239555359, 0.6646666526794434, 0.6773333549499512, 0.6830000281333923, 0.6880000233650208, 0.6940000057220459, 0.6993333101272583, 0.7110000252723694, 0.7116666436195374, 0.7173333168029785, 0.718666672706604, 0.7166666388511658, 0.7196666598320007, 0.7236666679382324, 0.7203333377838135, 0.7286666631698608, 0.7286666631698608, 0.7300000190734863, 0.7356666922569275, 0.7369999885559082, 0.734000027179718, 0.734000027179718, 0.7396666407585144, 0.7459999918937683, 0.7456666827201843, 0.7476666569709778, 0.7490000128746033, 0.7536666393280029, 0.7516666650772095, 0.753000020980835, 0.7559999823570251, 0.750333309173584, 0.7540000081062317, 0.7549999952316284, 0.7603333592414856, 0.7576666474342346, 0.7566666603088379, 0.762333333492279, 0.7630000114440918, 0.7609999775886536, 0.7620000243186951, 0.7609999775886536, 0.7676666378974915, 0.7680000066757202, 0.7676666378974915, 0.7696666717529297, 0.7706666588783264, 0.7720000147819519, 0.7723333239555359, 0.7726666927337646, 0.7730000019073486, 0.7723333239555359, 0.7730000019073486, 0.7720000147819519, 0.7746666669845581, 0.7739999890327454, 0.7746666669845581, 0.7756666541099548, 0.7730000019073486, 0.7756666541099548, 0.7786666750907898, 0.7753333449363708, 0.7770000100135803, 0.7763333320617676, 0.7766666412353516, 0.7786666750907898]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 0, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.774571418762207, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2943641023392756, 2.2714270420865517, 2.2487715284160856, 2.2209902915027495, 2.1848681880624428, 2.1411519892038435, 2.084343758808419, 2.0131777967397073, 1.9277764136969784, 1.8322706898646568, 1.7213997278766484, 1.621467817508313, 1.5180276408407745, 1.438899051244028, 1.375571892875895, 1.3047471603681509, 1.2611238280339028, 1.2162366946454313, 1.1824122122832734, 1.1381477217365012, 1.11113477002014, 1.087938598543504, 1.0675050318437938, 1.0369155785474071, 1.0175419949490112, 0.988309751774389, 0.982828151579814, 0.9593046147746811, 0.9560669080031121, 0.9531597090970413, 0.9298265822543728, 0.9132416308863036, 0.9114186305568959, 0.8953732667487642, 0.8854484498272513, 0.879804613953647, 0.8606280946870128, 0.871993056062883, 0.8542392186563659, 0.8459108992102218, 0.8355274293180533, 0.8333950212776164, 0.8267183969080991, 0.818285418696738, 0.8107794938841988, 0.8032610648737418, 0.8071939383893358, 0.7869763922351242, 0.7905766465691937, 0.7863039095340987, 0.7822913334921068, 0.7835385228633062, 0.7806487443849883, 0.7649952155912967, 0.7747742357097833, 0.7546527301236985, 0.7723012218433144, 0.7616083287937672, 0.7532499411700975, 0.7454628716638106, 0.7479108775123361, 0.7441618761696978, 0.7512626813513302, 0.7367893466387663, 0.7370652537446027, 0.7283098158614668, 0.7260890696515119, 0.7280396257236004, 0.7215693353535934, 0.7154616420342387, 0.7195164389488106, 0.7180895900540522, 0.7196543905414122, 0.7089078039729978, 0.711226466986576, 0.7029398294440539, 0.7023594610726656, 0.7016475915893068, 0.6931652090946571], "accuracy": [0.11253467202186584, 0.16972659528255463, 0.22691850364208221, 0.27420419454574585, 0.3257165551185608, 0.35345396399497986, 0.3793422281742096, 0.4123629629611969, 0.4291374981403351, 0.44828951358795166, 0.46730947494506836, 0.4935939908027649, 0.5128780603408813, 0.5285959839820862, 0.5406154990196228, 0.5556729435920715, 0.561352550983429, 0.5809007883071899, 0.5830141305923462, 0.6041474342346191, 0.6065248847007751, 0.611411988735199, 0.6234315037727356, 0.6316206455230713, 0.6419231295585632, 0.6487914323806763, 0.6502443552017212, 0.6662263870239258, 0.6585655808448792, 0.6606789231300354, 0.6684718132019043, 0.6752080321311951, 0.6750759482383728, 0.6806234121322632, 0.6816800832748413, 0.68101966381073, 0.6944921612739563, 0.6861709356307983, 0.6950204968452454, 0.6988508701324463, 0.7020208835601807, 0.7008321285247803, 0.7080966830253601, 0.7074362635612488, 0.7078325152397156, 0.7078325152397156, 0.7094175219535828, 0.7136441469192505, 0.7125874757766724, 0.7120591998100281, 0.7147008180618286, 0.7185312509536743, 0.7181349992752075, 0.7218332886695862, 0.7173424959182739, 0.7292299270629883, 0.7129837274551392, 0.722229540348053, 0.7320036888122559, 0.7309470176696777, 0.724739134311676, 0.7263241410255432, 0.7218332886695862, 0.7306828498840332, 0.7302865982055664, 0.7337207794189453, 0.733060359954834, 0.7358341217041016, 0.7354378700256348, 0.7345132827758789, 0.7372870445251465, 0.7333245277404785, 0.7405890822410583, 0.7415136694908142, 0.7413815855979919, 0.744419515132904, 0.7421740889549255, 0.7456082701683044, 0.743891179561615], "val_loss": [1.9509285518101283, 1.9302569798060827, 1.9063989775521415, 1.8767124584742956, 1.8383276803152901, 1.7890815053667342, 1.726849147251674, 1.6495466913495744, 1.5577169486454554, 1.4555821418762207, 1.3476743016924178, 1.2446680409567696, 1.1489647456577845, 1.0680607046399797, 1.0031283242361886, 0.9464612007141113, 0.9003353459494454, 0.8612424986703056, 0.8296644176755633, 0.8021537065505981, 0.7782363891601562, 0.7585777044296265, 0.7408801487513951, 0.7241181816373553, 0.7098611763545445, 0.6957608801977975, 0.6853170565196446, 0.6747818844658988, 0.6661953244890485, 0.6574794905526298, 0.6495249611990792, 0.6413560254233224, 0.6356210027422223, 0.6288213048662458, 0.6227545057024274, 0.6167782034192767, 0.6125916412898472, 0.6079211745943341, 0.6026249783379691, 0.5982815708432879, 0.5938287462506976, 0.5894956588745117, 0.5874082531247821, 0.5818014826093402, 0.5786879232951573, 0.573569791657584, 0.5707449913024902, 0.5666693278721401, 0.5648314612252372, 0.5612981830324445, 0.5585929495947701, 0.5572190625326974, 0.5553103004183088, 0.5517445121492658, 0.5491940293993268, 0.5452536514827183, 0.5457839454923358, 0.5431983470916748, 0.5391027416501727, 0.5367296423230853, 0.5356503214154925, 0.5336552006857735, 0.5326265948159354, 0.5302703380584717, 0.5286451578140259, 0.5266304186412266, 0.5252014057976859, 0.5220996992928642, 0.521436299596514, 0.5182479790278843, 0.5199942929404122, 0.5163861853735787, 0.5135259457996914, 0.5119458777563912, 0.5102966342653547, 0.5101042815617153, 0.5074147667203631, 0.5067798750741142, 0.5044486352375576], "val_accuracy": [0.21766667068004608, 0.3440000116825104, 0.3996666669845581, 0.43933331966400146, 0.46799999475479126, 0.4950000047683716, 0.5286666750907898, 0.5503333210945129, 0.5673333406448364, 0.5866666436195374, 0.5979999899864197, 0.6083333492279053, 0.6276666522026062, 0.6473333239555359, 0.6643333435058594, 0.6773333549499512, 0.6826666593551636, 0.6880000233650208, 0.6940000057220459, 0.6996666789054871, 0.7106666564941406, 0.7116666436195374, 0.7173333168029785, 0.718666672706604, 0.7166666388511658, 0.7200000286102295, 0.7236666679382324, 0.7200000286102295, 0.7286666631698608, 0.7279999852180481, 0.7300000190734863, 0.7356666922569275, 0.7366666793823242, 0.734666645526886, 0.734666645526886, 0.7396666407585144, 0.746999979019165, 0.7456666827201843, 0.7476666569709778, 0.7490000128746033, 0.7540000081062317, 0.7516666650772095, 0.753333330154419, 0.7559999823570251, 0.75, 0.7543333172798157, 0.7553333044052124, 0.7599999904632568, 0.7576666474342346, 0.7563333511352539, 0.7620000243186951, 0.762666642665863, 0.7613333463668823, 0.7620000243186951, 0.7616666555404663, 0.7680000066757202, 0.7676666378974915, 0.7680000066757202, 0.7699999809265137, 0.7706666588783264, 0.7720000147819519, 0.7723333239555359, 0.7733333110809326, 0.7730000019073486, 0.7720000147819519, 0.7726666927337646, 0.7723333239555359, 0.7739999890327454, 0.7736666798591614, 0.7746666669845581, 0.7756666541099548, 0.7730000019073486, 0.7760000228881836, 0.778333306312561, 0.7756666541099548, 0.7770000100135803, 0.7763333320617676, 0.7763333320617676, 0.778333306312561]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 8, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 28, 79, 99, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4805714190006256, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8637077284369408, 2.2831531442340656, 2.197514023133367, 2.6873485875120253, 2.3037471125359232, 2.2725469223370625, 2.300625908722762, 2.308045740219517], "accuracy": [0.14753665030002594, 0.13472460210323334, 0.2008981704711914, 0.1822744756937027, 0.10170386731624603, 0.1744815707206726, 0.11834631860256195, 0.18716153502464294], "val_loss": [1.9765756470816476, 1.759617737361363, 1.5627170290265764, 1.9749104636056083, 1.9718411990574427, 1.9741571290152413, 1.915005888257708, 1.9751767430986678], "val_accuracy": [0.1913333386182785, 0.3683333396911621, 0.44966667890548706, 0.10066666454076767, 0.1066666692495346, 0.10066666454076767, 0.3023333251476288, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 3, 2, 0, 2, 3, 1], [40, 28, 35, 39, 41, 36, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.44514286518096924, "mapping_values": [1, 37, 37, 22, 15, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.863707679342427, 2.2826114231175625, 2.2527012362723906, 2.490118388313391, 2.3048875226068803, 2.303228650220932, 2.303345400313061, 2.3031163418124523], "accuracy": [0.14753665030002594, 0.13538502156734467, 0.18333113193511963, 0.1690661758184433, 0.09919429570436478, 0.09813763201236725, 0.09998679161071777, 0.09298639744520187], "val_loss": [1.9765827996390206, 1.8181288582938058, 2.4969750813075473, 1.9761358669825964, 1.9740024294172014, 1.9736285209655762, 1.9736089706420898, 1.97361387525286], "val_accuracy": [0.1913333386182785, 0.3543333411216736, 0.3869999945163727, 0.09799999743700027, 0.10066666454076767, 0.10166666656732559, 0.10433333367109299, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 9, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 0, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.37142857909202576, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8637429067503115, 2.280040587825924, 2.2973981735775926, 2.579125497949248, 2.529352083623118, 2.309158328029505, 2.3022923329093468, 2.277163935721653], "accuracy": [0.14753665030002594, 0.13115836679935455, 0.16061286628246307, 0.12917712330818176, 0.15440496802330017, 0.09972262382507324, 0.10408136248588562, 0.12310130894184113], "val_loss": [1.9766968999590193, 1.973804133278983, 2.199287618909563, 1.9760055541992188, 1.9846826962062292, 1.9739515440804618, 1.9658451761518205, 1.8393004281180245], "val_accuracy": [0.1733333319425583, 0.3283333480358124, 0.3486666679382324, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.1236666664481163, 0.2160000056028366]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 3, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [1, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [86], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.12114285677671432, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301659495020272, 2.2971912468303195, 2.30131833985686, 2.3027517062451595, 2.3030619936816965, 2.3040749290127716, 2.308073146358032, 2.3286246459529134, 2.4766762924547034, 3.4612068404390546], "accuracy": [0.09589222073554993, 0.11227050423622131, 0.08572183549404144, 0.10381719470024109, 0.1352529376745224, 0.13657376170158386, 0.10434553027153015, 0.09681680053472519, 0.10130762308835983, 0.09998679161071777], "val_loss": [1.966883863721575, 1.9714676993233817, 1.9731197357177734, 1.9739712987627303, 1.9748613493783134, 1.9770988736833846, 1.9857619149344308, 2.032245635986328, 2.529663699013846, 4.037317820957729], "val_accuracy": [0.11400000005960464, 0.08933333307504654, 0.11366666853427887, 0.13566666841506958, 0.164000004529953, 0.09799999743700027, 0.09700000286102295, 0.0989999994635582, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 5, 0, 4, 2, 6, 8, 6, 2, 5, 6, 4, 6, 4, 4, 0, 8, 7, 5, 9, 0, 2, 2, 4, 2, 1, 1, 3, 5, 9, 9, 4], [2, 0, 2, 1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 0, 2, 2, 2, 3, 1], [40, 28, 35, 39, 41, 36, 33, 47, 99, 9], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10314285755157471, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.275381308568074, 2.4637482803668704, 2.3341649416934986, 2.3875183252342906, NaN, NaN, NaN], "accuracy": [0.15255580842494965, 0.11108175665140152, 0.16919825971126556, 0.12455421686172485, 0.11940298229455948, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0303269795009067, 1.8666413852146693, 2.056668213435582, 2.0525050163269043, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.20033332705497742, 0.1340000033378601, 0.14633333683013916, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10314285755157471, "mapping_values": [1, 37, 37, 22, 15, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.275380647256468, 2.4637494324031777, 2.324999583915335, 2.3550829392980983, 2.3574793059135297, 2.832281997789245, 16436.53207108071], "accuracy": [0.15255580842494965, 0.11108175665140152, 0.16814158856868744, 0.1460837423801422, 0.12679962813854218, 0.10368511080741882, 0.09298639744520187], "val_loss": [2.030327115740095, 1.866643292563302, 2.0703133855547224, 1.9547313962663924, 1.9561676297869002, 2.02386542728969, 6189373001.142858], "val_accuracy": [0.0989999994635582, 0.20000000298023224, 0.1379999965429306, 0.15000000596046448, 0.12399999797344208, 0.10166666656732559, 0.13466666638851166]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 1, 2, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [9, 28, 55, 39, 41, 36], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 1, 4, 4, 3, 5], [42, 72], [0, 0, 0, 0, 1], [0, 1, 1, 0], [6, 4], [4, 0, 1, 5, 3, 4], [69], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 17, 17, 9, 8, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.subtract(tf.math.add(alpha, alpha), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(beta), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 2, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [55], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.655329745537916, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16166952252388, 0.08942015469074249, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.43138177054269, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02199999988079071, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 2, 2, 2, 4, 1], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [74], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 17, 17, 9, 8, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(beta, beta), tf.math.add(beta, beta)))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 2, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [4, 4], [7, 0, 1, 5, 3, 4], [59], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 2, 8, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 5, 1, 5, 3, 4], [27], [0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.303193104942603, 2.3017688581987916, 2.302792800778112, 2.3046673723829736, 2.3113157615654063, 3.189027062968933, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09008057415485382, 0.08915598690509796, 0.08902391046285629, 0.08334434032440186, 0.08413683623075485, 0.09549596905708313, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9710310527256556, 1.9712871142796107, 1.9724625859941756, 1.975975445338658, 1.984886918749128, 2389220425.142857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03700000047683716, 0.03566666692495346, 0.02800000086426735, 0.06066666543483734, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 0, 4, 0, 3, 2], [42, 48], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 1, 0, 1, 17, 17, 9, 8, 2, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303188971619108, 2.301673986498926, 2.3021327912642136, 2.3017534688479233, 2.3015910754382034, 2.3021233312646867], "accuracy": [0.09008057415485382, 0.08942015469074249, 0.09153348207473755, 0.09047681838274002, 0.08981640636920929, 0.08875974267721176], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 1, 7, 4, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5, 7, 2, 4], [2, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2, 0, 1, 3], [40, 28, 35, 39, 41, 36, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4, 1], [2, 0, 1, 5, 3, 4], [82], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 50, 50, 30, 20, 6, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), tf.math.square(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303188971619108, 2.301673986498926, 2.3021327912642136, 2.3017534688479233, 2.3015910754382034, 2.3021233312646867], "accuracy": [0.09008057415485382, 0.08942015469074249, 0.09153348207473755, 0.09047681838274002, 0.08981640636920929, 0.08875974267721176], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 8, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [35], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303188971619108, 2.301673986498926, 2.3021327912642136, 2.3017534688479233, 2.3015910754382034, 2.3021233312646867], "accuracy": [0.09008057415485382, 0.08942015469074249, 0.09153348207473755, 0.09047681838274002, 0.08981640636920929, 0.08875974267721176], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 8, 1, 8, 4, 2, 6, 4, 6, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 28, 79, 36, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1], [3, 4, 3, 6, 2], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 35, 35, 21, 14, 5, 1, 1, 0, 1, 0, 11, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303188971619108, 2.301673986498926, 2.3021327912642136, 2.3017534688479233, 2.3015910754382034, 2.3021233312646867], "accuracy": [0.09008057415485382, 0.08942015469074249, 0.09153348207473755, 0.09047681838274002, 0.08981640636920929, 0.08875974267721176], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 7, 0, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 1, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 0, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 37, 37, 22, 15, 5, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, alpha)), tf.math.add(alpha, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303188971619108, 2.301673986498926, 2.3021327912642136, 2.3017534688479233, 2.3015910754382034, 2.3021233312646867], "accuracy": [0.09008057415485382, 0.08942015469074249, 0.09153348207473755, 0.09047681838274002, 0.08981640636920929, 0.08875974267721176], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 29, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303188971619108, 2.301673986498926, 2.3021327912642136, 2.3017534688479233, 2.3015910754382034, 2.3021233312646867], "accuracy": [0.09008057415485382, 0.08942015469074249, 0.09153348207473755, 0.09047681838274002, 0.08981640636920929, 0.08875974267721176], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]