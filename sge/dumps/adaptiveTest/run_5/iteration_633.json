[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 2, 3, 8, 6, 6, 6, 3, 2, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8, 7, 0, 4, 0, 5, 2, 4, 3, 8, 8, 5, 1, 8], [0, 1, 2, 2, 2, 1, 1, 3, 3, 3, 0, 3, 4, 2, 5, 2, 3, 3, 1, 0, 0, 0, 3, 3, 5, 5, 4, 5, 5, 3], [88, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7371428608894348, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2920599067215877, 2.2445862971560167, 2.5094568050454056, 3.4113007923867396, 2.1821129357951774, 2.386690835501807, 2.1264690952593264, 2.0264295976490407, 1.9733441780901793, 1.8720077769221914, 1.8134199114303076, 1.8764713744382817, 1.530882947401773, 1.3322638814097556, 1.1765796139633589, 1.174922181851104, 1.0939924447858622, 1.1026134033874513, 0.9604104904923157, 0.9250158482239688, 1.045971853700627, 0.868755041419271, 0.8313376131452637, 0.8451795613587793, 0.8022508375507068, 0.7462077378880283, 0.8042222254107169, 0.7252703905263046, 0.6880859226724491, 0.6634444678936652, 0.7737828581686804, 0.6623404596727663, 0.6490105603270606, 0.6329597275349379, 0.63805571272861, 0.6100257835399521, 0.5922094650665971, 0.5988379391885752, 0.5927557348575196, 0.5456020017073943, 0.5533379167180571, 0.5219419537722993, 0.505718847598697, 0.5000005938814395, 0.510013610612699, 0.4883044012793303, 0.4596039670577469, 0.4557718860277993, 0.4746911923339921, 0.43403965617766105, 0.417546797792248, 0.4237293745383075, 0.42000859248765693, 0.39847216130546875, 0.3892989998063108], "accuracy": [0.20036983489990234, 0.18016114830970764, 0.2518821954727173, 0.137630432844162, 0.23193766176700592, 0.12640337646007538, 0.26839256286621094, 0.30445119738578796, 0.32465988397598267, 0.351340651512146, 0.4010038375854492, 0.3897767663002014, 0.4939902126789093, 0.5552766919136047, 0.5943732857704163, 0.5867124795913696, 0.6098269820213318, 0.6089023947715759, 0.6534143686294556, 0.6626601219177246, 0.6351869106292725, 0.6837934255599976, 0.6915863156318665, 0.6977941989898682, 0.7008321285247803, 0.7174745798110962, 0.696209192276001, 0.7248712182044983, 0.7388719916343689, 0.7461365461349487, 0.7098137736320496, 0.7423061728477478, 0.7524765729904175, 0.7606657147407532, 0.754589855670929, 0.7718927264213562, 0.7709681391716003, 0.772288978099823, 0.7737419009208679, 0.7913089394569397, 0.7917051911354065, 0.7932901978492737, 0.8043851256370544, 0.8101968169212341, 0.7972526550292969, 0.8083476424217224, 0.8265751004219055, 0.828292191028595, 0.819442629814148, 0.8310658931732178, 0.8413683772087097, 0.8350284099578857, 0.837537944316864, 0.8446704745292664, 0.8506141901016235], "val_loss": [1.6197268962860107, 1.9487265178135462, 8.133931296212333, 1.7860148293631417, 2.43937315259661, 1.7285346984863281, 1.5561799321855818, 1.552504232951573, 1.4961040701184953, 1.4263381276811873, 2.0393260547092984, 1.1394163881029402, 0.9989250728062221, 0.888412594795227, 0.8737596103123256, 0.7986129522323608, 0.8849939618791852, 0.7203294038772583, 0.6619372538157872, 0.5991156271525792, 0.6625157424381801, 0.5826406649180821, 0.5684448140008109, 0.5794507094791957, 0.5870217595781598, 0.5361441884722028, 0.5593179634639195, 0.5711059740611485, 0.5120621579033988, 0.5116505111966815, 0.5141470772879464, 0.5075622286115374, 0.4962233475276402, 0.48876621041979107, 0.46399385588509695, 0.4955307756151472, 0.45976916381290983, 0.48777191979544504, 0.46323701313563753, 0.47289706979479107, 0.4357561043330601, 0.4359038472175598, 0.4368358424731663, 0.45425823756626676, 0.45320079156330656, 0.39371427467891146, 0.40941697359085083, 0.4214582783835275, 0.4263182708195278, 0.38855925628117155, 0.40942143542425974, 0.40532680068697247, 0.3845589756965637, 0.39734301396778654, 0.3916081615856716], "val_accuracy": [0.2826666533946991, 0.3333333432674408, 0.12733332812786102, 0.18966667354106903, 0.10400000214576721, 0.2863333225250244, 0.3919999897480011, 0.34466665983200073, 0.40433332324028015, 0.4716666638851166, 0.4320000112056732, 0.6006666421890259, 0.6039999723434448, 0.6579999923706055, 0.6353333592414856, 0.6919999718666077, 0.6676666736602783, 0.7099999785423279, 0.7246666550636292, 0.753000020980835, 0.7210000157356262, 0.746999979019165, 0.7540000081062317, 0.7333333492279053, 0.731333315372467, 0.765999972820282, 0.7493333220481873, 0.7443333268165588, 0.7770000100135803, 0.7549999952316284, 0.7696666717529297, 0.7739999890327454, 0.7900000214576721, 0.7720000147819519, 0.7903333306312561, 0.7793333530426025, 0.8009999990463257, 0.7870000004768372, 0.7906666398048401, 0.7839999794960022, 0.809333324432373, 0.8199999928474426, 0.8183333277702332, 0.7753333449363708, 0.8106666803359985, 0.8349999785423279, 0.8236666917800903, 0.8243333101272583, 0.8130000233650208, 0.8426666855812073, 0.8203333616256714, 0.8356666564941406, 0.8273333311080933, 0.8413333296775818, 0.8320000171661377]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 2, 2, 4, 3, 6, 9, 9, 2, 8, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 2, 2, 1, 3, 3, 3, 0, 2, 4, 4, 5, 2, 3, 1, 1, 0, 0, 0, 3, 1, 5, 5, 4, 5, 5, 3], [34, 28, 39, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.5231428742408752, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(grad, beta), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), beta))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.292056373239209, 2.2448128276827974, 2.1826777552034184, 2.711129421571211, 2.2673044292571882, 2.2505840421305545, 2.2410686235890145, 1.9555716330049973], "accuracy": [0.20036983489990234, 0.177255317568779, 0.22678641974925995, 0.24316470324993134, 0.15440496802330017, 0.18570862710475922, 0.17910447716712952, 0.3265090584754944], "val_loss": [1.6195595945630754, 1.9670779364449638, 1.2945504529135567, 1.9747324671064104, 1.9647485188075475, 1.6593804700034005, 1.5999577386038644, 1.8131984301975794], "val_accuracy": [0.28333333134651184, 0.23499999940395355, 0.48899999260902405, 0.0989999994635582, 0.13500000536441803, 0.3526666760444641, 0.42233332991600037, 0.30433332920074463]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 6, 0, 2, 2, 4, 3, 8, 3, 8, 5, 8, 8, 8, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [34, 46, 39, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.33799999952316284, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.multiply(beta, tf.math.add(beta, grad))))))), tf.math.add(beta, beta))))), tf.math.sqrt(alpha)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2920838871400244, 2.2736028107386286, 2.2956945814586915, 2.242953383234498, 2.3034339476066292, 2.2098501304893006], "accuracy": [0.20023775100708008, 0.1912561058998108, 0.12468630075454712, 0.21754062175750732, 0.10593052208423615, 0.17936864495277405], "val_loss": [1.6282626220158167, 1.9758952004568917, 1.7692546163286482, 1.9762941087995256, 1.9493299211774553, 1.9797193663460868], "val_accuracy": [0.27900001406669617, 0.09966666996479034, 0.20466665923595428, 0.09833333641290665, 0.15133333206176758, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 6, 4, 8, 8, 4, 3, 8, 8, 8, 0, 2, 9, 6, 2, 7, 1, 5, 6, 2, 8, 9, 2, 2], [0, 0, 1, 1, 3, 2, 3, 3, 3, 3, 3, 4, 1, 0, 4, 4], [88, 30, 39, 62, 32], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.3368571400642395, "mapping_values": [1, 1, 1, 0, 1, 0, 43, 43, 27, 16, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.math.sqrt(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(beta))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.292092897384678, 2.210404075824857, 2.3036458385839373, 2.3374954994407235, 2.304346872468776, 2.3023770583256944], "accuracy": [0.2005019187927246, 0.2281072586774826, 0.19601109623908997, 0.17078325152397156, 0.10434553027153015, 0.10474177449941635], "val_loss": [1.6307314464024134, 1.9509436062404089, 1.969214711870466, 1.976860591343471, 1.9734274319240026, 1.9423388072422572], "val_accuracy": [0.27933332324028015, 0.18700000643730164, 0.1080000028014183, 0.0989999994635582, 0.0989999994635582, 0.164000004529953]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 6, 4, 8, 8, 4, 3, 8, 1, 8, 0, 2, 9, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 3, 3, 3, 3, 3, 4], [88, 30, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.32828572392463684, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 16, 10, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(beta))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.292436904627586, 2.1872998216227453, 2.426739835720241, 2.304132893730731, 2.302192702253717, 2.285963576782523], "accuracy": [0.19865275919437408, 0.25280675292015076, 0.11345925182104111, 0.09813763201236725, 0.10342095047235489, 0.14938580989837646], "val_loss": [1.6300899982452393, 1.942086969103132, 1.9751155717032296, 1.973681858607701, 1.9711969239371163, 1.8519800731113978], "val_accuracy": [0.2770000100135803, 0.10433333367109299, 0.0989999994635582, 0.09933333098888397, 0.10100000351667404, 0.2280000001192093]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 0, 5, 9, 2, 4, 0, 8, 5, 2, 5, 8, 3, 6, 8, 3, 2, 2, 7, 1, 5, 6, 2, 8, 4, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 3, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 0, 2, 3, 1], [34, 28, 39, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.32600000500679016, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.292431796215875, 2.306160795186347, 2.3041247841924832, 2.3026261632594576, 2.3046669800362456, 2.3050133019327537], "accuracy": [0.19852067530155182, 0.22956016659736633, 0.09708096832036972, 0.10566636174917221, 0.17791573703289032, 0.10355303436517715], "val_loss": [1.6298226969582694, 1.9751181602478027, 1.973731449672154, 1.9695937292916434, 1.9770048686436243, 1.9721375874110632], "val_accuracy": [0.2773333191871643, 0.09799999743700027, 0.0989999994635582, 0.12800000607967377, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 2, 2, 4, 3, 8, 3, 2, 2, 8, 8, 6, 8, 9, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 4, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1, 3, 5, 1, 2, 4, 2], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.32600000500679016, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.292431796215875, 2.2873555934660628, 2.3040290503312315, 2.3020305138505948, 2.1892054279671527, 2.2733399341481473], "accuracy": [0.19852067530155182, 0.22837141156196594, 0.0948355570435524, 0.10936468094587326, 0.20935148000717163, 0.23457930982112885], "val_loss": [1.6298279762268066, 1.9752294676644462, 1.9738895552498954, 1.9617556163242884, 1.9480290412902832, 1.9828861100333077], "val_accuracy": [0.2773333191871643, 0.09799999743700027, 0.0989999994635582, 0.17866666615009308, 0.14100000262260437, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 9, 2, 4, 3, 8, 3, 2, 2, 4, 8, 6, 8, 9, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9, 4, 5, 5, 2], [0, 0, 3, 5, 3, 3, 3, 3, 0, 3, 3, 4, 5, 0, 3, 3, 3, 3, 1, 5, 0], [88, 30, 39, 43, 46, 51, 7, 86, 53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.31771427392959595, "mapping_values": [1, 1, 1, 0, 1, 0, 59, 59, 38, 21, 9, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.square(grad))), tf.math.add(beta, grad))))))), alpha))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2923922089380344, 2.1324289277434083, 2.343703852825948, 2.2599260437962494, 2.300119319123961, 2.4335369700690177], "accuracy": [0.19852067530155182, 0.2491084337234497, 0.18451987206935883, 0.15321621298789978, 0.11887465417385101, 0.22057852149009705], "val_loss": [1.632058790751866, 1.9799928665161133, 1.9833344050816126, 1.8954404422215052, 1.9719058445521764, 1.986922059740339], "val_accuracy": [0.273333340883255, 0.09966666996479034, 0.09966666996479034, 0.21299999952316284, 0.14166666567325592, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 8, 3, 4, 8, 8, 4, 3, 8, 1, 8, 0, 1, 9, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 3, 3, 3, 3, 3, 4], [88, 33, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.30085715651512146, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))), tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(beta))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.819236556568229, 2.306374884741323, 2.304722536540759, 2.304286593412128, 2.303043619138753, 2.3013500224455963, 2.2686661219694484, 2.306442987334695, 2.302342799676329, 2.247775371599632, 2.4167316960715315, 2.304344086016583, 2.303207543673784, 2.303133889778872, 2.3029685629168366], "accuracy": [0.1822744756937027, 0.10170386731624603, 0.10130762308835983, 0.09457138925790787, 0.10249637067317963, 0.11094967275857925, 0.1550653874874115, 0.09694888442754745, 0.10698718577623367, 0.18134988844394684, 0.11834631860256195, 0.0940430611371994, 0.09668471664190292, 0.0956280529499054, 0.09866596013307571], "val_loss": [1.9797461373465401, 1.975724424634661, 1.9741355351039342, 1.9735174860273088, 1.9729479381016322, 1.9682924406869071, 1.9784101758684431, 1.9741509301321847, 1.9707920891898019, 2.3083395276750838, 1.9754276275634766, 1.9740114893232072, 1.9736622401646204, 1.973616463797433, 1.9736982073102678], "val_accuracy": [0.10433333367109299, 0.09799999743700027, 0.0989999994635582, 0.10333333164453506, 0.16699999570846558, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.16966666281223297, 0.22599999606609344, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 2, 4, 0, 8, 9, 2, 9, 8, 3, 1, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [34, 28, 39, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2937142848968506, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, beta), tf.math.negative(grad))), tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2923922719200918, 2.1366045060269254, 2.2586027353730387, 2.3012318515727204, 2.345526787142287, 2.4418238255766958, 2.302952117230898, 2.294037529695083, 2.306390840395362], "accuracy": [0.19852067530155182, 0.24884428083896637, 0.16061286628246307, 0.1418570876121521, 0.13472460210323334, 0.14832915365695953, 0.09972262382507324, 0.1942940205335617, 0.10711926966905594], "val_loss": [1.6320581436157227, 1.9800303322928292, 1.969191551208496, 2.05521821975708, 1.930239268711635, 1.974219730922154, 1.9723592485700334, 1.983330590384347, 1.9556173597063338], "val_accuracy": [0.273333340883255, 0.1550000011920929, 0.0989999994635582, 0.3319999873638153, 0.19333332777023315, 0.09466666728258133, 0.09833333641290665, 0.09966666996479034, 0.2796666622161865]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [2, 2, 2, 8, 8, 4, 0, 8, 3, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 2, 2, 4, 2, 1, 3, 3, 3, 0, 2, 4, 4, 5, 2, 3, 1, 1, 0, 0, 0, 3, 1, 5, 5, 4, 5, 5, 3], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2085714340209961, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.681758214548484, 7.846533710206142, NaN, NaN, NaN, NaN], "accuracy": [0.22863557934761047, 0.14212125539779663, 0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0516726630074635, 184.6136954171317, NaN, NaN, NaN, NaN], "val_accuracy": [0.16633333265781403, 0.07400000095367432, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [2, 2, 2, 8, 8, 4, 0, 8, 3, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.20399999618530273, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.6754461260614075, 13.399146473151093, 2.684469956574486, 2.591593827049982, 6.1333180070631945, 2.85189404044846], "accuracy": [0.22863557934761047, 0.13815876841545105, 0.10157178342342377, 0.10434553027153015, 0.09642054885625839, 0.09747721254825592], "val_loss": [2.0488713128226146, 2.2611968176705495, 2.165288516453334, 2.341144629887172, 2.49888345173427, 2.1660142626081194], "val_accuracy": [0.16599999368190765, 0.08266666531562805, 0.09833333641290665, 0.10433333367109299, 0.10066666454076767, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 3, 2, 6, 4, 3, 3, 5, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8, 7, 0, 4, 0, 0, 2, 2, 3, 8, 8, 5, 1, 8], [3, 4, 2, 1, 2, 1, 1, 3, 3, 3, 3, 2, 4, 4, 1, 2, 3, 1, 3, 5, 1, 2, 4, 2], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 58, 58, 34, 24, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.subtract(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), grad), grad)), tf.math.add(beta, grad)))))))))))))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), alpha)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))))))))), tf.math.add(beta, grad)))), tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(grad)))), tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(alpha))), beta), grad))), tf.math.sqrt(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 2, 2, 2, 4, 1, 8, 3, 2, 2, 8, 8, 2, 8, 9, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9, 5, 5], [2, 4, 2, 2, 2, 2, 1, 3, 3, 3, 0, 2, 4, 4, 5, 2, 3, 1, 1, 0, 0, 0, 3, 1, 5, 5, 4, 5, 5, 3], [27, 15, 39, 5, 28], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 56, 56, 36, 20, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.math.subtract(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(tf.math.add(beta, beta), beta))))))), alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), tf.math.add(beta, beta))))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, alpha)))))))), tf.math.add(beta, alpha)))))))), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 6, 2, 2, 0, 4, 0, 0, 1, 3, 3, 1, 3, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8, 3, 7, 3, 8, 6, 1, 3, 8, 7, 0, 5, 1, 7, 4], [0, 1, 2, 0, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 60, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(alpha, beta)), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), tf.math.negative(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301985742708538, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 8, 2, 2, 6, 4, 9, 8, 4, 3, 2, 1, 8, 0, 2, 9, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 3, 3, 3, 3, 3, 4], [88, 30, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [19193560.762108315, 364929066.3510765, 1682000366.991943, 4707926681.309206, 10109018574.159292, 18582684790.61683], "accuracy": [0.09866596013307571, 0.09932637959718704, 0.10077928751707077, 0.09430722147226334, 0.09985470771789551, 0.1006472036242485], "val_loss": [72529874.28571428, 579533970.2857143, 1955138194.2857144, 4633478582.857142, 9048641243.428572, 15634790107.428572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 2, 2, 4, 3, 8, 3, 2, 2, 8, 8, 6, 8, 9, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 2, 3, 1, 3, 3, 1, 0, 2, 4, 4, 5, 2, 3, 1, 1, 0, 0, 0, 3, 1, 5, 5, 4, 5, 5, 3], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.sqrt(beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)))))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301985742708538, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [2, 2, 2, 8, 8, 4, 0, 8, 3, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 1, 1, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06457142531871796, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), beta)), grad), tf.math.pow(alpha, tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), beta)), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300380291325966, 2.301507664929764, 2.3013928406085196, 2.2992937220338, 2.300879045515926, 2.300345465239753, 2.3002986931892164, 2.299495560161473, 2.2999175155419462, 2.3012968900260073, 2.2999432723378272, 2.30021165220603, 2.30011606348693, 2.2995372610541853, 2.300759268506108, 2.300371252991315], "accuracy": [0.0940430611371994, 0.09536388516426086, 0.09391097724437714, 0.09906221181154251, 0.09496764093637466, 0.09602430462837219, 0.09813763201236725, 0.09826971590518951, 0.09932637959718704, 0.0948355570435524, 0.1022322028875351, 0.09906221181154251, 0.1010434553027153, 0.09628847241401672, 0.1010434553027153, 0.09655263274908066], "val_loss": [1.9703168187822615, 1.9698501995631628, 1.969587939126151, 1.9695841925484794, 1.9697307177952357, 1.9698032651628767, 1.9698125975472587, 1.9698295593261719, 1.969775881086077, 1.9697583062308175, 1.969764028276716, 1.9698798315865653, 1.9701549666268485, 1.9704642977033342, 1.9706250599452428, 1.9708192007882255], "val_accuracy": [0.045666664838790894, 0.05366666615009308, 0.05533333495259285, 0.057999998331069946, 0.05999999865889549, 0.06466666609048843, 0.07133333384990692, 0.07233333587646484, 0.07266666740179062, 0.07533333450555801, 0.07599999755620956, 0.07500000298023224, 0.06966666877269745, 0.06966666877269745, 0.0676666647195816, 0.070333331823349]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 6, 2, 2, 4, 3, 8, 3, 2, 2, 8, 8, 6, 8, 9, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 4, 3, 3, 2, 2, 1, 3, 3, 3, 0, 2, 4, 4, 5, 2, 3, 1, 1, 0, 0, 0, 3, 1, 5, 5, 4, 5, 5, 3], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.sqrt(beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), alpha)))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300751931631743, 2.3027290192262577, 2.303243637084961, 2.300972698575958, 2.3028740086780326, 2.302037834947954], "accuracy": [0.09298639744520187, 0.09219389408826828, 0.08968432247638702, 0.09325055778026581, 0.09047681838274002, 0.09338264167308807], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 2, 2, 8, 8, 4, 0, 8, 3, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 1, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [74, 37, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.sqrt(beta)), grad)), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.negative(tf.math.sqrt(alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300751931631743, 2.3027290192262577, 2.303243637084961, 2.300972698575958, 2.3028740086780326, 2.302037834947954], "accuracy": [0.09298639744520187, 0.09219389408826828, 0.08968432247638702, 0.09325055778026581, 0.09047681838274002, 0.09338264167308807], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]