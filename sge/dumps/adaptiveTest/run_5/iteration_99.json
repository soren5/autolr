[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7811428308486938, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2932386340057027, 2.271729147775912, 2.2478434052591423, 2.222552694428504, 2.1867023198958226, 2.1440067181041167, 2.0876044618644105, 2.0187090522089433, 1.9314949030039128, 1.8350447533924534, 1.7269088409013438, 1.6229928981484738, 1.5361855984395443, 1.4435182336991914, 1.3705866339499246, 1.3251754254744337, 1.2552301136887762, 1.2143248691849815, 1.1811817214473552, 1.1336263740350856, 1.1113759112821011, 1.0818254042295274, 1.0565146336607756, 1.0394284547579806, 1.0145770546593575, 0.9833225137947131, 0.9879908131539089, 0.9626451398104158, 0.9498937271290357, 0.9359001532175348, 0.9224310651856517, 0.9232230636626659, 0.9041841662933073, 0.8911547890712147, 0.880272928726215, 0.8810392835546148, 0.866677817234258, 0.8577643400721184, 0.8434144822818381, 0.8467012486988763, 0.8313919872403728, 0.825557421919944, 0.8312119067289951, 0.820013804702459, 0.816959140787602, 0.816377072128968, 0.8118263745761393, 0.7921697546572591, 0.798195947769091, 0.7905832321384658, 0.7913787862439244, 0.781663132995552, 0.774505589813242, 0.7724368939105593, 0.7645689684795808, 0.7613750953936321, 0.7641929433944439, 0.7470965160512338, 0.7585252408479987, 0.7461394432702352, 0.7501111622058861, 0.7483827817583317, 0.7452658730144625, 0.7420260068558117, 0.7410870464313236, 0.7331425830704141, 0.7337288525929273, 0.7285868040858132, 0.7366039955683703, 0.7173653301419898, 0.723711152000198, 0.7090748318859362, 0.7165169088265143, 0.7163419604474653, 0.71628304045702, 0.7054792246357514, 0.7019295872572533, 0.7027621159952204, 0.6923781744934044, 0.6900885271405689, 0.6969913886900607, 0.6914986554090893, 0.69333965582949, 0.7004609015702477, 0.6869364130246625, 0.6777079173161636, 0.6819756789419078, 0.6819068089830184, 0.6849379290553164, 0.6835730026001628, 0.6811521610469237, 0.6763873895114328, 0.6753014890099907, 0.6810080246398824, 0.6706464124110082, 0.659499372127207, 0.663591955253209, 0.6649039159629165, 0.6630884848565568, 0.6668732239743108], "accuracy": [0.11240258812904358, 0.16919825971126556, 0.23101307451725006, 0.2751287817955017, 0.3275656998157501, 0.3537181317806244, 0.3839651346206665, 0.4057588279247284, 0.4309866726398468, 0.4505349397659302, 0.469819039106369, 0.4974243938922882, 0.5003302097320557, 0.5276713967323303, 0.5416721701622009, 0.5522388219833374, 0.5684850215911865, 0.5822216272354126, 0.5905428528785706, 0.6007132530212402, 0.6081098914146423, 0.6169594526290894, 0.6262052655220032, 0.6383568644523621, 0.6432439684867859, 0.6551313996315002, 0.6491876840591431, 0.6535464525222778, 0.6608110070228577, 0.6649055480957031, 0.6682076454162598, 0.6654338836669922, 0.6811517477035522, 0.683529257774353, 0.6844538450241089, 0.6881521344184875, 0.6921146512031555, 0.6905296444892883, 0.698190450668335, 0.6966054439544678, 0.6955488324165344, 0.7065116763114929, 0.7017567157745361, 0.7029454708099365, 0.7096816897392273, 0.7058512568473816, 0.7047945857048035, 0.71100252866745, 0.713379979133606, 0.7145687341690063, 0.7098137736320496, 0.717870831489563, 0.7194558382034302, 0.7156254053115845, 0.7210407853126526, 0.7189275026321411, 0.726192057132721, 0.7252674698829651, 0.7235503792762756, 0.7260599732398987, 0.7296261787414551, 0.7263241410255432, 0.7285695672035217, 0.7300224304199219, 0.7310791015625, 0.7334566116333008, 0.7285695672035217, 0.7360982894897461, 0.7326641082763672, 0.7378153204917908, 0.7296261787414551, 0.7357020378112793, 0.739400327205658, 0.7368907928466797, 0.7391361594200134, 0.7408532500267029, 0.7378153204917908, 0.7436270117759705, 0.7440232634544373, 0.7473253011703491, 0.7417778372764587, 0.746268630027771, 0.7440232634544373, 0.7388719916343689, 0.7486461400985718, 0.7526086568832397, 0.7475894689559937, 0.7432307600975037, 0.7475894689559937, 0.7474573850631714, 0.7481178045272827, 0.7518161535263062, 0.7503632307052612, 0.7515519857406616, 0.7553823590278625, 0.7568352818489075, 0.7584202885627747, 0.7586844563484192, 0.7581561207771301, 0.7572315335273743], "val_loss": [1.9511573655264718, 1.9304039137704032, 1.9064739091055733, 1.8773070744105749, 1.8398130961826868, 1.7915444374084473, 1.7296714782714844, 1.6532174859728133, 1.561624561037336, 1.4587977954319544, 1.351766552243914, 1.245884963444301, 1.1526278427668981, 1.0717301709311349, 1.0030214105333601, 0.9489878586360386, 0.9018071719578334, 0.862797771181379, 0.8296499933515277, 0.8017253364835467, 0.7779327120099749, 0.757513301713126, 0.738247445651463, 0.7233153070722308, 0.7092947278703962, 0.6955625329698835, 0.685687712260655, 0.6748653650283813, 0.666674188205174, 0.6571152550833566, 0.6487323216029576, 0.6428244624819074, 0.6358209848403931, 0.630179728780474, 0.6232743603842599, 0.6185940504074097, 0.6122990506035941, 0.606158835547311, 0.6019624131066459, 0.5984476975032261, 0.5922064781188965, 0.5890201500483921, 0.5861599445343018, 0.5825275353022984, 0.5794639757701329, 0.5767935173852103, 0.5740326983588082, 0.5676061596189227, 0.5652889864785331, 0.5635846172060285, 0.5615601199013847, 0.5580924068178449, 0.5557880912508283, 0.5523148434502738, 0.5496905190604073, 0.5466939040592739, 0.544197848864964, 0.5434137071881976, 0.5422771658216204, 0.539085865020752, 0.5377355643681118, 0.5357625314167568, 0.5332067353384835, 0.5326015778950283, 0.5295895848955426, 0.5286295924867902, 0.5246134996414185, 0.524270943232945, 0.5217187234333583, 0.5206821646009173, 0.5212491069521222, 0.5179856845310756, 0.5159657852990287, 0.5139702899115426, 0.5131890433175224, 0.5102567843028477, 0.5093577759606498, 0.5089557000568935, 0.507229106766837, 0.5048997913088117, 0.5039998633520943, 0.5041663816996983, 0.5015892130987984, 0.5006202459335327, 0.4975378853934152, 0.49559577873774935, 0.4944887331553868, 0.4954923221043178, 0.493298990385873, 0.49253599984305246, 0.4916609355381557, 0.4902044194085257, 0.4889611176082066, 0.4887383665357317, 0.49046744619097027, 0.486650960786002, 0.48509366171700613, 0.48374649456569124, 0.48295749936785015, 0.48381827558789936], "val_accuracy": [0.21400000154972076, 0.3513333201408386, 0.39933332800865173, 0.44600000977516174, 0.47099998593330383, 0.5013333559036255, 0.5303333401679993, 0.5490000247955322, 0.565666675567627, 0.5863333344459534, 0.6016666889190674, 0.609333336353302, 0.6186666488647461, 0.6513333320617676, 0.6666666865348816, 0.6786666512489319, 0.6809999942779541, 0.6933333277702332, 0.6940000057220459, 0.6996666789054871, 0.7056666612625122, 0.7039999961853027, 0.7136666774749756, 0.7183333039283752, 0.7136666774749756, 0.722000002861023, 0.7279999852180481, 0.7276666760444641, 0.7286666631698608, 0.7289999723434448, 0.7319999933242798, 0.7333333492279053, 0.7369999885559082, 0.7363333106040955, 0.7386666536331177, 0.7426666617393494, 0.7413333058357239, 0.7486666440963745, 0.7446666955947876, 0.7456666827201843, 0.7446666955947876, 0.7446666955947876, 0.753000020980835, 0.753000020980835, 0.7486666440963745, 0.7543333172798157, 0.7553333044052124, 0.7576666474342346, 0.7596666812896729, 0.7573333382606506, 0.7599999904632568, 0.7606666684150696, 0.7613333463668823, 0.7643333077430725, 0.7630000114440918, 0.7666666507720947, 0.7673333287239075, 0.765333354473114, 0.7639999985694885, 0.768666684627533, 0.7710000276565552, 0.768666684627533, 0.7710000276565552, 0.768666684627533, 0.7713333368301392, 0.7696666717529297, 0.7723333239555359, 0.7716666460037231, 0.7743333578109741, 0.7706666588783264, 0.7713333368301392, 0.7746666669845581, 0.7746666669845581, 0.7733333110809326, 0.7753333449363708, 0.7736666798591614, 0.7753333449363708, 0.7749999761581421, 0.7796666622161865, 0.7760000228881836, 0.7816666960716248, 0.7793333530426025, 0.7789999842643738, 0.7793333530426025, 0.7793333530426025, 0.7829999923706055, 0.781333327293396, 0.7823333144187927, 0.784333348274231, 0.7856666445732117, 0.7889999747276306, 0.784333348274231, 0.784333348274231, 0.7856666445732117, 0.7910000085830688, 0.7879999876022339, 0.7876666784286499, 0.7900000214576721, 0.7893333435058594, 0.7916666865348816]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7631428837776184, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2932386340057027, 2.2717290668124774, 2.2478431983315916, 2.222553265738749, 2.1867044927768107, 2.144010020095942, 2.0876055595786926, 2.0187077251140075, 1.9314892597800595, 1.8350480757904657, 1.7269056086464014, 1.6229990348682397, 1.5361915152732013, 1.4435313371162783, 1.370594782537048, 1.3251840546776386, 1.2552379256997834, 1.2143480562971662, 1.181212229530935, 1.133690965142563, 1.11145420175864, 1.0819136474299755, 1.0565986476003093, 1.0394910235903156, 1.0146249827376888, 0.9833614680950022, 0.9880222775255606, 0.962671917238413, 0.9499492500168757, 0.9359488336086714, 0.9224574597535935, 0.9232707703197007, 0.9043106468456643, 0.8912039763891875, 0.8803153531882961, 0.8811104256699602, 0.8667297759595848, 0.857761929701537, 0.8434152158574815, 0.8467349438005356, 0.8313778581526049, 0.8255357130281425, 0.8312146052897268, 0.8200736255016561, 0.8169993501628442, 0.8163816646782635, 0.8119424673245331, 0.792277223878706, 0.7981179039145442, 0.7906095115988246, 0.7914800075035463, 0.7816463722025068, 0.7745136222693237, 0.7724136285982773, 0.7645319672686439, 0.7614183846702193, 0.7642358558966168, 0.7472061855587363, 0.758530099283923, 0.7461889106143089, 0.7500663116277091, 0.7484376451295554, 0.7452735745549407, 0.7419410450126926, 0.7411006320075525, 0.7330715675490045], "accuracy": [0.11240258812904358, 0.16919825971126556, 0.23101307451725006, 0.2751287817955017, 0.3275656998157501, 0.3537181317806244, 0.38383305072784424, 0.40589091181755066, 0.4309866726398468, 0.4504028558731079, 0.4695548713207245, 0.49729230999946594, 0.5003302097320557, 0.5274072289466858, 0.5418042540550232, 0.5521067380905151, 0.568749189376831, 0.5822216272354126, 0.5908070206642151, 0.6009774208068848, 0.6086382269859314, 0.6170915365219116, 0.6262052655220032, 0.6383568644523621, 0.6435081362724304, 0.6548672318458557, 0.6491876840591431, 0.6536785364151001, 0.6608110070228577, 0.6649055480957031, 0.6682076454162598, 0.6653017997741699, 0.6818121671676636, 0.6832650899887085, 0.6851142644882202, 0.6877558827400208, 0.6919825673103333, 0.6906617283821106, 0.6984546184539795, 0.6973979473114014, 0.6955488324165344, 0.7065116763114929, 0.7008321285247803, 0.7033417224884033, 0.7096816897392273, 0.7053229212760925, 0.7046625018119812, 0.7106062769889832, 0.7141724824905396, 0.7143045663833618, 0.7099458575248718, 0.7181349992752075, 0.7199841737747192, 0.715889573097229, 0.7206445932388306, 0.7194558382034302, 0.7257958054542542, 0.7256637215614319, 0.7234182953834534, 0.7263241410255432, 0.7284374833106995, 0.7263241410255432, 0.7283053994178772, 0.7304186820983887, 0.7309470176696777, 0.733588695526123], "val_loss": [1.9511572974068778, 1.9304039137704032, 1.9064737047467912, 1.8773080280848913, 1.8398196356637138, 1.7915456635611398, 1.729670183999198, 1.653214727129255, 1.5616240160805839, 1.4587952409471785, 1.351766926901681, 1.2458949770246233, 1.1526374476296561, 1.0717243467058455, 1.0030512469155448, 0.9489845888955253, 0.9018221582685199, 0.8628106117248535, 0.8296603986195156, 0.8017574037824359, 0.77793288230896, 0.7574962718146188, 0.7382675749914986, 0.7233379738671439, 0.7093264545713153, 0.6955173015594482, 0.6856660672596523, 0.6748677662440709, 0.6666531392506191, 0.6571412937981742, 0.6487965754100254, 0.6429559332983834, 0.6359046357018607, 0.6302482060023716, 0.6233282600130353, 0.6186159338269915, 0.6122680732182094, 0.6061405284064156, 0.6019248451505389, 0.5984893526349749, 0.5921334879738944, 0.589010340826852, 0.5861978871481759, 0.582558138029916, 0.5796425853456769, 0.576914736202785, 0.5741491828645978, 0.5676571811948504, 0.5653445890971592, 0.5635966743741717, 0.5616546358380999, 0.5581121444702148, 0.555868285042899, 0.5522961616516113, 0.5496685675212315, 0.5467044115066528, 0.5441695962633405, 0.5433515650885445, 0.5421998841421944, 0.5389207601547241, 0.5376422234943935, 0.535752705165318, 0.5332174301147461, 0.5324864728110177, 0.5294997692108154, 0.5285770041601998], "val_accuracy": [0.21400000154972076, 0.3513333201408386, 0.39933332800865173, 0.44600000977516174, 0.47099998593330383, 0.5009999871253967, 0.5299999713897705, 0.5490000247955322, 0.5659999847412109, 0.5860000252723694, 0.6016666889190674, 0.609333336353302, 0.6186666488647461, 0.6513333320617676, 0.6673333048820496, 0.6786666512489319, 0.6813333630561829, 0.6933333277702332, 0.6940000057220459, 0.6993333101272583, 0.7056666612625122, 0.7039999961853027, 0.7136666774749756, 0.7179999947547913, 0.7136666774749756, 0.722000002861023, 0.7283333539962769, 0.7276666760444641, 0.7289999723434448, 0.7293333411216736, 0.7319999933242798, 0.7326666712760925, 0.7369999885559082, 0.7366666793823242, 0.7386666536331177, 0.7426666617393494, 0.7406666874885559, 0.7480000257492065, 0.7446666955947876, 0.7456666827201843, 0.7443333268165588, 0.7446666955947876, 0.753333330154419, 0.753333330154419, 0.7493333220481873, 0.7543333172798157, 0.7549999952316284, 0.7570000290870667, 0.7596666812896729, 0.7573333382606506, 0.7603333592414856, 0.7609999775886536, 0.7616666555404663, 0.7643333077430725, 0.7633333206176758, 0.7666666507720947, 0.7676666378974915, 0.765666663646698, 0.7643333077430725, 0.7683333158493042, 0.7716666460037231, 0.768666684627533, 0.7713333368301392, 0.7693333625793457, 0.7716666460037231, 0.7696666717529297]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.19257143139839172, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8754718472472334, 2.3228170027460138, 3.0627346404429203, 2.30956992774261, 2.3041991135699638, 2.303079676996558, 2.3031638482652714], "accuracy": [0.21040813624858856, 0.11728965491056442, 0.16853784024715424, 0.09959053993225098, 0.10210011899471283, 0.09893012791872025, 0.09377889335155487], "val_loss": [2.128720896584647, 1.7543330873761858, 1.9836703027997697, 1.9747552871704102, 1.9737038612365723, 1.97341217313494, 1.9732867649623327], "val_accuracy": [0.10100000351667404, 0.19200000166893005, 0.10166666656732559, 0.10166666656732559, 0.10233332961797714, 0.10433333367109299, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [1, 2, 1, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [0, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.17714285850524902, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.136006579092386, 19.028392560666877, 4.128878108923855, 2.7049359579001906, 2.5689590163691296, 2.8524852768620006], "accuracy": [0.21238937973976135, 0.13617752492427826, 0.09576013684272766, 0.09959053993225098, 0.09826971590518951, 0.10051512718200684], "val_loss": [1.822038037436349, 44.86956569126674, 2.0755251475742886, 2.159327575138637, 2.52065862928118, 2.1039646693638394], "val_accuracy": [0.3050000071525574, 0.10266666859388351, 0.0989999994635582, 0.10133333504199982, 0.10433333367109299, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 8, 2, 1, 1, 8, 5, 5, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 8, 2, 5, 5, 0, 5, 8, 4, 5], [0, 1, 1, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [40, 63, 79, 92, 41, 36, 91, 33], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.16371428966522217, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.135272782570997, 22.74262250856937, 2.574374515650342, 2.6170169967686134, 2.5273148584296563, 2.4965570029990705], "accuracy": [0.21199312806129456, 0.13578127324581146, 0.09642054885625839, 0.10249637067317963, 0.10051512718200684, 0.09985470771789551], "val_loss": [1.7327242578778947, 2.3139145033700124, 2.109302588871547, 1.9933114051818848, 2.264059611729213, 2.0878657613481795], "val_accuracy": [0.32100000977516174, 0.11133333295583725, 0.10766666382551193, 0.10433333367109299, 0.10433333367109299, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 2, 1, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [16, 63, 79, 92, 41, 36, 91, 33], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42, 88], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.12399999797344208, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.299807113127985, 2.30084845261126, 2.3021499513871224, 2.303223222962554, 2.3136310659899073, 2.4858438902212376], "accuracy": [0.09906221181154251, 0.09100515395402908, 0.09589222073554993, 0.09853387624025345, 0.11121384054422379, 0.10038304328918457], "val_loss": [1.968851089477539, 1.9729763439723425, 1.973879064832415, 1.9764588900974818, 2.0106210027422224, 2.5033954892839705], "val_accuracy": [0.13866665959358215, 0.07766667008399963, 0.08933333307504654, 0.07100000232458115, 0.09799999743700027, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 8, 6, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 3, 0, 2, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 0, 1, 3, 2, 3], [42], [0, 0, 0, 0, 1, 1], [0, 0, 1, 0], [3, 4, 8], [3, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 17, 17, 9, 8, 1, 6, 4, 3, 1, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, beta)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303285440449481, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303285440449481, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 0, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303285440449481, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 2, 6, 4, 3, 4, 4, 3, 2, 7, 2, 1, 2, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [2, 0, 1, 1, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0, 1], [73, 50, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 4, 5, 1, 9, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 3, 0, 4], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [71, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 46, 26, 20, 5, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(grad), tf.math.subtract(beta, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 5, 5, 2, 6, 5, 3, 2, 0, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 0, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303285440449481, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 6, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 2, 7, 9, 1], [2, 2, 2, 2, 0, 2, 1, 3, 1, 2, 0, 2, 2, 0, 2, 0, 2, 3], [73, 28, 74, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 22, 15, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), grad)), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 6, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08532558381557465, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09828571230173111, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29962383272657, 3.1601027995840023, 341.8750491189509, 82896.57729767576, 21425226.55646546, 5452378808.011623, 1406213104729.402], "accuracy": [0.10249637067317963, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9751313073294503, 11.907105854579381, 2754.961844308036, 703915.8035714285, 180199808.0, 46131147337.14286, 11809573718308.572], "val_accuracy": [0.054666668176651, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 6, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09514285624027252, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.13282369165971, 9.399062719138511, 2.4959550468503777, 2.5320952259522733, 2.528798567132392, 2.5100106526957906], "accuracy": [0.21357811987400055, 0.13657376170158386, 0.10447761416435242, 0.10091137140989304, 0.10091137140989304, 0.10315678268671036], "val_loss": [1.7568646158490862, 2.2759275436401367, 2.068127768380301, 2.0245766639709473, 2.2590113367353166, 2.1063421113150462], "val_accuracy": [0.28166666626930237, 0.10433333367109299, 0.10199999809265137, 0.09833333641290665, 0.10433333367109299, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06828571110963821, "mapping_values": [1, 35, 35, 21, 14, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016012414351055, 2.300736539887557, 2.2999451561311703, 2.300385368561559, 2.2993824530460296, 2.2999215657921073, 2.3000452473745874, 2.300129582617088, 2.2989384617236754, 2.3002567815270485, 2.298517425503351, 2.300107267412763, 2.299967256755625, 2.30014447346497, 2.3001321465851623, 2.3012479440552793, 2.300127672024879, 2.3008804159425176], "accuracy": [0.09100515395402908, 0.09153348207473755, 0.0952318087220192, 0.09140139818191528, 0.10236428678035736, 0.09734513610601425, 0.09576013684272766, 0.09932637959718704, 0.10091137140989304, 0.10117553919553757, 0.1018359512090683, 0.1026284471154213, 0.1018359512090683, 0.09853387624025345, 0.09576013684272766, 0.10051512718200684, 0.10196803510189056, 0.09893012791872025], "val_loss": [1.970268794468471, 1.9698817389351981, 1.9695432526724679, 1.9693209103175573, 1.9693918228149414, 1.9694044249398368, 1.9693230901445662, 1.9692521776471819, 1.969216959817069, 1.9692190715244837, 1.9693338530404227, 1.969536440713065, 1.9698211806161063, 1.9700793538774763, 1.970315728868757, 1.9704944065638952, 1.9706897054399763, 1.970860140664237], "val_accuracy": [0.04699999839067459, 0.05400000140070915, 0.056333333253860474, 0.061666667461395264, 0.06133333221077919, 0.06366666406393051, 0.0676666647195816, 0.07133333384990692, 0.07633333653211594, 0.07633333653211594, 0.07766667008399963, 0.07900000363588333, 0.08100000023841858, 0.07833333313465118, 0.07800000160932541, 0.07900000363588333, 0.0793333351612091, 0.07566666603088379]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 5, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06828571110963821, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30160973840748, 2.3007579300114194, 2.2999725070974026, 2.300413165535232, 2.299379681646548, 2.2999062865653674, 2.300029887940197, 2.300149848668677, 2.29895318277193, 2.3002565149554894, 2.2985065394010937, 2.3000878167898744, 2.299948822127798, 2.30011525388407, 2.3000997760749025, 2.30120586155428, 2.300074039527753, 2.3008277104153154], "accuracy": [0.09100515395402908, 0.09179764986038208, 0.0952318087220192, 0.09153348207473755, 0.10249637067317963, 0.09787346422672272, 0.09536388516426086, 0.09906221181154251, 0.10130762308835983, 0.1006472036242485, 0.10210011899471283, 0.10289261490106583, 0.10117553919553757, 0.09866596013307571, 0.09536388516426086, 0.10077928751707077, 0.10157178342342377, 0.09932637959718704], "val_loss": [1.970280306679862, 1.9698945454188757, 1.9695556504385812, 1.9693224089486259, 1.9693755422319685, 1.9693726812090193, 1.9693072863987513, 1.9692506108965193, 1.969193799155099, 1.9691895757402693, 1.96929475239345, 1.9694952283586775, 1.969766684940883, 1.9700279235839844, 1.9702491079057967, 1.970428534916469, 1.9706264904567175, 1.970792021070208], "val_accuracy": [0.046666666865348816, 0.05400000140070915, 0.0560000017285347, 0.061666667461395264, 0.06133333221077919, 0.06366666406393051, 0.06733333319425583, 0.07133333384990692, 0.07566666603088379, 0.07633333653211594, 0.07833333313465118, 0.08033332973718643, 0.0820000022649765, 0.07833333313465118, 0.07666666805744171, 0.07900000363588333, 0.0793333351612091, 0.07733333110809326]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36, 82, 10], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 5, 5, 1, 4], [42, 88], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 9, 8, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302014457551228, 2.301875984317607, 2.301672373906323, 2.3028455603754105, 2.3017209778529875, 2.3019732201119867], "accuracy": [0.09100515395402908, 0.08875974267721176, 0.09021265059709549, 0.08532558381557465, 0.09694888442754745, 0.09074098616838455], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 1, 2, 2, 0, 2, 1, 3, 1, 0, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42, 88], [0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1], [3, 4, 0, 6], [2, 7, 7, 5, 3, 4], [62], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 8, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302014457551228, 2.301875984317607, 2.301672373906323, 2.3028455603754105, 2.3017209778529875, 2.3019732201119867], "accuracy": [0.09100515395402908, 0.08875974267721176, 0.09021265059709549, 0.08532558381557465, 0.09694888442754745, 0.09074098616838455], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]