[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 38, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8171428442001343, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), beta), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.250248462674231, 1.7397774701829536, 1.2144071068887807, 0.8938782637334377, 0.7997580578755142, 0.7384133238314385, 0.698395926576674, 0.6803395049037588, 0.6354712587085618, 0.6055573984899888, 0.5851130506633657, 0.5593547000309984, 0.5434368411075359, 0.5138131119729096, 0.5019283426625145, 0.48376740094630033, 0.47483886147156334, 0.47047950376010667, 0.4419095859811322, 0.42861134948322344, 0.42223928725683235, 0.4066919185001742, 0.40172385001510064, 0.39290691078646056, 0.3785815885817732, 0.3730917390996376, 0.3593945747132881, 0.3598512101285194, 0.33831152540345344, 0.3444168463776439, 0.33168097875846014, 0.3269770558696649, 0.3069092923970412, 0.31150988892966636, 0.3041964024639936, 0.2978075955837095, 0.2828672129787301, 0.2886896384445715, 0.2770069656536139, 0.27826501810712867, 0.27568120728347123, 0.27581394800042686, 0.2550358704217846, 0.24834582595745838, 0.25707775439017516, 0.24686835275003702], "accuracy": [0.2001056671142578, 0.4418174624443054, 0.583410382270813, 0.6732267737388611, 0.7014925479888916, 0.7091533541679382, 0.7289658188819885, 0.743891179561615, 0.7537974119186401, 0.7696473598480225, 0.7773081660270691, 0.7828556299209595, 0.7898560166358948, 0.8039889335632324, 0.8101968169212341, 0.8197067975997925, 0.821820080280304, 0.8219521641731262, 0.8281601071357727, 0.837141752243042, 0.8356888294219971, 0.846387505531311, 0.8506141901016235, 0.854708731174469, 0.8570862412452698, 0.857218325138092, 0.8601241707801819, 0.8621054291725159, 0.8672566413879395, 0.8692378997802734, 0.8725399374961853, 0.8722757697105408, 0.8837670087814331, 0.8794082403182983, 0.8825782537460327, 0.8850878477096558, 0.8893144726753235, 0.8869370222091675, 0.8874653577804565, 0.8928807377815247, 0.8943336606025696, 0.8911636471748352, 0.8982961177825928, 0.90423983335495, 0.8994848728179932, 0.9013340473175049], "val_loss": [1.770528725215367, 0.8687585251671928, 0.6708600350788662, 0.6189151150839669, 0.5902432203292847, 0.5547591618129185, 0.5273584297725132, 0.5070077691759381, 0.483487606048584, 0.4626824174608503, 0.44065040349960327, 0.4211971504347665, 0.40672686270305086, 0.39695173501968384, 0.38930271353040424, 0.3892741969653538, 0.3785340189933777, 0.3712860941886902, 0.36610802582332064, 0.35879542997905184, 0.35300239494868685, 0.3451363103730338, 0.3506081444876535, 0.3407331109046936, 0.342459499835968, 0.3403099605015346, 0.3345710464886257, 0.3282554064478193, 0.3278405921799796, 0.3219360624040876, 0.3199635999543326, 0.3164028951099941, 0.324866030897413, 0.32427111693790983, 0.3240524871008737, 0.32016150440488544, 0.31838107109069824, 0.3159614545958383, 0.3161214845521109, 0.3136250972747803, 0.3146721380097525, 0.3115078806877136, 0.3108939954212734, 0.321464478969574, 0.3147264463560922, 0.31041039739336285], "val_accuracy": [0.42800000309944153, 0.67166668176651, 0.7183333039283752, 0.7263333201408386, 0.7256666421890259, 0.7450000047683716, 0.7463333606719971, 0.7613333463668823, 0.7749999761581421, 0.781333327293396, 0.8036666512489319, 0.8090000152587891, 0.8193333148956299, 0.8263333439826965, 0.8360000252723694, 0.831333339214325, 0.8420000076293945, 0.8443333506584167, 0.843999981880188, 0.8496666550636292, 0.8503333330154419, 0.8569999933242798, 0.859000027179718, 0.8600000143051147, 0.8560000061988831, 0.8583333492279053, 0.8586666584014893, 0.8606666922569275, 0.8653333187103271, 0.8679999709129333, 0.8706666827201843, 0.8650000095367432, 0.8696666955947876, 0.8709999918937683, 0.8700000047683716, 0.8706666827201843, 0.8686666488647461, 0.871999979019165, 0.875, 0.878333330154419, 0.8799999952316284, 0.8756666779518127, 0.8769999742507935, 0.8733333349227905, 0.8740000128746033, 0.878000020980835]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8125714063644409, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 9, 1, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2501443647012547, 1.7348818004784756, 1.1997582756958114, 0.8885621285599142, 0.7977700221256699, 0.7316990813574755, 0.6980116135566116, 0.678386870620588, 0.629263744645855, 0.6039340205243582, 0.5811489348980918, 0.5575196930225641, 0.5422360566408406, 0.5117116680218953, 0.5021340519311862, 0.4847660891651682, 0.4720015478935602, 0.46663028330079254, 0.4409352954486421, 0.4321677432855705, 0.4195626603731972, 0.40846949833857465, 0.40443385666104165, 0.3941010191314303, 0.38289732872266746, 0.37141459093054824, 0.3572018546332867, 0.3600885679441247, 0.3390572261950438, 0.34500039048151426, 0.3307686134446582, 0.32526131536604436, 0.30381521713291226, 0.31454236422626175, 0.3082508737573912, 0.2958420119178829, 0.28229117974109497, 0.2885195402429246, 0.28063565587890366, 0.280651427298615, 0.28031471277964887], "accuracy": [0.20023775100708008, 0.44366663694381714, 0.5857878923416138, 0.6775855422019958, 0.6995112895965576, 0.7173424959182739, 0.7264562249183655, 0.7429665923118591, 0.7580240368843079, 0.7695152759552002, 0.7788931727409363, 0.7853652238845825, 0.7895918488502502, 0.8109893202781677, 0.8088759779930115, 0.8166688680648804, 0.8212917447090149, 0.8212917447090149, 0.8290846943855286, 0.8329150676727295, 0.8397833704948425, 0.8446704745292664, 0.8474441766738892, 0.8576145768165588, 0.8543124794960022, 0.8589354157447815, 0.8634262084960938, 0.8626337051391602, 0.8704266548156738, 0.870030403137207, 0.8728041052818298, 0.8717474341392517, 0.8833707571029663, 0.8778232932090759, 0.8817857503890991, 0.884691596031189, 0.8905032277107239, 0.8849557638168335, 0.8910315632820129, 0.8911636471748352, 0.8928807377815247], "val_loss": [1.7691748482840401, 0.8544641392571586, 0.6777069568634033, 0.6179031814847674, 0.5798179251807076, 0.5515033687864032, 0.5236189024788993, 0.497758081981114, 0.4763118880135672, 0.45591117654527935, 0.43741228750773836, 0.42256962401526316, 0.41144261189869474, 0.399324893951416, 0.394338744027274, 0.3908508334841047, 0.38065321104867117, 0.3735089727810451, 0.36831546681267874, 0.3595112221581595, 0.3503230725015913, 0.3443881869316101, 0.3484722801617214, 0.3415256823812212, 0.34431581837790354, 0.3348554713385446, 0.3364224774496896, 0.326412490436009, 0.32789203950337004, 0.3235126733779907, 0.32426191227776663, 0.31851386172430857, 0.3237710509981428, 0.3198875273977007, 0.3175062281744821, 0.311776340007782, 0.3122377565928868, 0.31560430356434416, 0.3153353674071176, 0.31067031621932983, 0.31484073400497437], "val_accuracy": [0.4286666810512543, 0.6736666560173035, 0.7116666436195374, 0.7266666889190674, 0.7369999885559082, 0.7426666617393494, 0.7570000290870667, 0.7730000019073486, 0.7789999842643738, 0.793666660785675, 0.7976666688919067, 0.812333345413208, 0.8133333325386047, 0.8276666402816772, 0.8276666402816772, 0.8270000219345093, 0.8399999737739563, 0.8370000123977661, 0.8476666808128357, 0.8500000238418579, 0.8586666584014893, 0.8600000143051147, 0.8600000143051147, 0.8613333106040955, 0.8539999723434448, 0.859000027179718, 0.8556666374206543, 0.8616666793823242, 0.8640000224113464, 0.8650000095367432, 0.8683333396911621, 0.8663333058357239, 0.8709999918937683, 0.8703333139419556, 0.8730000257492065, 0.8740000128746033, 0.8723333477973938, 0.8696666955947876, 0.8703333139419556, 0.8733333349227905, 0.8730000257492065]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 8, 4, 5, 4, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [39, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7891428470611572, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.283832477965863, 2.2322092931410102, 2.151462314875528, 2.0154934855594515, 1.813411655364303, 1.5817260224789897, 1.402659822338529, 1.2703807024577227, 1.1620281742642884, 1.0996902517560072, 1.0558741420424766, 1.0110054360782592, 0.973789721132978, 0.9354028870101776, 0.9119636370222157, 0.8920703305229456, 0.8707647215357986, 0.8467211589333309, 0.8371848991329424, 0.82609075099218, 0.8137190444531489, 0.8121721831216411, 0.7850179445427076, 0.7876168257052384, 0.7796787507876335, 0.7653250385190454, 0.7601193338652266, 0.7605450808206774, 0.7441962272845963, 0.7468642831368296, 0.7375496787842885, 0.7274324838291023, 0.7237918755523501, 0.7126683239624437, 0.7130670784770253, 0.7074915222787208, 0.6949347523555874, 0.6947265204704984, 0.6860739797444281, 0.6960853040257717, 0.6871757039603713, 0.683825624333932, 0.6694756403197355, 0.6725209900464018, 0.6713343721654169, 0.661916238560007, 0.6592207725147892, 0.6595389308348119, 0.6541353905788266, 0.6552109277369623, 0.6491874417671675, 0.6421660202888844, 0.645212572878378, 0.6362851903643575, 0.6347638768306451, 0.6403067140389648, 0.6320885082497935, 0.6362956194373138, 0.6226342392792839, 0.6283986174183247], "accuracy": [0.1332716941833496, 0.2530709207057953, 0.34222692251205444, 0.40707963705062866, 0.45449742674827576, 0.4971602261066437, 0.5303130149841309, 0.5649187564849854, 0.5955620408058167, 0.6166952848434448, 0.6287148594856262, 0.6383568644523621, 0.654999315738678, 0.6656980514526367, 0.6748117804527283, 0.6820763349533081, 0.6857746839523315, 0.6963412761688232, 0.6992471218109131, 0.698190450668335, 0.7049266695976257, 0.7029454708099365, 0.7219653725624084, 0.7141724824905396, 0.7162858247756958, 0.7269845604896545, 0.7197200059890747, 0.7223616242408752, 0.7308149337768555, 0.7238145470619202, 0.728701651096344, 0.7347774505615234, 0.7322678565979004, 0.7382115721702576, 0.7334566116333008, 0.7390040755271912, 0.7421740889549255, 0.7467969655990601, 0.7442874312400818, 0.7433628439903259, 0.7432307600975037, 0.7453441023826599, 0.7531369924545288, 0.7469290494918823, 0.7504953145980835, 0.7572315335273743, 0.759080708026886, 0.7597411274909973, 0.7582882046699524, 0.7561748623847961, 0.7592127919197083, 0.7671377658843994, 0.7602694630622864, 0.7670056819915771, 0.765949010848999, 0.7623828053474426, 0.7685906887054443, 0.7646281719207764, 0.7711002230644226, 0.7700436115264893], "val_loss": [1.9261033194405692, 1.8659474509102958, 1.7625814846583776, 1.5906992980412074, 1.3602700574057442, 1.1366025039127894, 0.9818285873958043, 0.8774980476924351, 0.8042608329227993, 0.7547386714390346, 0.7192863736833844, 0.690892049244472, 0.6699937241418021, 0.6498375620160785, 0.6383571795054844, 0.6215416022709438, 0.612329397882734, 0.6104442732674735, 0.5939974444253104, 0.5859331233160836, 0.580255389213562, 0.5693275587899345, 0.560880354472569, 0.5600172792162214, 0.5600354160581317, 0.546359828540257, 0.5417933634349278, 0.543763279914856, 0.5339829410825457, 0.531701820237296, 0.5288546085357666, 0.5229703528540475, 0.5208283151899066, 0.5185378789901733, 0.5132651839937482, 0.5102850879941668, 0.5100666114262172, 0.5040042570659092, 0.5005964040756226, 0.4998659236090524, 0.49867773056030273, 0.49096270969935824, 0.49308654240199495, 0.485370261328561, 0.486818654196603, 0.48631961005074636, 0.4820609433310373, 0.4799668448311942, 0.4783965178898403, 0.4792986937931606, 0.4735560928072248, 0.4718452862330845, 0.47174268109457834, 0.4696048838751657, 0.4671285152435303, 0.46743529183523996, 0.465902362551008, 0.46387369292122976, 0.460491418838501, 0.45818545137132916], "val_accuracy": [0.367333322763443, 0.45133334398269653, 0.5270000100135803, 0.5563333630561829, 0.6079999804496765, 0.6546666622161865, 0.6746666431427002, 0.6776666641235352, 0.70333331823349, 0.7113333344459534, 0.7149999737739563, 0.7200000286102295, 0.7276666760444641, 0.7319999933242798, 0.7393333315849304, 0.7393333315849304, 0.7383333444595337, 0.7536666393280029, 0.7480000257492065, 0.753000020980835, 0.753333330154419, 0.7583333253860474, 0.753333330154419, 0.753000020980835, 0.7583333253860474, 0.765333354473114, 0.7630000114440918, 0.7680000066757202, 0.7749999761581421, 0.7689999938011169, 0.7680000066757202, 0.7760000228881836, 0.7776666879653931, 0.7716666460037231, 0.7806666493415833, 0.7756666541099548, 0.7736666798591614, 0.7756666541099548, 0.7820000052452087, 0.7856666445732117, 0.7756666541099548, 0.778333306312561, 0.7799999713897705, 0.7866666913032532, 0.7876666784286499, 0.7839999794960022, 0.7903333306312561, 0.7926666736602783, 0.793666660785675, 0.7853333353996277, 0.8029999732971191, 0.7889999747276306, 0.793666660785675, 0.7910000085830688, 0.8050000071525574, 0.793666660785675, 0.7953333258628845, 0.7953333258628845, 0.7986666560173035, 0.8043333292007446]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 5, 2, 9, 9, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 91, 97, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.734000027179718, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 8, 2, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(alpha)))), beta)), tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.247687351717815, 1.7123131333340933, 1.1998916550980678, 0.928815384858068, 0.865756354697581, 0.8062896017526923, 0.7843905988386388, 0.7413435527409513, 0.6945408287773893, 0.6485085877697024, 0.6260504479641927, 0.5982884225033184, 0.5856590938605905, 0.5731834728861718, 0.5576379199337257, 0.5533436305644789, 0.5371681459670242, 0.5331358007940051, 0.5124673459193237, 0.49839062608700735, 0.4916392211601672, 0.48705280284131475, 0.4756776170093842, 0.46547703724637435, 0.46685530383274176, 0.44580975890931135, 0.43692689554219893, 0.4317450779044255, 0.41050143070886036, 0.4008326799901658, 0.40350042304988265, 0.4018105516627701, 0.39949990792627804, 0.3978931333261033, 0.39703551416604305, 0.3877254803781229, 0.3851586522805362, 0.3894822200598608, 0.36856380718306403, 0.3837136830423549, 0.3829787051507652, 0.3626010068663359, 0.3701122470496274, 0.38421865277806166, 0.36319588035986705, 0.3524628358116523], "accuracy": [0.20512482523918152, 0.43983620405197144, 0.591731607913971, 0.6585655808448792, 0.6741513609886169, 0.6950204968452454, 0.7088891863822937, 0.726192057132721, 0.7413815855979919, 0.759609043598175, 0.7572315335273743, 0.7718927264213562, 0.7807422876358032, 0.7865539789199829, 0.7810064554214478, 0.7866860628128052, 0.7972526550292969, 0.8030643463134766, 0.8094043135643005, 0.8145555257797241, 0.8165367841720581, 0.8124422430992126, 0.8215559124946594, 0.8300092220306396, 0.8297450542449951, 0.837141752243042, 0.8359529972076416, 0.8341038227081299, 0.8388587832450867, 0.8465195894241333, 0.8446704745292664, 0.8453308939933777, 0.8403117060661316, 0.8445383906364441, 0.8424250483512878, 0.8527275323867798, 0.8492933511734009, 0.8519350290298462, 0.8564258217811584, 0.8561616539955139, 0.8543124794960022, 0.8577466607093811, 0.8577466607093811, 0.8524633646011353, 0.8524633646011353, 0.8652753829956055], "val_loss": [1.7520747184753418, 0.8034463269369942, 0.6829613276890346, 0.6357465130942208, 0.5995398248944964, 0.5997650623321533, 0.5474339553288051, 0.5138825689043317, 0.5020920549120221, 0.4632964474814279, 0.4489638975688389, 0.45072032724108013, 0.4464939832687378, 0.4347326500075204, 0.4324518782751901, 0.4148594651903425, 0.39975340025765554, 0.4084886312484741, 0.4078320009367807, 0.4182566319193159, 0.40477908509118216, 0.4018814819199698, 0.39207901273454937, 0.39453709977013723, 0.39516600540706087, 0.3870542730603899, 0.39372414350509644, 0.3769494039671762, 0.37828382423945833, 0.3850580368723188, 0.38038340636662077, 0.37055961574826923, 0.39579720156533377, 0.3674165776797703, 0.37864285707473755, 0.4067309583936419, 0.39921983650752474, 0.39040505034582956, 0.4021741236959185, 0.4011238557951791, 0.4112632615225656, 0.4307870013373239, 0.4151058452469962, 0.4207353251320975, 0.42835566827229093, 0.43196265186582294], "val_accuracy": [0.47866666316986084, 0.6830000281333923, 0.7036666870117188, 0.7026666402816772, 0.7356666922569275, 0.7463333606719971, 0.7563333511352539, 0.7713333368301392, 0.7820000052452087, 0.8016666769981384, 0.8009999990463257, 0.8096666932106018, 0.8069999814033508, 0.8206666707992554, 0.8086666464805603, 0.8209999799728394, 0.8289999961853027, 0.8316666483879089, 0.8323333263397217, 0.8263333439826965, 0.8423333168029785, 0.8363333344459534, 0.8403333425521851, 0.8389999866485596, 0.8420000076293945, 0.8426666855812073, 0.8396666646003723, 0.843999981880188, 0.8513333201408386, 0.8503333330154419, 0.8546666502952576, 0.8529999852180481, 0.856333315372467, 0.856333315372467, 0.8533333539962769, 0.8546666502952576, 0.8536666631698608, 0.8573333621025085, 0.8539999723434448, 0.8566666841506958, 0.8583333492279053, 0.8533333539962769, 0.8560000061988831, 0.8510000109672546, 0.8533333539962769, 0.8536666631698608]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 1, 9, 1, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 3, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.13914285600185394, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), beta), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [5.148114840368065, 2.3265156572080166, 2.319758682108637, 2.3330960427418894, 2.316632369316926, 2.31776924788944, 2.3234619504787255, 2.3329497090010767], "accuracy": [0.17236824333667755, 0.09985470771789551, 0.1014397069811821, 0.09853387624025345, 0.09906221181154251, 0.09866596013307571, 0.10038304328918457, 0.10870426893234253], "val_loss": [2.019543784005301, 1.9835070201328822, 1.9769160406930106, 2.0089921951293945, 1.991947855268206, 1.9950321742466517, 1.9847117832728796, 1.9844188690185547], "val_accuracy": [0.10066666454076767, 0.0989999994635582, 0.10100000351667404, 0.09833333641290665, 0.09799999743700027, 0.09966666996479034, 0.0989999994635582, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 7, 2, 9, 2, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.12628571689128876, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [5.147440926053378, 2.3256491258742393, 2.320530379626257, 2.3269458469256845, 2.3156602592075255, 2.248385506724291, 2.6660785934849818, 2.6127759243881132, NaN, NaN, NaN], "accuracy": [0.17183992266654968, 0.1006472036242485, 0.10130762308835983, 0.09642054885625839, 0.10210011899471283, 0.12019548565149307, 0.17514199018478394, 0.0956280529499054, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.016533783503941, 1.9842512266976493, 1.9856713158743722, 1.9812090056283134, 1.9608044624328613, 1.7998996462140764, 2.690333366394043, 2.0190354755946567, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.0989999994635582, 0.10100000351667404, 0.09833333641290665, 0.09666666388511658, 0.265666663646698, 0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [68, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 6, 9, 3, 2, 9, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 12, 12, 10, 2, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [42, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [2, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), beta)), tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 8, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 8, 4, 8, 5, 2, 9, 9, 2, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [47, 18, 97, 81, 8, 43, 53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [80, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 8, 4, 5, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 10, 0, 4, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022249800543886, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 59, 57, 8, 66, 34, 96], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 10, 0, 5, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022249800543886, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [47, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 5, 2, 9, 3, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [2, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 12, 12, 10, 2, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 8, 4, 5, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 10, 10, 9, 1, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [16637.40219189094, 305065.15401697264, 1405398.6000198124, 3886389.6172896577, 8469666.745872408, 15473246.81363096], "accuracy": [0.09576013684272766, 0.0940430611371994, 0.10302469879388809, 0.09747721254825592, 0.10117553919553757, 0.10342095047235489], "val_loss": [61677.39955357143, 486162.78571428574, 1633209.392857143, 3862564.4285714286, 7533974.571428572, 13007166.857142856], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 1, 0, 1, 2, 9, 5, 9, 9, 2, 6, 6, 2, 8, 1, 5, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [9, 85, 3, 57, 8, 32], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 9, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(alpha)), tf.math.subtract(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3022249800543886, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 3, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 7, 2, 9, 1, 2, 9, 2, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [41, 18, 97, 81, 8, 43, 53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 7, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 12, 12, 10, 2, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [258837937.01097187, 4762022629096425.0, 9.429681280228962e+22, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09391097724437714, 0.10236428678035736, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777], "val_loss": [14820648667.428572, 2.637119049617338e+17, 7.389645277982351e+24, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [68, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 1, 9, 1, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 3, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.0868571400642395, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), beta), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3011239049236583, 2.302265540184582, 2.303148236430285, 2.3088021115572728, 2.406806823395152, 3.2520879135313225], "accuracy": [0.09338264167308807, 0.11068551242351532, 0.10289261490106583, 0.09681680053472519, 0.09615638852119446, 0.09655263274908066], "val_loss": [1.9730188505990165, 1.9740291322980608, 1.9754202025277274, 1.9944460051400321, 2.315643855503627, 3.844223294939314], "val_accuracy": [0.1496666669845581, 0.09666666388511658, 0.09866666793823242, 0.09966666996479034, 0.10166666656732559, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [68, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 1, 9, 1, 2, 9, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [41, 52, 48, 81, 8, 43, 53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.055142857134342194, "mapping_values": [1, 6, 6, 3, 3, 0, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303350079848451, 2.303176121736294, 2.3018039998251134, 2.3026770110993793, 2.3022312328185954, 2.3018674291813017, 2.3022944021848497, 2.3033309225644953, 2.301235241424516, 2.3015677836970756, 2.303328312902938, 2.301879727876638, 2.3015577889168974, 2.3021826662832736, 2.301601272705697, 2.301763681388566, 2.302772887740956, 2.301128469642757, 2.301485258936803, 2.3011038621119724, 2.302411371926905, 2.3022519287857097, 2.3012476915917013, 2.3024683030463167, 2.30144763118823, 2.3013873267813034, 2.3007058197276438, 2.3027073420301765, 2.3008744855519723, 2.300715437591698, 2.3016103500892235, 2.3005488188102055, 2.3003038571511025, 2.3018941776296797, 2.3002414139049905, 2.3009305663506243, 2.3010348218732175, 2.301132726411085, 2.3007155391502656, 2.30033303135343, 2.300520950351897, 2.3014020831310016, 2.300915102429, 2.2999187552807685, 2.3010874835334167, 2.3004506055972738, 2.2999728521446055, 2.3000889451764186, 2.301223144649656, 2.3003984004310283, 2.3012261622774917, 2.301588576625068, 2.3008058266380855, 2.3006648595039287, 2.2983504950236555, 2.301625691888638, 2.3007386077459637, 2.300243928998988, 2.3011880828845834, 2.3002714887822324, 2.300724797166334, 2.301599268112767, 2.300750145397607, 2.3008604898680756, 2.300288354652968, 2.3001065593054895, 2.3006347680938966, 2.3009080060201312, 2.3007567203150385, 2.3004552231898097, 2.3017472277983795, 2.301244202007817, 2.300380352072161, 2.301138154834631, 2.300538879958095, 2.300351398810892, 2.301722088321136, 2.2998944382862154, 2.2998223194215024, 2.3018689199666054, 2.2999642567312746, 2.3006256356955426, 2.3010798979114155, 2.3005165183045024, 2.300134870464681, 2.302216522855183, 2.300256339393004, 2.300633176442828, 2.300806223141629, 2.300635572847138, 2.3026202521099313, 2.2998836870600345, 2.301346505496008, 2.2999336596383015, 2.3003819805047514, 2.3000789512150073, 2.302424470368409], "accuracy": [0.0870426595211029, 0.09259014576673508, 0.09232597798109055, 0.08981640636920929, 0.09259014576673508, 0.0948355570435524, 0.08955223858356476, 0.09285431355237961, 0.09391097724437714, 0.09259014576673508, 0.09219389408826828, 0.09021265059709549, 0.09179764986038208, 0.09153348207473755, 0.09853387624025345, 0.09325055778026581, 0.09008057415485382, 0.09391097724437714, 0.09338264167308807, 0.0944393053650856, 0.09272222965955734, 0.08796724677085876, 0.0948355570435524, 0.08545766770839691, 0.0948355570435524, 0.08994849026203156, 0.09734513610601425, 0.09602430462837219, 0.09919429570436478, 0.1010434553027153, 0.09774138033390045, 0.09919429570436478, 0.0948355570435524, 0.09430722147226334, 0.0944393053650856, 0.09906221181154251, 0.09192973375320435, 0.10328886657953262, 0.09826971590518951, 0.09906221181154251, 0.10394927859306335, 0.0948355570435524, 0.09879804402589798, 0.10210011899471283, 0.09760929644107819, 0.09932637959718704, 0.09655263274908066, 0.09853387624025345, 0.09800554811954498, 0.10051512718200684, 0.09800554811954498, 0.09628847241401672, 0.09945846349000931, 0.10038304328918457, 0.10196803510189056, 0.09509972482919693, 0.09906221181154251, 0.09932637959718704, 0.09760929644107819, 0.10170386731624603, 0.10421344637870789, 0.09774138033390045, 0.10011887550354004, 0.10500594228506088, 0.09602430462837219, 0.10315678268671036, 0.09668471664190292, 0.10645885765552521, 0.10606260597705841, 0.10566636174917221, 0.09747721254825592, 0.1014397069811821, 0.09879804402589798, 0.10091137140989304, 0.09734513610601425, 0.10685510188341141, 0.09826971590518951, 0.10328886657953262, 0.10249637067317963, 0.1022322028875351, 0.10487385839223862, 0.09998679161071777, 0.09602430462837219, 0.10117553919553757, 0.10474177449941635, 0.09760929644107819, 0.09681680053472519, 0.10553427785634995, 0.10698718577623367, 0.1018359512090683, 0.10302469879388809, 0.10645885765552521, 0.10276053100824356, 0.10328886657953262, 0.10038304328918457, 0.10566636174917221, 0.09338264167308807], "val_loss": [1.971005916595459, 1.9710007395063127, 1.9709887504577637, 1.9709718567984444, 1.9709511484418596, 1.9709252629961287, 1.9708975383213587, 1.9708638191223145, 1.9708236966814314, 1.9707813262939453, 1.9707349368504115, 1.970686367579869, 1.9706343923296248, 1.9705804416111536, 1.9705255372183663, 1.970470769064767, 1.9704130036490304, 1.9703562600272042, 1.9703008106776647, 1.970245361328125, 1.9701895032610213, 1.970132555280413, 1.970074244907924, 1.9700170925685339, 1.9699628012520927, 1.9699094636099679, 1.9698599406651087, 1.9698107583182198, 1.9697600773402624, 1.969712393624442, 1.969667911529541, 1.9696271760123116, 1.9695893015180315, 1.969557762145996, 1.9695337159293038, 1.9695145743233817, 1.969499179295131, 1.9694843292236328, 1.9694719995771135, 1.9694624628339494, 1.9694574901035853, 1.9694561277117049, 1.9694572857448034, 1.96945892061506, 1.9694623265947615, 1.9694713183811732, 1.969477994101388, 1.9694858278547014, 1.969503402709961, 1.9695271764482771, 1.9695531300136022, 1.9695800372532435, 1.9696110316685267, 1.9696470669337682, 1.9696875299726213, 1.9697282654898507, 1.9697661399841309, 1.9697982924325126, 1.9698223386492049, 1.9698397091456823, 1.969853128705706, 1.9698664801461356, 1.9698734283447266, 1.9698773792811803, 1.9698817389351981, 1.9698888233729772, 1.9698960440499442, 1.969897747039795, 1.969902583530971, 1.969912052154541, 1.9699241774422782, 1.9699370520455497, 1.9699503353663854, 1.9699640274047852, 1.9699795586722237, 1.96999420438494, 1.9700091225760323, 1.9700213159833635, 1.97003139768328, 1.970041070665632, 1.9700536046709334, 1.9700642313276018, 1.9700756072998047, 1.9700850078037806, 1.9700907979692732, 1.9700935227530343, 1.9700982230050224, 1.9701046262468611, 1.9701076916285925, 1.9701070104326521, 1.9701085090637207, 1.970106874193464, 1.9701038088117326, 1.9700980186462402, 1.9700915472848075, 1.9700828279767717, 1.9700710432870048], "val_accuracy": [0.03700000047683716, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03799999877810478, 0.03799999877810478, 0.038333334028720856, 0.03866666555404663, 0.03933333232998848, 0.0416666679084301, 0.041999999433755875, 0.04233333468437195, 0.04266666620969772, 0.043666668236255646, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.04633333161473274, 0.04699999839067459, 0.04699999839067459, 0.04766666516661644, 0.04699999839067459, 0.04766666516661644, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.049666665494441986, 0.05000000074505806, 0.049666665494441986, 0.049666665494441986, 0.05133333429694176, 0.05133333429694176, 0.05166666582226753, 0.05366666615009308, 0.054666668176651, 0.055666666477918625, 0.0560000017285347, 0.05700000002980232, 0.05966666713356972, 0.060333333909511566, 0.06066666543483734, 0.061000000685453415, 0.06300000101327896, 0.06333333253860474, 0.06566666811704636, 0.06733333319425583, 0.06933332979679108, 0.07000000029802322, 0.07133333384990692, 0.07100000232458115, 0.0716666653752327, 0.07199999690055847, 0.07333333045244217, 0.0729999989271164, 0.07633333653211594, 0.07866666465997696, 0.0793333351612091, 0.08133333176374435, 0.08233333379030228, 0.08266666531562805, 0.08266666531562805, 0.08366666734218597, 0.08500000089406967, 0.08633333444595337, 0.08699999749660492, 0.08766666799783707, 0.08733333647251129, 0.08666666597127914, 0.08799999952316284, 0.08900000154972076, 0.08966666460037231, 0.09166666865348816, 0.09200000017881393, 0.09200000017881393, 0.09333333373069763, 0.09366666525602341, 0.09433333575725555, 0.09433333575725555, 0.0949999988079071, 0.09533333033323288, 0.09600000083446503, 0.09733333438634872, 0.09700000286102295, 0.0976666659116745, 0.09866666793823242, 0.09833333641290665, 0.09866666793823242, 0.09866666793823242, 0.0989999994635582, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 9, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [32, 86, 97, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [5, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303350075376725, 2.303180169908047, 2.3018154212748607, 2.302703884756088, 2.3022758409945783, 2.301930548539802], "accuracy": [0.0870426595211029, 0.09259014576673508, 0.09206181764602661, 0.08968432247638702, 0.09298639744520187, 0.09470347315073013], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [52, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 1, 9, 1, 2, 9, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 1, 3, 3, 3, 3, 0, 3, 3, 2, 4, 2, 5, 2, 3, 1, 1, 2], [29, 18, 97, 57, 8, 23, 34, 96], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303350075376725, 2.303180169908047, 2.3018154212748607, 2.302703884756088, 2.3022758409945783, 2.301930548539802], "accuracy": [0.0870426595211029, 0.09259014576673508, 0.09206181764602661, 0.08968432247638702, 0.09298639744520187, 0.09470347315073013], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]