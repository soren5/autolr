[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [4, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8005714416503906, "mapping_values": [1, 8, 8, 6, 2, 2, 2, 2, 1, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0795212610758935, 1.3334406629891649, 1.0176084738806837, 0.8693775408980616, 0.7918762843512179, 0.784211573938038, 0.7274078602536385, 0.7133207505625694, 0.6886357863455432, 0.6649539115689985, 0.6733587432720123, 0.6431728101929244, 0.6261824186152755, 0.6109622928680856, 0.5949485444153431, 0.5847588356585787, 0.5810273303142895, 0.5579692152638902, 0.5774297508360797, 0.5516016838998055, 0.5608958711697835, 0.5541365863136596, 0.536554911235509, 0.5239838219794299, 0.5275780098974555, 0.5188492105826253], "accuracy": [0.3086778521537781, 0.5176330804824829, 0.633469820022583, 0.6833971738815308, 0.700700044631958, 0.702681303024292, 0.7230220437049866, 0.7280412316322327, 0.7368907928466797, 0.7512878179550171, 0.746268630027771, 0.7534011602401733, 0.7582882046699524, 0.7668735980987549, 0.7744023203849792, 0.7771760821342468, 0.7802139520645142, 0.7903843522071838, 0.7796856164932251, 0.7909126877784729, 0.7853652238845825, 0.7927618622779846, 0.8020076751708984, 0.8057059645652771, 0.7992339134216309, 0.8079513907432556], "val_loss": [1.13292053767613, 0.7972268036433628, 0.6501565490450177, 0.6025807006018502, 0.6105361836297172, 0.5613912343978882, 0.5551967791148594, 0.5230233498982021, 0.5088293552398682, 0.6023844821112496, 0.5291760989597866, 0.48731240204402376, 0.4848411764417376, 0.4813841240746634, 0.4882270097732544, 0.45965685163225445, 0.4608100822993687, 0.44744781085423063, 0.4562859194619315, 0.44970904077802387, 0.4518381016595023, 0.4621271916798183, 0.4452728884560721, 0.43122208969933645, 0.4254059536116464, 0.4308907049042838], "val_accuracy": [0.6343333125114441, 0.656333327293396, 0.7263333201408386, 0.7459999918937683, 0.7070000171661377, 0.7473333477973938, 0.7260000109672546, 0.7559999823570251, 0.7620000243186951, 0.721666693687439, 0.746999979019165, 0.7820000052452087, 0.7696666717529297, 0.7793333530426025, 0.778333306312561, 0.7906666398048401, 0.7933333516120911, 0.796999990940094, 0.7826666831970215, 0.7983333468437195, 0.8086666464805603, 0.7826666831970215, 0.8083333373069763, 0.8050000071525574, 0.8069999814033508, 0.8069999814033508]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 0, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7802857160568237, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.negative(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2902707119250043, 2.256527748909042, 2.2145654064017735, 2.15611466793352, 2.069240003906898, 1.9528260810452998, 1.809306248493041, 1.6515915968225712, 1.5121186403251359, 1.3939417394365474, 1.298640015716991, 1.2179269389611163, 1.164091168409168, 1.1147323870277832, 1.0694342123487481, 1.0428603705224926, 1.0141147690646921, 0.9825589810191144, 0.9631347172862708, 0.9490671240264682, 0.9261613005361128, 0.898166892243855, 0.8990128103295778, 0.882989128842692, 0.8718006159289008, 0.8553195232570983, 0.8403900812063014, 0.8357225977796621, 0.8250485756582729, 0.8232131127384691, 0.80947351211633, 0.8016993843364426, 0.7943241751866333, 0.7845089439986137, 0.7674672961030354, 0.7762373435010748, 0.769756578191428, 0.7719674293296748, 0.7648522759299504, 0.7531531332207079, 0.7519023318993591, 0.7418610794496039, 0.7362769967009757, 0.7387892394852503, 0.730568518838264, 0.7146415787680966, 0.713586093365099, 0.7119250321164659, 0.7087513562033536, 0.7130288557054628, 0.7039712223835342, 0.7048256244830735, 0.6971654557690503, 0.7006514208144548, 0.6880512842255309, 0.6904654027117935, 0.6837299233256959, 0.6771003727301347, 0.6812307813604982, 0.6738923994022007, 0.6734692121477899, 0.6724490472559034, 0.672075741421104, 0.6568507274081127, 0.6737875469986474, 0.6590563143406561, 0.6583600210916758, 0.653634448896042, 0.6526020539198979, 0.6534412274302713, 0.6567425348692252], "accuracy": [0.12032756209373474, 0.21503104269504547, 0.28978997468948364, 0.34883105754852295, 0.38449347019195557, 0.41949543356895447, 0.4468366205692291, 0.4772156774997711, 0.5049530863761902, 0.5283318161964417, 0.5626733303070068, 0.574560821056366, 0.5912032723426819, 0.6132611036300659, 0.6222427487373352, 0.6317527294158936, 0.6373002529144287, 0.6547351479530334, 0.6546030640602112, 0.6641130447387695, 0.6691322326660156, 0.6802271604537964, 0.6798309087753296, 0.6847180128097534, 0.6881521344184875, 0.6946242451667786, 0.6956809163093567, 0.6954167485237122, 0.6996433734893799, 0.707040011882782, 0.7054550051689148, 0.7088891863822937, 0.7121912837028503, 0.7153612375259399, 0.7186633348464966, 0.7172104120254517, 0.7185312509536743, 0.7205125093460083, 0.7236824631690979, 0.7268524765968323, 0.7271166443824768, 0.7334566116333008, 0.7338528633117676, 0.7322678565979004, 0.733060359954834, 0.735041618347168, 0.7396644949913025, 0.7360982894897461, 0.7396644949913025, 0.7353057861328125, 0.7408532500267029, 0.741909921169281, 0.7489103078842163, 0.7416457533836365, 0.7465327978134155, 0.7478536367416382, 0.748249888420105, 0.7530049085617065, 0.7497028112411499, 0.7543256878852844, 0.7547219395637512, 0.7528728246688843, 0.7497028112411499, 0.7613261342048645, 0.752212405204773, 0.759609043598175, 0.7555144429206848, 0.7607977986335754, 0.7617223858833313, 0.7577598690986633, 0.7605336308479309], "val_loss": [1.9404144968305315, 1.9058630125863212, 1.8588760920933314, 1.7894419261387415, 1.6888981887272425, 1.5537975856236048, 1.3963149615696497, 1.238800389426095, 1.103609868458339, 0.9964159556797573, 0.9173524379730225, 0.8563679116112846, 0.8100418022700718, 0.7734596048082624, 0.7426789488111224, 0.7174912180219378, 0.6995459454400199, 0.6813655069896153, 0.6690995863505772, 0.6569151537758964, 0.6436411482947213, 0.6325798545564923, 0.6256120545523507, 0.6180706535066877, 0.6100706713540214, 0.6038638353347778, 0.5956857204437256, 0.5879012516566685, 0.5843583345413208, 0.5789550883429391, 0.5732067482812064, 0.5673058884484428, 0.5636030776160104, 0.5594558375222343, 0.5578278984342303, 0.5525860616139003, 0.5480038438524518, 0.5456534453800747, 0.5447343417576381, 0.539453251021249, 0.536187972341265, 0.5332733052117484, 0.5309944323131016, 0.5275206395557949, 0.526002049446106, 0.5238125153950283, 0.5171340193067279, 0.5180778503417969, 0.5134782791137695, 0.5100021192005703, 0.5084878887448993, 0.5083658524921962, 0.5047381264822823, 0.5041970014572144, 0.5015249252319336, 0.49951599325452534, 0.49879888125828337, 0.4955971581595285, 0.4940222501754761, 0.49169996806553434, 0.4893250805991037, 0.490165046283177, 0.4880523681640625, 0.48390351022992817, 0.48702735560280935, 0.48276839937482563, 0.48267628465379986, 0.4778289113725935, 0.476911084992545, 0.47583803108760286, 0.47487311703818186], "val_accuracy": [0.29233333468437195, 0.3866666555404663, 0.4390000104904175, 0.47866666316986084, 0.5276666879653931, 0.5709999799728394, 0.5920000076293945, 0.6033333539962769, 0.6446666717529297, 0.6633333563804626, 0.6853333115577698, 0.6869999766349792, 0.7016666531562805, 0.7053333520889282, 0.7080000042915344, 0.7183333039283752, 0.7239999771118164, 0.7286666631698608, 0.7296666502952576, 0.7273333072662354, 0.7350000143051147, 0.7363333106040955, 0.7356666922569275, 0.7426666617393494, 0.7400000095367432, 0.7450000047683716, 0.7443333268165588, 0.746666669845581, 0.7450000047683716, 0.7486666440963745, 0.7573333382606506, 0.7553333044052124, 0.7580000162124634, 0.7559999823570251, 0.7639999985694885, 0.7559999823570251, 0.7663333415985107, 0.7689999938011169, 0.7703333497047424, 0.7713333368301392, 0.7720000147819519, 0.7713333368301392, 0.7710000276565552, 0.7733333110809326, 0.7726666927337646, 0.765999972820282, 0.7720000147819519, 0.7716666460037231, 0.7743333578109741, 0.7763333320617676, 0.7749999761581421, 0.7803333401679993, 0.7733333110809326, 0.7816666960716248, 0.7803333401679993, 0.7793333530426025, 0.7836666703224182, 0.7766666412353516, 0.7806666493415833, 0.7793333530426025, 0.7839999794960022, 0.7893333435058594, 0.7883333563804626, 0.7893333435058594, 0.784333348274231, 0.793666660785675, 0.7866666913032532, 0.7889999747276306, 0.7919999957084656, 0.7919999957084656, 0.7863333225250244]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 8, 5, 3, 2, 9, 2, 2, 0, 3, 4, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [9, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7671428322792053, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2902707119250043, 2.2565277668904193, 2.2145659012203094, 2.1561158015160844, 2.0692446098792443, 1.9528283102952289, 1.8093168919884124, 1.6516044929342153, 1.512131279926605, 1.3939622087942185, 1.2986437938216813, 1.2179283290381098, 1.164076146212205, 1.1147172511796972, 1.0693897216028116, 1.0428346577353245, 1.014111283881679, 0.982570850861748, 0.9630779387015299, 0.9490180909909183, 0.9261557159643006, 0.8981779673788857, 0.8990090546465002, 0.8829774699427149, 0.8718087499986598, 0.8552958686054816, 0.8404149672358721, 0.8357004532409681, 0.8250968352426643, 0.8232206201210093, 0.8094753590887879, 0.8016335778563266, 0.7943790550434106, 0.7845019794269371, 0.767462304042803, 0.7762892161614198, 0.7696962139121829, 0.771991653087164, 0.7647311591106934, 0.7531330461247627, 0.7519118567625325, 0.7418702364424515, 0.7363194837514766, 0.7388580008473269, 0.7305467358323262, 0.7146383780907836, 0.7135399190772715, 0.7120135430772591, 0.7088579581067578], "accuracy": [0.12032756209373474, 0.21503104269504547, 0.28978997468948364, 0.34883105754852295, 0.38462555408477783, 0.41949543356895447, 0.4468366205692291, 0.4773477613925934, 0.5048210024833679, 0.5283318161964417, 0.5625412464141846, 0.574560821056366, 0.5912032723426819, 0.613789439201355, 0.6219785809516907, 0.6321489810943604, 0.6373002529144287, 0.6546030640602112, 0.6544709801673889, 0.6643772125244141, 0.6690001487731934, 0.6796988248825073, 0.6802271604537964, 0.6845859289169312, 0.687887966632843, 0.6948884129524231, 0.6950204968452454, 0.6951525807380676, 0.6997754573822021, 0.7071720957756042, 0.7055870890617371, 0.709021270275116, 0.7120591998100281, 0.7156254053115845, 0.718399167060852, 0.7166820764541626, 0.7186633348464966, 0.7201162576675415, 0.7236824631690979, 0.7265883088111877, 0.7275128960609436, 0.733588695526123, 0.733588695526123, 0.7325320243835449, 0.7323999404907227, 0.7353057861328125, 0.7392682433128357, 0.7366266250610352, 0.7405890822410583], "val_loss": [1.9404145649501257, 1.9058632850646973, 1.8588777950831823, 1.789447580065046, 1.6889056818825858, 1.5538041932242257, 1.396326950618199, 1.2388100283486503, 1.1035826546805245, 0.9963974612099784, 0.9173394952501569, 0.8563709769930158, 0.8100342580250331, 0.7734321866716657, 0.7426530463354928, 0.7174606663840157, 0.6994840928486415, 0.6813459055764335, 0.6691394533429827, 0.6568891831806728, 0.6435653652463641, 0.6326133864266532, 0.6256518193653652, 0.6179959774017334, 0.6099669081824166, 0.6037499564034599, 0.595785243170602, 0.5879424640110561, 0.5843921218599591, 0.5789741447993687, 0.5731367894581386, 0.5673339707510812, 0.5634293215615409, 0.5594310079302106, 0.5577880825315203, 0.5525636162076678, 0.5480035032544818, 0.5456983872822353, 0.544918383870806, 0.5394824743270874, 0.5362743479864938, 0.5333853619439262, 0.5309373651232038, 0.5275286265781948, 0.5260829074042184, 0.5239338023321969, 0.5170767477580479, 0.5179085220609393, 0.5135078600474766], "val_accuracy": [0.29233333468437195, 0.3866666555404663, 0.4390000104904175, 0.47866666316986084, 0.5276666879653931, 0.5709999799728394, 0.5920000076293945, 0.6033333539962769, 0.6443333625793457, 0.6636666655540466, 0.684333324432373, 0.6869999766349792, 0.7016666531562805, 0.7053333520889282, 0.7083333134651184, 0.718666672706604, 0.7233333587646484, 0.7289999723434448, 0.7300000190734863, 0.7273333072662354, 0.7350000143051147, 0.7366666793823242, 0.7353333234786987, 0.7426666617393494, 0.7393333315849304, 0.7450000047683716, 0.7456666827201843, 0.746999979019165, 0.7446666955947876, 0.7483333349227905, 0.7566666603088379, 0.7549999952316284, 0.7583333253860474, 0.7556666731834412, 0.7639999985694885, 0.7566666603088379, 0.7663333415985107, 0.768666684627533, 0.7706666588783264, 0.7710000276565552, 0.7713333368301392, 0.7706666588783264, 0.7716666460037231, 0.7743333578109741, 0.7720000147819519, 0.765666663646698, 0.7716666460037231, 0.7710000276565552, 0.7739999890327454]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7665714025497437, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2904238532389694, 2.2572494958606235, 2.2162489404515853, 2.1595473694149465, 2.075656425652172, 1.9633041012005295, 1.823641236132918, 1.6679914412859362, 1.528221841186596, 1.408328006469405, 1.3111618479969416, 1.2290133963864414, 1.1739297135946, 1.1237473796780997, 1.0778707481567429, 1.0503274436640055, 1.0209329927114055, 0.9888214236945839, 0.9690664491050704, 0.954574706343108, 0.9314179158623287, 0.90314007136863, 0.9036911648687449, 0.8875401362042622, 0.8763255194162161, 0.859443720203302, 0.8445398458762491, 0.8396524578006181, 0.8288812499240941, 0.8268534793373207, 0.8132854312355209, 0.8053277794002558, 0.7978550849211545, 0.7878397269775492, 0.7707185602899808, 0.7794084696485666, 0.7728934334552897, 0.7750439428854864, 0.7678875576440511, 0.7563186136408095, 0.7549895111123537, 0.7448514977529332, 0.73933370072277, 0.7418401577941588, 0.7334435972492251, 0.7175054362799277, 0.716261808134703, 0.7147128724182727, 0.711654214078976], "accuracy": [0.12019548565149307, 0.21344605088233948, 0.2875445783138275, 0.3467177450656891, 0.3829084634780884, 0.4155329465866089, 0.4441949427127838, 0.47364944219589233, 0.5027077198028564, 0.5248976349830627, 0.5605600476264954, 0.5723153948783875, 0.5885615944862366, 0.6106194853782654, 0.6193369626998901, 0.629507303237915, 0.6351869106292725, 0.6516972780227661, 0.6523576974868774, 0.6627922058105469, 0.6680755615234375, 0.6790384650230408, 0.6783780455589294, 0.6831330060958862, 0.6876237988471985, 0.6939638257026672, 0.6930392384529114, 0.6951525807380676, 0.6972658634185791, 0.7051908373832703, 0.7036058902740479, 0.7078325152397156, 0.71100252866745, 0.7154933214187622, 0.7181349992752075, 0.7154933214187622, 0.7169462442398071, 0.7197200059890747, 0.7226257920265198, 0.7263241410255432, 0.7263241410255432, 0.7327961921691895, 0.7331924438476562, 0.7316074371337891, 0.7312111854553223, 0.7342491149902344, 0.7384757399559021, 0.7359662055969238, 0.7388719916343689], "val_loss": [1.9408460344587053, 1.9070096697126115, 1.8612651824951172, 1.7941631589617049, 1.697270325251988, 1.566678626196725, 1.4126642090933663, 1.256401777267456, 1.1197903156280518, 1.0101872512272425, 0.9287820202963692, 0.8659723826817104, 0.8181671755654472, 0.7804668119975499, 0.7487766402108329, 0.722934433392116, 0.7041742971965245, 0.6855814116341727, 0.6728348561695644, 0.6604246752602714, 0.6471154008592878, 0.6358120952333722, 0.628759333065578, 0.6209070341927665, 0.6128587893077305, 0.6065916844776699, 0.5987258638654437, 0.5904589210237775, 0.5867901699883598, 0.5815684795379639, 0.5753076076507568, 0.569506015096392, 0.5656955412455967, 0.5616097790854317, 0.5597386019570487, 0.5546267373221261, 0.5500066110066005, 0.5477390289306641, 0.5468465260096959, 0.5414691141673497, 0.538252558026995, 0.5353717633656093, 0.532891035079956, 0.529442276273455, 0.5278091771262032, 0.5258218901497977, 0.5191454887390137, 0.5198218311582293, 0.5153604064668927], "val_accuracy": [0.2906666696071625, 0.38600000739097595, 0.43799999356269836, 0.4753333330154419, 0.5246666669845581, 0.5683333277702332, 0.590666651725769, 0.6016666889190674, 0.6393333077430725, 0.6603333353996277, 0.6830000281333923, 0.6846666932106018, 0.7016666531562805, 0.7039999961853027, 0.7070000171661377, 0.7176666855812073, 0.7229999899864197, 0.7283333539962769, 0.7296666502952576, 0.7256666421890259, 0.734666645526886, 0.7360000014305115, 0.7336666584014893, 0.7429999709129333, 0.7393333315849304, 0.7436666488647461, 0.7436666488647461, 0.7456666827201843, 0.7443333268165588, 0.746666669845581, 0.7556666731834412, 0.7549999952316284, 0.7580000162124634, 0.7546666860580444, 0.7633333206176758, 0.7556666731834412, 0.765999972820282, 0.7689999938011169, 0.7689999938011169, 0.7689999938011169, 0.7710000276565552, 0.7703333497047424, 0.7710000276565552, 0.7739999890327454, 0.7716666460037231, 0.7649999856948853, 0.7723333239555359, 0.7699999809265137, 0.7739999890327454]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 8, 5, 3, 2, 9, 2, 2, 0, 3, 4, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7665714025497437, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2904238532389694, 2.257249464369595, 2.216249282286703, 2.1595500683220794, 2.075663645757802, 1.9633123400094503, 1.8236612431235586, 1.6680144938684458, 1.5282402666820243, 1.408337122791589, 1.3111606560300102, 1.2290149395255805, 1.17390297105079, 1.1237139177045266, 1.077816670360724, 1.050276580582426, 1.0208743519597854, 0.9887701072760262, 0.9690205762808617, 0.9545196325724482, 0.9313236811000122, 0.9031199790373013, 0.9036796764297067, 0.8875530459200308, 0.8762994870187237, 0.8594373906088575, 0.8444416426144823, 0.8396902912328461, 0.828853096621557, 0.8268592914081977, 0.8132317954003456, 0.8052143873539835, 0.797852385061418, 0.7877188563000461, 0.7705856417038217, 0.7794374072587942, 0.7728857576587276, 0.7750371085449594, 0.7677614434110868, 0.7562789781108398, 0.7548694781985628, 0.7447652682541951, 0.7392853210788314, 0.7417503422387697, 0.7333937985801646, 0.7174336372932124, 0.7162707379040323, 0.7146560745610222, 0.7116662892194991], "accuracy": [0.12019548565149307, 0.21344605088233948, 0.2875445783138275, 0.3465856611728668, 0.3829084634780884, 0.41566503047943115, 0.44406285881996155, 0.4733852744102478, 0.5027077198028564, 0.525029718875885, 0.5605600476264954, 0.5721833109855652, 0.5886936783790588, 0.6107515692710876, 0.6189407110214233, 0.6293752193450928, 0.635451078414917, 0.6515651941299438, 0.6522256135940552, 0.6626601219177246, 0.667811393737793, 0.678642213344574, 0.678642213344574, 0.683000922203064, 0.687491774559021, 0.694360077381134, 0.6936996579170227, 0.6952846646308899, 0.6973979473114014, 0.7051908373832703, 0.7037379741668701, 0.707568347454071, 0.7104741930961609, 0.7145687341690063, 0.7177387475967407, 0.7157574892044067, 0.7174745798110962, 0.7193237543106079, 0.7224937081336975, 0.7257958054542542, 0.7271166443824768, 0.7333245277404785, 0.7329282760620117, 0.7317395210266113, 0.7306828498840332, 0.7338528633117676, 0.7383436560630798, 0.7362303733825684, 0.7384757399559021], "val_loss": [1.9408460344587053, 1.9070096697126115, 1.8612674985613142, 1.7941701752798898, 1.697274821145194, 1.5667006969451904, 1.4126876081739153, 1.256434508732387, 1.1198005335671561, 1.0101770673479353, 0.928731986454555, 0.8659146172659737, 0.8181015253067017, 0.7804311854498727, 0.7487384080886841, 0.7228250503540039, 0.7041046278817313, 0.6855778694152832, 0.6728609459740775, 0.660425066947937, 0.6470664058412824, 0.6358142580304827, 0.6287272827965873, 0.6209258181708199, 0.6128917251314435, 0.6065337487629482, 0.5986742632729667, 0.5904678106307983, 0.5868608440671649, 0.5815227542604718, 0.5751895393644061, 0.5692998341151646, 0.5655422380992344, 0.5615580081939697, 0.5598458732877459, 0.5546033893312726, 0.5500250714165824, 0.5476140805653164, 0.5467310632978167, 0.5413513694490705, 0.5381236757550921, 0.5353505611419678, 0.5329404899052211, 0.5293855156217303, 0.527699521609715, 0.5257054056440081, 0.5189519950321743, 0.5196654966899327, 0.5153408902032035], "val_accuracy": [0.2906666696071625, 0.38600000739097595, 0.43799999356269836, 0.4753333330154419, 0.5246666669845581, 0.5686666369438171, 0.5903333425521851, 0.6016666889190674, 0.6393333077430725, 0.6603333353996277, 0.6830000281333923, 0.6846666932106018, 0.7016666531562805, 0.7039999961853027, 0.7066666483879089, 0.7176666855812073, 0.7229999899864197, 0.7283333539962769, 0.7296666502952576, 0.7256666421890259, 0.734666645526886, 0.7366666793823242, 0.7329999804496765, 0.7433333396911621, 0.7393333315849304, 0.7433333396911621, 0.7433333396911621, 0.7456666827201843, 0.7446666955947876, 0.7473333477973938, 0.7566666603088379, 0.7546666860580444, 0.7580000162124634, 0.753333330154419, 0.7633333206176758, 0.7559999823570251, 0.765666663646698, 0.768666684627533, 0.768666684627533, 0.7693333625793457, 0.7713333368301392, 0.7703333497047424, 0.7713333368301392, 0.7743333578109741, 0.7720000147819519, 0.7649999856948853, 0.7723333239555359, 0.7713333368301392, 0.7743333578109741]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7662857174873352, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2902707119250043, 2.2565280008372723, 2.214564961055644, 2.1561151896768855, 2.0692446370874933, 1.9528442007628384, 1.8093335654017255, 1.6516225845302652, 1.5121340315969565, 1.393964185549079, 1.2986485848510585, 1.2179255404602725, 1.1640763274745667, 1.114701180237002, 1.0694019008133122, 1.0428382425480798, 1.0141063010876818, 0.982600011318241, 0.9631017199864461, 0.9490564885140725, 0.926146594603552, 0.8981823708324258, 0.8990735577444249, 0.8830532243601036, 0.8719076288295948, 0.8553845190164231, 0.8404512900040843, 0.8356558070474407, 0.82512337287435, 0.8231936761999427, 0.8095893485671132, 0.8017346212703633, 0.7944398339650319, 0.7845589382663268, 0.7674874331043885, 0.7762759378352863, 0.7696960390818637, 0.7720041006248484, 0.7646934233793824, 0.7531290917962754, 0.7519584531246191, 0.7419159721625936, 0.7362958971204822, 0.7387393114431706, 0.7305632369031114, 0.7146513531189459, 0.7134465002868752, 0.7120242665362254, 0.709063386998991], "accuracy": [0.12032756209373474, 0.21503104269504547, 0.28978997468948364, 0.34883105754852295, 0.38462555408477783, 0.4193633496761322, 0.44710078835487366, 0.4772156774997711, 0.5048210024833679, 0.5283318161964417, 0.5625412464141846, 0.5744287371635437, 0.5912032723426819, 0.6135252714157104, 0.6223748326301575, 0.6316206455230713, 0.6373002529144287, 0.6544709801673889, 0.6542068123817444, 0.6641130447387695, 0.6690001487731934, 0.6800950765609741, 0.6803592443466187, 0.6839255094528198, 0.6876237988471985, 0.6939638257026672, 0.6948884129524231, 0.6951525807380676, 0.6992471218109131, 0.707568347454071, 0.7057191729545593, 0.7086250185966492, 0.7119271159172058, 0.7160216569900513, 0.7182670831680298, 0.7162858247756958, 0.7180029153823853, 0.7197200059890747, 0.724210798740387, 0.7265883088111877, 0.7275128960609436, 0.7341170310974121, 0.7341170310974121, 0.7318716049194336, 0.7322678565979004, 0.7339849472045898, 0.739400327205658, 0.7362303733825684, 0.739928662776947], "val_loss": [1.9404145649501257, 1.9058632850646973, 1.8588766370500838, 1.7894458089556013, 1.6889111314501082, 1.5538255487169539, 1.3963549818311418, 1.2388283184596471, 1.1036171913146973, 0.9963817937033517, 0.9173374176025391, 0.8563674007143293, 0.8100349051611764, 0.7734184605734689, 0.7426444632666451, 0.7174511126109532, 0.6994938850402832, 0.6813949857439313, 0.669183748109, 0.6568636213030133, 0.6436127764838082, 0.6325584820338658, 0.6254451615469796, 0.6180140631539481, 0.6099797998155866, 0.6038584368569511, 0.5956329788480487, 0.5878215517316546, 0.5842123712812152, 0.5788989577974591, 0.5731146505900792, 0.5672506775174823, 0.5634253706250872, 0.5595022099358695, 0.5577830587114606, 0.5525967053004673, 0.5480398791176933, 0.5457581962857928, 0.5448502472468785, 0.5394730567932129, 0.5361158847808838, 0.5332548788615635, 0.5310099124908447, 0.5274438347135272, 0.5259585891451154, 0.5238876172474453, 0.5169806480407715, 0.5179759604590279, 0.5135091543197632], "val_accuracy": [0.29233333468437195, 0.3866666555404663, 0.4390000104904175, 0.47866666316986084, 0.5276666879653931, 0.5706666707992554, 0.5920000076293945, 0.6033333539962769, 0.6443333625793457, 0.6639999747276306, 0.6850000023841858, 0.6869999766349792, 0.7016666531562805, 0.7053333520889282, 0.7080000042915344, 0.718666672706604, 0.7236666679382324, 0.7289999723434448, 0.7300000190734863, 0.7273333072662354, 0.7350000143051147, 0.7369999885559082, 0.7353333234786987, 0.7426666617393494, 0.7393333315849304, 0.7456666827201843, 0.7440000176429749, 0.746666669845581, 0.7453333139419556, 0.7486666440963745, 0.7570000290870667, 0.7556666731834412, 0.7586666941642761, 0.7559999823570251, 0.7636666893959045, 0.7566666603088379, 0.7673333287239075, 0.7693333625793457, 0.7703333497047424, 0.7713333368301392, 0.7720000147819519, 0.7706666588783264, 0.7716666460037231, 0.7749999761581421, 0.7726666927337646, 0.765333354473114, 0.7723333239555359, 0.7710000276565552, 0.7746666669845581]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 8, 5, 3, 2, 9, 2, 2, 0, 3, 4, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7662857174873352, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.290423803766563, 2.2572494778792462, 2.2162486300130233, 2.1595494386904495, 2.0756614056119767, 1.963307333030343, 1.8236618981999397, 1.6680181159508336, 1.528238043761792, 1.408337890716072, 1.3111420408798609, 1.2289934093768586, 1.1738927938588275, 1.1237068463467714, 1.0778187661359275, 1.0503089932591734, 1.0209278608939871, 0.9887799021590261, 0.9690677656662573, 0.9545377690432141, 0.9313836368933771, 0.9031688777951045, 0.9037135673268376, 0.8875532680734934, 0.8763378641199457, 0.8594538889399231, 0.8445630275483585, 0.8397640873333718, 0.8289167158135397, 0.8268770028130569, 0.8133338491489324, 0.805200304786338, 0.7978743444328625, 0.7878272434062552, 0.7707281134320981, 0.7794257646632973, 0.7729491972967366, 0.775063137399711, 0.7677630949029833, 0.7562768155982733, 0.7548607447915435, 0.7447731376261113, 0.7393087171891015, 0.7417660639853195, 0.7334032836622959, 0.7175415917756677, 0.7163392753255303, 0.7146048339256253, 0.7115774602701699], "accuracy": [0.12019548565149307, 0.21344605088233948, 0.2875445783138275, 0.3465856611728668, 0.3829084634780884, 0.41566503047943115, 0.4441949427127838, 0.47364944219589233, 0.5028398036956787, 0.5248976349830627, 0.5606921315193176, 0.5721833109855652, 0.5884295105934143, 0.6104874014854431, 0.6192048788070679, 0.6293752193450928, 0.6350548267364502, 0.6519614458084106, 0.6519614458084106, 0.6629242897033691, 0.6679434776306152, 0.6787742972373962, 0.6783780455589294, 0.6832650899887085, 0.6870955228805542, 0.6940959095954895, 0.6934354901313782, 0.6948884129524231, 0.6972658634185791, 0.7047945857048035, 0.7038700580596924, 0.7074362635612488, 0.7106062769889832, 0.7145687341690063, 0.7177387475967407, 0.7156254053115845, 0.717870831489563, 0.7194558382034302, 0.7230220437049866, 0.7257958054542542, 0.72672039270401, 0.7326641082763672, 0.7322678565979004, 0.7317395210266113, 0.7314753532409668, 0.733588695526123, 0.7378153204917908, 0.7360982894897461, 0.7386078238487244], "val_loss": [1.9408459663391113, 1.9070096015930176, 1.8612677710396903, 1.794168267931257, 1.6972744464874268, 1.566692284175328, 1.4127013002123152, 1.2564453738076347, 1.1198011807032995, 1.0101831981113978, 0.928760324205671, 0.8659307105200631, 0.8181141104016986, 0.7804574966430664, 0.7487808125359672, 0.722855976649693, 0.7041644028254918, 0.6855596474238804, 0.6728457382747105, 0.6604392187935966, 0.6471212421144757, 0.6358957460948399, 0.6287828172956195, 0.6209353378840855, 0.6129216636930194, 0.6065422807421003, 0.59871164390019, 0.5906257969992501, 0.5867980718612671, 0.5815866674695697, 0.5754221166883197, 0.5694356986454555, 0.5656136444636753, 0.561619792665754, 0.5597906112670898, 0.5546509368079049, 0.5500402620860508, 0.5476963349751064, 0.5467965773173741, 0.5413831302097866, 0.5381355285644531, 0.5352787971496582, 0.5329076562608991, 0.5294403178351266, 0.5277434928076608, 0.5256933995655605, 0.5190951824188232, 0.519882321357727, 0.5155018738337925], "val_accuracy": [0.2906666696071625, 0.38600000739097595, 0.43799999356269836, 0.4753333330154419, 0.5246666669845581, 0.5686666369438171, 0.590666651725769, 0.6016666889190674, 0.6396666765213013, 0.6603333353996277, 0.6830000281333923, 0.6840000152587891, 0.7016666531562805, 0.7039999961853027, 0.7066666483879089, 0.7176666855812073, 0.7229999899864197, 0.7283333539962769, 0.7300000190734863, 0.7260000109672546, 0.7350000143051147, 0.7360000014305115, 0.7336666584014893, 0.7429999709129333, 0.7393333315849304, 0.7436666488647461, 0.7436666488647461, 0.7456666827201843, 0.7446666955947876, 0.746999979019165, 0.7559999823570251, 0.7549999952316284, 0.7580000162124634, 0.7540000081062317, 0.7633333206176758, 0.7559999823570251, 0.765333354473114, 0.768666684627533, 0.768666684627533, 0.7696666717529297, 0.7710000276565552, 0.7703333497047424, 0.7710000276565552, 0.7743333578109741, 0.7720000147819519, 0.7649999856948853, 0.7723333239555359, 0.7699999809265137, 0.7739999890327454]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.170571431517601, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [18.006721773986506, 2.469394383885841, 7.682925322682173, 2646704059043653.5, 829356638987059.0, 2.3124447231673138, 2.3050439812802934, 2.3035055733848133], "accuracy": [0.09721305221319199, 0.10394927859306335, 0.10038304328918457, 0.1018359512090683, 0.09338264167308807, 0.09549596905708313, 0.09272222965955734, 0.0948355570435524], "val_loss": [1.9965947696140833, 1.983973707471575, 1.9776664461408342, 2.020912306649344, 1.988567284175328, 1.9776170594351632, 1.974703584398542, 1.9739204134259904], "val_accuracy": [0.10100000351667404, 0.09833333641290665, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 6, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 3, 3, 2, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [93, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 18, 18, 11, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.square(grad)), tf.math.multiply(tf.math.add(grad, tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, alpha))), grad)), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [69, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.31265988773154, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08189142495393753, 0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0275417055402483, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 6, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [19, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 0, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 36, 22, 14, 7, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.445867784113664, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15480121970176697, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0004806518554688, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3211737649630657, 2.3765031709773052, 2.4926030585133185, 3.484194259255585, 6.931474066085843e+21, 2.303349037841799, 2.3033744237048515, 2.303396806268487, 2.3034230239985565], "accuracy": [0.05877691134810448, 0.022057851776480675, 0.011623299680650234, 0.03354907035827637, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0134662219456265, 2.0823068618774414, 2.266139234815325, 12.20818601335798, 1.9743539265223913, 1.9743760653904505, 1.974397795540946, 1.9744221823556083, 1.9744455473763602], "val_accuracy": [0.004666666500270367, 0.003666666569188237, 0.0063333334401249886, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0882314071059227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 8, 5, 3, 2, 9, 2, 2, 0, 3, 4, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 1, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 3, 5], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 54, 54, 32, 22, 5, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, grad))), tf.math.add(beta, alpha)), grad)))))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), grad))))), tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))))))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027008409906986, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.304223682398274, 2.3052317740942083, 2.306202558210859, 2.3084695223315896, 2.310007088660816, 2.3151162083217294, 2.322182782715684, 2.3270918300453824, 2.3344319137867493, 2.3495584166580583, 2.381322977486508, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.09417514503002167, 0.0812310129404068, 0.08321225643157959, 0.07779685407876968, 0.080042265355587, 0.07106062769889832, 0.06406023353338242, 0.06987188011407852, 0.068815216422081, 0.07858935743570328, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9722046852111816, 1.9736988885062081, 1.9752163205827986, 1.976996898651123, 1.9791065624782018, 1.9817805290222168, 1.9856151853288924, 1.989927155630929, 1.9963774681091309, 2.0102764538356235, 2.076630115509033, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03099999949336052, 0.027666667476296425, 0.023333333432674408, 0.019999999552965164, 0.023000000044703484, 0.03500000014901161, 0.05133333429694176, 0.07000000029802322, 0.08500000089406967, 0.0989999994635582, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036229816394442, 2.30295583569158, 2.302337703640592, 2.3027270707818324, 2.3015032708290595, 2.303047251314015], "accuracy": [0.0870426595211029, 0.09932637959718704, 0.08730682730674744, 0.09034473448991776, 0.08942015469074249, 0.09496764093637466], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036229816394442, 2.30295583569158, 2.302337703640592, 2.3027270707818324, 2.3015032708290595, 2.303047251314015], "accuracy": [0.0870426595211029, 0.09932637959718704, 0.08730682730674744, 0.09034473448991776, 0.08942015469074249, 0.09496764093637466], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]