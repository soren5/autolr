[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.828000009059906, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1864884677832044, 2.0542239188014273, 1.8184443684679847, 1.227849671333977, 0.7655129005581145, 0.6878673265859231, 0.6268709217001497, 0.60430308192744, 0.5633633492755348, 0.5530104080463334, 0.5356466611929699, 0.5267252100142253, 0.5247626363514689, 0.5123514349056572, 0.4889096209653664, 0.47759610140533054, 0.4743071246959624, 0.45622970463183765, 0.46544246749713547, 0.45088724387147094, 0.4472432687392466, 0.4360780249166608, 0.4240893014291998, 0.4308245541231901], "accuracy": [0.2499009370803833, 0.2919033169746399, 0.3955884277820587, 0.5626733303070068, 0.7106062769889832, 0.7357020378112793, 0.7589486241340637, 0.7740060687065125, 0.787082314491272, 0.7858935594558716, 0.7967243194580078, 0.8020076751708984, 0.8063663840293884, 0.8041210174560547, 0.8171972036361694, 0.8222163319587708, 0.8235371708869934, 0.8314621448516846, 0.8232730031013489, 0.8272355198860168, 0.8294808864593506, 0.8360850811004639, 0.8428213000297546, 0.8379341959953308], "val_loss": [1.9452343668256487, 0.9585435731070382, 1.5054882594517298, 0.649502090045384, 0.5254115206854684, 0.48992540155138287, 0.5277991124561855, 0.45629121576036724, 0.45475237710135324, 0.4262103182928903, 0.4247017502784729, 0.4287676215171814, 0.4230960352080209, 0.3816245538847787, 0.3848681024142674, 0.3804017901420593, 0.3709900975227356, 0.4230856043951852, 0.3783184119633266, 0.3856151189122881, 0.3828329018184117, 0.3737523555755615, 0.3607843944004604, 0.3701439755303519], "val_accuracy": [0.1733333319425583, 0.5803333520889282, 0.49300000071525574, 0.7120000123977661, 0.750333309173584, 0.7756666541099548, 0.7559999823570251, 0.8016666769981384, 0.7856666445732117, 0.8183333277702332, 0.8116666674613953, 0.815666675567627, 0.812333345413208, 0.8343333601951599, 0.8399999737739563, 0.8416666388511658, 0.8446666598320007, 0.812333345413208, 0.8476666808128357, 0.8370000123977661, 0.831333339214325, 0.8460000157356262, 0.8413333296775818, 0.8420000076293945]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 5, 2, 3, 8, 6, 4, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 2, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7997142672538757, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.sqrt(grad), grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.155666276590148, 2.1106206408392216, 1.9609181518961551, 1.3843200005214007, 1.003673361765159, 0.7717019847717582, 0.724149827817963, 0.6997302028922168, 0.6337078176532297, 0.5908108885970649, 0.6138623315644632, 0.561421957462849, 0.5567930946339391, 0.5413243157587125, 0.536427594084608, 0.5258187309641643, 0.5156985837014092, 0.5222216794724163], "accuracy": [0.2747325301170349, 0.328490287065506, 0.3354906737804413, 0.5155197381973267, 0.62660151720047, 0.7140403985977173, 0.717870831489563, 0.7337207794189453, 0.7589486241340637, 0.7671377658843994, 0.7637035846710205, 0.7864218950271606, 0.7917051911354065, 0.7992339134216309, 0.8034605979919434, 0.8042530417442322, 0.8105930685997009, 0.8042530417442322], "val_loss": [1.9602716990879603, 1.829111099243164, 1.5476669243403844, 0.7315909351621356, 0.6432163374764579, 0.5882441656930106, 0.5387215614318848, 0.5223969732012067, 0.47746448857443674, 0.5686487300055367, 0.45983290672302246, 0.44669503825051443, 0.41847398451396395, 0.43390861579350065, 0.5014213834490094, 0.44631828580583843, 0.4721526418413435, 0.4274729149682181], "val_accuracy": [0.30666667222976685, 0.30933332443237305, 0.5416666865348816, 0.6783333420753479, 0.7233333587646484, 0.7166666388511658, 0.762333333492279, 0.7636666893959045, 0.7823333144187927, 0.7293333411216736, 0.7940000295639038, 0.79666668176651, 0.8206666707992554, 0.8116666674613953, 0.7933333516120911, 0.8043333292007446, 0.7763333320617676, 0.8166666626930237]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 2, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 2, 0, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7917143106460571, "mapping_values": [1, 4, 4, 2, 2, 1, 25, 25, 14, 11, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), grad))), tf.math.add(beta, alpha))), tf.math.subtract(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.166913835647446, 2.111651959782657, 2.005866223354035, 1.5918705636295172, 1.4811210126105931, 0.9856724002027177, 0.8121658743112756, 0.7086894320947241, 0.6723077626528127, 0.640885351009971, 0.6227487452183543, 0.5805403666174439, 0.593330455226291, 0.5609170122310989, 0.5513539830486709, 0.5201796356634363, 0.518164151986482, 0.5260076878911957], "accuracy": [0.27499669790267944, 0.33060362935066223, 0.28199708461761475, 0.4777440130710602, 0.5065380930900574, 0.6310923099517822, 0.6925109028816223, 0.7230220437049866, 0.7411174178123474, 0.757099449634552, 0.759609043598175, 0.7810064554214478, 0.7736098170280457, 0.7910447716712952, 0.7968564033508301, 0.8104609847068787, 0.802271842956543, 0.8014793395996094], "val_loss": [1.9614337512425013, 2.046977928706578, 1.3797461645943778, 1.4059292248317175, 1.145430667059762, 0.7678570406777518, 0.5442817722048078, 0.5176154204777309, 0.5307343857628959, 0.5816160440444946, 0.4672845942633493, 0.4499941723687308, 0.4481325319835118, 0.4387993471963065, 0.4691440888813564, 0.4417703662599836, 0.44857081345149447, 0.46053881304604666], "val_accuracy": [0.29466667771339417, 0.09799999743700027, 0.5419999957084656, 0.4440000057220459, 0.5403333306312561, 0.6266666650772095, 0.7486666440963745, 0.7696666717529297, 0.7559999823570251, 0.7146666646003723, 0.7886666655540466, 0.7933333516120911, 0.8100000023841858, 0.8083333373069763, 0.7906666398048401, 0.7926666736602783, 0.7996666431427002, 0.7929999828338623]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 6, 2, 0, 9, 2, 5, 6, 2, 0, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 84, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7854285836219788, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 11, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), alpha)), grad))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.291069321959262, 2.255912324929077, 2.215167086437126, 2.1559930608540543, 2.073559122062898, 1.9518114560315827, 1.7938524776713691, 1.642268507881502, 1.503331529261209, 1.3821159486741659, 1.294493786080355, 1.2119227931358088, 1.165380836635328, 1.1183405950509988, 1.0662624846202602, 1.0458008749704508, 0.9994098409103003, 0.9759436632348971, 0.9529862441816319, 0.9316531948016037, 0.923916243944721, 0.9017163713563151, 0.8945083422447319, 0.8760333290709135, 0.8659017172786837, 0.8578284698124056, 0.8485802858654597, 0.8396767402967489, 0.8080615847732067, 0.8164173023985078, 0.7965160496498473, 0.8012320462974969, 0.7925952678705487, 0.785067948533276, 0.7818118162347877, 0.7735723651411227, 0.7634333720957961, 0.7602444958409708, 0.7598676822047271, 0.7614894125361122, 0.7408514707520842, 0.7398546087648953, 0.7424010004286816, 0.7356467229374302, 0.7299698640122122, 0.7288111372158401, 0.7193383198797805, 0.7113519101063526, 0.7109972394736153, 0.7087319959675898, 0.7000380397205104, 0.7117019835763588, 0.7011270864670224, 0.6954695240554714, 0.6839474899704903, 0.6885031746315871, 0.6956084515786741, 0.681820393923393, 0.6807666902985507, 0.6707290681109783, 0.6709422640922661, 0.673597573186932, 0.6685618000921084, 0.6654611183840916, 0.6641550476540664, 0.6682154298489986, 0.6577091643429546, 0.6596093307538449, 0.6567301522109329, 0.6511162468124579, 0.6483601787307275, 0.6460821985836278, 0.6446237924974104, 0.6443645438466483, 0.6351633096462417, 0.6454905982282672, 0.6418087220998125], "accuracy": [0.12098798155784607, 0.21133272349834442, 0.28926166892051697, 0.3455289900302887, 0.3877955377101898, 0.4224012792110443, 0.45766741037368774, 0.4861973226070404, 0.5130101442337036, 0.5381059050559998, 0.5563333630561829, 0.5749570727348328, 0.5889578461647034, 0.6108836531639099, 0.6203936338424683, 0.6318848133087158, 0.6477347612380981, 0.653150200843811, 0.658961832523346, 0.6651697158813477, 0.6763967871665955, 0.6777176260948181, 0.6848500967025757, 0.6852463483810425, 0.6884163022041321, 0.6927750706672668, 0.6955488324165344, 0.6952846646308899, 0.7061154246330261, 0.7017567157745361, 0.7083608508110046, 0.7116629481315613, 0.7104741930961609, 0.7135120630264282, 0.7154933214187622, 0.7187954187393188, 0.7209087014198303, 0.7244749665260315, 0.7251353859901428, 0.7218332886695862, 0.7327961921691895, 0.7277770638465881, 0.7269845604896545, 0.7255316376686096, 0.7298903465270996, 0.7313432693481445, 0.7321357727050781, 0.7367587089538574, 0.7441553473472595, 0.7425703406333923, 0.7396644949913025, 0.7474573850631714, 0.7453441023826599, 0.7466648817062378, 0.7490423917770386, 0.7555144429206848, 0.7458723783493042, 0.7494386434555054, 0.7516840696334839, 0.7530049085617065, 0.7495707273483276, 0.7584202885627747, 0.7544577717781067, 0.7556465268135071, 0.7526086568832397, 0.7548540234565735, 0.7552502751350403, 0.7580240368843079, 0.7614582180976868, 0.7638356685638428, 0.7572315335273743, 0.7606657147407532, 0.7617223858833313, 0.7584202885627747, 0.7613261342048645, 0.7586844563484192, 0.7647602558135986], "val_loss": [1.9408669471740723, 1.9063125337873186, 1.859161649431501, 1.7893618856157576, 1.688633986881801, 1.5532664912087577, 1.3920049667358398, 1.2338877746037074, 1.0988897255488805, 0.9929712840488979, 0.913893324988229, 0.8535358224596296, 0.809400166784014, 0.7734767198562622, 0.742609943662371, 0.7176273890904018, 0.696763277053833, 0.6806492124285016, 0.6705304043633598, 0.6553753103528704, 0.642257571220398, 0.6314342021942139, 0.6245521136692592, 0.6133131640298026, 0.6087771824428013, 0.5997332334518433, 0.5941389969417027, 0.588212081364223, 0.5818894079753331, 0.5780154466629028, 0.5742906842912946, 0.5701824426651001, 0.5614979437419346, 0.5609498705182757, 0.5563884803227016, 0.5493896859032767, 0.5461844035557338, 0.5434881448745728, 0.5424842153276715, 0.539609466280256, 0.534919159752982, 0.5322748252323696, 0.5304446390696934, 0.5258095945630755, 0.5236247777938843, 0.5215648923601423, 0.5200284378869193, 0.51964156968253, 0.5135367427553449, 0.5124193770544869, 0.5085054636001587, 0.5090546607971191, 0.5051113537379673, 0.5048445292881557, 0.5026357344218663, 0.4984149081366403, 0.5007205009460449, 0.49547241415296284, 0.49354173455919537, 0.4922711168016706, 0.49206788199288504, 0.4869497503553118, 0.48904807226998465, 0.4879800081253052, 0.4830459015710013, 0.48694147382463726, 0.48377891949244906, 0.4780245167868478, 0.47718354633876253, 0.4761031355176653, 0.4747640235083444, 0.4732086317879813, 0.4755195208958217, 0.47072410583496094, 0.4703751121248518, 0.4700045245034354, 0.4679090976715088], "val_accuracy": [0.2953333258628845, 0.3869999945163727, 0.44966667890548706, 0.4959999918937683, 0.5336666703224182, 0.5606666803359985, 0.5883333086967468, 0.6069999933242798, 0.6480000019073486, 0.6700000166893005, 0.6840000152587891, 0.6936666369438171, 0.6986666917800903, 0.7083333134651184, 0.7143333554267883, 0.7136666774749756, 0.718999981880188, 0.7226666808128357, 0.7319999933242798, 0.7326666712760925, 0.7360000014305115, 0.7316666841506958, 0.7396666407585144, 0.7436666488647461, 0.7486666440963745, 0.7490000128746033, 0.7506666779518127, 0.7493333220481873, 0.7580000162124634, 0.7473333477973938, 0.7423333525657654, 0.7596666812896729, 0.7613333463668823, 0.7549999952316284, 0.7633333206176758, 0.7649999856948853, 0.7666666507720947, 0.7699999809265137, 0.7639999985694885, 0.765999972820282, 0.768666684627533, 0.7726666927337646, 0.7676666378974915, 0.7699999809265137, 0.7720000147819519, 0.7770000100135803, 0.7696666717529297, 0.7710000276565552, 0.7796666622161865, 0.7850000262260437, 0.7756666541099548, 0.7816666960716248, 0.7749999761581421, 0.7853333353996277, 0.7766666412353516, 0.781000018119812, 0.7853333353996277, 0.7829999923706055, 0.7860000133514404, 0.7836666703224182, 0.7803333401679993, 0.7876666784286499, 0.781333327293396, 0.7889999747276306, 0.7886666655540466, 0.7870000004768372, 0.7883333563804626, 0.7923333048820496, 0.7883333563804626, 0.7870000004768372, 0.79666668176651, 0.7976666688919067, 0.7886666655540466, 0.7946666479110718, 0.7916666865348816, 0.7973333597183228, 0.7926666736602783]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 2, 1, 9, 3, 5, 6, 9, 8, 9, 1, 2, 0, 3, 0, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 0, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7754285931587219, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 11, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.456469169807409, 2.221107431957672, 2.181458880793952, 2.049353797296255, 1.439505011414052, 1.2762893892282414, 1.047465456805886, 0.9383431910256101, 0.8292366208779482, 0.7905181959367872, 0.7902877597430316, 0.7439936651230614, 0.7300565050120965, 0.735704037349899, 0.6745089904633118, 0.6932403288339785, 0.6474518882694529, 0.6639230567560913, 0.6476131301545952, 0.6431351058660418, 0.6132436816356343], "accuracy": [0.2631092369556427, 0.1880861222743988, 0.20816272497177124, 0.2583542466163635, 0.47206446528434753, 0.5406154990196228, 0.6155065298080444, 0.651168942451477, 0.6779817938804626, 0.6976621150970459, 0.7045304179191589, 0.7248712182044983, 0.724739134311676, 0.7239466309547424, 0.7493065595626831, 0.7374191284179688, 0.7518161535263062, 0.7508915662765503, 0.7485140562057495, 0.76106196641922, 0.761590301990509], "val_loss": [1.8342080116271973, 1.9674286842346191, 2.0274900027683804, 1.2428794588361467, 0.7877733026232038, 0.7052719082151141, 0.7242508786065238, 0.6350401980536324, 0.6388795375823975, 0.5864500829151699, 0.6125916753496442, 0.5955213989530291, 0.5822873285838536, 0.529883861541748, 0.5741770948682513, 0.503880364554269, 0.5218811205455235, 0.5313814197267804, 0.5310861383165631, 0.5033413512366158, 0.4854086296898978], "val_accuracy": [0.21266666054725647, 0.1133333370089531, 0.09799999743700027, 0.4233333468437195, 0.6603333353996277, 0.6973333358764648, 0.684333324432373, 0.6959999799728394, 0.6916666626930237, 0.737666666507721, 0.7076666951179504, 0.7336666584014893, 0.7223333120346069, 0.7483333349227905, 0.7296666502952576, 0.7723333239555359, 0.7546666860580444, 0.7456666827201843, 0.7443333268165588, 0.7556666731834412, 0.7616666555404663]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [32, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 2, 3, 2, 6, 2, 6, 8, 6, 9, 4, 2, 2, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 0, 2, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.572857141494751, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.064282456802859, 1.4399799178415333, NaN, NaN, NaN, NaN], "accuracy": [0.31686699390411377, 0.4913485646247864, 0.3292827904224396, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1251754079546248, 1.2360244478498186, NaN, NaN, NaN, NaN], "val_accuracy": [0.5703333616256714, 0.5356666445732117, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [12, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 6, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.4748571515083313, "mapping_values": [1, 4, 4, 2, 2, 1, 43, 43, 24, 19, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha), grad), alpha)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad)))))))), tf.math.subtract(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), beta))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036906437363056, 2.300815515042044, 2.3000201195805157, 2.298308647288276, 2.299764340658544, 2.2970826725965448, 2.294517466987617, 2.2949640611379754, 2.2931321532640316, 2.293566400317342, 2.2912798211275707, 2.2893360613705918, 2.2912949469615094, 2.288467854525136, 2.2865533088696175, 2.286671003944539, 2.2839778612444444, 2.2852588213508818, 2.283587793774215, 2.2811690207879307, 2.281926524448609, 2.2794338587079586, 2.2802738043075035, 2.2793040998922662, 2.2776858042637746, 2.2777996275481955, 2.2736498663028972, 2.274131777610572, 2.2697574229776394, 2.2723863764115295, 2.2695251200822963, 2.2709816624507013, 2.2687434371688253, 2.266684089118243, 2.266376854925895, 2.265110739123599, 2.2635096441784617, 2.2614321769771797, 2.2622231009645453, 2.2603518285173165, 2.259808836328418, 2.257519872606454, 2.2571894857373613, 2.2554920812749657, 2.2537510608244316, 2.2538782385409295, 2.2523741034342866, 2.2503852202136203, 2.2491659401682123, 2.24677368741482, 2.2467878367749377, 2.246181448704814, 2.246008298054127, 2.242958936645937, 2.2405211514233754, 2.2416115332399267, 2.2392786784556877, 2.237729132088845, 2.237190248849385, 2.2348664244010763, 2.2354617364780385, 2.232466478672766, 2.2316567793561326, 2.2302554834315713, 2.2278597584143607, 2.2264902800805753, 2.2242460447673422, 2.2225922489241836, 2.222670497769583, 2.2218352164637696, 2.2212246898111494, 2.216301903449439, 2.215605164751983, 2.2160345746887957, 2.211842460875435, 2.211625563832259, 2.2094039344485283, 2.207125014538274, 2.208652338126962, 2.2052253996612627, 2.202236849382144, 2.2022850055893604, 2.1972642303253163, 2.1984471234316683, 2.195199278792559, 2.193505136076454, 2.1923137873139567, 2.193051712687115, 2.188013073034794, 2.1874021220090696, 2.1850835051377215, 2.1817534372649408, 2.181467519759376, 2.1785842781573272, 2.177237580307817, 2.172441653603214, 2.171324190352146, 2.1686944201984235, 2.1668655657576155, 2.1656826395227013], "accuracy": [0.08889182657003403, 0.0940430611371994, 0.0952318087220192, 0.0952318087220192, 0.09813763201236725, 0.10289261490106583, 0.1088363528251648, 0.10381719470024109, 0.11174217611551285, 0.11319508403539658, 0.11662924289703369, 0.12257297337055206, 0.1146479994058609, 0.12389380484819412, 0.13353586196899414, 0.1328754425048828, 0.137630432844162, 0.13815876841545105, 0.13842293620109558, 0.14595165848731995, 0.14621582627296448, 0.15136705338954926, 0.14595165848731995, 0.15070664882659912, 0.15836745500564575, 0.1566503793001175, 0.16431118547916412, 0.16497160494327545, 0.17593449354171753, 0.17276449501514435, 0.1768590658903122, 0.17553824186325073, 0.18319904804229736, 0.1784440577030182, 0.18953903019428253, 0.18914277851581573, 0.19323734939098358, 0.19601109623908997, 0.20142649114131927, 0.2090873122215271, 0.20499274134635925, 0.2078985571861267, 0.2067098170518875, 0.20803064107894897, 0.22123894095420837, 0.22361643612384796, 0.22876766324043274, 0.22322018444538116, 0.22440892457962036, 0.23273015022277832, 0.23893804848194122, 0.23220182955265045, 0.23273015022277832, 0.23220182955265045, 0.24739135801792145, 0.24144762754440308, 0.2495046854019165, 0.25624093413352966, 0.25439175963401794, 0.2522784173488617, 0.25637298822402954, 0.25676923990249634, 0.2588825821876526, 0.2569013237953186, 0.27341169118881226, 0.2693171203136444, 0.2779025137424469, 0.27724209427833557, 0.27803459763526917, 0.28278958797454834, 0.272090882062912, 0.29018622636795044, 0.29322415590286255, 0.2845066785812378, 0.28543123602867126, 0.29665830731391907, 0.2981112003326416, 0.30405494570732117, 0.2911108136177063, 0.29837536811828613, 0.29824328422546387, 0.30260202288627625, 0.3206973969936371, 0.3055078685283661, 0.3139611780643463, 0.3175274133682251, 0.31224408745765686, 0.31303659081459045, 0.3265090584754944, 0.31581032276153564, 0.32281073927879333, 0.32465988397598267, 0.32439571619033813, 0.3299432098865509, 0.32426363229751587, 0.3315281867980957, 0.33179235458374023, 0.3385286033153534, 0.3391890227794647, 0.3387927711009979], "val_loss": [1.9700121198381697, 1.9690032005310059, 1.9679997307913644, 1.9669929913112096, 1.965987001146589, 1.9649904114859444, 1.963987146105085, 1.9629906245640345, 1.961998122079032, 1.9610113416399275, 1.9600274903433663, 1.9590307644435339, 1.9580421447753906, 1.9570571354457311, 1.9560574804033553, 1.9550673621041434, 1.9540747914995467, 1.9530863080705916, 1.9521000725882394, 1.9511145183018275, 1.9501195635114397, 1.949129513331822, 1.948136261531285, 1.9471289770943778, 1.946136406489781, 1.945131506238665, 1.9441171373639787, 1.9431103297642298, 1.942082745688302, 1.9410652433122908, 1.9400275775364466, 1.9390036037990026, 1.9379795619419642, 1.9369218008858817, 1.9358620643615723, 1.934802736554827, 1.9337363243103027, 1.932647636958531, 1.9315712111336845, 1.9305000305175781, 1.9293952669416154, 1.9282895496913366, 1.927192006792341, 1.9260757991245814, 1.924948079245431, 1.9238083021981376, 1.922654288155692, 1.9214846066066198, 1.9203211239406042, 1.9191358430044991, 1.9179563522338867, 1.9167584010532923, 1.9155539785112654, 1.914327757699149, 1.9130936350141252, 1.9118469102042062, 1.9105860846383231, 1.9093058449881417, 1.9080160685947962, 1.9067151205880302, 1.9054080418178014, 1.904078551701137, 1.902747699192592, 1.901404789515904, 1.9000296592712402, 1.8986429486955916, 1.8972393444606237, 1.8958353315080916, 1.8943967819213867, 1.8929591178894043, 1.8915167536054338, 1.8900303840637207, 1.8885253497532435, 1.8870118004935128, 1.885477134159633, 1.883920737675258, 1.882354804447719, 1.8807556969778878, 1.8791653769356864, 1.8775464466639928, 1.8759046282087053, 1.8742307935442244, 1.8725122724260603, 1.870804718562535, 1.8690616743905204, 1.86729063306536, 1.8655052866254533, 1.8637170791625977, 1.8618980135236467, 1.8600623948233468, 1.8581887653895788, 1.8562815529959542, 1.8543496131896973, 1.8523906299046107, 1.8504150254385812, 1.8483923503330775, 1.8463526453290666, 1.8442905289786202, 1.8421955789838518, 1.8400816236223494], "val_accuracy": [0.04533333331346512, 0.050999999046325684, 0.055666666477918625, 0.06233333423733711, 0.070333331823349, 0.07699999958276749, 0.08666666597127914, 0.09399999678134918, 0.10199999809265137, 0.10866666585206985, 0.11699999868869781, 0.1263333261013031, 0.1366666704416275, 0.1469999998807907, 0.16033333539962769, 0.17133332788944244, 0.18199999630451202, 0.19099999964237213, 0.20366667211055756, 0.21133333444595337, 0.21966665983200073, 0.22833333909511566, 0.23666666448116302, 0.24500000476837158, 0.25099998712539673, 0.2593333423137665, 0.2706666588783264, 0.27799999713897705, 0.2853333353996277, 0.28966665267944336, 0.2966666519641876, 0.3059999942779541, 0.31333333253860474, 0.31833332777023315, 0.32366666197776794, 0.328000009059906, 0.3330000042915344, 0.3356666564941406, 0.3409999907016754, 0.3453333377838135, 0.34966665506362915, 0.35333332419395447, 0.3566666543483734, 0.3596666753292084, 0.3646666705608368, 0.3656666576862335, 0.36633333563804626, 0.3686666786670685, 0.37033334374427795, 0.3736666738986969, 0.37700000405311584, 0.37966665625572205, 0.38233333826065063, 0.3840000033378601, 0.3856666684150696, 0.3869999945163727, 0.3889999985694885, 0.3919999897480011, 0.3943333327770233, 0.3959999978542328, 0.3970000147819519, 0.39933332800865173, 0.4020000100135803, 0.4033333361148834, 0.4050000011920929, 0.40799999237060547, 0.4103333353996277, 0.4116666615009308, 0.4156666696071625, 0.4169999957084656, 0.4193333387374878, 0.42133334279060364, 0.42266666889190674, 0.4246666729450226, 0.42633333802223206, 0.42800000309944153, 0.429666668176651, 0.43033334612846375, 0.43299999833106995, 0.43566668033599854, 0.43833333253860474, 0.4403333365917206, 0.4413333237171173, 0.4423333406448364, 0.4436666667461395, 0.44466665387153625, 0.445333331823349, 0.44600000977516174, 0.4466666579246521, 0.4493333399295807, 0.4506666660308838, 0.45233333110809326, 0.4543333351612091, 0.45500001311302185, 0.4560000002384186, 0.4560000002384186, 0.45766666531562805, 0.4596666693687439, 0.46133333444595337, 0.4633333384990692]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [61, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 1, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 1, 3, 0, 2, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2768571376800537, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 15, 11, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))), grad)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad)))))))), tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.14511715580113, 2.3332756063516475, 2.395694294405368, 2.293410904419153, 2.2724576641335195, 2.2358659245885675, 2.178812171111978, 2.1040162230369326, 1.7927736491417574, 1.925155884018821, 2.110918122039511, 2.1574248088868915, 2.132122256232763, 1.9351313302797521], "accuracy": [0.19231277704238892, 0.1340641975402832, 0.1604807823896408, 0.11306300014257431, 0.12640337646007538, 0.15678246319293976, 0.1776515692472458, 0.2491084337234497, 0.3567560315132141, 0.42847707867622375, 0.2868841588497162, 0.24554219841957092, 0.24157971143722534, 0.29163914918899536], "val_loss": [2.007800715310233, 1.8975144113813127, 1.957530907222203, 1.9488557406834193, 1.919651644570487, 1.8810345785958427, 1.8031768117632185, 1.4671375751495361, 1.1089274883270264, 1.55404451915196, 1.6741367408207484, 1.599515438079834, 1.5995864868164062, 1.5032098974500383], "val_accuracy": [0.10966666787862778, 0.2016666680574417, 0.11699999868869781, 0.1236666664481163, 0.14933332800865173, 0.17399999499320984, 0.23066666722297668, 0.41233333945274353, 0.5846666693687439, 0.40799999237060547, 0.3996666669845581, 0.38466668128967285, 0.35899999737739563, 0.38333332538604736]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 5, 0, 3, 2, 2, 6, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 1, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [26, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1662857085466385, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 11, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, alpha)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3040521623845494, 2.302077551118576, 2.3021751927063527, 2.3013712465802456, 2.303729809979091, 2.3019229951331233, 2.3003054653664528, 2.3015966370373104, 2.300654464787685, 2.3019440284006474, 2.3005240486597485, 2.299520038169656, 2.302327042825155, 2.300296606562157, 2.29943132806747, 2.300349676094161, 2.298588573783065, 2.3006414086386324, 2.299834386500322, 2.2982092903841598, 2.300049821887396, 2.298276674982075, 2.299983509873922, 2.3002572623005855, 2.299092656538518, 2.3004138676277193, 2.2970315688290315, 2.298274208541717, 2.295080789154893, 2.298464414072295, 2.2967045275038576, 2.2987219936512937, 2.297217133495203, 2.2967443686308813, 2.2972595036982417, 2.296874799654075, 2.2961999616130404, 2.2952764169682665, 2.2968594974073926, 2.29530802388406, 2.2965663553559628, 2.295183844743325, 2.2952499525689682, 2.294805554728923, 2.2939339396409104, 2.2954646033570594, 2.295264160250471, 2.2942608876266752, 2.2938035803857715, 2.2928356210458958, 2.293287873378346, 2.2943440914280018, 2.2948453504773747, 2.293155143950924, 2.2916595883546425, 2.2942989003530756, 2.292685888950709, 2.292776741671005, 2.2933664255453343, 2.291995914116858, 2.2935049183663754, 2.292134327108141, 2.292057915480854, 2.2919301721224965, 2.2911593381518687, 2.2913873926554973, 2.2904803437044152, 2.289670854432944, 2.2915379705052445, 2.291452399208372, 2.291591386690494, 2.2892337405623353, 2.2900091016832644, 2.2913434189292716, 2.28957846180134, 2.2902796671548304, 2.289869642182112, 2.288449936822547, 2.2911624930176075, 2.2887518029911424, 2.2876200339955077, 2.289949443346285, 2.287215699798096, 2.288920992605753, 2.2879584436135727, 2.28787450285919, 2.287676253102758, 2.2894585281551443, 2.2873123754615468, 2.28698767965118, 2.287834880626307, 2.2860754956154854, 2.287741659875118, 2.2874053559046947, 2.2869514319654534, 2.2850391684647926, 2.286025897623006, 2.284976642806658, 2.2855765048964085, 2.285956401394154], "accuracy": [0.08809932321310043, 0.09087307006120682, 0.09008057415485382, 0.09008057415485382, 0.09074098616838455, 0.09259014576673508, 0.09642054885625839, 0.09021265059709549, 0.09087307006120682, 0.09417514503002167, 0.09430722147226334, 0.09853387624025345, 0.08994849026203156, 0.09259014576673508, 0.09932637959718704, 0.09945846349000931, 0.09642054885625839, 0.1002509593963623, 0.0944393053650856, 0.10157178342342377, 0.09893012791872025, 0.09972262382507324, 0.09536388516426086, 0.09047681838274002, 0.09972262382507324, 0.09391097724437714, 0.10553427785634995, 0.1022322028875351, 0.10500594228506088, 0.1010434553027153, 0.10619468986988068, 0.10328886657953262, 0.10870426893234253, 0.10117553919553757, 0.10672302544116974, 0.10394927859306335, 0.10249637067317963, 0.10857218503952026, 0.1088363528251648, 0.10830801725387573, 0.10645885765552521, 0.11055342853069305, 0.10936468094587326, 0.10698718577623367, 0.11755382269620895, 0.10606260597705841, 0.1162329912185669, 0.11319508403539658, 0.11081759631633759, 0.11478008329868317, 0.11240258812904358, 0.1080438494682312, 0.11200633645057678, 0.10870426893234253, 0.11781799048185349, 0.11227050423622131, 0.11530841141939163, 0.11728965491056442, 0.11900673806667328, 0.11491216719150543, 0.11517632752656937, 0.11147800832986832, 0.11187426000833511, 0.10791176557540894, 0.11874257028102875, 0.12613920867443085, 0.11979923397302628, 0.12230881303548813, 0.12072381377220154, 0.11808215826749802, 0.11610091477632523, 0.12112006545066833, 0.12521463632583618, 0.11940298229455948, 0.11940298229455948, 0.12151630967855453, 0.12574297189712524, 0.12613920867443085, 0.12310130894184113, 0.12323339283466339, 0.12812046706676483, 0.12310130894184113, 0.12640337646007538, 0.12534672021865845, 0.1228371411561966, 0.12693171203136444, 0.13221503794193268, 0.12429005652666092, 0.12838461995124817, 0.13155461847782135, 0.12917712330818176, 0.1270637959241867, 0.12719587981700897, 0.13247919082641602, 0.1286487877368927, 0.13393211364746094, 0.12851670384407043, 0.14198917150497437, 0.13129045069217682, 0.13049794733524323], "val_loss": [1.9708452224731445, 1.9706808498927526, 1.9705168860299247, 1.9703524453299386, 1.9701871190752303, 1.9700233595711845, 1.969858169555664, 1.969693320138114, 1.969529492514474, 1.9693660736083984, 1.969203199659075, 1.969038622719901, 1.9688748632158553, 1.9687127385820662, 1.9685478891645158, 1.9683848789760046, 1.9682211194719588, 1.968057496207101, 1.967895439692906, 1.9677342006138392, 1.9675705773489816, 1.9674089976719447, 1.9672470773969377, 1.9670822960989816, 1.9669211932591029, 1.9667579787118095, 1.9665958540780204, 1.9664348193577357, 1.9662723541259766, 1.9661103657313757, 1.965946810586112, 1.9657858439854212, 1.9656269890921456, 1.9654632295880998, 1.9653008324759347, 1.9651378904070174, 1.9649765832083566, 1.964813573019845, 1.9646515165056502, 1.9644933428083147, 1.9643311500549316, 1.9641693660191126, 1.9640095574515206, 1.9638495445251465, 1.9636893272399902, 1.963526657649449, 1.9633641924176897, 1.9632024765014648, 1.9630413736615862, 1.9628799983433314, 1.9627201897757394, 1.9625586100987025, 1.9623980522155762, 1.9622366087777274, 1.9620765958513533, 1.96191440309797, 1.9617540495736259, 1.9615915162222726, 1.9614300727844238, 1.961268765585763, 1.961108820778983, 1.9609473092215401, 1.9607879093715124, 1.9606286457606725, 1.9604691096714564, 1.9603078705923898, 1.960146699632917, 1.9599864823477608, 1.959824698311942, 1.9596666608537947, 1.9595072610037667, 1.959345817565918, 1.9591830117361886, 1.9590222494942802, 1.9588597842625208, 1.9586993626185827, 1.9585374423435755, 1.9583782468523299, 1.9582178933279855, 1.9580601283482142, 1.9579014096941267, 1.9577408518110002, 1.9575785909380232, 1.9574189186096191, 1.9572579520089286, 1.9570984840393066, 1.9569394929068429, 1.9567810467311315, 1.9566217150006975, 1.9564642224993025, 1.956303324018206, 1.956143583570208, 1.9559831619262695, 1.9558236258370536, 1.9556640216282435, 1.9555028506687708, 1.9553420203072684, 1.955181326184954, 1.9550205639430456, 1.9548590523856026], "val_accuracy": [0.038333334028720856, 0.03933333232998848, 0.04066666588187218, 0.04233333468437195, 0.043666668236255646, 0.045666664838790894, 0.045666664838790894, 0.046666666865348816, 0.04766666516661644, 0.04833333194255829, 0.050333332270383835, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05366666615009308, 0.0533333346247673, 0.054666668176651, 0.055666666477918625, 0.0560000017285347, 0.05833333358168602, 0.05900000035762787, 0.05999999865889549, 0.06066666543483734, 0.06133333221077919, 0.06300000101327896, 0.06400000303983688, 0.06499999761581421, 0.0663333311676979, 0.06800000369548798, 0.0689999982714653, 0.07000000029802322, 0.07100000232458115, 0.07199999690055847, 0.07233333587646484, 0.07400000095367432, 0.07533333450555801, 0.07699999958276749, 0.07766667008399963, 0.07966666668653488, 0.0806666687130928, 0.08233333379030228, 0.08433333039283752, 0.0860000029206276, 0.08699999749660492, 0.08833333104848862, 0.09000000357627869, 0.09099999815225601, 0.09333333373069763, 0.09399999678134918, 0.0949999988079071, 0.0963333323597908, 0.09700000286102295, 0.09700000286102295, 0.09966666996479034, 0.10066666454076767, 0.10233332961797714, 0.10300000011920929, 0.10300000011920929, 0.10433333367109299, 0.10533333569765091, 0.10700000077486038, 0.10899999737739563, 0.11100000143051147, 0.11233333498239517, 0.11366666853427887, 0.11533333361148834, 0.11566666513681412, 0.11633333563804626, 0.11766666918992996, 0.11933333426713943, 0.12166666984558105, 0.1223333328962326, 0.12300000339746475, 0.12566666305065155, 0.12800000607967377, 0.12866666913032532, 0.13099999725818634, 0.13199999928474426, 0.13366666436195374, 0.1353333294391632, 0.13733333349227905, 0.1393333375453949, 0.140666663646698, 0.14133332669734955, 0.14233332872390747, 0.14499999582767487, 0.14933332800865173, 0.15066666901111603, 0.15266667306423187, 0.1550000011920929, 0.15733332931995392, 0.15800000727176666, 0.1616666615009308, 0.16233333945274353, 0.164000004529953, 0.1653333306312561, 0.16733333468437195, 0.16899999976158142, 0.17133332788944244, 0.17266666889190674]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 0, 2, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 2, 1, 9, 3, 5, 6, 9, 8, 9, 1, 2, 0, 3, 0, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 0, 3, 0, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [99, 88, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10257142782211304, "mapping_values": [1, 8, 8, 5, 3, 2, 14, 14, 10, 4, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.3426924385867187e+23, 3.4743342987294753e+24, 8.013842935210627e+30, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09232597798109055, 0.1010434553027153, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0481401895096347e+23, 4.170415524129587e+25, 4.9568185790966904e+32, NaN, NaN, NaN], "val_accuracy": [0.10599999874830246, 0.09799999743700027, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [89, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 9, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 2, 3, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 19, 19, 12, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), beta)), grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [32, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 2, 3, 2, 6, 2, 6, 8, 6, 9, 4, 2, 2, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 0, 2, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [59, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 0, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 26, 26, 15, 11, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha)), grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 1, 2, 0, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.math.negative(grad), alpha))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0668339729309082, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 0, 2, 1, 8, 3, 5, 6, 6, 8, 1, 2, 2, 0, 3, 0, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 0, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [94, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025845761123414, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [32, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 2, 3, 2, 6, 2, 6, 8, 6, 9, 4, 2, 2, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 0, 2, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 8, 9, 8, 9, 4, 1, 9, 3, 0, 3, 6, 1, 3, 1, 6, 2, 7, 1, 9, 6, 2, 8, 8, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 1, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 5, 5, 4, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 0, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 2, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [94, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06457142531871796, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035739448170984, 2.3008178185163284, 2.300507113508749, 2.2995926597571534, 2.3016341038352355, 2.2998059091629717, 2.2985099161526215, 2.2997243645609706, 2.298825879721137, 2.299968504335713, 2.2990376028827533, 2.298955469052112, 2.3005418934920963, 2.299558009737282, 2.299616343372644], "accuracy": [0.08994849026203156, 0.09140139818191528, 0.09377889335155487, 0.09457138925790787, 0.10038304328918457, 0.10170386731624603, 0.10038304328918457, 0.09985470771789551, 0.1002509593963623, 0.09655263274908066, 0.09787346422672272, 0.10130762308835983, 0.0940430611371994, 0.09919429570436478, 0.09985470771789551], "val_loss": [1.9700589179992676, 1.9694288117544991, 1.9691314016069685, 1.9691136905125208, 1.9690067427498954, 1.968916961124965, 1.9688875334603446, 1.968925952911377, 1.9689780644008092, 1.968996320452009, 1.9691495895385742, 1.9694017682756697, 1.9696550369262695, 1.9698846680777413, 1.970142228262765], "val_accuracy": [0.04866666719317436, 0.05433333292603493, 0.059333331882953644, 0.06300000101327896, 0.06833333522081375, 0.07400000095367432, 0.07566666603088379, 0.07800000160932541, 0.07866666465997696, 0.08033332973718643, 0.07999999821186066, 0.07800000160932541, 0.07599999755620956, 0.07666666805744171, 0.07599999755620956]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [94, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.03200000151991844, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 15, 11, 2, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(grad), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, alpha)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), grad), tf.math.add(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.30434293561781, 2.303250613701956, 2.304247122052764, 2.3045362905031967, 2.3081189236384594, 2.307756436389152], "accuracy": [0.08730682730674744, 0.08915598690509796, 0.08585391938686371, 0.08413683623075485, 0.08057060092687607, 0.08413683623075485], "val_loss": [1.9715467861720495, 1.9721995762416296, 1.9728472573416573, 1.9736500467572893, 1.974456855228969, 1.97547333581107], "val_accuracy": [0.03500000014901161, 0.03166666626930237, 0.027666667476296425, 0.026000000536441803, 0.024000000208616257, 0.01966666616499424]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 2, 3, 2, 6, 2, 6, 8, 6, 9, 4, 2, 2, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 0, 2, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.028857143595814705, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.304732477691715, 2.30449531950955, 2.306454696990338, 2.3080197341091613, 2.313616911685698, 2.3155634508408798], "accuracy": [0.08691058307886124, 0.08585391938686371, 0.08149518072605133, 0.08070268481969833, 0.07687227427959442, 0.07819310575723648], "val_loss": [1.972198758806501, 1.9736709594726562, 1.9751802853175573, 1.97710725239345, 1.979443141392299, 1.9817898614065987], "val_accuracy": [0.03166666626930237, 0.026000000536441803, 0.020999999716877937, 0.019333332777023315, 0.019999999552965164, 0.02666666731238365]}}]