[{"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8114285469055176, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0956901847694245, 1.9486046109957198, 1.773698230901997, 1.368121534432434, 1.127908966843919, 0.9690479270975115, 0.9100179965737599, 0.8569631542291593, 0.7721034193303465, 0.7169737466306514, 0.6963811224367578, 0.685343467548397, 0.6580461576834897, 0.6310494053538576, 0.6072391541626758, 0.581908924436966, 0.5607474932203267, 0.5669504036095322, 0.593300577301816, 0.5243013384256853, 0.5444512196842706, 0.5645011262556093, 0.5500688959799265, 0.48584578180861054, 0.49445043898466445, 0.5001762112913319, 0.49119518845860105, 0.4843765811173199, 0.46102526517450343, 0.4602718620945229, 0.47188430422285466, 0.4591246890377737, 0.44921947050686634], "accuracy": [0.27420419454574585, 0.33284902572631836, 0.402588814496994, 0.4827631711959839, 0.5580504536628723, 0.6238277554512024, 0.6349227428436279, 0.661471426486969, 0.7107383608818054, 0.7161537408828735, 0.7310791015625, 0.7360982894897461, 0.7467969655990601, 0.7597411274909973, 0.759080708026886, 0.769911527633667, 0.7829877138137817, 0.7778365015983582, 0.7680623531341553, 0.7992339134216309, 0.7848368883132935, 0.7847048044204712, 0.7885351777076721, 0.8124422430992126, 0.8112534880638123, 0.802800178527832, 0.8038568496704102, 0.8125742673873901, 0.8230088353157043, 0.8284242749214172, 0.8150838613510132, 0.8189142942428589, 0.8245938420295715], "val_loss": [1.7837044170924596, 1.477130549294608, 1.4496939522879464, 1.2065657888139998, 0.7593210424695697, 0.7646385601588658, 0.6511096102850777, 0.6116394826344081, 0.5564502477645874, 0.5979454006467547, 0.5339522702353341, 0.5164317914417812, 0.5284755400248936, 0.48593592643737793, 0.44636450495038715, 0.464905994279044, 0.43694885287966045, 0.4808656317847116, 0.4298518555504935, 0.4538634845188686, 0.44534753050122944, 0.4596180404935564, 0.399901807308197, 0.3954034277370998, 0.3975625123296465, 0.4150613972118923, 0.43413840021405903, 0.3869154708726065, 0.39691844156810213, 0.4209425789969308, 0.4056457706860134, 0.3862088748386928, 0.3928498455456325], "val_accuracy": [0.2529999911785126, 0.5070000290870667, 0.3919999897480011, 0.44466665387153625, 0.652999997138977, 0.6100000143051147, 0.687666654586792, 0.7353333234786987, 0.7316666841506958, 0.7036666870117188, 0.7493333220481873, 0.7573333382606506, 0.7609999775886536, 0.7730000019073486, 0.793666660785675, 0.7883333563804626, 0.7996666431427002, 0.7613333463668823, 0.8196666836738586, 0.781333327293396, 0.796999990940094, 0.8009999990463257, 0.812333345413208, 0.8209999799728394, 0.8233333230018616, 0.8113333582878113, 0.7896666526794434, 0.8316666483879089, 0.8296666741371155, 0.8080000281333923, 0.8183333277702332, 0.8293333053588867, 0.8166666626930237]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 2, 3, 3, 8, 2, 0, 1, 8, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [48, 17, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 0, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8019999861717224, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), grad)))), tf.math.subtract(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.095886549535854, 1.9490478280796397, 1.7718332908755328, 1.5168204869828472, 1.154868792753808, 1.032302372845456, 0.9014622046490545, 0.8179722624825858, 0.7994065238673375, 0.760904369203406, 0.7131324873671572, 0.6595240917188175, 0.6616700696214599, 0.6299732099151284, 0.6237211660576093, 0.6013805146199082, 0.6025349915208692, 0.5797514573552464, 0.561009035291862, 0.5662213848361785, 0.5509734037860573, 0.5233601865247571, 0.5535245276775972, 0.5211889158780344, 0.49956219609796787, 0.4895043514187719, 0.5060283983104878, 0.48720183910679243, 0.4785334730168785, 0.4638791739066767, 0.45781519064309967, 0.4588200296188594, 0.4672117424072638, 0.4559413869587847, 0.45768189882920357, 0.43258428728701714], "accuracy": [0.2743362784385681, 0.33166027069091797, 0.40483424067497253, 0.4830273389816284, 0.5621450543403625, 0.5881653428077698, 0.6489235162734985, 0.6995112895965576, 0.6955488324165344, 0.6951525807380676, 0.7168141603469849, 0.7405890822410583, 0.7391361594200134, 0.7611940503120422, 0.7568352818489075, 0.7707040309906006, 0.7685906887054443, 0.7744023203849792, 0.7827235460281372, 0.7716285586357117, 0.7761194109916687, 0.7918372750282288, 0.7874785661697388, 0.7967243194580078, 0.8119139075279236, 0.8061022162437439, 0.8083476424217224, 0.813498854637146, 0.8153480291366577, 0.8267071843147278, 0.8269713521003723, 0.8181217908859253, 0.8164047002792358, 0.8277638554573059, 0.8141592741012573, 0.8323867321014404], "val_loss": [1.7834961754935128, 1.4614122935703822, 1.6295410564967565, 1.0516128199441093, 0.8115339619772775, 0.7278583901269096, 0.6059882129941668, 0.600097520010812, 0.6382419381822858, 0.5790714195796421, 0.535954202924456, 0.5337891919272286, 0.5101652315684727, 0.47784028734479633, 0.4672058480126517, 0.5187843697411674, 0.472367456981114, 0.44829693010875155, 0.44016810825892855, 0.4522010087966919, 0.4407720821244376, 0.44748623030526297, 0.4168270230293274, 0.4184784378324236, 0.4504779577255249, 0.43306381361825125, 0.4232180799756731, 0.42295842511313303, 0.4095675689833505, 0.3973223396709987, 0.37362888881138395, 0.4216615046773638, 0.40300525086266653, 0.38106742075511385, 0.3964742762701852, 0.3967014466013227], "val_accuracy": [0.25, 0.5063333511352539, 0.2863333225250244, 0.5916666388511658, 0.6553333401679993, 0.6610000133514404, 0.7193333506584167, 0.7289999723434448, 0.6893333196640015, 0.7103333473205566, 0.7369999885559082, 0.7390000224113464, 0.7566666603088379, 0.7839999794960022, 0.7773333191871643, 0.7593333125114441, 0.7876666784286499, 0.7876666784286499, 0.8053333163261414, 0.7713333368301392, 0.7979999780654907, 0.7900000214576721, 0.8106666803359985, 0.8069999814033508, 0.7853333353996277, 0.809333324432373, 0.8143333196640015, 0.8100000023841858, 0.8159999847412109, 0.8286666870117188, 0.8403333425521851, 0.7986666560173035, 0.8296666741371155, 0.8323333263397217, 0.8193333148956299, 0.8176666498184204]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 9, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.39257141947746277, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.502169801007645, 2.420451499373134, 2.2914593863433708, 2.304016357998035, 2.3033652389054255, 2.3032034344409262], "accuracy": [0.1896711140871048, 0.17342491447925568, 0.13749834895133972, 0.09734513610601425, 0.09602430462837219, 0.1006472036242485], "val_loss": [1.8539184161594935, 1.9753778321402413, 1.9749815804617745, 1.9737370354788644, 1.9736055646623885, 1.9739452770778112], "val_accuracy": [0.3726666569709778, 0.10433333367109299, 0.09799999743700027, 0.10433333367109299, 0.10100000351667404, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 5, 9, 3, 8, 2, 0, 1, 2, 6, 5, 6, 1, 3, 9, 3, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 2, 0, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [8, 4, 4], [7, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 0, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 2, 3, 3, 8, 2, 0, 1, 8, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 0, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [5, 18, 52, 79, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [2, 4, 4], [2, 0, 1, 5, 3, 4], [78], [1, 0, 1, 0, 0, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 28, 19, 9, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 8, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0], [3, 4, 4, 1, 6, 0, 9], [7, 0, 1, 5, 3, 4], [49, 18], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, grad))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06630563735961914, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 3, 8, 8, 2, 0, 1, 6, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 2, 1, 1, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4, 4], [0, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [129577878.96937975, 2537160019.823009, 11713648031.361774, 33107475742.60098, 70945211956.4105, 131688897734.41606], "accuracy": [0.10091137140989304, 0.1014397069811821, 0.09945846349000931, 0.10077928751707077, 0.09509972482919693, 0.09813763201236725], "val_loss": [510353170.28571427, 4080256000.0, 13767941851.428572, 32631834916.57143, 63729830180.57143, 110120651044.57143], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 9, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4], [2, 0, 1, 5, 3, 4], [92], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.195700406933725, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17316074669361115, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [51460.40959821428, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 5, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 2, 0, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [5, 3, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0], [3, 4, 4, 1, 6, 0, 9], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 0, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 9, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [5, 3, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [5, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [7, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 14, 10, 8, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))))))))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), sigma)), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4, 4], [2, 7, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [129577878.96937975, 2537160019.823009, 11713648031.361774, 33107475742.60098, 70945211956.4105, 131688897734.41606], "accuracy": [0.10091137140989304, 0.1014397069811821, 0.09945846349000931, 0.10077928751707077, 0.09509972482919693, 0.09813763201236725], "val_loss": [510353170.28571427, 4080256000.0, 13767941851.428572, 32631834916.57143, 63729830180.57143, 110120651044.57143], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 2, 0, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [5, 3, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [3, 4, 4, 2, 5, 3, 9, 6], [2, 0, 1, 5, 3, 4], [49, 17], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 14, 12, 8, 4, 2, 10, 6, 4, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), sigma)))))))), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.math.subtract(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(beta)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4, 4], [6, 0, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029271040326806, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 2, 3, 3, 8, 2, 0, 1, 8, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [40, 26, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [4, 4, 4], [2, 0, 1, 5, 3, 4], [70], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.0974285677075386, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [164127097726868.38, 2.5409972212844476e+16, 4.305299062651457e+17, 3.1164950774717266e+18, 1.3616248869967323e+19, 4.5458796132126966e+19, 1.2101324416580731e+20, 2.8796616682163133e+20, 6.073680695058034e+20, 1.1896773455979345e+21, 2.1618799156265878e+21, 3.7134409305865826e+21, 6.174978727984017e+21, 9.835859376314184e+21, 1.488070168081202e+22, 2.2633060670950072e+22, 3.299434677654001e+22, 4.750980717402412e+22, 6.608303449409218e+22, 9.170597551085226e+22, 1.2379012211992946e+23], "accuracy": [0.1010434553027153, 0.1014397069811821, 0.09972262382507324, 0.1002509593963623, 0.09417514503002167, 0.09985470771789551, 0.09985470771789551, 0.09787346422672272, 0.10447761416435242, 0.09985470771789551, 0.10315678268671036, 0.09774138033390045, 0.09576013684272766, 0.09734513610601425, 0.1006472036242485, 0.10540219396352768, 0.10038304328918457, 0.1006472036242485, 0.10368511080741882, 0.09813763201236725, 0.09800554811954498], "val_loss": [1429783453593014.8, 7.711676609203874e+16, 8.277069147340425e+17, 4.509611285731906e+18, 1.6919349642330036e+19, 4.981691409554076e+19, 1.2444272351851825e+20, 2.7508838991051312e+20, 5.592841841674762e+20, 1.0458513186373025e+21, 1.868149219375069e+21, 3.178890566777415e+21, 5.121153313631018e+21, 8.242722064351261e+21, 1.2550532040678609e+22, 1.8599040372194213e+22, 2.7516217817355073e+22, 3.866471270509589e+22, 5.291479033346776e+22, 7.233451137181569e+22, 1.0198557566750421e+23], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10233332961797714, 0.10199999809265137, 0.10433333367109299, 0.10133333504199982, 0.10000000149011612, 0.09566666930913925, 0.10100000351667404, 0.10466666519641876, 0.09966666996479034, 0.10333333164453506, 0.10733333230018616, 0.09233333170413971, 0.1003333330154419, 0.0976666659116745, 0.09366666525602341, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 7, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [27, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011057038018103, 2.2998681707688293, 2.3019581888141163, 2.301640493994801, 2.3029235677476008, 2.302526404624287], "accuracy": [0.0948355570435524, 0.09787346422672272, 0.09470347315073013, 0.09576013684272766, 0.0874389111995697, 0.09060890227556229], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 5, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 4, 4, 2, 8, 8], [3, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [7, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011057038018103, 2.2998681707688293, 2.3019581888141163, 2.301640493994801, 2.3029235677476008, 2.302526404624287], "accuracy": [0.0948355570435524, 0.09787346422672272, 0.09470347315073013, 0.09576013684272766, 0.0874389111995697, 0.09060890227556229], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 2, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4, 4], [2, 0, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3011057038018103, 2.2998681707688293, 2.3019581888141163, 2.301640493994801, 2.3029235677476008, 2.302526404624287], "accuracy": [0.0948355570435524, 0.09787346422672272, 0.09470347315073013, 0.09576013684272766, 0.0874389111995697, 0.09060890227556229], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 5, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 44, 52, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 4, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [27, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011057038018103, 2.2998681707688293, 2.3019581888141163, 2.301640493994801, 2.3029235677476008, 2.302526404624287], "accuracy": [0.0948355570435524, 0.09787346422672272, 0.09470347315073013, 0.09576013684272766, 0.0874389111995697, 0.09060890227556229], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 9, 3, 8, 2, 0, 1, 2, 8, 5, 6, 1, 3, 9, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 2, 0, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [5, 3, 52, 16, 90, 47, 89, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [3, 3, 4, 2, 6, 0, 9], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 12, 8, 6, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), sigma)), sigma)))), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011057038018103, 2.2998681707688293, 2.3019581888141163, 2.301640493994801, 2.3029235677476008, 2.302526404624287], "accuracy": [0.0948355570435524, 0.09787346422672272, 0.09470347315073013, 0.09576013684272766, 0.0874389111995697, 0.09060890227556229], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 8, 3, 3, 8, 2, 2, 1, 2, 8, 5, 6, 1, 3, 3, 8, 5, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 3, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [5, 3, 52, 16, 90, 47, 89, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 5, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 4, 2, 8, 8], [2, 0, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 6, 6, 3, 3, 1, 17, 17, 9, 8, 1, 5, 3, 2, 1, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.square(tf.math.pow(tf.math.pow(beta, tf.math.multiply(grad, grad)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.sqrt(sigma), tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3011057038018103, 2.2998681707688293, 2.3019581888141163, 2.301640493994801, 2.3029235677476008, 2.302526404624287], "accuracy": [0.0948355570435524, 0.09787346422672272, 0.09470347315073013, 0.09576013684272766, 0.0874389111995697, 0.09060890227556229], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]