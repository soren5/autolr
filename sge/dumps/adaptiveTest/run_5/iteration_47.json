[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.508571445941925, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30052070985491, 2.300630658955512, 2.300470969019124, 2.298588593401976, 2.2962613048145344, 2.295405384949752, 2.2949661998197057, 2.2935413761602463, 2.2914622372577, 2.2910774835836714, 2.28887406514699, 2.2885874846293044, 2.286709723203662, 2.2835391272548766, 2.283922993259785, 2.2824842715701092, 2.2799483397696325, 2.280606505987651, 2.278868687639399, 2.2784456222316516, 2.2774916900981923, 2.2744758219184216, 2.2739112931093945, 2.271915172588997, 2.2713282227657885, 2.2686501468539535, 2.2676546256209344, 2.2662158064665245, 2.2647867546955736, 2.2636075042509964, 2.261424718106569, 2.2609068180009153, 2.259746355765437, 2.2574072723706102, 2.2564128490093283, 2.256068849450231, 2.2524123850310906, 2.2525875454077458, 2.2513357010562864, 2.2509252770292507, 2.247427730480945, 2.247078007175434, 2.2456011641782903, 2.2439836723898003, 2.241488176550391, 2.241835692649693, 2.238887821158965, 2.236754031213456, 2.235260090792042, 2.2340251839219176, 2.2319025885647847, 2.230345440861918, 2.2302318989183485, 2.226603328213322, 2.2260905432584592, 2.2228542086848524, 2.2204903442121813, 2.218029022122324, 2.2195314142320135, 2.2172538815960516, 2.213698142114301, 2.2099330626490126, 2.210760071198576, 2.2078145807760268, 2.205555551418334, 2.203692270606941, 2.2032162888710447, 2.200570831555795, 2.196012822345043, 2.195562950262005, 2.1928418492596964, 2.1913052646003113, 2.188164846693378, 2.185752830359253, 2.184471318844901, 2.1813540954977815, 2.1798242056421744, 2.1747329715944916, 2.1733038507007323, 2.1695159931129955, 2.1666777446962477, 2.1673010995343627, 2.1622234156984836, 2.157986877490784, 2.1575486838872706, 2.1526647347185857, 2.152946845210696, 2.1505866555521407, 2.1451420362016798, 2.1434734664368293, 2.1381830226287017, 2.1378085138051106, 2.134732867811397, 2.12851799641303, 2.126993354285445, 2.1246278915800803, 2.1201891747322126, 2.1165235036903636, 2.1122391313341993, 2.1079719036073574], "accuracy": [0.09919429570436478, 0.09219389408826828, 0.09959053993225098, 0.10632677376270294, 0.1080438494682312, 0.11649715900421143, 0.10817593336105347, 0.11478008329868317, 0.1200634017586708, 0.11979923397302628, 0.1224408894777298, 0.12574297189712524, 0.1302337795495987, 0.13908334076404572, 0.13829085230827332, 0.1398758441209793, 0.15031039714813232, 0.14832915365695953, 0.149649977684021, 0.1516312211751938, 0.15519747138023376, 0.16140536963939667, 0.16259410977363586, 0.17540615797042847, 0.1740853190422058, 0.18121780455112457, 0.18518029153347015, 0.18821820616722107, 0.19733192026615143, 0.19653943181037903, 0.2024831622838974, 0.19772817194461823, 0.2024831622838974, 0.20776647329330444, 0.21291771531105042, 0.21212521195411682, 0.22137102484703064, 0.218465194106102, 0.22401267290115356, 0.22137102484703064, 0.2343151569366455, 0.22784309089183807, 0.2386738806962967, 0.24342887103557587, 0.24805177748203278, 0.23880596458911896, 0.2483159452676773, 0.2522784173488617, 0.2588825821876526, 0.2615242302417755, 0.25703340768814087, 0.2583542466163635, 0.2642979919910431, 0.2736758589744568, 0.27499669790267944, 0.27777042984962463, 0.27261921763420105, 0.28780874609947205, 0.28358209133148193, 0.2817329168319702, 0.28978997468948364, 0.29599788784980774, 0.2954695522785187, 0.2884691655635834, 0.2999603748321533, 0.3053757846355438, 0.29943203926086426, 0.30365869402885437, 0.31422534584999084, 0.3135649263858795, 0.3163386583328247, 0.31620657444000244, 0.32003697752952576, 0.3197728097438812, 0.3218861520290375, 0.3205653131008148, 0.33218860626220703, 0.3315281867980957, 0.33205652236938477, 0.33258485794067383, 0.33958524465560913, 0.32703739404678345, 0.34381189942359924, 0.3411702513694763, 0.3415665030479431, 0.3463214933872223, 0.34645357728004456, 0.35305771231651306, 0.3535860478878021, 0.3516048192977905, 0.35147273540496826, 0.3571522831916809, 0.35503897070884705, 0.36626601219177246, 0.3567560315132141, 0.369700163602829, 0.3626997768878937, 0.36507725715637207, 0.37405890226364136, 0.3774930536746979], "val_loss": [1.969764573233468, 1.968531608581543, 1.9672987120492118, 1.9660743304661341, 1.964850902557373, 1.9636329242161341, 1.9624324526105608, 1.9612152235848563, 1.960010051727295, 1.9588055610656738, 1.957602092197963, 1.9564128603254045, 1.9551989691598075, 1.9539871215820312, 1.9527812685285295, 1.951566287449428, 1.9503518513270788, 1.949136461530413, 1.947915826525007, 1.9467014585222517, 1.945469856262207, 1.9442406381879533, 1.9429995673043388, 1.9417681694030762, 1.940513747079032, 1.9392523765563965, 1.9379799025399345, 1.9367146492004395, 1.9354297092982702, 1.9341327803475517, 1.9328078542436873, 1.9315011841910226, 1.9301798003060477, 1.9288338252476283, 1.9274850572858537, 1.926114627293178, 1.924734319959368, 1.9233410017830985, 1.9219273158482142, 1.9205163546970911, 1.9190661566598075, 1.917609487261091, 1.9161357198442732, 1.9146465573992049, 1.9131360735212053, 1.9116274288722448, 1.9100977352687292, 1.908538818359375, 1.9069521086556571, 1.905353341783796, 1.9037188121250697, 1.9020699092320033, 1.9004107883998327, 1.8987149511064803, 1.8970235415867396, 1.895286968776158, 1.8935356140136719, 1.8917498588562012, 1.8899593353271484, 1.8881500789097376, 1.886298724583217, 1.884406907217843, 1.8825158391680037, 1.8805694580078125, 1.8785950115748815, 1.8766004017421178, 1.8745929173060827, 1.872539452144078, 1.8704297201974052, 1.8682904924665178, 1.8661345754350935, 1.8639578819274902, 1.861727237701416, 1.8594727516174316, 1.8572215352739607, 1.8548890522548132, 1.8525422641209193, 1.8501224517822266, 1.8476818629673548, 1.8451706341334753, 1.8426053864615304, 1.8400539670671736, 1.8374434198651994, 1.8347815786089217, 1.8320772307259696, 1.8293134825570243, 1.8265511648995536, 1.823760918208531, 1.8208849089486259, 1.8179663930620467, 1.8149925640651159, 1.8120079040527344, 1.8089650017874581, 1.8058621542794364, 1.802734443119594, 1.7995707648141044, 1.7963287489754813, 1.7930374145507812, 1.7897050721304757, 1.7863244329180037], "val_accuracy": [0.046666666865348816, 0.052666667848825455, 0.060333333909511566, 0.0689999982714653, 0.07833333313465118, 0.08966666460037231, 0.09799999743700027, 0.1066666692495346, 0.11699999868869781, 0.12833333015441895, 0.14000000059604645, 0.15666666626930237, 0.1706666648387909, 0.18266665935516357, 0.195333331823349, 0.20800000429153442, 0.2163333296775818, 0.22633333504199982, 0.23766666650772095, 0.24833333492279053, 0.2563333213329315, 0.26766666769981384, 0.2776666581630707, 0.2866666615009308, 0.2939999997615814, 0.3036666810512543, 0.31066668033599854, 0.31700000166893005, 0.3243333399295807, 0.33033332228660583, 0.3346666693687439, 0.34166666865348816, 0.34566667675971985, 0.35066667199134827, 0.3543333411216736, 0.35766667127609253, 0.3630000054836273, 0.3636666536331177, 0.3646666705608368, 0.367333322763443, 0.3709999918937683, 0.37533333897590637, 0.37833333015441895, 0.38233333826065063, 0.3843333423137665, 0.3869999945163727, 0.3876666724681854, 0.39100000262260437, 0.39366665482521057, 0.39633333683013916, 0.40033334493637085, 0.40166667103767395, 0.40433332324028015, 0.40700000524520874, 0.40933331847190857, 0.41233333945274353, 0.4153333306312561, 0.4180000126361847, 0.4203333258628845, 0.4230000078678131, 0.4256666600704193, 0.4283333420753479, 0.43166667222976685, 0.4333333373069763, 0.4346666634082794, 0.43700000643730164, 0.44066667556762695, 0.4423333406448364, 0.44333332777023315, 0.44433334469795227, 0.44600000977516174, 0.4463333189487457, 0.4463333189487457, 0.4483333230018616, 0.4506666660308838, 0.4516666531562805, 0.453000009059906, 0.45633333921432495, 0.4580000042915344, 0.4596666693687439, 0.4620000123977661, 0.46266666054725647, 0.46533334255218506, 0.46666666865348816, 0.46833333373069763, 0.47099998593330383, 0.47200000286102295, 0.47333332896232605, 0.476666659116745, 0.4779999852180481, 0.4790000021457672, 0.48233333230018616, 0.48266667127609253, 0.4846666753292084, 0.48766666650772095, 0.49033331871032715, 0.49266666173934937, 0.49399998784065247, 0.4959999918937683, 0.4976666569709778]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.22685714066028595, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.659483008018779, 2.279791519421754, 2.282875873314753, 2.2663446334626745, 2.298890805531014, 2.4410158207923227], "accuracy": [0.19376568496227264, 0.1310262829065323, 0.16563200950622559, 0.12798838317394257, 0.11147800832986832, 0.1348566859960556], "val_loss": [1.8400632994515556, 1.9556068692888533, 1.832970482962472, 1.9742172786167689, 1.921461514064244, 1.9782532283238001], "val_accuracy": [0.21833333373069763, 0.19333332777023315, 0.1860000044107437, 0.09799999743700027, 0.10333333164453506, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.22628571093082428, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.6594927332042593, 2.276448905869498, 2.1899738233669828, 2.469022602783675, 2.4651696265350007, 2.304880874409825], "accuracy": [0.1935015171766281, 0.13234710693359375, 0.20380398631095886, 0.1776515692472458, 0.10355303436517715, 0.09932637959718704], "val_loss": [1.840928622654506, 1.9546846662248885, 1.9722402436392648, 2.741149289267404, 1.976193632398333, 1.9741373743329729], "val_accuracy": [0.2150000035762787, 0.1133333370089531, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [31, 28, 79], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 9], [2, 0, 1, 5, 3, 4], [13], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.11485714465379715, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2991192906429707, 2.3011533331641147, 2.3025343437960686, 2.302634494463057, 2.304770678041665, 2.32643407906807, 2.674245237501117, 4.8351004947807965], "accuracy": [0.11055342853069305, 0.08968432247638702, 0.09113723784685135, 0.11081759631633759, 0.11015717685222626, 0.10328886657953262, 0.09919429570436478, 0.10117553919553757], "val_loss": [1.9695813315255302, 1.9733898980276925, 1.9735799516950334, 1.9749024936131068, 1.9800270625523158, 2.054997035435268, 3.0107201848711287, 6.559717178344727], "val_accuracy": [0.09533333033323288, 0.09733333438634872, 0.10700000077486038, 0.10266666859388351, 0.0976666659116745, 0.10366666316986084, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [66, 28, 21], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 5, 2, 2, 5, 0, 9, 2, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 3, 3, 0, 1, 3, 4, 0], [42], [0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [0, 0, 1, 5, 3, 4], [13], [0, 1, 0, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.square(grad))), tf.math.add(beta, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.square(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 4, 0, 0, 2, 1], [42, 36], [1, 0, 0], [0, 1, 0], [3, 3], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 5, 3, 4, 1, 7, 1], [0, 0, 2, 1, 2, 1, 0], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [0, 1, 0], [0, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [8.139789677172201e+24, 45.29907081048754, 144.50480947921525, 301.7194466964365, 515.7586990616435, 787.7151978280739], "accuracy": [0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.29920196533203, 81.04411969866071, 195.14722551618303, 358.5039324079241, 571.3664202008929, 833.656232561384], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 3, 4], [0, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 8, 4, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08651433140039444, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 3], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 1, 0, 4, 0, 1], [42, 29], [0, 0, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 17, 17, 9, 8, 2, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [5, 9, 9, 4], [0, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 4, 4, 1, 4, 4], [42], [0, 0, 0], [1, 1, 0], [3, 9], [6, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034119399122006, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 3, 3, 0, 1, 3, 4, 0], [42], [0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3034119399122006, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [90, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 0, 3, 5, 0, 1, 4, 4], [42, 31], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [0, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.122991032336508, 21.449566402392474, 62.6787162955096, 135.21933927826987, 247.63055754482565, 410.8861566074237], "accuracy": [0.10302469879388809, 0.09893012791872025, 0.09760929644107819, 0.09879804402589798, 0.10130762308835983, 0.10170386731624603], "val_loss": [6.967203685215542, 25.68286078316825, 61.87828499930246, 121.0342276436942, 209.4530290876116, 334.1304670061384], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [2, 0, 2, 1], [66, 28, 21], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 2, 2, 2, 5, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 3, 3, 0, 1, 3, 4, 0], [42], [0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [0, 0, 1, 5, 3, 4], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 2, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 1, 10, 7, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.square(grad))), tf.math.add(beta, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, alpha), grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.square(tf.math.subtract(sigma, tf.math.subtract(beta, tf.math.square(beta))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0], [0, 1, 0], [3, 7, 7, 7, 1], [2, 0, 1, 5, 3, 4], [56, 75], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 5, 5, 1, 1, 2, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [33, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(alpha, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, sigma))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303511052099532, 2.3026749655681122, 2.302660605564503, 2.302669045002768, 2.3026640452351064, 2.3026801364895153, 2.302662423636069, 2.3026715266218023, 2.302677093700348, 2.302690263311577], "accuracy": [0.0944393053650856, 0.09655263274908066, 0.09206181764602661, 0.09734513610601425, 0.09721305221319199, 0.09298639744520187, 0.0940430611371994, 0.09998679161071777, 0.09774138033390045, 0.09998679161071777], "val_loss": [1.9736559731619698, 1.9736559050423759, 1.9736610821315221, 1.973665509905134, 1.9736691202436174, 1.9736320631844657, 1.9736506598336356, 1.9736576761518205, 1.9736388070242745, 1.9736287253243583], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.0989999994635582, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [5, 9, 9, 4], [0, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [6, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [44374416.27616494, 865903219.3369436, 4011005477.6679435, 11186188736.498745, 23850663146.393345, 43708503499.99525], "accuracy": [0.10170386731624603, 0.09932637959718704, 0.09840179979801178, 0.09866596013307571, 0.10117553919553757, 0.10157178342342377], "val_loss": [171861709.7142857, 1373644141.7142856, 4634661741.714286, 10984187611.428572, 21451541942.857143, 37066063872.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [8, 2, 9, 4, 9], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0], [3, 0, 2, 8], [2], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034119399122006, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [5, 9, 9, 4], [0, 0, 2, 1], [14, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 1, 1], [0, 1, 0], [3, 9], [6, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301064874360338, 2.302503818030276, 2.3036656625644643, 2.303093604344922, 2.302078691251274, 2.302549086636115], "accuracy": [0.09813763201236725, 0.0882314071059227, 0.09377889335155487, 0.09681680053472519, 0.09140139818191528, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 1], [0, 0, 2, 1], [6, 28, 79], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301064874360338, 2.302503818030276, 2.3036656625644643, 2.303093604344922, 2.302078691251274, 2.302549086636115], "accuracy": [0.09813763201236725, 0.0882314071059227, 0.09377889335155487, 0.09681680053472519, 0.09140139818191528, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 0, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301064874360338, 2.302503818030276, 2.3036656625644643, 2.303093604344922, 2.302078691251274, 2.302549086636115], "accuracy": [0.09813763201236725, 0.0882314071059227, 0.09377889335155487, 0.09681680053472519, 0.09140139818191528, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 2, 5, 3, 1, 3], [42], [1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301064874360338, 2.302503818030276, 2.3036656625644643, 2.303093604344922, 2.302078691251274, 2.302549086636115], "accuracy": [0.09813763201236725, 0.0882314071059227, 0.09377889335155487, 0.09681680053472519, 0.09140139818191528, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]