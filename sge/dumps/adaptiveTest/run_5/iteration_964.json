[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.800000011920929, "mapping_values": [1, 5, 5, 4, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0974241133300526, 1.3303218411259317, 1.043182352554088, 0.9248166180888282, 0.7937818484346644, 0.7617845182972436, 0.7509040548785362, 0.6914530718693439, 0.6914768287329673, 0.6752612150151575, 0.6601042520211058, 0.6469244654656339, 0.6236988503336828, 0.6118172297325306, 0.6101068852914874, 0.5826663694062395, 0.5923333678656817, 0.5809121917125776, 0.5771408161671722, 0.566447696720746, 0.5525327444690613, 0.5466284252838011, 0.5436439675945317, 0.5212136063128887, 0.5290429256044563, 0.5317031169658828, 0.5223779905001407, 0.5006689145785155, 0.5013144957296537, 0.5138166609095104, 0.49510484414251177, 0.4910740982020268, 0.4798199825786943, 0.4801876371200641, 0.47913952704197726, 0.4656717390463636, 0.45447042985142594, 0.4523593656509119], "accuracy": [0.3051116168498993, 0.5268788933753967, 0.6264694333076477, 0.6507726907730103, 0.709549605846405, 0.7193237543106079, 0.7199841737747192, 0.7428345084190369, 0.7384757399559021, 0.7475894689559937, 0.750231146812439, 0.7597411274909973, 0.7658169269561768, 0.7676661014556885, 0.7708360552787781, 0.7843085527420044, 0.7754589915275574, 0.7798177003860474, 0.7788931727409363, 0.7874785661697388, 0.7928939461708069, 0.7906485199928284, 0.7942147850990295, 0.8013472557067871, 0.8026680946350098, 0.7985734939575195, 0.8009510040283203, 0.8128384351730347, 0.816008448600769, 0.8096684813499451, 0.817461371421814, 0.8171972036361694, 0.8202351331710815, 0.817989706993103, 0.8202351331710815, 0.8232730031013489, 0.8305375576019287, 0.832650899887085], "val_loss": [1.1832285608564104, 0.865114654813494, 0.6973437581743512, 0.6129188537597656, 0.6158885955810547, 0.5750164645058768, 0.5289648600987026, 0.543197751045227, 0.5536391564777919, 0.5358540330614362, 0.5158884865897042, 0.48907651220049175, 0.4958452156611851, 0.48121440410614014, 0.4690611703055246, 0.47119406291416716, 0.4590343066624233, 0.44440650939941406, 0.45817153794424875, 0.4338043417249407, 0.4334154554775783, 0.44935578959328787, 0.4347947325025286, 0.42211524077824186, 0.4171088423047747, 0.4124398146356855, 0.4132470658847264, 0.4074503949710301, 0.4174798386437552, 0.407377370766231, 0.40455888850348337, 0.3991452285221645, 0.3885638884135655, 0.39939141273498535, 0.39764870916094097, 0.38315147161483765, 0.38810679742268156, 0.38405032668794903], "val_accuracy": [0.5770000219345093, 0.6163333058357239, 0.6926666498184204, 0.7336666584014893, 0.7129999995231628, 0.7286666631698608, 0.7563333511352539, 0.7453333139419556, 0.749666690826416, 0.7559999823570251, 0.7753333449363708, 0.7766666412353516, 0.7736666798591614, 0.7713333368301392, 0.7933333516120911, 0.781333327293396, 0.7923333048820496, 0.8059999942779541, 0.7913333177566528, 0.8073333501815796, 0.8063333630561829, 0.7943333387374878, 0.7986666560173035, 0.8109999895095825, 0.812666654586792, 0.8196666836738586, 0.8149999976158142, 0.824999988079071, 0.8106666803359985, 0.8136666417121887, 0.8143333196640015, 0.8230000138282776, 0.8343333601951599, 0.8233333230018616, 0.8296666741371155, 0.8326666951179504, 0.8230000138282776, 0.8306666612625122]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [48, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7845714092254639, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2862531507744244, 2.2439083107363955, 2.186880343720236, 2.0951851585742394, 1.9604471874684233, 1.7768781911963092, 1.601720153600501, 1.4406909050801018, 1.3239817066341264, 1.22737975648649, 1.157883897150166, 1.103164847674009, 1.056247397971868, 1.0170927523558937, 0.9809025981800668, 0.9543752003701733, 0.9329421369784764, 0.9090801062459218, 0.8948250822954175, 0.8756162327719308, 0.8592643289124536, 0.8434835206862407, 0.8374774836829436, 0.8270175971485415, 0.8191450740116116, 0.7946732059965486, 0.794192569469338, 0.7887412059765293, 0.779363941066159, 0.7656431380925539, 0.7726418426039668, 0.7668021179665789, 0.7479391083379132, 0.7450132907625706, 0.7418004126990271, 0.74026773671401, 0.732866254362684, 0.7257447267063636, 0.730222326125829, 0.7140076613586813, 0.7115726984172308, 0.704522396366846, 0.7013983973233675, 0.6961455263040951, 0.7060390182411225, 0.6902451730911301, 0.6941204911776664, 0.6883415241424733, 0.6854336518637335, 0.6776811052480347, 0.6711252304572691, 0.6726556150684299, 0.6650306698022942, 0.6658075566242053, 0.6674170294820105, 0.6526661081525706, 0.6508257735312465, 0.6525976218725035, 0.6544146163273702], "accuracy": [0.1344604343175888, 0.24118345975875854, 0.3167349100112915, 0.3759080767631531, 0.4247787594795227, 0.4671773910522461, 0.48791441321372986, 0.5263505578041077, 0.5498613119125366, 0.5798441171646118, 0.5947695374488831, 0.6139215230941772, 0.6300356388092041, 0.6338660717010498, 0.6540747880935669, 0.6596222519874573, 0.6670188903808594, 0.6733588576316833, 0.6758684515953064, 0.6900013089179993, 0.6927750706672668, 0.6959450244903564, 0.7004358768463135, 0.6991150379180908, 0.6983225345611572, 0.7153612375259399, 0.7107383608818054, 0.7112666964530945, 0.7128516435623169, 0.7168141603469849, 0.720380425453186, 0.7244749665260315, 0.7284374833106995, 0.7314753532409668, 0.7281733155250549, 0.7271166443824768, 0.7308149337768555, 0.733588695526123, 0.7329282760620117, 0.7368907928466797, 0.7420420050621033, 0.7424382567405701, 0.7400607466697693, 0.7425703406333923, 0.7432307600975037, 0.7469290494918823, 0.7405890822410583, 0.7454761862754822, 0.7510236501693726, 0.7457403540611267, 0.7511557340621948, 0.7518161535263062, 0.7539294958114624, 0.7531369924545288, 0.7569673657417297, 0.759080708026886, 0.7577598690986633, 0.7627789974212646, 0.757099449634552], "val_loss": [1.933635916028704, 1.8884760311671667, 1.8191301482064384, 1.7088463987622942, 1.54829740524292, 1.3545874527522497, 1.1740027155194963, 1.0290045057024275, 0.9275997706821987, 0.8558394398008075, 0.8010402747562954, 0.7617741993495396, 0.728048460824149, 0.702432496207101, 0.6815140077045986, 0.6632274900163923, 0.6502399103982108, 0.6376960277557373, 0.625563417162214, 0.6150341715131488, 0.6064311606543404, 0.5973841803414481, 0.5894755125045776, 0.5831284182412284, 0.5774351699011666, 0.5722862311771938, 0.5688406569617135, 0.5627620901380267, 0.5576555388314384, 0.5551221881593976, 0.5477944442204067, 0.5444734437125069, 0.5385615995952061, 0.5353658539908273, 0.5332093920026507, 0.5279752867562431, 0.5257065977369036, 0.5225576843534198, 0.5192209822790963, 0.5164020742688861, 0.5175136157444545, 0.5116077491215297, 0.5088254043034145, 0.507750221661159, 0.5037873813084194, 0.5012329135622297, 0.49828146185193745, 0.49740093094961985, 0.49412754603794645, 0.49097881998334614, 0.4895322152546474, 0.48858814580099924, 0.4865367923464094, 0.48506007875714985, 0.48694986956460135, 0.4809847388948713, 0.4813356910433088, 0.47612341812678743, 0.4760500703539167], "val_accuracy": [0.3240000009536743, 0.4026666581630707, 0.4663333296775818, 0.5266666412353516, 0.5640000104904175, 0.5886666774749756, 0.6286666393280029, 0.6656666398048401, 0.6816666722297668, 0.6970000267028809, 0.7066666483879089, 0.703000009059906, 0.7076666951179504, 0.7149999737739563, 0.7250000238418579, 0.7319999933242798, 0.7306666374206543, 0.7366666793823242, 0.7403333187103271, 0.7413333058357239, 0.7419999837875366, 0.7416666746139526, 0.7486666440963745, 0.749666690826416, 0.753333330154419, 0.7596666812896729, 0.7553333044052124, 0.7586666941642761, 0.7613333463668823, 0.7506666779518127, 0.7616666555404663, 0.7670000195503235, 0.7689999938011169, 0.7646666765213013, 0.7663333415985107, 0.7680000066757202, 0.7723333239555359, 0.7733333110809326, 0.7753333449363708, 0.7766666412353516, 0.7766666412353516, 0.7766666412353516, 0.7763333320617676, 0.7799999713897705, 0.7803333401679993, 0.7826666831970215, 0.7866666913032532, 0.7826666831970215, 0.7889999747276306, 0.7826666831970215, 0.7866666913032532, 0.7896666526794434, 0.7870000004768372, 0.793666660785675, 0.7886666655540466, 0.7919999957084656, 0.7913333177566528, 0.7913333177566528, 0.7916666865348816]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 0, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [58, 70, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7839999794960022, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.28602133850931, 2.2426746394797683, 2.1834417105886237, 2.08697794126466, 1.9440863123816774, 1.7518630293712734, 1.5738082050001774, 1.414692010137588, 1.3025089182543197, 1.2083098127731415, 1.1408861533226575, 1.0887515548985192, 1.0432258648501411, 1.005210917340199, 0.9702888950695687, 0.9448272478248244, 0.9239878608188168, 0.9005717227975721, 0.8872631394379742, 0.8686665896616119, 0.8521316028730886, 0.8372352339603866, 0.831532830354985, 0.8210825277058172, 0.8134564857882216, 0.7894156867124779, 0.7889718157960722, 0.7838649515698788, 0.7747710878271798, 0.7607308962892753, 0.7680908414697477, 0.7622939667303674, 0.7434210774684705, 0.7407894366452912, 0.73745199950175, 0.7363632308446405, 0.728614967741026, 0.7218646002546387, 0.7265083647407262, 0.7103409105760546, 0.7077624769636575, 0.7008010507527438, 0.6973159976324244, 0.6925349204122366, 0.7025276225524225, 0.6868360092170391, 0.6905413614980863, 0.6850036981398356, 0.6820301314575514, 0.6742502963223305, 0.6675798712531258, 0.6691689681635242, 0.6618302011093081, 0.6625701228326196, 0.6643282209546764, 0.6491707982782045, 0.6475067679136657, 0.6493051599879952, 0.6518261420838569], "accuracy": [0.13472460210323334, 0.2429005354642868, 0.31937655806541443, 0.3781534731388092, 0.4283449947834015, 0.4702152907848358, 0.4963677227497101, 0.5322942733764648, 0.5538238286972046, 0.5828820466995239, 0.6016378402709961, 0.6196011304855347, 0.6324131488800049, 0.6382247805595398, 0.6581693291664124, 0.663848876953125, 0.6699247360229492, 0.6770572066307068, 0.6779817938804626, 0.6923788189888, 0.6959450244903564, 0.6975300312042236, 0.7029454708099365, 0.7020208835601807, 0.7008321285247803, 0.717870831489563, 0.7127195596694946, 0.7124554514884949, 0.7143045663833618, 0.7186633348464966, 0.7215691208839417, 0.7281733155250549, 0.7279091477394104, 0.7314753532409668, 0.7310791015625, 0.7289658188819885, 0.7308149337768555, 0.7354378700256348, 0.7347774505615234, 0.7368907928466797, 0.7437590956687927, 0.7441553473472595, 0.7417778372764587, 0.7433628439903259, 0.7429665923118591, 0.748249888420105, 0.7433628439903259, 0.7465327978134155, 0.7526086568832397, 0.7471932172775269, 0.7515519857406616, 0.7532690763473511, 0.7549861073493958, 0.7540615797042847, 0.7589486241340637, 0.7605336308479309, 0.7589486241340637, 0.7640998363494873, 0.7574957013130188], "val_loss": [1.9329699788774763, 1.8863987922668457, 1.8137205668858118, 1.6967714514051164, 1.5263880320957728, 1.3253115926470076, 1.1441710676465715, 1.0036153112139021, 0.9073259149278913, 0.8397425413131714, 0.7874340159552438, 0.7506564855575562, 0.718569108418056, 0.6943807091031756, 0.6745738983154297, 0.6569486686161586, 0.644405654498509, 0.6321837561471122, 0.6205388307571411, 0.6102070127214704, 0.6016937323978969, 0.5932176453726632, 0.5854483842849731, 0.5793132271085467, 0.5738491671425956, 0.5687189953667777, 0.565720932824271, 0.5599103484834943, 0.5545263971601214, 0.5514638594218663, 0.5448194061006818, 0.541623592376709, 0.5359367302485875, 0.5328501803534371, 0.5309575625828334, 0.5254455464226859, 0.5229894263403756, 0.5201628378459385, 0.5164818934031895, 0.5137566328048706, 0.5148589781352452, 0.5093221323830741, 0.5066273382731846, 0.5055267470223563, 0.5015098537717547, 0.4991388661520822, 0.49607440403529574, 0.49521822588784353, 0.4920693465641567, 0.48878867285592215, 0.4875873497554234, 0.4864401136125837, 0.4845366988863264, 0.4832273210797991, 0.4850757803235735, 0.4791487625667027, 0.479188186781747, 0.4745282105037144, 0.47452369758061], "val_accuracy": [0.3253333270549774, 0.40533334016799927, 0.46933332085609436, 0.5296666622161865, 0.5680000185966492, 0.5929999947547913, 0.6386666893959045, 0.668666660785675, 0.6836666464805603, 0.6986666917800903, 0.7089999914169312, 0.7039999961853027, 0.7103333473205566, 0.7173333168029785, 0.7256666421890259, 0.7326666712760925, 0.7310000061988831, 0.7386666536331177, 0.7423333525657654, 0.7426666617393494, 0.7436666488647461, 0.7429999709129333, 0.7513333559036255, 0.749666690826416, 0.7536666393280029, 0.7613333463668823, 0.7576666474342346, 0.7606666684150696, 0.7620000243186951, 0.7540000081062317, 0.7643333077430725, 0.7683333158493042, 0.7713333368301392, 0.765333354473114, 0.7670000195503235, 0.768666684627533, 0.7720000147819519, 0.7749999761581421, 0.7743333578109741, 0.777999997138977, 0.7766666412353516, 0.7753333449363708, 0.7766666412353516, 0.7799999713897705, 0.781333327293396, 0.7836666703224182, 0.7873333096504211, 0.7846666574478149, 0.7896666526794434, 0.7850000262260437, 0.7879999876022339, 0.7906666398048401, 0.7860000133514404, 0.7940000295639038, 0.7910000085830688, 0.7929999828338623, 0.7889999747276306, 0.7919999957084656, 0.7906666398048401]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 0, 0, 3, 3, 2, 4, 4, 2, 2, 3, 1, 1, 2], [48, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7822856903076172, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.286473070735929, 2.2449023196757385, 2.189293913443831, 2.1002647477433256, 1.9693070808185673, 1.7890109626010204, 1.6140690150435386, 1.4518138681971529, 1.3330777335113397, 1.2352259137674235, 1.1649948919233535, 1.1094990861004905, 1.0619404211240815, 1.0225238841616986, 0.9857673179739581, 0.9588352155376813, 0.9372591842608036, 0.9133048510554602, 0.8985412018945613, 0.879371139997221, 0.8629647430459096, 0.846928035704341, 0.8408360804202707, 0.8301599770961515, 0.8220848149831946, 0.7978598162986504, 0.7971887892310677, 0.7918128494289903, 0.7824388063106681, 0.7685441031998899, 0.7754359646653455, 0.7698511045370529, 0.7506222860247247, 0.7477788488941421, 0.7445163972672848, 0.7430428851943494, 0.7357219432433519, 0.7284034113007892, 0.7331937491822913, 0.7168589926839836, 0.7143258195999764, 0.7074096556652051, 0.7040634817844683, 0.6986219937129657, 0.7086128207040957, 0.6931633583275303, 0.6968267218248798, 0.6910562195546119, 0.6878303738396795, 0.6802138131386914, 0.6736811799632088, 0.6753540048745992, 0.6675765560980502, 0.6682527265560043, 0.6701747869393451, 0.6549106273416829, 0.6533396395284738, 0.6553655408471409, 0.6570176604621997], "accuracy": [0.1336679458618164, 0.23840972781181335, 0.3144895136356354, 0.372209757566452, 0.4233258366584778, 0.4651961326599121, 0.48646149039268494, 0.5251618027687073, 0.5468233823776245, 0.5781270861625671, 0.5925241112709045, 0.611411988735199, 0.6279223561286926, 0.632941484451294, 0.6523576974868774, 0.658961832523346, 0.6656980514526367, 0.6724342703819275, 0.6750759482383728, 0.6886804699897766, 0.6919825673103333, 0.6946242451667786, 0.6992471218109131, 0.6980583667755127, 0.6993792057037354, 0.7140403985977173, 0.7094175219535828, 0.7102100253105164, 0.7119271159172058, 0.7160216569900513, 0.7191916704177856, 0.7252674698829651, 0.7263241410255432, 0.7308149337768555, 0.7273808121681213, 0.7277770638465881, 0.7294940948486328, 0.733060359954834, 0.7329282760620117, 0.735041618347168, 0.7412495017051697, 0.7416457533836365, 0.739928662776947, 0.7397965788841248, 0.7407211661338806, 0.7454761862754822, 0.7408532500267029, 0.7442874312400818, 0.7495707273483276, 0.7441553473472595, 0.7508915662765503, 0.7516840696334839, 0.7532690763473511, 0.7541936039924622, 0.7577598690986633, 0.7586844563484192, 0.7557786107063293, 0.7614582180976868, 0.7563069462776184], "val_loss": [1.9342058045523507, 1.890019144330706, 1.8226230485098702, 1.7156290667397636, 1.5590132304600306, 1.367318766457694, 1.1859517778669084, 1.0383556229727608, 0.9349878856113979, 0.8618913207735334, 0.8061186075210571, 0.7663239921842303, 0.731899653162275, 0.7060292959213257, 0.6844967433384487, 0.6661267961774554, 0.6530390296663556, 0.6401710169655936, 0.6279583999088832, 0.6173788819994245, 0.6086794478552682, 0.5995762859072004, 0.5915886163711548, 0.5850082806178502, 0.5791865927832467, 0.5742665529251099, 0.5709066050393241, 0.5647193704332624, 0.5594385692051479, 0.5567912714821952, 0.5496276617050171, 0.5465435641152518, 0.5405327933175224, 0.5374115535191127, 0.5352724279676165, 0.5297924280166626, 0.5274015154157367, 0.5246024812970843, 0.5208872045789447, 0.5180751936776298, 0.5191597597939628, 0.5135632923671177, 0.5107796532767159, 0.5098980154309954, 0.5055181298937116, 0.5029467344284058, 0.5002963032041278, 0.49917476517813547, 0.49595119271959576, 0.49284940106528147, 0.4910945381437029, 0.4902176005499704, 0.4883049045290266, 0.4867989165442331, 0.48869473593575613, 0.4826756886073521, 0.4828382730484009, 0.4779037577765329, 0.47765510422842844], "val_accuracy": [0.32233333587646484, 0.40166667103767395, 0.46433332562446594, 0.5253333449363708, 0.5630000233650208, 0.5860000252723694, 0.625333309173584, 0.6633333563804626, 0.6819999814033508, 0.6970000267028809, 0.7046666741371155, 0.7016666531562805, 0.7070000171661377, 0.7136666774749756, 0.7250000238418579, 0.7319999933242798, 0.7303333282470703, 0.7360000014305115, 0.7403333187103271, 0.7393333315849304, 0.7419999837875366, 0.7403333187103271, 0.7473333477973938, 0.7493333220481873, 0.7523333430290222, 0.7583333253860474, 0.7549999952316284, 0.7599999904632568, 0.7599999904632568, 0.7493333220481873, 0.762333333492279, 0.7649999856948853, 0.7693333625793457, 0.7630000114440918, 0.7639999985694885, 0.765333354473114, 0.7723333239555359, 0.7730000019073486, 0.7739999890327454, 0.7766666412353516, 0.7763333320617676, 0.7753333449363708, 0.7736666798591614, 0.7793333530426025, 0.7793333530426025, 0.7803333401679993, 0.7873333096504211, 0.7816666960716248, 0.7889999747276306, 0.781000018119812, 0.7863333225250244, 0.7886666655540466, 0.7860000133514404, 0.7926666736602783, 0.7883333563804626, 0.7903333306312561, 0.7889999747276306, 0.7906666398048401, 0.7906666398048401]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [12, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7734285593032837, "mapping_values": [1, 5, 5, 4, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2839304478476157, 2.2276826935862473, 2.143829917706172, 2.0003029254953133, 1.7790943658457392, 1.5540265871659404, 1.3596291083701297, 1.2370223898252146, 1.1541763654143786, 1.074234546451143, 1.0214484510577948, 0.9761277434533345, 0.9401538881171003, 0.912760333700927, 0.8981752715736191, 0.8663382773008235, 0.8380515208380995, 0.8393439925373537, 0.8075938968846763, 0.7979281383766207, 0.7897690800927051, 0.7783126617230602, 0.7586354776663851, 0.7593078290183295, 0.7530239343863626, 0.7426546485023161, 0.7418388772114723, 0.7292401515229849, 0.7171771306529289, 0.709765350695819, 0.7050849841160939, 0.6949847664154122, 0.6984854873932584, 0.6917309051790667, 0.6852148491330765, 0.6740485725779465, 0.6791434858563616, 0.6825071889742286, 0.659658436738363, 0.6562141429683583, 0.6579974434552428, 0.6578912478805832, 0.6539637576382725, 0.6549181092007442], "accuracy": [0.14410249888896942, 0.2681283950805664, 0.3465856611728668, 0.41408005356788635, 0.4632149040699005, 0.5097081065177917, 0.5480121374130249, 0.5832782983779907, 0.6004490852355957, 0.6280544400215149, 0.6408664584159851, 0.654999315738678, 0.6675472259521484, 0.672170102596283, 0.6840575933456421, 0.6872276067733765, 0.7013604640960693, 0.69673752784729, 0.7113987803459167, 0.7103421092033386, 0.7185312509536743, 0.7217012047767639, 0.7289658188819885, 0.7232862114906311, 0.7255316376686096, 0.7293620109558105, 0.7283053994178772, 0.7327961921691895, 0.7390040755271912, 0.7428345084190369, 0.7434949278831482, 0.7450799345970154, 0.739928662776947, 0.7467969655990601, 0.7512878179550171, 0.7499669790267944, 0.7495707273483276, 0.7511557340621948, 0.7576277852058411, 0.7647602558135986, 0.7593448758125305, 0.7668735980987549, 0.7582882046699524, 0.7565711140632629], "val_loss": [1.925668784550258, 1.8628506660461426, 1.7545428276062012, 1.5759961605072021, 1.339583090373448, 1.1206070014408656, 0.9646682398659843, 0.8671370574406215, 0.8000928674425397, 0.7508208751678467, 0.7156137568610055, 0.6875359841755458, 0.6647752693721226, 0.6474425792694092, 0.6340884651456561, 0.6213403940200806, 0.6077872514724731, 0.601072004863194, 0.5898015669413975, 0.5837606872831073, 0.5764177356447492, 0.5721684183393206, 0.5629744870322091, 0.5600940499986921, 0.5516088349478585, 0.5575836726597377, 0.545693073953901, 0.5474057197570801, 0.5365450722830636, 0.5323170934404645, 0.5272868871688843, 0.5262355804443359, 0.5222915240696498, 0.5172903878348214, 0.516588738986424, 0.5116607461656842, 0.509448800768171, 0.5069206782749721, 0.50347786290305, 0.4989303009850638, 0.49870106152125765, 0.4973663772855486, 0.49976469789232525, 0.49191066196986605], "val_accuracy": [0.35066667199134827, 0.44333332777023315, 0.5080000162124634, 0.5633333325386047, 0.5799999833106995, 0.6293333172798157, 0.6773333549499512, 0.67166668176651, 0.7026666402816772, 0.7016666531562805, 0.7250000238418579, 0.7269999980926514, 0.7266666889190674, 0.7269999980926514, 0.737666666507721, 0.737333357334137, 0.7386666536331177, 0.7450000047683716, 0.7456666827201843, 0.7523333430290222, 0.750333309173584, 0.750333309173584, 0.7473333477973938, 0.7636666893959045, 0.7609999775886536, 0.7490000128746033, 0.7613333463668823, 0.7649999856948853, 0.7666666507720947, 0.7680000066757202, 0.7706666588783264, 0.7703333497047424, 0.7713333368301392, 0.7726666927337646, 0.7706666588783264, 0.7773333191871643, 0.7826666831970215, 0.7730000019073486, 0.7833333611488342, 0.7776666879653931, 0.7793333530426025, 0.7789999842643738, 0.7826666831970215, 0.7743333578109741]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [48, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [4, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.6328571438789368, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.257275513717133, 1.8300576247496296, 1.3110944505506865, 0.9833107767418753, 0.8669326800192194, 0.8328409831931074, 0.7766869164035934, 0.7508441418972249, 0.7416423711133057, 0.6720875715535504, 0.6529402973125671, 0.6380085622188895, 0.6019508912027661, 0.5930079660631677, 0.5645035012381472, 0.5469576606283162, 0.5409294991579195, 0.528907018661373, 0.5176886046575186, 0.5085071105258561, 0.4910136892763757, 0.4812539391364278, 0.4743471018524218, 0.45928048145155376, 0.4731812625119652, 0.45482249954955734, 0.436315638085146, 0.4407532645049679, 0.4263578280206244, 0.4168760352493073, 0.42896321065957127, 0.4110442510905787, 0.4253448622928335, 0.4050797947157549, 0.387554689184896, 0.398757435500488, 0.38536607382666277, 0.3800128585729207, 0.37937811700391766, 0.37812289084662, 0.38010383482071325, 0.3790712769965863, 0.3886249443409607], "accuracy": [0.1938977688550949, 0.4278166592121124, 0.559371292591095, 0.6440364718437195, 0.6857746839523315, 0.6926429867744446, 0.7123233675956726, 0.71100252866745, 0.7342491149902344, 0.7375511527061462, 0.7572315335273743, 0.7557786107063293, 0.7713643908500671, 0.7730814814567566, 0.7922335267066956, 0.7971205711364746, 0.7972526550292969, 0.7991018295288086, 0.8101968169212341, 0.8005547523498535, 0.8144234418869019, 0.8183859586715698, 0.8215559124946594, 0.8181217908859253, 0.82683926820755, 0.8261788487434387, 0.8360850811004639, 0.8372738361358643, 0.8411042094230652, 0.8367455005645752, 0.8348963260650635, 0.843481719493866, 0.8383304476737976, 0.8467837572097778, 0.8507462739944458, 0.8521991968154907, 0.8466516733169556, 0.8535200357437134, 0.858671247959137, 0.8504821062088013, 0.8490291833877563, 0.8557654023170471, 0.8598600029945374], "val_loss": [1.8073134422302246, 0.9680590970175607, 0.7331203733171735, 0.7080918039594378, 0.6144227811268398, 0.5960591690880912, 0.583451407296317, 0.5211292845862252, 0.4897102287837437, 0.4877760580607823, 0.4839434964316232, 0.4535130943570818, 0.4581269196101597, 0.4360857776233128, 0.4288221938269479, 0.4147953391075134, 0.4072001576423645, 0.41978431599480764, 0.4006537199020386, 0.38702608006341116, 0.4018644690513611, 0.3954365679195949, 0.39896425179072786, 0.39158506052834646, 0.38512017897197176, 0.3749364529337202, 0.37364453077316284, 0.38041313205446514, 0.3923575963292803, 0.37116484131131855, 0.3744157723018101, 0.38635891675949097, 0.38015944617135183, 0.37836854798453196, 0.391231860433306, 0.3744075298309326, 0.3862305624144418, 0.4073284779276167, 0.3958812100546701, 0.39815062284469604, 0.4306895562580654, 0.44576162099838257, 0.43316767045429777], "val_accuracy": [0.41466665267944336, 0.6433333158493042, 0.7006666660308838, 0.7143333554267883, 0.7266666889190674, 0.75, 0.7443333268165588, 0.7680000066757202, 0.7749999761581421, 0.7853333353996277, 0.7766666412353516, 0.7933333516120911, 0.8009999990463257, 0.8076666593551636, 0.8149999976158142, 0.8176666498184204, 0.8226666450500488, 0.8256666660308838, 0.8309999704360962, 0.8330000042915344, 0.8256666660308838, 0.8360000252723694, 0.8386666774749756, 0.8476666808128357, 0.8453333377838135, 0.8526666760444641, 0.8560000061988831, 0.8546666502952576, 0.8556666374206543, 0.8519999980926514, 0.8539999723434448, 0.8576666712760925, 0.8550000190734863, 0.8579999804496765, 0.8610000014305115, 0.8579999804496765, 0.8629999756813049, 0.8656666874885559, 0.8613333106040955, 0.8553333282470703, 0.8573333621025085, 0.856333315372467, 0.8553333282470703]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 8, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 5, 5, 0, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 0, 4, 7, 8, 2, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.4551428556442261, "mapping_values": [1, 6, 6, 5, 1, 1, 30, 30, 18, 12, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, alpha), grad))))), alpha), tf.math.add(beta, grad)), grad), tf.math.multiply(tf.math.subtract(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.pow(grad, grad)))))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.087521431988036, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2856954038143158, 0.2456742823123932, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.4462546280452184, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.45633333921432495, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 9, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [94, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 5, 3, 1, 3, 2, 6, 2, 7, 8, 9, 2, 3, 3, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 3, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.303209566688966, 2.3046152188620153, 2.3066215902791285, 2.3071381384434244, 2.3116963510547315, 2.3133748724255594, 2.319229122292112, 2.3223621088201027, 2.329475028876064, 2.343468964328194, 2.378863429002884, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09008057415485382, 0.08770307898521423, 0.08189142495393753, 0.08149518072605133, 0.08096684515476227, 0.08175934851169586, 0.07475894689559937, 0.07938185334205627, 0.0730418711900711, 0.07185312360525131, 0.08083476126194, 0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972287859235491, 1.9737706184387207, 1.9755321911403112, 1.9775607926504952, 1.97990996497018, 1.982151917048863, 1.985504150390625, 1.9887448038373674, 1.9943835394723075, 2.0065246990748813, 2.052994796207973, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03099999949336052, 0.02666666731238365, 0.023333333432674408, 0.022333333268761635, 0.026333333924412727, 0.03200000151991844, 0.050333332270383835, 0.06400000303983688, 0.07766667008399963, 0.09533333033323288, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [2, 3, 1, 3, 1, 3, 2, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [48, 86, 78, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.359776389628763, 49200.978279939845, Infinity, 2.6456617134405622, 3.7195795750999023, 6.079438954800379, 9.668241594571795], "accuracy": [0.04583278298377991, 0.0470215305685997, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2291171891348704, 40482041682797.71, 2.0978030477251326, 2.6520957265581404, 4.198412758963449, 6.866558483668736, 10.505420412336077], "val_accuracy": [0.003000000026077032, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [26584748.478525557, 506942030.6157707, 2327994145.001717, 6476320265.805838, 13880130722.709286, 25599066808.011623], "accuracy": [0.09681680053472519, 0.1026284471154213, 0.1006472036242485, 0.10342095047235489, 0.09694888442754745, 0.09800554811954498], "val_loss": [100212914.28571428, 800828964.5714285, 2701815515.428571, 6403156406.857142, 12504835803.428572, 21606770395.42857], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 5, 5, 7, 2, 2, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302232726847475, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.320259068919494, 2.3774625964373204, 2.4955456802291076, 3.6824656750909908, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06194690242409706, 0.022057851776480675, 0.012944129295647144, 0.03909655287861824, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.013566221509661, 2.08341121673584, 2.2714337621416365, 14.895177023751396, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.003666666569188237, 0.0033333334140479565, 0.006000000052154064, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [2, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [48, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 41, 41, 25, 16, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, alpha))))), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), grad), tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad))), tf.math.add(beta, beta))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302232726847475, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 6, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 41, 41, 25, 16, 4, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, grad))))), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.subtract(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad))), tf.math.add(beta, beta))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302232726847475, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 2, 3, 9, 4, 2, 1, 3, 1, 6, 2, 2, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 1, 0, 0, 1, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [2, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025582478172697, 2.302449725669656, 2.30239686023101, 2.300886450473895, 2.3020173868152365, 2.301672197052705], "accuracy": [0.09192973375320435, 0.09232597798109055, 0.08875974267721176, 0.08981640636920929, 0.09166556596755981, 0.09496764093637466], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 6, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [61, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 1, 1, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 2, 3, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025582478172697, 2.302449725669656, 2.30239686023101, 2.300886450473895, 2.3020173868152365, 2.301672197052705], "accuracy": [0.09192973375320435, 0.09232597798109055, 0.08875974267721176, 0.08981640636920929, 0.09166556596755981, 0.09496764093637466], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302587749431823, 2.302654468876228, 2.3029971575267782, 2.302047214047028, 2.3041550569593503, 2.304672981092659], "accuracy": [0.09166556596755981, 0.09179764986038208, 0.0874389111995697, 0.08677849918603897, 0.08849557489156723, 0.08928807079792023], "val_loss": [1.971095085144043, 1.9713404519217355, 1.9717593874250139, 1.9723728724888392, 1.973245075770787, 1.9743671417236328], "val_accuracy": [0.036666665226221085, 0.035999998450279236, 0.03466666489839554, 0.029333332553505898, 0.0273333340883255, 0.024666666984558105]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 8, 9, 6, 2, 8, 2, 8, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034285712987184525, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302626462109321, 2.3026511659081805, 2.3027840818254752, 2.3013902289630273, 2.3027384603626584, 2.3024678929386484], "accuracy": [0.09140139818191528, 0.09192973375320435, 0.08717474341392517, 0.08968432247638702, 0.09034473448991776, 0.09298639744520187], "val_loss": [1.9711352757045202, 1.9712582315717424, 1.9714051655360632, 1.9715303012302943, 1.971668107169015, 1.9717882020132882], "val_accuracy": [0.03700000047683716, 0.035999998450279236, 0.035999998450279236, 0.03566666692495346, 0.03500000014901161, 0.03466666489839554]}}]