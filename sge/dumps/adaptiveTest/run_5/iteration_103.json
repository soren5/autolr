[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7771428823471069, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.266224291125907, 2.141144615516466, 1.8601106405100725, 1.4854943464933181, 1.2598427097952645, 1.1158106792809201, 1.0310164224895204, 0.9597212742301121, 0.9124015847988857, 0.9023648599954156, 0.8632723924081087, 0.8458927100156008, 0.8099101099119588, 0.7899977666685185, 0.7764529777303772, 0.7713331881137556, 0.7558818203016373, 0.7465501997480618, 0.7306272583063866, 0.7191219367150854, 0.7201692073525628, 0.7117607971113812, 0.6978545022080084, 0.6980037480029826, 0.6715576572031503, 0.6878554446034979, 0.6715250556038481, 0.6582959235509657, 0.6556300520739456, 0.6545614998779277, 0.6480348318748312, 0.6456790290661713], "accuracy": [0.18782195448875427, 0.34803855419158936, 0.43547746539115906, 0.5177651643753052, 0.5646545886993408, 0.6057323813438416, 0.6361114978790283, 0.655527651309967, 0.6798309087753296, 0.68101966381073, 0.6890767216682434, 0.696209192276001, 0.7088891863822937, 0.7132478952407837, 0.7214370369911194, 0.7209087014198303, 0.724210798740387, 0.7288337349891663, 0.7331924438476562, 0.7375511527061462, 0.7329282760620117, 0.7391361594200134, 0.7384757399559021, 0.7367587089538574, 0.7528728246688843, 0.7454761862754822, 0.7508915662765503, 0.7601373791694641, 0.7577598690986633, 0.7563069462776184, 0.7598732113838196, 0.7642319202423096], "val_loss": [1.8820389338902064, 1.6888081346239363, 1.3130649157932825, 0.9928741114480155, 0.8355939728873116, 0.7480764218739101, 0.7005711964198521, 0.6578431640352521, 0.669751695224217, 0.6301858254841396, 0.5985046795436314, 0.5877933842795235, 0.5783543757029942, 0.5650465318134853, 0.5705250161034721, 0.545056666646685, 0.5569682461874825, 0.5330162559236798, 0.5333908115114484, 0.5212329626083374, 0.5222624370029995, 0.5173210075923375, 0.5040871586118426, 0.5017455305371966, 0.49702579634530203, 0.4986236776624407, 0.4883800745010376, 0.49343398639134, 0.4823153018951416, 0.5071034942354474, 0.47400801522391184, 0.47341157708849224], "val_accuracy": [0.41366666555404663, 0.54666668176651, 0.5996666550636292, 0.6456666588783264, 0.6926666498184204, 0.7153333425521851, 0.718999981880188, 0.7260000109672546, 0.7213333249092102, 0.7253333330154419, 0.7400000095367432, 0.7396666407585144, 0.7523333430290222, 0.7630000114440918, 0.7519999742507935, 0.7609999775886536, 0.7566666603088379, 0.7616666555404663, 0.7663333415985107, 0.7796666622161865, 0.7739999890327454, 0.7649999856948853, 0.7756666541099548, 0.7730000019073486, 0.7850000262260437, 0.7730000019073486, 0.7886666655540466, 0.7806666493415833, 0.7863333225250244, 0.7603333592414856, 0.7833333611488342, 0.7850000262260437]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [6, 2, 3, 1, 3, 2, 5, 3, 2, 4, 3, 2, 0, 2, 5, 9, 2, 4, 9, 3, 5, 0, 9, 9, 8, 6, 5, 1, 2, 0], [3, 2, 2, 0, 0, 2, 0, 3, 1, 1, 0, 2, 1, 3, 2, 0, 2, 1], [40, 28, 79, 65, 41, 87, 14, 68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7702857255935669, "mapping_values": [1, 36, 36, 24, 12, 8, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(alpha, grad), alpha))), alpha)), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293067000277873, 2.272557831270316, 2.249704209269628, 2.2211148870808493, 2.186887712274576, 2.1465238310232326, 2.0898891085442175, 2.013936596886042, 1.931397046174954, 1.8314532959985539, 1.7301444182416719, 1.6292666351916436, 1.5297498482723184, 1.4467391339369957, 1.3648788156983025, 1.312764112676344, 1.2653005100937254, 1.2258806087715342, 1.1739705085219048, 1.1388177047268968, 1.1051976365530416, 1.0829081216965055, 1.0617461012118623, 1.0519071168682879, 1.0016977377319538, 0.9946062450458691, 0.980357111366339, 0.9613714918500129, 0.9459687523428696, 0.9424027647985963, 0.9217304117203137, 0.9227763232679699, 0.8948992105475695, 0.894194787779284, 0.8882722880121992, 0.8720753791703524, 0.8612459503806043, 0.8509831449469366, 0.8468396725545643, 0.8474905650141122, 0.8399614262747774, 0.8350872408365922, 0.8246726210894224, 0.8274207174061564, 0.8140472987497708, 0.8184976864720789, 0.7998241753059214, 0.8061330489840852, 0.7945053574903813, 0.7900179010561161, 0.7973167549160887, 0.7837626023882054, 0.7764074591802427, 0.7752765047394321, 0.761959162449336, 0.7603158336651875, 0.7774919096457724, 0.7589943755918475, 0.7572012423067643, 0.7611653758723423, 0.7434195299520784, 0.7464336211875665, 0.742607388411688, 0.7454773227001115, 0.7360179877756704, 0.7343545853973553, 0.7294484073097648, 0.7246002652043317, 0.721952355352013, 0.7246610788369396, 0.7196149730317077, 0.7165071821294645, 0.7157356747546767, 0.7136873715053916, 0.713029400279824, 0.710416193446778, 0.7080626242967912, 0.71262711552644, 0.7014161210176006, 0.7063964761212014, 0.6990706957074645], "accuracy": [0.12019548565149307, 0.16999074816703796, 0.2238806039094925, 0.2748646140098572, 0.32782986760139465, 0.35622772574424744, 0.3809272348880768, 0.41368380188941956, 0.43045833706855774, 0.4550257623195648, 0.4699511229991913, 0.4888390004634857, 0.5148593187332153, 0.524501383304596, 0.5506538152694702, 0.5540879964828491, 0.5650508403778076, 0.5688812732696533, 0.5945053696632385, 0.5984678268432617, 0.6127327680587769, 0.6166952848434448, 0.622639000415802, 0.6258090138435364, 0.6485272645950317, 0.6457535624504089, 0.6453573107719421, 0.6573768258094788, 0.6621318459510803, 0.6654338836669922, 0.6693964004516602, 0.669792652130127, 0.6781138777732849, 0.6795667409896851, 0.6767930388450623, 0.6820763349533081, 0.6934354901313782, 0.6946242451667786, 0.6966054439544678, 0.700171709060669, 0.6936996579170227, 0.6971337795257568, 0.7010962963104248, 0.6993792057037354, 0.7088891863822937, 0.7029454708099365, 0.7100779414176941, 0.7102100253105164, 0.7119271159172058, 0.7147008180618286, 0.7080966830253601, 0.7147008180618286, 0.7257958054542542, 0.7182670831680298, 0.7201162576675415, 0.720380425453186, 0.7181349992752075, 0.7243428826332092, 0.7220974564552307, 0.7187954187393188, 0.7322678565979004, 0.7298903465270996, 0.7255316376686096, 0.7289658188819885, 0.7322678565979004, 0.7318716049194336, 0.7367587089538574, 0.7338528633117676, 0.7428345084190369, 0.7363624572753906, 0.7411174178123474, 0.7408532500267029, 0.7427024245262146, 0.735569953918457, 0.7396644949913025, 0.7412495017051697, 0.7401928305625916, 0.7387399077415466, 0.7420420050621033, 0.7380794882774353, 0.7417778372764587], "val_loss": [1.9506858416966029, 1.9298691068376814, 1.9061522483825684, 1.876985822405134, 1.8398178645542689, 1.7917491367885046, 1.7300634384155273, 1.6520471232278007, 1.5604204790932792, 1.457613808768136, 1.3512515340532576, 1.2484945229121618, 1.1537692887442452, 1.0730975355420793, 1.0041430677686418, 0.9481324808938163, 0.90167464528765, 0.8631528105054583, 0.8294842413493565, 0.8016881602151054, 0.7781128713062831, 0.7571007183619908, 0.7386540174484253, 0.7241592577525547, 0.708509053502764, 0.6966015781675067, 0.6856600216456822, 0.6747791937419346, 0.6645832402365548, 0.6585321937288556, 0.6483156340462821, 0.642639126096453, 0.6344514233725411, 0.6296774659837995, 0.6233216183526176, 0.6161655698503766, 0.6106470142092023, 0.6064095497131348, 0.6020169258117676, 0.5957448652812413, 0.5926855632237026, 0.5890951497214181, 0.5858484847205025, 0.582735504422869, 0.5783307892935616, 0.5752149309430804, 0.571367655481611, 0.5692300285611834, 0.566586800983974, 0.5626542908804757, 0.5598059211458478, 0.5597006252833775, 0.555448055267334, 0.5555922303880964, 0.5505078860691616, 0.5486638716288975, 0.5463478735515049, 0.544433457510812, 0.5425986903054374, 0.5392041376658848, 0.5379750728607178, 0.534038611820766, 0.5326939821243286, 0.5302915232522147, 0.529974273272923, 0.5291823319026402, 0.5258469411305019, 0.5247704131262643, 0.5212344952992031, 0.5194280658449445, 0.5186829226357597, 0.5174083880015782, 0.5165451424462455, 0.5137150287628174, 0.5118701117379325, 0.5113317455564227, 0.5093545573098319, 0.5081836496080671, 0.5070986066545758, 0.5040939024516514, 0.5027424267360142], "val_accuracy": [0.21199999749660492, 0.35066667199134827, 0.39100000262260437, 0.4336666762828827, 0.4596666693687439, 0.4893333315849304, 0.5149999856948853, 0.5503333210945129, 0.5676666498184204, 0.5860000252723694, 0.5933333039283752, 0.6056666374206543, 0.6333333253860474, 0.6476666927337646, 0.668666660785675, 0.6736666560173035, 0.6896666884422302, 0.6943333148956299, 0.6966666579246521, 0.7003333568572998, 0.7070000171661377, 0.7070000171661377, 0.7093333601951599, 0.7136666774749756, 0.7206666469573975, 0.7200000286102295, 0.7286666631698608, 0.7266666889190674, 0.7276666760444641, 0.7236666679382324, 0.7276666760444641, 0.734333336353302, 0.7350000143051147, 0.7369999885559082, 0.7350000143051147, 0.7360000014305115, 0.7450000047683716, 0.7463333606719971, 0.7493333220481873, 0.750333309173584, 0.7509999871253967, 0.7463333606719971, 0.7516666650772095, 0.7556666731834412, 0.7546666860580444, 0.7536666393280029, 0.7546666860580444, 0.7546666860580444, 0.7606666684150696, 0.762333333492279, 0.7613333463668823, 0.7630000114440918, 0.7646666765213013, 0.7630000114440918, 0.7643333077430725, 0.7593333125114441, 0.768666684627533, 0.7673333287239075, 0.7693333625793457, 0.7726666927337646, 0.7703333497047424, 0.7716666460037231, 0.7693333625793457, 0.7716666460037231, 0.7730000019073486, 0.7706666588783264, 0.7730000019073486, 0.7739999890327454, 0.7766666412353516, 0.7756666541099548, 0.7773333191871643, 0.7766666412353516, 0.7736666798591614, 0.7770000100135803, 0.7770000100135803, 0.7796666622161865, 0.7789999842643738, 0.7760000228881836, 0.7793333530426025, 0.7776666879653931, 0.7766666412353516]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7637143135070801, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293067000277873, 2.2725578627613445, 2.249703952869672, 2.221115327955253, 2.1868869205271295, 2.1465221442062745, 2.089886130595078, 2.0139321546985363, 1.9313879417878699, 1.8314420988436593, 1.7301378239100211, 1.6292579111217145, 1.5297390586428277, 1.4467333177486668, 1.3648693727196766, 1.3127653413460696, 1.265302365072777, 1.2258978156586207, 1.1739918535978504, 1.1388614903729526, 1.1052443743570841, 1.082926205262343, 1.06180211561168, 1.0519272839278277, 1.0017231530076272, 0.9946224321117333, 0.9803782023411732, 0.9613679879298378, 0.9459634572917035, 0.9423955292781079, 0.9217016354543721, 0.9227335394617588, 0.8948548029615674, 0.8941857138518975, 0.8882619212757343, 0.8721022304133212, 0.8612376110523196, 0.8509358745587422, 0.8468112154974362, 0.8474578029601455, 0.8399585647322262, 0.8350981238133651, 0.8246888014398247, 0.8274146837171641, 0.81406535956334, 0.8184642541079458, 0.7997395567701256, 0.8061481805572641, 0.7944831721629323, 0.7899660758291331, 0.797285658895001, 0.7838260803035599, 0.7763645280432534, 0.7752446925100035, 0.7618725870059009, 0.760354681273871, 0.7774962676341397, 0.7590599928817351, 0.7572073674063404, 0.7612892478102187, 0.743465764316916, 0.7464611730035805, 0.7427313312831068, 0.7454819349706637, 0.7361255406609081], "accuracy": [0.12019548565149307, 0.16999074816703796, 0.2238806039094925, 0.2748646140098572, 0.32782986760139465, 0.35622772574424744, 0.3809272348880768, 0.41368380188941956, 0.43059042096138, 0.4550257623195648, 0.4699511229991913, 0.48910316824913025, 0.5148593187332153, 0.5247655510902405, 0.5506538152694702, 0.5544841885566711, 0.5649187564849854, 0.568749189376831, 0.5946374535560608, 0.598599910736084, 0.6124686598777771, 0.6164311170578003, 0.622639000415802, 0.6259410977363586, 0.6482630968093872, 0.6457535624504089, 0.6449610590934753, 0.6580372452735901, 0.6621318459510803, 0.6655659675598145, 0.6693964004516602, 0.6695284843444824, 0.6781138777732849, 0.6794346570968628, 0.6767930388450623, 0.6818121671676636, 0.6934354901313782, 0.6947563290596008, 0.6964733600616455, 0.6997754573822021, 0.6940959095954895, 0.6970016956329346, 0.7005679607391357, 0.6996433734893799, 0.7092854380607605, 0.7029454708099365, 0.7100779414176941, 0.7096816897392273, 0.7119271159172058, 0.7145687341690063, 0.7073041796684265, 0.7152291536331177, 0.7265883088111877, 0.7174745798110962, 0.7207766771316528, 0.7207766771316528, 0.7181349992752075, 0.7246070504188538, 0.722229540348053, 0.7187954187393188, 0.7321357727050781, 0.7302865982055664, 0.726192057132721, 0.7283053994178772, 0.7322678565979004], "val_loss": [1.9506858416966029, 1.9298691068376814, 1.9061521802629744, 1.8769861630031042, 1.839817796434675, 1.7917466163635254, 1.7300609861101424, 1.6520410946437292, 1.5604077066693987, 1.4576024327959334, 1.3512399537222726, 1.2484841006142753, 1.1537578446524483, 1.0730952875954765, 1.0041446685791016, 0.9481174264635358, 0.9016732828957694, 0.8631551095417568, 0.8295309884207589, 0.8017659868512835, 0.7781750815255302, 0.7571618216378349, 0.7386926582881382, 0.7241712978907994, 0.7085450376783099, 0.696621196610587, 0.6857008763722011, 0.6747849157878331, 0.6646162782396589, 0.658560940197536, 0.6483743701662336, 0.6426695755549839, 0.6344502483095441, 0.6296449899673462, 0.6232683147702899, 0.6161560671670097, 0.6106207711356026, 0.6063743489129203, 0.6019712686538696, 0.5957054070064, 0.5927124704633441, 0.5890982832227435, 0.5857879945210048, 0.5827017511640277, 0.5783825090953282, 0.5752568755831037, 0.5715024300983974, 0.5692420176097325, 0.5667507307870048, 0.5627631119319371, 0.5599076577595302, 0.5597269364765712, 0.5554429633276803, 0.5555260351725987, 0.5504865305764335, 0.5486478124346051, 0.5463751384190151, 0.5444059371948242, 0.5425802980150495, 0.5391372442245483, 0.5379689250673566, 0.5340063912527901, 0.5326387541634696, 0.5302800280707223, 0.5300699642726353], "val_accuracy": [0.21199999749660492, 0.35066667199134827, 0.39100000262260437, 0.4336666762828827, 0.4596666693687439, 0.4893333315849304, 0.5149999856948853, 0.5503333210945129, 0.5680000185966492, 0.5860000252723694, 0.5929999947547913, 0.6056666374206543, 0.6333333253860474, 0.6476666927337646, 0.6690000295639038, 0.6736666560173035, 0.6896666884422302, 0.6946666836738586, 0.6963333487510681, 0.7003333568572998, 0.7070000171661377, 0.7070000171661377, 0.7093333601951599, 0.7136666774749756, 0.7206666469573975, 0.7200000286102295, 0.7286666631698608, 0.7263333201408386, 0.7279999852180481, 0.7233333587646484, 0.7276666760444641, 0.734666645526886, 0.7353333234786987, 0.7369999885559082, 0.7350000143051147, 0.7363333106040955, 0.7453333139419556, 0.7463333606719971, 0.7490000128746033, 0.7506666779518127, 0.7513333559036255, 0.746999979019165, 0.7516666650772095, 0.7553333044052124, 0.7546666860580444, 0.7536666393280029, 0.7543333172798157, 0.7543333172798157, 0.7613333463668823, 0.762333333492279, 0.7609999775886536, 0.762666642665863, 0.7643333077430725, 0.762666642665863, 0.7643333077430725, 0.7599999904632568, 0.7689999938011169, 0.7673333287239075, 0.7696666717529297, 0.7733333110809326, 0.7696666717529297, 0.7716666460037231, 0.7699999809265137, 0.7713333368301392, 0.7730000019073486]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [0, 37, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 6, 2, 0, 4, 0, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 1, 5, 1, 3, 3, 4], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.43942856788635254, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2347630145070796, 2.266045743101828, 2.304279439973006, 2.30322295469048, 2.303065912299357, 2.303044350738334], "accuracy": [0.20552106201648712, 0.19376568496227264, 0.09391097724437714, 0.09589222073554993, 0.09470347315073013, 0.09906221181154251], "val_loss": [1.3414395877293177, 1.974986961909703, 1.9737982749938965, 1.9736533164978027, 1.9736522265842982, 1.9736189161028181], "val_accuracy": [0.4516666531562805, 0.10166666656732559, 0.10166666656732559, 0.09799999743700027, 0.09933333098888397, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [78], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4308571517467499, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.234551446092379, 2.260254276962391, 2.2988644305347465, 2.234602668990454, 2.3042038029935368, 2.280413594086566], "accuracy": [0.20578522980213165, 0.15757495164871216, 0.11081759631633759, 0.1904636174440384, 0.10460969805717468, 0.1974640041589737], "val_loss": [1.355398314339774, 1.9735888072422572, 1.9126440456935339, 1.9770939690726144, 1.9638408252171107, 1.9434152330671037], "val_accuracy": [0.44333332777023315, 0.09799999743700027, 0.31066668033599854, 0.0989999994635582, 0.218666672706604, 0.3050000071525574]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 2, 2, 1, 0, 6, 5, 3, 2, 5, 9, 2, 2, 0, 5, 1, 2, 0, 9, 9, 5, 6, 3, 5, 8, 4, 5, 9], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 2, 2, 0, 2], [16, 63, 94, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4148571491241455, "mapping_values": [1, 17, 17, 11, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.23469871763603, 2.546047251663188, 2.308617426939392, 2.251355063724732, 2.2752293653302993, 2.219556818674773], "accuracy": [0.20340773463249207, 0.2262580841779709, 0.10117553919553757, 0.18002906441688538, 0.15731078386306763, 0.20921939611434937], "val_loss": [1.3651812757764543, 1.9919913836887904, 1.9701918874468123, 1.8920478139604842, 1.7129292828696114, 1.5384818485804967], "val_accuracy": [0.4416666626930237, 0.08433333039283752, 0.11266666650772095, 0.2526666522026062, 0.2919999957084656, 0.39233332872390747]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4091428518295288, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2347468432654574, 2.3510703563123347, 2.3051188414390644, 2.3030608689481116, 2.302940788900123, 2.3017873062417964], "accuracy": [0.20340773463249207, 0.1682736724615097, 0.09430722147226334, 0.09602430462837219, 0.09642054885625839, 0.10566636174917221], "val_loss": [1.3732558659144811, 1.976654120853969, 1.9740267481122697, 1.9735997744968958, 1.973132542201451, 1.968477725982666], "val_accuracy": [0.4269999861717224, 0.10066666454076767, 0.09799999743700027, 0.0989999994635582, 0.10233332961797714, 0.19766665995121002]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [0, 37, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 6, 2, 0, 4, 0, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 1, 5, 1, 3, 3, 4], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [8, 4], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(alpha, tf.math.negative(tf.math.multiply(grad, alpha)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 9, 2, 1, 4, 8, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 2, 1, 4, 0, 5], [42, 79], [0, 0, 1, 0, 1], [0, 1, 1, 0], [4, 4], [0, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 18, 18, 10, 8, 2, 3, 2, 1, 1, 1, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(beta, tf.math.multiply(tf.math.add(grad, beta), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4], [3, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302974970396468, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 2, 1, 4, 4, 5, 3, 2, 9, 3, 2, 2, 0, 5, 1, 2, 4, 9, 9, 5, 6, 3, 5, 5, 4, 5, 9, 7, 3, 1, 3, 7, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 2, 2, 0, 2, 0], [40, 28, 79, 92, 41, 36, 24, 16, 53], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 34, 18, 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), grad), alpha)), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(grad, grad))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 2, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 3, 1, 4, 2, 4, 2, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 2, 1, 0, 3, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.add(beta, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.multiply(grad, beta), tf.math.add(beta, alpha))))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 7, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302974970396468, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 3, 2, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 2, 5, 6, 2, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3017936311204594, 2.301745499224317, 2.3013037495593576, 2.3003262319994358, 2.2995685155223846, 2.300544835037606, 2.3006401714505835, 2.3007454610440896, 2.3011212453173293, 2.3016710474412077, 2.301667752881265, 2.301776886931059, 2.3019687809161287], "accuracy": [0.09760929644107819, 0.09708096832036972, 0.09245806187391281, 0.0948355570435524, 0.10077928751707077, 0.09549596905708313, 0.1018359512090683, 0.09760929644107819, 0.10170386731624603, 0.09853387624025345, 0.10289261490106583, 0.10342095047235489, 0.10685510188341141], "val_loss": [1.9706403187343053, 1.970470632825579, 1.9705211094447546, 1.9707532610212053, 1.971158504486084, 1.9716067995343889, 1.9720302990504675, 1.9724102701459612, 1.9727230072021484, 1.9729537963867188, 1.9731602668762207, 1.9733218465532576, 1.9734373092651367], "val_accuracy": [0.04699999839067459, 0.06066666543483734, 0.07233333587646484, 0.08266666531562805, 0.09566666930913925, 0.10066666454076767, 0.10133333504199982, 0.10499999672174454, 0.10333333164453506, 0.09566666930913925, 0.08799999952316284, 0.09066666662693024, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5, 8, 1, 3, 8, 8, 6, 8, 2, 2, 1, 4, 5, 1, 9, 4, 5, 8, 5, 8, 8, 7], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 2, 2, 0, 2, 1, 2, 0, 1, 1, 2, 1, 0, 0, 2], [16, 63, 93, 92, 41, 36, 91, 33, 43, 70], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06942857056856155, "mapping_values": [1, 38, 38, 22, 16, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, grad))), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.6683467815360373, 2.706073767662426, 2.5949238668327648, 2.4879591285812386, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19482234120368958, 0.11821424216032028, 0.09311848133802414, 0.09919429570436478, 0.12032756209373474, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.5103098324366977, 2.1943560327802385, 2.0558227130344937, 62608.453125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.0989999994635582, 0.09966666996479034, 0.2266666740179062, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 5, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 0, 3, 4, 0, 3, 6, 3, 5, 8, 6, 5, 5, 8], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 2], [40, 28, 26, 29, 31, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 1, 0, 5], [42, 25], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [23], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 46, 46, 28, 18, 3, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), grad)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, grad))), tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020394027918054, 2.303018930959443, 2.3028840680148197, 2.3017513523988593, 2.3007935660783847, 2.3032622399693548], "accuracy": [0.09589222073554993, 0.09113723784685135, 0.09126931428909302, 0.08611807972192764, 0.09655263274908066, 0.09074098616838455], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 2, 0, 1, 4, 6, 5, 1, 2, 4, 3, 2, 2, 0, 5, 1, 2, 3, 9, 9, 5, 1, 3, 5, 8, 4, 6, 9], [3, 2, 2, 0, 0, 2, 0, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [16, 63, 93, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1], [3, 4, 2], [2, 0, 1, 5, 3, 4], [88], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3020394027918054, 2.303018930959443, 2.3028840680148197, 2.3017513523988593, 2.3007935660783847, 2.3032622399693548], "accuracy": [0.09589222073554993, 0.09113723784685135, 0.09126931428909302, 0.08611807972192764, 0.09655263274908066, 0.09074098616838455], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3020394027918054, 2.303018930959443, 2.3028840680148197, 2.3017513523988593, 2.3007935660783847, 2.3032622399693548], "accuracy": [0.09589222073554993, 0.09113723784685135, 0.09126931428909302, 0.08611807972192764, 0.09655263274908066, 0.09074098616838455], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 2, 3, 1, 3, 2, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 2, 5, 6, 2, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 1, 3, 2, 0, 2, 1], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020393533193992, 2.303018692540864, 2.3028838295962406, 2.301750970034788, 2.300793233186719, 2.3032616056770525], "accuracy": [0.09589222073554993, 0.09113723784685135, 0.09126931428909302, 0.08611807972192764, 0.09655263274908066, 0.09074098616838455], "val_loss": [1.9710068021501814, 1.9710065296718053, 1.9710064615522112, 1.9710064615522112, 1.9710063934326172, 1.971006257193429], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 7, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [0, 4], [5, 2, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.025714285671710968, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.630927353928102, 2.7770927036758017, 2.62476891237495, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19495442509651184, 0.11900673806667328, 0.09602430462837219, 0.11161009222269058, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.496108259473528, 2.201107910701207, 6.548245702471052, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.0989999994635582, 0.17866666615009308, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]