[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 3, 5, 3, 6, 4, 1, 8, 2, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8174285888671875, "mapping_values": [1, 30, 30, 18, 12, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9984656958736842, 1.704572972447062, 1.330243653136946, 1.050916081634668, 0.9662046757561262, 0.8715121114904287, 0.787566926902579, 0.7501349642197721, 0.7298852023966891, 0.6953340776371933, 0.6861040149429738, 0.685470263758954, 0.6441660513652393, 0.6222630321562267, 0.6139567550446426, 0.6063259619102029, 0.5907346179078772, 0.5625737119722423, 0.5626222103373596, 0.5776416834917649, 0.5375682405587184, 0.5361719257040204, 0.49292923361082686, 0.5224948139584942, 0.518015007742203, 0.5017927421665053, 0.5144712463928613, 0.4910087537976493, 0.47196050799360617, 0.467323714834021, 0.48935498357244284, 0.44556260483690996, 0.44495195562514206, 0.4321756795365592, 0.44159909167215416, 0.44108934716431375, 0.41236023129945765, 0.4431780147994939, 0.431781130400883, 0.41462819700023174, 0.4086221270455094], "accuracy": [0.3183199167251587, 0.4415532946586609, 0.5233126282691956, 0.5929203629493713, 0.6345264911651611, 0.6680755615234375, 0.6970016956329346, 0.7057191729545593, 0.7153612375259399, 0.7363624572753906, 0.7383436560630798, 0.7251353859901428, 0.7506273984909058, 0.7556465268135071, 0.767401933670044, 0.7623828053474426, 0.7734777331352234, 0.7840443849563599, 0.7802139520645142, 0.7792893648147583, 0.7926297783851624, 0.789459764957428, 0.8131026029586792, 0.7989697456359863, 0.8013472557067871, 0.8092722296714783, 0.8053097128868103, 0.8145555257797241, 0.8171972036361694, 0.8162726163864136, 0.8127063512802124, 0.8339717388153076, 0.8304054737091064, 0.8319904804229736, 0.8343679904937744, 0.8347642421722412, 0.8462554216384888, 0.8222163319587708, 0.8360850811004639, 0.839519202709198, 0.8388587832450867], "val_loss": [1.0296848842075892, 1.3141327244894845, 1.0024026462009974, 0.70911819594247, 0.6851229837962559, 0.5984207902635846, 0.6093504088265556, 0.5701433420181274, 0.5724198307309832, 0.5607996497835431, 0.5392882823944092, 0.5293372358594622, 0.5202074221202305, 0.4866786173411778, 0.5247209583009992, 0.473747798374721, 0.4736018010548183, 0.46790615149906706, 0.46625701018742155, 0.45276715074266705, 0.4370748060090201, 0.428198048046657, 0.4160517794745309, 0.43468735047749113, 0.4047870465687343, 0.4152623840740749, 0.39827113492148264, 0.41178628376552034, 0.39095339604786467, 0.3903904046331133, 0.40363491433007376, 0.4035725849015372, 0.4005201203482492, 0.38026914426258634, 0.3775879570416042, 0.3684653214045933, 0.40312514134815763, 0.37507752009800505, 0.36993859495435444, 0.3687796337263925, 0.3641413450241089], "val_accuracy": [0.6019999980926514, 0.5253333449363708, 0.5703333616256714, 0.6639999747276306, 0.6830000281333923, 0.7310000061988831, 0.6970000267028809, 0.7210000157356262, 0.7419999837875366, 0.7160000205039978, 0.7513333559036255, 0.7403333187103271, 0.753333330154419, 0.768666684627533, 0.7613333463668823, 0.7839999794960022, 0.7903333306312561, 0.7753333449363708, 0.7796666622161865, 0.7876666784286499, 0.7993333339691162, 0.8050000071525574, 0.812666654586792, 0.8026666641235352, 0.8159999847412109, 0.8180000185966492, 0.8183333277702332, 0.8130000233650208, 0.8346666693687439, 0.8303333520889282, 0.8143333196640015, 0.8169999718666077, 0.8140000104904175, 0.8389999866485596, 0.8399999737739563, 0.8513333201408386, 0.8106666803359985, 0.8306666612625122, 0.8453333377838135, 0.8399999737739563, 0.8370000123977661]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8094285726547241, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9985404996635137, 1.7025277986187646, 1.3551746232240995, 1.0547368925843712, 0.9411935269824738, 0.8731590368885956, 0.7944826497188916, 0.7500954261387911, 0.7287684939540908, 0.6871670771977212, 0.6932035681987562, 0.677179868856457, 0.6421611492329301, 0.624750425865653, 0.6082128368946917, 0.6090709538413172, 0.5913982101561229, 0.5669693447233207, 0.5707850500167778, 0.5761990191882643, 0.5358164346827461, 0.5327434365098439, 0.4943689177135797, 0.513974275091116, 0.5199874394668359, 0.4842275943360576, 0.5227566456845124, 0.490326857428273, 0.47276489988309894, 0.4659770708499158, 0.48636343222976974, 0.4444969862152352, 0.4454344052168451, 0.429725903884342, 0.43678654555741586, 0.4397898072327889, 0.41022319565627396, 0.4468077513496433, 0.4303127760191824, 0.4140089765326883, 0.40365280620945665], "accuracy": [0.3183199167251587, 0.44525161385536194, 0.5237088799476624, 0.5949016213417053, 0.6371681690216064, 0.6687359809875488, 0.6901333928108215, 0.7065116763114929, 0.7156254053115845, 0.7329282760620117, 0.7318716049194336, 0.7320036888122559, 0.752740740776062, 0.7537974119186401, 0.7680623531341553, 0.7625148296356201, 0.7755910754203796, 0.7814027070999146, 0.7769119143486023, 0.7786290049552917, 0.793422281742096, 0.7884030938148499, 0.8123101592063904, 0.8025360107421875, 0.8029322624206543, 0.817989706993103, 0.7979130744934082, 0.8148196935653687, 0.8177255392074585, 0.8190463781356812, 0.8141592741012573, 0.8342359066009521, 0.8323867321014404, 0.8325188159942627, 0.834632158279419, 0.8337075710296631, 0.8470479249954224, 0.8216879963874817, 0.8376700282096863, 0.841500461101532, 0.8404437899589539], "val_loss": [1.0304031372070312, 1.3780080931527274, 1.0400475093296595, 0.7076176234654018, 0.7205704961504255, 0.6005302156720843, 0.5934832777295794, 0.5872998748506818, 0.5740832941872733, 0.551567690713065, 0.5374452216284615, 0.5261130673544747, 0.5300592184066772, 0.48239329883030485, 0.5280833074024746, 0.47284061568123953, 0.48149095262799946, 0.46883438314710346, 0.47214404174259733, 0.4530526229313442, 0.4416141169411795, 0.42529450144086567, 0.40262765543801443, 0.42699899843760897, 0.4119257075445993, 0.4539722204208374, 0.3980564560209002, 0.41400833640779766, 0.3891242061342512, 0.38386826855795725, 0.4050595079149519, 0.39529493876865934, 0.39929159198488506, 0.37060717173985075, 0.3776570473398481, 0.3636253561292376, 0.40116080215999056, 0.37357471670423237, 0.3692864860807146, 0.365326600415366, 0.36260374954768587], "val_accuracy": [0.6010000109672546, 0.5206666588783264, 0.5296666622161865, 0.6643333435058594, 0.668666660785675, 0.7200000286102295, 0.7070000171661377, 0.7143333554267883, 0.7396666407585144, 0.7323333621025085, 0.7543333172798157, 0.7390000224113464, 0.7459999918937683, 0.7743333578109741, 0.7583333253860474, 0.7846666574478149, 0.7846666574478149, 0.7770000100135803, 0.7753333449363708, 0.7876666784286499, 0.7950000166893005, 0.8066666722297668, 0.8100000023841858, 0.8086666464805603, 0.8133333325386047, 0.7879999876022339, 0.8196666836738586, 0.8100000023841858, 0.8346666693687439, 0.831333339214325, 0.809333324432373, 0.8266666531562805, 0.815666675567627, 0.8489999771118164, 0.8416666388511658, 0.8533333539962769, 0.8146666884422302, 0.8289999961853027, 0.843999981880188, 0.8389999866485596, 0.8383333086967468]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 3, 5, 3, 6, 4, 1, 8, 2, 5, 9, 1, 3, 2, 0, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 89, 75, 46, 60, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7922857403755188, "mapping_values": [1, 20, 20, 12, 8, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0614150089752155, 1.7142415244140645, 1.260727159461451, 1.022163092775147, 0.9986636443396979, 0.8895497763665471, 0.8032605289909046, 0.7719274812669896, 0.7283127533131429, 0.6963700371379976, 0.6849981596000347, 0.6677607395204618, 0.6569875138090303, 0.6379546216056646, 0.6237718866501565, 0.6436378781065855, 0.563651591165427, 0.5699869891466985, 0.5372860761460941, 0.5360995791670417, 0.5561925164460664, 0.5647623173675013, 0.5370146218481128], "accuracy": [0.31541407108306885, 0.4375908076763153, 0.5375775694847107, 0.6044115424156189, 0.6161669492721558, 0.6674151420593262, 0.6951525807380676, 0.7098137736320496, 0.722229540348053, 0.7310791015625, 0.7407211661338806, 0.739928662776947, 0.7508915662765503, 0.7559106945991516, 0.754589855670929, 0.7518161535263062, 0.778761088848114, 0.7804781198501587, 0.7950072884559631, 0.7977809906005859, 0.7837802171707153, 0.7890635132789612, 0.7950072884559631], "val_loss": [1.5717448847634452, 1.0462936673845564, 0.7985258272715977, 0.706969005720956, 0.7692207949502128, 0.6456482240131923, 0.6117681775774274, 0.582417505128043, 0.553128855569022, 0.5278925214494977, 0.5503980602536883, 0.554099474634443, 0.5096688611166817, 0.4876983676637922, 0.5267391715730939, 0.45877901145390104, 0.4478831631796701, 0.43917778560093473, 0.4638652631214687, 0.4333172525678362, 0.4633865867342268, 0.467352032661438, 0.4324725355420794], "val_accuracy": [0.36800000071525574, 0.5429999828338623, 0.6466666460037231, 0.6800000071525574, 0.659333348274231, 0.6973333358764648, 0.7333333492279053, 0.7526666522026062, 0.7276666760444641, 0.7646666765213013, 0.7319999933242798, 0.7193333506584167, 0.7683333158493042, 0.768666684627533, 0.762333333492279, 0.7846666574478149, 0.7919999957084656, 0.8143333196640015, 0.781333327293396, 0.8143333196640015, 0.7853333353996277, 0.7856666445732117, 0.8100000023841858]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 3, 5, 3, 6, 1, 1, 8, 2, 5, 9, 1, 5, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 0, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7894285917282104, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.1518303541191783, 1.771489030885627, 1.5120924628091101, 1.15181910664162, 0.9753503426820879, 0.8786950932832647, 0.8186967753935736, 0.785527700155072, 0.754233265006547, 0.7153394591098197, 0.6786958891418647, 0.6581762887782519, 0.680433341170724, 0.6489492711011902, 0.6339675649408147, 0.5946468424173535, 0.5684786060892155, 0.5766695048736308, 0.5780615326813766, 0.5570928653579866, 0.5284779809327756, 0.531945739408384, 0.5364750745573285], "accuracy": [0.2805441915988922, 0.4221371114253998, 0.4620261490345001, 0.5567296147346497, 0.6376964449882507, 0.6742834448814392, 0.6909258961677551, 0.7036058902740479, 0.713908314704895, 0.7235503792762756, 0.744419515132904, 0.7592127919197083, 0.7446836829185486, 0.7473253011703491, 0.7530049085617065, 0.7730814814567566, 0.7814027070999146, 0.7819310426712036, 0.7824593782424927, 0.7882710099220276, 0.7993659973144531, 0.8072909712791443, 0.7965922355651855], "val_loss": [1.7793748719351632, 1.0245897088732039, 0.912325382232666, 0.7369625738688877, 0.7293897015707833, 0.6842670100075858, 0.6018306016921997, 0.6413341249738421, 0.58430586542402, 0.546898433140346, 0.5458704914365496, 0.5375310863767352, 0.5431752034596035, 0.5063980647495815, 0.5105242558888027, 0.47896693434034077, 0.4713824987411499, 0.46160868235996794, 0.46368913991110666, 0.4550901310784476, 0.45582079887390137, 0.4767920119421823, 0.4477928365979876], "val_accuracy": [0.41100001335144043, 0.5460000038146973, 0.5713333487510681, 0.6830000281333923, 0.6546666622161865, 0.6823333501815796, 0.7276666760444641, 0.7103333473205566, 0.7286666631698608, 0.753333330154419, 0.750333309173584, 0.746666669845581, 0.7416666746139526, 0.7673333287239075, 0.7483333349227905, 0.7683333158493042, 0.7870000004768372, 0.7976666688919067, 0.7806666493415833, 0.7973333597183228, 0.7916666865348816, 0.7770000100135803, 0.7870000004768372]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 3, 5, 3, 6, 4, 1, 8, 2, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7822856903076172, "mapping_values": [1, 20, 20, 12, 8, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.283794113673617, 2.230621454092521, 2.1485732703271276, 2.0113968332414345, 1.8120227927907173, 1.598500583039897, 1.413060027988375, 1.2853774951669785, 1.1829316911444199, 1.114681674284375, 1.0524564796135867, 1.012087143864126, 0.9764835467711416, 0.9456247110817773, 0.9162032010690364, 0.8981287863276276, 0.8722936653930277, 0.8603747549026776, 0.8435118072824298, 0.830962817288818, 0.8191340197866241, 0.8096832874082319, 0.8054564415723608, 0.7815824521058712, 0.7792295958734129, 0.7653390574905583, 0.7645630830897159, 0.7519386390086572, 0.7466900608700501, 0.7492434298200158, 0.7353574557547493, 0.7363111436910256, 0.7188074368259706, 0.7142833299514656, 0.7078042516713413, 0.7125740095278243, 0.710311408315935, 0.69926129012863, 0.7000848023867201, 0.6836539737032924, 0.6846042437056478, 0.675025952955074, 0.6772799923939239, 0.6714152009684601, 0.6601021299272748, 0.6722006963354611], "accuracy": [0.13842293620109558, 0.2641659080982208, 0.3568881154060364, 0.4107779562473297, 0.4570069909095764, 0.49187690019607544, 0.5288601517677307, 0.5604279637336731, 0.5914674401283264, 0.607449471950531, 0.631488561630249, 0.6402060389518738, 0.6491876840591431, 0.6613393425941467, 0.6728305220603943, 0.6781138777732849, 0.6869634389877319, 0.6933034062385559, 0.6884163022041321, 0.6975300312042236, 0.7004358768463135, 0.7066437602043152, 0.709021270275116, 0.7205125093460083, 0.718399167060852, 0.7174745798110962, 0.7209087014198303, 0.7298903465270996, 0.7251353859901428, 0.7244749665260315, 0.7341170310974121, 0.7294940948486328, 0.7363624572753906, 0.735041618347168, 0.7416457533836365, 0.7374191284179688, 0.7384757399559021, 0.743891179561615, 0.7423061728477478, 0.7478536367416382, 0.7481178045272827, 0.7471932172775269, 0.752212405204773, 0.7578919529914856, 0.7581561207771301, 0.7534011602401733], "val_loss": [1.9263688496180944, 1.8658778326851981, 1.7611231122698103, 1.5908020564488001, 1.36603730065482, 1.1524334635053362, 0.99257002558027, 0.8879661560058594, 0.8133572680609567, 0.7641399758202689, 0.7271824564252581, 0.7035983119692121, 0.6752906356539045, 0.6556470053536552, 0.6433115005493164, 0.627277101789202, 0.6133502551487514, 0.6034368787493024, 0.5943637234824044, 0.5860628230231149, 0.5809246131352016, 0.5746999979019165, 0.567090460232326, 0.5616167443139213, 0.5539931058883667, 0.5537912334714618, 0.5439631428037371, 0.5394746235438755, 0.5396476643426078, 0.5315672840390887, 0.5388903277260917, 0.5248860972268241, 0.5210368122373309, 0.5161481925419399, 0.5236209630966187, 0.5115258863994053, 0.5068233524050031, 0.5046661751610892, 0.5061924798148019, 0.498650210244315, 0.4939358575003488, 0.49460252693721224, 0.49102141175951275, 0.48898007188524517, 0.49071870531354633, 0.48570357050214497], "val_accuracy": [0.3616666793823242, 0.4490000009536743, 0.5040000081062317, 0.5569999814033508, 0.5896666646003723, 0.6106666922569275, 0.6736666560173035, 0.6773333549499512, 0.699999988079071, 0.7036666870117188, 0.7120000123977661, 0.7116666436195374, 0.734333336353302, 0.731333315372467, 0.7363333106040955, 0.7369999885559082, 0.7459999918937683, 0.7429999709129333, 0.7419999837875366, 0.7443333268165588, 0.7576666474342346, 0.7393333315849304, 0.7576666474342346, 0.7593333125114441, 0.7689999938011169, 0.765666663646698, 0.7680000066757202, 0.7699999809265137, 0.7636666893959045, 0.7636666893959045, 0.7513333559036255, 0.768666684627533, 0.7710000276565552, 0.7743333578109741, 0.7770000100135803, 0.7746666669845581, 0.778333306312561, 0.7773333191871643, 0.7743333578109741, 0.7793333530426025, 0.7929999828338623, 0.781000018119812, 0.7850000262260437, 0.7853333353996277, 0.7836666703224182, 0.7863333225250244]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 8, 3, 5, 3, 6, 4, 1, 8, 2, 5, 9, 0, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 64, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7394285798072815, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2232885232864197, 1.8038864946478723, 1.4512580555065702, 1.2629220357203859, 1.0538242611871216, 0.9102008205205852, 0.8880076593159842, 0.8275049209689199, 0.79455818595856, 0.7625877894210211, 0.7357109554565625, 0.7105765464661411], "accuracy": [0.28939375281333923, 0.42147669196128845, 0.5163122415542603, 0.5404834151268005, 0.5983357429504395, 0.6548672318458557, 0.6660943031311035, 0.6882842183113098, 0.700700044631958, 0.7051908373832703, 0.7308149337768555, 0.722757875919342], "val_loss": [1.7339364460536413, 1.1602545806339808, 1.1866129807063512, 0.8651269163404193, 0.7135533605303083, 0.6705402476446969, 0.6117362294878278, 0.6608296632766724, 0.6031510148729596, 0.606181161744254, 0.5668436288833618, 0.5431549208504813], "val_accuracy": [0.46799999475479126, 0.5246666669845581, 0.5216666460037231, 0.6166666746139526, 0.6803333163261414, 0.7039999961853027, 0.7369999885559082, 0.7076666951179504, 0.7133333086967468, 0.7093333601951599, 0.7176666855812073, 0.7296666502952576]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 3, 2, 4, 3, 9, 4, 1, 2, 3, 2, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 2, 85, 75, 90, 52, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [67], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [28, 18, 10, 42]], "fitness": -0.173714280128479, "mapping_values": [1, 28, 28, 16, 12, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.373734734675919, 133.61477035469053, NaN, NaN, NaN, NaN], "accuracy": [0.19416193664073944, 0.13168670237064362, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9448186329432897, 5403489.714285715, NaN, NaN, NaN, NaN], "val_accuracy": [0.16566666960716248, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 1, 2, 5, 3, 9, 4, 1, 8, 1, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 68, 85, 75, 80, 52, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [58], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.15199999511241913, "mapping_values": [1, 25, 25, 16, 9, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3444600397837303, 2.3418260690731665, 2.36714922098546, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21754062175750732, 0.17012283205986023, 0.16999074816703796, 0.1418570876121521, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9938808849879675, 1.993370192391532, 1.7915710040501185, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.22466666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 1, 3, 5, 3, 6, 4, 1, 8, 2, 5, 9, 3, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 76, 85, 30, 90, 52, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 2, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10657142847776413, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.3799939411915587, 2.8537285216433137, 2.519449175718895, 2.485352649349877, 2.4975794188618234, 2.487482077882369, 2.5030111191436806, 2.5059453193395997, 2.488951791405064, 3.115349983731281], "accuracy": [0.1946902722120285, 0.1022322028875351, 0.1010434553027153, 0.09998679161071777, 0.10130762308835983, 0.09879804402589798, 0.09708096832036972, 0.09298639744520187, 0.09998679161071777, 0.10394927859306335], "val_loss": [2.1127101353236606, 2.1525857789175853, 2.055516038622175, 2.14668675831386, 2.138570172446115, 2.159127712249756, 2.1572724069867815, 2.139401708330427, 2.1357758385794505, 2.104609898158482], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.10066666454076767, 0.09799999743700027, 0.10433333367109299, 0.10066666454076767, 0.10166666656732559, 0.09833333641290665, 0.10066666454076767, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 3, 5, 3, 6, 4, 1, 8, 1, 5, 9, 4, 3, 8, 3, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [0, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 18, 12, 5, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.multiply(alpha, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 0, 4, 9, 4, 1, 5, 3, 5, 4, 1, 9, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 1, 0, 2, 1, 2, 0, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 86, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [2], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 14, 8, 5, 1, 1, 0, 1, 0, 9, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, alpha)))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 58, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 2, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 11, 5, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303882897443397, 2.303980632779967, 2.3056531707608485, 2.308678289115421, 2.3117124563856306, 2.3169052237139214, 2.3186129968809714, 2.32597254050359, 2.3355942591227685, 2.352641973166717, 2.5013152519158557, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08558975160121918, 0.08572183549404144, 0.08796724677085876, 0.07991018146276474, 0.08347642421722412, 0.06815480440855026, 0.0746268630027771, 0.07674019038677216, 0.07753269374370575, 0.08109892904758453, 0.08849557489156723, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724250520978654, 1.97431366784232, 1.9759947231837682, 1.9782398768833704, 1.9807274682181222, 1.9836510249546595, 1.986807414463588, 1.9914657047816686, 1.9993153299604143, 2.020268440246582, 175.6607883998326, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029666665941476822, 0.02433333359658718, 0.022333333268761635, 0.020666666328907013, 0.028999999165534973, 0.0430000014603138, 0.05400000140070915, 0.07266666740179062, 0.08866667002439499, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 8, 5, 3, 9, 8, 2, 9, 0, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 1, 1, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [56, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [8, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 3, 1, 1, 8, 2, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 2, 33, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [8, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 19, 11, 7, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 8, 5, 3, 9, 4, 2, 8, 6, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [0, 0, 1, 5, 3, 4], [46, 84], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 5, 15, 15, 8, 7, 1, 3, 3, 1, 2, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad)))), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [7533528.53826257, 121839850.87518162, 532558337.2764496, 1458658901.1079118, 3083991434.465196, 5667323549.772553], "accuracy": [0.1002509593963623, 0.10421344637870789, 0.1014397069811821, 0.09734513610601425, 0.10381719470024109, 0.09932637959718704], "val_loss": [21477454.285714287, 171301074.2857143, 577275830.8571428, 1367011072.0, 2668045970.285714, 4607918518.857142], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 0, 2, 5, 3, 9, 4, 1, 8, 3, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 12, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30226824872797, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 1, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 97, 52, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031997696094666, 2.3014018352021317, 2.301042874538667, 2.301551365691752, 2.301541407157748, 2.3031852273987647], "accuracy": [0.08717474341392517, 0.08849557489156723, 0.09694888442754745, 0.09021265059709549, 0.0944393053650856, 0.08625016361474991], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 5, 3, 9, 4, 1, 2, 3, 1, 9, 1, 3, 9, 8, 4, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 2, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [67], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [28, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 24, 24, 15, 9, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031997696094666, 2.3014018352021317, 2.301042874538667, 2.301551365691752, 2.301541407157748, 2.3031852273987647], "accuracy": [0.08717474341392517, 0.08849557489156723, 0.09694888442754745, 0.09021265059709549, 0.0944393053650856, 0.08625016361474991], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 67, 65, 35, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 1, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031997696094666, 2.3014018352021317, 2.301042874538667, 2.301551365691752, 2.301541407157748, 2.3031852273987647], "accuracy": [0.08717474341392517, 0.08849557489156723, 0.09694888442754745, 0.09021265059709549, 0.0944393053650856, 0.08625016361474991], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 8, 2, 3, 9, 1, 6, 8, 6, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 2, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 15, 15, 9, 6, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031997696094666, 2.3014018352021317, 2.301042874538667, 2.301551365691752, 2.301541407157748, 2.3031852273987647], "accuracy": [0.08717474341392517, 0.08849557489156723, 0.09694888442754745, 0.09021265059709549, 0.0944393053650856, 0.08625016361474991], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]