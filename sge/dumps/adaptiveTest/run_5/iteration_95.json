[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 8, 7, 1, 6, 8, 4, 2, 6, 4, 2, 2, 9, 5, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [1, 0, 2, 0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 3, 0, 0, 2, 3, 1], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 5, 0, 4, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7668571472167969, "mapping_values": [1, 34, 34, 21, 13, 8, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))))), alpha)), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293856679928726, 2.271686830383329, 2.249003276502483, 2.2222138108704557, 2.1879888525917357, 2.1459570480548726, 2.0867323659083876, 2.019081289962519, 1.9386881215146283, 1.8299504313502313, 1.7307070072033244, 1.6304279587539967, 1.5356869806057396, 1.4444938295978078, 1.3752007103237132, 1.313673958660605, 1.2578422795858648, 1.2168983156812379, 1.1797950857933628, 1.1487628559882945, 1.1112238797277365, 1.0846059442967817, 1.0599129453641927, 1.0387181600071358, 1.0262547280920369, 0.9971816837354627, 0.978896723344987, 0.9694089271829837, 0.9546367769165125, 0.9364906728480235, 0.9208413763698758, 0.9087997583775488, 0.9107166648682602, 0.8883165776170618, 0.886491106430679, 0.8758956851614087, 0.8610511004586245, 0.864533325298792, 0.8531678371409919, 0.8425956105023894, 0.8519521147000901, 0.8275813618356274, 0.8222634729267095, 0.818376653954306, 0.8228324554804498, 0.8056658940024899, 0.8024669574897649, 0.7977318995113244, 0.7981045614648032, 0.7967256966787889, 0.7816402545977955, 0.7841900494104647, 0.7726021046415532, 0.7748843748823621, 0.7655970258735442, 0.764807073809546, 0.7693298093363468, 0.762550563702667, 0.7512742496122538, 0.7576294717157616, 0.7495317433913622, 0.7413563510808238, 0.7430147336553101, 0.7388898802786109, 0.747064139211277, 0.7258260345903008, 0.7400162390525141, 0.7202758561697272, 0.7299940590420104, 0.7108816347102038, 0.7192517260377118, 0.7106581881864747, 0.7133870179060192, 0.7083291801337506, 0.712813264091395], "accuracy": [0.11649715900421143, 0.17236824333667755, 0.22876766324043274, 0.2735437750816345, 0.32320696115493774, 0.3455289900302887, 0.383700966835022, 0.4103817343711853, 0.4225333631038666, 0.45845991373062134, 0.4707436263561249, 0.488971084356308, 0.49848103523254395, 0.5280676484107971, 0.5415400862693787, 0.55791836977005, 0.5678246021270752, 0.5809007883071899, 0.5896182656288147, 0.6008453369140625, 0.6156386137008667, 0.6145819425582886, 0.6262052655220032, 0.6333377361297607, 0.637432336807251, 0.6408664584159851, 0.6518293619155884, 0.6499801874160767, 0.6564522385597229, 0.6656980514526367, 0.6742834448814392, 0.6758684515953064, 0.6713775992393494, 0.68101966381073, 0.6881521344184875, 0.6885483860969543, 0.6876237988471985, 0.6910579800605774, 0.6897371411323547, 0.7016246318817139, 0.6935675740242004, 0.705058753490448, 0.7058512568473816, 0.7053229212760925, 0.7045304179191589, 0.7103421092033386, 0.709021270275116, 0.7113987803459167, 0.7111346125602722, 0.7162858247756958, 0.718399167060852, 0.7150970697402954, 0.7173424959182739, 0.7243428826332092, 0.7235503792762756, 0.7215691208839417, 0.7180029153823853, 0.7214370369911194, 0.7263241410255432, 0.7243428826332092, 0.7317395210266113, 0.7345132827758789, 0.7263241410255432, 0.7290979027748108, 0.7310791015625, 0.7354378700256348, 0.7300224304199219, 0.7358341217041016, 0.7310791015625, 0.7391361594200134, 0.7354378700256348, 0.7445515990257263, 0.739400327205658, 0.7442874312400818, 0.7428345084190369], "val_loss": [1.950859478541783, 1.929840087890625, 1.9059743200029646, 1.876950808933803, 1.8397655487060547, 1.7919598306928362, 1.7301763125828333, 1.653791802270072, 1.5641957351139613, 1.4606008529663086, 1.3543373516627721, 1.2507885183606828, 1.157008375440325, 1.0747131620134627, 1.0065814086369105, 0.949038028717041, 0.9015039035252163, 0.8626994916370937, 0.8302287544522967, 0.8032277822494507, 0.7785006420952933, 0.7566970416477748, 0.7401257072176252, 0.7231220347540719, 0.7097135952540806, 0.6989441599164691, 0.6852877821241107, 0.6756788832800729, 0.6662901810237339, 0.6558124678475517, 0.6487005608422416, 0.6411307028361729, 0.6347189971378872, 0.6281015191759381, 0.6224240916115897, 0.6164254120418003, 0.6123456273760114, 0.6074100392205375, 0.6033850397382464, 0.5963915075574603, 0.5938067776816232, 0.587939841406686, 0.5847303526742118, 0.5810784271785191, 0.5797565834862846, 0.5767242908477783, 0.5739116839000157, 0.5701251370566232, 0.5653480802263532, 0.5656030178070068, 0.5602421590260097, 0.5579485041754586, 0.557726332119533, 0.5541520970208305, 0.549269574029105, 0.5488542318344116, 0.5462680884769985, 0.5432129757744926, 0.539738552910941, 0.5373971121651786, 0.5363239220210484, 0.5329003504344395, 0.5330867086138044, 0.5300780534744263, 0.5284641640526908, 0.5271486214229039, 0.5247718606676374, 0.5240509850638253, 0.5235573053359985, 0.5208902359008789, 0.519121561731611, 0.5168512378420148, 0.5154939208711896, 0.5166799340929303, 0.5108389002936227], "val_accuracy": [0.2150000035762787, 0.3463333249092102, 0.39899998903274536, 0.4336666762828827, 0.4623333215713501, 0.4896666705608368, 0.5230000019073486, 0.5463333129882812, 0.5726666450500488, 0.5866666436195374, 0.5973333120346069, 0.6060000061988831, 0.6306666731834412, 0.6610000133514404, 0.6710000038146973, 0.6746666431427002, 0.6853333115577698, 0.6903333067893982, 0.6976666450500488, 0.7023333311080933, 0.7059999704360962, 0.7056666612625122, 0.7153333425521851, 0.7120000123977661, 0.7200000286102295, 0.718999981880188, 0.7203333377838135, 0.7246666550636292, 0.7273333072662354, 0.7293333411216736, 0.7326666712760925, 0.7303333282470703, 0.7363333106040955, 0.7400000095367432, 0.7400000095367432, 0.7400000095367432, 0.7426666617393494, 0.7423333525657654, 0.7436666488647461, 0.7493333220481873, 0.7453333139419556, 0.7476666569709778, 0.753000020980835, 0.7480000257492065, 0.746666669845581, 0.7513333559036255, 0.7523333430290222, 0.7553333044052124, 0.7583333253860474, 0.7586666941642761, 0.7576666474342346, 0.7563333511352539, 0.7630000114440918, 0.7639999985694885, 0.765333354473114, 0.7683333158493042, 0.7673333287239075, 0.7703333497047424, 0.7713333368301392, 0.768666684627533, 0.7713333368301392, 0.7733333110809326, 0.7689999938011169, 0.7693333625793457, 0.7749999761581421, 0.7753333449363708, 0.7710000276565552, 0.7710000276565552, 0.7730000019073486, 0.7760000228881836, 0.7736666798591614, 0.7753333449363708, 0.7736666798591614, 0.7756666541099548, 0.7756666541099548]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7665714025497437, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293856711419755, 2.2716868124019514, 2.2490034114100506, 2.2222152592688347, 2.1879917764077965, 2.145962706929767, 2.086735919828444, 2.0190858153493223, 1.938695811655354, 1.829955735399959, 1.7307099090858835, 1.6304254673884893, 1.5356805390213237, 1.4444824360333666, 1.3751877459080275, 1.3136591240557005, 1.2578141685521613, 1.2168586682712774, 1.1797836838680535, 1.1487251710047763, 1.1112095432321802, 1.0845732644816368, 1.0598547244194776, 1.0386725552503098, 1.0261996921342298, 0.9971235513592661, 0.9788815824662092, 0.9693374729128152, 0.9546206301119287, 0.9364633680870031, 0.9207930291616968, 0.9087591639142609, 0.9107125768839738, 0.8882800374269139, 0.8864087451718282, 0.8758520487907021, 0.8610345704318384, 0.8644585245321015, 0.8531491882245869, 0.8425644502002392, 0.8519264197604626, 0.8275858966225033, 0.8222652106331702, 0.818373815589152, 0.8228435104218582, 0.8056412004697057, 0.8024938738010721, 0.7977223063834733, 0.7980639855418585, 0.7966752140245826, 0.7816565403250529, 0.7841353252610793, 0.7726003285868923, 0.7748665338289374, 0.765572167650552, 0.7647887144295327, 0.7693168349616233, 0.7625096320964247, 0.7512451238195107, 0.7576114669089871, 0.74955806299491, 0.7413128156467372, 0.7430611600524415, 0.7388589519708699, 0.7469951386433457, 0.725801997944632, 0.7400420828895987, 0.7201981920497513, 0.7299189304143462, 0.7108085098724481, 0.7192963124770121, 0.710758311905015, 0.7132595581637398, 0.7082971234630836, 0.7128506615145835], "accuracy": [0.11649715900421143, 0.17236824333667755, 0.22876766324043274, 0.2736758589744568, 0.32320696115493774, 0.34539690613746643, 0.3835688829421997, 0.41024965047836304, 0.4225333631038666, 0.45845991373062134, 0.4706115424633026, 0.48910316824913025, 0.4986131191253662, 0.5283318161964417, 0.5414080023765564, 0.5580504536628723, 0.5676925182342529, 0.5809007883071899, 0.5896182656288147, 0.6008453369140625, 0.6155065298080444, 0.6147140264511108, 0.6263373494148254, 0.6338660717010498, 0.6376964449882507, 0.6411306262016296, 0.6519614458084106, 0.6503764390945435, 0.6560559868812561, 0.665830135345459, 0.6744155287742615, 0.6758684515953064, 0.6717738509178162, 0.6811517477035522, 0.6881521344184875, 0.6885483860969543, 0.6880200505256653, 0.6910579800605774, 0.6897371411323547, 0.7017567157745361, 0.6931713223457336, 0.7045304179191589, 0.7057191729545593, 0.7053229212760925, 0.7042662501335144, 0.7106062769889832, 0.709021270275116, 0.7108704447746277, 0.7108704447746277, 0.7166820764541626, 0.7170783281326294, 0.7149649858474731, 0.7173424959182739, 0.7240787148475647, 0.7231541275978088, 0.7217012047767639, 0.717870831489563, 0.7215691208839417, 0.7263241410255432, 0.7248712182044983, 0.7320036888122559, 0.7349095344543457, 0.7264562249183655, 0.7285695672035217, 0.7312111854553223, 0.7358341217041016, 0.7304186820983887, 0.7353057861328125, 0.7305507659912109, 0.7391361594200134, 0.735569953918457, 0.7442874312400818, 0.7400607466697693, 0.7436270117759705, 0.7420420050621033], "val_loss": [1.9508593423025948, 1.929840156010219, 1.9059752055576868, 1.876955849783761, 1.8397703851972307, 1.7919648715427943, 1.730177879333496, 1.653799022947039, 1.5642008781433105, 1.4605964251926966, 1.3543312890189034, 1.2507778917040144, 1.1570120879581995, 1.0747301237923759, 1.0065835203443254, 0.9490019593920026, 0.901486839566912, 0.8627052647726876, 0.830229503767831, 0.8032329593385968, 0.7785348211015973, 0.7567194870540074, 0.7401459557669503, 0.7231265306472778, 0.7097000053950718, 0.6989604575293404, 0.6852517468588692, 0.675639169556754, 0.6663497175489154, 0.6558120591299874, 0.6487064702170235, 0.6411850622722081, 0.6347617421831403, 0.6281876053128924, 0.6224242789404733, 0.6164394617080688, 0.6123447418212891, 0.6073659658432007, 0.6033787386757987, 0.5963818686349052, 0.5937813690730503, 0.5878963981355939, 0.5847274235316685, 0.5810524054936, 0.5798169544764927, 0.576729416847229, 0.5739131655011859, 0.5701092141015189, 0.5654358863830566, 0.5656812531607491, 0.5602097851889474, 0.5579021828515189, 0.5577712740216937, 0.5542004959923881, 0.549317751611982, 0.5488759108952114, 0.5462756667818341, 0.543096661567688, 0.5396747418812343, 0.537350024495806, 0.5363155262810844, 0.5328823328018188, 0.5330337967191424, 0.5300233364105225, 0.5284612008503505, 0.5271343503679548, 0.5247516461781093, 0.5239858457020351, 0.5235006298337664, 0.5208901507513863, 0.5190492527825492, 0.5167578288487026, 0.5154674393790108, 0.5167735985347203, 0.5107920340129307], "val_accuracy": [0.2150000035762787, 0.3463333249092102, 0.39899998903274536, 0.4336666762828827, 0.46266666054725647, 0.4896666705608368, 0.5230000019073486, 0.5460000038146973, 0.5726666450500488, 0.5866666436195374, 0.5973333120346069, 0.6056666374206543, 0.6309999823570251, 0.6613333225250244, 0.6706666946411133, 0.675000011920929, 0.6853333115577698, 0.690666675567627, 0.6980000138282776, 0.7023333311080933, 0.7059999704360962, 0.7056666612625122, 0.7153333425521851, 0.7116666436195374, 0.7200000286102295, 0.718999981880188, 0.7206666469573975, 0.7246666550636292, 0.7273333072662354, 0.7293333411216736, 0.7326666712760925, 0.7306666374206543, 0.7363333106040955, 0.7403333187103271, 0.7396666407585144, 0.7393333315849304, 0.7429999709129333, 0.7429999709129333, 0.7436666488647461, 0.7493333220481873, 0.7453333139419556, 0.7480000257492065, 0.753000020980835, 0.7480000257492065, 0.7473333477973938, 0.7516666650772095, 0.7523333430290222, 0.7553333044052124, 0.7583333253860474, 0.7583333253860474, 0.7580000162124634, 0.7566666603088379, 0.7630000114440918, 0.7646666765213013, 0.765666663646698, 0.7683333158493042, 0.7673333287239075, 0.7706666588783264, 0.7713333368301392, 0.7689999938011169, 0.7713333368301392, 0.7730000019073486, 0.7683333158493042, 0.7689999938011169, 0.7743333578109741, 0.7749999761581421, 0.7713333368301392, 0.7713333368301392, 0.7733333110809326, 0.7763333320617676, 0.7739999890327454, 0.7749999761581421, 0.7739999890327454, 0.7760000228881836, 0.7760000228881836]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [97, 15, 5, 88, 41, 79, 61, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3571428656578064, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.1687665116029597, 2.3664585125366018, 2.304043127230492, 2.3028375388545888, 2.2985498601923275, 2.2062933762091466, 2.268055706543142, 2.304319224542142, 2.3034868874585768, 2.303108821565827, 2.3029928441060896], "accuracy": [0.18280279636383057, 0.14555540680885315, 0.0948355570435524, 0.10553427785634995, 0.12719587981700897, 0.19482234120368958, 0.15982036292552948, 0.1002509593963623, 0.09721305221319199, 0.09932637959718704, 0.09272222965955734], "val_loss": [1.6711833477020264, 1.9747861453465052, 1.9736865588596888, 1.9728696686880929, 1.9440099171229772, 1.7254043306623186, 1.9751988819667272, 1.9741873059953963, 1.9737894875662667, 1.973677158355713, 1.9738918713160925], "val_accuracy": [0.32766667008399963, 0.10100000351667404, 0.11299999803304672, 0.0989999994635582, 0.24300000071525574, 0.3476666808128357, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.0989999994635582, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3425714373588562, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.168563529532174, 2.348835225464913, 2.3037070752827717, 2.295738936572767, 2.4700731344352764, 2.2244946791464075], "accuracy": [0.18280279636383057, 0.14278165996074677, 0.0956280529499054, 0.1476687341928482, 0.1604807823896408, 0.1916523575782776], "val_loss": [1.651629822594779, 1.9749178886413574, 1.9728872435433524, 1.8996191024780273, 1.977083683013916, 2.1255509512765065], "val_accuracy": [0.33633333444595337, 0.10100000351667404, 0.1889999955892563, 0.1966666728258133, 0.09799999743700027, 0.3333333432674408]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 2, 8, 1, 2, 6, 4, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.33485713601112366, "mapping_values": [1, 37, 37, 22, 15, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), tf.math.add(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.168734392769002, 2.3559031230489165, 2.303507146078283, 2.2962204407959126, 2.3193555712432214, 2.304421766354439], "accuracy": [0.1826707124710083, 0.14595165848731995, 0.09668471664190292, 0.14330999553203583, 0.15955619513988495, 0.09945846349000931], "val_loss": [1.6672710350581579, 1.9745262690952845, 1.9726102011544364, 1.9048619951520647, 1.9754081453595842, 1.9739093780517578], "val_accuracy": [0.32600000500679016, 0.10100000351667404, 0.18700000643730164, 0.31700000166893005, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3345714211463928, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.1687339612159433, 2.354881932124202, 2.3034547428964482, 2.292606682368651, 2.721904692506872, 2.305605654167918], "accuracy": [0.1826707124710083, 0.14634791016578674, 0.09747721254825592, 0.14555540680885315, 0.16510368883609772, 0.09747721254825592], "val_loss": [1.6672735895429338, 1.974449702671596, 1.9725584983825684, 1.8283592632838659, 1.9766953332083566, 1.9742300851004464], "val_accuracy": [0.32600000500679016, 0.10100000351667404, 0.18266665935516357, 0.2723333239555359, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [9, 2, 3, 1, 2, 6, 4, 3, 2, 4, 0, 1, 7, 0, 5, 1, 2, 3, 9, 5, 5, 5, 9, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 0, 0, 2], [40, 66, 27, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42, 70], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [65], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.1551428586244583, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.6298158565894596, 2.4712309016370186, 2.4081252965283446, 2.405173188801439, 2.405634989686189, 2.3767907800864645], "accuracy": [0.1802932173013687, 0.09721305221319199, 0.10077928751707077, 0.10130762308835983, 0.10460969805717468, 0.10368511080741882], "val_loss": [2.089801515851702, 2.0271627562386647, 2.0601115226745605, 2.08325617653983, 1.9863196100507463, 2.0347640173775807], "val_accuracy": [0.10066666454076767, 0.0989999994635582, 0.09833333641290665, 0.0989999994635582, 0.09566666930913925, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 2, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10942856967449188, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300653931676058, 2.3003856644827567, 2.3017758928852436, 2.302773753838721, 2.306262688944762, 2.347426009767044], "accuracy": [0.09985470771789551, 0.08902391046285629, 0.08109892904758453, 0.0952318087220192, 0.08677849918603897, 0.08889182657003403], "val_loss": [1.9687751361301966, 1.9725188527788435, 1.9737873758588518, 1.9754214968000139, 1.984431539263044, 2.139754499707903], "val_accuracy": [0.11966666579246521, 0.03233333304524422, 0.08633333444595337, 0.09133332967758179, 0.0949999988079071, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 7, 6, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 1, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 2, 3, 1, 5, 4], [42], [0, 0, 0, 0, 1], [0, 1, 0, 0], [6, 4, 9], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 17, 17, 9, 8, 0, 5, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(beta, grad), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 3, 6, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 0], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302794841711689, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 6, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 5, 5, 1, 4], [42], [0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0], [3, 4, 1, 8, 9], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 40, 24, 16, 5, 17, 17, 9, 8, 0, 8, 6, 5, 1, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 2, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 8, 1, 1, 8, 4, 3, 2, 6, 3, 2, 7, 0, 0, 1, 2, 3, 2, 5, 5, 5, 0, 5, 8, 4, 5], [2, 1, 2, 2, 0, 3, 1, 0, 1, 0, 0, 2, 0, 3, 2, 0, 2, 3, 1], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 5, 2, 0, 4, 0, 4, 4, 3, 2, 6, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 2, 5, 2, 5, 1, 5], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4], [2, 0, 1, 5, 3, 4], [28], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 18, 18, 10, 8, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.negative(beta)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [18, 23, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 0, 1, 0, 1, 5, 5, 4, 0], [42, 26, 97], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 22, 15, 5, 25, 25, 14, 11, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(grad)))))))), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 5, 4, 2, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 2, 1, 2, 3, 9, 5, 8, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 5, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 3, 0, 4, 2], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [1, 0, 1, 5, 3, 4], [65], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 16, 16, 9, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.multiply(grad, grad)))), grad))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027400860870206, 2.3073166874752165, 2.3444982117287725, 2.6164383718193074, 3.518278528560406, 20.408538368919412], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09457138925790787, 0.10157178342342377, 0.09721305221319199, 0.10011887550354004], "val_loss": [1.9741996356419154, 1.9839553151811873, 2.0800587790352956, 2.5736338751656667, 3.771587916782924, 41805.916294642855], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 2, 8, 1, 2, 6, 4, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 2, 1, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 1, 0, 0, 1], [0, 1, 1, 0], [1, 4], [2, 5, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026435267829215, 2.3022247196550714, 2.302164241732576, 2.3030551569793425, 2.3030185769372973, 2.3033340873184174], "accuracy": [0.09272222965955734, 0.09325055778026581, 0.0940430611371994, 0.0936468094587326, 0.09021265059709549, 0.09034473448991776], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 6, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 0, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 40, 40, 24, 16, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026434593291376, 2.3022245757095785, 2.302164084277432, 2.3030548061062994, 2.3030181945732258, 2.303333408025435], "accuracy": [0.09272222965955734, 0.09325055778026581, 0.0940430611371994, 0.0936468094587326, 0.09021265059709549, 0.09034473448991776], "val_loss": [1.9710068021501814, 1.9710066659109933, 1.9710065296718053, 1.9710064615522112, 1.9710064615522112, 1.9710064615522112], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 5, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 2, 2, 2, 0, 2, 0, 2], [86, 28, 79, 92, 41, 36, 75], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 2, 1, 5, 5], [42], [1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 4, 0], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 34, 34, 21, 13, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))), grad)), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026435267829215, 2.3022247196550714, 2.302164241732576, 2.3030551569793425, 2.3030185769372973, 2.3033340873184174], "accuracy": [0.09272222965955734, 0.09325055778026581, 0.0940430611371994, 0.0936468094587326, 0.09021265059709549, 0.09034473448991776], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 3, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [75, 15, 5, 88, 41, 79, 61, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 1, 0, 0, 1], [0, 0, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 40, 40, 24, 16, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026435267829215, 2.3022247196550714, 2.302164241732576, 2.3030551569793425, 2.3030185769372973, 2.3033340873184174], "accuracy": [0.09272222965955734, 0.09325055778026581, 0.0940430611371994, 0.0936468094587326, 0.09021265059709549, 0.09034473448991776], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 6, 8, 1, 2, 6, 4, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026435267829215, 2.3022247196550714, 2.302164241732576, 2.3030551569793425, 2.3030185769372973, 2.3033340873184174], "accuracy": [0.09272222965955734, 0.09325055778026581, 0.0940430611371994, 0.0936468094587326, 0.09021265059709549, 0.09034473448991776], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]