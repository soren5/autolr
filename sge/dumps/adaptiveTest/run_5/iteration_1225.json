[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.8500000238418579, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.140851845578778, 1.2240252073147135, 0.8419379811198121, 0.7484831521618462, 0.6827628235177058, 0.6585352826175153, 0.6320087207369817, 0.6146825151263353, 0.5939819084387162, 0.5825980693011347, 0.5519999085778274, 0.5401360496569618, 0.5237985448027331, 0.5193018917992698, 0.5112108552397644, 0.5057638514437113, 0.48521806104245235, 0.4814381534633478, 0.46717901862670624, 0.45973005023662045, 0.4450233387373946, 0.4271178030106433, 0.42959073830305894, 0.4188068214739476, 0.41467339934500974, 0.4089181370046145, 0.39432334122861207, 0.39009478871675296, 0.39084468543600365, 0.3835006489840009, 0.37315800031808233, 0.3732692458610399, 0.36295825456347935, 0.3538185252591903, 0.35068261432468206, 0.3431559615973799, 0.3388643776302907, 0.3365863057813152, 0.3346008236626152, 0.33327702592392605, 0.32939198236455375, 0.32284883357483113, 0.31420475946772036, 0.3149858476652398, 0.30464193233173315, 0.3012300947118413, 0.30202645886103396, 0.29467219901972946, 0.28044199236568884, 0.2932866338599612, 0.28455826718856664, 0.2796608190203639, 0.26873378957723976, 0.2709727859799384, 0.27122836656353777, 0.2601620323583041, 0.2624675247332581], "accuracy": [0.27684587240219116, 0.5653150081634521, 0.6931713223457336, 0.7226257920265198, 0.7437590956687927, 0.7553823590278625, 0.7588165402412415, 0.7713643908500671, 0.7775723338127136, 0.7820631265640259, 0.791969358921051, 0.7936864495277405, 0.8076872229576111, 0.8033285140991211, 0.8064984679222107, 0.8109893202781677, 0.8189142942428589, 0.8201030492782593, 0.826310932636261, 0.8215559124946594, 0.8329150676727295, 0.8399154543876648, 0.8393871188163757, 0.8376700282096863, 0.8477083444595337, 0.8432175517082214, 0.8512746095657349, 0.8562937378883362, 0.8514066934585571, 0.8574824929237366, 0.8598600029945374, 0.8601241707801819, 0.8602562546730042, 0.8656716346740723, 0.8708229064941406, 0.8725399374961853, 0.8693699836730957, 0.8717474341392517, 0.8725399374961853, 0.870030403137207, 0.8794082403182983, 0.8778232932090759, 0.8813894987106323, 0.8775591254234314, 0.8836349248886108, 0.8862766027450562, 0.8842953443527222, 0.8901069760322571, 0.8908994793891907, 0.8865407705307007, 0.8916919827461243, 0.8928807377815247, 0.8957865834236145, 0.8967111110687256, 0.8942015767097473, 0.8988244533538818, 0.8986923694610596], "val_loss": [1.216308525630406, 0.6757295301982335, 0.5864829335893903, 0.5356312308992658, 0.5139169522694179, 0.48744509901319233, 0.47866220133645193, 0.4652139629636492, 0.45523914269038607, 0.4335018311228071, 0.42248510462897165, 0.4252308096204485, 0.41939280714307514, 0.4110998341015407, 0.40739459650857107, 0.3930261901446751, 0.39839251552309307, 0.3771891253335135, 0.37841675111225676, 0.37102389335632324, 0.3699921795300075, 0.35860839060374666, 0.35832657132829937, 0.3560423084667751, 0.3530968257359096, 0.34747884954724995, 0.34810265472957064, 0.35482903889247347, 0.3358667492866516, 0.34106020416532246, 0.33384742055620464, 0.3387710962976728, 0.3328422818865095, 0.3373402782848903, 0.32879609721047537, 0.3255039027759007, 0.3279377818107605, 0.3218065585408892, 0.3276606372424534, 0.3217194080352783, 0.3270467860358102, 0.32058500392096384, 0.31815578256334576, 0.31776364360536846, 0.31813458033970426, 0.3145075355257307, 0.31705689430236816, 0.31283862250191824, 0.3177251304898943, 0.3161311575344631, 0.31674457447869436, 0.31045345749173847, 0.3067946178572519, 0.3178201913833618, 0.3080692631857736, 0.31990502561841694, 0.31114494800567627], "val_accuracy": [0.5723333358764648, 0.7269999980926514, 0.737333357334137, 0.7559999823570251, 0.7566666603088379, 0.7796666622161865, 0.7826666831970215, 0.7926666736602783, 0.7886666655540466, 0.8063333630561829, 0.8083333373069763, 0.8056666851043701, 0.8146666884422302, 0.8169999718666077, 0.815666675567627, 0.8243333101272583, 0.824999988079071, 0.8370000123977661, 0.8266666531562805, 0.8423333168029785, 0.8396666646003723, 0.8429999947547913, 0.8473333120346069, 0.8479999899864197, 0.8510000109672546, 0.8543333411216736, 0.8513333201408386, 0.8450000286102295, 0.8556666374206543, 0.8493333458900452, 0.8583333492279053, 0.8603333234786987, 0.8600000143051147, 0.8579999804496765, 0.862333357334137, 0.8600000143051147, 0.8656666874885559, 0.8676666617393494, 0.8640000224113464, 0.8656666874885559, 0.859000027179718, 0.8693333268165588, 0.8673333525657654, 0.8690000176429749, 0.8703333139419556, 0.8713333606719971, 0.8690000176429749, 0.8723333477973938, 0.8676666617393494, 0.8709999918937683, 0.8733333349227905, 0.8759999871253967, 0.8730000257492065, 0.874666690826416, 0.8730000257492065, 0.8700000047683716, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [3, 1, 5, 1, 2, 3, 2, 0, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.7979999780654907, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.2488658599503335, 1.9811861130539705, 1.4856581546060161, 1.2040229085540066, 1.1193452259615948, 1.0201844101600235, 0.9371362030388043, 0.8996726864474781, 0.8350945578086267, 0.8338221906592204, 0.8117861985105329, 0.7782258120793645, 0.7707015092834868, 0.7525899691620145, 0.7260861577941694, 0.7238204043539146, 0.715903907947379, 0.7105463243211029, 0.6897749795716562, 0.6796900255490194, 0.6688987155317111, 0.6694742567850032, 0.658177253584647, 0.6419535991679786, 0.6415946755615822, 0.6396885388688861, 0.6377363059546229, 0.637418790956955, 0.6283090424701412, 0.61809770232887, 0.610713919226866, 0.6178350433413977, 0.5918548278615868], "accuracy": [0.2141064554452896, 0.40787214040756226, 0.5218597054481506, 0.5773345828056335, 0.6020340919494629, 0.6297714710235596, 0.6631884574890137, 0.6711134314537048, 0.6944921612739563, 0.6942279934883118, 0.7021529674530029, 0.7149649858474731, 0.7121912837028503, 0.7215691208839417, 0.7322678565979004, 0.7302865982055664, 0.7333245277404785, 0.7374191284179688, 0.7429665923118591, 0.7450799345970154, 0.7467969655990601, 0.7446836829185486, 0.7576277852058411, 0.7633073329925537, 0.7648923397064209, 0.7602694630622864, 0.7650244235992432, 0.7630431652069092, 0.7617223858833313, 0.7770439982414246, 0.7668735980987549, 0.7663452625274658, 0.7816668748855591], "val_loss": [1.822537558419364, 1.3688781942640031, 0.9397130353110177, 0.8499553714479718, 0.7709937776838031, 0.7299801792417254, 0.6467035327638898, 0.6160718032291957, 0.6241801125662667, 0.5837196622576032, 0.6057122094290597, 0.5711292198726109, 0.5554237195423671, 0.5748381444386074, 0.5244215726852417, 0.5282543897628784, 0.5561241422380719, 0.5112146990639823, 0.5322260345731463, 0.5077334131513324, 0.5173219272068569, 0.49437049457005094, 0.5012712478637695, 0.4777077947344099, 0.47666055815560476, 0.48849410670144217, 0.508348992892674, 0.48538196086883545, 0.48319506645202637, 0.4810363394873483, 0.4749303715569632, 0.45764834540230886, 0.45868762901851107], "val_accuracy": [0.47566667199134827, 0.6026666760444641, 0.6639999747276306, 0.6499999761581421, 0.6696666479110718, 0.6919999718666077, 0.7096666693687439, 0.7396666407585144, 0.7236666679382324, 0.75, 0.7263333201408386, 0.7413333058357239, 0.7563333511352539, 0.7283333539962769, 0.7683333158493042, 0.7663333415985107, 0.7369999885559082, 0.7733333110809326, 0.7673333287239075, 0.7739999890327454, 0.7633333206176758, 0.7839999794960022, 0.7739999890327454, 0.7943333387374878, 0.7900000214576721, 0.7856666445732117, 0.7696666717529297, 0.7976666688919067, 0.7896666526794434, 0.784333348274231, 0.7886666655540466, 0.7896666526794434, 0.7836666703224182]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 7, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 4, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.square(beta))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302589866605181, 2.3025851114598312, 2.3025851744418886, 2.3025851429508597, 2.3025852374239464, 2.3025851249694824, 2.3025851429508597, 2.3025851744418886, 2.3025852059329175], "accuracy": [0.1006472036242485, 0.09734513610601425, 0.09998679161071777, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644460950579, 1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [4, 2, 2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, tf.math.add(beta, beta)), tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.302475383772653, 2.3025031723067304, 2.3025379423074215, 2.302648072985295, 2.3032889408662793, 2.3049339193158445], "accuracy": [0.10077928751707077, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736735480172294, 1.9736719812665666, 1.9738362857273646, 1.97418669291905, 1.9749541963849748, 1.9776239395141602], "val_accuracy": [0.10166666656732559, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 1, 2, 3, 0, 0, 0], [27, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, alpha)", "other_info": {"loss": [2.3025898980962096, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 1, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [59, 14, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 4, 5, 1, 2, 3, 2, 0, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [8, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025898980962096, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [20, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [8, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [19, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1268257122.810543, 24111816691.015717, 111220958065.84917, 307395913401.4994, 664185287274.3765, 1222933899664.6191], "accuracy": [0.09549596905708313, 0.10157178342342377, 0.10170386731624603, 0.09959053993225098, 0.10196803510189056, 0.10540219396352768], "val_loss": [4765808054.857142, 38115189906.28571, 128625592612.57143, 304877572681.1429, 595446464512.0, 1028913102848.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [20, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 4, 2, 2, 2, 1, 3, 6, 4, 3, 1, 1, 9, 6, 2, 0, 8, 3, 4, 2, 4, 2, 0, 1, 0, 1, 8, 2, 1, 2, 2, 6, 2, 2, 6, 2, 5, 4, 6, 4, 2, 5, 8, 4, 5, 0, 3, 5, 0, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [4, 2, 2, 1, 3, 3, 3, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 0, 3, 0, 3, 1, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 79, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [6, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 2, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [59, 14, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 4, 5, 1, 2, 3, 2, 0, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 0, 0, 1, 0, 1], [8, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 2, 3, 0, 0, 0], [96, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 7, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025898980962096, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 3, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 2, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [1975.5054549614138, 272063.4378570367, 4535460.111081759, 31805035.970941752, 141399716.1378946, 464316315.0590411], "accuracy": [0.09536388516426086, 0.10157178342342377, 0.10170386731624603, 0.09985470771789551, 0.10196803510189056, 0.10540219396352768], "val_loss": [15431.496651785714, 802157.9107142857, 8556040.857142856, 46544009.14285714, 174166747.42857143, 513460790.85714287], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 1, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 1, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [20, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 2, 2, 2, 1, 3, 6, 4, 3, 0, 8, 1, 6, 2, 0, 8, 3, 6, 2, 4, 9, 0, 1, 0, 1, 0, 2, 1, 2, 2, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 6, 1, 4, 5, 0, 3, 5, 0, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 1, 3, 3, 2, 3, 3, 3, 1, 2, 2, 3, 1, 3, 2, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 2, 3, 2, 3, 2, 4, 0, 3, 0, 5], [47, 94, 65, 78, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025441731223815, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 5, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [83, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [4, 1, 5, 1, 2, 3, 2, 0, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [2, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 1, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [8, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 5, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [3, 8, 8, 1, 3, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 1, 3, 0, 0, 0], [88, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 10, 6, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.math.multiply(alpha, tf.math.square(alpha)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [67, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [4, 4, 2, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 1, 2, 1, 2, 3, 2, 0, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [8, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [20, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 4, 2, 1, 2, 1, 3, 6, 4, 3, 0, 1, 9, 6, 2, 0, 8, 3, 4, 2, 4, 2, 0, 1, 0, 1, 0, 2, 1, 2, 2, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 5, 0, 3, 5, 0, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [4, 2, 2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [47, 94, 65, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [8, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [1, 1, 0, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 3, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), beta), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025898980962096, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [2, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(sigma), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [8, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 4, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [23, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 0, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 2, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(beta))), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [42, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 0, 0, 8, 1, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 2, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [7, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [5, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 1, 2, 3, 0, 0, 0], [10, 18, 10, 42]], "fitness": -0.04028571397066116, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302855283293537, 2.301329151829236, 2.3028699899818825, 2.301990809237181, 2.302118837526367, 2.302771213048044, 2.302556691404662, 2.3031107642159028, 2.3012690057592025, 2.302550933175571, 2.3015313959392527, 2.3009536625324634, 2.3020953647748055, 2.3006541627257366, 2.3014667567922107, 2.3029029749450967, 2.302638293383317, 2.3023133573908736, 2.3016540672580375, 2.301053911073569, 2.3021251781820355, 2.301576139274731, 2.3016227430057183, 2.3030603824746985, 2.3032490965271704, 2.302109111962994, 2.301343605550147, 2.3017332028278257, 2.3027399003844233, 2.303097398352582, 2.3013848682137024, 2.302666271524879, 2.301056440779404], "accuracy": [0.09047681838274002, 0.09655263274908066, 0.08994849026203156, 0.09311848133802414, 0.09391097724437714, 0.09351472556591034, 0.09259014576673508, 0.09338264167308807, 0.09298639744520187, 0.08677849918603897, 0.09140139818191528, 0.09298639744520187, 0.09034473448991776, 0.08902391046285629, 0.09642054885625839, 0.08836349099874496, 0.09457138925790787, 0.08955223858356476, 0.09470347315073013, 0.09153348207473755, 0.09259014576673508, 0.09747721254825592, 0.09298639744520187, 0.0882314071059227, 0.08453308790922165, 0.0882314071059227, 0.09021265059709549, 0.09113723784685135, 0.08955223858356476, 0.0956280529499054, 0.09272222965955734, 0.09034473448991776, 0.08981640636920929], "val_loss": [1.9709968566894531, 1.9709867068699427, 1.9709768295288086, 1.9709667478288924, 1.970956802368164, 1.970947197505406, 1.97093779700143, 1.97092832837786, 1.9709185191563197, 1.9709087780543737, 1.9708992413112096, 1.9708899089268275, 1.9708805084228516, 1.9708709716796875, 1.9708615711757116, 1.9708525112697057, 1.9708433832441057, 1.9708342552185059, 1.9708249909537179, 1.970815794808524, 1.9708061899457658, 1.9707969256809779, 1.970787729535784, 1.9707791464669364, 1.9707706315176827, 1.9707624571663993, 1.9707543509347099, 1.9707463809422083, 1.970738342830113, 1.9707305771963937, 1.9707228115626745, 1.9707151821681432, 1.9707074846540178], "val_accuracy": [0.03766666725277901, 0.038333334028720856, 0.03866666555404663, 0.03933333232998848, 0.03966666758060455, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.04100000113248825, 0.041999999433755875, 0.04266666620969772, 0.04233333468437195, 0.04266666620969772, 0.04233333468437195, 0.04266666620969772, 0.04333333298563957, 0.04399999976158142, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495, 0.04466666653752327, 0.04466666653752327, 0.04500000178813934, 0.04533333331346512, 0.04500000178813934, 0.04466666653752327, 0.04466666653752327, 0.044333335012197495, 0.04500000178813934]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [63, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [4, 4, 0, 8, 2, 9, 3, 6, 2, 4, 0, 0, 9, 6, 2, 1, 8, 3, 4, 2, 4, 2, 3, 1, 0, 1, 0, 2, 1, 2, 4, 6, 2, 9, 2, 0, 5, 4, 6, 4, 2, 5, 1, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [4, 2, 2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 1, 3, 3, 3, 2, 3, 3, 0, 3, 4, 3, 1, 1, 2, 0, 3, 3, 2, 3, 2, 4, 0, 3, 0, 5], [26, 99, 75, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 4, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [8, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 1, 2, 3, 0, 0, 0], [47, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.pow(tf.math.add(beta, beta), tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3028648644705427, 2.3013502131552666, 2.302924151811712, 2.30205866289397, 2.302211528220559, 2.3028984831277297], "accuracy": [0.09047681838274002, 0.09681680053472519, 0.09021265059709549, 0.09285431355237961, 0.09311848133802414, 0.09430722147226334], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]