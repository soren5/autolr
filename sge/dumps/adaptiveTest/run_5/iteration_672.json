[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7571428418159485, "mapping_values": [1, 3, 3, 2, 1, 1, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, beta))), beta)), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), beta)), alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.299247275348573, 2.2893644907471056, 2.2784203012401183, 2.269773437960777, 2.257920992231136, 2.2488253161010014, 2.2358481311810694, 2.2245102363916955, 2.209849378987389, 2.1924188020222726, 2.1735244788324923, 2.1526094124128536, 2.1315499188767415, 2.105556913890292, 2.074913187301579, 2.042400272877272, 2.0137951914912375, 1.9698680499919166, 1.9325496231512922, 1.886950186750341, 1.8350221400783047, 1.7960759276302027, 1.7433891696007875, 1.6934144159648805, 1.6507178498076536, 1.6030346495112282, 1.552493924509501, 1.5176701386843092, 1.4775616343877005, 1.4331016591857721, 1.4019317274883423, 1.3767790716274808, 1.3425622315942776, 1.3118205346042107, 1.2991408773180895, 1.2738174404434761, 1.2541842730352986, 1.2317075765742256, 1.210279945353507, 1.1855747155100205, 1.1720154385729835, 1.1465215272025473, 1.1465651340897782, 1.1228623444834689, 1.1093150815156314, 1.096208448439006, 1.0908272086259254, 1.0760939612506388, 1.064780587045319, 1.0589526358565255, 1.0477206124574154, 1.0345296655679344, 1.031107665486009, 1.0198332670421144, 1.0064124547180293, 0.9997045555528539, 0.9940861966694665, 0.985137895680595, 0.9765891435753794, 0.9785357884065806, 0.9554618721971296, 0.9612024547149634, 0.948731688515637, 0.9446543382851991, 0.9373623224029672, 0.9443801258533323, 0.9341470904165113, 0.9262612885440644, 0.9145888521088397, 0.9121761258881972, 0.8996196403841632, 0.9047354343009584, 0.9020895191218954, 0.8973758471813562, 0.8895161946640826, 0.8927357378196187, 0.8851265470507028, 0.8770257047595381, 0.869984016576227, 0.8622015183234275, 0.8519992764993445, 0.8526472796097628, 0.8550894263634324, 0.8414432283531736, 0.8484257208971914, 0.8476992316328539, 0.8436320966276684, 0.8400221341683832, 0.8403584734166318, 0.8311045890974882, 0.8251128382119741, 0.8249037430790579, 0.8229638334782431, 0.8220314725578075, 0.8258299740739171, 0.812217615181665, 0.8165955823788222, 0.8179140272094526, 0.812986795889026, 0.8192919921550642], "accuracy": [0.10249637067317963, 0.12613920867443085, 0.15532954037189484, 0.17302866280078888, 0.2133139669895172, 0.23074890673160553, 0.24937260150909424, 0.27578920125961304, 0.2895258367061615, 0.31118741631507874, 0.3345661163330078, 0.3567560315132141, 0.3593977093696594, 0.37762513756752014, 0.3907013535499573, 0.4033813178539276, 0.4087967276573181, 0.4157971143722534, 0.42187294363975525, 0.442609965801239, 0.454629510641098, 0.4589882493019104, 0.47589486837387085, 0.481838583946228, 0.48527276515960693, 0.4983489513397217, 0.49927353858947754, 0.5106326937675476, 0.5219917893409729, 0.5252938866615295, 0.5329546928405762, 0.533350944519043, 0.5488046407699585, 0.559899628162384, 0.5546162724494934, 0.5629374980926514, 0.577070415019989, 0.5774666666984558, 0.5815612077713013, 0.5889578461647034, 0.5956941246986389, 0.6032228469848633, 0.5968828201293945, 0.6110157370567322, 0.6058644652366638, 0.6178840398788452, 0.6192048788070679, 0.6173557043075562, 0.6280544400215149, 0.6269977688789368, 0.6292431354522705, 0.63096022605896, 0.6420552134513855, 0.6383568644523621, 0.6440364718437195, 0.6441685557365417, 0.6479989290237427, 0.6485272645950317, 0.6502443552017212, 0.6501122713088989, 0.6571126580238342, 0.6581693291664124, 0.6579051613807678, 0.6664905548095703, 0.6674151420593262, 0.6662263870239258, 0.666358470916748, 0.6748117804527283, 0.6708492636680603, 0.6754721999168396, 0.6773213744163513, 0.6791704893112183, 0.6778497099876404, 0.6823405027389526, 0.6861709356307983, 0.6765288710594177, 0.6779817938804626, 0.6901333928108215, 0.6845859289169312, 0.6873596906661987, 0.6927750706672668, 0.6877558827400208, 0.687887966632843, 0.69673752784729, 0.6971337795257568, 0.6966054439544678, 0.694360077381134, 0.6940959095954895, 0.6960771083831787, 0.7020208835601807, 0.7073041796684265, 0.6984546184539795, 0.7080966830253601, 0.6999075412750244, 0.6997754573822021, 0.705058753490448, 0.7057191729545593, 0.7028133869171143, 0.709549605846405, 0.7043983340263367], "val_loss": [1.961939743586949, 1.9528679847717285, 1.9436792646135603, 1.9340955870492118, 1.9239746502467565, 1.9130469049726213, 1.9011543137686593, 1.8881538254874093, 1.8735888344900948, 1.857175350189209, 1.8386084011622839, 1.8176265444074358, 1.794299806867327, 1.7682429041181291, 1.7389230728149414, 1.706263848713466, 1.6709857327597482, 1.6318307263510567, 1.5901316915239607, 1.5455828734806605, 1.4981631210872106, 1.4501792362758092, 1.400909423828125, 1.3514949253627233, 1.3028315816606795, 1.2555760996682304, 1.2102794647216797, 1.1679996422358923, 1.1281003611428397, 1.0910781111036028, 1.0569042137690954, 1.0258229119437081, 0.9967715399605888, 0.9699646404811314, 0.9462934902736119, 0.9244661331176758, 0.9041666984558105, 0.8857616697038923, 0.8680078302110944, 0.8516296318599156, 0.8367654766355243, 0.8222123214176723, 0.8094936779567173, 0.7970197881971087, 0.7858902556555611, 0.7753796407154628, 0.7661598750523159, 0.7569018942969186, 0.7484573466437203, 0.7408958332879203, 0.7333630153111049, 0.7265685796737671, 0.7194519724164691, 0.7129156930106026, 0.7062426124300275, 0.7008849722998483, 0.6954165526798793, 0.6903345584869385, 0.6855793850762504, 0.6809173311505999, 0.6757382324763707, 0.6718190908432007, 0.6675091300691877, 0.6634764330727714, 0.6594502074377877, 0.6565150192805699, 0.6526943104607719, 0.6484963723591396, 0.644981827054705, 0.6416177919932774, 0.6382631063461304, 0.6359695707048688, 0.6330872092928205, 0.6297129562922886, 0.6268729652677264, 0.6241902453558785, 0.6213535921914237, 0.6186342750276838, 0.6169707775115967, 0.6145339352743966, 0.6117688928331647, 0.6088605097361973, 0.6065169402531215, 0.6041862283434186, 0.602385299546378, 0.5996403694152832, 0.5981148651668003, 0.595922589302063, 0.5934650727680751, 0.5918484926223755, 0.5900529623031616, 0.5883615527834211, 0.5864999634878976, 0.5850692135947091, 0.5844951016562325, 0.5813708986554827, 0.5799049820218768, 0.5786361183438983, 0.5771826846258981, 0.5762977429798671], "val_accuracy": [0.10266666859388351, 0.19433332979679108, 0.2696666717529297, 0.3256666660308838, 0.3606666624546051, 0.38333332538604736, 0.39800000190734863, 0.4176666736602783, 0.43433332443237305, 0.4476666748523712, 0.460999995470047, 0.476666659116745, 0.49399998784065247, 0.5103333592414856, 0.5273333191871643, 0.5403333306312561, 0.5456666946411133, 0.5540000200271606, 0.5633333325386047, 0.5733333230018616, 0.5799999833106995, 0.5870000123977661, 0.5903333425521851, 0.5926666855812073, 0.5996666550636292, 0.6046666502952576, 0.612666666507721, 0.6243333220481873, 0.637666642665863, 0.6466666460037231, 0.656000018119812, 0.6616666913032532, 0.6693333387374878, 0.671999990940094, 0.6759999990463257, 0.6783333420753479, 0.6833333373069763, 0.684333324432373, 0.6893333196640015, 0.6940000057220459, 0.6966666579246521, 0.6986666917800903, 0.7009999752044678, 0.7036666870117188, 0.7046666741371155, 0.70333331823349, 0.7076666951179504, 0.7080000042915344, 0.7110000252723694, 0.7116666436195374, 0.715666651725769, 0.7160000205039978, 0.7153333425521851, 0.7173333168029785, 0.7179999947547913, 0.721666693687439, 0.7239999771118164, 0.7236666679382324, 0.7236666679382324, 0.7243333458900452, 0.7253333330154419, 0.7273333072662354, 0.7303333282470703, 0.7303333282470703, 0.7310000061988831, 0.7319999933242798, 0.731333315372467, 0.7323333621025085, 0.7353333234786987, 0.7366666793823242, 0.7366666793823242, 0.7356666922569275, 0.7366666793823242, 0.7366666793823242, 0.7383333444595337, 0.737333357334137, 0.7396666407585144, 0.7409999966621399, 0.7366666793823242, 0.7419999837875366, 0.7440000176429749, 0.7453333139419556, 0.7450000047683716, 0.7426666617393494, 0.7443333268165588, 0.746999979019165, 0.746666669845581, 0.746999979019165, 0.749666690826416, 0.7490000128746033, 0.7486666440963745, 0.75, 0.7490000128746033, 0.750333309173584, 0.746999979019165, 0.7513333559036255, 0.753000020980835, 0.7523333430290222, 0.753333330154419, 0.7559999823570251]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 4, 3, 1, 4, 3, 8, 1, 5, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 4, 5, 2], [65, 32, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7085714340209961, "mapping_values": [1, 3, 3, 2, 1, 1, 54, 54, 31, 23, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.subtract(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), grad))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))), tf.math.multiply(alpha, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.negative(tf.math.multiply(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.291971504349734, 2.2197370506186354, 2.0223419527414848, 1.609699845471481, 1.3890477424410466, 1.2515118257827165, 0.9656527026564674, 0.9288630917434129, 0.8720795418198681, 0.8351988227549104, 0.8348608223548922, 0.8076701410111813, 0.7562408581417408, 0.7539126039685008, 0.7514830922501009, 0.721539168498929, 0.711829733791888, 0.6887456034200067, 0.6837392217211358, 0.6443795338676527, 0.6416273323882762, 0.6342532408708248, 0.6245901228934074, 0.611762274982214, 0.6022717301178886, 0.5868039814204966, 0.5755137130647618, 0.5703885616281202, 0.5591549624258013, 0.5420043021027187, 0.5487043225628242, 0.5294513747346021, 0.5311763909168216, 0.5284296016824748, 0.5077478187691346, 0.515464589714201, 0.5239480441201712, 0.5002662737954325, 0.48915423000761077, 0.489242382620178, 0.49111501451543826, 0.4786702820244183, 0.4700812356992562, 0.46896872736475237, 0.46096296183909596, 0.4553976938071394, 0.4449221779681027, 0.4410349586817409, 0.4502202485688154, 0.4356870431595191, 0.4380519712574336, 0.41487348594953355, 0.41783514994797755, 0.4296968829094883, 0.41252025365514555, 0.4164382227777789, 0.4096786599227891, 0.40194413561500403, 0.40068388519789705, 0.3952851153682834, 0.39073477088106057, 0.3814910683397604, 0.38074029601639003, 0.38154549925649456, 0.3748042119051629, 0.3603017075722165, 0.3650710194842407, 0.36209641368460616, 0.3557836120516916, 0.3487044154511246], "accuracy": [0.12217672914266586, 0.2829216718673706, 0.39506009221076965, 0.4559503495693207, 0.5264826416969299, 0.5816932916641235, 0.6460176706314087, 0.6552634835243225, 0.6853784322738647, 0.6847180128097534, 0.6860388517379761, 0.6960771083831787, 0.7108704447746277, 0.7111346125602722, 0.7205125093460083, 0.7347774505615234, 0.737022876739502, 0.741909921169281, 0.7457403540611267, 0.7586844563484192, 0.7619865536689758, 0.7675340175628662, 0.7592127919197083, 0.7577598690986633, 0.7713643908500671, 0.7861577272415161, 0.7911768555641174, 0.7837802171707153, 0.7820631265640259, 0.7917051911354065, 0.7952714562416077, 0.7991018295288086, 0.7959318161010742, 0.7984414100646973, 0.81112140417099, 0.8092722296714783, 0.8098005652427673, 0.8152159452438354, 0.8175934553146362, 0.8120459914207458, 0.8178576231002808, 0.8201030492782593, 0.822348415851593, 0.8215559124946594, 0.828820526599884, 0.8333113193511963, 0.8318583965301514, 0.8322546482086182, 0.8281601071357727, 0.8370096683502197, 0.839519202709198, 0.8457271456718445, 0.843481719493866, 0.8400475382804871, 0.8444063067436218, 0.843481719493866, 0.8446704745292664, 0.8429533839225769, 0.8465195894241333, 0.8491612672805786, 0.8532558679580688, 0.8541803956031799, 0.852331280708313, 0.8551049828529358, 0.8561616539955139, 0.8613129258155823, 0.8582749962806702, 0.8595958352088928, 0.8631620407104492, 0.8669924736022949], "val_loss": [1.9318713460649763, 1.8195831435067313, 1.482978173664638, 0.9717522689274379, 0.7837169170379639, 0.7255421025412423, 0.6781836918422154, 0.6905965805053711, 0.6121309144156319, 0.5998573473521641, 0.5891681058066232, 0.5724325350352696, 0.5631078651973179, 0.55865706716265, 0.5358414990561349, 0.5185864993504116, 0.5018330812454224, 0.4788609572819301, 0.47619129930223736, 0.4649022477013724, 0.47191851479666574, 0.45823161942618235, 0.4498426062720163, 0.4475248711449759, 0.4522613457271031, 0.44731175899505615, 0.43469939061573576, 0.43614847319466726, 0.428381153515407, 0.4278990115438189, 0.424336348261152, 0.40856763294764925, 0.41179012400763376, 0.40542082275663105, 0.40259766578674316, 0.40760512011391775, 0.4034133127757481, 0.39456158024924143, 0.39157821450914654, 0.39317706653050016, 0.38961576563971384, 0.3827979138919285, 0.38584686177117483, 0.38465464966637747, 0.38166517870766775, 0.3778242213385446, 0.37246739864349365, 0.37157455512455534, 0.3675156150545393, 0.36648066554750713, 0.37230626174381803, 0.368024400302342, 0.36743210894720896, 0.367197368826185, 0.3708525725773403, 0.37588722365243094, 0.36987171854291645, 0.3717399069241115, 0.3760359968457903, 0.3811246837888445, 0.37773614270346506, 0.3668368714196341, 0.36454325914382935, 0.37508617980139597, 0.38027238845825195, 0.37354052918297903, 0.3688785859516689, 0.3698621988296509, 0.3691962446485247, 0.3564069781984602], "val_accuracy": [0.34299999475479126, 0.4269999861717224, 0.5336666703224182, 0.6600000262260437, 0.6679999828338623, 0.7083333134651184, 0.6899999976158142, 0.7133333086967468, 0.7279999852180481, 0.7269999980926514, 0.7336666584014893, 0.7480000257492065, 0.746666669845581, 0.7636666893959045, 0.762666642665863, 0.765999972820282, 0.7749999761581421, 0.7956666946411133, 0.7923333048820496, 0.7886666655540466, 0.784333348274231, 0.8019999861717224, 0.8173333406448364, 0.8056666851043701, 0.7983333468437195, 0.8009999990463257, 0.8113333582878113, 0.8180000185966492, 0.8186666369438171, 0.8113333582878113, 0.812333345413208, 0.8240000009536743, 0.8223333358764648, 0.8323333263397217, 0.8296666741371155, 0.8199999928474426, 0.8203333616256714, 0.8353333473205566, 0.8363333344459534, 0.8270000219345093, 0.8349999785423279, 0.8420000076293945, 0.8360000252723694, 0.8360000252723694, 0.8379999995231628, 0.8460000157356262, 0.8503333330154419, 0.8483333587646484, 0.8516666889190674, 0.8503333330154419, 0.8516666889190674, 0.8503333330154419, 0.8519999980926514, 0.8483333587646484, 0.8523333072662354, 0.8493333458900452, 0.8529999852180481, 0.8500000238418579, 0.8556666374206543, 0.8560000061988831, 0.8539999723434448, 0.8569999933242798, 0.8616666793823242, 0.8679999709129333, 0.8700000047683716, 0.8696666955947876, 0.8669999837875366, 0.8640000224113464, 0.8693333268165588, 0.8669999837875366]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 2, 2, 3, 2, 9, 4, 3, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 5, 3, 3, 3, 1, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.4302857220172882, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.451476617023819, 2.534295629815749, 2.303836021566939, 2.2845263912882143, 2.3285838311862603, 2.3038817730562138, 2.303028679196357, 2.295660707125842, 2.246473834089804], "accuracy": [0.19482234120368958, 0.1508387327194214, 0.09893012791872025, 0.14212125539779663, 0.1402720957994461, 0.09853387624025345, 0.10011887550354004, 0.13432836532592773, 0.18253862857818604], "val_loss": [1.9408328192574638, 1.9759086200169154, 1.9712828227451868, 1.779639652797154, 1.974731377192906, 1.9737952777317591, 1.9732484817504883, 1.9744080134800501, 1.69058472769601], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.3933333456516266, 0.10066666454076767, 0.10100000351667404, 0.10433333367109299, 0.09833333641290665, 0.2553333342075348]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 2, 4, 3, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.33228570222854614, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), beta)), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4515624897843105, 2.5499749062414323, 2.3041540702509447, 2.2860872851638683, 2.2532124627047465, 2.3042242448280486, 2.3034796115508436, 2.3032144996956467, 2.3029670500248303], "accuracy": [0.1946902722120285, 0.15255580842494965, 0.09840179979801178, 0.14238542318344116, 0.15070664882659912, 0.09694888442754745, 0.09509972482919693, 0.09813763201236725, 0.09893012791872025], "val_loss": [1.9408346584865026, 1.9763216972351074, 1.9719434465680803, 1.7312236513410295, 1.974626132420131, 1.9736817223685128, 1.9736082894461495, 1.9736801556178503, 1.973663057599749], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.3633333444595337, 0.10166666656732559, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 4, 2, 3, 2, 4, 3, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [82, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2865714430809021, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), beta)), tf.math.add(beta, beta))), beta)), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.451123269321329, 2.540412257486378, 2.303901981731148, 2.279842704341648, 2.258317630997329, 2.298174512132819, 2.66778851383634, 2.3047971230739805, 2.3036707384459425], "accuracy": [0.19521859288215637, 0.15031039714813232, 0.1002509593963623, 0.15321621298789978, 0.14397041499614716, 0.11728965491056442, 0.21238937973976135, 0.1026284471154213, 0.09813763201236725], "val_loss": [1.9399002620152064, 1.9760334151131767, 1.971675191606794, 1.8514185632978166, 1.9736614227294922, 1.9072468621390206, 1.9753010613577706, 1.97368928364345, 1.9736879893711634], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10366666316986084, 0.375, 0.10066666454076767, 0.19699999690055847, 0.10433333367109299, 0.09966666996479034, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 6, 2, 2, 1, 8, 1, 9, 2, 4, 8, 6, 8, 1, 6, 4, 7, 9, 5, 5, 2, 8, 2, 3, 3, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [64, 98, 39, 57, 8, 59], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.27171429991722107, "mapping_values": [1, 1, 1, 0, 1, 0, 42, 42, 26, 16, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.sqrt(grad)))))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))))))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4514675456865698, 2.5225440627312095, 2.3038584306775114, 2.284031551181207, 2.3906488697274706, 2.304157480918311, 2.3035823014654486, 2.303238606676528, 2.303437816531446], "accuracy": [0.1950865089893341, 0.15176330506801605, 0.09998679161071777, 0.1340641975402832, 0.13142253458499908, 0.1002509593963623, 0.09694888442754745, 0.09668471664190292, 0.0952318087220192], "val_loss": [1.9390548297337122, 1.9757708140781947, 1.971203395298549, 1.8103361129760742, 1.9752685683114188, 1.9739390100751604, 1.9738334247044154, 1.97384432383946, 1.9737366948808943], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.28166666626930237, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 4, 3, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 2, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 9, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.27057144045829773, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 14, 11, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(beta, beta), beta), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta))))), beta), tf.math.add(beta, alpha))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.451538055674621, 2.552850484375657, 2.303994561513937, 2.2927969439847518, 2.2752562253513924, 2.306970950996934, 2.3107175396544, 2.304457976628824, 2.3033197988624257], "accuracy": [0.19482234120368958, 0.15176330506801605, 0.09932637959718704, 0.1438383311033249, 0.14093250036239624, 0.1736890822649002, 0.1014397069811821, 0.09800554811954498, 0.09879804402589798], "val_loss": [1.9392031942095076, 1.976170607975551, 1.9719457626342773, 1.96853848866054, 1.9724783216203963, 1.9884199414934431, 1.9744078091212682, 1.9738997731889998, 1.9736733436584473], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10199999809265137, 0.10166666656732559, 0.10166666656732559, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 3, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.23171427845954895, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4512839161756097, 2.5523262563052196, 2.3044393534642076, 2.297861576174795, 2.3035694224849244, 2.3047033840119484, 2.303181553340434, 2.3030928084091693, 2.303030944251586], "accuracy": [0.19535067677497864, 0.15097081661224365, 0.09932637959718704, 0.12310130894184113, 0.16061286628246307, 0.09628847241401672, 0.09642054885625839, 0.09351472556591034, 0.09708096832036972], "val_loss": [1.9405604090009416, 1.9762613432747977, 1.972891058240618, 1.9469505718776159, 1.9759894098554338, 1.9738359451293945, 1.973604610988072, 1.9736736842564173, 1.9736552238464355], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.2356666624546051, 0.10166666656732559, 0.10100000351667404, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 2, 2, 3, 2, 4, 3, 9, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 5, 3, 2, 3, 1, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.1784927344608773, 2.4339950398022014, 2.2854844544778143, 2.2896672828464206, 2.375404858334095, 2.405543952806357, 2.3335964885669345, 2.3504675659662886, 2.700849699416669], "accuracy": [0.17170783877372742, 0.13380002975463867, 0.15414080023765564, 0.14700831472873688, 0.1538766324520111, 0.13036586344242096, 0.1002509593963623, 0.09708096832036972, 0.09694888442754745], "val_loss": [2.04180840083531, 1.9209270477294922, 1.8724913597106934, 1.8733223506382533, 2.099794251578195, 2.027089868273054, 2.0208736828395297, 1.9884364264351981, 1.986935819898333], "val_accuracy": [0.09799999743700027, 0.1496666669845581, 0.1756666600704193, 0.18533332645893097, 0.1326666623353958, 0.0989999994635582, 0.10166666656732559, 0.10066666454076767, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 6, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [64, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.21857142448425293, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.1784989778092667, 2.4862492853514095, 2.946472248711748, 2.4562160802192974, 2.3733345704890514, 2.351352792894048, 2.359957164761381], "accuracy": [0.17210407555103302, 0.15598995983600616, 0.12151630967855453, 0.13393211364746094, 0.10011887550354004, 0.10196803510189056, 0.09826971590518951], "val_loss": [2.0399884496416365, 1.9629712104797363, 2.0375781740461076, 1.9869350705827986, 2.011568341936384, 2.019015039716448, 2.033966132572719], "val_accuracy": [0.09799999743700027, 0.17399999499320984, 0.1003333330154419, 0.10266666859388351, 0.10166666656732559, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 6, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 5, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [7, 84, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.11428571492433548, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4515529041040875, 2.543876342328784, 2.303258252701251, 2.2789739412701504, 2.3046465074979805, 2.3036784971426383, 2.303236797390959, 2.303194392075423], "accuracy": [0.19495442509651184, 0.15070664882659912, 0.09998679161071777, 0.17012283205986023, 0.09668471664190292, 0.09642054885625839, 0.09985470771789551, 0.0948355570435524], "val_loss": [1.9405200822012765, 1.9758549417768205, 1.9690884862627303, 1.9764674731663294, 1.9738141468593053, 1.9736838340759277, 1.9736143520900182, 1.9737217766898019], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.14366666972637177, 0.10166666656732559, 0.10166666656732559, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [99, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 2, 2, 3, 2, 4, 3, 9, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [14, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1120000034570694, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.1784594993329303, 2.494685796053182, 10549.198726248953, 1.170489087437093e+32, 3.137428326204295, 2.884469708998316, 2.819757908909407], "accuracy": [0.17197199165821075, 0.14159291982650757, 0.12653546035289764, 0.08677849918603897, 0.09932637959718704, 0.10447761416435242, 0.10315678268671036], "val_loss": [2.0419252259390697, 1.9073682512555803, 812978105782.8572, 2.680185386112758, 2.3380482537405833, 2.2740723746163503, 2.5861742155892506], "val_accuracy": [0.09799999743700027, 0.17266666889190674, 0.06266666948795319, 0.09799999743700027, 0.09966666996479034, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 3, 3, 4, 0, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [8, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(beta, tf.math.add(beta, grad)), beta))), tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302541401911846, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 3, 1, 4, 3, 8, 4, 9, 2, 6, 6, 6, 8, 1, 6, 3, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 2, 1, 1, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 5, 4], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 54, 54, 32, 22, 5, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), beta))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), grad), tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)))), grad))))))), grad)), beta)))))))), grad), tf.math.add(beta, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302541401911846, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [0, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 5, 1, 2, 9, 3, 8, 1, 1, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 1, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [64, 97, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06428571790456772, "mapping_values": [1, 3, 3, 1, 2, 0, 43, 43, 25, 18, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.subtract(beta, tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.sqrt(tf.math.subtract(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(grad)))))))))))))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027827391739706, 2.301816766319683, 2.3001285983964737, 2.3009555286278482, 2.29930782831419, 2.3009370289395563, 2.300096351897885, 2.3010379789433286, 2.3009196175182374, 2.299695973414566, 2.2989201361807723, 2.2995716722146033, 2.3001556988200806, 2.2994625011943413, 2.299659737506484], "accuracy": [0.09430722147226334, 0.0952318087220192, 0.09932637959718704, 0.09509972482919693, 0.10460969805717468, 0.09879804402589798, 0.09245806187391281, 0.09760929644107819, 0.08902391046285629, 0.1006472036242485, 0.10051512718200684, 0.10460969805717468, 0.09391097724437714, 0.10394927859306335, 0.10196803510189056], "val_loss": [1.9701382092067175, 1.9697270393371582, 1.9695323535374232, 1.9694078309195382, 1.9695772443498885, 1.9694083758762904, 1.9693821498325892, 1.969299588884626, 1.9692392349243164, 1.9692399161202567, 1.9693922315325056, 1.9695489747183663, 1.9697467258998327, 1.969963618687221, 1.9702300344194685], "val_accuracy": [0.04766666516661644, 0.05533333495259285, 0.05999999865889549, 0.06333333253860474, 0.06700000166893005, 0.07100000232458115, 0.07533333450555801, 0.0806666687130928, 0.0846666693687439, 0.08866667002439499, 0.08766666799783707, 0.08433333039283752, 0.08299999684095383, 0.08233333379030228, 0.08399999886751175]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 3, 2, 3, 2, 2, 3, 5, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 2, 2, 3, 0, 1, 3, 0, 3, 2, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 63, 93, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [2, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303223508806623, 2.303112449930675, 2.301830266807152, 2.3031100257827686, 2.30137205297102, 2.3037448926388295], "accuracy": [0.09325055778026581, 0.09298639744520187, 0.09179764986038208, 0.09008057415485382, 0.09787346422672272, 0.08915598690509796], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 0, 2, 6, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 1, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [7, 84, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303223508806623, 2.303112449930675, 2.301830266807152, 2.3031100257827686, 2.30137205297102, 2.3037448926388295], "accuracy": [0.09325055778026581, 0.09298639744520187, 0.09179764986038208, 0.09008057415485382, 0.09787346422672272, 0.08915598690509796], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [90, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 6, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [7, 84, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 6, 6, 3, 3, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), beta)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303223508806623, 2.303112449930675, 2.301830266807152, 2.3031100257827686, 2.30137205297102, 2.3037448926388295], "accuracy": [0.09325055778026581, 0.09298639744520187, 0.09179764986038208, 0.09008057415485382, 0.09787346422672272, 0.08915598690509796], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 6, 2, 2, 1, 8, 1, 9, 2, 6, 8, 0, 8, 1, 6, 2, 7, 1, 5, 2, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 3, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 1, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 44, 44, 27, 17, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), beta), beta)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.negative(alpha)))), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))), tf.math.add(beta, beta))))), tf.math.add(beta, alpha)))))))))))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303223508806623, 2.303112449930675, 2.301830266807152, 2.3031100257827686, 2.30137205297102, 2.3037448926388295], "accuracy": [0.09325055778026581, 0.09298639744520187, 0.09179764986038208, 0.09008057415485382, 0.09787346422672272, 0.08915598690509796], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 2, 3, 2, 4, 3, 0, 1, 9, 3, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 9, 2, 2, 2, 3, 9, 6, 0, 1, 3, 0, 2, 9], [3, 2, 3, 2, 3, 0, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [7, 84, 39, 95, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 15, 11, 3, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), beta), grad)), tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.add(beta, grad)), tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303223508806623, 2.303112449930675, 2.301830266807152, 2.3031100257827686, 2.30137205297102, 2.3037448926388295], "accuracy": [0.09325055778026581, 0.09298639744520187, 0.09179764986038208, 0.09008057415485382, 0.09787346422672272, 0.08915598690509796], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]