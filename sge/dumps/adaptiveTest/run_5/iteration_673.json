[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7971428632736206, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.33387015565291, 2.3062985805929173, 2.3001522655106648, 2.6610002941254534, 2.1747162934732693, 2.114575948303937, 2.150734692705684, 1.9403830550334489, 1.5668198935438566, 1.3718978972278173, 1.2924521546149061, 1.2585051670333949, 1.204076997852124, 0.996677006586841, 0.9897541738756266, 0.8755515614095665, 0.8537137655534166, 0.7855434572109378, 0.7609565273378, 0.752889472511482, 0.7966712777640731, 0.7649793636057245, 0.719636049087667, 0.7529063553952459, 0.6903530444766331, 0.6430773357783861, 0.6859375951454199, 426.01670089836813, 2.4099468678499747, 2.331598331553195, 2.3211587163766203], "accuracy": [0.1534803807735443, 0.1014397069811821, 0.1162329912185669, 0.19601109623908997, 0.20499274134635925, 0.2833179235458374, 0.25822216272354126, 0.366530179977417, 0.4571390748023987, 0.5308413505554199, 0.5481442213058472, 0.5713908076286316, 0.594241201877594, 0.6408664584159851, 0.6444327235221863, 0.6848500967025757, 0.6866992712020874, 0.7057191729545593, 0.7121912837028503, 0.7197200059890747, 0.7078325152397156, 0.7173424959182739, 0.7306828498840332, 0.7238145470619202, 0.7391361594200134, 0.7573636174201965, 0.7429665923118591, 0.3155461549758911, 0.10434553027153015, 0.09998679161071777, 0.09800554811954498], "val_loss": [1.9795848982674735, 1.9739634650094169, 1.953526837485177, 1.951678889138358, 1.5574479784284319, 1.9836443492344447, 1.6559245586395264, 1.55454192842756, 1.0994630881718226, 1.1502142293112618, 1.0506359509059362, 0.9257655824933734, 0.7722069876534599, 0.8154478243419102, 0.6565555334091187, 0.7006201573780605, 0.6347686563219342, 0.5817532709666661, 0.6096953664507184, 0.583464537348066, 0.6356065784181867, 0.59373026234763, 0.7113066400800433, 0.6252326454435077, 0.5270548037120274, 0.497707690511431, 0.5499012129647392, 2.2464698382786343, 1.9781713485717773, 1.9750159127371651, 1.9762487411499023], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.234333336353302, 0.14866666495800018, 0.3766666650772095, 0.351666659116745, 0.35333332419395447, 0.40666666626930237, 0.5553333163261414, 0.4936666786670685, 0.5590000152587891, 0.6499999761581421, 0.6930000185966492, 0.6613333225250244, 0.7126666903495789, 0.6803333163261414, 0.7360000014305115, 0.7593333125114441, 0.737333357334137, 0.7599999904632568, 0.7163333296775818, 0.7303333282470703, 0.6880000233650208, 0.7183333039283752, 0.7836666703224182, 0.7863333225250244, 0.7620000243186951, 0.10066666454076767, 0.09799999743700027, 0.10433333367109299, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7548571228981018, "mapping_values": [1, 3, 3, 2, 1, 1, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, beta))), beta)), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), beta)), alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2980141238828677, 2.2888100780531904, 2.2794864778552686, 2.271049510407615, 2.2592447301919796, 2.249576767626818, 2.23682131658314, 2.2246932903726133, 2.209681300911622, 2.1933903478124375, 2.1734116905952066, 2.153775916296682, 2.1264229664760355, 2.105547243845603, 2.0769369980410626, 2.0450961181059677, 2.0087321993382283, 1.9694720569492694, 1.9303891586983413, 1.8873834508111873, 1.8401644873723, 1.7900613876397442, 1.7396005688562621, 1.691634925790136, 1.6505377463944253, 1.5944446369074654, 1.5544715974750047, 1.5178197816598842, 1.4783546528906288, 1.4448520624248689, 1.4050674394704032, 1.374318957832653, 1.3487852991154763, 1.321087191291001, 1.291050457715075, 1.2753370562249706, 1.2465109234992398, 1.2314574599439252, 1.195974006109297, 1.1847379189503742, 1.1818769093061152, 1.1594722827412056, 1.1401505020111622, 1.1356813771739502, 1.1043476060774853, 1.0958534042675576, 1.1020071464932086, 1.07773954579229, 1.068630996790891, 1.0609145589618636, 1.0344183735166637, 1.0242769086775039, 1.0217842466685403, 1.0131979279467112, 1.0054001935547716, 0.994491832123425, 0.995848383153702, 0.9766833197250184, 0.9688699613110642, 0.9631177219401702, 0.9573829472891612, 0.952698573515384, 0.9401295991259448, 0.9416691325501586, 0.9420689893609671, 0.9260509167176039, 0.9267520173476782, 0.9229184638838238, 0.9098214764857037, 0.9112021218925781, 0.9077320583051521, 0.9063883602674281, 0.892726227363591, 0.8970069953904349, 0.8877093833766011, 0.8805899363797905, 0.8710125768897934, 0.8772141843061909, 0.8736859648581335, 0.8744674450559796, 0.8654595939411762, 0.8541724310338835, 0.8530656086723046, 0.8614634078774926, 0.8465974691710563, 0.8474847768291806, 0.8470923720160652, 0.8414500379102609, 0.8379122080851413, 0.8235946333624069, 0.8285250538659212, 0.8318788899312229, 0.8242660083428759, 0.8312199960657477, 0.8251460640736858, 0.8227316447772433, 0.8109931558933492, 0.8216808850912292, 0.8084913935517717, 0.8019891803479702], "accuracy": [0.1002509593963623, 0.1270637959241867, 0.15202747285366058, 0.17619864642620087, 0.21304979920387268, 0.22559767961502075, 0.2534671723842621, 0.2751287817955017, 0.2907145619392395, 0.31699907779693604, 0.33681151270866394, 0.34064191579818726, 0.36943599581718445, 0.37326639890670776, 0.38805970549583435, 0.3959846794605255, 0.4105137884616852, 0.4239862561225891, 0.4313828945159912, 0.4349491596221924, 0.45225200057029724, 0.46110156178474426, 0.46651697158813477, 0.47391360998153687, 0.48091402649879456, 0.4979526996612549, 0.5033681392669678, 0.5099722743034363, 0.5164443254470825, 0.5275393128395081, 0.5383700728416443, 0.5374455451965332, 0.5456346869468689, 0.5495971441268921, 0.5588429570198059, 0.5624092221260071, 0.5690133571624756, 0.5789195895195007, 0.5845991373062134, 0.5915995240211487, 0.587372899055481, 0.5976753234863281, 0.6041474342346191, 0.599128246307373, 0.6127327680587769, 0.6153744459152222, 0.6122044920921326, 0.6238277554512024, 0.6206578016281128, 0.6210539937019348, 0.6343944072723389, 0.6379606127738953, 0.6391493678092957, 0.6450931429862976, 0.6421872973442078, 0.6489235162734985, 0.6446968913078308, 0.6552634835243225, 0.6608110070228577, 0.6637167930603027, 0.6561880707740784, 0.6633205413818359, 0.6662263870239258, 0.6588297486305237, 0.6679434776306152, 0.6690001487731934, 0.6687359809875488, 0.6627922058105469, 0.6782459616661072, 0.672698438167572, 0.6750759482383728, 0.6789063811302185, 0.681547999382019, 0.6789063811302185, 0.683000922203064, 0.68101966381073, 0.6824725866317749, 0.6807554960250854, 0.6804913282394409, 0.6922467350959778, 0.6894729733467102, 0.6914542317390442, 0.6952846646308899, 0.6860388517379761, 0.6925109028816223, 0.6988508701324463, 0.691850483417511, 0.6959450244903564, 0.6977941989898682, 0.7028133869171143, 0.7034738063812256, 0.7013604640960693, 0.7030775547027588, 0.7013604640960693, 0.7004358768463135, 0.703209638595581, 0.7045304179191589, 0.7029454708099365, 0.7141724824905396, 0.7107383608818054], "val_loss": [1.9618457385471888, 1.9529121262686593, 1.9438233375549316, 1.9344075066702706, 1.9243523052760534, 1.9136568478175573, 1.9018517221723283, 1.8888961928231376, 1.8744643075125558, 1.8581743921552385, 1.8396850313459123, 1.8187837600708008, 1.7948594093322754, 1.7686210359845842, 1.7393785885402135, 1.706747123173305, 1.670698983328683, 1.6314469064985002, 1.5893604074205672, 1.5448414598192488, 1.497992958341326, 1.449610914502825, 1.3999179090772356, 1.3505003111703056, 1.30236782346453, 1.2542268889290946, 1.2087413583483015, 1.1662883417946952, 1.126704284123012, 1.09055267061506, 1.0566318375723702, 1.0260096277509416, 0.9976371356419155, 0.9716293471200126, 0.9470064980643136, 0.9253622123173305, 0.9045236791883197, 0.8860878944396973, 0.8673856088093349, 0.8512686661311558, 0.8372125285012382, 0.8233733858380999, 0.8097493648529053, 0.7982469626835415, 0.7872131892613002, 0.7762574468340192, 0.7667914969580514, 0.7575452668326241, 0.7491379465375628, 0.7410606827054705, 0.7326490368161883, 0.7247414078031268, 0.7179253612245832, 0.7115238734654018, 0.7053610597337995, 0.700043899672372, 0.6948643241609845, 0.6894165788378034, 0.6842055150440761, 0.679633344922747, 0.6747520821435111, 0.6698594093322754, 0.6656051703861782, 0.6623219421931675, 0.6584186383656093, 0.6541808673313686, 0.6511788708823067, 0.6483039515359061, 0.6445574249540057, 0.6415841579437256, 0.6383762189320156, 0.6356626067842756, 0.6324759721755981, 0.6297190359660557, 0.6269631896700177, 0.6240743739264352, 0.6212527241025653, 0.6189981869288853, 0.6160919155393328, 0.6138984986713955, 0.6115293332508632, 0.6090441771915981, 0.6066679954528809, 0.6042687552315849, 0.6029525654656547, 0.6002940109797886, 0.5979755776269096, 0.5958614519664219, 0.5944645404815674, 0.5919346128191266, 0.590271132332938, 0.5884397029876709, 0.5864808900015694, 0.5848354952675956, 0.5834886687142509, 0.58140800680433, 0.5810073614120483, 0.5791589873177665, 0.5773380824497768, 0.5754177229745048], "val_accuracy": [0.10166666656732559, 0.19699999690055847, 0.2709999978542328, 0.3323333263397217, 0.3646666705608368, 0.3866666555404663, 0.4009999930858612, 0.41966667771339417, 0.4386666715145111, 0.4519999921321869, 0.4636666774749756, 0.476666659116745, 0.49133333563804626, 0.5056666731834412, 0.5236666798591614, 0.5346666574478149, 0.5429999828338623, 0.5559999942779541, 0.562333345413208, 0.5720000267028809, 0.5776666402816772, 0.5806666612625122, 0.5879999995231628, 0.5933333039283752, 0.5993333458900452, 0.6053333282470703, 0.6129999756813049, 0.6273333430290222, 0.6393333077430725, 0.6456666588783264, 0.6549999713897705, 0.6603333353996277, 0.6690000295639038, 0.6759999990463257, 0.6776666641235352, 0.6809999942779541, 0.687666654586792, 0.6909999847412109, 0.6919999718666077, 0.6946666836738586, 0.6973333358764648, 0.6980000138282776, 0.7003333568572998, 0.703000009059906, 0.7023333311080933, 0.7046666741371155, 0.7049999833106995, 0.7096666693687439, 0.7123333215713501, 0.7139999866485596, 0.7176666855812073, 0.7153333425521851, 0.7160000205039978, 0.7183333039283752, 0.718666672706604, 0.7193333506584167, 0.7233333587646484, 0.7250000238418579, 0.7256666421890259, 0.7243333458900452, 0.7263333201408386, 0.7273333072662354, 0.7306666374206543, 0.731333315372467, 0.7316666841506958, 0.7319999933242798, 0.731333315372467, 0.734000027179718, 0.734666645526886, 0.7366666793823242, 0.737666666507721, 0.7366666793823242, 0.7379999756813049, 0.7393333315849304, 0.7406666874885559, 0.7396666407585144, 0.7400000095367432, 0.7426666617393494, 0.7419999837875366, 0.7433333396911621, 0.7463333606719971, 0.7419999837875366, 0.746999979019165, 0.7443333268165588, 0.7440000176429749, 0.7456666827201843, 0.749666690826416, 0.746666669845581, 0.7463333606719971, 0.746666669845581, 0.7480000257492065, 0.7506666779518127, 0.750333309173584, 0.7509999871253967, 0.7480000257492065, 0.7516666650772095, 0.75, 0.749666690826416, 0.7506666779518127, 0.7536666393280029]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 2, 2, 3, 1, 4, 3, 9, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 3, 1, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 11, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7548571228981018, "mapping_values": [1, 3, 3, 2, 1, 1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, beta))), beta)), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2980141238828677, 2.2888100960345676, 2.2794864778552686, 2.2710494654069344, 2.2592446672099222, 2.2495769115723103, 2.236821707890664, 2.224692566173424, 2.2096811479282037, 2.1933913599970856, 2.1734133684687125, 2.153777549263981, 2.1264237177890006, 2.105549277158351, 2.0769396476647355, 2.045098821673773, 2.0087352089201063, 1.9694753701204102, 1.9303923930946736, 1.8873864152979116, 1.8401659493748035, 1.790061959044462, 1.7396017720812362, 1.6916358616247846, 1.6505383156105164, 1.5944446078412458, 1.5544734553984678, 1.517821680159538, 1.478355986693154, 1.444855364369458, 1.4050704062874637, 1.3743226849533674, 1.3487870018196584, 1.3210870951016533, 1.2910488116632537, 1.2753348408153484, 1.246510278783407, 1.2314566274313423, 1.1959726704960376, 1.1847337895947487, 1.181886712557856, 1.1594866579077452, 1.1401694189713316, 1.1356969529517087, 1.1043576086674385, 1.0958782721819138, 1.1020356452759499, 1.0777156173025597, 1.0686366385504114, 1.0609190814514926, 1.0344365018312531, 1.0242678861670946, 1.021788736486227, 1.0132086421079514, 1.005408973804696, 0.9944967011167168, 0.9958497208060054, 0.9766789123980817, 0.968875603157185, 0.9631386002482141, 0.9573921452675828, 0.9527049521885969, 0.9401404730096832, 0.9416964773913857, 0.9420956926827008, 0.9260603099167859, 0.9268003748849146, 0.9229664810896392, 0.9098264412747051, 0.9112062049249002, 0.9077629753076137, 0.9063980396255888, 0.892751204788, 0.897007917006884, 0.8877227310932166, 0.880624450437145, 0.8710533100395722, 0.8772337314490833, 0.8736808310016713, 0.8745082234741123, 0.8654774453551495, 0.8542063190810764, 0.8530757492716916, 0.8614745212190139, 0.8466195766605548, 0.8475120945487591, 0.8471104967485502, 0.8414567304230669, 0.8379317488038639, 0.8235695171255429, 0.8285307831390107, 0.831900473189565, 0.8242660170816364, 0.8312255630340748, 0.825177797488942, 0.8227631249416458, 0.8110101018930077, 0.8216843114017637, 0.8084725319764492, 0.802019209870258], "accuracy": [0.1002509593963623, 0.1270637959241867, 0.15202747285366058, 0.17619864642620087, 0.21304979920387268, 0.22559767961502075, 0.2534671723842621, 0.2751287817955017, 0.2907145619392395, 0.31699907779693604, 0.3369435966014862, 0.34064191579818726, 0.36943599581718445, 0.37339848279953003, 0.38805970549583435, 0.3961167633533478, 0.4105137884616852, 0.4239862561225891, 0.4313828945159912, 0.4349491596221924, 0.452119916677475, 0.46110156178474426, 0.46651697158813477, 0.47391360998153687, 0.48091402649879456, 0.4979526996612549, 0.5033681392669678, 0.5099722743034363, 0.5163122415542603, 0.5274072289466858, 0.5385021567344666, 0.5373134613037109, 0.5456346869468689, 0.5495971441268921, 0.5588429570198059, 0.5624092221260071, 0.5688812732696533, 0.579051673412323, 0.5845991373062134, 0.591731607913971, 0.587372899055481, 0.5976753234863281, 0.6037511825561523, 0.5996565818786621, 0.6126006841659546, 0.6159027814865112, 0.6122044920921326, 0.6239598393440247, 0.6206578016281128, 0.6211860775947571, 0.6339981555938721, 0.637828528881073, 0.6391493678092957, 0.6449610590934753, 0.64231938123703, 0.6489235162734985, 0.6445648074150085, 0.654999315738678, 0.6609430909156799, 0.6637167930603027, 0.6563201546669006, 0.6631884574890137, 0.6662263870239258, 0.6585655808448792, 0.6675472259521484, 0.6687359809875488, 0.6686038970947266, 0.6629242897033691, 0.6785101294517517, 0.6723021864891052, 0.6753401160240173, 0.6787742972373962, 0.681547999382019, 0.6790384650230408, 0.6831330060958862, 0.6807554960250854, 0.6826046705245972, 0.6804913282394409, 0.6806234121322632, 0.6926429867744446, 0.6894729733467102, 0.6913221478462219, 0.6950204968452454, 0.6859067678451538, 0.6927750706672668, 0.698718786239624, 0.691850483417511, 0.6955488324165344, 0.6975300312042236, 0.702681303024292, 0.7033417224884033, 0.7022850513458252, 0.703209638595581, 0.7013604640960693, 0.7000396251678467, 0.7029454708099365, 0.7045304179191589, 0.7029454708099365, 0.7135120630264282, 0.7111346125602722], "val_loss": [1.9618457385471888, 1.9529121262686593, 1.9438233375549316, 1.9344073704310827, 1.9243523052760534, 1.9136570521763392, 1.9018519265311105, 1.8888952391488212, 1.874464443751744, 1.8581758907863073, 1.8396868024553572, 1.8187846456255232, 1.7948613848005022, 1.768622875213623, 1.7393814495631628, 1.7067500863756453, 1.6707029683249337, 1.6314498356410436, 1.5893620082310267, 1.5448431968688965, 1.4979936395372664, 1.4496132646288191, 1.3999203954424178, 1.3505008220672607, 1.3023680278233118, 1.2542287281581335, 1.2087419714246477, 1.1662889548710413, 1.126706498009818, 1.090557609285627, 1.0566364015851701, 1.026014736720494, 0.9976405075618199, 0.9716281890869141, 0.9470074857984271, 0.9253612245832171, 0.9045280729021344, 0.8860945361001151, 0.8673848254340035, 0.8512768064226423, 0.8372307845524379, 0.8233979940414429, 0.8097787243979317, 0.7982961790902274, 0.7872533798217773, 0.7762845584324428, 0.7668123415538243, 0.7575457096099854, 0.7491411140986851, 0.741069998059954, 0.7326589482171195, 0.7247403860092163, 0.7179221766335624, 0.7115160226821899, 0.7053587777273995, 0.7000573532921928, 0.6948763983590263, 0.6894188097545079, 0.6842090742928642, 0.6796274866376605, 0.6747489486421857, 0.6698799303599766, 0.6656037398747036, 0.6623220273426601, 0.6584359237125942, 0.6542014224188668, 0.6512199299676078, 0.6483397824423653, 0.6445795467921666, 0.6416057518550328, 0.6383833374295916, 0.6356728587831769, 0.6324881996427264, 0.6297247069222587, 0.6269643987928119, 0.6240669318607875, 0.6212402922766549, 0.6189952918461391, 0.6160795518330165, 0.6138866458620343, 0.6115092209407261, 0.6090360879898071, 0.6066770723887852, 0.6042880160467965, 0.602960637637547, 0.6003337587629046, 0.5980106592178345, 0.5958998714174543, 0.59450021811894, 0.5919571263449532, 0.5902586664472308, 0.5884205613817487, 0.5864558049610683, 0.5848039558955601, 0.5834910188402448, 0.5814006328582764, 0.5810051134654454, 0.5791098049708775, 0.5773182596479144, 0.5754156793866839], "val_accuracy": [0.10166666656732559, 0.19699999690055847, 0.2709999978542328, 0.3323333263397217, 0.3646666705608368, 0.3866666555404663, 0.4009999930858612, 0.41966667771339417, 0.4386666715145111, 0.4519999921321869, 0.4633333384990692, 0.476666659116745, 0.49133333563804626, 0.5056666731834412, 0.5236666798591614, 0.5346666574478149, 0.5429999828338623, 0.5559999942779541, 0.562666654586792, 0.5720000267028809, 0.5776666402816772, 0.5806666612625122, 0.5879999995231628, 0.5933333039283752, 0.5996666550636292, 0.6050000190734863, 0.6129999756813049, 0.6269999742507935, 0.6393333077430725, 0.6456666588783264, 0.6549999713897705, 0.6603333353996277, 0.6690000295639038, 0.6759999990463257, 0.6776666641235352, 0.6809999942779541, 0.687666654586792, 0.6909999847412109, 0.6919999718666077, 0.6946666836738586, 0.6973333358764648, 0.6976666450500488, 0.7003333568572998, 0.703000009059906, 0.7020000219345093, 0.7043333053588867, 0.7049999833106995, 0.7096666693687439, 0.7123333215713501, 0.7139999866485596, 0.7176666855812073, 0.715666651725769, 0.7163333296775818, 0.7183333039283752, 0.718666672706604, 0.7193333506584167, 0.7233333587646484, 0.7250000238418579, 0.7256666421890259, 0.7243333458900452, 0.7263333201408386, 0.7276666760444641, 0.7306666374206543, 0.731333315372467, 0.7319999933242798, 0.7319999933242798, 0.7316666841506958, 0.7336666584014893, 0.734666645526886, 0.7366666793823242, 0.737666666507721, 0.7366666793823242, 0.7379999756813049, 0.7393333315849304, 0.7409999966621399, 0.7396666407585144, 0.7400000095367432, 0.7423333525657654, 0.7423333525657654, 0.7433333396911621, 0.7463333606719971, 0.7423333525657654, 0.746999979019165, 0.7443333268165588, 0.7440000176429749, 0.7459999918937683, 0.7493333220481873, 0.746999979019165, 0.7459999918937683, 0.746666669845581, 0.7486666440963745, 0.7506666779518127, 0.750333309173584, 0.7509999871253967, 0.7483333349227905, 0.7513333559036255, 0.75, 0.749666690826416, 0.7506666779518127, 0.7536666393280029]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 0, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.75342857837677, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))), beta)), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), beta), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.298014155373896, 2.2888100780531904, 2.2794865093462975, 2.2710494654069344, 2.2592446672099222, 2.2495768485902525, 2.236821644908606, 2.2246925481920465, 2.2096812738923193, 2.1933910406150714, 2.1734127656674387, 2.153777823645315, 2.126423533314554, 2.1055488227742964, 2.076939085392416, 2.0450980884366583, 2.008733096785313, 1.96947300386876, 1.9303905937287786, 1.8873846766782112, 1.8401641252727052, 1.7900601844620065, 1.7396005957338552, 1.6916352093038685, 1.6505381874105383, 1.5944445043774707, 1.5544710728817013, 1.517821821727458, 1.478358303755817, 1.4448564797344619, 1.4050731893386257, 1.3743274056632773, 1.348794675884214, 1.321092546812815, 1.2910543715460991, 1.2753392766259208, 1.2465205630291218, 1.2314616525807731, 1.1959750144835304, 1.1847390306151822, 1.1818873684057676, 1.159494482940293, 1.1401695637670821, 1.1356916344318533, 1.1043572292005412, 1.0958808271907907, 1.1020260741918189, 1.0777191395898773, 1.0686269715131156, 1.0609077953816783, 1.0344199214739302, 1.0242598125758566, 1.0217809468338503, 1.013203218108895, 1.005405508500395, 0.9944893750359023, 0.9958316532927198, 0.9766692987931891, 0.9688636781580144, 0.9631314715452953, 0.9573787214450235, 0.952689675418157, 0.940128815440202, 0.9416714031163177, 0.9420688439196505, 0.9260535693093062, 0.9267648573501818, 0.9229346599246312, 0.9098125507236078, 0.911203963873708, 0.9077198123257977, 0.9063914237462015, 0.8927371544750407, 0.8970134235675451, 0.8877159034445332, 0.8805947448945616, 0.8710396688580592, 0.8772227551014101, 0.8736842360872524, 0.8744865409875385, 0.8654569423650597, 0.8541858459602273, 0.8530680360401689, 0.861467121708993, 0.8466170798785903, 0.8474961784002157, 0.8471148687740437, 0.8414574677382698, 0.8379111807690541, 0.8236122179843841, 0.8285382065113588, 0.8318797349457444, 0.8242782404425594, 0.8312368669120659, 0.825155582591417, 0.8227633543616635, 0.8110041664796436, 0.8216635842821491, 0.8084972731472873], "accuracy": [0.1002509593963623, 0.1270637959241867, 0.15202747285366058, 0.17619864642620087, 0.21304979920387268, 0.22559767961502075, 0.2534671723842621, 0.2751287817955017, 0.2907145619392395, 0.31699907779693604, 0.33681151270866394, 0.34064191579818726, 0.36943599581718445, 0.37326639890670776, 0.38805970549583435, 0.3961167633533478, 0.4105137884616852, 0.4239862561225891, 0.4313828945159912, 0.4349491596221924, 0.45225200057029724, 0.46110156178474426, 0.46651697158813477, 0.47391360998153687, 0.48091402649879456, 0.4979526996612549, 0.5033681392669678, 0.5101043581962585, 0.5163122415542603, 0.5275393128395081, 0.5385021567344666, 0.5374455451965332, 0.5456346869468689, 0.5495971441268921, 0.5588429570198059, 0.5624092221260071, 0.5691454410552979, 0.5789195895195007, 0.5845991373062134, 0.591731607913971, 0.587372899055481, 0.5976753234863281, 0.6037511825561523, 0.5995244979858398, 0.6124686598777771, 0.6156386137008667, 0.6123365759849548, 0.6238277554512024, 0.6205257177352905, 0.6209219098091125, 0.6341302394866943, 0.6380926966667175, 0.6390172839164734, 0.6448289752006531, 0.64231938123703, 0.6489235162734985, 0.6448289752006531, 0.6551313996315002, 0.6608110070228577, 0.6637167930603027, 0.6564522385597229, 0.6631884574890137, 0.6662263870239258, 0.6586976647377014, 0.667811393737793, 0.6690001487731934, 0.6686038970947266, 0.6627922058105469, 0.6783780455589294, 0.6725663542747498, 0.6757363677024841, 0.6787742972373962, 0.681547999382019, 0.6785101294517517, 0.6831330060958862, 0.6811517477035522, 0.6826046705245972, 0.6806234121322632, 0.6808875799179077, 0.6923788189888, 0.6897371411323547, 0.6913221478462219, 0.6951525807380676, 0.6859067678451538, 0.6926429867744446, 0.6989829540252686, 0.6919825673103333, 0.6960771083831787, 0.6973979473114014, 0.7021529674530029, 0.7036058902740479, 0.7016246318817139, 0.7033417224884033, 0.7013604640960693, 0.7003037929534912, 0.7029454708099365, 0.7045304179191589, 0.7033417224884033, 0.713908314704895], "val_loss": [1.9618457385471888, 1.9529121262686593, 1.9438234056745256, 1.9344073704310827, 1.9243523052760534, 1.9136569840567452, 1.9018519265311105, 1.8888952391488212, 1.8744643756321497, 1.858175413949149, 1.839686666216169, 1.818784441266741, 1.7948612485613142, 1.768622943333217, 1.7393806321280343, 1.7067486899239677, 1.6706998688834054, 1.6314489500863212, 1.5893604074205672, 1.5448427540915353, 1.497990676334926, 1.44961040360587, 1.399919067110334, 1.3504984038216727, 1.3023661545344762, 1.254227808543614, 1.2087407452719552, 1.1662932123456682, 1.1267094952719552, 1.090559482574463, 1.0566388879503523, 1.026017529623849, 0.997640780040196, 0.9716313907078334, 0.9470146383558001, 0.925365652356829, 0.9045219761984689, 0.8860900742667062, 0.8673874480383736, 0.8512780666351318, 0.8372281449181693, 0.823392391204834, 0.8097753865378243, 0.7982845476695469, 0.7872395515441895, 0.7762828554425921, 0.7668127502713885, 0.7575449092047555, 0.7491353579929897, 0.7410607167652675, 0.7326611621039254, 0.7247442007064819, 0.7179217849458966, 0.7115170444761004, 0.7053571598870414, 0.7000540835516793, 0.6948693309511457, 0.6894100563866752, 0.6841941390718732, 0.6796201637813023, 0.6747408764702933, 0.6698657444545201, 0.665596638407026, 0.6623065982546125, 0.6584091697420392, 0.6541712624686105, 0.6511972802025932, 0.6483124664851597, 0.644566535949707, 0.6415725776127407, 0.6383462633405413, 0.6356496470315116, 0.6324707099369594, 0.6297036579677037, 0.6269479990005493, 0.6240465981619698, 0.6212326799120221, 0.618985755102975, 0.6160805736269269, 0.613890392439706, 0.6115224702017648, 0.6090425593512399, 0.6066734961100987, 0.6042678526469639, 0.6029291323253086, 0.6002800294331142, 0.5979590245655605, 0.595862865447998, 0.5944679975509644, 0.5919534819466727, 0.5902795791625977, 0.5884528160095215, 0.5864674363817487, 0.5848188740866525, 0.5834916319165911, 0.5813972268785749, 0.5809739487511771, 0.5791103328977313, 0.577307939529419], "val_accuracy": [0.10166666656732559, 0.19699999690055847, 0.2709999978542328, 0.3323333263397217, 0.3646666705608368, 0.3866666555404663, 0.4009999930858612, 0.41966667771339417, 0.4386666715145111, 0.4519999921321869, 0.4633333384990692, 0.476666659116745, 0.49133333563804626, 0.5056666731834412, 0.5236666798591614, 0.5346666574478149, 0.5433333516120911, 0.5559999942779541, 0.562666654586792, 0.5720000267028809, 0.5776666402816772, 0.5806666612625122, 0.5879999995231628, 0.5933333039283752, 0.5996666550636292, 0.6053333282470703, 0.6129999756813049, 0.6269999742507935, 0.6393333077430725, 0.6456666588783264, 0.6549999713897705, 0.6603333353996277, 0.6690000295639038, 0.6759999990463257, 0.6776666641235352, 0.6809999942779541, 0.687666654586792, 0.6909999847412109, 0.6919999718666077, 0.6946666836738586, 0.6973333358764648, 0.6980000138282776, 0.7003333568572998, 0.703000009059906, 0.7020000219345093, 0.7043333053588867, 0.7049999833106995, 0.7096666693687439, 0.7123333215713501, 0.7139999866485596, 0.7173333168029785, 0.715666651725769, 0.7160000205039978, 0.7183333039283752, 0.718666672706604, 0.7193333506584167, 0.7236666679382324, 0.7250000238418579, 0.7256666421890259, 0.7243333458900452, 0.7263333201408386, 0.7276666760444641, 0.7306666374206543, 0.731333315372467, 0.7319999933242798, 0.7319999933242798, 0.7316666841506958, 0.734000027179718, 0.734666645526886, 0.7363333106040955, 0.737666666507721, 0.7366666793823242, 0.7379999756813049, 0.7393333315849304, 0.7409999966621399, 0.7400000095367432, 0.7400000095367432, 0.7423333525657654, 0.7419999837875366, 0.7433333396911621, 0.7459999918937683, 0.7423333525657654, 0.746999979019165, 0.7443333268165588, 0.7440000176429749, 0.7456666827201843, 0.749666690826416, 0.746999979019165, 0.7463333606719971, 0.746666669845581, 0.7486666440963745, 0.7506666779518127, 0.7506666779518127, 0.7516666650772095, 0.7480000257492065, 0.7516666650772095, 0.749666690826416, 0.749666690826416, 0.7506666779518127]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 6, 3, 0, 4, 3, 2, 5, 5, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 32, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7519999742507935, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.divide_no_nan(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.290730033363601, 2.2201315690623677, 2.0254132604365966, 1.622209425001506, 1.3687625118864526, 1.2620578743384545, 0.9744309545854426, 0.9323849487676281, 0.881066311210327, 0.841659900448058, 0.8354934897830284, 0.7783006681206834, 0.7539972935401847, 0.7630733678747461, 0.7520320488241102, 0.7275690456202568, 0.7131678631765148, 0.6897409002085907, 0.6838160162320966, 0.6628843585907302, 0.6542378601664487, 0.639378300912628, 0.6235045388216954, 0.6005023177651649, 0.603153473169513, 0.57555498361682, 0.5668253329341533, 0.5674712104079997, 0.5562656359933292, 0.5404914842856763, 0.5446804241497346, 0.5322490632967029, 0.5201920091184753, 0.518821074804846, 0.5122381971260623, 0.5076475074545992, 0.4977550415346541, 0.48952807742905985, 0.49219188508639766, 0.47522942695666803, 0.4765536425380092, 0.47078235172057087, 0.4759221318658978, 0.47406551309974043, 0.45682089100219725, 0.44748589964496177, 0.45319223209079923, 0.45825166813906204, 0.44454498328647407, 0.43358392045718647, 0.4301971756527059, 0.412963139957299, 0.4129650058322469, 0.40749563391513166, 0.4127180275585138, 0.4008034133734783, 0.4011142205064638, 0.4024219858789677, 0.39170501882358233, 0.3889110292685802, 0.37347397272770416, 0.38748707114398406, 0.37638041955321583, 0.36584773714815416], "accuracy": [0.11795007437467575, 0.284110426902771, 0.3955884277820587, 0.45106327533721924, 0.5304450988769531, 0.5843349695205688, 0.6476026773452759, 0.6518293619155884, 0.6745476126670837, 0.6890767216682434, 0.6857746839523315, 0.7071720957756042, 0.7119271159172058, 0.7053229212760925, 0.7149649858474731, 0.7298903465270996, 0.7364945411682129, 0.7312111854553223, 0.7407211661338806, 0.7597411274909973, 0.7552502751350403, 0.7556465268135071, 0.7646281719207764, 0.7804781198501587, 0.7708360552787781, 0.7845727205276489, 0.7836481332778931, 0.7848368883132935, 0.7898560166358948, 0.7950072884559631, 0.7930260300636292, 0.7952714562416077, 0.8029322624206543, 0.8058380484580994, 0.8087438941001892, 0.8094043135643005, 0.8129705190658569, 0.8153480291366577, 0.8191784620285034, 0.8238013386726379, 0.8152159452438354, 0.8214238286018372, 0.8206313848495483, 0.8240655064582825, 0.8285563588142395, 0.8264430165290833, 0.8277638554573059, 0.8310658931732178, 0.8350284099578857, 0.837141752243042, 0.8362171649932861, 0.8424250483512878, 0.8432175517082214, 0.8396512866020203, 0.8399154543876648, 0.8461233377456665, 0.8430854678153992, 0.8459912538528442, 0.846387505531311, 0.8520671129226685, 0.852331280708313, 0.8457271456718445, 0.8541803956031799, 0.8610487580299377], "val_loss": [1.931513445717948, 1.8194081442696708, 1.4860079629080636, 0.9817992959703717, 0.7763900586536953, 0.7165210928235736, 0.6816254002707345, 0.6853137186595372, 0.6266612325395856, 0.6071822983877999, 0.5898356778281075, 0.5787246397563389, 0.5624229567391532, 0.5722528185163226, 0.5330027001244682, 0.5324815171105521, 0.5079269068581718, 0.49554196425846647, 0.48466462748391287, 0.4829820394515991, 0.4752183641706194, 0.47031591619764057, 0.4507429599761963, 0.45164384160723003, 0.44674047401973177, 0.4341923679624285, 0.43433187689099995, 0.43426454067230225, 0.4256571446146284, 0.42029402937207905, 0.41429797240665983, 0.41158749376024517, 0.41606450932366507, 0.41817474365234375, 0.4102353538785662, 0.4031846523284912, 0.3966874395098005, 0.4018814648900713, 0.39755736930029734, 0.39536096368517193, 0.39773216417857576, 0.39722394943237305, 0.3959927558898926, 0.38869902065822054, 0.3821318915912083, 0.38102117606571745, 0.39245969908578054, 0.39325791597366333, 0.39478938920157297, 0.3955181496483939, 0.39215586866651264, 0.3693251609802246, 0.36394132886614117, 0.3745285953794207, 0.37820738554000854, 0.37048092910221647, 0.37340565238680157, 0.38750429664339336, 0.39229877505983624, 0.38115510770252775, 0.374488890171051, 0.37636907611574444, 0.38353218351091656, 0.3888475809778486], "val_accuracy": [0.335999995470047, 0.4519999921321869, 0.5356666445732117, 0.6503333449363708, 0.6753333210945129, 0.7043333053588867, 0.6953333616256714, 0.7250000238418579, 0.7153333425521851, 0.7316666841506958, 0.734333336353302, 0.7400000095367432, 0.7453333139419556, 0.7476666569709778, 0.7563333511352539, 0.7639999985694885, 0.7793333530426025, 0.7870000004768372, 0.7866666913032532, 0.7903333306312561, 0.796999990940094, 0.7993333339691162, 0.800000011920929, 0.79666668176651, 0.7996666431427002, 0.8100000023841858, 0.8193333148956299, 0.8213333487510681, 0.8149999976158142, 0.8146666884422302, 0.8216666579246521, 0.8259999752044678, 0.8243333101272583, 0.8259999752044678, 0.8270000219345093, 0.8223333358764648, 0.8286666870117188, 0.8296666741371155, 0.8326666951179504, 0.8343333601951599, 0.8349999785423279, 0.8376666903495789, 0.8346666693687439, 0.8379999995231628, 0.8360000252723694, 0.8416666388511658, 0.8403333425521851, 0.8426666855812073, 0.8456666469573975, 0.8416666388511658, 0.8416666388511658, 0.8510000109672546, 0.8489999771118164, 0.8483333587646484, 0.8489999771118164, 0.8486666679382324, 0.8539999723434448, 0.8600000143051147, 0.8603333234786987, 0.8586666584014893, 0.856333315372467, 0.856333315372467, 0.8569999933242798, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 3, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.3514285683631897, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.333939832545794, 2.306490148047509, 2.3014111239219526, 2.224209181180074, 2.248428737766093, 2.3052785111582117, 2.2126703428601733, 2.2742189579730523, 2.304591894874074, 2.303907907461021, 2.3032126749164914], "accuracy": [0.1534803807735443, 0.1006472036242485, 0.11134592443704605, 0.1690661758184433, 0.17051908373832703, 0.10368511080741882, 0.2020869106054306, 0.12455421686172485, 0.10011887550354004, 0.09853387624025345, 0.09945846349000931], "val_loss": [1.979593004499163, 1.9741811752319336, 1.9649244035993303, 1.9736125128609794, 1.9822301183428084, 1.909193652016776, 1.9615068435668945, 1.9757302829197474, 1.9739300182887487, 1.9737070628574915, 1.9737507956368583], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.18766666948795319, 0.09799999743700027, 0.10166666656732559, 0.3333333432674408, 0.10333333164453506, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 1, 4, 3, 8, 1, 5, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 32, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2328571379184723, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(beta, beta)), tf.math.multiply(beta, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.33386689456793, 2.306305010305215, 2.300171805662549, 2.2045063448147513, 2.307014007357999, 2.303803558315599, 2.3030201894039366, 2.3031183861785514], "accuracy": [0.1534803807735443, 0.09985470771789551, 0.11755382269620895, 0.23959846794605255, 0.09747721254825592, 0.09576013684272766, 0.09800554811954498, 0.09496764093637466], "val_loss": [1.979593345097133, 1.973977770124163, 1.9542315346854073, 1.9801974296569824, 1.9745176860264368, 1.9737413270132882, 1.9736910547528947, 1.9736534527369909], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.24566666781902313, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 2, 8, 3, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 4, 5, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), beta)), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.33387719729888, 2.30639651498428, 2.3004989147879082, 2.2729995284712214, 2.3036139982566386, 2.3030880916198924, 2.302895587999996, 2.3030494549302474], "accuracy": [0.1534803807735443, 0.10038304328918457, 0.11319508403539658, 0.15295206010341644, 0.09417514503002167, 0.09628847241401672, 0.09998679161071777, 0.09628847241401672], "val_loss": [1.9795847620282854, 1.9739770208086287, 1.9575848579406738, 1.9751714978899275, 1.9738522257123674, 1.9736692564828056, 1.973688738686698, 1.9736041341509138], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.2213333398103714, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.1693333387374878]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 6, 2, 2, 1, 5, 1, 9, 2, 8, 8, 6, 8, 1, 6, 4, 7, 9, 5, 5, 2, 8, 2, 8, 3, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 2, 0, 2, 3, 1, 3, 3, 3, 2, 4, 4, 5, 0, 3, 1, 1, 2], [64, 98, 39, 57, 34, 59], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 41, 41, 26, 15, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(beta)), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(grad, alpha), grad)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, grad))))), grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.333877228789908, 2.30639651498428, 2.3004988473341244, 2.273365102408191, 2.3036301912270707, 2.3030725997027437, 2.3028563594364644, 2.3029719302840377], "accuracy": [0.1534803807735443, 0.10038304328918457, 0.11319508403539658, 0.15361246466636658, 0.09259014576673508, 0.09536388516426086, 0.09549596905708313, 0.09655263274908066], "val_loss": [1.9795847620282854, 1.9739770208086287, 1.9575866290501185, 1.9751508576529366, 1.9738311086382185, 1.9736545426504952, 1.9736415318080358, 1.9734595843723841], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.2213333398103714, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 14, 12, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, beta)), tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, grad))))), beta), tf.math.add(beta, alpha)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.33387719729888, 2.30639651498428, 2.300498860843776, 2.2727326502842184, 2.303630707428015, 2.303075274141347, 2.3028645154554703, 2.303038506003387], "accuracy": [0.1534803807735443, 0.10038304328918457, 0.11319508403539658, 0.15374454855918884, 0.09377889335155487, 0.09496764093637466, 0.09338264167308807, 0.09457138925790787], "val_loss": [1.9795847620282854, 1.9739770208086287, 1.95758513041905, 1.9751548767089844, 1.973825182233538, 1.9736715725490026, 1.9736947332109724, 1.9735452788216727], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.2213333398103714, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 2, 2, 3, 2, 9, 4, 3, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [4, 5, 3, 3, 3, 1, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2191428542137146, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.33387719729888, 2.306396483493251, 2.3005231877580026, 2.2789487934477846, 2.303615921382277, 2.303042530934761, 2.3027784096928574, 2.302573763573127], "accuracy": [0.1534803807735443, 0.10038304328918457, 0.11332716792821884, 0.15242372453212738, 0.09391097724437714, 0.10051512718200684, 0.09470347315073013, 0.10460969805717468], "val_loss": [1.9795847620282854, 1.9739768164498466, 1.958055087498256, 1.9751296724591936, 1.9738213675362724, 1.9736213002886092, 1.9735719817025321, 1.9727973256792342], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.2293333262205124, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.0989999994635582, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 2, 4, 3, 4, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 2, 2, 0, 2, 1, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [78, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10371428728103638, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(grad, beta))), beta), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta), alpha)), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [6.350506610401775, 2.683335413943507, 2.7758140397692213, 2.454623544945173, 2.7029809174583637, 2.428678815422466, 2.4308519530620685, 2.512285128403113, 2.4277532442355154], "accuracy": [0.16655659675598145, 0.10579843819141388, 0.09826971590518951, 0.09853387624025345, 0.09945846349000931, 0.09694888442754745, 0.10196803510189056, 0.10210011899471283, 0.10342095047235489], "val_loss": [2.075230394090925, 2.2171267781938826, 2.092884199959891, 3.1181644712175642, 2.1578354835510254, 2.1246188708714078, 2.0840223857334683, 2.114621571132115, 2.180706637246268], "val_accuracy": [0.10100000351667404, 0.0989999994635582, 0.10166666656732559, 0.12133333086967468, 0.09833333641290665, 0.10166666656732559, 0.0989999994635582, 0.10066666454076767, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 5, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 3, 2, 2, 2, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.multiply(grad, beta))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302434930743448, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 2, 2, 3, 2, 4, 3, 9, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 5, 3, 3, 3, 1, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302434930743448, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 4, 4, 3, 2, 2, 1, 8, 1, 4, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 5, 3, 2, 3, 1, 3, 3, 3, 3, 2, 2, 4, 4, 5, 2, 3, 1, 1, 2, 5], [65, 15, 9, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 48, 48, 27, 21, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), grad))), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(beta)))), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), beta))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, alpha)))))))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(beta), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [69, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.0771428570151329, "mapping_values": [1, 1, 1, 0, 1, 0, 43, 43, 24, 19, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, beta)), tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))))))), grad)), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), beta))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.299871866083605, 2.3006816172344715, 2.301685489699384, 2.3022603416770377, 2.301935715776755, 2.302288667385085], "accuracy": [0.09668471664190292, 0.09813763201236725, 0.0882314071059227, 0.0820235088467598, 0.08651433140039444, 0.07858935743570328], "val_loss": [1.9710373197283064, 1.9724669456481934, 1.9730112893240792, 1.9731940541948592, 1.9733104705810547, 1.9733990941728865], "val_accuracy": [0.09033333510160446, 0.08566666394472122, 0.07866666465997696, 0.07000000029802322, 0.07066666334867477, 0.08966666460037231]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 7, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 2, 2, 3, 2, 9, 4, 3, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 4, 5, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.07371428608894348, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301195463468496, 2.3003177347121504, 2.3012596593478163, 2.303035251531524, 2.3025436861136206, 2.302622864448226, 2.30303860066542, 2.3036198323476174], "accuracy": [0.09351472556591034, 0.09932637959718704, 0.09866596013307571, 0.09906221181154251, 0.108440101146698, 0.10394927859306335, 0.09919429570436478, 0.09985470771789551], "val_loss": [1.9696231569562639, 1.9716907228742326, 1.9733033861432756, 1.9735544749668665, 1.973750046321324, 1.974165780203683, 1.9746673447745187, 1.9756193161010742], "val_accuracy": [0.0663333311676979, 0.10233332961797714, 0.11533333361148834, 0.10566666722297668, 0.10533333569765091, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 4, 2, 3, 8, 4, 3, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 2, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 9, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302020996946779, 2.30230889322263, 2.302457897875051, 2.3037445863570833, 2.302466396642415, 2.3033603672432688], "accuracy": [0.09140139818191528, 0.09377889335155487, 0.09047681838274002, 0.08902391046285629, 0.08875974267721176, 0.0886276587843895], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 0, 3, 1, 4, 4, 8, 1, 5, 2, 6, 6, 6, 8, 1, 6, 2, 1, 1, 5, 6, 2, 4, 2, 1, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 0, 4, 2, 5, 2, 3, 1, 1, 2, 3, 2, 1], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 55, 55, 32, 23, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(beta, tf.math.subtract(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), beta))), tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.math.add(beta, grad))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))))), tf.math.multiply(tf.math.negative(grad), beta)))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302020996946779, 2.30230889322263, 2.302457897875051, 2.3037445863570833, 2.302466396642415, 2.3033603672432688], "accuracy": [0.09140139818191528, 0.09377889335155487, 0.09047681838274002, 0.08902391046285629, 0.08875974267721176, 0.0886276587843895], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 5, 3, 3, 3, 1, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302020996946779, 2.30230889322263, 2.302457897875051, 2.3037445863570833, 2.302466396642415, 2.3033603672432688], "accuracy": [0.09140139818191528, 0.09377889335155487, 0.09047681838274002, 0.08902391046285629, 0.08875974267721176, 0.0886276587843895], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]