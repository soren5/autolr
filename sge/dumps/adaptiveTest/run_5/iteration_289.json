[{"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 47, 85, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8071428537368774, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), alpha), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0410021592471357, 1.6544618548781345, 1.4424954507612613, 1.099248720071949, 0.9315830024950509, 0.8923600485705586, 0.8090548225208721, 0.8022260900974085, 0.7268997501341297, 0.6803606137654974, 0.7161193626148353, 0.6804725808742071, 0.6607430414469518, 0.613149711098795, 0.6367106443430218, 0.6092066067698892, 0.5773497468066994, 0.5585337504026141, 0.5840088043230526, 0.5639237554916349, 0.5385837723802283, 0.542059508848184, 0.5109964007746195, 0.5177370681581307, 0.5075649811670119, 0.5104331834016144, 0.4937733895806053, 0.5083301388482061], "accuracy": [0.30405494570732117, 0.41870296001434326, 0.4998018741607666, 0.5799762010574341, 0.6485272645950317, 0.6538106203079224, 0.6921146512031555, 0.696209192276001, 0.722229540348053, 0.7408532500267029, 0.7226257920265198, 0.7395324110984802, 0.7449478507041931, 0.7597411274909973, 0.7548540234565735, 0.7650244235992432, 0.7836481332778931, 0.7923656105995178, 0.7693831920623779, 0.7861577272415161, 0.7960638999938965, 0.7979130744934082, 0.81112140417099, 0.7951393723487854, 0.8049134612083435, 0.8054417967796326, 0.8062343001365662, 0.8042530417442322], "val_loss": [1.3620319707053048, 1.1853504521506173, 0.967597382409232, 0.7474157980510167, 0.7247483049120221, 0.6445269244057792, 0.7020560503005981, 0.600172587803432, 0.5404666491917202, 0.6059902395520892, 0.5409003155572074, 0.5138131380081177, 0.5046385186059135, 0.5111263820103237, 0.4994055543627058, 0.4801912648337228, 0.4514906747000558, 0.501394237790789, 0.45819958618709017, 0.462333151272365, 0.44411628586905344, 0.4503363711493356, 0.4236464926174709, 0.44526069504874094, 0.43001154490879606, 0.4301412105560303, 0.4249632784298488, 0.42102594886507305], "val_accuracy": [0.4779999852180481, 0.5270000100135803, 0.5609999895095825, 0.6510000228881836, 0.6769999861717224, 0.6853333115577698, 0.6663333177566528, 0.7093333601951599, 0.7456666827201843, 0.7043333053588867, 0.753333330154419, 0.7630000114440918, 0.7666666507720947, 0.7559999823570251, 0.7696666717529297, 0.778333306312561, 0.7923333048820496, 0.7666666507720947, 0.7900000214576721, 0.7786666750907898, 0.800000011920929, 0.784333348274231, 0.8173333406448364, 0.7776666879653931, 0.8133333325386047, 0.796999990940094, 0.8086666464805603, 0.8100000023841858]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 4, 1, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8057143092155457, "mapping_values": [1, 17, 17, 12, 5, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), alpha), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0410019548388676, 1.654931103280979, 1.4416972421116565, 1.1033550368135066, 0.9278939976872959, 0.890217450411092, 0.8108679506489315, 0.8028203958391813, 0.7296162807646995, 0.6788347179643104, 0.7129076443107735, 0.6805586624753285, 0.6550316471213348, 0.6142800550309029, 0.6436492316616745, 0.610039049112219, 0.5721454365835088, 0.5710666497952556, 0.5564245425431389, 0.5540497945819659, 0.5433493590137631, 0.5344619633869299, 0.5261101070538079, 0.5277185224586112, 0.5104206517750104, 0.5171225504584835, 0.4980308869810562, 0.5145936977231916, 0.4820198152224622], "accuracy": [0.30405494570732117, 0.41804254055023193, 0.5003302097320557, 0.5807687044143677, 0.6501122713088989, 0.6556597352027893, 0.6911900639533997, 0.6956809163093567, 0.7210407853126526, 0.7420420050621033, 0.7228899598121643, 0.7375511527061462, 0.7495707273483276, 0.7604015469551086, 0.7537974119186401, 0.763439416885376, 0.7877426743507385, 0.7803460359573364, 0.7841764688491821, 0.7868181467056274, 0.7957997918128967, 0.791969358921051, 0.8024039268493652, 0.8024039268493652, 0.8104609847068787, 0.7998943328857422, 0.8084797263145447, 0.8016114234924316, 0.8138951063156128], "val_loss": [1.3619066647120885, 1.1844498770577567, 0.9678258895874023, 0.7289000238691058, 0.7329752785818917, 0.6481192111968994, 0.681472761290414, 0.5901508671896798, 0.5406064305986676, 0.6195636136191232, 0.5410145180565971, 0.5054741076060704, 0.49942021710532053, 0.5131559371948242, 0.5010699204036168, 0.479724509375436, 0.45048301560538156, 0.4706858055932181, 0.4370598111833845, 0.45221854959215435, 0.4280500752585275, 0.450989944594247, 0.45751610824040007, 0.40106554542269024, 0.42708888224193026, 0.44884373460497173, 0.4299479467528207, 0.4155334063938686, 0.43066786016736713], "val_accuracy": [0.47866666316986084, 0.5239999890327454, 0.5636666417121887, 0.6613333225250244, 0.6759999990463257, 0.6830000281333923, 0.6713333129882812, 0.7106666564941406, 0.746666669845581, 0.7003333568572998, 0.7526666522026062, 0.7666666507720947, 0.7696666717529297, 0.7556666731834412, 0.7639999985694885, 0.7793333530426025, 0.7943333387374878, 0.7853333353996277, 0.8016666769981384, 0.79666668176651, 0.8133333325386047, 0.7856666445732117, 0.7833333611488342, 0.8236666917800903, 0.809333324432373, 0.7906666398048401, 0.8056666851043701, 0.8166666626930237, 0.8106666803359985]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7942857146263123, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0606302197236803, 1.8550524051714379, 1.4228225935404533, 1.0975612913061679, 0.9823992233376508, 0.9254174347740075, 0.8395998766078705, 0.7539472318344332, 0.7224434216528552, 0.7135317192070079, 0.7009002114441322, 0.6581284839636803, 0.67553013460023, 0.6277354980000037, 0.6359667221962295, 0.6007857442516236, 0.611764838871561, 0.6167221677663887, 0.5587731174206485, 0.5601546599439516, 0.5583816148806179, 0.5386989416778206, 0.5154268506015407, 0.53507159972912], "accuracy": [0.313300758600235, 0.42504292726516724, 0.5068022608757019, 0.5997886657714844, 0.6395456194877625, 0.6444327235221863, 0.681547999382019, 0.7040021419525146, 0.7293620109558105, 0.7235503792762756, 0.7228899598121643, 0.7478536367416382, 0.7481178045272827, 0.7541936039924622, 0.7516840696334839, 0.7744023203849792, 0.7658169269561768, 0.7643640041351318, 0.7905164361000061, 0.7853652238845825, 0.7869502305984497, 0.7973847389221191, 0.8094043135643005, 0.7984414100646973], "val_loss": [1.426142590386527, 1.5001153264726912, 0.7977340391704014, 0.8240618876048497, 0.8053768532616752, 0.7554679938725063, 0.6353063072477069, 0.6028192043304443, 0.5729041610445295, 0.5621425764901298, 0.5289820092064994, 0.5805392776216779, 0.5288666997637067, 0.49275473185947966, 0.49624526500701904, 0.5292544535228184, 0.47597362313951763, 0.45958086422511507, 0.4432730163846697, 0.4793322426932199, 0.4616793053490775, 0.4412747195788792, 0.4689002888543265, 0.4668540954589844], "val_accuracy": [0.4749999940395355, 0.5256666541099548, 0.6309999823570251, 0.6359999775886536, 0.621666669845581, 0.6589999794960022, 0.6976666450500488, 0.7099999785423279, 0.7446666955947876, 0.7226666808128357, 0.7423333525657654, 0.7400000095367432, 0.753333330154419, 0.778333306312561, 0.7829999923706055, 0.7643333077430725, 0.7786666750907898, 0.7973333597183228, 0.8036666512489319, 0.7639999985694885, 0.7933333516120911, 0.8016666769981384, 0.7943333387374878, 0.7699999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [98, 43, 85, 75, 19, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.597428560256958, "mapping_values": [1, 16, 16, 10, 6, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026852204326973, 2.298066792282147, 2.2980739511062347, 2.2952439718872504, 2.2912728622400245, 2.290582137825215, 2.288935834988942, 2.285426130132306, 2.2829809229466203, 2.2808442797564465, 2.276756586730598, 2.2758338022477687, 2.273931133433765, 2.270131195887378, 2.267888033851389, 2.266629524108772, 2.263758095295485, 2.2626221036048157, 2.2592878471417843, 2.25485036118376, 2.25248171649888, 2.249444277531215, 2.248095357643221, 2.2457138270497903, 2.2429989783078326, 2.23848314342592, 2.2361361065938756, 2.233634697872933, 2.230589456404551, 2.2254730291244393, 2.2247943064445646, 2.219317586997308, 2.2174655500262594, 2.21177927343333, 2.2080792965685543, 2.2053713991248047, 2.1989965222499404, 2.198357068032731, 2.194949677875092, 2.189333052919242, 2.1849138942361273, 2.1794304444317207, 2.174647741376952, 2.169591292949511, 2.166348482781177, 2.1601989928993643, 2.1536961819879634, 2.152352306049545, 2.142617627252063, 2.138037061111849, 2.1356180877481483, 2.1290228935894695, 2.1214740329556507, 2.1143343881010743, 2.1072211901997657, 2.098888939366349, 2.0975062658191277, 2.088484660052762, 2.079998322922587, 2.072550710858985, 2.0689754291469424, 2.059686427418078, 2.0495944995575295, 2.043709896149621, 2.036481952623149, 2.024857137197233, 2.021012903251794, 2.00909143798875, 2.0016643057220946, 1.9904434289190323, 1.9822059597368835, 1.9738695548903658, 1.961109197827819, 1.9537475773403594, 1.9411530114593223, 1.9356383564229402, 1.9237394115755098, 1.9117190406747924, 1.898509025620967, 1.8892139002411137, 1.8741982098599435, 1.868604920590952, 1.8557539622954657, 1.8451699717579233, 1.828897055444653, 1.8197533041179739, 1.8108950031746838, 1.7960752262462636, 1.7843319122675718, 1.7795889890110488, 1.7635667537260427, 1.7506912660290144, 1.7398888583920809, 1.7288688876767122, 1.7175739467293596, 1.7048355821668197, 1.6935206379290222, 1.6821948755466076, 1.676662271474063, 1.6643423714799621], "accuracy": [0.08638224750757217, 0.09919429570436478, 0.09602430462837219, 0.10527011007070541, 0.11927089840173721, 0.12481838464736938, 0.1212521493434906, 0.13353586196899414, 0.14014001190662384, 0.1508387327194214, 0.16483952105045319, 0.16180160641670227, 0.16616034507751465, 0.17593449354171753, 0.18636904656887054, 0.18095363676548004, 0.19112402200698853, 0.19614318013191223, 0.2016906589269638, 0.21199312806129456, 0.22322018444538116, 0.22903183102607727, 0.23061682283878326, 0.23616431653499603, 0.2339189052581787, 0.2514859437942505, 0.2627129852771759, 0.25056135654449463, 0.2658829689025879, 0.27341169118881226, 0.2763175368309021, 0.28345000743865967, 0.2926958203315735, 0.29679039120674133, 0.302469938993454, 0.3085457682609558, 0.3089420199394226, 0.3089420199394226, 0.3117157518863678, 0.31197991967201233, 0.3218861520290375, 0.3339056968688965, 0.33641526103019714, 0.33364152908325195, 0.33562275767326355, 0.3479065001010895, 0.35068023204803467, 0.3529256284236908, 0.36164310574531555, 0.3563597798347473, 0.3549068868160248, 0.3699643313884735, 0.36824727058410645, 0.37062475085258484, 0.37366265058517456, 0.38224804401397705, 0.3807951509952545, 0.38343679904937744, 0.38845595717430115, 0.390569269657135, 0.38607844710350037, 0.39268261194229126, 0.4015321731567383, 0.4039096534252167, 0.39743760228157043, 0.4060229957103729, 0.4091929793357849, 0.40443798899650574, 0.4157971143722534, 0.4171179533004761, 0.42609959840774536, 0.42385417222976685, 0.42491084337234497, 0.4303262531757355, 0.4282129108905792, 0.42491084337234497, 0.4278166592121124, 0.4395720660686493, 0.4341566562652588, 0.4336283206939697, 0.45225200057029724, 0.443798691034317, 0.4484215974807739, 0.4525161683559418, 0.45370492339134216, 0.4579315781593323, 0.45225200057029724, 0.45687490701675415, 0.46427157521247864, 0.454629510641098, 0.46387532353401184, 0.4737815260887146, 0.46810197830200195, 0.472989022731781, 0.4679698944091797, 0.47747984528541565, 0.47008320689201355, 0.4803856909275055, 0.47404569387435913, 0.4842160940170288], "val_loss": [1.9687284060886927, 1.9664886338370187, 1.9642635072980608, 1.9620483262198312, 1.9598514693123954, 1.9576593126569475, 1.9554657254900252, 1.9532421657017298, 1.9510329791477747, 1.9488133702959334, 1.94658967426845, 1.9443270138331823, 1.9420604024614607, 1.939784322466169, 1.9374658720833915, 1.9351248059953963, 1.9327384403773717, 1.9303243500845773, 1.9278835569109236, 1.9253682409014021, 1.9228484971182687, 1.9202280725751604, 1.9176068987165178, 1.9148883819580078, 1.9121200016566686, 1.9092968532017298, 1.9063878740583147, 1.9034643173217773, 1.9004246847970145, 1.8973126411437988, 1.8941163335527693, 1.890861988067627, 1.8875354358128138, 1.8841092245919364, 1.880572727748326, 1.8769263539995467, 1.8731724875313895, 1.8693673951285226, 1.8654275621686662, 1.8613717896597726, 1.8572451046534948, 1.852888516017369, 1.848442895071847, 1.8438257489885603, 1.8391060147966658, 1.8342766080583846, 1.8292920248849052, 1.8242412975856237, 1.8189315795898438, 1.8135299001421248, 1.8080098288399833, 1.8022970472063338, 1.79641022000994, 1.7903038433619909, 1.784078598022461, 1.7776027406964983, 1.7711283138820104, 1.7643495287214006, 1.7573986734662737, 1.7502361025129045, 1.743002142224993, 1.7355410712105888, 1.7278902871268136, 1.7200651850019182, 1.7120708397456579, 1.7038160732814245, 1.6955450943538122, 1.6869370596749442, 1.6782276289803642, 1.6692582539149694, 1.6601265498570033, 1.6507961750030518, 1.641214234488351, 1.6314578737531389, 1.6214985166277205, 1.6114325182778495, 1.6012650557926722, 1.5908548831939697, 1.580240249633789, 1.5695228576660156, 1.5584988594055176, 1.547595739364624, 1.5365779740469796, 1.5252655914851598, 1.5137810025896346, 1.5023058482578822, 1.4908008234841483, 1.4791012150900704, 1.4673267773219518, 1.4557150432041712, 1.4439032758985246, 1.4320599351610457, 1.420210872377668, 1.4083975042615617, 1.3965210574013847, 1.384561572756086, 1.372649839946202, 1.3607584748949324, 1.3490108421870641, 1.337315899985177], "val_accuracy": [0.05233333259820938, 0.06533333659172058, 0.0820000022649765, 0.0989999994635582, 0.11666666716337204, 0.13899999856948853, 0.16433332860469818, 0.18933333456516266, 0.21166667342185974, 0.2303333282470703, 0.24966666102409363, 0.2683333456516266, 0.2866666615009308, 0.30433332920074463, 0.3186666667461395, 0.3310000002384186, 0.34066668152809143, 0.35066667199134827, 0.35733333230018616, 0.36633333563804626, 0.37166666984558105, 0.37700000405311584, 0.3816666603088379, 0.3869999945163727, 0.39100000262260437, 0.3933333456516266, 0.39933332800865173, 0.4020000100135803, 0.40799999237060547, 0.4116666615009308, 0.41600000858306885, 0.4203333258628845, 0.42500001192092896, 0.4283333420753479, 0.4320000112056732, 0.437333345413208, 0.4403333365917206, 0.44333332777023315, 0.4449999928474426, 0.4463333189487457, 0.4493333399295807, 0.45399999618530273, 0.4573333263397217, 0.4596666693687439, 0.46266666054725647, 0.4663333296775818, 0.47066667675971985, 0.47200000286102295, 0.47866666316986084, 0.47999998927116394, 0.4830000102519989, 0.48633334040641785, 0.49133333563804626, 0.4946666657924652, 0.4983333349227905, 0.5006666779518127, 0.5046666860580444, 0.5086666941642761, 0.5133333206176758, 0.5166666507720947, 0.5213333368301392, 0.5236666798591614, 0.5263333320617676, 0.5289999842643738, 0.5296666622161865, 0.5323333144187927, 0.5350000262260437, 0.5366666913032532, 0.5400000214576721, 0.5413333177566528, 0.5453333258628845, 0.5493333339691162, 0.5513333082199097, 0.5533333420753479, 0.5553333163261414, 0.5573333501815796, 0.5596666932106018, 0.5600000023841858, 0.5649999976158142, 0.5666666626930237, 0.5690000057220459, 0.5716666579246521, 0.5740000009536743, 0.5746666789054871, 0.5753333568572998, 0.57833331823349, 0.5816666483879089, 0.5820000171661377, 0.5833333134651184, 0.5833333134651184, 0.5863333344459534, 0.5889999866485596, 0.5899999737739563, 0.5903333425521851, 0.5916666388511658, 0.5923333168029785, 0.5933333039283752, 0.5929999947547913, 0.5929999947547913, 0.593666672706604]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 2, 0, 1, 1, 9, 4, 0, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 1, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2777142822742462, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), alpha)), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.193571557615726, 6926.034287139173, 14199.478565813639, 3.1649010552535465e+33, 2.806794274516188, 2.992564362777994], "accuracy": [0.18042530119419098, 0.21093647181987762, 0.10355303436517715, 0.09034473448991776, 0.1010434553027153, 0.09959053993225098], "val_loss": [1.9846104894365584, 2.9976072311401367, 70132.87834821429, 2.4317892619541714, 2.481257915496826, 2.182526111602783], "val_accuracy": [0.23666666448116302, 0.10100000351667404, 0.08033332973718643, 0.10066666454076767, 0.09799999743700027, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 4, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2662857174873352, "mapping_values": [1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2840430283385844, 2.2614612870322808, 2.304738698083144, 2.3031392640378483, 2.303106533900039, 2.302975207460933], "accuracy": [0.13181878626346588, 0.1492537260055542, 0.09998679161071777, 0.09760929644107819, 0.09298639744520187, 0.09074098616838455], "val_loss": [1.8446686608450753, 1.9765009880065918, 1.9742802892412459, 1.973881380898612, 1.9737027032034737, 1.9737065860203333], "val_accuracy": [0.23366667330265045, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [3, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 11, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2662857174873352, "mapping_values": [1, 17, 17, 12, 5, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), alpha), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2840430463199617, 2.2614555126482925, 2.3047386306293607, 2.3031392955288768, 2.3031065068807366, 2.3029753514064253], "accuracy": [0.13181878626346588, 0.1492537260055542, 0.09998679161071777, 0.09760929644107819, 0.09298639744520187, 0.09074098616838455], "val_loss": [1.8446687289646693, 1.9765009198869978, 1.9742802211216517, 1.973881449018206, 1.973703043801444, 1.9737065860203333], "val_accuracy": [0.23366667330265045, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 0, 5, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 49, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [86], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.23257142305374146, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.539412171817679, 2.3537147105283363, 2.303950982401793, 2.3029244588492426, 2.3030923526395095, 2.3030671859855083], "accuracy": [0.2036719024181366, 0.11768590658903122, 0.09906221181154251, 0.10091137140989304, 0.09734513610601425, 0.09774138033390045], "val_loss": [1.9418370383126395, 1.9749273572649275, 1.973884173801967, 1.9737499782017298, 1.9736628532409668, 1.9737074034554618], "val_accuracy": [0.1940000057220459, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 6, 0, 1, 1, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [78, 74, 11, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.22342857718467712, "mapping_values": [1, 23, 23, 14, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5379434992624326, 2.3186939197555905, 2.304088207425506, 2.3028225437084195, 2.3017395109847523, 2.2250267995142305], "accuracy": [0.20393607020378113, 0.12415797263383865, 0.1018359512090683, 0.09906221181154251, 0.09932637959718704, 0.15638621151447296], "val_loss": [1.9393260138375419, 1.9752988815307617, 1.9739384651184082, 1.973400592803955, 1.9684995242527552, 1.9772702625819616], "val_accuracy": [0.18733333051204681, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.09600000083446503, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 5, 1, 1, 8, 2, 1, 3, 9, 8, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 25, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [4, 4, 4, 2, 0, 0, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [43], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 15, 11, 9, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))))))))), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.negative(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 11, 75, 90, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [3, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 11, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 11, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 1, 1, 0, 0, 2, 2, 0, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 47, 85, 75, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [0, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [46, 16, 11, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302904923483995, 2.3029601666212804, 2.3031087335484015, 2.302846687943188, 2.303053184727699, 2.302968046400982], "accuracy": [0.08981640636920929, 0.09298639744520187, 0.09351472556591034, 0.09628847241401672, 0.09034473448991776, 0.09087307006120682], "val_loss": [1.9736439159938268, 1.973658561706543, 1.9736631938389368, 1.973712580544608, 1.973668098449707, 1.9736823354448592], "val_accuracy": [0.10066666454076767, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 3, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [0, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [75], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024127925501965, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 0, 1, 0, 0, 2, 2, 0, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303685973616733, 2.301453899288568, 2.303883086106151, 2.3034242433626826, 2.3017208033926875, 2.3033676536060232], "accuracy": [0.08440100401639938, 0.09166556596755981, 0.08334434032440186, 0.08572183549404144, 0.09140139818191528, 0.08981640636920929], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 9, 1, 1, 9, 1, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 37, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303685973616733, 2.301453899288568, 2.303883086106151, 2.3034242433626826, 2.3017208033926875, 2.3033676536060232], "accuracy": [0.08440100401639938, 0.09166556596755981, 0.08334434032440186, 0.08572183549404144, 0.09140139818191528, 0.08981640636920929], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 80, 85, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 1, 15, 15, 8, 7, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303685973616733, 2.301453899288568, 2.303883086106151, 2.3034242433626826, 2.3017208033926875, 2.3033676536060232], "accuracy": [0.08440100401639938, 0.09166556596755981, 0.08334434032440186, 0.08572183549404144, 0.09140139818191528, 0.08981640636920929], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 11, 75, 90, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303685973616733, 2.301453899288568, 2.303883086106151, 2.3034242433626826, 2.3017208033926875, 2.3033676536060232], "accuracy": [0.08440100401639938, 0.09166556596755981, 0.08334434032440186, 0.08572183549404144, 0.09140139818191528, 0.08981640636920929], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 9, 4, 1, 9, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 42, 81, 75, 51, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 15, 15, 9, 6, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303685973616733, 2.301453899288568, 2.303883086106151, 2.3034242433626826, 2.3017208033926875, 2.3033676536060232], "accuracy": [0.08440100401639938, 0.09166556596755981, 0.08334434032440186, 0.08572183549404144, 0.09140139818191528, 0.08981640636920929], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]