[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8105714321136475, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.247098740774328, 1.721193845718292, 1.181244166874221, 0.8775339350566856, 0.7998473189604863, 0.7431294582523391, 0.711907435228733, 0.6718797183323373, 0.6403746345039718, 0.6031029109610951, 0.574344299527963, 0.551838229053985, 0.543113577847688, 0.523843780177664, 0.50697107451892, 0.4969704488973576, 0.4828865662101017, 0.4582074920790401, 0.45265809733633666, 0.4410834468988742, 0.42083546995187654, 0.4166813587759779, 0.4077151145610386, 0.39582333202532743, 0.3832730593273212, 0.3762704602259025, 0.3643181933080988, 0.3559975445727158, 0.3585461884748824, 0.34746657572307793, 0.33975105258640975, 0.3297396545412676, 0.3297071340195554, 0.32632894623296893, 0.31865632175029374, 0.3061003780061102, 0.30406189493105756, 0.2931129390364231, 0.2815265539276318, 0.2743267307719534, 0.2620057215693447, 0.27347823461607984, 0.26933894736765873, 0.26029974956317836, 0.25230023655373707, 0.2524852635873512], "accuracy": [0.21278563141822815, 0.44564786553382874, 0.5864483118057251, 0.6808875799179077, 0.7040021419525146, 0.7162858247756958, 0.7317395210266113, 0.7411174178123474, 0.7589486241340637, 0.7707040309906006, 0.7810064554214478, 0.7895918488502502, 0.7880068421363831, 0.7977809906005859, 0.8128384351730347, 0.8090080618858337, 0.81112140417099, 0.8277638554573059, 0.8285563588142395, 0.8309338092803955, 0.841500461101532, 0.8445383906364441, 0.8481045961380005, 0.8479725122451782, 0.8536521196365356, 0.8562937378883362, 0.8607845902442932, 0.8631620407104492, 0.8627657890319824, 0.8673887252807617, 0.8704266548156738, 0.8710870146751404, 0.8753136992454529, 0.8714832663536072, 0.8755778670310974, 0.8809932470321655, 0.8845595121383667, 0.8865407705307007, 0.8906353116035461, 0.8928807377815247, 0.897899866104126, 0.8899748921394348, 0.8953903317451477, 0.8975036144256592, 0.9008057117462158, 0.900409460067749], "val_loss": [1.7621606418064661, 0.8432324273245675, 0.6635098627635411, 0.6135322025844029, 0.5834632430757795, 0.5552727154323033, 0.5237787451062884, 0.5029552834374564, 0.47999920163835796, 0.4622435910361154, 0.44089581285204205, 0.4255791902542114, 0.41607366289411274, 0.41031900474003385, 0.4062616399356297, 0.4000493288040161, 0.38519400358200073, 0.37539132152284893, 0.36532693249838694, 0.36055109330586027, 0.35974065746579853, 0.35000613757542204, 0.3453837888581412, 0.3415831582886832, 0.3399008427347456, 0.3414965101650783, 0.3318458710397993, 0.32782804114477976, 0.32992176498685566, 0.32773017031805857, 0.32822405440466745, 0.32662882123674664, 0.323345422744751, 0.31573417357036043, 0.3151665925979614, 0.31557096753801617, 0.31772029399871826, 0.31334945985249113, 0.30928111927849905, 0.31436879294259207, 0.31327879428863525, 0.3133928520338876, 0.31152743101119995, 0.31515597445624216, 0.31193162713732037, 0.31085589102336336], "val_accuracy": [0.46266666054725647, 0.668666660785675, 0.7070000171661377, 0.7326666712760925, 0.7473333477973938, 0.7463333606719971, 0.7616666555404663, 0.7693333625793457, 0.7816666960716248, 0.7916666865348816, 0.8036666512489319, 0.8136666417121887, 0.8199999928474426, 0.8146666884422302, 0.8253333568572998, 0.8259999752044678, 0.8370000123977661, 0.8360000252723694, 0.8473333120346069, 0.8506666421890259, 0.8513333201408386, 0.8569999933242798, 0.859333336353302, 0.8560000061988831, 0.8579999804496765, 0.8606666922569275, 0.8616666793823242, 0.862333357334137, 0.8646666407585144, 0.8640000224113464, 0.8586666584014893, 0.862666666507721, 0.8669999837875366, 0.8656666874885559, 0.8656666874885559, 0.8686666488647461, 0.8669999837875366, 0.871666669845581, 0.8726666569709778, 0.8736666440963745, 0.8793333172798157, 0.8726666569709778, 0.8743333220481873, 0.8776666522026062, 0.878000020980835, 0.875]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 8, 4, 5, 4, 1, 3, 5, 2, 6, 1, 2, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 3, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 0, 0, 3], [90, 15, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.6962857246398926, "mapping_values": [1, 3, 3, 2, 1, 1, 54, 54, 31, 23, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.add(beta, alpha)))))))))), tf.math.multiply(alpha, tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026992829090664, 2.3005186620247975, 2.297943338190859, 2.2934804547495924, 2.2894776340772323, 2.281854920777127, 2.272767914473625, 2.2654128463560204, 2.2548622695477945, 2.2435902662406964, 2.22919926522446, 2.2171022328308876, 2.1991654803110166, 2.181897979890508, 2.159080302442904, 2.136341162581942, 2.1123358622958963, 2.0751426329528964, 2.0373524412140793, 1.996392024097158, 1.946679066405588, 1.885639815896714, 1.8255199538151412, 1.7615725158968023, 1.698247728173318, 1.6262184279768963, 1.5831430940548694, 1.5292555033617394, 1.4789734099283194, 1.4366132049449698, 1.414335333707389, 1.3770983972412139, 1.4105031315078354, 1.3754491428295383, 1.3800888705514978, 1.4009184708070634, 1.4191649387289331, 1.3731731975146289, 1.3823895950862808, 1.3238328837006872, 1.2585535068648004, 1.218181669216083, 1.1981417459188877, 1.147558049975511, 1.1009192414303277, 1.05888499122144, 1.0038581047910253, 0.9751015687347828, 0.9550488102138476, 0.935378570558845, 0.9322240743513011, 0.9254046199564543, 0.9195237328048553, 0.9270922981626747], "accuracy": [0.08928807079792023, 0.09285431355237961, 0.10342095047235489, 0.11279883980751038, 0.1254788041114807, 0.1434420794248581, 0.17276449501514435, 0.1900673657655716, 0.2180689424276352, 0.24224013090133667, 0.2751287817955017, 0.2950733006000519, 0.3218861520290375, 0.3337736129760742, 0.34605732560157776, 0.3587372899055481, 0.36203935742378235, 0.38026681542396545, 0.3921542763710022, 0.39704135060310364, 0.4085325598716736, 0.4263637661933899, 0.4321753978729248, 0.4357416331768036, 0.44485536217689514, 0.4632149040699005, 0.4616298973560333, 0.4694227874279022, 0.48685774207115173, 0.4979526996612549, 0.5085193514823914, 0.5238409638404846, 0.5157839059829712, 0.5283318161964417, 0.5373134613037109, 0.5288601517677307, 0.5309734344482422, 0.5540879964828491, 0.5514463186264038, 0.5683529376983643, 0.5875049233436584, 0.6024303436279297, 0.6048077940940857, 0.6194690465927124, 0.6313564777374268, 0.6369040012359619, 0.6388852000236511, 0.6501122713088989, 0.6519614458084106, 0.6468101739883423, 0.6510368585586548, 0.6427156329154968, 0.6498481035232544, 0.6501122713088989], "val_loss": [1.9702705655779158, 1.968226637159075, 1.9648876871381487, 1.9603099822998047, 1.9545394352504186, 1.9476209368024553, 1.939619677407401, 1.9305565697806222, 1.920435973576137, 1.9092738287789481, 1.8969101905822754, 1.8831349781581335, 1.8675073896135603, 1.8494933673313685, 1.8285063334873743, 1.8039496966770716, 1.7751919882638114, 1.7414661134992326, 1.7020282064165388, 1.6562929153442383, 1.6037378992353166, 1.5442898954663957, 1.4784981863839286, 1.4074454307556152, 1.3330694947923933, 1.2580908707209997, 1.18518785067967, 1.116760219846453, 1.054171391895839, 0.9979747704097203, 0.9484252248491559, 0.9049533435276577, 0.8668267216001239, 0.8350009918212891, 0.812579699925014, 0.8012770244053432, 0.7959415742329189, 0.7848175082887922, 0.7646452018192836, 0.7456010580062866, 0.7398925679070609, 0.743530307497297, 0.7458432231630597, 0.7395150150571551, 0.7225499493735177, 0.6995259182793754, 0.6781002112797329, 0.6655548300061908, 0.6640202828816005, 0.6682845864977155, 0.6741394145148141, 0.6789282730647496, 0.6830055883952549, 0.687498824937003], "val_accuracy": [0.04333333298563957, 0.054666668176651, 0.07766667008399963, 0.11533333361148834, 0.1783333271741867, 0.24666666984558105, 0.3073333203792572, 0.34599998593330383, 0.3636666536331177, 0.3843333423137665, 0.3970000147819519, 0.4113333225250244, 0.4216666519641876, 0.4320000112056732, 0.4413333237171173, 0.4533333480358124, 0.4663333296775818, 0.4749999940395355, 0.4893333315849304, 0.5049999952316284, 0.5173333287239075, 0.5286666750907898, 0.5416666865348816, 0.5606666803359985, 0.5746666789054871, 0.5836666822433472, 0.597000002861023, 0.6119999885559082, 0.6276666522026062, 0.6449999809265137, 0.6613333225250244, 0.6710000038146973, 0.6740000247955322, 0.6790000200271606, 0.6816666722297668, 0.6769999861717224, 0.6639999747276306, 0.6676666736602783, 0.6856666803359985, 0.6930000185966492, 0.6976666450500488, 0.7013333439826965, 0.7056666612625122, 0.7046666741371155, 0.7059999704360962, 0.7080000042915344, 0.7110000252723694, 0.7166666388511658, 0.7200000286102295, 0.7160000205039978, 0.7080000042915344, 0.7053333520889282, 0.7016666531562805, 0.7026666402816772]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.7140390360911195, 2.345830729797831, 2.3931695183963195, 2.306663878511019, 2.3052290567963145, 2.303386293775795], "accuracy": [0.20023775100708008, 0.12376172095537186, 0.1558578759431839, 0.10091137140989304, 0.10117553919553757, 0.09430722147226334], "val_loss": [1.8782461030142648, 1.972982747214181, 1.982424599783761, 1.9741368293762207, 1.9744015421186174, 1.9738755907331194], "val_accuracy": [0.30566665530204773, 0.10433333367109299, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [66, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 8, 2, 9, 1, 2, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 1, 1, 0, 3, 3, 0, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [15, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.27171429991722107, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5951987869782673, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20155857503414154, 0.1364416927099228, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5809593541281564, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.34200000762939453, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 8, 1, 4, 5, 4, 9, 3, 8, 2, 6, 1, 2, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 3, 1, 0, 1, 2, 0, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 76, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1662857085466385, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028357198382916, 2.301852455732451, 2.301827297832956, 2.3013354170638904, 2.302648080039286, 2.3016389159478563, 2.299840436115902, 2.3015146529150203, 2.3014637587832865, 2.300911279512576, 2.299339541827116, 2.301802568368908, 2.299705246703783, 2.2999912460545318, 2.2993030291443817, 2.3000921743924763, 2.301331434267513, 2.2990253677992945, 2.299081985803407, 2.299582705915313, 2.2987876406372214, 2.2966147430537323, 2.2989414819337752, 2.2975574321656134, 2.298360873868421, 2.296724744240495, 2.298916885991689, 2.298045009150245, 2.29721074616983, 2.29745896730787, 2.2976462043366177, 2.295716581563782, 2.2985361495652237, 2.2963085001674797, 2.2963384705259973, 2.296518382332061, 2.2972178530967025, 2.2955121908362957, 2.296143358598658, 2.2966912019490535, 2.2952901623299753, 2.2947776884120046, 2.2955229282064242, 2.294940959634152, 2.29487477317541, 2.2944810687747723, 2.295121023510394, 2.295022039428568, 2.292134018873951, 2.29400446609877, 2.2932938368974534, 2.294152394167389, 2.2934970586464596, 2.294415265183958, 2.292212918449969, 2.2925729202383374, 2.2923735098800386, 2.293428280979903, 2.293674672804079, 2.2924504738599714, 2.290805698968416, 2.293873787461617, 2.291128790342356, 2.290186917981798, 2.2907190252336074, 2.2918384600750064, 2.2916785349951065, 2.2900791227101114, 2.2895614500326675, 2.2902757039143817, 2.290900094870327, 2.290250187583997, 2.290414639751216, 2.2902428151877516, 2.2887016617784157, 2.289712498137948, 2.289707756061375, 2.2898829022670673, 2.2895262921569746, 2.2897519022954564, 2.288525609292406, 2.2884199323277543, 2.28900510306529, 2.2883592137823077, 2.287439431591183, 2.287837304270357, 2.2877847939245517, 2.2874814388286233, 2.2884809109576074, 2.286022301379007, 2.28835318718667, 2.286884345965473, 2.2860780691253417, 2.286257633112992, 2.2864429689338572, 2.285130672419564, 2.2865989741049644, 2.2859777691278946, 2.286666721101639, 2.2850602650607756], "accuracy": [0.08915598690509796, 0.09008057415485382, 0.09285431355237961, 0.0936468094587326, 0.0948355570435524, 0.09034473448991776, 0.09536388516426086, 0.09100515395402908, 0.09206181764602661, 0.0936468094587326, 0.10038304328918457, 0.09549596905708313, 0.1002509593963623, 0.09721305221319199, 0.09602430462837219, 0.09457138925790787, 0.09417514503002167, 0.09668471664190292, 0.09747721254825592, 0.09774138033390045, 0.09509972482919693, 0.10553427785634995, 0.0956280529499054, 0.09932637959718704, 0.09893012791872025, 0.09972262382507324, 0.09628847241401672, 0.10527011007070541, 0.09840179979801178, 0.09998679161071777, 0.10910051316022873, 0.10157178342342377, 0.10051512718200684, 0.10355303436517715, 0.10157178342342377, 0.10672302544116974, 0.10527011007070541, 0.10051512718200684, 0.10487385839223862, 0.10566636174917221, 0.109232597053051, 0.10342095047235489, 0.11161009222269058, 0.10751552134752274, 0.10249637067317963, 0.11478008329868317, 0.11015717685222626, 0.10738343745470047, 0.11834631860256195, 0.11451591551303864, 0.10685510188341141, 0.107647605240345, 0.11332716792821884, 0.10645885765552521, 0.11993131786584854, 0.1208558976650238, 0.11610091477632523, 0.10910051316022873, 0.11213842034339905, 0.11345925182104111, 0.12574297189712524, 0.11319508403539658, 0.11702549457550049, 0.11715757846832275, 0.11451591551303864, 0.11861048638820648, 0.11557257920503616, 0.12376172095537186, 0.12389380484819412, 0.1212521493434906, 0.11900673806667328, 0.12772421538829803, 0.11795007437467575, 0.11979923397302628, 0.12178047746419907, 0.12336547672748566, 0.1228371411561966, 0.11610091477632523, 0.1294412910938263, 0.11861048638820648, 0.12151630967855453, 0.1294412910938263, 0.12349755316972733, 0.12930920720100403, 0.13049794733524323, 0.12679962813854218, 0.13459251821041107, 0.13195087015628815, 0.12957337498664856, 0.12693171203136444, 0.1208558976650238, 0.13155461847782135, 0.13551710546016693, 0.13710209727287292, 0.13010171055793762, 0.14000792801380157, 0.13036586344242096, 0.1352529376745224, 0.1306300312280655, 0.13300752639770508], "val_loss": [1.9708420208522253, 1.970677307673863, 1.9705136844090052, 1.9703495843069894, 1.970183985573905, 1.970017910003662, 1.969855717250279, 1.9696927751813615, 1.9695283344813757, 1.969365188053676, 1.9692021778651647, 1.9690388951982771, 1.968874250139509, 1.968711989266532, 1.9685484341212682, 1.9683839934212821, 1.968221596309117, 1.9680586542401994, 1.9678959846496582, 1.9677332469395228, 1.9675707817077637, 1.9674089976719447, 1.9672455787658691, 1.9670812743050712, 1.9669181959969657, 1.9667557307652064, 1.9665945598057337, 1.9664342744009835, 1.9662718772888184, 1.9661102976117815, 1.9659481729779924, 1.9657872063773019, 1.965625558580671, 1.9654626165117537, 1.9653007643563407, 1.9651397977556502, 1.964979921068464, 1.9648186819893974, 1.964658328465053, 1.96449647630964, 1.9643353053501673, 1.9641722270420618, 1.9640117372785295, 1.963850770677839, 1.9636896678379603, 1.9635282925197057, 1.9633673940386092, 1.9632071086338587, 1.9630466869899206, 1.9628862653459822, 1.9627243450709753, 1.9625647408621651, 1.962404727935791, 1.9622432163783483, 1.9620845658438546, 1.9619237354823522, 1.961761406489781, 1.9616011892046248, 1.9614411081586565, 1.9612797328404017, 1.961118425641741, 1.960958412715367, 1.9608001027788435, 1.9606399536132812, 1.9604806218828474, 1.9603207451956612, 1.960160596030099, 1.9600000381469727, 1.9598395483834403, 1.9596783093043737, 1.959517478942871, 1.9593567167009627, 1.9591950689043318, 1.959033829825265, 1.9588730675833566, 1.9587112835475378, 1.9585495676313127, 1.95838805607387, 1.958228315625872, 1.9580695288521903, 1.9579086984906877, 1.9577483449663435, 1.9575886045183455, 1.9574291365487235, 1.9572676931108748, 1.957108974456787, 1.956951345716204, 1.9567911965506417, 1.9566311836242676, 1.9564690589904785, 1.956308228628976, 1.9561473301478796, 1.9559871128627233, 1.9558276448931013, 1.9556681088038854, 1.9555079596383231, 1.9553478104727608, 1.9551880019051688, 1.9550273077828544, 1.9548659324645996], "val_accuracy": [0.03799999877810478, 0.03933333232998848, 0.04066666588187218, 0.041999999433755875, 0.04333333298563957, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.047333333641290665, 0.04833333194255829, 0.05066666752099991, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05400000140070915, 0.05366666615009308, 0.054666668176651, 0.05533333495259285, 0.0560000017285347, 0.05833333358168602, 0.058666665107011795, 0.05999999865889549, 0.061000000685453415, 0.06133333221077919, 0.06333333253860474, 0.06400000303983688, 0.06499999761581421, 0.06700000166893005, 0.06733333319425583, 0.06866666674613953, 0.07000000029802322, 0.07066666334867477, 0.0716666653752327, 0.07233333587646484, 0.07333333045244217, 0.07533333450555801, 0.07666666805744171, 0.07766667008399963, 0.0793333351612091, 0.08100000023841858, 0.0820000022649765, 0.08366666734218597, 0.0860000029206276, 0.08666666597127914, 0.08866667002439499, 0.09000000357627869, 0.09133332967758179, 0.09366666525602341, 0.09399999678134918, 0.09466666728258133, 0.09566666930913925, 0.09700000286102295, 0.09666666388511658, 0.0989999994635582, 0.10100000351667404, 0.10233332961797714, 0.10266666859388351, 0.10366666316986084, 0.10366666316986084, 0.10533333569765091, 0.10633333027362823, 0.1080000028014183, 0.11100000143051147, 0.11266666650772095, 0.11366666853427887, 0.11500000208616257, 0.11566666513681412, 0.11633333563804626, 0.11733333021402359, 0.11900000274181366, 0.12066666781902313, 0.12200000137090683, 0.12266666442155838, 0.125, 0.12800000607967377, 0.1289999932050705, 0.1303333342075348, 0.1326666623353958, 0.13433332741260529, 0.13566666841506958, 0.13733333349227905, 0.1393333375453949, 0.140666663646698, 0.14166666567325592, 0.14233332872390747, 0.14499999582767487, 0.1483333259820938, 0.1509999930858612, 0.15333333611488342, 0.15566666424274445, 0.15700000524520874, 0.15933333337306976, 0.1613333374261856, 0.16333332657814026, 0.16433332860469818, 0.1653333306312561, 0.16766667366027832, 0.16899999976158142, 0.17100000381469727, 0.17366667091846466]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 73, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1662857085466385, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028357198382916, 2.301852455732451, 2.301827297832956, 2.3013354170638904, 2.3026481430213432, 2.3016389159478563, 2.299840436115902, 2.3015146844060492, 2.3014637587832865, 2.300911311003605, 2.299339541827116, 2.301802568368908, 2.299705246703783, 2.2999912460545318, 2.2993030291443817, 2.300092205883505, 2.301331402776484, 2.2990253677992945, 2.299081985803407, 2.299582705915313, 2.2987876406372214, 2.2966147430537323, 2.2989414189517174, 2.2975574006745845, 2.298360873868421, 2.296724762221873, 2.298916885991689, 2.298045009150245, 2.29721074616983, 2.29745896730787, 2.2976462043366177, 2.295716581563782, 2.2985361495652237, 2.296308468676451, 2.2963384705259973, 2.296518382332061, 2.297217835115325, 2.2955121908362957, 2.2961433721083093, 2.2966912019490535, 2.2952901623299753, 2.2947776884120046, 2.2955228787340176, 2.294940959634152, 2.294874710193352, 2.294481100265801, 2.295121023510394, 2.2950220709195968, 2.292134018873951, 2.2940044975897984, 2.2932938368974534, 2.294152394167389, 2.2934970586464596, 2.294415265183958, 2.292212949940998, 2.2925729202383374, 2.2923735098800386, 2.293428249488874, 2.293674672804079, 2.292450505351, 2.2908056674773873, 2.2938738189526457, 2.2911287408699494, 2.290186886490769, 2.2907190252336074, 2.2918384600750064, 2.2916786159585416, 2.290079104728734, 2.2895614185416386, 2.2902757039143817, 2.2909001578523847, 2.290250187583997, 2.290414639751216, 2.2902428466787805, 2.2887016617784157, 2.2897125161193257, 2.2897077245703463, 2.2898829337580957, 2.2895262921569746, 2.2897519337864853, 2.288525609292406, 2.2884199323277543, 2.28900510306529, 2.288359182291279, 2.287439400100154, 2.2878372412882997, 2.2877847939245517, 2.2874814703196518, 2.2884809109576074, 2.286022301379007, 2.2883532051680473, 2.2868843774565017, 2.286078132107399, 2.2862576016219633, 2.2864429689338572, 2.2851307218919703, 2.2865989741049644, 2.2859777691278946, 2.286666721101639, 2.2850602650607756], "accuracy": [0.08915598690509796, 0.09008057415485382, 0.09285431355237961, 0.0936468094587326, 0.0948355570435524, 0.09034473448991776, 0.09536388516426086, 0.09100515395402908, 0.09206181764602661, 0.0936468094587326, 0.10038304328918457, 0.09549596905708313, 0.1002509593963623, 0.09721305221319199, 0.09602430462837219, 0.09457138925790787, 0.09417514503002167, 0.09668471664190292, 0.09747721254825592, 0.09774138033390045, 0.09509972482919693, 0.10553427785634995, 0.0956280529499054, 0.09932637959718704, 0.09893012791872025, 0.09972262382507324, 0.09628847241401672, 0.10527011007070541, 0.09840179979801178, 0.09998679161071777, 0.10910051316022873, 0.10157178342342377, 0.10051512718200684, 0.10355303436517715, 0.10157178342342377, 0.10672302544116974, 0.10527011007070541, 0.10051512718200684, 0.10487385839223862, 0.10566636174917221, 0.109232597053051, 0.10342095047235489, 0.11161009222269058, 0.10751552134752274, 0.10249637067317963, 0.11478008329868317, 0.11015717685222626, 0.10738343745470047, 0.11834631860256195, 0.11451591551303864, 0.10685510188341141, 0.107647605240345, 0.11332716792821884, 0.10645885765552521, 0.11993131786584854, 0.1208558976650238, 0.11610091477632523, 0.10910051316022873, 0.11213842034339905, 0.11345925182104111, 0.12574297189712524, 0.11319508403539658, 0.11702549457550049, 0.11715757846832275, 0.11451591551303864, 0.11861048638820648, 0.11557257920503616, 0.12376172095537186, 0.12389380484819412, 0.1212521493434906, 0.11900673806667328, 0.12772421538829803, 0.11795007437467575, 0.11979923397302628, 0.12178047746419907, 0.12336547672748566, 0.1228371411561966, 0.11610091477632523, 0.1294412910938263, 0.11861048638820648, 0.12151630967855453, 0.1294412910938263, 0.12349755316972733, 0.12930920720100403, 0.13049794733524323, 0.12679962813854218, 0.13459251821041107, 0.13195087015628815, 0.12957337498664856, 0.12693171203136444, 0.1208558976650238, 0.13155461847782135, 0.13551710546016693, 0.13710209727287292, 0.13010171055793762, 0.14000792801380157, 0.13036586344242096, 0.1352529376745224, 0.1306300312280655, 0.13300752639770508], "val_loss": [1.9708420208522253, 1.970677307673863, 1.9705137525285994, 1.9703495843069894, 1.970183985573905, 1.970017910003662, 1.969855717250279, 1.9696927751813615, 1.9695283344813757, 1.969365188053676, 1.9692021097455705, 1.9690388951982771, 1.968874250139509, 1.968711989266532, 1.9685484341212682, 1.9683839934212821, 1.968221596309117, 1.9680586542401994, 1.9678959846496582, 1.9677332469395228, 1.9675707817077637, 1.9674089976719447, 1.9672455787658691, 1.9670812743050712, 1.9669181959969657, 1.9667557307652064, 1.9665945598057337, 1.9664342062813895, 1.9662718772888184, 1.9661102976117815, 1.9659482410975866, 1.9657872063773019, 1.965625626700265, 1.9654626165117537, 1.9653007643563407, 1.9651398658752441, 1.964979921068464, 1.9648187501089913, 1.964658328465053, 1.96449647630964, 1.9643353053501673, 1.9641722270420618, 1.9640117372785295, 1.963850702558245, 1.9636897359575545, 1.9635282925197057, 1.9633673940386092, 1.9632071086338587, 1.9630466869899206, 1.962886197226388, 1.962724276951381, 1.9625647408621651, 1.962404727935791, 1.9622432163783483, 1.9620844296046667, 1.9619238036019462, 1.961761406489781, 1.9616011892046248, 1.9614409719194685, 1.9612796647208077, 1.961118425641741, 1.960958412715367, 1.9608001027788435, 1.9606399536132812, 1.9604806218828474, 1.9603207451956612, 1.9601606641496931, 1.9599998337881905, 1.9598395483834403, 1.9596783093043737, 1.959517478942871, 1.9593567167009627, 1.9591950689043318, 1.9590338979448592, 1.9588729994637626, 1.9587114197867257, 1.9585495676313127, 1.958388192313058, 1.958228315625872, 1.9580695288521903, 1.9579086984906877, 1.9577483449663435, 1.9575886045183455, 1.9574292046683175, 1.9572677612304688, 1.957108974456787, 1.956951345716204, 1.9567911965506417, 1.9566311836242676, 1.9564691271100725, 1.956308228628976, 1.9561473301478796, 1.9559871128627233, 1.9558276448931013, 1.9556681088038854, 1.9555079596383231, 1.9553478785923548, 1.9551880019051688, 1.9550271715436662, 1.9548659324645996], "val_accuracy": [0.03799999877810478, 0.03933333232998848, 0.04066666588187218, 0.041999999433755875, 0.04333333298563957, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.047333333641290665, 0.04833333194255829, 0.05066666752099991, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05400000140070915, 0.05366666615009308, 0.054666668176651, 0.05533333495259285, 0.0560000017285347, 0.05833333358168602, 0.058666665107011795, 0.05999999865889549, 0.061000000685453415, 0.06133333221077919, 0.06333333253860474, 0.06400000303983688, 0.06499999761581421, 0.06700000166893005, 0.06733333319425583, 0.06866666674613953, 0.07000000029802322, 0.07066666334867477, 0.0716666653752327, 0.07233333587646484, 0.07333333045244217, 0.07533333450555801, 0.07666666805744171, 0.07766667008399963, 0.0793333351612091, 0.08100000023841858, 0.0820000022649765, 0.08366666734218597, 0.0860000029206276, 0.08666666597127914, 0.08866667002439499, 0.09000000357627869, 0.09133332967758179, 0.09366666525602341, 0.09399999678134918, 0.09466666728258133, 0.09566666930913925, 0.09700000286102295, 0.09666666388511658, 0.0989999994635582, 0.10100000351667404, 0.10233332961797714, 0.10266666859388351, 0.10366666316986084, 0.10366666316986084, 0.10533333569765091, 0.10633333027362823, 0.1080000028014183, 0.11100000143051147, 0.11266666650772095, 0.11366666853427887, 0.11500000208616257, 0.11566666513681412, 0.11633333563804626, 0.11733333021402359, 0.11900000274181366, 0.12066666781902313, 0.12200000137090683, 0.12266666442155838, 0.125, 0.12800000607967377, 0.1289999932050705, 0.1303333342075348, 0.1326666623353958, 0.13433332741260529, 0.13566666841506958, 0.13733333349227905, 0.1393333375453949, 0.140666663646698, 0.14166666567325592, 0.14233332872390747, 0.14499999582767487, 0.1483333259820938, 0.1509999930858612, 0.15333333611488342, 0.15566666424274445, 0.15700000524520874, 0.15933333337306976, 0.1613333374261856, 0.16333332657814026, 0.16433332860469818, 0.1653333306312561, 0.16766667366027832, 0.16899999976158142, 0.17100000381469727, 0.17366667091846466]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [36, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1662857085466385, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028357198382916, 2.3018525816965663, 2.301827486779129, 2.3013356554824695, 2.3026485928391986, 2.3016392668208994, 2.299840818479974, 2.3015151027328757, 2.301464348074908, 2.300911931786256, 2.299340243573202, 2.301803148622605, 2.2997061553774194, 2.2999920107826752, 2.2993039198366407, 2.3000931910488505, 2.3013325498686994, 2.2990262225287985, 2.29908307895149, 2.2995838350261506, 2.2987886932563506, 2.2966156967280487, 2.298942417626714, 2.29755847584129, 2.2983621154337226, 2.296726215186451, 2.2989183479941926, 2.2980464351899936, 2.2972123250985237, 2.2974602988745323, 2.297647661867395, 2.295717940055274, 2.2985377780607963, 2.2963100881340983, 2.296340152965702, 2.29651968687942, 2.297219827899119, 2.2955137562553376, 2.2961449240177, 2.2966930688632052, 2.295291624332479, 2.2947793619082573, 2.295524732138518, 2.29494248452424, 2.294876302631697, 2.294482260773195, 2.2951226295528633, 2.2950236948489704, 2.2921350085110226, 2.2940056402102877, 2.2932951233689622, 2.294153653808541, 2.2934984171379513, 2.294416817093349, 2.2922137416884443, 2.292574215842244, 2.292375156356989, 2.2934299364947783, 2.2936763282244814, 2.29245226875414, 2.290806598604127, 2.2938755508647573, 2.2911300589269605, 2.290187975167126, 2.290720140834794, 2.2918397467354614, 2.291679565066659, 2.2900801708575145, 2.2895622373083877, 2.290276383207364, 2.2909013949459602, 2.2902512221272753, 2.2904154314986624, 2.290243566406244, 2.2887020037080066, 2.289713199978507, 2.2897081115006173, 2.289883644447634, 2.289526598123811, 2.2897523027353786, 2.288526351567446, 2.2884202832952703, 2.2890052200859534, 2.288359461144339, 2.2874396565945836, 2.2878375517268617, 2.287784762433523, 2.2874814481499675, 2.2884809873548435, 2.2860219550721634, 2.288352885880506, 2.2868835858980017, 2.286077110979299, 2.286256958386209, 2.286442132185731, 2.2851303394334255, 2.2865983936623215, 2.2859763836171005, 2.2866665053251096, 2.2850587312272355], "accuracy": [0.08915598690509796, 0.09008057415485382, 0.09285431355237961, 0.0936468094587326, 0.0948355570435524, 0.09034473448991776, 0.09536388516426086, 0.09100515395402908, 0.09206181764602661, 0.0936468094587326, 0.10038304328918457, 0.09549596905708313, 0.1002509593963623, 0.09721305221319199, 0.09602430462837219, 0.09457138925790787, 0.09417514503002167, 0.09668471664190292, 0.09747721254825592, 0.09774138033390045, 0.09509972482919693, 0.10553427785634995, 0.0956280529499054, 0.09932637959718704, 0.09893012791872025, 0.09972262382507324, 0.09628847241401672, 0.10527011007070541, 0.09840179979801178, 0.09998679161071777, 0.109232597053051, 0.10157178342342377, 0.10051512718200684, 0.10342095047235489, 0.1014397069811821, 0.10672302544116974, 0.10527011007070541, 0.1006472036242485, 0.10487385839223862, 0.10566636174917221, 0.109232597053051, 0.10342095047235489, 0.11174217611551285, 0.10751552134752274, 0.10249637067317963, 0.11478008329868317, 0.11015717685222626, 0.10751552134752274, 0.11834631860256195, 0.11451591551303864, 0.10685510188341141, 0.107647605240345, 0.11332716792821884, 0.10632677376270294, 0.11979923397302628, 0.12098798155784607, 0.11610091477632523, 0.10910051316022873, 0.11213842034339905, 0.11332716792821884, 0.12574297189712524, 0.11319508403539658, 0.11702549457550049, 0.11715757846832275, 0.1146479994058609, 0.11861048638820648, 0.11557257920503616, 0.12389380484819412, 0.12389380484819412, 0.1212521493434906, 0.11900673806667328, 0.12772421538829803, 0.11795007437467575, 0.11979923397302628, 0.12178047746419907, 0.12336547672748566, 0.1228371411561966, 0.11610091477632523, 0.12930920720100403, 0.11861048638820648, 0.12138422578573227, 0.1294412910938263, 0.12349755316972733, 0.1294412910938263, 0.13049794733524323, 0.12693171203136444, 0.13472460210323334, 0.13195087015628815, 0.12957337498664856, 0.12693171203136444, 0.1208558976650238, 0.13155461847782135, 0.13538502156734467, 0.13710209727287292, 0.12996962666511536, 0.14000792801380157, 0.1302337795495987, 0.1352529376745224, 0.13036586344242096, 0.1328754425048828], "val_loss": [1.9708422252110072, 1.9706775801522392, 1.9705139568873815, 1.9703497205461775, 1.9701844624110632, 1.9700183187212263, 1.9698562622070312, 1.9696932520185197, 1.9695289475577218, 1.9693658011300224, 1.9692027228219169, 1.9690394401550293, 1.9688751356942313, 1.9687128067016602, 1.9685491834368025, 1.9683848789760046, 1.9682223456246513, 1.9680595397949219, 1.9678969383239746, 1.9677342006138392, 1.967571803501674, 1.9674100194658553, 1.9672466686793737, 1.9670822960989816, 1.9669193540300642, 1.966756820678711, 1.9665958540780204, 1.966435500553676, 1.9662728990827287, 1.966111523764474, 1.965949467250279, 1.9657883644104004, 1.9656270572117396, 1.9654638426644462, 1.965301854269845, 1.9651410239083427, 1.9649813515799386, 1.9648199762616838, 1.9646595546177454, 1.9644978387015206, 1.96433653150286, 1.9641735213143485, 1.964012895311628, 1.9638519968305315, 1.963690962110247, 1.963529450552804, 1.9633684839521135, 1.9632082666669572, 1.963047708783831, 1.9628872190202986, 1.9627252306256975, 1.9625656945364816, 1.9624057497297014, 1.9622442381722587, 1.9620853151593889, 1.9619247572762626, 1.9617624282836914, 1.9616023472377233, 1.9614420618329729, 1.9612806183951241, 1.9611193111964635, 1.9609595026288713, 1.96080105645316, 1.9606409072875977, 1.9604813030787878, 1.9603212901524134, 1.9601612772260393, 1.9600005149841309, 1.9598399571010046, 1.9596786499023438, 1.9595178195408411, 1.9593569891793388, 1.9591952051435197, 1.959033761705671, 1.9588731357029505, 1.9587113516671317, 1.9585498401096888, 1.958388124193464, 1.958228247506278, 1.9580694607325964, 1.9579086303710938, 1.9577480724879675, 1.9575881276811873, 1.9574287278311593, 1.9572673525129045, 1.957108497619629, 1.9569507326398576, 1.9567905834742956, 1.9566302299499512, 1.956468173435756, 1.9563072068350655, 1.9561461039951868, 1.9559857504708427, 1.9558262825012207, 1.9556665420532227, 1.9555062566484724, 1.955345971243722, 1.955186026436942, 1.9550250598362513, 1.9548638207571847], "val_accuracy": [0.03799999877810478, 0.03933333232998848, 0.04066666588187218, 0.041999999433755875, 0.04333333298563957, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.047333333641290665, 0.04833333194255829, 0.05066666752099991, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05366666615009308, 0.05366666615009308, 0.05433333292603493, 0.05533333495259285, 0.0560000017285347, 0.05833333358168602, 0.058666665107011795, 0.05999999865889549, 0.061000000685453415, 0.06133333221077919, 0.06333333253860474, 0.06400000303983688, 0.06499999761581421, 0.06700000166893005, 0.06733333319425583, 0.06866666674613953, 0.07000000029802322, 0.07066666334867477, 0.0716666653752327, 0.07233333587646484, 0.07333333045244217, 0.07533333450555801, 0.07666666805744171, 0.07766667008399963, 0.0793333351612091, 0.08100000023841858, 0.0820000022649765, 0.08366666734218597, 0.0860000029206276, 0.08666666597127914, 0.08866667002439499, 0.09000000357627869, 0.09133332967758179, 0.09366666525602341, 0.09399999678134918, 0.09466666728258133, 0.09566666930913925, 0.09700000286102295, 0.09666666388511658, 0.0989999994635582, 0.10133333504199982, 0.10233332961797714, 0.10266666859388351, 0.10333333164453506, 0.10366666316986084, 0.10533333569765091, 0.10633333027362823, 0.10833333432674408, 0.11100000143051147, 0.11266666650772095, 0.11366666853427887, 0.11500000208616257, 0.11566666513681412, 0.11633333563804626, 0.11733333021402359, 0.11900000274181366, 0.12066666781902313, 0.12200000137090683, 0.12266666442155838, 0.125, 0.12800000607967377, 0.1289999932050705, 0.1303333342075348, 0.13233333826065063, 0.13433332741260529, 0.1353333294391632, 0.13733333349227905, 0.1393333375453949, 0.14033333957195282, 0.14166666567325592, 0.1420000046491623, 0.14499999582767487, 0.1483333259820938, 0.15066666901111603, 0.15333333611488342, 0.1550000011920929, 0.15700000524520874, 0.15933333337306976, 0.1613333374261856, 0.16300000250339508, 0.16433332860469818, 0.1653333306312561, 0.16766667366027832, 0.16899999976158142, 0.1706666648387909, 0.1733333319425583]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 8, 9, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 1, 2, 2, 2, 1, 6, 2, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 3, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 3, 0, 1], [65, 15, 35, 69, 8, 4], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [5, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [7, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [9, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 53, 53, 30, 23, 6, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), grad)))))))), grad)), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), beta))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, alpha))))))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, alpha))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302257447305089, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 73, 51, 18, 8, 62, 63, 73], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [8, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 44, 44, 27, 17, 8, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))), tf.math.add(beta, beta))))), tf.math.add(beta, grad)))))))))))))))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302180420248626, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302419567593116, 2.302581382481146, 2.302580739623284, 2.3025770128489707, 2.3025891127099514, 2.3025845816232713, 2.302576123668281], "accuracy": [0.09998679161071777, 0.09866596013307571, 0.10421344637870789, 0.09747721254825592, 0.10091137140989304, 0.09919429570436478, 0.10130762308835983], "val_loss": [1.9736528396606445, 1.9736572674342565, 1.973653725215367, 1.9736574036734444, 1.9736557688031877, 1.973655836922782, 1.9736542020525252], "val_accuracy": [0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 7, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.081142857670784, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30278452090489, 2.301247209180631, 2.300354803337507, 2.3004771394342907, 2.301464797861273, 2.3012020412831022, 2.3009227090240265, 2.301916647706884, 2.301838692420856, 2.3018868442823104], "accuracy": [0.08849557489156723, 0.09153348207473755, 0.09351472556591034, 0.0956280529499054, 0.1026284471154213, 0.1002509593963623, 0.09998679161071777, 0.08638224750757217, 0.08466517180204391, 0.08374059200286865], "val_loss": [1.9706715856279646, 1.969797134399414, 1.9697342600141252, 1.9708908626011439, 1.9719676290239607, 1.9726378577096122, 1.972900458744594, 1.9729963030133928, 1.9730234827314104, 1.972989218575614], "val_accuracy": [0.04266666620969772, 0.0573333315551281, 0.07599999755620956, 0.08866667002439499, 0.10300000011920929, 0.10100000351667404, 0.08399999886751175, 0.0729999989271164, 0.07333333045244217, 0.08033332973718643]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06028571352362633, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025957700708966, 2.3011157291597772, 2.3009381987997855, 2.3006375621984096, 2.3015097369764774, 2.3007244666364954, 2.2994149409548448, 2.3005378018627236, 2.3003917912198664, 2.2999055708372644, 2.2989120655654367, 2.301086430473413, 2.299701349657477, 2.3001210400142122], "accuracy": [0.08836349099874496, 0.09259014576673508, 0.09219389408826828, 0.09628847241401672, 0.10210011899471283, 0.09391097724437714, 0.09734513610601425, 0.0940430611371994, 0.09219389408826828, 0.1006472036242485, 0.10236428678035736, 0.09298639744520187, 0.09708096832036972, 0.09351472556591034], "val_loss": [1.970367091042655, 1.9700867789132255, 1.9698769024440221, 1.969925812312535, 1.9698890958513533, 1.969890866960798, 1.969850744519915, 1.9697003364562988, 1.969583306993757, 1.9696617126464844, 1.9698751994541712, 1.9700271061488561, 1.9702328273228236, 1.970379080091204], "val_accuracy": [0.04633333161473274, 0.04899999871850014, 0.05366666615009308, 0.05700000002980232, 0.058666665107011795, 0.06300000101327896, 0.06599999964237213, 0.06700000166893005, 0.06933332979679108, 0.0689999982714653, 0.06733333319425583, 0.06700000166893005, 0.06599999964237213, 0.06700000166893005]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 73, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 12, 7, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)))))))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 1, 1, 2, 0, 3, 3, 0, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 73, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 1, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 1, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [36, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 37, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [36, 15, 34, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 0, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [76, 15, 63, 57, 93, 16, 30], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 73, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029080186427433, 2.3021015388744224, 2.3022505607524364, 2.301934580115783, 2.3034254517679313, 2.3026009034549935], "accuracy": [0.08849557489156723, 0.08968432247638702, 0.09179764986038208, 0.09179764986038208, 0.09285431355237961, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]