[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.772857129573822, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2927518981464505, 2.2709126124182366, 2.2489979729408662, 2.2219098213877517, 2.1891461960501943, 2.142485573149754, 2.0836680761779918, 2.017679877410932, 1.931300653930763, 1.8347086418322158, 1.7226120923976573, 1.6247759380549676, 1.5263216529209316, 1.4468430541116233, 1.36585373134346, 1.3142040608943555, 1.2618662922090433, 1.213199960635937, 1.1760778059466261, 1.1502864012833458, 1.1092419743207247, 1.0875096543275165, 1.0608253106307581, 1.047966240340724, 1.0218628499454685, 0.996786326465196, 0.9793495613003546, 0.9610964971967362, 0.953546552925125, 0.9359202213165169, 0.930449705869609, 0.9055749422303123, 0.907851736488249, 0.890157406686902, 0.8805109162167504, 0.8776483520729635, 0.8667279707048673, 0.860729053618492, 0.8487196417138907, 0.8456355642491422, 0.8382494104158893, 0.8309315009013836, 0.8236065707060608, 0.8256173260916398, 0.8179244690520211, 0.8117859598872621, 0.8063017813017214, 0.8020621050444923, 0.8000264797842404, 0.793446213129001, 0.7917623923769905, 0.7819533923030955, 0.7820451659549102, 0.7667302538957799, 0.7590576886595389, 0.766084976814143, 0.7626826001148906, 0.7656349469138143, 0.7594246189308645, 0.7563725777935784, 0.7489836143543535, 0.7416386875683023, 0.7503159314712844, 0.7400158532559202, 0.7315186152305775, 0.7317291147295416, 0.734541392982943, 0.7252943446890963, 0.7204710291896624, 0.7247598875373535, 0.7195263700305101, 0.7147554817169476, 0.71324460356227, 0.7048196364954368, 0.7051873643557944, 0.7074007750454989, 0.7025194637700788, 0.701993942071796], "accuracy": [0.11411966383457184, 0.17316074669361115, 0.2281072586774826, 0.2793554365634918, 0.3187161684036255, 0.3559635579586029, 0.3829084634780884, 0.40562674403190613, 0.4295337498188019, 0.4473649561405182, 0.4710077941417694, 0.4909523129463196, 0.5175009965896606, 0.5309734344482422, 0.5461629629135132, 0.5600317120552063, 0.5695416927337646, 0.5824857950210571, 0.5938449501991272, 0.591731607913971, 0.6159027814865112, 0.6173557043075562, 0.624620258808136, 0.6272619366645813, 0.6444327235221863, 0.6420552134513855, 0.6536785364151001, 0.6551313996315002, 0.6613393425941467, 0.6687359809875488, 0.6637167930603027, 0.6777176260948181, 0.6763967871665955, 0.6837934255599976, 0.6794346570968628, 0.687887966632843, 0.6882842183113098, 0.6894729733467102, 0.6979262828826904, 0.6988508701324463, 0.6964733600616455, 0.7042662501335144, 0.7016246318817139, 0.7013604640960693, 0.7055870890617371, 0.7069079279899597, 0.7088891863822937, 0.7071720957756042, 0.7073041796684265, 0.7124554514884949, 0.7080966830253601, 0.7217012047767639, 0.7170783281326294, 0.7191916704177856, 0.7246070504188538, 0.7195879220962524, 0.7217012047767639, 0.7280412316322327, 0.7230220437049866, 0.7259278893470764, 0.722229540348053, 0.7298903465270996, 0.7288337349891663, 0.733588695526123, 0.7304186820983887, 0.7341170310974121, 0.7358341217041016, 0.7364945411682129, 0.735569953918457, 0.7413815855979919, 0.733588695526123, 0.7391361594200134, 0.7405890822410583, 0.7386078238487244, 0.7427024245262146, 0.7413815855979919, 0.7442874312400818, 0.7427024245262146], "val_loss": [1.9509831837245397, 1.9303593635559082, 1.9064675058637346, 1.877277169908796, 1.840209688459124, 1.791187354496547, 1.7290476390293665, 1.6524046148572649, 1.5601273604801722, 1.4572755609239851, 1.3495684351239885, 1.245241948536464, 1.1513448102133614, 1.0701914514814104, 1.001375947679792, 0.9448462213788714, 0.8997151170458112, 0.8614667654037476, 0.8270270143236432, 0.8018076760428292, 0.7775466101510184, 0.7563562222889492, 0.7389347893851144, 0.724476865359715, 0.7102553674152919, 0.6967372894287109, 0.6846549170357841, 0.6765898806708199, 0.6667038542883736, 0.6574674844741821, 0.6489549364362445, 0.6422586951936994, 0.6372912781579154, 0.6287240811756679, 0.6221013750348773, 0.6162912675312587, 0.612261312348502, 0.6070384127753121, 0.6022414990833828, 0.5978959287915911, 0.5932742186955043, 0.5907090561730521, 0.5851387807301113, 0.5837927886417934, 0.5795284509658813, 0.577491010938372, 0.5717273609978812, 0.5691287006650653, 0.5669984306607928, 0.5626833098275321, 0.5612911326544625, 0.5595377513340541, 0.5556976624897548, 0.5523627315248761, 0.5497377940586635, 0.546791808945792, 0.5458505664552961, 0.5428264311381749, 0.5429953507014683, 0.5386271817343575, 0.5368927887507847, 0.5344756330762591, 0.5338665587561471, 0.530618599482945, 0.5289170060838971, 0.5279990775244576, 0.5273213386535645, 0.5240163973399571, 0.5229318482535226, 0.5231801441737584, 0.5199111529758998, 0.5174419369016375, 0.5184102739606585, 0.5132531438555036, 0.5115281343460083, 0.5110902956553868, 0.5091442380632673, 0.5087060076849801], "val_accuracy": [0.2163333296775818, 0.3426666557788849, 0.3843333423137665, 0.43066665530204773, 0.460999995470047, 0.49000000953674316, 0.5266666412353516, 0.5543333292007446, 0.5803333520889282, 0.581333339214325, 0.5956666469573975, 0.6023333072662354, 0.6306666731834412, 0.6546666622161865, 0.671999990940094, 0.6796666383743286, 0.6893333196640015, 0.6956666707992554, 0.6976666450500488, 0.7026666402816772, 0.7009999752044678, 0.7080000042915344, 0.7126666903495789, 0.7133333086967468, 0.7233333587646484, 0.7210000157356262, 0.7239999771118164, 0.7333333492279053, 0.7310000061988831, 0.7300000190734863, 0.7306666374206543, 0.7353333234786987, 0.7353333234786987, 0.7353333234786987, 0.7369999885559082, 0.7419999837875366, 0.7396666407585144, 0.7406666874885559, 0.7453333139419556, 0.7509999871253967, 0.7490000128746033, 0.7453333139419556, 0.7480000257492065, 0.7513333559036255, 0.7543333172798157, 0.749666690826416, 0.7553333044052124, 0.7526666522026062, 0.7536666393280029, 0.7586666941642761, 0.7593333125114441, 0.762666642665863, 0.7590000033378601, 0.7630000114440918, 0.7639999985694885, 0.7689999938011169, 0.7633333206176758, 0.7693333625793457, 0.7699999809265137, 0.7699999809265137, 0.7720000147819519, 0.7676666378974915, 0.7739999890327454, 0.7730000019073486, 0.7726666927337646, 0.7676666378974915, 0.7689999938011169, 0.7743333578109741, 0.7756666541099548, 0.7676666378974915, 0.7739999890327454, 0.7753333449363708, 0.7793333530426025, 0.7749999761581421, 0.7793333530426025, 0.7793333530426025, 0.7760000228881836, 0.7776666879653931]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 2, 2, 5, 4, 3, 2, 7, 1, 6, 1, 2, 8, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 55, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7682856917381287, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), alpha))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2927518981464505, 2.2709125989085854, 2.248998067413953, 2.2219100912973597, 2.1891467808700904, 2.1424866077875055, 2.083670321078962, 2.017685921027471, 1.9313071092610126, 1.8347188015938938, 1.7226257047570062, 1.6247936293213139, 1.5263529963512872, 1.4468709535571043, 1.365876855993189, 1.3142145483674248, 1.261883043483925, 1.2132296095970143, 1.1760955299321514, 1.1502846341957553, 1.1092439370935683, 1.0874895691761424, 1.0608246510196686, 1.047959104095704, 1.0218711675134522, 0.9967816948748977, 0.9793793424214071, 0.9610816850606807, 0.9535599137105175, 0.9359035608617621, 0.9304441475140782, 0.9055426081709181, 0.9078427751176723, 0.8901274729839421, 0.8805000531580532, 0.877628803733412, 0.8666818897800674, 0.860687995213622, 0.8486987146892253, 0.8456127876382635, 0.8382423530480235, 0.8309006082651055, 0.823583199843723, 0.8256170260293719, 0.8178826084131924, 0.8117797048320828, 0.8062657972273967, 0.802067416124592, 0.7999561787785289, 0.7932955053000323, 0.7916185487105531, 0.7819501682122023, 0.7820282174280968, 0.766749555526739, 0.7590111753944047, 0.7659820246816138, 0.7626339458376897, 0.7655835614354304, 0.7594415379269658, 0.7562146818145014, 0.7488942299505125, 0.7415276751337491, 0.7502134210791618, 0.7399317159030447, 0.7314945413703853, 0.7317106822116138, 0.7345345697430037, 0.7252171185620945, 0.7203596920668567, 0.724658457122191, 0.7194170384847288, 0.7147400982391565, 0.7131693396255278, 0.7047679348313781, 0.7050694645891856, 0.7072861108325177, 0.7024841271985429, 0.7019716431010967, 0.695793833620497, 0.7019751107514794], "accuracy": [0.11411966383457184, 0.17316074669361115, 0.2281072586774826, 0.2793554365634918, 0.3187161684036255, 0.3559635579586029, 0.3829084634780884, 0.40549466013908386, 0.4295337498188019, 0.4473649561405182, 0.4710077941417694, 0.4909523129463196, 0.5175009965896606, 0.5309734344482422, 0.5460308790206909, 0.559899628162384, 0.5696737766265869, 0.5824857950210571, 0.594241201877594, 0.5915995240211487, 0.6159027814865112, 0.6173557043075562, 0.6248844265937805, 0.6273940205574036, 0.6445648074150085, 0.6419231295585632, 0.6536785364151001, 0.654999315738678, 0.6613393425941467, 0.6686038970947266, 0.6635847091674805, 0.6774534583091736, 0.6769251227378845, 0.6836613416671753, 0.6794346570968628, 0.6884163022041321, 0.6882842183113098, 0.6892088055610657, 0.6980583667755127, 0.698718786239624, 0.69673752784729, 0.7045304179191589, 0.7024171352386475, 0.7013604640960693, 0.7057191729545593, 0.7074362635612488, 0.7098137736320496, 0.7073041796684265, 0.7074362635612488, 0.7125874757766724, 0.7083608508110046, 0.7220974564552307, 0.7166820764541626, 0.7193237543106079, 0.7244749665260315, 0.7195879220962524, 0.7219653725624084, 0.7277770638465881, 0.7231541275978088, 0.7259278893470764, 0.7219653725624084, 0.7297582626342773, 0.7290979027748108, 0.7327961921691895, 0.7296261787414551, 0.7339849472045898, 0.735569953918457, 0.7362303733825684, 0.7354378700256348, 0.7412495017051697, 0.7334566116333008, 0.739400327205658, 0.7407211661338806, 0.7390040755271912, 0.7427024245262146, 0.7413815855979919, 0.7440232634544373, 0.7425703406333923, 0.7450799345970154, 0.7430986762046814], "val_loss": [1.9509831837245397, 1.9303593635559082, 1.9064678464617049, 1.877277442387172, 1.8402095522199358, 1.7911902155194963, 1.729053292955671, 1.6524105072021484, 1.5601322310311454, 1.4572872093745641, 1.34958393233163, 1.2452771663665771, 1.151383978979928, 1.0702179840632848, 1.0014005388532365, 0.9448395456586566, 0.8997124263218471, 0.8614791291100639, 0.8270221097128732, 0.8017932687486921, 0.7775284733091082, 0.7563387325831822, 0.7389188494001117, 0.7244847672326225, 0.7102575302124023, 0.6967351606913975, 0.684657199042184, 0.6765980550221035, 0.666697791644505, 0.6574677739824567, 0.6489544936588832, 0.6422769171851022, 0.6373105560030256, 0.6287234340395246, 0.6221110991069249, 0.6163037674767631, 0.6122409616197858, 0.6070055450711932, 0.6022038119179862, 0.5978901215962001, 0.5932415894099644, 0.5906936781747001, 0.585141829081944, 0.5838144677025932, 0.579490201813834, 0.5774271999086652, 0.5716683523995536, 0.569038987159729, 0.5668787956237793, 0.5626812662397113, 0.5613147871834892, 0.5594826425824847, 0.5556886196136475, 0.5523090703146798, 0.5497370958328247, 0.5468044791902814, 0.5458875724247524, 0.5428516183580671, 0.5429580892835345, 0.5385796342577253, 0.5367832865033831, 0.5344709498541695, 0.5337482179914202, 0.5306258542197091, 0.5288515772138324, 0.5278803791318621, 0.5272616488592965, 0.5240390300750732, 0.5228393248149327, 0.5229864631380353, 0.5199472223009381, 0.517302427973066, 0.5182070902415684, 0.5132262536457607, 0.5115240471703666, 0.5110386950629098, 0.5091130563191005, 0.5086865254810878, 0.5061114174979073, 0.5046258313315255], "val_accuracy": [0.2163333296775818, 0.3426666557788849, 0.3843333423137665, 0.43066665530204773, 0.460999995470047, 0.49000000953674316, 0.5266666412353516, 0.5540000200271606, 0.5803333520889282, 0.581333339214325, 0.5956666469573975, 0.6019999980926514, 0.6293333172798157, 0.6546666622161865, 0.671999990940094, 0.6796666383743286, 0.6893333196640015, 0.6956666707992554, 0.6976666450500488, 0.7026666402816772, 0.7009999752044678, 0.7083333134651184, 0.7126666903495789, 0.7129999995231628, 0.7229999899864197, 0.7210000157356262, 0.7243333458900452, 0.7333333492279053, 0.7310000061988831, 0.7296666502952576, 0.7310000061988831, 0.7356666922569275, 0.7353333234786987, 0.7350000143051147, 0.7366666793823242, 0.7416666746139526, 0.7403333187103271, 0.7406666874885559, 0.7453333139419556, 0.7506666779518127, 0.7486666440963745, 0.7453333139419556, 0.7483333349227905, 0.7509999871253967, 0.7543333172798157, 0.749666690826416, 0.7549999952316284, 0.753333330154419, 0.7546666860580444, 0.7583333253860474, 0.7593333125114441, 0.7630000114440918, 0.7580000162124634, 0.762666642665863, 0.7639999985694885, 0.768666684627533, 0.7630000114440918, 0.7689999938011169, 0.7699999809265137, 0.7699999809265137, 0.7720000147819519, 0.7670000195503235, 0.7743333578109741, 0.7730000019073486, 0.7723333239555359, 0.7676666378974915, 0.768666684627533, 0.7746666669845581, 0.7760000228881836, 0.7680000066757202, 0.7736666798591614, 0.7743333578109741, 0.7796666622161865, 0.7749999761581421, 0.7799999713897705, 0.7786666750907898, 0.7763333320617676, 0.7773333191871643, 0.7793333530426025, 0.7766666412353516]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 3, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 0, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 55, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7668571472167969, "mapping_values": [1, 10, 10, 5, 5, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2927518981464505, 2.2709125989085854, 2.24899808539533, 2.2219096189319276, 2.189145980179192, 2.1424864503323615, 2.083671661494604, 2.0176871583572296, 1.9313079349242968, 1.834715644161636, 1.7226184085375598, 1.6247849101954763, 1.5263329982096256, 1.4468544379768276, 1.3658685429284223, 1.3142183852658658, 1.2618784814258184, 1.2132182495075368, 1.1760933405498646, 1.1502879032322193, 1.1092715787534875, 1.08750880778568, 1.0608288727699726, 1.0479897713349433, 1.0218896119507344, 0.996795731402659, 0.9793701753593029, 0.9611359356479748, 0.9535655042420068, 0.9359137831488777, 0.930469441446945, 0.9055821979050591, 0.9078659833839556, 0.8901472554592929, 0.880513652842263, 0.8776109094916397, 0.8667225583889827, 0.8607176948280193, 0.8487238911999183, 0.8456374320765339, 0.8382113881634526, 0.8308683020516535, 0.8236288992861999, 0.82563999331843, 0.8179380887487797, 0.8118000156639148, 0.8063040080087501, 0.8020448759011211, 0.7999993326515649, 0.7933791690435801, 0.7916135883302957, 0.7819197005867218, 0.7820103918210217, 0.766708123654013, 0.758946996480876, 0.7660640956561611, 0.7626230314801067, 0.7655431065718732, 0.759378697429398, 0.7562410169273808, 0.7490532943412314, 0.7416051738156052, 0.7503097831785656, 0.7400442859389921, 0.7315476654920879, 0.7317428798991077, 0.7345097678102255, 0.7252129797749058], "accuracy": [0.11411966383457184, 0.17316074669361115, 0.2281072586774826, 0.27922335267066956, 0.3187161684036255, 0.35583147406578064, 0.3829084634780884, 0.4053625762462616, 0.4295337498188019, 0.4472328722476959, 0.4710077941417694, 0.4908202290534973, 0.5177651643753052, 0.5308413505554199, 0.5461629629135132, 0.5601637959480286, 0.5694096088409424, 0.5826178789138794, 0.5938449501991272, 0.591731607913971, 0.615770697593689, 0.6170915365219116, 0.624620258808136, 0.6273940205574036, 0.6446968913078308, 0.6419231295585632, 0.6538106203079224, 0.6548672318458557, 0.6609430909156799, 0.6690001487731934, 0.663848876953125, 0.6774534583091736, 0.6765288710594177, 0.6833971738815308, 0.6796988248825073, 0.6880200505256653, 0.6884163022041321, 0.689869225025177, 0.6977941989898682, 0.6984546184539795, 0.695813000202179, 0.7043983340263367, 0.7022850513458252, 0.7021529674530029, 0.7058512568473816, 0.7069079279899597, 0.709549605846405, 0.7078325152397156, 0.707568347454071, 0.7128516435623169, 0.7083608508110046, 0.7219653725624084, 0.7165499925613403, 0.7193237543106079, 0.724210798740387, 0.719852089881897, 0.7214370369911194, 0.7277770638465881, 0.7234182953834534, 0.7260599732398987, 0.7224937081336975, 0.7302865982055664, 0.7283053994178772, 0.7331924438476562, 0.7300224304199219, 0.7337207794189453, 0.7347774505615234, 0.7362303733825684], "val_loss": [1.9509831837245397, 1.9303593635559082, 1.9064678464617049, 1.8772766930716378, 1.8402091435023717, 1.791189329964774, 1.729055745261056, 1.6524107796805245, 1.5601344108581543, 1.4572830881391252, 1.3495728969573975, 1.2452513490404402, 1.1513570717402868, 1.0702017375401087, 1.0013835430145264, 0.9448272500719342, 0.899700539452689, 0.8614640576498849, 0.8270383562360492, 0.8018254552568708, 0.7775557211467198, 0.7563818522862026, 0.7389491626194545, 0.7245099374226162, 0.7102859190532139, 0.6967652184622628, 0.6846551554543632, 0.6765683378492083, 0.6667054891586304, 0.6574690682547433, 0.6489471197128296, 0.642279829297747, 0.6372927256992885, 0.628741945539202, 0.6221076590674264, 0.6163240330559867, 0.6123242378234863, 0.6070108073098319, 0.6022263935634068, 0.5978533029556274, 0.5932186671665737, 0.5907168047768729, 0.5851566110338483, 0.5838013717106411, 0.5794933864048549, 0.577441896711077, 0.5716933352606637, 0.5691007205418178, 0.5669682366507394, 0.5626887083053589, 0.5612920863287789, 0.5594956193651471, 0.5556477989469256, 0.5522961105619159, 0.5497385944638934, 0.5468733480998448, 0.5458980628422329, 0.5428455897739956, 0.5429838044302804, 0.5385971580232892, 0.5368017980030605, 0.534484829221453, 0.5337318011692592, 0.5305511440549578, 0.5288159336362567, 0.5279910223824638, 0.5273949759347099, 0.524061952318464], "val_accuracy": [0.2163333296775818, 0.3426666557788849, 0.3843333423137665, 0.43066665530204773, 0.460999995470047, 0.4896666705608368, 0.5266666412353516, 0.5543333292007446, 0.5803333520889282, 0.581333339214325, 0.5956666469573975, 0.6023333072662354, 0.6299999952316284, 0.6546666622161865, 0.671999990940094, 0.6793333292007446, 0.6893333196640015, 0.6953333616256714, 0.6976666450500488, 0.7026666402816772, 0.7009999752044678, 0.7083333134651184, 0.7126666903495789, 0.7129999995231628, 0.7229999899864197, 0.7203333377838135, 0.7236666679382324, 0.7336666584014893, 0.7310000061988831, 0.7300000190734863, 0.7306666374206543, 0.7360000014305115, 0.7356666922569275, 0.7350000143051147, 0.7369999885559082, 0.7419999837875366, 0.7400000095367432, 0.7406666874885559, 0.7456666827201843, 0.7506666779518127, 0.7490000128746033, 0.7453333139419556, 0.7483333349227905, 0.7509999871253967, 0.7543333172798157, 0.7493333220481873, 0.7556666731834412, 0.7536666393280029, 0.7540000081062317, 0.7586666941642761, 0.7593333125114441, 0.7630000114440918, 0.7586666941642761, 0.7630000114440918, 0.7630000114440918, 0.7693333625793457, 0.7630000114440918, 0.7693333625793457, 0.7699999809265137, 0.7699999809265137, 0.7720000147819519, 0.7676666378974915, 0.7746666669845581, 0.7730000019073486, 0.7720000147819519, 0.7676666378974915, 0.7689999938011169, 0.7739999890327454]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 4, 4, 4, 2, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 0, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 35, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7665714025497437, "mapping_values": [1, 11, 11, 5, 6, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2927518981464505, 2.270912630399614, 2.24899808539533, 2.2219095379684926, 2.189145939744711, 2.1424853886753072, 2.0836691649488217, 2.0176796548323406, 1.9313000378087841, 1.8347083500835795, 1.7226111967140705, 1.624777960660766, 1.526329961750155, 1.4468467544492178, 1.3658665222278312, 1.3142036548805212, 1.261873534137956, 1.2132131188001773, 1.17608319267605, 1.1502834393159038, 1.1092581023881465, 1.0875159950461668, 1.0608195991815907, 1.047970260343752, 1.0218658251706336, 0.9967987673425278, 0.979385543729273, 0.961105818966392, 0.9536006532136113, 0.935970944341746, 0.930484750511435, 0.9056529072706867, 0.9078669599128862, 0.8902031780076521, 0.8805652271172374, 0.8776470287805692, 0.8667797852878825, 0.8607310946859058, 0.8487238458685824, 0.8456369916981143, 0.8382328747837, 0.8308976955181414, 0.8236310169083048, 0.8256564083006152, 0.817903129179968, 0.811807738673402, 0.8063400126230983, 0.8020910663989557, 0.8000053989888812, 0.7935310272083401, 0.7917287205472016, 0.7820357213859875, 0.7819664234167801, 0.7667488238877939, 0.7590419891850193, 0.7659972645130769, 0.7626958574207625, 0.7656230336529247, 0.7594285247080582, 0.7562637574023039, 0.7490086098546129, 0.7415894707432354, 0.7503227789435704, 0.7400918048307675, 0.7315044569663715, 0.7317299751038123, 0.7345174191854948, 0.7251669526525287], "accuracy": [0.11411966383457184, 0.17316074669361115, 0.2281072586774826, 0.27922335267066956, 0.3187161684036255, 0.35583147406578064, 0.3829084634780884, 0.40562674403190613, 0.4295337498188019, 0.4473649561405182, 0.47127196192741394, 0.4908202290534973, 0.5175009965896606, 0.5309734344482422, 0.5461629629135132, 0.559899628162384, 0.5694096088409424, 0.5826178789138794, 0.5938449501991272, 0.5918636918067932, 0.615770697593689, 0.6174877882003784, 0.6247523427009583, 0.6273940205574036, 0.6444327235221863, 0.6420552134513855, 0.6538106203079224, 0.654999315738678, 0.661471426486969, 0.6682076454162598, 0.6635847091674805, 0.6777176260948181, 0.6767930388450623, 0.6832650899887085, 0.6798309087753296, 0.6880200505256653, 0.687887966632843, 0.689869225025177, 0.6975300312042236, 0.6985867023468018, 0.6963412761688232, 0.7047945857048035, 0.7024171352386475, 0.7020208835601807, 0.7058512568473816, 0.7074362635612488, 0.7094175219535828, 0.7071720957756042, 0.7078325152397156, 0.7120591998100281, 0.7080966830253601, 0.722229540348053, 0.7168141603469849, 0.719852089881897, 0.7236824631690979, 0.7199841737747192, 0.722229540348053, 0.7284374833106995, 0.7232862114906311, 0.72672039270401, 0.722757875919342, 0.7298903465270996, 0.728701651096344, 0.7331924438476562, 0.7300224304199219, 0.7343811988830566, 0.7349095344543457, 0.7359662055969238], "val_loss": [1.9509831837245397, 1.9303593635559082, 1.9064677783421107, 1.8772764887128557, 1.8402084623064314, 1.7911872863769531, 1.7290500913347517, 1.6524049554552351, 1.5601281779153007, 1.4572755609239851, 1.3495588983808244, 1.2452441624232702, 1.1513476371765137, 1.0701895781925745, 1.0013812610081263, 0.944812502179827, 0.8997001647949219, 0.8614591360092163, 0.8270166601453509, 0.8018239736557007, 0.777553745678493, 0.7563782249178205, 0.7389535052435738, 0.7245137010301862, 0.7102957282747541, 0.6967705147606986, 0.6846710273197719, 0.6766103676387242, 0.6667332989828927, 0.6575531789234706, 0.6491266148430961, 0.6423703261784145, 0.6374278749738421, 0.6287974970681327, 0.62215142590659, 0.6162925447736468, 0.6122843197413853, 0.6070075035095215, 0.6022420951298305, 0.5978705201830182, 0.5932442631040301, 0.5907040664127895, 0.5851768595831734, 0.5838732549122402, 0.5795522928237915, 0.57747483253479, 0.5717335769108364, 0.5691532066890171, 0.5669773987361363, 0.5627514123916626, 0.5613812719072614, 0.5594282831464495, 0.5557365928377423, 0.5523387023380825, 0.5497749362673078, 0.5468775033950806, 0.5458873169762748, 0.5428625345230103, 0.5429696696145194, 0.5386159079415458, 0.536812322480338, 0.5344846759523664, 0.5337872164590018, 0.5306225504193988, 0.5288561412266323, 0.5279857431139264, 0.5273739780698504, 0.5240391152245658], "val_accuracy": [0.2163333296775818, 0.3426666557788849, 0.3843333423137665, 0.43066665530204773, 0.460999995470047, 0.4896666705608368, 0.5266666412353516, 0.5543333292007446, 0.5803333520889282, 0.581333339214325, 0.5956666469573975, 0.6023333072662354, 0.6306666731834412, 0.6546666622161865, 0.671999990940094, 0.6796666383743286, 0.6893333196640015, 0.6953333616256714, 0.6976666450500488, 0.7026666402816772, 0.7009999752044678, 0.7080000042915344, 0.7126666903495789, 0.7129999995231628, 0.7229999899864197, 0.7206666469573975, 0.7243333458900452, 0.7336666584014893, 0.7310000061988831, 0.7293333411216736, 0.7306666374206543, 0.7353333234786987, 0.7350000143051147, 0.734666645526886, 0.7366666793823242, 0.7416666746139526, 0.7400000095367432, 0.7406666874885559, 0.7456666827201843, 0.7506666779518127, 0.7490000128746033, 0.7450000047683716, 0.7483333349227905, 0.7509999871253967, 0.7543333172798157, 0.7493333220481873, 0.7553333044052124, 0.7536666393280029, 0.7540000081062317, 0.7583333253860474, 0.7593333125114441, 0.7613333463668823, 0.7583333253860474, 0.7630000114440918, 0.7630000114440918, 0.7689999938011169, 0.7630000114440918, 0.7693333625793457, 0.7699999809265137, 0.7699999809265137, 0.7713333368301392, 0.7670000195503235, 0.7743333578109741, 0.7730000019073486, 0.7726666927337646, 0.7676666378974915, 0.7680000066757202, 0.7739999890327454]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 2, 2, 5, 4, 3, 2, 7, 1, 6, 1, 2, 8, 9, 7, 5, 5, 4, 5, 8, 5, 5], [0, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 55, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6191428303718567, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2922660582384586, 2.233270081389204, 2.094300669119138, 1.7714989978749722, 1.777354671136027, 1.8374501160658299, NaN, NaN, NaN, NaN], "accuracy": [0.11451591551303864, 0.25399550795555115, 0.3739268183708191, 0.43309998512268066, 0.4353454113006592, 0.4006075859069824, 0.12270505726337433, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9383456366402763, 1.8515253748212541, 1.6289327144622803, 1.187384809766497, 0.9254195008959089, 1.6924563816615514, NaN, NaN, NaN, NaN], "val_accuracy": [0.3113333284854889, 0.41333332657814026, 0.5109999775886536, 0.5820000171661377, 0.6470000147819519, 0.28466665744781494, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [0, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [35], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3962857127189636, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2780703256284838, 2.513907034667003, 2.267888125836684, 2.2155920295604483, 2.3022759840583222, 2.259771850115084, 2.243664685556555, 2.2577676056965292], "accuracy": [0.2078985571861267, 0.1838594675064087, 0.15136705338954926, 0.18795403838157654, 0.10236428678035736, 0.15810328722000122, 0.17117950320243835, 0.14740456640720367], "val_loss": [1.9672444888523646, 1.9744432313101632, 1.4842277254377092, 1.9736518178667342, 1.9719856125967843, 1.5966620785849435, 1.978715487888881, 1.9642996788024902], "val_accuracy": [0.14900000393390656, 0.1353333294391632, 0.39800000190734863, 0.10066666454076767, 0.10100000351667404, 0.28033334016799927, 0.09799999743700027, 0.14300000667572021]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 2, 2, 5, 4, 3, 2, 7, 1, 6, 1, 2, 8, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 55, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.32514286041259766, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), alpha))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.278064782357156, 2.557451855473436, 2.2736747412554985, 3.8678766529494903, 2.3075915154779687, 2.303520924411099, 2.2973712956538495, 6.213960071076744], "accuracy": [0.2078985571861267, 0.18333113193511963, 0.14898955821990967, 0.13921542465686798, 0.09589222073554993, 0.1022322028875351, 0.10619468986988068, 0.14991414546966553], "val_loss": [1.9671143123081751, 1.974790028163365, 1.7929340771266393, 1.9799907548086983, 1.97430876323155, 1.9722133363996233, 1.9464996882847376, 1.9846038818359375], "val_accuracy": [0.15166667103767395, 0.12166666984558105, 0.36666667461395264, 0.09799999743700027, 0.09799999743700027, 0.10433333367109299, 0.13566666841506958, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 2, 6, 8, 6, 2, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 2, 1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 3, 2, 0, 2], [70, 28, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2928571403026581, "mapping_values": [1, 28, 28, 15, 13, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.pow(grad, tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2780662431630003, 2.504064710243204, 2.269298685760609, 2.3922417466477666, 2.277582541621829, 2.201938512444638, 2.320334157766116, 2.304507024347066], "accuracy": [0.2078985571861267, 0.18333113193511963, 0.14463083446025848, 0.1608770340681076, 0.14014001190662384, 0.1802932173013687, 0.18438778817653656, 0.10355303436517715], "val_loss": [1.9672461237226213, 1.974419457571847, 1.6106061254228865, 1.9730807031903947, 1.5780195168086462, 1.9636513165065221, 1.9760363442557198, 1.9690820830208915], "val_accuracy": [0.15466666221618652, 0.13433332741260529, 0.3473333418369293, 0.10433333367109299, 0.21699999272823334, 0.09799999743700027, 0.09799999743700027, 0.14300000667572021]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 5, 7, 1, 4, 1, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 0, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 1, 0, 2, 3], [40, 28, 79, 41, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2354285717010498, "mapping_values": [1, 45, 45, 27, 18, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(grad)))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2780672219671576, 2.5226126067973147, 2.276396409694655, 2.4126119619315847, 2.307962013194747, 2.1914888494255016, 4.610745570505646, 2.3078164901904707, 2.304129945320177, 2.3036798150421935, 2.3032343611819885], "accuracy": [0.20816272497177124, 0.18663319945335388, 0.1562541276216507, 0.17857614159584045, 0.1010434553027153, 0.1978602558374405, 0.12310130894184113, 0.09787346422672272, 0.09642054885625839, 0.09311848133802414, 0.0936468094587326], "val_loss": [1.9671341351100378, 1.9751132556370325, 2.0526276997157504, 1.986128602709089, 1.9733948026384627, 4.63701411655971, 1.9812872750418526, 1.975323268345424, 1.973871844155448, 1.97406039919172, 1.9738950729370117], "val_accuracy": [0.14800000190734863, 0.10433333367109299, 0.0989999994635582, 0.09833333641290665, 0.09933333098888397, 0.16733333468437195, 0.09799999743700027, 0.09966666996479034, 0.09799999743700027, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 8, 4, 2, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 0, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [93, 28, 51, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.6067135567363415, 2.6258538674999614, 2.403207220153849, 2.3874462519056054, 2.415361349750519, 2.402207195672219], "accuracy": [0.2032756507396698, 0.120459645986557, 0.1014397069811821, 0.09879804402589798, 0.09959053993225098, 0.1006472036242485], "val_loss": [2.5589346204485213, 2.046441214425223, 2.0793555804661343, 2.0814946038382396, 2.060582024710519, 2.026392323630197], "val_accuracy": [0.11433333158493042, 0.09933333098888397, 0.10066666454076767, 0.10100000351667404, 0.0989999994635582, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 2, 0, 6, 6, 0, 5, 9, 7, 5, 5, 6, 5, 8, 2, 5], [2, 0, 2, 1, 0, 3, 1, 3, 2, 1, 0, 2, 0, 3, 2, 0, 1], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 0, 0], [8, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 23, 15, 5, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha))))), grad)), tf.math.square(grad))))), tf.math.add(alpha, alpha))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 2, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 0, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 55, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 2, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 1, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [70, 88, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 0, 0], [3, 4, 9], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 5, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13551710546016693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 2, 2, 5, 4, 3, 2, 7, 1, 6, 1, 2, 8, 9, 7, 5, 5, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 1, 7, 8], [5, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302290355430193, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 1, 1, 4, 8, 4, 2, 7, 4, 3, 9, 7, 0, 6, 1, 2, 3, 9, 7, 2, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 0, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 8, 1, 4, 8, 2, 2, 5, 4, 3, 2, 7, 1, 6, 1, 2, 8, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [70, 0, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [2, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 3, 4, 0, 0], [42, 68], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [7, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [0, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [0, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1], [3, 4, 0], [2, 7, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 8, 2, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 2, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [70, 49, 74, 30, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015525239947734, 2.300692857957204, 2.301922570697037, 2.3018063340031505, 2.3033418159411805, 2.301259976116075], "accuracy": [0.0944393053650856, 0.09351472556591034, 0.09549596905708313, 0.08717474341392517, 0.09311848133802414, 0.09272222965955734], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 8, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 0, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [70, 28, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [3, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3015525239947734, 2.300692857957204, 2.301922570697037, 2.3018063340031505, 2.3033418159411805, 2.301259976116075], "accuracy": [0.0944393053650856, 0.09351472556591034, 0.09549596905708313, 0.08717474341392517, 0.09311848133802414, 0.09272222965955734], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]