[{"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.267053607621481, 2.1447397437881026, 1.8708143897926361, 1.5012387156155855, 1.2588801694788623, 1.115943638954999, 1.0262083159288506, 0.9513817739807903, 0.9222610019941561, 0.8754845097899169, 0.8432861703372099, 0.8234473609291346, 0.8078148338017195, 0.7959315062608417, 0.7777503424978149, 0.7626665349586718, 0.7607894266097301, 0.7422786549948084, 0.7279563645141283, 0.7189187899462189, 0.7181452642562856, 0.7200152173238802, 0.7009440170240093, 0.689507459928142, 0.6823171362459951, 0.6878480594691315, 0.669397201457469, 0.6646618846385172, 0.6571037227514477, 0.6520785611413646, 0.6529553940251771, 0.6419017165800868, 0.6370615834069369, 0.6400152215033695, 0.6303330272684133, 0.620655069867964, 0.6207375132790363, 0.6241310417234874, 0.6177014671517023, 0.6141080794207188, 0.6070153564116297, 0.6144809863114197, 0.6045313920437495, 0.5992146978021188, 0.590816522586174], "accuracy": [0.17804782092571259, 0.34539690613746643, 0.43468499183654785, 0.5089156031608582, 0.5661075115203857, 0.6107515692710876, 0.6330735683441162, 0.6630563735961914, 0.6691322326660156, 0.6900013089179993, 0.6913221478462219, 0.6992471218109131, 0.7111346125602722, 0.7107383608818054, 0.7147008180618286, 0.7181349992752075, 0.7243428826332092, 0.7280412316322327, 0.7316074371337891, 0.7297582626342773, 0.7371549606323242, 0.735041618347168, 0.7429665923118591, 0.7489103078842163, 0.7511557340621948, 0.7457403540611267, 0.7568352818489075, 0.7569673657417297, 0.7593448758125305, 0.7607977986335754, 0.7556465268135071, 0.7640998363494873, 0.765949010848999, 0.7640998363494873, 0.7662131786346436, 0.7733456492424011, 0.7728173136711121, 0.7708360552787781, 0.7714964747428894, 0.769911527633667, 0.7757231593132019, 0.7705719470977783, 0.7766477465629578, 0.7751948237419128, 0.7825914621353149], "val_loss": [1.8849231175013952, 1.695479495184762, 1.3230315957750594, 1.0009526865822929, 0.8407293387821743, 0.7543947696685791, 0.6985566445759365, 0.6608483110155378, 0.6360420840127128, 0.6113176345825195, 0.5985352311815534, 0.5849369253431048, 0.5849164043154035, 0.561850735119411, 0.5579035793031965, 0.5498533930097308, 0.5383156197411674, 0.5343620095934186, 0.5225835868290493, 0.5207008293696812, 0.5290596996034894, 0.5243099927902222, 0.5030716146741595, 0.5022118261882237, 0.4926630939756121, 0.4909705604825701, 0.4984711578914097, 0.49198080812181744, 0.4807166201727731, 0.48491508620125906, 0.4762488433292934, 0.47218789373125347, 0.4720538343702044, 0.4832982506070818, 0.4630286863871983, 0.4598417282104492, 0.46260522093091694, 0.4603090797151838, 0.46042915752955843, 0.4518631526402065, 0.45244942392621723, 0.46872263295309885, 0.45860917227608816, 0.44329205581120085, 0.45194355079105925], "val_accuracy": [0.44466665387153625, 0.5260000228881836, 0.5889999866485596, 0.6573333144187927, 0.6830000281333923, 0.7126666903495789, 0.7243333458900452, 0.7310000061988831, 0.7266666889190674, 0.7300000190734863, 0.7456666827201843, 0.753333330154419, 0.75, 0.7633333206176758, 0.7516666650772095, 0.749666690826416, 0.7666666507720947, 0.7689999938011169, 0.7763333320617676, 0.7753333449363708, 0.7616666555404663, 0.7693333625793457, 0.7870000004768372, 0.7766666412353516, 0.7833333611488342, 0.778333306312561, 0.7829999923706055, 0.7879999876022339, 0.784333348274231, 0.7873333096504211, 0.7850000262260437, 0.7856666445732117, 0.7956666946411133, 0.796999990940094, 0.8013333082199097, 0.7996666431427002, 0.8019999861717224, 0.7883333563804626, 0.7940000295639038, 0.8043333292007446, 0.8023333549499512, 0.7950000166893005, 0.7996666431427002, 0.7993333339691162, 0.7996666431427002]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 1, 0, 1], [1, 0, 1, 0], [3, 4], [2, 7, 7, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.795714259147644, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.734193821813704, 2.958989153133801, 2.3098188644827884, 2.299807147358733, 2.2196175549811596, 2.20839757910494, 1.9707926559788345, 2.372146364468247, 1.834526140928237, 1.5732499488576874, 1.7665694380448935, 1.4406455815066719, 1.4227195009185716, 1.3612254699144728, 1.6226608168415941, 1.2029468965505203, 1.845270645364936, 1.2767131145304975, 1.0320851360376972, 1.0159435890621875, 0.9251958699179773, 0.8755100989039422, 0.7662712954621447, 0.7881370478885017, 0.7127477581459124, 0.6845414573254129, 0.683367939940722, 0.6680845472050885, 0.6478522635800507, 0.6383636617594391, 0.6067767536572461, 0.6505389082716787, 0.5829500364447944, 0.5418463547735828, 0.5464761840149301, 0.5543820044352252, 0.5502738970114239, 0.5488370188380655, 0.5171395990086773, 0.47936121023342104, 0.5260187031539078, 0.48921097847511896, 0.4977023040834215, 0.4655464653010854, 0.48633063781877095, 0.46735309500342204], "accuracy": [0.20142649114131927, 0.17514199018478394, 0.09945846349000931, 0.11372341960668564, 0.2067098170518875, 0.21040813624858856, 0.3346982002258301, 0.19019944965839386, 0.375379741191864, 0.47893276810646057, 0.4445911943912506, 0.5190860033035278, 0.5374455451965332, 0.5297846794128418, 0.4434024691581726, 0.5774666666984558, 0.43626996874809265, 0.5521067380905151, 0.6321489810943604, 0.6399418711662292, 0.6586976647377014, 0.6794346570968628, 0.7205125093460083, 0.7100779414176941, 0.7380794882774353, 0.7440232634544373, 0.7423061728477478, 0.7465327978134155, 0.7548540234565735, 0.7561748623847961, 0.7754589915275574, 0.7556465268135071, 0.7807422876358032, 0.7872143983840942, 0.7952714562416077, 0.7932901978492737, 0.7853652238845825, 0.7973847389221191, 0.7988376617431641, 0.8230088353157043, 0.8041210174560547, 0.8123101592063904, 0.8078193068504333, 0.821820080280304, 0.8127063512802124, 0.8212917447090149], "val_loss": [2.600630283355713, 1.988318920135498, 1.9736266817365373, 1.9557044846670968, 1.960902214050293, 1.9091004644121443, 1.7435520035879952, 1.8214372907366072, 1.1654228142329626, 1.0493919849395752, 1.2045911039624895, 1.0692596094948905, 1.0908764430454798, 1.4482488972800118, 0.8561725446156093, 0.7683002778462001, 1.0898514815739222, 0.772422160421099, 0.7505285229001727, 0.6825273207255772, 0.5858961343765259, 0.617806213242667, 0.5994419370378766, 0.5348583800452096, 0.5266567298344204, 0.5648589815412249, 0.5588829176766532, 0.4982852595193045, 0.4944146190370832, 0.5254569053649902, 0.488772988319397, 0.4712137154170445, 0.46370409216199604, 0.45612617901393343, 0.44412660598754883, 0.4582445280892508, 0.41501044375555857, 0.4400595596858433, 0.4055276257651193, 0.3966905304363796, 0.41534594127110075, 0.42836570739746094, 0.4011721355574472, 0.39444901262010845, 0.396044875894274, 0.44194257259368896], "val_accuracy": [0.09966666996479034, 0.0989999994635582, 0.12300000339746475, 0.20033332705497742, 0.1340000033378601, 0.19466666877269745, 0.3370000123977661, 0.25333333015441895, 0.5643333196640015, 0.6016666889190674, 0.5289999842643738, 0.6163333058357239, 0.581333339214325, 0.4883333444595337, 0.6703333258628845, 0.6899999976158142, 0.5726666450500488, 0.7006666660308838, 0.690666675567627, 0.6623333096504211, 0.7516666650772095, 0.7446666955947876, 0.7273333072662354, 0.7680000066757202, 0.7799999713897705, 0.7246666550636292, 0.7646666765213013, 0.7916666865348816, 0.7879999876022339, 0.7570000290870667, 0.7943333387374878, 0.8063333630561829, 0.8069999814033508, 0.8076666593551636, 0.8076666593551636, 0.7903333306312561, 0.8299999833106995, 0.8119999766349792, 0.8293333053588867, 0.8316666483879089, 0.8379999995231628, 0.8230000138282776, 0.8339999914169312, 0.8370000123977661, 0.8356666564941406, 0.8140000104904175]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [14], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5419999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300978647640683, 2.300353261536737, 2.2991957935627503, 2.2962455788875507, 2.2955345897437747, 2.294435123174796, 2.2914565304219683, 2.2901490930678934, 2.28987294700813, 2.287074746897885, 2.2855673806542307, 2.284330339259192, 2.2818548586453273, 2.280683755181831, 2.2805214417908153, 2.277099351117073, 2.276372943776647, 2.2747585218911, 2.273799487959046, 2.2718131130932973, 2.2684866673186503, 2.270410420006261, 2.267382552925748, 2.265261371106425, 2.2650763102022413, 2.260321811079711, 2.2602395330201586, 2.258371714886862, 2.256087698783416, 2.253709586320725, 2.2522489930723384, 2.250706444484462, 2.249386383227196, 2.2480196550049567, 2.2449596709799473, 2.2436510556094666, 2.2414278952578797, 2.240168394587059, 2.2381106580583854, 2.23581182158398, 2.2342511970825862, 2.232116435009018, 2.2286312693161436, 2.2278168008091614, 2.224707973946544, 2.223777342592138, 2.2230905220571873, 2.217170239534077, 2.214141833358642, 2.213050985915739, 2.212068621193681, 2.206760993801828, 2.204175719936463, 2.202830482420432, 2.200949069137634, 2.1986295204782342, 2.1947868672722226, 2.191829590324429, 2.190541772574104, 2.185413660988627, 2.183724309852992, 2.1825384809954795, 2.177110613455248, 2.175775656280044, 2.173383109872808, 2.166950798305491, 2.1685115393551824, 2.161023081884156, 2.158995946951672, 2.1529360607929706, 2.154443164212498, 2.1506447729071163, 2.1438703757109594, 2.1424216211369607, 2.138511530018722, 2.1304640897812073, 2.1288013024305577, 2.1257270558666734, 2.1195128772079577, 2.1145919826383115, 2.1105874074117903, 2.1077709850177255, 2.1025062057052732, 2.0994065112725004, 2.095586719325253, 2.091018754981528, 2.0863878065332715, 2.084259602970309, 2.075537591074373, 2.067569727816397, 2.0668700329930854, 2.0605434962330462, 2.0550279004809062, 2.050327939789419, 2.047358470050619, 2.040893374621797, 2.0300887649746744, 2.026836035793578, 2.0240576186940307, 2.0148272476554028], "accuracy": [0.09153348207473755, 0.09206181764602661, 0.1014397069811821, 0.10698718577623367, 0.10830801725387573, 0.11028926074504852, 0.11742173880338669, 0.11649715900421143, 0.12429005652666092, 0.12732796370983124, 0.12600713968276978, 0.13512085378170013, 0.14291374385356903, 0.14555540680885315, 0.14780081808567047, 0.1554616242647171, 0.16219785809516907, 0.1640470176935196, 0.16682076454162598, 0.17514199018478394, 0.1872936189174652, 0.17804782092571259, 0.18531237542629242, 0.187689870595932, 0.18861444294452667, 0.20314356684684753, 0.19865275919437408, 0.20552106201648712, 0.21423853933811188, 0.22057852149009705, 0.2207106053829193, 0.22163519263267517, 0.2343151569366455, 0.23299431800842285, 0.23603223264217377, 0.24276845157146454, 0.23840972781181335, 0.2452780306339264, 0.25241050124168396, 0.2603355050086975, 0.25822216272354126, 0.26495838165283203, 0.26535463333129883, 0.2681283950805664, 0.2782987654209137, 0.27077004313468933, 0.2727513015270233, 0.2954695522785187, 0.29084664583206177, 0.2868841588497162, 0.2942807972431183, 0.301281213760376, 0.30220577120780945, 0.3127724230289459, 0.2999603748321533, 0.31620657444000244, 0.3139611780643463, 0.3163386583328247, 0.3143574297428131, 0.32901862263679504, 0.32439571619033813, 0.32901862263679504, 0.32664114236831665, 0.3269053101539612, 0.3339056968688965, 0.33958524465560913, 0.3369435966014862, 0.34288734197616577, 0.340509831905365, 0.3443402349948883, 0.34724608063697815, 0.3481706380844116, 0.3599260449409485, 0.3533218801021576, 0.3543785512447357, 0.3747193217277527, 0.36547350883483887, 0.3625676929950714, 0.37128517031669617, 0.3699643313884735, 0.37128517031669617, 0.36349228024482727, 0.3751155734062195, 0.3743230700492859, 0.3731343150138855, 0.38621053099632263, 0.3800026476383209, 0.3825122117996216, 0.38687095046043396, 0.39241844415664673, 0.3885880410671234, 0.39268261194229126, 0.39426758885383606, 0.3980979919433594, 0.3883238732814789, 0.3955884277820587, 0.40681546926498413, 0.4002113342285156, 0.40364548563957214, 0.40166425704956055], "val_loss": [1.9695092609950475, 1.9679969378880091, 1.966493742806571, 1.9649975640433175, 1.963500704084124, 1.9620304788861955, 1.9605584144592285, 1.9590823990958077, 1.9576194626944405, 1.9561301640101842, 1.9546407290867396, 1.9531721387590681, 1.9516851561410087, 1.9501936776297433, 1.948713779449463, 1.9472240720476424, 1.9457365444728307, 1.944237232208252, 1.9427281788417272, 1.9411934443882533, 1.9396717888968331, 1.9381362370082311, 1.9365722111293249, 1.934993130820138, 1.933406148638044, 1.931800433567592, 1.930185181753976, 1.9285283088684082, 1.9268555641174316, 1.9251599311828613, 1.923459189278739, 1.9217300415039062, 1.91998747416905, 1.918235915047782, 1.9164369446890694, 1.9146184240068709, 1.912783077784947, 1.9108960287911552, 1.9090001923697335, 1.907062598637172, 1.9051024573189872, 1.9031145232064384, 1.9010679381234306, 1.8990222385951452, 1.8969366209847587, 1.894812992640904, 1.8926901817321777, 1.890484060559954, 1.888218675340925, 1.885962690625872, 1.883662564413888, 1.8812729290553503, 1.8788394927978516, 1.8763555799211775, 1.8738436017717635, 1.8712899344308036, 1.8687080655779158, 1.8660478591918945, 1.8633545466831751, 1.8605694089617049, 1.8577546392168318, 1.8548945699419295, 1.8519419261387415, 1.8489764077322823, 1.845949377332415, 1.8428113801138741, 1.839693546295166, 1.8364501680646623, 1.8331657137189592, 1.8297919545854842, 1.8264109747750419, 1.8229677336556571, 1.8194094385419572, 1.8158072062901087, 1.8121623992919922, 1.8083843503679549, 1.8045755113874162, 1.8006950787135534, 1.7966952323913574, 1.7926552636282784, 1.788524900163923, 1.7843190601893835, 1.780043261391776, 1.7757246834891183, 1.7713347843715124, 1.7668318067278181, 1.7622694969177246, 1.757701805659703, 1.7529634066990443, 1.7481212615966797, 1.7432540484837122, 1.738312040056501, 1.7332556588309151, 1.728116580418178, 1.722947461264474, 1.7176706450326102, 1.7122077601296561, 1.7066897664751326, 1.7011580126626151, 1.6954870223999023], "val_accuracy": [0.04766666516661644, 0.055666666477918625, 0.0663333311676979, 0.07699999958276749, 0.09099999815225601, 0.10233332961797714, 0.1133333370089531, 0.12466666847467422, 0.14100000262260437, 0.15966667234897614, 0.17533333599567413, 0.19333332777023315, 0.2056666612625122, 0.21799999475479126, 0.23199999332427979, 0.24566666781902313, 0.2549999952316284, 0.2706666588783264, 0.28299999237060547, 0.2906666696071625, 0.30300000309944153, 0.31433331966400146, 0.32199999690055847, 0.32899999618530273, 0.335999995470047, 0.34166666865348816, 0.34700000286102295, 0.35233333706855774, 0.3580000102519989, 0.3646666705608368, 0.36633333563804626, 0.3700000047683716, 0.3736666738986969, 0.3773333430290222, 0.38100001215934753, 0.3840000033378601, 0.38733333349227905, 0.3893333375453949, 0.39266666769981384, 0.39500001072883606, 0.398333340883255, 0.40400001406669617, 0.40533334016799927, 0.4076666533946991, 0.41100001335144043, 0.4153333306312561, 0.4183333218097687, 0.4206666648387909, 0.42366665601730347, 0.42800000309944153, 0.43033334612846375, 0.4336666762828827, 0.4350000023841858, 0.43933331966400146, 0.4403333365917206, 0.4436666667461395, 0.44433334469795227, 0.44566667079925537, 0.4463333189487457, 0.44866666197776794, 0.4516666531562805, 0.45233333110809326, 0.45366665720939636, 0.45633333921432495, 0.45899999141693115, 0.460999995470047, 0.4633333384990692, 0.46533334255218506, 0.46700000762939453, 0.46966665983200073, 0.47200000286102295, 0.47566667199134827, 0.476666659116745, 0.47833332419395447, 0.48100000619888306, 0.48266667127609253, 0.48633334040641785, 0.48899999260902405, 0.4933333396911621, 0.49433332681655884, 0.4973333477973938, 0.4986666738986969, 0.49933332204818726, 0.503000020980835, 0.5053333044052124, 0.5090000033378601, 0.5120000243186951, 0.5149999856948853, 0.5176666378974915, 0.5196666717529297, 0.5230000019073486, 0.5236666798591614, 0.5260000228881836, 0.5270000100135803, 0.5286666750907898, 0.5303333401679993, 0.5329999923706055, 0.534333348274231, 0.5356666445732117, 0.5356666445732117]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 5, 2, 6, 5, 3, 2, 4, 3, 2, 4, 0, 5, 2, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 3, 2, 0, 0, 2, 1, 2, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3788571357727051, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(grad), grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.736151536977554, 2.7925245976640154, 2.3104049271722245, 2.3002318095820784, 2.2095243551349752, 2.245974004670157, 2.301645055438833, 2.1920043489700296, 1.9864032730655017, 2.28083480631025, 2.169128418976463, 2.3102585936518487, 2.610146816648182, 2.3057450528913845], "accuracy": [0.20116232335567474, 0.16100911796092987, 0.10830801725387573, 0.1150442510843277, 0.17791573703289032, 0.20882314443588257, 0.10870426893234253, 0.23074890673160553, 0.311319500207901, 0.26522254943847656, 0.2736758589744568, 0.09866596013307571, 0.1542728841304779, 0.10500594228506088], "val_loss": [2.697381087711879, 1.993246623447963, 1.972764492034912, 1.9539921624319894, 1.7021865504128593, 1.9774916512625558, 1.956761360168457, 1.7613771302359444, 1.8431696210588728, 1.7561993598937988, 1.9868293489728654, 1.950836522238595, 1.9764669282095773, 1.974158491407122], "val_accuracy": [0.09966666996479034, 0.0989999994635582, 0.10066666454076767, 0.13699999451637268, 0.2199999988079071, 0.09966666996479034, 0.11800000071525574, 0.19166666269302368, 0.36899998784065247, 0.16866666078567505, 0.09966666996479034, 0.18199999630451202, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 4, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 1, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.11800000071525574, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5562899253466314, 43964.20287859555, NaN, NaN, NaN, NaN], "accuracy": [0.22876766324043274, 0.10157178342342377, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0146871975490024, 3.5593677563606748e+16, NaN, NaN, NaN, NaN], "val_accuracy": [0.10866666585206985, 0.10166666656732559, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 4, 3, 1, 2, 5, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 3, 2, 0, 2, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10742857307195663, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, grad)), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5550841376010247, 3.2588401294859914, 2.5334681962002787, 2.3644317959939265, 2.388757070860827, 2.4502416705694716], "accuracy": [0.22823932766914368, 0.09642054885625839, 0.1010434553027153, 0.09945846349000931, 0.09760929644107819, 0.09536388516426086], "val_loss": [2.013669013977051, 2.1205626215253557, 2.056556020464216, 2.1181728499276296, 2.0565225737435475, 2.0487674985613142], "val_accuracy": [0.11233333498239517, 0.0989999994635582, 0.09833333641290665, 0.09966666996479034, 0.10066666454076767, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 0, 8], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2, 0], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 1, 0, 1], [1, 0, 1, 0], [3, 4], [2, 7, 7, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10057143121957779, "mapping_values": [1, 47, 47, 29, 18, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, grad), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.736485183797949, 2.7000843206369614, 2.2752758324532034, 2.305526083234657, 2.234988641965627, 2.3106710743894667, 2.303456821556278, 2.3028703472476044, 2.3026714742207304], "accuracy": [0.201294407248497, 0.16470743715763092, 0.1526878923177719, 0.10355303436517715, 0.1900673657655716, 0.09998679161071777, 0.09932637959718704, 0.10196803510189056, 0.10777968913316727], "val_loss": [2.6914450100490024, 1.9845422336033411, 1.9782360621861048, 1.971703256879534, 1.9923960821969169, 1.9746726581028529, 1.9734506607055664, 1.9733281135559082, 1.973250048501151], "val_accuracy": [0.09966666996479034, 0.0989999994635582, 0.11100000143051147, 0.13733333349227905, 0.1003333330154419, 0.0989999994635582, 0.09833333641290665, 0.0989999994635582, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 4, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 4, 4, 2, 5, 9, 6], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2, 1, 3, 2, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0], [3, 4, 8, 4, 5, 2, 0, 0], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 55, 55, 34, 21, 6, 1, 1, 0, 1, 0, 13, 9, 8, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad)))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.sqrt(sigma)))), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 0, 1, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [4, 4], [3, 7, 7, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [50245854.84743711, 549081417.6198653, 2197417937.0334167, 5680131429.879276, 11842670409.949545, 21288818973.654205], "accuracy": [0.09417514503002167, 0.09694888442754745, 0.09945846349000931, 0.09985470771789551, 0.09655263274908066, 0.1022322028875351], "val_loss": [74600123.42857143, 596082395.4285715, 2010976329.142857, 4765807762.285714, 9307112301.714285, 16081405659.428572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 9, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 3, 2, 0, 0, 1, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 7, 7, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 18, 13, 4, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))))), tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(grad)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, grad)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 4, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [9, 4], [6, 7, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [92884.68013161798, 1767639.7714304584, 8248842.633998151, 22740477.125082552, 49139250.73253203, 90367780.71905957], "accuracy": [0.09457138925790787, 0.09681680053472519, 0.09945846349000931, 0.09985470771789551, 0.09655263274908066, 0.1022322028875351], "val_loss": [353996.75, 2810146.285714286, 9460702.285714285, 22397962.285714287, 43714209.14285714, 75501565.71428572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 4, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 4, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [34], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [4, 5, 7, 1, 4, 5, 9, 7, 4, 8, 0, 7, 9], [3, 1, 2, 3, 1, 0, 0], [87, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 19, 13, 6, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.add(alpha, tf.math.subtract(beta, tf.math.pow(tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.negative(sigma)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 3, 3, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 7, 7, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09399999678134918, "mapping_values": [1, 35, 35, 21, 14, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.733878063094331, 2.802115180788102, 2.30860942437617, 2.302373616545192, 2.311920328761262, 2.3028521598558447, 2.3031547629145144, 2.303011669946967], "accuracy": [0.20116232335567474, 0.18082155287265778, 0.10117553919553757, 0.13710209727287292, 0.09655263274908066, 0.09509972482919693, 0.09272222965955734, 0.09787346422672272], "val_loss": [2.602795055934361, 1.9877422196524483, 1.9727747780936105, 1.9985589299883162, 1.9737656457083566, 1.973679678780692, 1.9736674172537667, 1.9736454827444894], "val_accuracy": [0.09966666996479034, 0.0989999994635582, 0.1120000034570694, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.09799999743700027, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 4, 3, 1, 2, 6, 5, 9, 2, 4, 3, 2, 7, 0, 5, 1, 0, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 3, 2, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 3, 3, 4, 3, 0, 3, 2], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [34], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06314285844564438, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30132416387071, 2.301406258558002, 2.3012659452405857, 2.2998174343441677, 2.300345260737012, 2.300668774311175, 2.299378027611751, 2.2998417494807497, 2.300630266955185, 2.2994477131016864, 2.2994084790902067, 2.299481269123217, 2.2989745329336766, 2.2993172274415583], "accuracy": [0.09060890227556229, 0.09113723784685135, 0.09496764093637466, 0.09734513610601425, 0.09681680053472519, 0.09549596905708313, 0.09959053993225098, 0.09932637959718704, 0.09945846349000931, 0.09602430462837219, 0.09826971590518951, 0.09536388516426086, 0.09826971590518951, 0.10051512718200684], "val_loss": [1.970350674220494, 1.9698501995631628, 1.969545568738665, 1.969566481454032, 1.9695794922964913, 1.9695236342293876, 1.9695382118225098, 1.9694763592311315, 1.969435214996338, 1.9694060598100935, 1.969473430088588, 1.9695865767342704, 1.969876493726458, 1.970144544328962], "val_accuracy": [0.044333335012197495, 0.05299999937415123, 0.057999998331069946, 0.05999999865889549, 0.06499999761581421, 0.07233333587646484, 0.07533333450555801, 0.07999999821186066, 0.08366666734218597, 0.08366666734218597, 0.0833333358168602, 0.08033332973718643, 0.08033332973718643, 0.08266666531562805]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 0, 0], [1, 1, 0, 0], [5, 4, 7], [2, 0, 1, 5, 3, 4], [16], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06314285844564438, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301324132379681, 2.3014065644303647, 2.3012660711102275, 2.299820889035992, 2.3003481846475458, 2.3006718648092512, 2.2993828228136897, 2.2998459195227845, 2.3006300513676017, 2.2994457380158506, 2.29940836654127, 2.299480769832955, 2.2989750275632663, 2.2993144970433965], "accuracy": [0.09060890227556229, 0.09113723784685135, 0.0948355570435524, 0.09747721254825592, 0.09681680053472519, 0.09549596905708313, 0.09959053993225098, 0.09932637959718704, 0.09959053993225098, 0.09602430462837219, 0.09840179979801178, 0.09536388516426086, 0.09800554811954498, 0.10038304328918457], "val_loss": [1.9703506061008997, 1.9698506082807268, 1.9695474760872977, 1.9695683888026647, 1.9695841925484794, 1.9695254053388322, 1.9695422308785575, 1.9694782665797643, 1.9694344656808036, 1.9694051061357771, 1.9694724764142717, 1.9695860317775182, 1.9698735645839147, 1.9701384816850935], "val_accuracy": [0.044333335012197495, 0.05299999937415123, 0.057999998331069946, 0.05966666713356972, 0.06499999761581421, 0.07233333587646484, 0.07533333450555801, 0.07966666668653488, 0.08366666734218597, 0.08366666734218597, 0.0833333358168602, 0.08033332973718643, 0.08033332973718643, 0.08266666531562805]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301630325793527, 2.3026216606091765, 2.3030661424043046, 2.3017225424217713, 2.302640236096375, 2.3030184727334833], "accuracy": [0.08915598690509796, 0.0878351628780365, 0.09034473448991776, 0.09219389408826828, 0.09285431355237961, 0.0874389111995697], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301630325793527, 2.3026216606091765, 2.3030661424043046, 2.3017225424217713, 2.302640236096375, 2.3030184727334833], "accuracy": [0.08915598690509796, 0.0878351628780365, 0.09034473448991776, 0.09219389408826828, 0.09285431355237961, 0.0874389111995697], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 4, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 3, 3, 4, 3, 0, 3, 2], [42], [1, 0, 1, 0, 1], [0, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301630325793527, 2.3026216606091765, 2.3030661424043046, 2.3017225424217713, 2.302640236096375, 2.3030184727334833], "accuracy": [0.08915598690509796, 0.0878351628780365, 0.09034473448991776, 0.09219389408826828, 0.09285431355237961, 0.0874389111995697], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]