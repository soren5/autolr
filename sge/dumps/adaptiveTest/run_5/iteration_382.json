[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 4, 0, 3, 9, 1, 4, 0, 9, 5, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 45, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8268571496009827, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9904500952234294, 1.5179802101238797, 1.155696056821579, 0.9807502740661718, 0.8900186885160588, 0.8169984262081862, 0.7784558216877712, 0.8130431578159647, 0.7299615338320714, 0.6734911274003031, 0.670514309222058, 0.6759427782094489, 0.6486030959843676, 0.6262056666153644, 0.6531520828815295, 0.5911725611340936, 0.5900143119542827, 0.5946699572891182, 0.5960035588778777, 0.5480596750891992, 0.5446873028926121, 0.5259137366937845, 0.5430183082586738, 0.5369657557858704, 0.5302736229703505, 0.5051954004664101, 0.5017348991849907, 0.5102985108635603, 0.5058024718721765, 0.49249114958428436, 0.47708976403786096, 0.46382571039041115, 0.46777324204699333, 0.47883293325906384, 0.43891260135348575, 0.4501864937995293, 0.4701895466286666, 0.4287787625668717, 0.46214600401610556, 0.4301244106078271, 0.42272441358204765], "accuracy": [0.334169864654541, 0.4822348356246948, 0.5764099955558777, 0.6170915365219116, 0.6583014130592346, 0.6873596906661987, 0.7022850513458252, 0.6954167485237122, 0.7148329019546509, 0.7387399077415466, 0.7445515990257263, 0.737022876739502, 0.750231146812439, 0.757099449634552, 0.7508915662765503, 0.7737419009208679, 0.7763835787773132, 0.7695152759552002, 0.7709681391716003, 0.7922335267066956, 0.7932901978492737, 0.8035926818847656, 0.7923656105995178, 0.7915731072425842, 0.7975168228149414, 0.8039889335632324, 0.8119139075279236, 0.8070268034934998, 0.8033285140991211, 0.8105930685997009, 0.8189142942428589, 0.8260467648506165, 0.8241975903511047, 0.8227446675300598, 0.8368775844573975, 0.8327829837799072, 0.8171972036361694, 0.8388587832450867, 0.8228767514228821, 0.8350284099578857, 0.8416325449943542], "val_loss": [1.4212180886949812, 0.9714252608163017, 0.8398164851324899, 0.7320289100919452, 0.6652476106371198, 0.6125015531267438, 0.6302592073168073, 0.6099519729614258, 0.5339103937149048, 0.5326293706893921, 0.5292188780648368, 0.5137659311294556, 0.49283511298043386, 0.5128383466175624, 0.4955178499221802, 0.49643739632197786, 0.5364092077527728, 0.48179718426295687, 0.4469407285962786, 0.47036916869027273, 0.42685398033687044, 0.4441107341221401, 0.4449075034686497, 0.43328161750520977, 0.4128354106630598, 0.4086434074810573, 0.40253640924181255, 0.4352612239973886, 0.420867919921875, 0.3936357242720468, 0.3907825691359384, 0.4001785601888384, 0.40197841610227314, 0.3757442831993103, 0.38132847206933157, 0.37692151750837055, 0.38102491412843975, 0.4068378210067749, 0.38181231703077045, 0.39561285291399273, 0.37676978962762014], "val_accuracy": [0.42100000381469727, 0.5993333458900452, 0.5929999947547913, 0.6576666831970215, 0.7103333473205566, 0.7253333330154419, 0.7076666951179504, 0.7196666598320007, 0.7490000128746033, 0.7423333525657654, 0.7596666812896729, 0.7483333349227905, 0.7720000147819519, 0.7689999938011169, 0.7903333306312561, 0.7613333463668823, 0.7383333444595337, 0.7910000085830688, 0.7996666431427002, 0.7736666798591614, 0.8136666417121887, 0.7823333144187927, 0.7873333096504211, 0.8019999861717224, 0.8190000057220459, 0.8166666626930237, 0.8190000057220459, 0.8063333630561829, 0.8183333277702332, 0.8326666951179504, 0.8386666774749756, 0.8233333230018616, 0.8233333230018616, 0.831333339214325, 0.8296666741371155, 0.8389999866485596, 0.8363333344459534, 0.8146666884422302, 0.8386666774749756, 0.8246666789054871, 0.8333333134651184]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 2, 6, 1, 4, 0, 5, 5, 5, 2, 2, 3, 2, 3, 1, 9, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 2, 2, 2, 1, 0, 2, 0, 2, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 94, 37, 46, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8134285807609558, "mapping_values": [1, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(alpha, grad), grad)), tf.math.add(alpha, grad)))), tf.math.pow(tf.math.negative(tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.990543013881179, 1.5169077796895727, 1.1521189096282265, 0.9840183915746777, 0.8962999583471563, 0.8392296014696836, 0.7561620038734403, 0.8085561863120521, 0.7318801527576928, 0.662373125427167, 0.6853057567579808, 0.6674863818204791, 0.6491442450348412, 0.6241723483249008, 0.641517246467027, 0.6120143450561406, 0.5994485019614054, 0.5929132077546246, 0.5995497754095347, 0.5505125504270001, 0.5470264280996523, 0.5270300373708598, 0.5412571517515177, 0.5355453854853592, 0.5256591504079287, 0.5085467549914051, 0.5068576329844959, 0.508594817190028, 0.5062821937385189, 0.4899568917839172, 0.4798616949065864, 0.4681479318259084, 0.4693040310698824, 0.4825704184938589, 0.4384798654247473], "accuracy": [0.3339056968688965, 0.4810461103916168, 0.5758816599845886, 0.6151102781295776, 0.6606789231300354, 0.6837934255599976, 0.7069079279899597, 0.6955488324165344, 0.7166820764541626, 0.7454761862754822, 0.7371549606323242, 0.7478536367416382, 0.750759482383728, 0.7593448758125305, 0.752740740776062, 0.7646281719207764, 0.7662131786346436, 0.7720248103141785, 0.7671377658843994, 0.7901201844215393, 0.793422281742096, 0.8001585006713867, 0.7940827012062073, 0.791969358921051, 0.7987055778503418, 0.8050455451011658, 0.8068947196006775, 0.8099326491355896, 0.8017435073852539, 0.8115176558494568, 0.8202351331710815, 0.8227446675300598, 0.8220842480659485, 0.8208954930305481, 0.8380662798881531], "val_loss": [1.4211444514138358, 0.9681085859026227, 0.8444318090166364, 0.709996223449707, 0.7069245747157505, 0.6027367625917707, 0.6339661734444755, 0.6385495322091239, 0.533021262713841, 0.5808748517717633, 0.5338283777236938, 0.5062459366662162, 0.4970990759985788, 0.5116308076041085, 0.5040389810289655, 0.4984877279826573, 0.512867774282183, 0.5028901611055646, 0.4499066727502005, 0.4680043799536569, 0.4273451140948704, 0.4384710448128836, 0.4480862617492676, 0.426675021648407, 0.4155902181352888, 0.41614045415605816, 0.40040154116494314, 0.41535637208393644, 0.4188691122191293, 0.39274827923093525, 0.3925960489681789, 0.40346510069710867, 0.4063478282519749, 0.3784802556037903, 0.3857687200818743], "val_accuracy": [0.41999998688697815, 0.5963333249092102, 0.6056666374206543, 0.6690000295639038, 0.6779999732971191, 0.6953333616256714, 0.7083333134651184, 0.7059999704360962, 0.7523333430290222, 0.7126666903495789, 0.7573333382606506, 0.7716666460037231, 0.765333354473114, 0.7559999823570251, 0.7876666784286499, 0.7573333382606506, 0.750333309173584, 0.777999997138977, 0.7956666946411133, 0.778333306312561, 0.8153333067893982, 0.7910000085830688, 0.7873333096504211, 0.8050000071525574, 0.8183333277702332, 0.8140000104904175, 0.8199999928474426, 0.8149999976158142, 0.815666675567627, 0.8349999785423279, 0.8330000042915344, 0.8230000138282776, 0.8220000267028809, 0.8316666483879089, 0.828000009059906]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 0, 3, 0, 2, 6, 1, 4, 8, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 1, 2, 2, 1, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8080000281333923, "mapping_values": [1, 18, 18, 11, 7, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))), tf.math.divide_no_nan(grad, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, alpha))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9904974638085244, 1.5176712755104491, 1.1520528944649355, 0.9801759403285065, 0.8857388621339582, 0.8401724673328367, 0.7602829951982394, 0.8106667170545381, 0.7280365483179194, 0.6678652535922743, 0.6833633865583937, 0.6633189765689962, 0.6390599183843529, 0.6322584264172287, 0.6451761132659, 0.6039860433418013, 0.6042663469495334, 0.5920080128457363, 0.5991121030691482, 0.5492724073309515, 0.5492496946862251, 0.5397642010931388, 0.5383470549858667, 0.5368523628578493, 0.526599820255997, 0.5061650103455789, 0.5096818404017565, 0.5091669968940862, 0.5046144052306659, 0.4908608997526296, 0.48110346482918326, 0.46882172156602103, 0.46951714603262584, 0.48163951238416297, 0.4372418872070287, 0.4442318419400239], "accuracy": [0.33403778076171875, 0.4815744161605835, 0.5760137438774109, 0.6132611036300659, 0.6696605682373047, 0.6802271604537964, 0.7098137736320496, 0.6931713223457336, 0.717870831489563, 0.7408532500267029, 0.7372870445251465, 0.752740740776062, 0.7585523724555969, 0.7553823590278625, 0.7498348951339722, 0.7705719470977783, 0.76542067527771, 0.7729493975639343, 0.7691190242767334, 0.7924976944923401, 0.7913089394569397, 0.7907806038856506, 0.7977809906005859, 0.791969358921051, 0.7976489067077637, 0.8064984679222107, 0.8042530417442322, 0.8079513907432556, 0.8045172095298767, 0.8103289008140564, 0.8204993009567261, 0.8238013386726379, 0.8222163319587708, 0.8207634687423706, 0.8383304476737976, 0.8347642421722412], "val_loss": [1.4216693469456263, 0.9747334548405239, 0.8256826230457851, 0.6998932531901768, 0.6877163818904332, 0.6080142089298793, 0.6517188719340733, 0.6380259309496198, 0.5326328788484845, 0.5639627490724836, 0.5298571586608887, 0.5101476056235177, 0.5131148270198277, 0.5036079202379499, 0.5102624041693551, 0.4964387927736555, 0.5087454659598214, 0.4940289258956909, 0.456341096333095, 0.4666094609669277, 0.43086280141557964, 0.46934543337140766, 0.4456017868859427, 0.4274838311331613, 0.41862731320517405, 0.4171694006238665, 0.40183372156960623, 0.41978473322732107, 0.41844924858638216, 0.3935271331242153, 0.39424688475472586, 0.40619208983012606, 0.4062859756605966, 0.37648075819015503, 0.37554517814091276, 0.39159352438790457], "val_accuracy": [0.4206666648387909, 0.5950000286102295, 0.5983333587646484, 0.6896666884422302, 0.6710000038146973, 0.6903333067893982, 0.6959999799728394, 0.7136666774749756, 0.7519999742507935, 0.7179999947547913, 0.762666642665863, 0.7676666378974915, 0.7493333220481873, 0.7613333463668823, 0.7816666960716248, 0.7616666555404663, 0.7483333349227905, 0.7839999794960022, 0.7876666784286499, 0.7770000100135803, 0.8076666593551636, 0.7643333077430725, 0.7873333096504211, 0.8056666851043701, 0.8143333196640015, 0.8103333115577698, 0.8220000267028809, 0.815666675567627, 0.8166666626930237, 0.8330000042915344, 0.8353333473205566, 0.8193333148956299, 0.8230000138282776, 0.8336666822433472, 0.8333333134651184, 0.8339999914169312]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 2, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7922857403755188, "mapping_values": [1, 33, 33, 20, 13, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.square(tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0121378745574203, 1.5006754540842853, 1.1480662881296702, 0.980031689278375, 0.8819143719220316, 0.8034976999348087, 0.7651695385900046, 0.7344233422483419, 0.7137983405138161, 0.695235499010236, 0.6620199762205045, 0.6599203517581526, 0.6427259901495437, 0.6599938675097943, 0.5846068474437425, 0.5979660259198833, 0.5937682713625878, 0.5928257805103513, 0.5592626176883736, 0.5228424449370696, 0.5615564574969837, 0.5392886264890082, 0.5103622153371852, 0.5512068917517964], "accuracy": [0.32862237095832825, 0.4695548713207245, 0.5765420794487, 0.6338660717010498, 0.6623960137367249, 0.69673752784729, 0.7143045663833618, 0.7277770638465881, 0.7232862114906311, 0.7292299270629883, 0.7531369924545288, 0.7434949278831482, 0.7623828053474426, 0.7360982894897461, 0.7758552432060242, 0.7689869403839111, 0.7696473598480225, 0.7660810947418213, 0.7878747582435608, 0.8067626357078552, 0.7878747582435608, 0.7993659973144531, 0.8068947196006775, 0.7918372750282288], "val_loss": [1.3913110324314661, 0.8861616339002337, 0.8061390604291644, 0.7349319968904767, 0.6498892136982509, 0.6207632507596698, 0.6244969027382987, 0.5452688421521869, 0.5686835731778827, 0.5726808820452008, 0.5950708218983242, 0.5345508371080671, 0.5174434355327061, 0.49776348045894075, 0.5082080023629325, 0.4906008243560791, 0.4776460272925241, 0.46175760882241385, 0.4415343148367746, 0.45915072304861887, 0.4467442205974034, 0.4417602164404733, 0.478375894682748, 0.4582606724330357], "val_accuracy": [0.503333330154419, 0.6693333387374878, 0.6169999837875366, 0.6743333339691162, 0.7093333601951599, 0.7319999933242798, 0.703000009059906, 0.7459999918937683, 0.7203333377838135, 0.7276666760444641, 0.7179999947547913, 0.7576666474342346, 0.762333333492279, 0.7716666460037231, 0.7556666731834412, 0.7789999842643738, 0.7710000276565552, 0.7733333110809326, 0.8029999732971191, 0.7846666574478149, 0.8006666898727417, 0.7979999780654907, 0.7786666750907898, 0.8023333549499512]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 4, 0, 2, 9, 1, 3, 0, 9, 5, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 0, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 18, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [23], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7565714120864868, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2965966773433077, 2.289160923982388, 2.2807116421253735, 2.268828102531781, 2.257890925226651, 2.2473531172433314, 2.234354812833438, 2.22461164988043, 2.2109164979085945, 2.1932944396798324, 2.1758240395060873, 2.1554184229209232, 2.1297410448324, 2.1092586843266132, 2.08021486509336, 2.0491637192256165, 2.0136865120459353, 1.974281297777433, 1.9343085063998064, 1.8932300854541717, 1.846681421789684, 1.7995147275855403, 1.7534067075580984, 1.706335686138356, 1.6566306429296012, 1.6070164950327583, 1.5695327985965344, 1.5303402995987654, 1.4813779433326888, 1.4628167677202781, 1.4234758942370653, 1.3891080228360637, 1.3517086077769356, 1.3209310114863935, 1.3021517039416033, 1.2827123662247997, 1.2495382528861816, 1.235195485985967, 1.2168418095804965, 1.2074141125590212, 1.183218199138266, 1.1720276900790134, 1.14517129927169, 1.1354819331674875, 1.107603909206932, 1.0978648578013726, 1.0996792585370154, 1.076148500547685, 1.0663490322807352, 1.0584233908243246, 1.0416995648222356, 1.0407460626279201, 1.039348295714011, 1.0230376754596233, 1.0181985002514424, 0.9995617271650579, 0.9863783967272953, 0.9968875860257816, 0.9834361317733716, 0.9715942958830653, 0.9763450244744976, 0.9599443669442598, 0.9650758449364616, 0.9446843893867143, 0.9341166347418762, 0.9341822832629917, 0.9258925055138045, 0.9276131319253358, 0.9124735577892806, 0.9109928630378031, 0.9028433419536716, 0.8976710571620474, 0.9061989959960663, 0.8945977695944634, 0.8974197819138152, 0.8902394284409713, 0.881682406138152, 0.8726461281976081, 0.8742762929759305, 0.8655848952017409, 0.8656015890527317, 0.8720353816273883, 0.8645067052235929, 0.8546636181343122, 0.8604060603863433, 0.8575476311799668, 0.8516512359484485, 0.8476898444327129, 0.8404111709766038, 0.8359891335410905, 0.8364263890504743, 0.8226954492012964, 0.828922206801887, 0.8174403905711075, 0.8210867708464026, 0.821202564870897, 0.8179524919895715, 0.8172785662121509, 0.8124192195829226, 0.8162518693959598], "accuracy": [0.10236428678035736, 0.12574297189712524, 0.15017831325531006, 0.1850482076406479, 0.2086910605430603, 0.2370888888835907, 0.2584863305091858, 0.2666754722595215, 0.2915070652961731, 0.3156782388687134, 0.32967904210090637, 0.35041606426239014, 0.37168142199516296, 0.3687755763530731, 0.3765684962272644, 0.395720511674881, 0.409721314907074, 0.41487252712249756, 0.42266544699668884, 0.4321753978729248, 0.43930789828300476, 0.45766741037368774, 0.46849822998046875, 0.4748381972312927, 0.4846123456954956, 0.49993395805358887, 0.4991414546966553, 0.5054814219474792, 0.5222559571266174, 0.5173689126968384, 0.5312376022338867, 0.5340113639831543, 0.5494650602340698, 0.559371292591095, 0.5601637959480286, 0.5635979175567627, 0.5716549754142761, 0.5729758143424988, 0.5830141305923462, 0.5885615944862366, 0.5956941246986389, 0.5909391045570374, 0.5987319946289062, 0.6015057563781738, 0.6131290197372437, 0.6098269820213318, 0.6104874014854431, 0.620261549949646, 0.628582775592804, 0.6308281421661377, 0.6310923099517822, 0.6305639743804932, 0.63096022605896, 0.6415268778800964, 0.6394135355949402, 0.6498481035232544, 0.6538106203079224, 0.64667809009552, 0.648659348487854, 0.6514331102371216, 0.6454893946647644, 0.6630563735961914, 0.6567164063453674, 0.6622639298439026, 0.6621318459510803, 0.6649055480957031, 0.6745476126670837, 0.666358470916748, 0.6774534583091736, 0.6819442510604858, 0.6741513609886169, 0.6742834448814392, 0.677189290523529, 0.6807554960250854, 0.674679696559906, 0.683000922203064, 0.681547999382019, 0.6914542317390442, 0.685510516166687, 0.6882842183113098, 0.6894729733467102, 0.6832650899887085, 0.6811517477035522, 0.6913221478462219, 0.6935675740242004, 0.687491774559021, 0.6989829540252686, 0.6991150379180908, 0.7049266695976257, 0.6933034062385559, 0.6960771083831787, 0.7029454708099365, 0.6983225345611572, 0.6995112895965576, 0.7046625018119812, 0.6992471218109131, 0.7084929347038269, 0.7040021419525146, 0.7038700580596924, 0.7082287669181824], "val_loss": [1.9618001665387834, 1.9527972766331263, 1.9437846456255232, 1.9343761035374232, 1.9243405887058802, 1.9135590280805315, 1.9018188204084123, 1.8889404024396623, 1.874654701777867, 1.858517783028739, 1.840268543788365, 1.8198847089494978, 1.7964846066066198, 1.7709774289812361, 1.7424568448747908, 1.7106494222368513, 1.6757329532078333, 1.6374000140598841, 1.5961583682468958, 1.55267333984375, 1.5067901611328125, 1.4590236459459578, 1.4110446998051234, 1.362827948161534, 1.3147883415222168, 1.2675064291272844, 1.2223013128553117, 1.179840326309204, 1.1392199311937605, 1.1033425331115723, 1.069063697542463, 1.0377486092703683, 1.0079119546072823, 0.980238812310355, 0.9557117394038609, 0.9332870415278843, 0.9116997037615094, 0.8926267964499337, 0.8747684444699969, 0.8586361237934658, 0.8434826476233346, 0.829884546143668, 0.8164810793740409, 0.8038713421140399, 0.7913494280406407, 0.7808452844619751, 0.7708790472575596, 0.761239869253976, 0.752544743674142, 0.7438347339630127, 0.735887919153486, 0.7290486437933785, 0.7224742514746529, 0.7160151175090245, 0.7097327028002057, 0.7035221712929862, 0.6978292294910976, 0.6925447838647025, 0.6872393233435494, 0.6823304891586304, 0.6779365709849766, 0.6732852629252842, 0.6698022059031895, 0.6655980518886021, 0.6613560914993286, 0.6578471320016044, 0.6539246014186314, 0.6505374397550311, 0.6467213460377285, 0.6439817803246635, 0.640316264969962, 0.6374433210917881, 0.6342423813683646, 0.6314563070024762, 0.6290719849722726, 0.6267405067171369, 0.6240386111395699, 0.6209482635770526, 0.6180989061083112, 0.6161194869450161, 0.6129876375198364, 0.6102901526859829, 0.6085925613130841, 0.6063504559653146, 0.6048797028405326, 0.6025893858500889, 0.6011952332087925, 0.5989916324615479, 0.596279331615993, 0.5948826585497174, 0.5929888316563198, 0.590888432094029, 0.5888078893933978, 0.5868035725184849, 0.5849894455501011, 0.5840801341193063, 0.5821910415376935, 0.5813268593379429, 0.5792416163853237, 0.5775366170065743], "val_accuracy": [0.10266666859388351, 0.19366666674613953, 0.27300000190734863, 0.3283333480358124, 0.3623333275318146, 0.3843333423137665, 0.40400001406669617, 0.42366665601730347, 0.4386666715145111, 0.4516666531562805, 0.46566668152809143, 0.48266667127609253, 0.4936666786670685, 0.5076666474342346, 0.5239999890327454, 0.531000018119812, 0.5363333225250244, 0.5490000247955322, 0.5573333501815796, 0.5636666417121887, 0.5776666402816772, 0.5820000171661377, 0.5896666646003723, 0.5953333377838135, 0.5989999771118164, 0.6036666631698608, 0.6116666793823242, 0.6190000176429749, 0.6353333592414856, 0.6426666378974915, 0.6489999890327454, 0.6583333611488342, 0.6633333563804626, 0.6693333387374878, 0.6756666898727417, 0.6779999732971191, 0.6830000281333923, 0.6890000104904175, 0.6890000104904175, 0.6936666369438171, 0.6959999799728394, 0.6970000267028809, 0.6986666917800903, 0.699999988079071, 0.7023333311080933, 0.7023333311080933, 0.706333339214325, 0.7070000171661377, 0.7073333263397217, 0.7120000123977661, 0.7113333344459534, 0.7120000123977661, 0.7146666646003723, 0.7166666388511658, 0.7196666598320007, 0.7196666598320007, 0.7213333249092102, 0.7236666679382324, 0.7250000238418579, 0.7246666550636292, 0.7253333330154419, 0.7260000109672546, 0.7263333201408386, 0.7283333539962769, 0.7289999723434448, 0.731333315372467, 0.7316666841506958, 0.7326666712760925, 0.7319999933242798, 0.7329999804496765, 0.734333336353302, 0.734333336353302, 0.7353333234786987, 0.7366666793823242, 0.7363333106040955, 0.737333357334137, 0.7363333106040955, 0.7369999885559082, 0.7393333315849304, 0.7413333058357239, 0.7406666874885559, 0.7429999709129333, 0.7446666955947876, 0.7436666488647461, 0.7456666827201843, 0.7463333606719971, 0.7459999918937683, 0.7476666569709778, 0.7486666440963745, 0.7486666440963745, 0.75, 0.7490000128746033, 0.749666690826416, 0.7509999871253967, 0.75, 0.753333330154419, 0.7519999742507935, 0.7519999742507935, 0.7540000081062317, 0.7536666393280029]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 0, 2, 9, 1, 3, 0, 9, 5, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 18, 16, 70, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5257142782211304, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.017745120886562, 1.3971747976362807, 0.8975967909870619, 0.8329392179222848, 0.715917840633473, 0.6692257920087462, 0.6563338473519912, 0.6256611610384759, 0.6225929468252152, 0.608470333093319, 0.6373082054777703, 0.6581888996126661, 0.7692806932668267, NaN], "accuracy": [0.3555673062801361, 0.5342755317687988, 0.6699247360229492, 0.6951525807380676, 0.72672039270401, 0.7573636174201965, 0.7519482374191284, 0.7662131786346436, 0.7623828053474426, 0.7758552432060242, 0.7692511081695557, 0.7619865536689758, 0.7494386434555054, 0.22216351330280304], "val_loss": [1.5078303473336356, 0.6683145761489868, 0.6111022574560983, 0.564167891229902, 0.4958157369068691, 0.4722310985837664, 0.46286632333483013, 0.46189740725925993, 0.4669696262904576, 0.4611446261405945, 0.4694528750010899, 0.47226594175611225, 2.836640017373221, NaN], "val_accuracy": [0.5196666717529297, 0.699999988079071, 0.7306666374206543, 0.7596666812896729, 0.7770000100135803, 0.7923333048820496, 0.7900000214576721, 0.8056666851043701, 0.8133333325386047, 0.7943333387374878, 0.8043333292007446, 0.8063333630561829, 0.6840000152587891, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 4, 0, 3, 9, 2, 4, 2, 9, 5, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 61, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [23], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4802857041358948, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3912788368313778, 2.3047086991937547, 2.158686837877942, 2.4905710188845886, 2.304547349806113, 2.303318826702875, 2.303211206584291, 2.30291080490599], "accuracy": [0.2118610441684723, 0.10460969805717468, 0.2008981704711914, 0.14489498734474182, 0.09708096832036972, 0.09509972482919693, 0.0944393053650856, 0.09642054885625839], "val_loss": [1.9750616209847587, 1.9640196391514368, 1.5743453843253, 1.9758610044206892, 1.9739503179277693, 1.9737042018345423, 1.9737187794276647, 1.9736134665352958], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.5176666378974915, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09833333641290665, 0.10433333367109299]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 1, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 0, 2, 2, 1, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 61, 29, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.40228572487831116, "mapping_values": [1, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))))), grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.390409587317958, 2.3055030982791314, 2.26202448745524, 2.243459303680428, 2.282567346888038, 2.2680234994083395, 2.303402759804938, 2.250188489206526, 2.1827952566085127, 2.3042604665021855, 2.303565103112431, 2.302736611492866, 2.273012189533827], "accuracy": [0.2118610441684723, 0.10051512718200684, 0.15229164063930511, 0.16351869702339172, 0.14119666814804077, 0.1258750557899475, 0.09694888442754745, 0.13934750854969025, 0.17117950320243835, 0.09642054885625839, 0.09959053993225098, 0.10513802617788315, 0.14000792801380157], "val_loss": [1.9751125063214983, 1.971158504486084, 1.9523417609078544, 1.9736290659223283, 1.5696557249341692, 1.973747662135533, 1.971169880458287, 1.5819593497685023, 1.974952561514718, 1.974116597856794, 1.9735803604125977, 1.9722448757716589, 1.9740020206996374], "val_accuracy": [0.09799999743700027, 0.15800000727176666, 0.1860000044107437, 0.09966666996479034, 0.3529999852180481, 0.10066666454076767, 0.10066666454076767, 0.39500001072883606, 0.10266666859388351, 0.09833333641290665, 0.09966666996479034, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 1, 2, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 17, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [23], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 4, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.square(tf.math.square(grad))))))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 4, 2, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [10, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 5, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 3, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))), tf.math.pow(grad, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [2, 8, 4, 0, 2, 9, 1, 4, 9, 2, 5, 2, 4, 2, 4, 2, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 2, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 78, 18, 70, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [93], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, grad))))), tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 5, 2, 2, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 3, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [85], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 15, 12, 9, 3, 1, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(sigma)))))), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024030933133237, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 2, 2, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [58], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.8161403704879935, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21938978135585785, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1175.459751674107, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 2, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 26, 37, 70, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 3, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, grad))), grad))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 2, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 8, 8, 3, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.divide_no_nan(grad, grad)), grad), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 0, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [18, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 8, 3, 0, 2, 6, 1, 2, 0, 5, 5, 0, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1], [62, 94, 37, 70, 88, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [9.66344487063133e+18, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05177651718258858, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 2, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 94, 37, 70, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 4, 0, 3, 9, 2, 4, 2, 9, 5, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [25, 94, 37, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [23], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 15, 15, 8, 7, 1, 14, 10, 8, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad))), grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(sigma)))))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 1, 6, 1, 4, 0, 5, 5, 2, 2, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 2, 2, 0, 1, 1, 2, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [62, 92, 0, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [1, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300664795167757, 2.302916335769853, 2.3038689412807414, 2.301919559241443, 2.3014216293606538, 2.301531710093756], "accuracy": [0.09153348207473755, 0.09179764986038208, 0.0886276587843895, 0.09694888442754745, 0.09721305221319199, 0.09311848133802414], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]