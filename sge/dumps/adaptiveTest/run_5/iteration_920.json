[{"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 8, 2, 1, 2, 5, 4, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8025714159011841, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 16, 10, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.178610367341017, 1.4719400536571559, 1.1688707062219033, 1.008405804350675, 0.8761432046635811, 0.8332519472046865, 0.8079459297737315, 0.7424379081427539, 0.7732913548117222, 0.7008166735859721, 0.684934802279575, 0.6967052511015683, 0.6718254481103867, 0.6592895583296496, 0.6535461532551583, 0.6555728278439106, 0.6294629449904823, 0.6145176570791184, 0.6111147041097844, 0.6061556878547785, 0.5971922180388408, 0.5916108220811722, 0.5960007444222873, 0.5728889552751127, 0.580107184582855, 0.570881378153107, 0.566092061431196, 0.5534176440633221, 0.549876682116859, 0.540272655008082, 0.541382403799477, 0.5366466234404539, 0.5224545003164556, 0.5347363675086254, 0.5188290057495962, 0.5226369602624152, 0.5205025357766127, 0.5161021368268333, 0.5032162261739808, 0.5118181747987742, 0.4939876420308003, 0.5054645422088818, 0.4960754745120874, 0.49380595530375293, 0.4933829617506603, 0.48340937701891507, 0.4933986619927738], "accuracy": [0.27737417817115784, 0.5200105905532837, 0.5915995240211487, 0.629507303237915, 0.6816800832748413, 0.6930392384529114, 0.6989829540252686, 0.7189275026321411, 0.7054550051689148, 0.7412495017051697, 0.7461365461349487, 0.7359662055969238, 0.7397965788841248, 0.752212405204773, 0.7593448758125305, 0.7495707273483276, 0.7647602558135986, 0.7675340175628662, 0.7680623531341553, 0.7714964747428894, 0.7746664881706238, 0.7745344042778015, 0.7736098170280457, 0.7881389260292053, 0.7816668748855591, 0.7878747582435608, 0.7843085527420044, 0.7915731072425842, 0.7877426743507385, 0.7926297783851624, 0.7987055778503418, 0.7977809906005859, 0.8012151718139648, 0.8059701323509216, 0.8030643463134766, 0.8026680946350098, 0.8035926818847656, 0.8070268034934998, 0.8127063512802124, 0.8058380484580994, 0.809140145778656, 0.8120459914207458, 0.8166688680648804, 0.8144234418869019, 0.816008448600769, 0.8215559124946594, 0.81548011302948], "val_loss": [1.524846179144723, 0.9798197065080915, 0.79782692023686, 0.6663505690438407, 0.6344215529305595, 0.5915314299719674, 0.5940865278244019, 0.585284846169608, 0.5413219077246529, 0.5220403500965664, 0.5243297645023891, 0.5394905635288784, 0.5039435625076294, 0.5015732901436942, 0.4839120762688773, 0.49311072485787527, 0.4754741702760969, 0.5117482457842145, 0.46195878301348003, 0.46348767621176584, 0.48633263792310444, 0.4759487083980015, 0.4571902411324637, 0.45648367064339773, 0.4540048326764788, 0.4450221572603498, 0.4561562878744943, 0.45182653835841585, 0.42974007981164114, 0.43637335300445557, 0.4280091183526175, 0.4231622474534171, 0.4233948418072292, 0.41983674253736225, 0.4519578388759068, 0.4132945878165109, 0.4345736163003104, 0.41315882546561106, 0.4063960143498012, 0.4046127200126648, 0.4120842473847525, 0.39590192692620413, 0.42219322068350656, 0.4000193987573896, 0.39297785077776226, 0.3899267741612026, 0.4038001469203404], "val_accuracy": [0.5323333144187927, 0.6006666421890259, 0.656000018119812, 0.7153333425521851, 0.7016666531562805, 0.7360000014305115, 0.7143333554267883, 0.7336666584014893, 0.749666690826416, 0.7593333125114441, 0.7566666603088379, 0.7393333315849304, 0.7693333625793457, 0.7726666927337646, 0.7766666412353516, 0.7766666412353516, 0.7853333353996277, 0.7620000243186951, 0.7979999780654907, 0.79666668176651, 0.7743333578109741, 0.7863333225250244, 0.7923333048820496, 0.8019999861717224, 0.784333348274231, 0.8050000071525574, 0.7950000166893005, 0.8023333549499512, 0.8069999814033508, 0.8050000071525574, 0.8063333630561829, 0.8136666417121887, 0.8113333582878113, 0.8143333196640015, 0.7919999957084656, 0.8173333406448364, 0.8016666769981384, 0.8220000267028809, 0.8146666884422302, 0.8216666579246521, 0.8240000009536743, 0.8343333601951599, 0.8046666383743286, 0.8330000042915344, 0.8289999961853027, 0.8316666483879089, 0.8270000219345093]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 9, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.5282857418060303, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1018939306077513, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2958658039569855, 0.29045039415359497, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.3833380426679338, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.4906666576862335, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.11228571087121964, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [123185049262975.95, 9.247652516963525e+18, 1.1548663494739911e+27, Infinity, NaN, NaN], "accuracy": [0.10447761416435242, 0.10487385839223862, 0.1006472036242485, 0.09998679161071777, 0.10355303436517715, 0.09998679161071777], "val_loss": [105633793104749.72, 9.539794544566718e+20, 9.668519706823677e+28, Infinity, NaN, NaN], "val_accuracy": [0.12999999523162842, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [8, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [13, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [62, 16, 97, 38, 8, 79], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 5, 0, 2, 3, 3, 2, 1, 1, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024962752675653, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 5, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [14, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 4, 2, 2, 5, 2, 4, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 14, 14, 10, 4, 3, 3, 2, 2, 0, 0, 3, 2, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 9, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 3, 0, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [5, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [5, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(beta))", "other_info": {"loss": [106684.00097181617, 170347.05414368975, 170347.04314572053, 170347.04004589882, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [143636.42857142858, 143636.42857142858, 143636.41964285713, 143636.41964285713, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 1, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [49, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 8, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 3, 2, 3, 2, 5, 4, 9, 9, 2, 6, 6, 6, 8, 0, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 2, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 26, 97, 54, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 44, 44, 27, 17, 5, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, grad))))))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))), tf.math.add(beta, beta))))), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5213.305746617491, 2.314007623147467, 2.305659639710968, 2.303538302514909, 2.3031297059752576, 2.303007586095878, 2.3029639245402214, 2.303016591553895, 2.3029793423589795, 2.3030886449172687, 2.3029410744292815, 2.302970573619026, 2345627661942106.5, 2.317570067289688], "accuracy": [0.09694888442754745, 0.09694888442754745, 0.09628847241401672, 0.09589222073554993, 0.09417514503002167, 0.09470347315073013, 0.09642054885625839, 0.09734513610601425, 0.0940430611371994, 0.09219389408826828, 0.09166556596755981, 0.09311848133802414, 0.09642054885625839, 0.09681680053472519], "val_loss": [1.9913287162780762, 1.9788759095328194, 1.9750484739031111, 1.9740702765328544, 1.9737883295331682, 1.9738084929330009, 1.973759651184082, 1.9736981391906738, 1.9736206190926688, 1.9736755916050501, 1.9736542020525252, 1.9738036564418249, 1.9958816255841936, 1.9809598241533553], "val_accuracy": [0.0989999994635582, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.09966666996479034, 0.10100000351667404, 0.09833333641290665, 0.0989999994635582, 0.10433333367109299, 0.10066666454076767, 0.10433333367109299, 0.0989999994635582, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 8, 2, 1, 2, 5, 4, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 1, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 73, 69, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024962752675653, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 6, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [49, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 9, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024962752675653, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 0, 8, 3, 8, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 99, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 8, 2, 1, 2, 5, 1, 9, 9, 2, 3, 6, 6, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 19, 19, 12, 7, 3, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(beta, grad))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 1, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.960005412657877, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.035266146063804626, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [176.48854282924108, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [7, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 8, 1, 1, 2, 5, 4, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 3, 2, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 9, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.multiply(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 0, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [6, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 1, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 9, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 9, 6, 3, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.subtract(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 1, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 9, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [6, 8, 5, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [49, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 9, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.04514285549521446, "mapping_values": [1, 5, 5, 4, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.3391020934284845e+17, 1.558251896411026e+22, 2.2001943070203077e+34, NaN, NaN, NaN, NaN], "accuracy": [0.10553427785634995, 0.13868708908557892, 0.12191256135702133, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.7185446849414618e+18, 8.211867099089927e+21, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.15433333814144135, 0.2043333351612091, 0.18033333122730255, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [49, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 4, 2, 2, 5, 2, 9, 9, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [20, 86, 97, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 9, 2, 3, 8, 8, 8, 4, 0, 7, 6], [4, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 4, 1, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(grad)))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.3019468744338667, 2.304805661142148, 2.302448317296375, 2.30423807688456, 2.3013831095342168, 2.3014278579397507], "accuracy": [0.09192973375320435, 0.08413683623075485, 0.0940430611371994, 0.08651433140039444, 0.08638224750757217, 0.09153348207473755], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]