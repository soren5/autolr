[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7625714540481567, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2980439810941187, 2.2851078313150586, 2.2745650526302965, 2.261885104792198, 2.2486192577031026, 2.234723403296057, 2.2180277348950304, 2.2025693759091887, 2.177881894661467, 2.157315933409935, 2.125911207183981, 2.0950253909179923, 2.0574018938855376, 2.0153985687959244, 1.9697154759573443, 1.9187169144922291, 1.8678600950767619, 1.8104769491547874, 1.751058937756613, 1.6938448961872892, 1.640724449283049, 1.5887901886594986, 1.537549362253787, 1.4842596153273888, 1.4416486387318308, 1.4079196369013436, 1.3560923223938877, 1.326687321072761, 1.303196205171407, 1.2725180504958487, 1.2438185807185134, 1.215621186978057, 1.2024810645621544, 1.1805999583383011, 1.153741970841344, 1.135391107450749, 1.1222083879074543, 1.1100739493046958, 1.0781855871491286, 1.0722666179042655, 1.0616120751413294, 1.0623107656527504, 1.034553175636365, 1.0318047592369415, 1.013058591622718, 1.00467509520194, 0.98331800602714, 0.9851031820567182, 0.9768401498036252, 0.9666490724231306, 0.9618066230060843, 0.9526108972006911, 0.9517652713910795, 0.9422722384284405, 0.9299088061965924, 0.9211056181515653, 0.9246352527356025, 0.9095070267775434, 0.910450162235394, 0.8964262947335834, 0.884403890252444, 0.8840934112323604, 0.8752963910989632, 0.8887395175881688, 0.8785003598938371, 0.8708630581699452, 0.8661870510744113, 0.864821522219495, 0.8564177114792535, 0.861868023305537, 0.8366773378312108, 0.8446558726824286, 0.841223075137619, 0.8392827139397055, 0.8361761044785174, 0.8401773575589547, 0.8218031358237059, 0.818505153357156, 0.8189490571816868, 0.8169330097523347, 0.81547956734506, 0.8105185647540483, 0.8044066356708818, 0.8019740605917999, 0.8037298842506827, 0.8000579314177708, 0.7975989946001446, 0.7983655787619617, 0.7831488491726464, 0.7950101087846304, 0.7873369850077571, 0.7786291013965675, 0.7852924111307951, 0.774433124287411, 0.7662036920803067, 0.7733813042118565, 0.7618659218430535, 0.7749861767105911, 0.7671534503534438, 0.7642406254569852], "accuracy": [0.1006472036242485, 0.13300752639770508, 0.16800950467586517, 0.1974640041589737, 0.2230881005525589, 0.2569013237953186, 0.28978997468948364, 0.29745081067085266, 0.33218860626220703, 0.3407739996910095, 0.3715493381023407, 0.37339848279953003, 0.390569269657135, 0.41487252712249756, 0.4235900044441223, 0.43125081062316895, 0.4435345530509949, 0.4566107392311096, 0.4691586196422577, 0.47404569387435913, 0.48606523871421814, 0.49570730328559875, 0.5042926669120789, 0.5235767960548401, 0.5271430611610413, 0.5400871634483337, 0.5502575635910034, 0.5546162724494934, 0.5569937825202942, 0.55791836977005, 0.5748249888420105, 0.5838066339492798, 0.5876370072364807, 0.5826178789138794, 0.5955620408058167, 0.6017699241638184, 0.6021661758422852, 0.6071853041648865, 0.6145819425582886, 0.6230352520942688, 0.6259410977363586, 0.6236956715583801, 0.6342623233795166, 0.6333377361297607, 0.6479989290237427, 0.6416589617729187, 0.651168942451477, 0.6456214785575867, 0.6576409935951233, 0.6571126580238342, 0.6633205413818359, 0.6586976647377014, 0.6564522385597229, 0.6637167930603027, 0.6667547225952148, 0.6750759482383728, 0.6704530715942383, 0.6763967871665955, 0.6734909415245056, 0.687887966632843, 0.684982180595398, 0.6822084188461304, 0.6872276067733765, 0.6779817938804626, 0.6847180128097534, 0.6865671873092651, 0.6902654767036438, 0.6936996579170227, 0.69673752784729, 0.6901333928108215, 0.6942279934883118, 0.6992471218109131, 0.7005679607391357, 0.6991150379180908, 0.6952846646308899, 0.6913221478462219, 0.7040021419525146, 0.7061154246330261, 0.7045304179191589, 0.7071720957756042, 0.7069079279899597, 0.7059833407402039, 0.707040011882782, 0.7117950320243835, 0.7092854380607605, 0.709021270275116, 0.7147008180618286, 0.7127195596694946, 0.7172104120254517, 0.7125874757766724, 0.7182670831680298, 0.7164179086685181, 0.7147008180618286, 0.7194558382034302, 0.7213049530982971, 0.7197200059890747, 0.7209087014198303, 0.7169462442398071, 0.7207766771316528, 0.7218332886695862], "val_loss": [1.9598890032087053, 1.9489032881600517, 1.9376047679356165, 1.9255396297999792, 1.912501539502825, 1.8979014669145857, 1.8815815789358956, 1.8631243705749512, 1.8411976269313268, 1.8164997782026018, 1.7876979282924108, 1.7546545437404089, 1.7172013010297502, 1.674816097532, 1.6278894288199288, 1.576582363673619, 1.5218772206987654, 1.4642835344587053, 1.4049384593963623, 1.3463276794978551, 1.2894787788391113, 1.233858891895839, 1.1816103117806571, 1.1330537114824568, 1.0885042122432165, 1.0485500608171736, 1.0113814898899622, 0.9774763924734933, 0.948296206338065, 0.9217172690800258, 0.8976221084594727, 0.8752767528806414, 0.8558517864772252, 0.8378277676446098, 0.8207899161747524, 0.8055188315255302, 0.7912332330431256, 0.7791316168648856, 0.7660455874034336, 0.7551970141274589, 0.7443529367446899, 0.7357972008841378, 0.7270326954977853, 0.7186906848634992, 0.7106860194887433, 0.7036645242146083, 0.6963462659290859, 0.6904016222272601, 0.6846825395311628, 0.6788093873432705, 0.6725194794791085, 0.6675253765923637, 0.6629319531576974, 0.6579820258276803, 0.6532049008778164, 0.6487776381628854, 0.6457993303026471, 0.6406996079853603, 0.6378401688167027, 0.6338342087609428, 0.6294526713235038, 0.6263338668005807, 0.6227118287767682, 0.6198916775839669, 0.6170924391065326, 0.6147715534482684, 0.6114917823246547, 0.6086508546556745, 0.6054092815944127, 0.6029803242002215, 0.6000985588346209, 0.5975016014916557, 0.5958668504442487, 0.5934479236602783, 0.5909595659800938, 0.5899467127663749, 0.5878081662314278, 0.5849701336451939, 0.5826192242758614, 0.5800446442195347, 0.5787309067589896, 0.5771220070975167, 0.5751021930149623, 0.5736960683550153, 0.5712410892759051, 0.5699928658349174, 0.5684218747275216, 0.5672827788761684, 0.5664667061397007, 0.5642405237470355, 0.5627553122384208, 0.560293163572039, 0.5592106240136283, 0.5573287691388812, 0.5557058027812413, 0.5535858018057687, 0.5515540157045636, 0.5505721909659249, 0.5495680230004447, 0.5484097685132708], "val_accuracy": [0.11800000071525574, 0.23266667127609253, 0.31566667556762695, 0.3623333275318146, 0.3856666684150696, 0.40566667914390564, 0.42933332920074463, 0.4463333189487457, 0.45766666531562805, 0.4740000069141388, 0.49266666173934937, 0.5090000033378601, 0.5256666541099548, 0.5426666736602783, 0.5546666383743286, 0.5646666884422302, 0.5740000009536743, 0.5793333053588867, 0.5870000123977661, 0.5926666855812073, 0.6110000014305115, 0.6113333106040955, 0.6203333139419556, 0.6423333287239075, 0.6520000100135803, 0.6606666445732117, 0.6676666736602783, 0.6733333468437195, 0.6779999732971191, 0.6836666464805603, 0.6890000104904175, 0.6916666626930237, 0.6940000057220459, 0.6953333616256714, 0.6980000138282776, 0.7003333568572998, 0.703000009059906, 0.7013333439826965, 0.7046666741371155, 0.7099999785423279, 0.7113333344459534, 0.7120000123977661, 0.7139999866485596, 0.7153333425521851, 0.7183333039283752, 0.718999981880188, 0.722000002861023, 0.7243333458900452, 0.7253333330154419, 0.7293333411216736, 0.7276666760444641, 0.7289999723434448, 0.731333315372467, 0.7279999852180481, 0.7293333411216736, 0.7336666584014893, 0.734000027179718, 0.7356666922569275, 0.7353333234786987, 0.7363333106040955, 0.7383333444595337, 0.7396666407585144, 0.7416666746139526, 0.7400000095367432, 0.7416666746139526, 0.7369999885559082, 0.7426666617393494, 0.7443333268165588, 0.7406666874885559, 0.7456666827201843, 0.7396666407585144, 0.7490000128746033, 0.7483333349227905, 0.7486666440963745, 0.7509999871253967, 0.7506666779518127, 0.7509999871253967, 0.7506666779518127, 0.7516666650772095, 0.7526666522026062, 0.7523333430290222, 0.7509999871253967, 0.7556666731834412, 0.7559999823570251, 0.7543333172798157, 0.7509999871253967, 0.7590000033378601, 0.7576666474342346, 0.7573333382606506, 0.7573333382606506, 0.7593333125114441, 0.7596666812896729, 0.7576666474342346, 0.762333333492279, 0.7609999775886536, 0.762333333492279, 0.7673333287239075, 0.7630000114440918, 0.7689999938011169, 0.7683333158493042]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [28, 28, 79, 92, 41, 36], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6677142977714539, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.249422307689003, 1.7271630431147393, 1.282470295473632, 0.9601951139226109, 0.8577802578975591, 0.8030589268097647, 0.7794199626616767, 0.7471244050023295, 0.6908023852194147, 0.6495636467448063, 0.6214663725975655, 0.5994220269811215, 0.5844882639360434, 0.5697238936384577, 0.5387842904197195, 0.5291210208838532, 0.5246151026213851, 0.5179490568442289, 0.5002139358393913, 0.49484113231547333, 0.49267980630733804, 0.49012581466164146, 0.4784221081662219, 0.45952124411655754, 0.45966334646293877, 0.4488405799467361, 0.4382119721913492, 0.44522695074684787, 0.43200192136488036, 0.42314450459126957, 0.4135956125032034, 0.41262114803001565, 0.4163669956957014, 0.40434436234170107], "accuracy": [0.2141064554452896, 0.4465724527835846, 0.5727116465568542, 0.6621318459510803, 0.687491774559021, 0.6939638257026672, 0.7062475085258484, 0.7185312509536743, 0.7313432693481445, 0.7534011602401733, 0.7647602558135986, 0.7729493975639343, 0.7769119143486023, 0.7877426743507385, 0.7967243194580078, 0.7952714562416077, 0.7972526550292969, 0.8074230551719666, 0.8170651197433472, 0.81112140417099, 0.8120459914207458, 0.8150838613510132, 0.8215559124946594, 0.8214238286018372, 0.8267071843147278, 0.8356888294219971, 0.8358209133148193, 0.8293488025665283, 0.8362171649932861, 0.8469158411026001, 0.8437458872795105, 0.8429533839225769, 0.8367455005645752, 0.8426892161369324], "val_loss": [1.765343529837472, 0.8722115244184222, 0.6789069516318185, 0.6540462630135673, 0.6126111916133335, 0.5815775394439697, 0.5398715904780796, 0.5064390897750854, 0.4911747489656721, 0.47106099128723145, 0.4541256087166922, 0.4411898170198713, 0.43715061460222515, 0.432572535106114, 0.41182249784469604, 0.42006726775850567, 0.4180032525743757, 0.4159560033253261, 0.40792966740471975, 0.4056500111307417, 0.41404344354357037, 0.39155663762773785, 0.3862977453640529, 0.3875922305243356, 0.3778754643031529, 0.3747886504445757, 0.37079423666000366, 0.37947274105889456, 0.36796581745147705, 0.3851835983140128, 0.37674470458711895, 0.3866374407495771, 0.3889467545918056, 0.3954403485570635], "val_accuracy": [0.4779999852180481, 0.6673333048820496, 0.7020000219345093, 0.7260000109672546, 0.7229999899864197, 0.7453333139419556, 0.7580000162124634, 0.762666642665863, 0.7836666703224182, 0.7856666445732117, 0.8019999861717224, 0.809333324432373, 0.8109999895095825, 0.8119999766349792, 0.8183333277702332, 0.8226666450500488, 0.8206666707992554, 0.8309999704360962, 0.8309999704360962, 0.8376666903495789, 0.8320000171661377, 0.8383333086967468, 0.8460000157356262, 0.8429999947547913, 0.8513333201408386, 0.8519999980926514, 0.8519999980926514, 0.8496666550636292, 0.8566666841506958, 0.8516666889190674, 0.8453333377838135, 0.8523333072662354, 0.8476666808128357, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [1, 1, 1, 0], [7, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.24457143247127533, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9074106599991394, 2.5490623747022347, 2.627422928510955, 2.4130452637501745, 2.388258467197985, 2.4817682305788082, 2.387051030739565], "accuracy": [0.16761326789855957, 0.13142253458499908, 0.15229164063930511, 0.09747721254825592, 0.1010434553027153, 0.10447761416435242, 0.09919429570436478], "val_loss": [2.0162781306675504, 2.129855155944824, 2.047028132847377, 1.996945585523333, 2.083264078412737, 2.0204214368547713, 2.035203456878662], "val_accuracy": [0.09966666996479034, 0.24133333563804626, 0.09799999743700027, 0.09833333641290665, 0.10100000351667404, 0.10433333367109299, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 0, 6, 3, 3, 2, 4, 3, 8, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [1, 1, 0, 0], [3, 4, 9], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.20914286375045776, "mapping_values": [1, 32, 32, 19, 13, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(alpha)))))), tf.math.add(alpha, alpha))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.987923734995195, 2.315326570063188, 2.277043499793548, 2.3069368624621065, 2.303776140903296, 2.303046356055557, 2.303196741967484], "accuracy": [0.20472857356071472, 0.09840179979801178, 0.1814819723367691, 0.09972262382507324, 0.09509972482919693, 0.09681680053472519, 0.09232597798109055], "val_loss": [2.0132192884172713, 1.9743832860674178, 1.9820908137730189, 1.9748011997767858, 1.9738928249904089, 1.973825318472726, 1.9736552919660295], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [74, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [1, 4, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2950348084274.4614, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16840575635433197, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 2, 3, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 8, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0], [3, 1, 6, 9], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 4, 0, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302793865489796, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0], [1, 4, 1], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 9, 2, 1, 2, 0, 5, 3, 2, 4, 3, 2, 2, 0, 5, 1, 2, 9, 9, 6, 5, 6, 3, 5, 8, 4, 5, 7, 6, 7, 7, 6, 3, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [19, 28, 79, 92, 41, 36], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 9, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 2, 5, 0, 2, 1, 3], [53], [1, 0, 0, 0, 1], [0, 0, 1, 0], [8, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(grad, beta), tf.math.pow(beta, grad))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302793865489796, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [7, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 9, 2, 1, 2, 0, 5, 3, 2, 4, 3, 2, 2, 0, 5, 1, 2, 9, 9, 6, 5, 6, 3, 5, 8, 4, 5, 7, 6, 7, 7, 6, 3, 5], [1, 2, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 3, 3, 0, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.pow(grad, grad), grad)))))))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 5, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 3, 3, 3, 2], [50, 34], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 21, 14, 5, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, beta)), tf.math.pow(grad, tf.math.square(grad)))), tf.math.pow(tf.math.pow(grad, grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 9, 2, 1, 2, 0, 5, 3, 2, 4, 3, 2, 2, 0, 5, 1, 2, 9, 9, 6, 5, 6, 3, 5, 8, 4, 5, 7, 6, 7, 7, 6, 3, 5], [1, 2, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 9, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 4, 4, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(beta, beta)), grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [109674860.69377513, 16431259899.840973, 279707161340.4496, 1950928079777.7288, 8649010541432.882, 28918844471203.758], "accuracy": [0.09179764986038208, 0.10896842926740646, 0.09100515395402908, 0.1014397069811821, 0.10698718577623367, 0.09774138033390045], "val_loss": [910130523.4285715, 49032455314.28571, 526215750802.2857, 2868687704649.143, 10745220244626.285, 31694597315437.715], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [0, 0, 1, 5, 3, 4], [31, 14], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304835752741126, 2.3086808440140794, 2.3220664630744277, 2.336648898338204, 2.3584202769693525, 2.395168454813022, 2.4474284662436405, 2.497721136931053, 2.5667251650651903, 2.658164412102065, 2.754274578457259, 2.880202009283934, 2.9984128934958227, 3.1418322691465836, 3.3235593172442943, 3.4703936230441945, 3.6970748845942976, 3.9267927885779836, 4.1149093518088975, 4.4312166472971475, 4.675445582085376, 5.014914697675563], "accuracy": [0.08598599582910538, 0.09060890227556229, 0.08334434032440186, 0.09298639744520187, 0.09509972482919693, 0.09853387624025345, 0.09919429570436478, 0.09417514503002167, 0.09800554811954498, 0.09602430462837219, 0.10394927859306335, 0.09192973375320435, 0.09906221181154251, 0.09655263274908066, 0.10487385839223862, 0.10685510188341141, 0.10210011899471283, 0.10606260597705841, 0.10342095047235489, 0.09760929644107819, 0.10051512718200684, 0.10210011899471283], "val_loss": [1.9731138093130929, 1.975698607308524, 1.9793940271650041, 1.9870264189583915, 1.9997811998639787, 2.017462798527309, 2.040668146950858, 2.0701208795819963, 2.106570380074637, 2.1507744789123535, 2.2034554481506348, 2.265261854444231, 2.336822714124407, 2.4186646597726003, 2.5111821719578336, 2.6147373063223704, 2.729574816567557, 2.85583986554827, 2.9935412406921387, 3.142656053815569, 3.303183215005057, 3.4749477931431363], "val_accuracy": [0.026000000536441803, 0.05366666615009308, 0.09166666865348816, 0.09600000083446503, 0.0976666659116745, 0.09733333438634872, 0.09966666996479034, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 4, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [31, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 1, 9, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 2, 5, 0, 3, 1, 3], [53, 14], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1], [3, 4, 4, 4, 1], [3, 2, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 2, 11, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), beta)), tf.math.subtract(beta, grad))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))))))), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302794590161351, 2.3025833638651876, 2.3025904490002675, 2.3025715403694753, 2.3025868739182402, 2.302586621927028, 2.302682369549859, NaN, NaN], "accuracy": [0.10117553919553757, 0.10355303436517715, 0.1022322028875351, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.10170386731624603, 0.09959053993225098, 0.09998679161071777], "val_loss": [1.9736377852303642, 1.9736437797546387, 1.9736442565917969, 1.973644733428955, 1.9736419405255998, 1.9736419405255998, 1.975381851196289, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302793865489796, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [78, 5, 21, 65, 41, 36, 81], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 6, 4, 0, 6, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 3, 3, 0, 2, 2], [42, 11], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [4, 5, 6, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 17, 17, 9, 8, 1, 3, 2, 1, 1, 0, 10, 5, 5, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.negative(grad))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.subtract(sigma, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 9, 2, 1, 2, 0, 5, 3, 2, 4, 3, 2, 2, 0, 5, 1, 2, 9, 9, 6, 5, 6, 3, 5, 8, 4, 5, 7, 6, 7, 7, 6, 3, 5], [1, 2, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [31, 5, 21, 65, 41, 36, 81], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 5, 2, 0, 1, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 0], [0, 0, 1, 0, 1], [2, 4, 9], [2, 0, 1, 5, 3, 4], [31, 33], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 1, 5, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(tf.math.negative(beta), tf.math.subtract(grad, tf.math.pow(tf.math.multiply(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302901401495842, 2.3016706599126073, 2.3030648433993663, 2.302748326659439, 2.3023593472987276, 2.3030280757022807], "accuracy": [0.0882314071059227, 0.09338264167308807, 0.08598599582910538, 0.09351472556591034, 0.09100515395402908, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [19, 28, 79, 92, 41, 36], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 1, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [0, 1, 1, 0], [8, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 1, 6, 6, 3, 3, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302901401495842, 2.3016706599126073, 2.3030648433993663, 2.302748326659439, 2.3023593472987276, 2.3030280757022807], "accuracy": [0.0882314071059227, 0.09338264167308807, 0.08598599582910538, 0.09351472556591034, 0.09100515395402908, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53, 39], [1, 1, 0, 0, 1], [0, 1, 1, 0], [7, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 7, 7, 3, 4, 1, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.multiply(grad, grad), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.negative(beta)))), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302901401495842, 2.3016706599126073, 2.3030648433993663, 2.302748326659439, 2.3023593472987276, 2.3030280757022807], "accuracy": [0.0882314071059227, 0.09338264167308807, 0.08598599582910538, 0.09351472556591034, 0.09100515395402908, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [8, 5, 21, 65, 41, 36, 81], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 1, 1, 0, 1], [0, 1, 1, 0], [7, 4], [0, 1, 1, 5, 3, 4], [7], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 35, 35, 21, 14, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302901401495842, 2.3016706599126073, 2.3030648433993663, 2.302748326659439, 2.3023593472987276, 2.3030280757022807], "accuracy": [0.0882314071059227, 0.09338264167308807, 0.08598599582910538, 0.09351472556591034, 0.09100515395402908, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]