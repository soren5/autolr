[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 6, 8, 2, 9, 1, 4, 8, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 25, 62, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.808571457862854, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.1042183115340305, 1.6243928368884213, 1.2538843967218314, 1.033783582002889, 0.9448503064772299, 0.8681227310915287, 0.8237730713410857, 0.765539510438093, 0.7392776528873527, 0.6986857001114799, 0.6656238007554919, 0.6923915309566533, 0.6474888446371647, 0.6173995271838809, 0.6170961143570238, 0.5799267607720269, 0.5899512385018293, 0.5603267173599558, 0.5532467493984473, 0.541313757269437, 0.5448780197508977, 0.523995332021314, 0.5140307414659246, 0.5198368937930474, 0.5064233530191241, 0.4968393251187671, 0.49630157768198874, 0.4763360633794673, 0.48983472526238786], "accuracy": [0.2829216718673706, 0.44366663694381714, 0.5400871634483337, 0.6048077940940857, 0.6435081362724304, 0.6763967871665955, 0.684982180595398, 0.7040021419525146, 0.709021270275116, 0.7235503792762756, 0.7417778372764587, 0.7342491149902344, 0.7503632307052612, 0.7607977986335754, 0.7560427784919739, 0.7784969210624695, 0.7786290049552917, 0.780610203742981, 0.7837802171707153, 0.7915731072425842, 0.7913089394569397, 0.7996301651000977, 0.8047813773155212, 0.7968564033508301, 0.8076872229576111, 0.8074230551719666, 0.8035926818847656, 0.819970965385437, 0.8152159452438354], "val_loss": [1.4186887741088867, 1.0925543648856026, 0.8611193214144025, 0.7514315502984183, 0.7417400053569249, 0.6500771726880755, 0.6114128657749721, 0.6225133793694633, 0.5686380181993756, 0.528380172593253, 0.5442159175872803, 0.540216326713562, 0.488532338823591, 0.4725042240960257, 0.47827601432800293, 0.4927208593913487, 0.48164778096335276, 0.4992673397064209, 0.43038015706198557, 0.44487312861851286, 0.4545759984425136, 0.4303269641739981, 0.43046014649527414, 0.4236162560326712, 0.41282886266708374, 0.4257299729755947, 0.39954304695129395, 0.4091132623808725, 0.3975175278527396], "val_accuracy": [0.45366665720939636, 0.5763333439826965, 0.5516666769981384, 0.6553333401679993, 0.6706666946411133, 0.7049999833106995, 0.6976666450500488, 0.6863333582878113, 0.7286666631698608, 0.7419999837875366, 0.7419999837875366, 0.7383333444595337, 0.7636666893959045, 0.7883333563804626, 0.7646666765213013, 0.7633333206176758, 0.7683333158493042, 0.75, 0.8100000023841858, 0.7870000004768372, 0.7956666946411133, 0.7929999828338623, 0.8023333549499512, 0.8243333101272583, 0.8176666498184204, 0.8029999732971191, 0.8220000267028809, 0.8209999799728394, 0.8243333101272583]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 1, 0, 1, 4, 3, 2, 2, 2, 3, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 2, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 12, 62, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8002856969833374, "mapping_values": [1, 33, 33, 19, 14, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), grad)))), tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))))), alpha))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.1042553071316914, 1.6195118971599045, 1.2666135735641524, 1.0285457333222892, 0.8924308275156143, 0.8814693957649878, 0.8330445711591602, 0.7547397822153457, 0.7312330984404815, 0.7313642289109155, 0.6832472839847988, 0.677239747473183, 0.6578083633353068, 0.6202336039131879, 0.61957821694379, 0.5803064611515175, 0.5865260845303866, 0.5596803659225074, 0.5541935050807152, 0.5435240621721709, 0.5496967905201633, 0.524906026854129, 0.5193207718047168, 0.5233368882571134, 0.5098748764719678, 0.49782459392381967, 0.496738683384612, 0.4789033539228121, 0.49395459630170974, 0.47272483493752404, 0.4717917996327702, 0.45297913103134496, 0.44195201104154297, 0.4483338210797187, 0.4567301681194134, 0.42836591334091656, 0.435188608020918, 0.4433380341674705, 0.43305301149413256, 0.41985979085396213, 0.4095413508770756, 0.4073051459533254, 0.39660276492053587, 0.41964915587271934, 0.39082476098334956], "accuracy": [0.28278958797454834, 0.43983620405197144, 0.5456346869468689, 0.6041474342346191, 0.6687359809875488, 0.6680755615234375, 0.6802271604537964, 0.7057191729545593, 0.7169462442398071, 0.7197200059890747, 0.7417778372764587, 0.739928662776947, 0.7437590956687927, 0.7569673657417297, 0.7553823590278625, 0.7754589915275574, 0.7820631265640259, 0.7816668748855591, 0.785101056098938, 0.7932901978492737, 0.7884030938148499, 0.7954035401344299, 0.7993659973144531, 0.7944789528846741, 0.8075551390647888, 0.807158887386322, 0.8045172095298767, 0.8204993009567261, 0.8140271902084351, 0.8206313848495483, 0.8170651197433472, 0.8274996876716614, 0.8385946154594421, 0.8305375576019287, 0.826310932636261, 0.8405758738517761, 0.83119797706604, 0.8318583965301514, 0.8302733898162842, 0.8403117060661316, 0.8466516733169556, 0.8403117060661316, 0.8495575189590454, 0.8348963260650635, 0.8557654023170471], "val_loss": [1.4194587639399938, 1.1669936520712716, 0.9031104360307965, 0.7282937083925519, 0.7478817701339722, 0.7333591495241437, 0.6074706826891217, 0.6144848891666957, 0.5935859169278827, 0.5527829102107457, 0.5209052392414638, 0.549114601952689, 0.48851335048675537, 0.47824883460998535, 0.4784054756164551, 0.4879338911601475, 0.4849273477281843, 0.495652437210083, 0.43430780512945993, 0.45005835805620464, 0.4541289806365967, 0.4343902979578291, 0.43232961211885723, 0.42825417859213694, 0.41245642730167936, 0.42258122989109587, 0.39917090109416414, 0.4030353937830244, 0.3956736241068159, 0.41552913188934326, 0.41541545731680735, 0.37111577817371916, 0.400125299181257, 0.3994686262948172, 0.37617179325648714, 0.37528640031814575, 0.39079463481903076, 0.39240297249385286, 0.3779058541570391, 0.35085050548825947, 0.37928326640810284, 0.38734631878989084, 0.37000324044908794, 0.3611521976334708, 0.35857365812574116], "val_accuracy": [0.4533333480358124, 0.5763333439826965, 0.5726666450500488, 0.6783333420753479, 0.6613333225250244, 0.6786666512489319, 0.70333331823349, 0.6963333487510681, 0.6859999895095825, 0.7296666502952576, 0.7443333268165588, 0.734666645526886, 0.765333354473114, 0.7823333144187927, 0.7603333592414856, 0.7636666893959045, 0.762666642665863, 0.75, 0.809333324432373, 0.7876666784286499, 0.7953333258628845, 0.7923333048820496, 0.8003333210945129, 0.8203333616256714, 0.8166666626930237, 0.8033333420753479, 0.8246666789054871, 0.8226666450500488, 0.824999988079071, 0.8140000104904175, 0.8116666674613953, 0.8363333344459534, 0.824999988079071, 0.8266666531562805, 0.8463333249092102, 0.8289999961853027, 0.8289999961853027, 0.8263333439826965, 0.8379999995231628, 0.8536666631698608, 0.831333339214325, 0.82833331823349, 0.8396666646003723, 0.847000002861023, 0.843666672706604]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 2, 9, 1, 4, 8, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 61, 4, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.795714259147644, "mapping_values": [1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.087134047002368, 1.737195655717322, 1.2725073180225752, 1.0489523635957976, 0.9867853483645482, 0.9021979159430868, 0.8148525856615388, 0.7744088339893778, 0.7446711825467907, 0.7495408599890927, 0.682433707618663, 0.666000987332117, 0.6525661893225365, 0.6182989004564922, 0.6383334949756295, 0.6140135534057496, 0.583164639878251, 0.5649738871599342, 0.5763382059298706, 0.5638067315299009, 0.5410681231351592, 0.5386691694214927, 0.5463304063860042], "accuracy": [0.28041210770606995, 0.42742040753364563, 0.5263505578041077, 0.6135252714157104, 0.6370360851287842, 0.6536785364151001, 0.693831741809845, 0.7033417224884033, 0.7180029153823853, 0.724210798740387, 0.7383436560630798, 0.741909921169281, 0.7458723783493042, 0.7675340175628662, 0.7635715007781982, 0.7580240368843079, 0.7841764688491821, 0.7873464822769165, 0.7773081660270691, 0.7852331399917603, 0.800290584564209, 0.7921014428138733, 0.7951393723487854], "val_loss": [1.2560253143310547, 0.940061228615897, 0.8307220935821533, 0.725878255707877, 0.6883823020117623, 0.6573163100651332, 0.5991995845522199, 0.6403066771371024, 0.6080783775874546, 0.5668372256415231, 0.5601409333092826, 0.522103122302464, 0.500010507447379, 0.5218207495553153, 0.5103880507605416, 0.4846222570964268, 0.4838781867708479, 0.44680205413273405, 0.460205078125, 0.4393892288208008, 0.4495618854250227, 0.4501663957323347, 0.4467038256781442], "val_accuracy": [0.49566665291786194, 0.612666666507721, 0.6366666555404663, 0.6733333468437195, 0.6886666417121887, 0.699999988079071, 0.7210000157356262, 0.6913333535194397, 0.7350000143051147, 0.7329999804496765, 0.7256666421890259, 0.7553333044052124, 0.7680000066757202, 0.7683333158493042, 0.7543333172798157, 0.7666666507720947, 0.7733333110809326, 0.8056666851043701, 0.7896666526794434, 0.7993333339691162, 0.7933333516120911, 0.7993333339691162, 0.79666668176651]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 0, 2, 9, 1, 4, 8, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 61, 4, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [51], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5174285769462585, "mapping_values": [1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)))))), tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.080234223557753, 2.3096141311643996, 7.541379071025171, NaN, NaN, NaN, NaN], "accuracy": [0.2843745946884155, 0.2716946303844452, 0.2930920720100403, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8531478473118372, 1.3940771307264055, 88800.88616071429, NaN, NaN, NaN, NaN], "val_accuracy": [0.30799999833106995, 0.5083333253860474, 0.10433333367109299, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 2, 9, 3, 4, 0, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 61, 4, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [12], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.47514286637306213, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018709138210944, 2.3016801410111234, 2.2991619408327466, 2.2986682402286167, 2.2994846103528643, 2.2964534094430955, 2.2956389486199247, 2.295082533663416, 2.2926155778914867, 2.292636923990891, 2.290750248620161, 2.290952403453111, 2.2899004957380233, 2.286951629225258, 2.2884160516252923, 2.2857748564633367, 2.2839784374357985, 2.2844715204378714, 2.2830429511409727, 2.282914180261836, 2.2809293509757813, 2.27935304359564, 2.2789115943550953, 2.2791693134708426, 2.277122100110319, 2.2752090981450332, 2.2747501773982868, 2.2735530721072146, 2.2735937681526885, 2.2709351607821384, 2.270536152504974, 2.269991905398577, 2.268815387241624, 2.267242880734187, 2.2672323797042297, 2.264552542593627, 2.2630445968205697, 2.262454281582604, 2.260225855931, 2.2609086395364946, 2.2604212707390543, 2.258137232276978, 2.2567174891281785, 2.255995440020175, 2.255539131233831, 2.2531892569971093, 2.251103119181919, 2.249903257953461, 2.2490853871872174, 2.2478758558510883, 2.245372689552846, 2.247658623113545, 2.2447872097623534, 2.2441348486005857, 2.242696566746109, 2.2396206988351155, 2.241104412922817, 2.239045241096032, 2.2345021110184993, 2.235627508434275, 2.2352570599379744, 2.232556149345804, 2.233048757274216, 2.2307559551107508, 2.2298270887970184, 2.2266785110291742, 2.2257944951519093, 2.2251194039859854, 2.224185470923173, 2.2212248852759653, 2.2182607159496786, 2.215937393877752, 2.2167090463632007, 2.2154666194353974, 2.2148339388125198, 2.212777914356609, 2.211007163257269, 2.208785135323078, 2.206642227055705, 2.2058773917166814, 2.2019426208272384, 2.2016161668097514, 2.2010841305387205, 2.198934738740882, 2.1953673134107063, 2.192899671008385, 2.1914187258008826, 2.192833631234855, 2.187862296350691, 2.1858971432892558, 2.184157906742522, 2.18325113850247, 2.181856871470012, 2.180012266098343, 2.1756209068766927, 2.1740548862615485, 2.172873304473127, 2.1691267065572983, 2.1700267120674224, 2.16518433493016], "accuracy": [0.09311848133802414, 0.09800554811954498, 0.10328886657953262, 0.09959053993225098, 0.1010434553027153, 0.1072513535618782, 0.10355303436517715, 0.11068551242351532, 0.11332716792821884, 0.1154404953122139, 0.12098798155784607, 0.11834631860256195, 0.12138422578573227, 0.12151630967855453, 0.12362963706254959, 0.13155461847782135, 0.13512085378170013, 0.1340641975402832, 0.14132875204086304, 0.1418570876121521, 0.14991414546966553, 0.1492537260055542, 0.15334829688072205, 0.15651829540729523, 0.15902787446975708, 0.16391493380069733, 0.15889579057693481, 0.16734910011291504, 0.16655659675598145, 0.17038699984550476, 0.17434948682785034, 0.17738740146160126, 0.17553824186325073, 0.18755778670310974, 0.18531237542629242, 0.19099193811416626, 0.20116232335567474, 0.19614318013191223, 0.19970941543579102, 0.19852067530155182, 0.19944524765014648, 0.2090873122215271, 0.21476687490940094, 0.21199312806129456, 0.21133272349834442, 0.21014396846294403, 0.22599393129348755, 0.22361643612384796, 0.23022057116031647, 0.2296922504901886, 0.24276845157146454, 0.22797517478466034, 0.2417117953300476, 0.23273015022277832, 0.24818386137485504, 0.24858011305332184, 0.2405230551958084, 0.24818386137485504, 0.2608638107776642, 0.25716549158096313, 0.2566371560096741, 0.260071337223053, 0.2542596757411957, 0.2666754722595215, 0.26535463333129883, 0.27644962072372437, 0.26297715306282043, 0.2689208686351776, 0.27777042984962463, 0.27961960434913635, 0.2852991819381714, 0.2915070652961731, 0.28860124945640564, 0.28939375281333923, 0.28701624274253845, 0.2921674847602844, 0.29401662945747375, 0.2945449650287628, 0.2933562397956848, 0.30141329765319824, 0.3053757846355438, 0.3055078685283661, 0.30762118101119995, 0.3063003420829773, 0.31620657444000244, 0.3152819871902466, 0.30920618772506714, 0.316470742225647, 0.32281073927879333, 0.3205653131008148, 0.3214899003505707, 0.325320303440094, 0.3156782388687134, 0.322150319814682, 0.32981112599372864, 0.3345661163330078, 0.334169864654541, 0.33681151270866394, 0.3287544548511505, 0.340509831905365], "val_loss": [1.9699901853288924, 1.9689832414899553, 1.9679842676435197, 1.9669904708862305, 1.9660093443734306, 1.9650072370256697, 1.964007990700858, 1.9630141258239746, 1.9620246887207031, 1.9610327311924525, 1.9600372314453125, 1.9590435709272112, 1.958057471684047, 1.957073416028704, 1.9560911996023995, 1.955116135733468, 1.9541239057268416, 1.9531419617789132, 1.9521501404898507, 1.9511635644095284, 1.9501634325299944, 1.949157987322126, 1.9481653485979353, 1.947178772517613, 1.9461791855948312, 1.9451631137302943, 1.9441661834716797, 1.9431541306631905, 1.9421323367527552, 1.9411108834402901, 1.9400873865400041, 1.9390625953674316, 1.9380198887416296, 1.936981269291469, 1.9359404018947057, 1.9348877498081751, 1.9338151386805944, 1.9327328545706612, 1.9316516603742326, 1.9305730547223772, 1.9294819831848145, 1.928373064313616, 1.9272547449384416, 1.926130975995745, 1.9250170162745885, 1.9238761493137904, 1.9227418218340193, 1.9215784754071916, 1.92040068762643, 1.9192228998456682, 1.9180256298610143, 1.916839531489781, 1.915633065359933, 1.914416926247733, 1.913184370313372, 1.9119300842285156, 1.9106878553118025, 1.9094299588884627, 1.9081200872148787, 1.906817844935826, 1.9055139677865165, 1.9041801180158342, 1.902848379952567, 1.9015083312988281, 1.9001664434160506, 1.8987850461687361, 1.8973915917532784, 1.8959983416966029, 1.8945892197745187, 1.893145969935826, 1.8916805812290736, 1.890206950051444, 1.8887192862374442, 1.8872275352478027, 1.8857182094029017, 1.8841829981122697, 1.8826193809509277, 1.8810443878173828, 1.8794398988996233, 1.8778258732386999, 1.8761722019740514, 1.8744993891034807, 1.8728105000087194, 1.8710926600864954, 1.86934723172869, 1.8675690378461565, 1.8657734734671456, 1.8639815194266183, 1.8621644292558943, 1.8603108269827706, 1.858429227556501, 1.8565433365958077, 1.8546216147286552, 1.8526958056858607, 1.85071747643607, 1.8487137385777064, 1.846693515777588, 1.8446568761553084, 1.8426000050136022, 1.840491839817592], "val_accuracy": [0.04533333331346512, 0.05133333429694176, 0.055666666477918625, 0.06199999898672104, 0.070333331823349, 0.07666666805744171, 0.08500000089406967, 0.09399999678134918, 0.10133333504199982, 0.1080000028014183, 0.11599999666213989, 0.12399999797344208, 0.13566666841506958, 0.14499999582767487, 0.1586666703224182, 0.16899999976158142, 0.18033333122730255, 0.1926666647195816, 0.20200000703334808, 0.21066667139530182, 0.21833333373069763, 0.22599999606609344, 0.23499999940395355, 0.24400000274181366, 0.2513333261013031, 0.25966668128967285, 0.2696666717529297, 0.2776666581630707, 0.2853333353996277, 0.29100000858306885, 0.2980000078678131, 0.3059999942779541, 0.31433331966400146, 0.31966665387153625, 0.32499998807907104, 0.3296666741371155, 0.3333333432674408, 0.33666667342185974, 0.3409999907016754, 0.3466666638851166, 0.34933334589004517, 0.3526666760444641, 0.3569999933242798, 0.36133334040641785, 0.36633333563804626, 0.3686666786670685, 0.3696666657924652, 0.3720000088214874, 0.37433332204818726, 0.3766666650772095, 0.3786666691303253, 0.38066667318344116, 0.382666677236557, 0.3843333423137665, 0.3863333463668823, 0.3889999985694885, 0.39100000262260437, 0.3933333456516266, 0.39500001072883606, 0.39633333683013916, 0.39899998903274536, 0.40033334493637085, 0.4033333361148834, 0.4059999883174896, 0.40700000524520874, 0.4090000092983246, 0.4113333225250244, 0.4129999876022339, 0.4166666567325592, 0.4183333218097687, 0.41966667771339417, 0.4203333258628845, 0.42266666889190674, 0.42366665601730347, 0.4259999990463257, 0.42766666412353516, 0.43033334612846375, 0.4320000112056732, 0.4323333203792572, 0.43566668033599854, 0.437333345413208, 0.4403333365917206, 0.4413333237171173, 0.4426666796207428, 0.44333332777023315, 0.44333332777023315, 0.44466665387153625, 0.445333331823349, 0.4463333189487457, 0.4476666748523712, 0.44866666197776794, 0.44999998807907104, 0.4519999921321869, 0.45500001311302185, 0.4560000002384186, 0.4566666781902313, 0.4580000042915344, 0.4596666693687439, 0.46033334732055664, 0.460999995470047]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 4, 9, 1, 4, 8, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3257142901420593, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3952023267840445, 2.256612944140048, 2.29887420232695, 2.3046221874802892, 2.303348129546055, 2.3032072305584848, 2.30319066958389], "accuracy": [0.23378682136535645, 0.1620657742023468, 0.1562541276216507, 0.10117553919553757, 0.10302469879388809, 0.09866596013307571, 0.09087307006120682], "val_loss": [2.10424382346017, 1.6157711574009486, 1.9760916573660714, 1.9740142822265625, 1.973898206438337, 1.9736185755048479, 1.9736888068062919], "val_accuracy": [0.10166666656732559, 0.3256666660308838, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10166666656732559, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 8, 1, 1, 1, 4, 8, 2, 5, 2, 3, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 33, 50, 85, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3952813063787666, 2.248078852864367, 2.3943729038173025, 2.2976104700806244, 2.14017849487478, 4.782786627392712, 2.3093247620846222], "accuracy": [0.23405098915100098, 0.16642451286315918, 0.1394795924425125, 0.12032756209373474, 0.28080835938453674, 0.10777968913316727, 0.09998679161071777], "val_loss": [2.102839469909668, 1.6090723446437292, 1.9757391384669714, 1.8070628983633858, 8.535030909946986, 1.9838406017848425, 1.9750585556030273], "val_accuracy": [0.10166666656732559, 0.3083333373069763, 0.10100000351667404, 0.1666666716337204, 0.10966666787862778, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 8, 1, 1, 1, 4, 8, 2, 5, 2, 3, 3, 4, 8, 5, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 1, 1, 1, 2, 1, 2, 1, 2, 1], [40, 69, 62, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [39], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2928571403026581, "mapping_values": [1, 31, 31, 19, 12, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(grad, tf.math.pow(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))))))))))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3952181513724216, 2.246102191264745, 2.68099328092596, 2.275635315458363, 2.277963580614099, 2.30734480953078, 2.3038942326707077], "accuracy": [0.2339189052581787, 0.16589617729187012, 0.18372738361358643, 0.13881917297840118, 0.14040417969226837, 0.10394927859306335, 0.09985470771789551], "val_loss": [2.103538853781564, 1.8041839599609375, 1.9788239342825753, 1.9762719699314661, 1.9795471600123815, 1.9744157109941756, 1.9737397602626257], "val_accuracy": [0.10166666656732559, 0.30566665530204773, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10166666656732559, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 8, 1, 1, 1, 4, 8, 2, 5, 2, 3, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 37, 62, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53, 17], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0], [6, 4, 4, 2, 2, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2240000069141388, "mapping_values": [1, 32, 32, 20, 12, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(grad, tf.math.pow(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.7182832954739538, 2.3794380570793225, 2.253652605351015, 2.595232706185833, 2.304745197862981, 2.3033018013300786, 2.303446226021743, 2.3029474510477046], "accuracy": [0.21529521048069, 0.11517632752656937, 0.1640470176935196, 0.11491216719150543, 0.10077928751707077, 0.09721305221319199, 0.09351472556591034, 0.09549596905708313], "val_loss": [2.302041394369943, 1.9721121106828963, 2.7990875244140625, 1.9768945830208915, 1.974254880632673, 1.9736992972237724, 1.9737835611615862, 1.9739124434334892], "val_accuracy": [0.10166666656732559, 0.09966666996479034, 0.22300000488758087, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 1, 0, 1, 4, 8, 2, 0, 2, 3, 4, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 12, 57, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [6, 4, 4, 2, 2, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 12, 10, 6, 4, 0, 1, 1, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))))), sigma)))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029643894107887, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 4, 6, 8, 1, 9, 1, 4, 8, 2, 5, 2, 3, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [38, 22, 62, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029643894107887, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 9, 1, 9, 1, 4, 5, 2, 5, 2, 3, 6, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [96, 47, 62, 33, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [94], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), grad))), lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029643894107887, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 8, 9, 1, 4, 8, 2, 4, 9, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 52, 84, 33, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [8, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [32, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029643894107887, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 2, 9, 1, 4, 8, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 61, 4, 33, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [6, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1212521493434906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 6, 6, 1, 9, 1, 6, 8, 2, 5, 2, 3, 3, 3, 2, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [39], [0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 3, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), grad)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(sigma), tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 8, 2, 9, 1, 4, 8, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 52, 4, 33, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [39], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 2, 1, 1, 0, 1, 0, 11, 9, 6, 3, 1, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, alpha))))), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029643894107887, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 9, 1, 6, 1, 1, 1, 4, 8, 4, 5, 2, 3, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 0, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [74, 22, 62, 75, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029643894107887, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 4, 6, 8, 1, 1, 1, 4, 0, 2, 5, 8, 3, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 0, 2, 1, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [38, 22, 94, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023136837953873, 2.303204026976124, 2.3017450909431285, 2.302316504887712, 2.3041544720134906, 2.3022538548715046], "accuracy": [0.09206181764602661, 0.09509972482919693, 0.09734513610601425, 0.09060890227556229, 0.09034473448991776, 0.0940430611371994], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 3, 6, 8, 6, 9, 2, 4, 8, 2, 5, 2, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 1, 1, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [36, 61, 4, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 28, 28, 18, 10, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad))))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(alpha)), grad)), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023136837953873, 2.303204026976124, 2.3017450909431285, 2.302316504887712, 2.3041544720134906, 2.3022538548715046], "accuracy": [0.09206181764602661, 0.09509972482919693, 0.09734513610601425, 0.09060890227556229, 0.09034473448991776, 0.0940430611371994], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 4, 6, 8, 2, 9, 1, 4, 8, 2, 5, 3, 3, 2, 3, 8, 9, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 1, 1, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [11, 61, 4, 33, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 3, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023136837953873, 2.303204026976124, 2.3017450909431285, 2.302316504887712, 2.3041544720134906, 2.3022538548715046], "accuracy": [0.09206181764602661, 0.09509972482919693, 0.09734513610601425, 0.09060890227556229, 0.09034473448991776, 0.0940430611371994], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]