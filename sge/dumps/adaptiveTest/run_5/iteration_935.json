[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [48, 61, 33, 38, 8, 35], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.833142876625061, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.8983261650736936, 1.0952789973526142, 0.9123131228696243, 0.7405447802287303, 0.7288018180756851, 0.6942277195006157, 0.6353012047754287, 0.6274778063916701, 0.5915413120513768, 0.5903618888942526, 0.5529838361524084, 0.5322724926300084, 0.5339328109265444, 0.5135307925693142, 0.5003486960012332, 0.4763045020705563, 0.48062658918500656, 0.4621933488727104, 0.4572538456833673, 0.43120478988953426, 0.42007555124026247, 0.42108387439525863, 0.41791272347613634, 0.4039852796229452, 0.4202708335852406, 0.38176394764615906, 0.3942449565702788, 0.3858857308876686, 0.36741861120395813, 0.3751700309683004, 0.3469121487479814, 0.37361630850527283, 0.3381116693683698, 0.35469507646362275, 0.33326979358796793, 0.3326246340780872, 0.32020822318947123, 0.3113039327201559, 0.312808405631065, 0.29310127309426465, 0.2965338381329359, 0.2993225957723483, 0.28790846101722195, 0.2800132789592607, 0.2771707072021498, 0.27397486170316654], "accuracy": [0.372209757566452, 0.6044115424156189, 0.653150200843811, 0.7161537408828735, 0.7211728692054749, 0.7337207794189453, 0.7548540234565735, 0.7557786107063293, 0.7836481332778931, 0.7714964747428894, 0.7877426743507385, 0.8018755912780762, 0.7942147850990295, 0.8061022162437439, 0.81112140417099, 0.8204993009567261, 0.817461371421814, 0.8222163319587708, 0.8239334225654602, 0.8362171649932861, 0.8438779711723328, 0.8387266993522644, 0.841500461101532, 0.8514066934585571, 0.8372738361358643, 0.850350022315979, 0.8553691506385803, 0.8564258217811584, 0.8617091774940491, 0.8599920868873596, 0.8684453964233398, 0.856689989566803, 0.8751816153526306, 0.8631620407104492, 0.8751816153526306, 0.8714832663536072, 0.8787478804588318, 0.8780874609947205, 0.8828424215316772, 0.889578640460968, 0.8878615498542786, 0.8882578015327454, 0.8894465565681458, 0.8945978283882141, 0.8977677822113037, 0.8967111110687256], "val_loss": [0.9703193051474435, 0.8482450076511928, 0.612389257975987, 0.546770487512861, 0.5229028463363647, 0.5239585297448295, 0.5080065046037946, 0.46598786967141287, 0.47376557758876253, 0.44647068636757986, 0.42587428433554514, 0.46482883180890766, 0.42978596687316895, 0.41058350460869925, 0.398073673248291, 0.4338432805878775, 0.38848668336868286, 0.3756469317844936, 0.3787455643926348, 0.37038473572049824, 0.3597497173718044, 0.3496474027633667, 0.35789343288966585, 0.3567638652665274, 0.34886759519577026, 0.36302999939237324, 0.3599754912512643, 0.34435579606464933, 0.35342345918927875, 0.35379910469055176, 0.3422533529145377, 0.3275899716785976, 0.33129710810525076, 0.31982219219207764, 0.32321462460926603, 0.3200756992612566, 0.3274028386388506, 0.3407540832247053, 0.3127241049494062, 0.31152924469539095, 0.30821061985833303, 0.3195364645549229, 0.32319627489362446, 0.31350429568971905, 0.34786962611334665, 0.37288335391453337], "val_accuracy": [0.621999979019165, 0.6576666831970215, 0.7260000109672546, 0.7493333220481873, 0.753000020980835, 0.7563333511352539, 0.7620000243186951, 0.7853333353996277, 0.7870000004768372, 0.7916666865348816, 0.8009999990463257, 0.7956666946411133, 0.8073333501815796, 0.8193333148956299, 0.8263333439826965, 0.8143333196640015, 0.8270000219345093, 0.8450000286102295, 0.828000009059906, 0.8453333377838135, 0.8516666889190674, 0.8546666502952576, 0.8423333168029785, 0.8450000286102295, 0.8560000061988831, 0.8420000076293945, 0.8453333377838135, 0.859000027179718, 0.8473333120346069, 0.8486666679382324, 0.8486666679382324, 0.862666666507721, 0.8576666712760925, 0.8663333058357239, 0.8656666874885559, 0.8666666746139526, 0.8663333058357239, 0.8566666841506958, 0.8706666827201843, 0.8696666955947876, 0.8740000128746033, 0.8640000224113464, 0.8693333268165588, 0.8709999918937683, 0.8610000014305115, 0.8433333039283752]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 2, 5, 1, 2, 3, 9, 9, 1, 2, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 3, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8317142724990845, "mapping_values": [1, 4, 4, 2, 2, 1, 19, 19, 12, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.627036048468188, 2.002058373875606, 1.5217889135445366, 1.1672421359130971, 1.1878471293894686, 0.9142557476899249, 0.7836459128926884, 0.7532100232836908, 0.7166822359089869, 0.6456806954218334, 0.6487504688031669, 0.6027785901144086, 0.6046036160570079, 0.5703101436916422, 0.5602994176611185, 0.5412355976538683, 0.5392947864648987, 0.5139233942210415, 0.5084705979651495, 0.484909144500936, 0.4848638255488147, 0.46572014781950394, 0.4596451122361466, 0.4516016204107423, 0.4722165988460272, 0.43317908693408574], "accuracy": [0.270109623670578, 0.34684982895851135, 0.4888390004634857, 0.5749570727348328, 0.6087703108787537, 0.6645092964172363, 0.7065116763114929, 0.7176066637039185, 0.7323999404907227, 0.7503632307052612, 0.7474573850631714, 0.7761194109916687, 0.7716285586357117, 0.7895918488502502, 0.7890635132789612, 0.8012151718139648, 0.7989697456359863, 0.8076872229576111, 0.8090080618858337, 0.8231409192085266, 0.8257825970649719, 0.8219521641731262, 0.8289526104927063, 0.8284242749214172, 0.8234050869941711, 0.8337075710296631], "val_loss": [1.9080196108136858, 1.4950164726802282, 1.167281252997262, 0.6767587150846209, 0.7336333308901105, 0.5772244759968349, 0.5522406782422747, 0.5223909786769322, 0.4878205231257847, 0.46565226146153044, 0.4618354524884905, 0.48989674023219515, 0.4399579678262983, 0.44090016399111065, 0.41023218631744385, 0.4314658726964678, 0.4157795820917402, 0.40406016792569843, 0.40365282126835417, 0.4006891165460859, 0.37876416955675396, 0.3902919462748936, 0.38968245472226826, 0.37830219098499845, 0.39007656063352314, 0.4016864810671125], "val_accuracy": [0.27300000190734863, 0.5246666669845581, 0.4503333270549774, 0.6986666917800903, 0.687333345413208, 0.7493333220481873, 0.7480000257492065, 0.765666663646698, 0.778333306312561, 0.7956666946411133, 0.7923333048820496, 0.781333327293396, 0.7983333468437195, 0.8066666722297668, 0.8246666789054871, 0.8090000152587891, 0.8153333067893982, 0.8220000267028809, 0.8216666579246521, 0.831333339214325, 0.8453333377838135, 0.8376666903495789, 0.8306666612625122, 0.8426666855812073, 0.8289999961853027, 0.8143333196640015]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 31, 33, 38, 8, 35], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7977142930030823, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 6, 2, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.193221636483572, 1.5935970887752366, 1.2493953502346669, 1.0584991028154247, 0.9290530606582731, 0.8759736769061756, 0.850549275329352, 0.8138377221662607, 0.7740942021371068, 0.7288436200939638, 0.7425317952519851, 0.7173072703841057, 0.6933075936872568, 0.6743170646093211, 0.6875552450661111, 0.6725976227564566, 0.6501108583221819, 0.6472006096123168, 0.6369497573937817, 0.6243168129471898, 0.6353223679277009, 0.6190211340310693, 0.6008331369431011, 0.5947866719932037, 0.6145315044087788, 0.5881962508982702, 0.5721597650488527, 0.5752485186558327], "accuracy": [0.27103421092033386, 0.4721965491771698, 0.549068808555603, 0.6178840398788452, 0.6571126580238342, 0.6798309087753296, 0.6865671873092651, 0.700171709060669, 0.7148329019546509, 0.7276449799537659, 0.7174745798110962, 0.7289658188819885, 0.7428345084190369, 0.748249888420105, 0.7404569983482361, 0.748249888420105, 0.7555144429206848, 0.7618544697761536, 0.7592127919197083, 0.7656848430633545, 0.7593448758125305, 0.7703077793121338, 0.7726852297782898, 0.7781006693840027, 0.7660810947418213, 0.7757231593132019, 0.7864218950271606, 0.7802139520645142], "val_loss": [1.591425555092948, 1.0782870224543981, 0.8273710863930839, 0.6878942762102399, 0.6532064165387835, 0.6571613720485142, 0.6052303654806954, 0.5888965811048236, 0.582656741142273, 0.5318080697740827, 0.5791183710098267, 0.5214299304144723, 0.5314897128513881, 0.5187174933297294, 0.5145578554698399, 0.49543860980442594, 0.5016375609806606, 0.4967830010822841, 0.47624433040618896, 0.4834204060690744, 0.49749629838126047, 0.4615370035171509, 0.45129030091421946, 0.4876765353339059, 0.4734727314540318, 0.44152539116995676, 0.4369480609893799, 0.447117669241769], "val_accuracy": [0.5296666622161865, 0.5106666684150696, 0.656000018119812, 0.7103333473205566, 0.6963333487510681, 0.7006666660308838, 0.7260000109672546, 0.7206666469573975, 0.715666651725769, 0.7639999985694885, 0.7319999933242798, 0.7646666765213013, 0.7689999938011169, 0.762666642665863, 0.7546666860580444, 0.7860000133514404, 0.7616666555404663, 0.7726666927337646, 0.79666668176651, 0.7879999876022339, 0.7879999876022339, 0.79666668176651, 0.8119999766349792, 0.7760000228881836, 0.7879999876022339, 0.8013333082199097, 0.8040000200271606, 0.8083333373069763]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 31, 56, 38, 8, 35], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7962856888771057, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.19321869364693, 1.5934375780070573, 1.25015000156392, 1.0584736051434744, 0.9308484540308755, 0.8718674977567957, 0.8525512931038596, 0.8137041723345564, 0.7677907322565043, 0.730891585208327, 0.7502313170529407, 0.7116962346135035, 0.6918504621846848, 0.6789598119509235, 0.6838795239143463, 0.6659597846432259, 0.6668596960660285, 0.6431824961642012, 0.6349731378189372, 0.6171062571214191, 0.6347578479676529, 0.6151327801071941, 0.6097377412087095, 0.5932614990843286, 0.6155350032798713, 0.5910578665558877, 0.5733004109797429, 0.5740106865131875], "accuracy": [0.2712983787059784, 0.47166821360588074, 0.5480121374130249, 0.6184123754501343, 0.655527651309967, 0.678642213344574, 0.6865671873092651, 0.698718786239624, 0.7195879220962524, 0.7238145470619202, 0.7191916704177856, 0.7294940948486328, 0.7409853339195251, 0.7467969655990601, 0.7420420050621033, 0.7519482374191284, 0.7470611333847046, 0.7606657147407532, 0.7574957013130188, 0.7711002230644226, 0.759080708026886, 0.7714964747428894, 0.7689869403839111, 0.7786290049552917, 0.7672698497772217, 0.7733456492424011, 0.7874785661697388, 0.7820631265640259], "val_loss": [1.5914737497057234, 1.0817743710109167, 0.825846791267395, 0.6884489059448242, 0.6545352595193046, 0.6636185986655099, 0.5980619873319354, 0.5805848155702863, 0.5755850076675415, 0.5406385149274554, 0.5737923724310738, 0.516738942691258, 0.534592696598598, 0.5306443657193866, 0.5090909685407367, 0.5266488449914115, 0.5025945731571743, 0.4914590801511492, 0.48203326974596294, 0.4722797019141061, 0.4917409930910383, 0.46244129112788607, 0.456301212310791, 0.4949542284011841, 0.4818879706518991, 0.44312998226710726, 0.43973227058138165, 0.44523654665265766], "val_accuracy": [0.5296666622161865, 0.5099999904632568, 0.6570000052452087, 0.7110000252723694, 0.6946666836738586, 0.6990000009536743, 0.7276666760444641, 0.7293333411216736, 0.7179999947547913, 0.7583333253860474, 0.734333336353302, 0.765333354473114, 0.7670000195503235, 0.7559999823570251, 0.7509999871253967, 0.7756666541099548, 0.7563333511352539, 0.777999997138977, 0.7913333177566528, 0.7963333129882812, 0.7926666736602783, 0.7919999957084656, 0.8090000152587891, 0.7713333368301392, 0.7806666493415833, 0.8006666898727417, 0.8006666898727417, 0.8053333163261414]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 3, 4, 1, 2, 8, 5, 9, 1, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 2], [52, 61, 33, 38, 8, 35], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7782857418060303, "mapping_values": [1, 4, 4, 2, 2, 1, 54, 54, 33, 21, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, grad)))))))), tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))), grad)), tf.math.add(beta, grad)))))))), tf.math.add(beta, grad))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1667840260209785, 1.4521358233275368, 1.1387426624397607, 0.9253328703240539, 0.8687852109821639, 0.8333132296678586, 0.773043904660668, 0.748661607586555, 0.7412265158285318, 0.6885313839802826, 0.7005338654416097, 0.6566789333122187, 0.6580329677684196, 0.6503252303674315, 0.650445322570957, 0.6339573976527808, 0.6136357973925961], "accuracy": [0.2833179235458374, 0.5004622936248779, 0.5967507362365723, 0.6645092964172363, 0.6790384650230408, 0.6913221478462219, 0.7164179086685181, 0.7230220437049866, 0.7288337349891663, 0.7376832365989685, 0.7396644949913025, 0.7512878179550171, 0.750231146812439, 0.7520803213119507, 0.7572315335273743, 0.7627789974212646, 0.7730814814567566], "val_loss": [1.4577900000980921, 0.9682165554591587, 0.787366509437561, 0.6283542939594814, 0.6229181289672852, 0.5761359078543526, 0.5737571035112653, 0.5610310861042568, 0.5449106012071881, 0.5097318547112601, 0.5221824135099139, 0.4929043395178659, 0.5168453625270298, 0.5068355969020298, 0.4774355207170759, 0.5086723395756313, 0.4662694249834333], "val_accuracy": [0.5410000085830688, 0.5590000152587891, 0.6586666703224182, 0.7236666679382324, 0.7153333425521851, 0.7480000257492065, 0.7306666374206543, 0.734333336353302, 0.7416666746139526, 0.7776666879653931, 0.7613333463668823, 0.7826666831970215, 0.7730000019073486, 0.7566666603088379, 0.7820000052452087, 0.7816666960716248, 0.781000018119812]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 2, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 31, 33, 38, 8, 35], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7760000228881836, "mapping_values": [1, 4, 4, 2, 2, 1, 19, 19, 13, 6, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.166783149452446, 1.451891953116001, 1.1348162357597114, 0.9272888921680483, 0.8679085661942665, 0.8321706591233791, 0.7699001168121421, 0.7459146437501989, 0.7465150361882382, 0.6869024658373176, 0.7008834202071349, 0.6559483451362079, 0.6597537375822232, 0.6507314454452662, 0.6504712183446207, 0.6362427732081949, 0.6161002856534722], "accuracy": [0.2833179235458374, 0.5003302097320557, 0.5963544845581055, 0.6647734642028809, 0.6803592443466187, 0.694360077381134, 0.7187954187393188, 0.7253995537757874, 0.7259278893470764, 0.7386078238487244, 0.7405890822410583, 0.7515519857406616, 0.7500990629196167, 0.7532690763473511, 0.7584202885627747, 0.7613261342048645, 0.7724210619926453], "val_loss": [1.4577156816210066, 0.9688097068241665, 0.7871645007814679, 0.6280971084322248, 0.6217427934919085, 0.5730445044381278, 0.5773733854293823, 0.5636026348386493, 0.5371656247547695, 0.5058176006589618, 0.5177639893123082, 0.493162785257612, 0.5171274287360055, 0.5051360981804984, 0.473787648337228, 0.5120456218719482, 0.46863297053745817], "val_accuracy": [0.5410000085830688, 0.5616666674613953, 0.6583333611488342, 0.7243333458900452, 0.7153333425521851, 0.7509999871253967, 0.7316666841506958, 0.734333336353302, 0.7490000128746033, 0.7833333611488342, 0.7643333077430725, 0.784333348274231, 0.7736666798591614, 0.7603333592414856, 0.7820000052452087, 0.7796666622161865, 0.7806666493415833]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 6, 9, 1, 2, 8, 5, 9, 1, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [52, 61, 33, 38, 8, 35], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7725714445114136, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1810110381030294, 1.5243043581161833, 1.1752431101220207, 0.9744062459684555, 0.8956179038691972, 0.8895293378937026, 0.8125776592309937, 0.7723666845437416, 0.7541636588031495, 0.7098370636332981, 0.7272284869677859, 0.6828309897859383, 0.670590294917435, 0.6729129124327012, 0.6608048811753696, 0.6530288543998447, 0.6397028676176493], "accuracy": [0.27843084931373596, 0.48448026180267334, 0.5781270861625671, 0.6540747880935669, 0.667811393737793, 0.6775855422019958, 0.6995112895965576, 0.7127195596694946, 0.7239466309547424, 0.7302865982055664, 0.7269845604896545, 0.7408532500267029, 0.7493065595626831, 0.7446836829185486, 0.7524765729904175, 0.7560427784919739, 0.7627789974212646], "val_loss": [1.5298911503383092, 1.027280262538365, 0.7618331909179688, 0.6517377580915179, 0.6367225136075702, 0.6203988790512085, 0.5852673394339425, 0.5775291068213326, 0.5556317227227348, 0.5171753168106079, 0.5465493542807442, 0.5044445310320173, 0.5203406129564557, 0.5150871106556484, 0.5024480138506208, 0.5130267313548497, 0.4852804115840367], "val_accuracy": [0.5360000133514404, 0.5299999713897705, 0.6850000023841858, 0.7166666388511658, 0.7166666388511658, 0.734333336353302, 0.7256666421890259, 0.7273333072662354, 0.7403333187103271, 0.7773333191871643, 0.7473333477973938, 0.7793333530426025, 0.7726666927337646, 0.7676666378974915, 0.7559999823570251, 0.7793333530426025, 0.7676666378974915]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 6, 9, 1, 2, 8, 5, 9, 1, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 31, 33, 38, 8, 35], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.755142867565155, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2983258455468207, 2.2899886044875237, 2.2786753124737893, 2.2678728427995294, 2.25838428758564, 2.2482619568058024, 2.237648323684116, 2.2214848219899612, 2.2098420444748514, 2.19215458747245, 2.1725435797344064, 2.151270276220672, 2.131540609183895, 2.1057718179922187, 2.07706356753983, 2.0443902091894324, 2.0022362354424934, 1.9694757534134673, 1.9329820812779837, 1.8881146710515102, 1.8415707750028198, 1.79917658318492, 1.7544086762801012, 1.7028780180654348, 1.6606336427229333, 1.6039887336203924, 1.5643675986408259, 1.524024065475202, 1.4885389037403716, 1.443947742596562, 1.4157037875907705, 1.3869771216256097, 1.3507913230290864, 1.323715133878612, 1.2982766881768162, 1.2772100963423738, 1.2526312576797045, 1.2336905531643279, 1.2001014969934956, 1.1911132446038897, 1.1743474597581987, 1.15370071863281, 1.150403499225379, 1.134144906480598, 1.123544322863357, 1.1036440620742312, 1.0863357777955147, 1.085258262575641, 1.0651227464104027, 1.0592502199537515, 1.0456277064486046, 1.043188306192885, 1.0132095318082428, 1.018236376920853, 1.0008633144385841, 0.99355909664082, 0.9920462623893971, 0.9822871500018282, 0.9783565552951701, 0.972619992496945, 0.948574771128153, 0.9567822490338683, 0.9564703211194221, 0.9490851446732302, 0.9450274260131328, 0.9326511012359995, 0.9241396914446721, 0.9226940289747918, 0.9233702691381381, 0.9103980558328877, 0.9143394477977382, 0.9012907899413299, 0.8984901471585803, 0.8929900898279657, 0.8891725772171287, 0.8865517429971046, 0.8896779940821444, 0.8773532542869352, 0.8717031428338735, 0.8734487103685302, 0.8659450733949795, 0.8570798917721134, 0.8650398330445366, 0.8541184626770624, 0.8529319500233503, 0.8489523769731866, 0.8431828624032917, 0.8496080113361067, 0.8384471473015531, 0.8506366984797916, 0.8281804729903048, 0.8316486386527884, 0.819634601086075, 0.8199582810903253, 0.8305572369599056, 0.8244862215094767, 0.8195071618995646, 0.8176390252974937, 0.8124282901250235, 0.8141415168612057], "accuracy": [0.09813763201236725, 0.11847840249538422, 0.15493330359458923, 0.1814819723367691, 0.2071060687303543, 0.227314755320549, 0.2583542466163635, 0.2818650007247925, 0.29282790422439575, 0.31382909417152405, 0.3349623680114746, 0.3547748029232025, 0.35768061876296997, 0.3778893053531647, 0.3827763795852661, 0.40047550201416016, 0.41870296001434326, 0.4251750111579895, 0.43072250485420227, 0.43864747881889343, 0.45185577869415283, 0.4542332589626312, 0.4571390748023987, 0.4784044325351715, 0.47946110367774963, 0.4994056224822998, 0.5012547969818115, 0.5065380930900574, 0.5177651643753052, 0.5328226089477539, 0.5328226089477539, 0.5394267439842224, 0.5534275770187378, 0.5495971441268921, 0.5517104864120483, 0.5616167187690735, 0.5651829242706299, 0.5778629183769226, 0.5871087312698364, 0.5843349695205688, 0.5881653428077698, 0.59661865234375, 0.6052040457725525, 0.5997886657714844, 0.6073173880577087, 0.6151102781295776, 0.6206578016281128, 0.6159027814865112, 0.6288469433784485, 0.622639000415802, 0.6337339878082275, 0.637828528881073, 0.6450931429862976, 0.6367719173431396, 0.6479989290237427, 0.6505085229873657, 0.6485272645950317, 0.6565843224525452, 0.6581693291664124, 0.6483951807022095, 0.666358470916748, 0.6581693291664124, 0.6622639298439026, 0.6617355942726135, 0.6613393425941467, 0.6675472259521484, 0.6705851554870605, 0.6682076454162598, 0.6696605682373047, 0.6732267737388611, 0.6758684515953064, 0.6769251227378845, 0.6779817938804626, 0.6860388517379761, 0.6779817938804626, 0.6787742972373962, 0.6794346570968628, 0.6892088055610657, 0.6897371411323547, 0.6856426000595093, 0.693831741809845, 0.6884163022041321, 0.6869634389877319, 0.6946242451667786, 0.6947563290596008, 0.6971337795257568, 0.7051908373832703, 0.6963412761688232, 0.696209192276001, 0.6911900639533997, 0.6989829540252686, 0.7008321285247803, 0.7082287669181824, 0.7033417224884033, 0.7013604640960693, 0.7082287669181824, 0.7042662501335144, 0.7086250185966492, 0.7009642124176025, 0.7098137736320496], "val_loss": [1.9616898127964564, 1.9527441433497839, 1.9436282430376326, 1.934091363634382, 1.9239999226161413, 1.9132847104753767, 1.9014899390084403, 1.888416085924421, 1.8740321568080358, 1.8575942856924874, 1.8390940938677107, 1.818152563912528, 1.7948241915021623, 1.7686388833182198, 1.7397253172738212, 1.7077063492366247, 1.6717860698699951, 1.6330463205065047, 1.5916072641100203, 1.5475571155548096, 1.5013542856488908, 1.4540013585771834, 1.406416552407401, 1.3581581115722656, 1.3107233388083321, 1.2634892123086112, 1.2184574604034424, 1.1758572714669364, 1.1363320691244942, 1.0991206169128418, 1.0652333327702113, 1.0337534291403634, 1.0044842788151331, 0.978074448449271, 0.953442028590611, 0.9307095663888114, 0.91015625, 0.8906292234148298, 0.8725321122578212, 0.8558961834226336, 0.8405575241361346, 0.8266070570264544, 0.8140297276633126, 0.8021986484527588, 0.7909532955714634, 0.780184303011213, 0.7700508662632534, 0.7601778677531651, 0.7514511006219047, 0.7434449025562831, 0.7355723210743496, 0.7284751960209438, 0.7210198300225394, 0.7140490327562604, 0.7079383475439889, 0.7017301831926618, 0.6960582392556327, 0.6910743713378906, 0.6862396001815796, 0.6817408459527152, 0.6764339208602905, 0.6720506463732038, 0.6683967283793858, 0.6646276712417603, 0.6608562469482422, 0.6564500161579677, 0.653010402406965, 0.6496924502508981, 0.6464218582425799, 0.6422936064856393, 0.6395304543631417, 0.6367304836000715, 0.633926374571664, 0.630543419292995, 0.6285438707896641, 0.6251530136380877, 0.6227849040712629, 0.6197535480771746, 0.6176143373761859, 0.6150443213326591, 0.6125906705856323, 0.6098967620304653, 0.6076648916516986, 0.6060635362352643, 0.603765436581203, 0.6011581250599453, 0.5993275472096035, 0.5973310470581055, 0.5949848890304565, 0.5936241490500314, 0.59176162311009, 0.5896515165056501, 0.5879940135138375, 0.5856101342609951, 0.5837850400379726, 0.5822751351765224, 0.5814061164855957, 0.579899617603847, 0.578231760433742, 0.5767509426389422], "val_accuracy": [0.10433333367109299, 0.19433332979679108, 0.27266666293144226, 0.3310000002384186, 0.36800000071525574, 0.3856666684150696, 0.4009999930858612, 0.4163333475589752, 0.43666666746139526, 0.44999998807907104, 0.46399998664855957, 0.4779999852180481, 0.4873333275318146, 0.5053333044052124, 0.5213333368301392, 0.5326666831970215, 0.5406666398048401, 0.5529999732971191, 0.5583333373069763, 0.5703333616256714, 0.5770000219345093, 0.5856666564941406, 0.5896666646003723, 0.597000002861023, 0.6016666889190674, 0.6073333621025085, 0.6173333525657654, 0.625, 0.6359999775886536, 0.6463333368301392, 0.6546666622161865, 0.6633333563804626, 0.6706666946411133, 0.6733333468437195, 0.6759999990463257, 0.6813333630561829, 0.6816666722297668, 0.6899999976158142, 0.6923333406448364, 0.6936666369438171, 0.6963333487510681, 0.6996666789054871, 0.7009999752044678, 0.7023333311080933, 0.7049999833106995, 0.7076666951179504, 0.7066666483879089, 0.7083333134651184, 0.7126666903495789, 0.7129999995231628, 0.7143333554267883, 0.7160000205039978, 0.7146666646003723, 0.7166666388511658, 0.7200000286102295, 0.7210000157356262, 0.7250000238418579, 0.7246666550636292, 0.7236666679382324, 0.7253333330154419, 0.7276666760444641, 0.7263333201408386, 0.7286666631698608, 0.7303333282470703, 0.7310000061988831, 0.7303333282470703, 0.7319999933242798, 0.7333333492279053, 0.7336666584014893, 0.7356666922569275, 0.7356666922569275, 0.7363333106040955, 0.7366666793823242, 0.7390000224113464, 0.7396666407585144, 0.7369999885559082, 0.737333357334137, 0.7409999966621399, 0.7383333444595337, 0.7406666874885559, 0.7450000047683716, 0.7433333396911621, 0.7436666488647461, 0.7443333268165588, 0.746999979019165, 0.7463333606719971, 0.7459999918937683, 0.7483333349227905, 0.7480000257492065, 0.7483333349227905, 0.7490000128746033, 0.7509999871253967, 0.7519999742507935, 0.7516666650772095, 0.7523333430290222, 0.749666690826416, 0.7519999742507935, 0.7536666393280029, 0.7526666522026062, 0.7536666393280029]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 3, 8, 1, 3, 3, 2, 8, 9, 1, 9, 5, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [52, 61, 33, 38, 8, 35], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.5014285445213318, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.5211128977232793, 2.423724241449439, 2.2793640584017325, 2.2871303004737324, 2.55020307181392, 2.3064375860879074, 2.3043024654574853, 2.3030599026773837, 2.3030368386163937], "accuracy": [0.16378284990787506, 0.19336943328380585, 0.14093250036239624, 0.15651829540729523, 0.16180160641670227, 0.09681680053472519, 0.09813763201236725, 0.09985470771789551, 0.09866596013307571], "val_loss": [1.8677873611450195, 1.9815019880022322, 1.8665227890014648, 1.621612242289952, 1.977649756840297, 1.9741724559238978, 1.9738127163478307, 1.9736988885062081, 1.973390783582415], "val_accuracy": [0.19699999690055847, 0.0989999994635582, 0.39766666293144226, 0.4676666557788849, 0.0989999994635582, 0.0989999994635582, 0.09833333641290665, 0.09866666793823242, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 3, 4, 2, 2, 5, 2, 8, 9, 8, 9, 5, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 0, 3, 2, 0, 3, 2, 3, 0, 0, 3, 3, 0, 4, 5, 1, 3, 1, 1, 2, 5], [22, 86, 68, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 11, 5, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), beta), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 3, 0, 2, 6, 5, 2, 4, 9, 8, 9, 5, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 86, 68, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 12, 73, 38, 8, 53], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 2, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 31, 33, 4, 8, 35], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302366595210936, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 6, 9, 1, 2, 8, 5, 9, 1, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 2, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [81, 12, 46, 38, 8, 53], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1267498340.8306603, 24030032100.847973, 109585641835.01889, 305550702092.9166, 649561523987.3074, 1224593927825.735], "accuracy": [0.10355303436517715, 0.09734513610601425, 0.10249637067317963, 0.09906221181154251, 0.10355303436517715, 0.09536388516426086], "val_loss": [4741264676.571428, 37918614674.28571, 127962798957.71428, 303304006509.7143, 592369380790.8572, 1023596335689.1428], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 2, 5, 1, 2, 8, 9, 9, 1, 2, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [21, 93, 48, 31, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 17, 17, 11, 6, 5, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), grad)))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302366595210936, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [16, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [67, 98, 33, 38, 60, 35, 37], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 3, 0, 2, 6, 5, 2, 8, 9, 8, 9, 5, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 3, 2, 0, 3, 2, 3, 0, 0, 3, 3, 0, 4, 5, 1, 3, 1, 1, 2, 5], [22, 86, 68, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 2, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [94, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 9, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [49, 31, 33, 38, 8, 35], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 6, 9, 2, 2, 5, 6, 9, 3, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 3, 2, 0, 3, 2, 3, 0, 0, 3, 3, 0, 4, 5, 1, 3, 1, 1, 2, 5], [22, 61, 68, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 10, 5, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.multiply(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024509306108913, 2.3037856518867987, 2.3021442592262105, 2.301395325219201, 2.3021618090506006, 2.302711415583699], "accuracy": [0.09034473448991776, 0.08572183549404144, 0.0936468094587326, 0.09021265059709549, 0.08968432247638702, 0.09311848133802414], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 1, 6, 9, 1, 2, 8, 5, 9, 1, 9, 3, 6, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 3, 0, 3, 0, 1, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [22, 98, 33, 38, 60, 35, 37], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024509306108913, 2.3037856518867987, 2.3021442592262105, 2.301395325219201, 2.3021618090506006, 2.302711415583699], "accuracy": [0.09034473448991776, 0.08572183549404144, 0.0936468094587326, 0.09021265059709549, 0.08968432247638702, 0.09311848133802414], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]