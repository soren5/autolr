[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7440000176429749, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29998170295018, 2.290988299541501, 2.28242823983448, 2.2771300577358438, 2.2663947666766795, 2.2581631025350357, 2.2511261203868154, 2.2400593364621355, 2.229158939387521, 2.2194420732070648, 2.2086385813969915, 2.1951632050947665, 2.1801570475518726, 2.1652718231489376, 2.1466074723294226, 2.128299362702597, 2.1085004446261184, 2.0863117517938137, 2.061210973812935, 2.034154556588317, 2.0036771160311404, 1.9718890011727834, 1.9421898114163216, 1.9076479871779102, 1.8669609354314174, 1.8314263105959294, 1.79646401736935, 1.7535284436248186, 1.7153500970706428, 1.680956277313832, 1.6377076317904695, 1.596639125007979, 1.5632439795391924, 1.5302670351691519, 1.49613985105544, 1.4734748389506462, 1.4399860508925941, 1.4167539201408188, 1.3894637301613422, 1.366347136892395, 1.3473357503534764, 1.315458559404196, 1.2973729276449264, 1.2725770997490944, 1.255039296460709, 1.2333580839352096, 1.2323500222029893, 1.2072960968581898, 1.1915066515087782, 1.1773046923351325, 1.1658450212492493, 1.1469044795739824, 1.1378514316056494, 1.131537019049156, 1.1157394324185401, 1.1104794880024682, 1.1032535415110791, 1.0796687193613452, 1.0840750595582018, 1.0661033896438796, 1.0616182070429676, 1.05236260328216, 1.0464623579968235, 1.0386685922302983, 1.0294840683506905, 1.0238633287612708, 1.01502791050639, 1.0030847715900055, 0.9989638953334258, 1.0005352483559689, 0.9803530116988809, 0.9719929284880017, 0.9774752850498521, 0.9694007098194536, 0.9636239965578285, 0.9578528800156799, 0.9644315489027179, 0.9533028364921557, 0.9458481668559962, 0.9434156624821467, 0.9379725863180612, 0.9304887554223873, 0.9305480100365048, 0.9204417737152881, 0.9116225122319016, 0.9084954305631042, 0.9142514250974739, 0.9015415386910515, 0.9072371502562505, 0.8935150855945763, 0.9014899841452066, 0.887383879711127, 0.8844137299629234, 0.8748598281875215, 0.8727362797071653, 0.8790997771806783, 0.8699282994595942, 0.8685623418228297, 0.8659387669464411, 0.8682136768756872], "accuracy": [0.1006472036242485, 0.12151630967855453, 0.14859332144260406, 0.15810328722000122, 0.190859854221344, 0.2098798006772995, 0.22322018444538116, 0.25214633345603943, 0.26376965641975403, 0.2775062620639801, 0.294148713350296, 0.3163386583328247, 0.3230748772621155, 0.33483028411865234, 0.3505481481552124, 0.36243560910224915, 0.3689076602458954, 0.37564390897750854, 0.40007925033569336, 0.4060229957103729, 0.4127592146396637, 0.4171179533004761, 0.4266279339790344, 0.43006208539009094, 0.4476291239261627, 0.44604411721229553, 0.4613657295703888, 0.46810197830200195, 0.478140264749527, 0.47549861669540405, 0.49306565523147583, 0.497820645570755, 0.49927353858947754, 0.5152555704116821, 0.5180293321609497, 0.5211992859840393, 0.5258222222328186, 0.5386342406272888, 0.5398229956626892, 0.5403513312339783, 0.5461629629135132, 0.5565975308418274, 0.5572579503059387, 0.575089156627655, 0.566239595413208, 0.5775987505912781, 0.5690133571624756, 0.5836745500564575, 0.5889578461647034, 0.5828820466995239, 0.5941091179847717, 0.6081098914146423, 0.5999207496643066, 0.6034870147705078, 0.6050719618797302, 0.609430730342865, 0.6116761565208435, 0.6205257177352905, 0.624620258808136, 0.6263373494148254, 0.6259410977363586, 0.6258090138435364, 0.6338660717010498, 0.6394135355949402, 0.6371681690216064, 0.6402060389518738, 0.6424514651298523, 0.6406022906303406, 0.6473385095596313, 0.6514331102371216, 0.6519614458084106, 0.654999315738678, 0.6498481035232544, 0.6557918190956116, 0.6565843224525452, 0.6623960137367249, 0.6583014130592346, 0.6581693291664124, 0.663848876953125, 0.6634526252746582, 0.6656980514526367, 0.6728305220603943, 0.6692643165588379, 0.6744155287742615, 0.6761326193809509, 0.6823405027389526, 0.6723021864891052, 0.6783780455589294, 0.6758684515953064, 0.6816800832748413, 0.6778497099876404, 0.6791704893112183, 0.6884163022041321, 0.6905296444892883, 0.6925109028816223, 0.6836613416671753, 0.6897371411323547, 0.6881521344184875, 0.6909258961677551, 0.6886804699897766], "val_loss": [1.9634391239711217, 1.9561150414603097, 1.9487429346357072, 1.9412342480250768, 1.933464186532157, 1.9252689225333077, 1.9165996142796107, 1.9072298322405135, 1.8970469747270857, 1.886099134172712, 1.8741698265075684, 1.8611420222691126, 1.846750327519008, 1.8309759412493025, 1.8135756765093123, 1.7944776671273368, 1.7737528256007604, 1.7511044910975866, 1.7263363429478236, 1.6994638783591134, 1.670297622680664, 1.6389431612832206, 1.6058250495365687, 1.5708694798605782, 1.5337286336081368, 1.495654923575265, 1.4570050239562988, 1.4176229068211146, 1.377892596381051, 1.338465622493199, 1.2992641244615828, 1.2607573441096716, 1.2235868658338274, 1.1881048338753837, 1.154517071587699, 1.1234437738146101, 1.094104494367327, 1.0665910243988037, 1.0406667504991804, 1.0164144379752023, 0.9941849367959159, 0.9727437836783273, 0.9528232983180455, 0.9342782838003976, 0.9166722297668457, 0.8999001639229911, 0.8849443708147321, 0.870735628264291, 0.8573213475091117, 0.8450304440089634, 0.8330254214150565, 0.8219667332512992, 0.811553921018328, 0.8015366962977818, 0.7923541920525687, 0.7837801660810199, 0.7756572621209281, 0.7677781070981707, 0.760549783706665, 0.7530589614595685, 0.7461140326091221, 0.7394949538367135, 0.7334047896521432, 0.7277343613760812, 0.7221717664173671, 0.7164254018238613, 0.7114025865282331, 0.7058007035936628, 0.7013312067304339, 0.6974178893225533, 0.6928805453436715, 0.6886022431509835, 0.6847895213535854, 0.6804529428482056, 0.6767974581037249, 0.6733559540339878, 0.6698699508394513, 0.6664805923189435, 0.6635040044784546, 0.6604751348495483, 0.6575034516198295, 0.6545678547450474, 0.651679515838623, 0.6483425923756191, 0.6456666333334786, 0.6427770512444633, 0.640221084867205, 0.6376419407980782, 0.6354622670582363, 0.6329031671796527, 0.6307313953127179, 0.6283491339002337, 0.6256800549370902, 0.6231557471411568, 0.6208620582308088, 0.6189451047352382, 0.6166378940854754, 0.6150168521063668, 0.6134349618639264, 0.611717769077846], "val_accuracy": [0.09066666662693024, 0.16033333539962769, 0.23266667127609253, 0.2893333435058594, 0.33500000834465027, 0.3646666705608368, 0.3799999952316284, 0.398333340883255, 0.4129999876022339, 0.42533332109451294, 0.4416666626930237, 0.44999998807907104, 0.4596666693687439, 0.47200000286102295, 0.4803333282470703, 0.49566665291786194, 0.5040000081062317, 0.5176666378974915, 0.5270000100135803, 0.5379999876022339, 0.5443333387374878, 0.5540000200271606, 0.5553333163261414, 0.562666654586792, 0.5706666707992554, 0.5770000219345093, 0.5820000171661377, 0.5886666774749756, 0.5933333039283752, 0.5950000286102295, 0.5996666550636292, 0.6069999933242798, 0.6086666584014893, 0.6140000224113464, 0.6230000257492065, 0.637333333492279, 0.6463333368301392, 0.6520000100135803, 0.6573333144187927, 0.6666666865348816, 0.6706666946411133, 0.6759999990463257, 0.6766666769981384, 0.6796666383743286, 0.6826666593551636, 0.684333324432373, 0.6899999976158142, 0.6899999976158142, 0.6940000057220459, 0.6943333148956299, 0.6963333487510681, 0.6986666917800903, 0.6996666789054871, 0.7023333311080933, 0.70333331823349, 0.7039999961853027, 0.7039999961853027, 0.706333339214325, 0.7083333134651184, 0.7106666564941406, 0.7110000252723694, 0.7123333215713501, 0.7146666646003723, 0.7153333425521851, 0.7160000205039978, 0.7179999947547913, 0.7196666598320007, 0.721666693687439, 0.7226666808128357, 0.7233333587646484, 0.721666693687439, 0.7226666808128357, 0.7239999771118164, 0.7250000238418579, 0.7269999980926514, 0.7286666631698608, 0.7263333201408386, 0.7279999852180481, 0.7286666631698608, 0.7306666374206543, 0.7323333621025085, 0.734000027179718, 0.7323333621025085, 0.7316666841506958, 0.7329999804496765, 0.7336666584014893, 0.734333336353302, 0.7366666793823242, 0.7350000143051147, 0.7356666922569275, 0.7366666793823242, 0.7363333106040955, 0.7369999885559082, 0.7383333444595337, 0.7396666407585144, 0.7416666746139526, 0.7416666746139526, 0.7406666874885559, 0.7433333396911621, 0.7433333396911621]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7440000176429749, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2999816714591512, 2.290988299541501, 2.28242823983448, 2.277130183699959, 2.266394946584927, 2.258163453408079, 2.2511262463509305, 2.2400592825180032, 2.229158781932377, 2.219442275568416, 2.20864000743674, 2.1951648560434425, 2.1801584059488914, 2.165273518909348, 2.1466095416993984, 2.128301787322869, 2.1085032831959643, 2.086315602359361, 2.0612136100214298, 2.0341578989201503, 2.0036793810548783, 1.971891196270692, 1.9421911049260754, 1.9076501381253963, 1.8669635530444593, 1.831425383799206, 1.7964691727184396, 1.7535289742643996, 1.7153549983028753, 1.680951519318544, 1.6377086354567942, 1.5966452175300858, 1.5632513201452438, 1.5302711897490913, 1.4961427732024761, 1.4734795641322822, 1.4399922113880868, 1.416756648350354, 1.3894707596517746, 1.366354140560184, 1.3473383908919876, 1.3154655474681802, 1.297369231873531, 1.2725776117459862, 1.2550361320846792, 1.2333550763530123, 1.2323513856385724, 1.2072899277499007, 1.191496881574546, 1.1773097663901313, 1.1658463709389986, 1.1469056647231062, 1.1378525266589394, 1.1315395623118791, 1.1157444012620115, 1.1104861736108662, 1.1032628847891077, 1.0796764673510908, 1.0840858543679668, 1.0661121445277804, 1.061632094161543, 1.052371899370882, 1.0464657639247898, 1.0386775689212606, 1.029489542467719, 1.02387129142536, 1.0150312220557427, 1.0030859310188314, 0.9989763950359993, 1.0005412185196831, 0.9803535240264286, 0.9720053507541354, 0.977486671654776, 0.9694095263312978, 0.9636301901661378, 0.9578582172412063, 0.964435004736092, 0.9533142502344736, 0.9458551944254758, 0.9434163079537641, 0.9379853220144047, 0.9305081417327229, 0.9305585402429002, 0.9204567706721917, 0.911632347305327, 0.908493397581012, 0.9142556828262783, 0.901536540277504, 0.9072495452039168, 0.8935175828016697, 0.9014947119642164, 0.8873813207579988, 0.8844252534278585, 0.8748662648042274, 0.8727335632752748, 0.8791013592033653, 0.8699315868789462, 0.8685572088559889, 0.8659404139823571, 0.8682214983418759], "accuracy": [0.1006472036242485, 0.12151630967855453, 0.14859332144260406, 0.15810328722000122, 0.190859854221344, 0.2098798006772995, 0.22322018444538116, 0.2522784173488617, 0.26376965641975403, 0.2775062620639801, 0.294148713350296, 0.3163386583328247, 0.3230748772621155, 0.33483028411865234, 0.3505481481552124, 0.3623035252094269, 0.36903974413871765, 0.37564390897750854, 0.3999471664428711, 0.4060229957103729, 0.4127592146396637, 0.41725003719329834, 0.4263637661933899, 0.43006208539009094, 0.4472328722476959, 0.44604411721229553, 0.46110156178474426, 0.46810197830200195, 0.4784044325351715, 0.47549861669540405, 0.4931977391242981, 0.497820645570755, 0.49927353858947754, 0.5151234865188599, 0.5180293321609497, 0.5211992859840393, 0.5256901383399963, 0.5387663245201111, 0.5395588278770447, 0.5404834151268005, 0.5462950468063354, 0.5565975308418274, 0.5575221180915833, 0.5749570727348328, 0.566239595413208, 0.5774666666984558, 0.5691454410552979, 0.5835424661636353, 0.5889578461647034, 0.5827499628067017, 0.5939770340919495, 0.6079778075218201, 0.5999207496643066, 0.6034870147705078, 0.6050719618797302, 0.6095628142356873, 0.6115440726280212, 0.6206578016281128, 0.6244881749153137, 0.6264694333076477, 0.6259410977363586, 0.6259410977363586, 0.6337339878082275, 0.6394135355949402, 0.6371681690216064, 0.6402060389518738, 0.6424514651298523, 0.6404702067375183, 0.6474705934524536, 0.6514331102371216, 0.6519614458084106, 0.6551313996315002, 0.6501122713088989, 0.6557918190956116, 0.6567164063453674, 0.6623960137367249, 0.6584334969520569, 0.6583014130592346, 0.663848876953125, 0.6634526252746582, 0.665830135345459, 0.6728305220603943, 0.6692643165588379, 0.6742834448814392, 0.6761326193809509, 0.6824725866317749, 0.6723021864891052, 0.6783780455589294, 0.6758684515953064, 0.681547999382019, 0.6779817938804626, 0.6790384650230408, 0.6882842183113098, 0.6906617283821106, 0.6926429867744446, 0.6836613416671753, 0.6896050572395325, 0.6882842183113098, 0.6909258961677551, 0.6888125538825989], "val_loss": [1.9634391239711217, 1.9561150414603097, 1.9487429346357072, 1.9412344523838587, 1.933464595249721, 1.9252691950116838, 1.9165997505187988, 1.9072293554033553, 1.8970470428466797, 1.8861006328037806, 1.874171461377825, 1.8611435890197754, 1.8467522348676408, 1.830979483468192, 1.8135785375322615, 1.7944814137050085, 1.7737584114074707, 1.7511088507516044, 1.72634186063494, 1.699467658996582, 1.6703025613512312, 1.6389455114092146, 1.6058289323534285, 1.5708673000335693, 1.5337282589503698, 1.4956590788705009, 1.457005568913051, 1.4176220893859863, 1.3778934819357735, 1.3384671211242676, 1.299271481377738, 1.2607643944876534, 1.2235937799726213, 1.1881097384861536, 1.1545220102582658, 1.1234466688973563, 1.0941081047058105, 1.0665935448237829, 1.0406708376748222, 1.0164155960083008, 0.9941869803837368, 0.9727413313729423, 0.9528230598994664, 0.9342761039733887, 0.9166656221662249, 0.8998897756849017, 0.8849382059914725, 0.8707255295344761, 0.8573069061551776, 0.8450199706213815, 0.8330183540071759, 0.8219613347734723, 0.8115500041416713, 0.8015356745038714, 0.7923603739057269, 0.7837863309042794, 0.7756588969911847, 0.7677790948322841, 0.7605522360120501, 0.7530584675925118, 0.7461072887693133, 0.7394884484154838, 0.7333997147423881, 0.7277289628982544, 0.7221706765038627, 0.716428313936506, 0.7114027738571167, 0.705798728125436, 0.701327954019819, 0.6974138362067086, 0.6928846325193133, 0.6886040994099208, 0.6847914797919137, 0.6804561785289219, 0.6768048320497785, 0.6733638729367938, 0.6698733568191528, 0.6664842196873256, 0.6635042599269322, 0.6604664496013096, 0.6574983426502773, 0.6545626265662057, 0.6516762460981097, 0.6483473777770996, 0.6456637723105294, 0.6427740710122245, 0.640216452734811, 0.6376362868717739, 0.635454535484314, 0.6328906502042498, 0.6307227611541748, 0.6283432756151471, 0.6256745713097709, 0.6231592212404523, 0.6208645275660923, 0.6189532279968262, 0.6166478225163051, 0.6150206668036324, 0.6134277752467564, 0.6117077725274223], "val_accuracy": [0.09066666662693024, 0.16033333539962769, 0.23266667127609253, 0.2893333435058594, 0.33500000834465027, 0.3646666705608368, 0.3799999952316284, 0.398333340883255, 0.4126666784286499, 0.42533332109451294, 0.4413333237171173, 0.4503333270549774, 0.4596666693687439, 0.47200000286102295, 0.4803333282470703, 0.49566665291786194, 0.5036666393280029, 0.5176666378974915, 0.5270000100135803, 0.5379999876022339, 0.5443333387374878, 0.5540000200271606, 0.5556666851043701, 0.562666654586792, 0.5706666707992554, 0.5773333311080933, 0.5820000171661377, 0.5886666774749756, 0.5933333039283752, 0.5950000286102295, 0.5993333458900452, 0.6066666841506958, 0.6086666584014893, 0.6140000224113464, 0.6230000257492065, 0.637666642665863, 0.6463333368301392, 0.6520000100135803, 0.6573333144187927, 0.6666666865348816, 0.6706666946411133, 0.6759999990463257, 0.6766666769981384, 0.6796666383743286, 0.6826666593551636, 0.684333324432373, 0.6899999976158142, 0.6899999976158142, 0.6940000057220459, 0.6943333148956299, 0.6966666579246521, 0.6986666917800903, 0.6996666789054871, 0.7023333311080933, 0.703000009059906, 0.7039999961853027, 0.7039999961853027, 0.706333339214325, 0.7083333134651184, 0.7110000252723694, 0.7113333344459534, 0.7126666903495789, 0.7146666646003723, 0.7153333425521851, 0.715666651725769, 0.7179999947547913, 0.7196666598320007, 0.721666693687439, 0.7223333120346069, 0.7233333587646484, 0.721666693687439, 0.7226666808128357, 0.7239999771118164, 0.7250000238418579, 0.7269999980926514, 0.7286666631698608, 0.7263333201408386, 0.7279999852180481, 0.7286666631698608, 0.7306666374206543, 0.7319999933242798, 0.734000027179718, 0.7323333621025085, 0.7316666841506958, 0.7329999804496765, 0.7336666584014893, 0.734333336353302, 0.7366666793823242, 0.7356666922569275, 0.7356666922569275, 0.7366666793823242, 0.7363333106040955, 0.7369999885559082, 0.7379999756813049, 0.7393333315849304, 0.7413333058357239, 0.7416666746139526, 0.7406666874885559, 0.7433333396911621, 0.7433333396911621]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [0, 0, 2, 1], [47, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.26600000262260437, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2486964296812806, 2.662689311897057, 2.3039156103556135, 2.3031872649942926, 2.3029803918290055, 2.3025633381846213], "accuracy": [0.21859727799892426, 0.11821424216032028, 0.09298639744520187, 0.09615638852119446, 0.09219389408826828, 0.10091137140989304], "val_loss": [1.824951444353376, 1.974839414869036, 1.97376925604684, 1.9736179624285017, 1.9736663954598563, 1.973447254725865], "val_accuracy": [0.28833332657814026, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.16699999570846558]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 1, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2639999985694885, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2486117695773267, 2.599290183097175, 2.3038902161159474, 2.3031365328839017, 2.302923660142279, 2.3025201819025214], "accuracy": [0.21925769746303558, 0.12151630967855453, 0.09668471664190292, 0.09774138033390045, 0.09628847241401672, 0.10645885765552521], "val_loss": [1.8122859682355608, 1.9748036520821708, 1.973778520311628, 1.973661150251116, 1.9735709599086217, 1.9730992317199707], "val_accuracy": [0.2926666736602783, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.12666666507720947, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 5, 9, 9, 1], [0, 1, 3, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 0, 5, 1, 4, 0, 2, 8, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 3, 3, 0, 3, 2, 5, 2], [42], [0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [4, 5, 1, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 15, 15, 9, 6, 1, 3, 1, 1, 0, 0, 10, 5, 5, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.negative(grad)), tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)))))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.subtract(sigma, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [2, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 1, 4, 1, 1, 5, 4], [42], [0, 0, 1], [1, 1, 1], [3, 4], [3, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [3, 0, 2, 1], [27, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0], [3, 4, 1, 9], [2, 3, 1, 5, 3, 4], [22], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 4, 2, 1, 10, 7, 3, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(sigma, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028314657781923, 2.3025850034770934, 2.3025850484777735, 2.3025850169867446, 2.3025849990053673, 2.30258502602467], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.09853387624025345, 0.09998679161071777, 0.09972262382507324, 0.10210011899471283], "val_loss": [1.973644392830985, 1.9736442565917969, 1.973644529070173, 1.973644392830985, 1.9736442565917969, 1.9736443247113908], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.0989999994635582, 0.09833333641290665, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028314027961345, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [1, 0, 2, 1], [6, 28, 79], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 1, 1, 1, 0, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028314027961345, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 9, 1], [3, 1, 3, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0], [4, 4, 6, 5], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [8, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1], [4, 5, 9, 4, 0], [1, 0, 2, 1], [6, 72, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 5, 0, 5, 0], [42, 47, 80], [0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 4], [0, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [4, 5, 8, 8, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 1, 2, 1, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 5, 3, 2, 1, 1, 9, 6, 3, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(alpha, tf.math.square(beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 1], [3, 0, 2, 1], [6, 28, 79], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 4, 4, 0, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 17, 17, 9, 8, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [2, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [9, 5, 8, 3, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 1, 4, 1, 1, 5, 4], [42], [0, 0, 1], [0, 1, 1], [3, 4, 9], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1], [3, 4], [3, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 1, 2, 5, 3, 3], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 1, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.061714284121990204, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, beta), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028111802021654, 2.3009126208414568, 2.299907454882536, 2.301606205397467, 2.29905956431686, 2.2995993980185516, 2.300188978066959, 2.2998041859108933, 2.299275653678129, 2.2995198253217928, 2.299971838227951, 2.300387492757416, 2.3002501648525127, 2.3003473592991717], "accuracy": [0.09311848133802414, 0.09311848133802414, 0.09813763201236725, 0.09391097724437714, 0.1022322028875351, 0.10077928751707077, 0.09734513610601425, 0.10342095047235489, 0.09457138925790787, 0.1010434553027153, 0.09760929644107819, 0.0956280529499054, 0.09959053993225098, 0.09496764093637466], "val_loss": [1.970078945159912, 1.969674723488944, 1.969534260886056, 1.9692446163722448, 1.9693676403590612, 1.9695067405700684, 1.9693602153233118, 1.9693081038338798, 1.9693913459777832, 1.969506059374128, 1.9697119849068778, 1.9699468612670898, 1.9701391628810339, 1.970311505453927], "val_accuracy": [0.04933333396911621, 0.054999999701976776, 0.061666667461395264, 0.06333333253860474, 0.06566666811704636, 0.07133333384990692, 0.07500000298023224, 0.07733333110809326, 0.07766667008399963, 0.07633333653211594, 0.07366666942834854, 0.07500000298023224, 0.07633333653211594, 0.07366666942834854]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [1, 0, 2, 1], [89, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033406855392102, 2.3022721735808545, 2.3015655557697694, 2.304104040138568, 2.301366222784929, 2.301597363976219], "accuracy": [0.09232597798109055, 0.08942015469074249, 0.09377889335155487, 0.0870426595211029, 0.09206181764602661, 0.09576013684272766], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [3, 4, 2, 6], [1, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033406855392102, 2.3022721735808545, 2.3015655557697694, 2.304104040138568, 2.301366222784929, 2.301597363976219], "accuracy": [0.09232597798109055, 0.08942015469074249, 0.09377889335155487, 0.0870426595211029, 0.09206181764602661, 0.09576013684272766], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 2], [2, 0, 2, 1], [6, 28, 79], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 9, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 3, 4, 0, 1], [42], [1, 1, 0, 0, 1], [0, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [25, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(beta)))), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033406855392102, 2.3022721735808545, 2.3015655557697694, 2.304104040138568, 2.301366222784929, 2.301597363976219], "accuracy": [0.09232597798109055, 0.08942015469074249, 0.09377889335155487, 0.0870426595211029, 0.09206181764602661, 0.09576013684272766], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 5, 9, 9, 1], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1], [3, 4, 2, 6], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033406855392102, 2.3022721735808545, 2.3015655557697694, 2.304104040138568, 2.301366222784929, 2.301597363976219], "accuracy": [0.09232597798109055, 0.08942015469074249, 0.09377889335155487, 0.0870426595211029, 0.09206181764602661, 0.09576013684272766], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]