[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5071428418159485, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301399754369421, 2.301335434163519, 2.2995583455576134, 2.2988448985075483, 2.2968563838578833, 2.295818790641868, 2.2946894970930263, 2.293769480073299, 2.2916192244135583, 2.290818493332546, 2.288643912836986, 2.2875252996280193, 2.2857148782089953, 2.284887225636402, 2.281825724908972, 2.2833719315262457, 2.281796931212746, 2.2797401535858994, 2.2794862852876276, 2.2772865468610815, 2.276462463576166, 2.2738487179158717, 2.2734937524877408, 2.2726737683270635, 2.2710488477418953, 2.2703999550335316, 2.2680308286933664, 2.266456710506566, 2.26635161530718, 2.2632146069339365, 2.2628160395941572, 2.2603488311067217, 2.2611304179725553, 2.2574138343137378, 2.2594545743468886, 2.256646800743449, 2.2547590593699027, 2.252084996517324, 2.2514995606568164, 2.2492951119281455, 2.2496936683720286, 2.2453339780720074, 2.245799098331631, 2.243967539031886, 2.2425733469480758, 2.2402052417360103, 2.2382824693641266, 2.2380791320115536, 2.235872607520228, 2.2345670423393065, 2.2314160396677707, 2.230555801060316, 2.228350460442727, 2.2265981780759976, 2.2275826791179587, 2.2239666691451196, 2.2216909985422, 2.221446361398149, 2.2195137151086555, 2.2152215376065283, 2.215430342557487, 2.2134996914451053, 2.2109737047319635, 2.208584055499378, 2.2073831673169795, 2.2031574890424923, 2.202426481020213, 2.2005628533036465, 2.197907041832598, 2.19581731300092, 2.193521420622798, 2.1887843744267625, 2.189880892553696, 2.184626118035569, 2.183585967936961, 2.1826216453385467, 2.178011481126758, 2.1752395742305786, 2.172801017194392, 2.17053452317174, 2.1669885853041966, 2.165633212620981, 2.1623620774688943, 2.160789243895632, 2.157674599537807, 2.152108139349973, 2.1521349504654985, 2.1502905116498807, 2.146539560603176, 2.1428149889929733, 2.1395943017132515, 2.1364371354601026, 2.1349561121233576, 2.129769868728523, 2.127767573762107, 2.123756039175674, 2.118979667108828, 2.119185305731313, 2.1169198887018466, 2.110224199458797], "accuracy": [0.09259014576673508, 0.09377889335155487, 0.09100515395402908, 0.09576013684272766, 0.10540219396352768, 0.11121384054422379, 0.1088363528251648, 0.11306300014257431, 0.11953506618738174, 0.120459645986557, 0.1266675442457199, 0.12693171203136444, 0.13181878626346588, 0.1352529376745224, 0.146479994058609, 0.14053626358509064, 0.1526878923177719, 0.14357416331768036, 0.14991414546966553, 0.16193369030952454, 0.15110288560390472, 0.1640470176935196, 0.17051908373832703, 0.16642451286315918, 0.17302866280078888, 0.17778365314006805, 0.18716153502464294, 0.18716153502464294, 0.1868973672389984, 0.19970941543579102, 0.19852067530155182, 0.20552106201648712, 0.20076608657836914, 0.20657773315906525, 0.20855897665023804, 0.21463479101657867, 0.21516312658786774, 0.21476687490940094, 0.21925769746303558, 0.22612600028514862, 0.22295601665973663, 0.24065512418746948, 0.23074890673160553, 0.2382776439189911, 0.240919291973114, 0.2413155436515808, 0.24924051761627197, 0.25003302097320557, 0.2557125985622406, 0.2537313401699066, 0.26244881749153137, 0.2641659080982208, 0.2689208686351776, 0.2673358917236328, 0.2681283950805664, 0.28080835938453674, 0.27618545293807983, 0.2793554365634918, 0.2829216718673706, 0.2864879071712494, 0.28424251079559326, 0.2891295850276947, 0.29097872972488403, 0.2957337200641632, 0.29612997174263, 0.30643242597579956, 0.30762118101119995, 0.30101704597473145, 0.30484744906425476, 0.31343284249305725, 0.3123761713504791, 0.3206973969936371, 0.3151499032974243, 0.32505613565444946, 0.3229427933692932, 0.32479196786880493, 0.33007529377937317, 0.3362831771373749, 0.3361510932445526, 0.3333773612976074, 0.3407739996910095, 0.3337736129760742, 0.3323206901550293, 0.33747193217277527, 0.3451327383518219, 0.35028398036956787, 0.34843480587005615, 0.3541143834590912, 0.3605864346027374, 0.35186898708343506, 0.3564918637275696, 0.3605864346027374, 0.3572843670845032, 0.35847312211990356, 0.3673226833343506, 0.36402061581611633, 0.3704926669597626, 0.36402061581611633, 0.3607185184955597, 0.37287017703056335], "val_loss": [1.9697744505746024, 1.9685297693525041, 1.9673060008457728, 1.9660793031964983, 1.9648573739188058, 1.9636402130126953, 1.9624323844909668, 1.9612084797450475, 1.9600037847246443, 1.95880583354405, 1.9575981412615096, 1.956395489828927, 1.9551999909537179, 1.954003197806222, 1.9527947562081474, 1.9515952382768904, 1.9503921100071497, 1.9491785594395228, 1.947955540248326, 1.9467281614031111, 1.9455037117004395, 1.9442586217607771, 1.943018913269043, 1.9417753900800432, 1.9405315262930733, 1.9392760821751185, 1.9379987716674805, 1.9367156028747559, 1.93545286996024, 1.9341559410095215, 1.9328394617353166, 1.9315272058759416, 1.9302077293395996, 1.9288602556501115, 1.9275008610316686, 1.9261417388916016, 1.9247702871050154, 1.9233811242239816, 1.921980312892369, 1.9205513000488281, 1.9191182000296456, 1.9176648684910365, 1.91621276310512, 1.9147419929504395, 1.9132427488054549, 1.9117324011666434, 1.9101934432983398, 1.9086523737226213, 1.9070696149553572, 1.9054876736232214, 1.9038547788347517, 1.9022101674761092, 1.9005534308297294, 1.8988686970302038, 1.897184235709054, 1.8954640797206335, 1.8937203543526786, 1.8919577598571777, 1.8901843343462263, 1.8883413587297713, 1.8864989280700684, 1.8846334729875838, 1.8827314376831055, 1.8808008602687292, 1.8788510731288366, 1.8768527167184013, 1.8748475483485632, 1.8727864537920271, 1.8707028116498674, 1.8685849734715052, 1.8664260591779436, 1.8642262731279646, 1.8619910648890905, 1.8597266333443778, 1.8574420383998327, 1.8551090104239327, 1.8527280943734306, 1.8503131185259138, 1.8478566578456335, 1.8453645024980818, 1.8428221430097307, 1.8402825083051408, 1.8376500265938895, 1.8349999700273787, 1.8322991643633162, 1.8295369829450334, 1.8267759595598494, 1.8239717483520508, 1.8211133139474052, 1.8182110786437988, 1.8152575492858887, 1.8122514997209822, 1.8092240606035506, 1.80613831111363, 1.8030005863734655, 1.7998213086809431, 1.7965875353131975, 1.7933179991585868, 1.7900302750723702, 1.7866367612566267], "val_accuracy": [0.04633333161473274, 0.05366666615009308, 0.060333333909511566, 0.06933332979679108, 0.07766667008399963, 0.08933333307504654, 0.09700000286102295, 0.10499999672174454, 0.11699999868869781, 0.12966667115688324, 0.14133332669734955, 0.15700000524520874, 0.17000000178813934, 0.18199999630451202, 0.19300000369548798, 0.2070000022649765, 0.2163333296775818, 0.22766666114330292, 0.23766666650772095, 0.24799999594688416, 0.25833332538604736, 0.2696666717529297, 0.2800000011920929, 0.2863333225250244, 0.29466667771339417, 0.3050000071525574, 0.31433331966400146, 0.32100000977516174, 0.3266666531562805, 0.33266666531562805, 0.3373333215713501, 0.343666672706604, 0.34599998593330383, 0.3513333201408386, 0.3556666672229767, 0.3610000014305115, 0.36500000953674316, 0.367000013589859, 0.3686666786670685, 0.3726666569709778, 0.37400001287460327, 0.37700000405311584, 0.38100001215934753, 0.38466668128967285, 0.38600000739097595, 0.3869999945163727, 0.3903333246707916, 0.3930000066757202, 0.39500001072883606, 0.398333340883255, 0.4009999930858612, 0.40166667103767395, 0.4050000011920929, 0.406333327293396, 0.4086666703224182, 0.41100001335144043, 0.414000004529953, 0.4176666736602783, 0.41866666078567505, 0.421999990940094, 0.4246666729450226, 0.4266666769981384, 0.429666668176651, 0.43066665530204773, 0.4326666593551636, 0.4363333284854889, 0.43833333253860474, 0.4403333365917206, 0.4423333406448364, 0.4436666667461395, 0.44433334469795227, 0.44566667079925537, 0.44566667079925537, 0.44699999690055847, 0.4490000009536743, 0.45266667008399963, 0.4543333351612091, 0.4543333351612091, 0.4569999873638153, 0.4583333432674408, 0.4606666564941406, 0.460999995470047, 0.4633333384990692, 0.4659999907016754, 0.46666666865348816, 0.4690000116825104, 0.47066667675971985, 0.47200000286102295, 0.47333332896232605, 0.47699999809265137, 0.4779999852180481, 0.47999998927116394, 0.48266667127609253, 0.48366665840148926, 0.4866666793823242, 0.4873333275318146, 0.4893333315849304, 0.49033331871032715, 0.492333322763443, 0.49266666173934937]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 2, 9, 4], [0, 0, 2, 1], [78, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 0, 1], [3, 7], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5062857270240784, "mapping_values": [1, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301399479988087, 2.301333922688609, 2.299556294357961, 2.298841835123248, 2.2968527311819606, 2.295815304459015, 2.294685376428925, 2.293766191591125, 2.291615513132831, 2.290815983277113, 2.2886422846248324, 2.287523288862848, 2.2857156072578033, 2.2848906577806494, 2.281830223370946, 2.283378521716826, 2.2818053479774707, 2.279751925719743, 2.2795001990003767, 2.277304737559399, 2.2764825806436977, 2.2738752769457116, 2.2735210710182137, 2.2727044384162407, 2.2710828689174125, 2.270438695769536, 2.2680730011012527, 2.2665057220731066, 2.2664033794415674, 2.263275566070843, 2.262879112062516, 2.260421474360047, 2.261205942717998, 2.25750102330476, 2.2595409320062414, 2.2567409540069825, 2.2548587001656433, 2.252194735856183, 2.251617163620479, 2.2494228535859877, 2.2498242038824556, 2.245481055788376, 2.245949068561978, 2.244126934212244, 2.2427448414540674, 2.2403862549093154, 2.2384754577884114, 2.238279767811747, 2.2360906564422556, 2.2347930642859715, 2.2316636970219217, 2.2308178904380593, 2.228627022750909, 2.22688779615534, 2.2278733146094596, 2.2242815405417744, 2.222031203400835, 2.2217942034610902, 2.219872207689468, 2.215613025196193, 2.2158273970052598, 2.21391922261469, 2.211418766119477, 2.2090480756199105, 2.2078708414829262, 2.2036765387596438, 2.202966038136198, 2.201126796222083, 2.198498473175607, 2.19642594370466, 2.1941602561042735, 2.189461558643916, 2.190573515877543, 2.1853697017167835, 2.184345514137259, 2.1834085497165225, 2.1788472249098207, 2.176121691765645, 2.173717835764796, 2.171496369756523, 2.1679938305890194, 2.166659703422862, 2.163453550764504, 2.1619064370796366, 2.158847201596382, 2.1533406454700255, 2.1533814553240775, 2.1516018684718743, 2.1479060427545162, 2.144255743900924, 2.1410771926254597, 2.1379910765889614, 2.1365556588120636, 2.131454000541043, 2.1295084668314295, 2.1255569296458834, 2.1208762972346387, 2.121101590038023, 2.118891286434294, 2.1123225136581683], "accuracy": [0.09259014576673508, 0.09377889335155487, 0.09100515395402908, 0.09576013684272766, 0.10553427785634995, 0.11108175665140152, 0.10896842926740646, 0.11306300014257431, 0.11953506618738174, 0.120459645986557, 0.1266675442457199, 0.12693171203136444, 0.13195087015628815, 0.13512085378170013, 0.14674416184425354, 0.1402720957994461, 0.15255580842494965, 0.14370624721050262, 0.14991414546966553, 0.16193369030952454, 0.15149913728237152, 0.16391493380069733, 0.17038699984550476, 0.1666886806488037, 0.17302866280078888, 0.17804782092571259, 0.18716153502464294, 0.18742570281028748, 0.18702945113182068, 0.19957733154296875, 0.19852067530155182, 0.20499274134635925, 0.20063400268554688, 0.20657773315906525, 0.20842689275741577, 0.2145027071237564, 0.21516312658786774, 0.2145027071237564, 0.21899352967739105, 0.22586184740066528, 0.22282393276691437, 0.23999471962451935, 0.23074890673160553, 0.23814556002616882, 0.24025888741016388, 0.24118345975875854, 0.2491084337234497, 0.24976885318756104, 0.25584468245506287, 0.25399550795555115, 0.26218464970588684, 0.26403382420539856, 0.2685246467590332, 0.2670717239379883, 0.26826047897338867, 0.2806762754917145, 0.27605336904525757, 0.2790912687778473, 0.28278958797454834, 0.28701624274253845, 0.28424251079559326, 0.28886541724205017, 0.29124289751052856, 0.29560163617134094, 0.2954695522785187, 0.30722492933273315, 0.3074890971183777, 0.30062079429626465, 0.30418702960014343, 0.31382909417152405, 0.3127724230289459, 0.3197728097438812, 0.31541407108306885, 0.3255844712257385, 0.32333904504776, 0.32479196786880493, 0.33020737767219543, 0.3353586196899414, 0.33483028411865234, 0.3329811096191406, 0.3409060835838318, 0.3339056968688965, 0.33258485794067383, 0.3377360999584198, 0.3455289900302887, 0.35081231594085693, 0.3485668897628784, 0.35464271903038025, 0.3607185184955597, 0.351340651512146, 0.3563597798347473, 0.3603222966194153, 0.3564918637275696, 0.35807687044143677, 0.3671905994415283, 0.3637564480304718, 0.3700964152812958, 0.36388853192329407, 0.3603222966194153, 0.3719455897808075], "val_loss": [1.9697737012590681, 1.9685279982430595, 1.967303684779576, 1.966076237814767, 1.9648541041782923, 1.9636372838701521, 1.9624298640659876, 1.9612063680376326, 1.9600021498543876, 1.9588048798697335, 1.9575980731419154, 1.9563967159816198, 1.9552029882158553, 1.9540085111345564, 1.9528022493634904, 1.9516050474984306, 1.9504047802516393, 1.9491938863481795, 1.9479735919407435, 1.9467487335205078, 1.9455274173191615, 1.9442860058375768, 1.9430503164018904, 1.9418106760297502, 1.94057035446167, 1.939319678715297, 1.938046932220459, 1.9367688042776925, 1.9355109759739466, 1.9342188153948103, 1.932908398764474, 1.9316025461469377, 1.9302896090916224, 1.9289498329162598, 1.9275965690612793, 1.926243782043457, 1.9248786653791154, 1.9234976087297713, 1.9221045630318778, 1.9206829752240862, 1.9192585263933455, 1.9178146634783064, 1.9163715498788017, 1.914910180228097, 1.9134221758161272, 1.9119227273123605, 1.910395894731794, 1.9088659286499023, 1.9072955676487513, 1.9057274545942033, 1.9041075706481934, 1.9024772644042969, 1.9008349691118513, 1.8991655622209822, 1.8974971771240234, 1.8957930292401994, 1.894066265651158, 1.8923202923366003, 1.8905641692025321, 1.8887402670724052, 1.8869165011814661, 1.8850721631731306, 1.8831913130623954, 1.8812822614397322, 1.8793553624834334, 1.8773813247680664, 1.875401428767613, 1.8733654703412737, 1.8713086673191615, 1.869217872619629, 1.8670872960771834, 1.8649157796587263, 1.862710612160819, 1.8604788780212402, 1.8582265717642648, 1.8559263093130929, 1.853581428527832, 1.851203782217843, 1.848787716456822, 1.8463374546595983, 1.8438386235918318, 1.8413424491882324, 1.8387541770935059, 1.8361507143293108, 1.8334959575108118, 1.8307839802333288, 1.8280737740652901, 1.8253223555428642, 1.8225188936505998, 1.8196749005998885, 1.8167802265712194, 1.8138378688267298, 1.8108711242675781, 1.8078509739467077, 1.8047761917114258, 1.8016626494271415, 1.7984987667628698, 1.7953007561819894, 1.7920854432242257, 1.788766656603132], "val_accuracy": [0.04633333161473274, 0.05366666615009308, 0.060333333909511566, 0.06966666877269745, 0.07766667008399963, 0.08933333307504654, 0.09700000286102295, 0.10533333569765091, 0.11733333021402359, 0.12966667115688324, 0.14133332669734955, 0.15733332931995392, 0.16966666281223297, 0.1823333352804184, 0.1940000057220459, 0.20766666531562805, 0.2163333296775818, 0.2280000001192093, 0.2383333295583725, 0.24833333492279053, 0.257999986410141, 0.27000001072883606, 0.2796666622161865, 0.28700000047683716, 0.2943333387374878, 0.3050000071525574, 0.31466665863990784, 0.32066667079925537, 0.3266666531562805, 0.3316666781902313, 0.33633333444595337, 0.3426666557788849, 0.3466666638851166, 0.351666659116745, 0.35633334517478943, 0.36133334040641785, 0.36500000953674316, 0.367000013589859, 0.3683333396911621, 0.3726666569709778, 0.37433332204818726, 0.37700000405311584, 0.3816666603088379, 0.38499999046325684, 0.3856666684150696, 0.38733333349227905, 0.3903333246707916, 0.3933333456516266, 0.39633333683013916, 0.398333340883255, 0.4009999930858612, 0.4020000100135803, 0.40433332324028015, 0.406333327293396, 0.4086666703224182, 0.4113333225250244, 0.414000004529953, 0.41733333468437195, 0.4189999997615814, 0.4206666648387909, 0.42399999499320984, 0.42500001192092896, 0.42899999022483826, 0.43166667222976685, 0.4336666762828827, 0.4350000023841858, 0.43799999356269836, 0.4399999976158142, 0.4429999887943268, 0.4436666667461395, 0.44433334469795227, 0.4449999928474426, 0.445333331823349, 0.44566667079925537, 0.4493333399295807, 0.45100000500679016, 0.45399999618530273, 0.4546666741371155, 0.4566666781902313, 0.4580000042915344, 0.4593333303928375, 0.46133333444595337, 0.4620000123977661, 0.4646666646003723, 0.46700000762939453, 0.46799999475479126, 0.4699999988079071, 0.4713333249092102, 0.47333332896232605, 0.47600001096725464, 0.476666659116745, 0.47833332419395447, 0.47966668009757996, 0.48233333230018616, 0.48500001430511475, 0.48633334040641785, 0.48899999260902405, 0.4906666576862335, 0.492333322763443, 0.4946666657924652]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [86, 28, 21], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3091428577899933, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.414905213409049, 2.280066516436858, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17434948682785034, 0.17791573703289032, 0.13802668452262878, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9506525312151228, 1.9072973387581962, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06866666674613953, 0.1926666647195816, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 9, 4, 9], [2, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [7, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [3, 6, 2, 4, 6, 0], [1, 0, 2, 1, 2, 2], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [1, 1, 0], [3, 9], [7, 0, 1, 5, 3, 4], [13], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302053479911503, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1], [3, 7, 7, 7, 1], [0, 0, 1, 5, 3, 4], [56, 75], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 11, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), sigma)), sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [294178512574.94946, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2824571684983931e+20, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 2, 2, 1, 4, 3], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(beta, beta), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [6, 28, 21], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 8, 4, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 3, 3, 0, 1, 3, 4, 0], [42, 53], [0, 1, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 1, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, grad), grad)), tf.math.add(beta, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 2], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [18], [0, 0, 0], [1, 1, 0], [3, 0], [2], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302053479911503, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [5, 9, 9, 4], [0, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 6], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [513775.36774541397, 8496409.88086118, 38518452.58169331, 104525042.77479857, 219801140.62184653, 401895571.8652754], "accuracy": [0.09826971590518951, 0.09628847241401672, 0.09879804402589798, 0.09576013684272766, 0.10421344637870789, 0.10249637067317963], "val_loss": [1792729.0357142857, 13273051.42857143, 43625793.14285714, 102040946.28571428, 197706614.85714287, 339811510.85714287], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 1], [7, 5, 3, 4], [1, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [67, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302053479911503, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302053479911503, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [71], [0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1], [3, 7, 9, 4], [2, 0, 1, 5, 3, 4], [97], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019410521835146, 2.3032182196049154, 2.302728408520736, 2.3033252131779904, 2.3026763860339488, 2.3029145417574326], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08466517180204391, 0.0886276587843895, 0.09153348207473755, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 9, 4, 9], [0, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019410521835146, 2.3032182196049154, 2.302728408520736, 2.3033252446690193, 2.30267635454292, 2.3029145732484615], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08466517180204391, 0.0886276587843895, 0.09153348207473755, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068702697754, 1.9710068021501814, 1.9710068702697754], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [8, 2, 9, 4, 9], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 0, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019410521835146, 2.3032182196049154, 2.302728408520736, 2.3033252131779904, 2.3026763860339488, 2.3029145417574326], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08466517180204391, 0.0886276587843895, 0.09153348207473755, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [46, 28, 21], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 3, 0, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019410521835146, 2.3032182196049154, 2.302728408520736, 2.3033252131779904, 2.3026763860339488, 2.3029145417574326], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08466517180204391, 0.0886276587843895, 0.09153348207473755, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [1, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019410521835146, 2.3032182196049154, 2.302728408520736, 2.3033252131779904, 2.3026763860339488, 2.3029145417574326], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08466517180204391, 0.0886276587843895, 0.09153348207473755, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 1, 1], [0, 1, 0], [3, 7], [2, 0, 1, 5, 3, 4], [8], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019410521835146, 2.3032182196049154, 2.302728408520736, 2.3033252131779904, 2.3026763860339488, 2.3029145417574326], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08466517180204391, 0.0886276587843895, 0.09153348207473755, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [1, 0, 0], [0, 1, 0], [0, 9], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019410521835146, 2.3032182196049154, 2.302728408520736, 2.3033252131779904, 2.3026763860339488, 2.3029145417574326], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08466517180204391, 0.0886276587843895, 0.09153348207473755, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]