[{"genotype": [[0], [1], [1], [], [1, 0], [51], [1], [1], [], [5], [], [1], [], [], [], [], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [4, 5, 5, 1, 1, 5, 1], [3, 2, 2, 3, 0, 0, 0], [73]], "fitness": -0.23714286088943481, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.subtract(sigma, beta)), beta), sigma))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031251540730073, 2.2971303153740275, 2.2861381516149883, 2.27931280007625, 2.268918170023273, 2.28723222584914, 2.284013710726112, 2.2877196265155013], "accuracy": [0.09642054885625839, 0.10857218503952026, 0.15255580842494965, 0.15572579205036163, 0.15215955674648285, 0.12455421686172485, 0.13868708908557892, 0.14014001190662384], "val_loss": [1.969510623386928, 1.9602336202348982, 1.9531652586800712, 1.940006937299456, 1.9353579112461634, 1.9602184976850237, 1.9543685913085938, 1.963804108755929], "val_accuracy": [0.050999999046325684, 0.15033333003520966, 0.24033333361148834, 0.2293333262205124, 0.23866666853427887, 0.17933332920074463, 0.1770000010728836, 0.16066665947437286]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1], [1, 2, 6], [1, 0, 2, 1], [51, 76], [1, 0, 1, 1], [1], [], [3, 2, 3], [], [0, 0], [0, 1], [0], [3], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 7, 5], [0, 2, 0, 3], [4]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301633821612635, 2.302567130082382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1], [3, 4], [1, 0, 3], [6, 61], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 2, 0, 3, 2, 2, 7, 8, 6, 5, 8, 2, 6, 4, 6, 0, 7, 1, 6, 6, 9, 7, 2, 1, 2, 2, 1, 5, 4, 6, 3, 1, 5, 8, 0], [1, 2, 3, 2, 5, 4, 4, 0, 5, 4, 3, 3, 5, 0, 0, 0, 0, 5, 3, 4, 5, 3, 3, 2, 4], [31, 2, 58, 32, 77, 85], [1], [1], [], [5], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 5, 1, 1, 0, 1], [0, 2, 0, 3], [4]], "fitness": -0.10285714268684387, "mapping_values": [1, 5, 5, 2, 3, 1, 60, 60, 35, 25, 6, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, beta)), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.square(grad)))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, grad))))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad)))), grad)), tf.math.add(beta, grad))))))))))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.square(grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.negative(beta))))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301633821612635, 2.302567130082382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1], [1, 2, 6], [1, 0], [51, 1], [1], [1], [0, 7], [3, 2, 3, 2], [], [0], [1], [], [5], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 7, 5], [0, 2, 0, 3], [4]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301633821612635, 2.302567130082382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 2, 6, 5], [0, 1, 0, 3, 0, 0], [15, 61, 40, 91, 91, 54], [1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1], [], [0, 2, 3, 2], [78], [0, 0], [0, 1], [0], [5], [19], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 7, 5], [0, 2, 0, 3], [4]], "fitness": -0.10285714268684387, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301633821612635, 2.302567130082382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0], [1], [1, 2, 6], [1, 0], [6, 61], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 7, 9, 3, 0, 0], [5, 5, 1], [81], [0], [0], [9], [3], [35], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 3, 9, 7, 1, 1, 8], [3, 2, 2, 3, 0, 0, 0], [4]], "fitness": -0.10057143121957779, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(tf.math.negative(alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029095273464426, 2.3024298852823035, 2.299955316585651, 2.300943563800399, 2.3004443154217245, 2.301302023126685, 2.300600367955339, 2.30112950125737, 2.300913427452669, 2.3010479778803226, 2.3013557682987122, 2.3018746421699587, 2.3018363179343013], "accuracy": [0.09628847241401672, 0.09034473448991776, 0.10077928751707077, 0.09826971590518951, 0.10540219396352768, 0.09087307006120682, 0.10077928751707077, 0.09470347315073013, 0.10236428678035736, 0.09853387624025345, 0.1010434553027153, 0.10276053100824356, 0.09879804402589798], "val_loss": [1.9706354141235352, 1.9704712459019251, 1.9705160685947962, 1.970730917794364, 1.9711174964904785, 1.9715538706098283, 1.9719698769705636, 1.9723451478140694, 1.972665582384382, 1.9729063851492745, 1.973109313419887, 1.9732794761657715, 1.9734058380126953], "val_accuracy": [0.047333333641290665, 0.06066666543483734, 0.07199999690055847, 0.08299999684095383, 0.09433333575725555, 0.09933333098888397, 0.10100000351667404, 0.10400000214576721, 0.10266666859388351, 0.09666666388511658, 0.09066666662693024, 0.09166666865348816, 0.09300000220537186]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 4, 6, 3, 6, 0], [1, 3, 3, 3, 2, 2], [51, 1], [1, 1], [0, 1], [0, 7], [4], [], [0], [1], [], [6], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 8, 9, 7, 1, 1, 8], [0, 2, 0, 3], [4, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(grad)))))))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1442.4598335532653, 25423.549021347906, 116094.62448611479, 327952.3164996368, 686895.5788782856, 1264909.6516642452], "accuracy": [0.10289261490106583, 0.09734513610601425, 0.10632677376270294, 0.09879804402589798, 0.09694888442754745, 0.09840179979801178], "val_loss": [5269.955636160715, 40481.73772321428, 135020.22767857142, 318257.33035714284, 619566.6607142857, 1068322.107142857], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [1], [6, 2, 6, 0], [2, 0, 3, 2, 3, 2], [2], [0, 1, 1, 1, 0, 1, 1], [0, 1], [0, 2], [3, 2, 5], [], [1], [0], [], [], [], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [2, 1, 1, 7, 5, 0, 1], [1, 0, 0, 2, 1], [4, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 9, 4, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), beta)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1], [1, 2, 6], [0, 0, 0, 3], [6, 61], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1], [3, 2, 1, 2, 1, 4, 8, 2], [5, 4, 2, 1, 4, 0, 5, 5], [4], [1], [1], [], [], [], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [5, 6, 5, 1, 1, 5, 1], [1, 2, 2, 3, 0, 0, 0], [4]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3025844186571973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1], [0, 0, 1, 0, 1], [8, 2, 0], [2, 0, 3, 2, 3, 2], [51], [1, 0, 1, 1, 1], [1], [], [3, 1, 1, 1], [], [0, 0], [0, 1], [8], [2], [], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [4, 5, 5, 1, 1, 5, 1], [3, 2, 1, 3, 0, 0, 0], [73]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 12, 7, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.subtract(sigma, beta)), alpha), sigma))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 4, 6, 8], [1, 0, 2, 1], [51, 76], [0, 0, 1, 1], [1], [], [3, 2, 3], [], [0, 0, 1], [1, 1], [9], [7], [13], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 7, 5], [0, 2, 0, 3], [4, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(sigma)))))", "other_info": {"loss": [167968779841729.62, 13.060548988677853, 26.021075277564044, 38.975032004256995, 51.973646593478065, 64.93041128678297], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.603093419756208, 17.692047119140625, 28.776862008231028, 39.88383919852121, 50.97391401018415, 62.06074087960379], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1], [1], [], [1, 0, 3, 2, 3, 2], [51], [1, 0, 1, 1], [1], [0, 2], [3, 2, 3], [], [1], [1], [], [], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 7, 5, 1, 0], [3, 1, 2, 3, 0, 0, 0], [73, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, tf.math.subtract(tf.math.add(tf.math.square(tf.math.subtract(alpha, beta)), sigma), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [15117306158675.102, 2.5005798313706196, 2.6080315923016886, 3.5199608620777263, 6.439938729134659, 12.741016654983378, 24.869420759619, 44.56043195441068], "accuracy": [0.10276053100824356, 0.10117553919553757, 0.10249637067317963, 0.09826971590518951, 0.09893012791872025, 0.09813763201236725, 0.09998679161071777, 0.10077928751707077], "val_loss": [2.1274914060320174, 2.1524854387555803, 2.5036144256591797, 4.091046060834612, 8.021383285522461, 16.09441430228097, 29.794449942452566, 50.686837332589285], "val_accuracy": [0.0989999994635582, 0.09799999743700027, 0.10100000351667404, 0.10066666454076767, 0.09799999743700027, 0.10066666454076767, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [], [1, 0], [51], [1], [1], [], [5], [], [0], [1], [], [5], [], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [9, 5, 5, 5, 1, 5, 0], [3, 0, 2, 1, 0, 0, 0], [73]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025844186571973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1], [1], [6, 2, 6, 0], [1, 0], [51], [1, 0, 1, 1, 0, 1, 1], [1], [], [3, 2, 5], [], [1], [0], [], [], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 9, 5, 1, 1, 5, 1], [3, 2, 1, 3, 0, 0, 0], [4, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.square(sigma))", "other_info": {"loss": [2.3025844186571973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [7, 2, 2, 2, 7, 4, 2, 3, 5], [1, 0, 3, 2, 3, 2, 2, 3, 2], [6, 61, 40, 91, 91, 54], [1, 0, 1, 1], [0, 1], [0, 2], [3, 2, 3], [88], [1], [1], [], [5], [19], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 2, 5], [0, 2, 0, 1], [73, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 9, 9, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.square(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0], [1], [6, 2, 6, 0], [0, 2, 0, 3], [51, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 2, 2, 1, 4, 8, 2], [3, 2, 3, 2, 5, 1, 1, 5], [], [1], [0], [], [5], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [5, 5, 5, 1, 1, 5, 1], [3, 2, 2, 3, 0, 0, 0], [4]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 16, 16, 8, 8, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.math.pow(beta, tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032502762126, 2.303716333046912, 2.300948466071836, 2.3028124557462872, 2.302360633486817, 2.3041651359150483], "accuracy": [0.09615638852119446, 0.08453308790922165, 0.09760929644107819, 0.09179764986038208, 0.09338264167308807, 0.08849557489156723], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1], [1], [6, 2, 6, 0], [1, 0], [51], [1, 0, 1, 1, 0, 1, 1], [1], [], [5], [], [1], [0], [], [], [], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [6, 1, 1, 7, 5, 3, 5], [3, 2, 2, 3, 0, 3, 0], [73, 69]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.square(tf.math.multiply(tf.math.square(sigma), beta)), beta), sigma), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3032502762126, 2.303716333046912, 2.300948466071836, 2.3028124557462872, 2.302360633486817, 2.3041651359150483], "accuracy": [0.09615638852119446, 0.08453308790922165, 0.09760929644107819, 0.09179764986038208, 0.09338264167308807, 0.08849557489156723], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1], [1], [], [0, 0, 0, 3], [51], [1, 0, 1, 1, 0, 1, 1], [1], [3, 2, 1], [5], [], [1], [], [], [], [], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [8, 5, 5, 1, 1, 5, 9], [3, 3, 0, 3, 0, 0, 0], [4, 22]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 7, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.square(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), sigma), sigma))))", "other_info": {"loss": [2.3032502762126, 2.303716333046912, 2.300948466071836, 2.3028124557462872, 2.302360633486817, 2.3041651359150483], "accuracy": [0.09615638852119446, 0.08453308790922165, 0.09760929644107819, 0.09179764986038208, 0.09338264167308807, 0.08849557489156723], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0], [1], [6, 2, 6, 0], [0, 0, 0, 3], [6, 61], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 1, 2, 1, 4, 8, 9], [5, 4, 2, 1, 4, 0, 5, 5], [4], [0, 1, 0], [0, 1], [6], [5], [], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [5, 5, 5, 1, 0, 5, 1], [3, 2, 2, 3, 0, 0, 0], [4]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 6, 7, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(grad, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3032502762126, 2.303716333046912, 2.300948466071836, 2.3028124557462872, 2.302360633486817, 2.3041651359150483], "accuracy": [0.09615638852119446, 0.08453308790922165, 0.09760929644107819, 0.09179764986038208, 0.09338264167308807, 0.08849557489156723], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1], [1, 2, 6], [1, 0, 2, 1], [51, 76], [0], [1], [0, 7], [5], [], [0, 0, 0], [0, 0, 1], [5, 5], [7], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 7, 5], [3, 2, 2, 3, 0, 0, 0], [4]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303250406648442, 2.3037169223385336, 2.3009493612358205, 2.302813940201894, 2.302361956110027, 2.304167574044972], "accuracy": [0.09615638852119446, 0.08453308790922165, 0.09760929644107819, 0.09179764986038208, 0.09338264167308807, 0.0886276587843895], "val_loss": [1.9710072108677454, 1.9710073471069336, 1.9710078239440918, 1.97100830078125, 1.9710081645420618, 1.9710091182163783], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]