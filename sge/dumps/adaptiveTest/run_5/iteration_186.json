[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 6, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 93, 75, 78, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7908571362495422, "mapping_values": [1, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.square(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.284828033933487, 2.2335820323393376, 2.1535289786070124, 2.0217659850996625, 1.8291262739511795, 1.606882354870228, 1.4086903494268188, 1.2876382828892465, 1.19263721379968, 1.1155524432871713, 1.0658842860243152, 1.0114383967151699, 0.9812706685132354, 0.9379930947088625, 0.9222942995294494, 0.9029533286939255, 0.8804246560221319, 0.8573668262883263, 0.8400848217061514, 0.830572250457472, 0.8225782776411105, 0.8109181819968551, 0.7988350356983991, 0.7910150839526341, 0.7712284599580564, 0.7714744294324272, 0.7536918407559725, 0.7460024182854107, 0.7538667627534121, 0.7377642148269433, 0.7422524543013854, 0.7251308959756372, 0.7319649078228438, 0.7167369117668796, 0.7164484263804799, 0.7096142524174569, 0.703113208735356, 0.7045057251579049, 0.6892952283359931, 0.6843849669956433, 0.6833838166310062, 0.6721618853587169, 0.6730114474288382, 0.6587236860267333, 0.6620093462269115, 0.6691237167754052, 0.6663323005728041, 0.6597024256275189, 0.6455431534566616, 0.6432213732721059, 0.6416396666763481, 0.6486024912306504, 0.6508888657366075, 0.6384453074633878, 0.6415783856223997, 0.6362932409671446, 0.6403922259043929, 0.6226360872043453, 0.6294134970842461, 0.6145166812666089, 0.6271099647463525, 0.6208538394625539, 0.6199710001767257, 0.6128360267879626, 0.6135943747152506], "accuracy": [0.1410645842552185, 0.25214633345603943, 0.33562275767326355, 0.40589091181755066, 0.4492141008377075, 0.49689605832099915, 0.5381059050559998, 0.5580504536628723, 0.5847312211990356, 0.607449471950531, 0.6188086271286011, 0.6465460062026978, 0.6457535624504089, 0.6650376319885254, 0.6730946898460388, 0.6789063811302185, 0.6806234121322632, 0.6942279934883118, 0.6984546184539795, 0.703209638595581, 0.7018887996673584, 0.7058512568473816, 0.7057191729545593, 0.7129837274551392, 0.7224937081336975, 0.7199841737747192, 0.726192057132721, 0.7264562249183655, 0.7236824631690979, 0.7273808121681213, 0.7275128960609436, 0.7362303733825684, 0.7345132827758789, 0.7417778372764587, 0.7364945411682129, 0.7368907928466797, 0.7456082701683044, 0.7453441023826599, 0.7490423917770386, 0.7442874312400818, 0.7483819723129272, 0.7597411274909973, 0.7493065595626831, 0.7559106945991516, 0.7547219395637512, 0.7510236501693726, 0.7520803213119507, 0.7581561207771301, 0.7597411274909973, 0.7589486241340637, 0.7602694630622864, 0.7631752490997314, 0.7658169269561768, 0.7622507214546204, 0.76542067527771, 0.7644960880279541, 0.7663452625274658, 0.7668735980987549, 0.7700436115264893, 0.7778365015983582, 0.7680623531341553, 0.7754589915275574, 0.7714964747428894, 0.7761194109916687, 0.774798572063446], "val_loss": [1.926661559513637, 1.8681590216500419, 1.7676799637930733, 1.6022872924804688, 1.3777570383889335, 1.1630314077649797, 0.9977286202566964, 0.8908889974866595, 0.8191073111125401, 0.7668855530875069, 0.7331970419202533, 0.6965364217758179, 0.6775487661361694, 0.6548895154680524, 0.6432416268757412, 0.6316619089671544, 0.6237010444913592, 0.6041244098118373, 0.5939110347202846, 0.588362421308245, 0.5771042619432721, 0.5741751875196185, 0.569191745349339, 0.5595419066292899, 0.5552858454840524, 0.5516784191131592, 0.5425891195024762, 0.5403353316443307, 0.5356990950448173, 0.5301628453390939, 0.5281100102833339, 0.5265871967588153, 0.5189621448516846, 0.5145339454923358, 0.5174519845417568, 0.5122342109680176, 0.5053791999816895, 0.5050535712923322, 0.5024305071149554, 0.5005766323634556, 0.4953876733779907, 0.4929266316550119, 0.4890200751168387, 0.4886401891708374, 0.48895595754895893, 0.48224386147090365, 0.4877943992614746, 0.4780824865613665, 0.47515600068228586, 0.47673184531075613, 0.4721555198941912, 0.47305124146597727, 0.47244235447474886, 0.47001825060163227, 0.4675887312207903, 0.46701364857809885, 0.4625705139977591, 0.46172426428113666, 0.4632525954927717, 0.4637423413140433, 0.4608381305422102, 0.4591257742473057, 0.45742690563201904, 0.4596373864582607, 0.4559005158288138], "val_accuracy": [0.3440000116825104, 0.4266666769981384, 0.5026666522026062, 0.5506666898727417, 0.5893333554267883, 0.628333330154419, 0.6666666865348816, 0.6846666932106018, 0.7009999752044678, 0.7076666951179504, 0.7053333520889282, 0.7233333587646484, 0.7250000238418579, 0.7310000061988831, 0.7350000143051147, 0.7323333621025085, 0.7279999852180481, 0.7450000047683716, 0.7476666569709778, 0.749666690826416, 0.7556666731834412, 0.7593333125114441, 0.7540000081062317, 0.7630000114440918, 0.7570000290870667, 0.765999972820282, 0.7649999856948853, 0.7703333497047424, 0.7749999761581421, 0.7743333578109741, 0.7673333287239075, 0.7733333110809326, 0.7793333530426025, 0.7753333449363708, 0.7766666412353516, 0.7789999842643738, 0.7820000052452087, 0.7823333144187927, 0.7823333144187927, 0.7820000052452087, 0.781000018119812, 0.7863333225250244, 0.781000018119812, 0.7826666831970215, 0.7823333144187927, 0.7886666655540466, 0.7850000262260437, 0.7876666784286499, 0.7943333387374878, 0.7846666574478149, 0.7960000038146973, 0.7903333306312561, 0.7916666865348816, 0.7976666688919067, 0.796999990940094, 0.7943333387374878, 0.8040000200271606, 0.7996666431427002, 0.7950000166893005, 0.8056666851043701, 0.7929999828338623, 0.7996666431427002, 0.79666668176651, 0.8026666641235352, 0.7953333258628845]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 2, 6, 2, 4, 2, 5, 5, 5, 7, 5, 4, 0, 2, 3, 6, 6, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 1, 2, 2, 2, 2, 1, 0, 0, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7905714511871338, "mapping_values": [1, 35, 35, 20, 15, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), alpha)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2848281643693285, 2.2335825450447775, 2.1535406972690896, 2.0217833953085766, 1.829164980314726, 1.6068571722660208, 1.4086578177139821, 1.2875792473975805, 1.1925437755871915, 1.1154506451827566, 1.0658076193511856, 1.0113875774612295, 0.9811880824478028, 0.9379914940749775, 0.9222514640858239, 0.9028788712503037, 0.8803102530193618, 0.8573679169643635, 0.8400350249895346, 0.8304482587198493, 0.8227455000505156, 0.8109406786367421, 0.7988037170357377, 0.7909870932933881, 0.7712278940091595, 0.7713472527315147, 0.7535261235232713, 0.7459886784346317, 0.7539209744020492, 0.7377420896867232, 0.7422229546943849, 0.7251439221531031, 0.7317435316295672, 0.7169424200637419, 0.716453140603238, 0.7096799889245069, 0.7031931237947073, 0.7044489419912193, 0.6896568614619991, 0.6843989787872016, 0.6835364140476675, 0.6723257158772821, 0.6731265082004725, 0.658723132926176, 0.6621656693629364, 0.6694514059891333, 0.6662902209768521, 0.6596871873154978, 0.6457950883553469, 0.6429455855645051, 0.6418337039093474, 0.6490006051468512, 0.6511525161482671, 0.6385934733994932, 0.6417862279870806, 0.6361802073832532, 0.6404975693081947, 0.6228593449865932, 0.629490373243572, 0.6145335969561521, 0.6275477866140166, 0.620646358213373, 0.6202083042332084, 0.6131460275616644, 0.6138999917960327], "accuracy": [0.1410645842552185, 0.25214633345603943, 0.3354906737804413, 0.4060229957103729, 0.44908201694488525, 0.49689605832099915, 0.537709653377533, 0.5581825375556946, 0.5847312211990356, 0.6073173880577087, 0.6181482076644897, 0.6464139223098755, 0.6460176706314087, 0.6647734642028809, 0.6729626059532166, 0.6789063811302185, 0.6796988248825073, 0.6950204968452454, 0.698718786239624, 0.7038700580596924, 0.7017567157745361, 0.7057191729545593, 0.7058512568473816, 0.7131158113479614, 0.722757875919342, 0.7186633348464966, 0.7265883088111877, 0.7268524765968323, 0.7226257920265198, 0.7273808121681213, 0.7288337349891663, 0.7375511527061462, 0.7358341217041016, 0.741909921169281, 0.7376832365989685, 0.7357020378112793, 0.7457403540611267, 0.7452120184898376, 0.7491744756698608, 0.7445515990257263, 0.748249888420105, 0.7602694630622864, 0.7491744756698608, 0.755118191242218, 0.7535332441329956, 0.7510236501693726, 0.7519482374191284, 0.7577598690986633, 0.7598732113838196, 0.7588165402412415, 0.7604015469551086, 0.7637035846710205, 0.7658169269561768, 0.7627789974212646, 0.7646281719207764, 0.7640998363494873, 0.7667415142059326, 0.7664773464202881, 0.7709681391716003, 0.7766477465629578, 0.767930269241333, 0.7751948237419128, 0.7708360552787781, 0.7763835787773132, 0.7745344042778015], "val_loss": [1.9266619001116072, 1.8681597028459822, 1.7676959718976701, 1.60230895451137, 1.3777855464390345, 1.163006067276001, 0.9976649965558734, 0.890822206224714, 0.8190498522349766, 0.7668072325842721, 0.7330624035426548, 0.6964800698416573, 0.6775314296994891, 0.6547768115997314, 0.6430518797465733, 0.6315162011555263, 0.6236382722854614, 0.6040570565632412, 0.593888691493443, 0.5883347988128662, 0.5770965303693499, 0.5744811807359967, 0.5693763664790562, 0.5598329986844744, 0.5551610674176898, 0.5514128889356341, 0.5427012954439435, 0.5398799180984497, 0.5357539313180106, 0.5300166436604091, 0.5283263921737671, 0.5269790206636701, 0.519049848828997, 0.5145491872514997, 0.5172159671783447, 0.511855959892273, 0.5052297796521869, 0.5047870193208966, 0.5023378985268729, 0.5006514276776995, 0.4955558606556484, 0.4929922137941633, 0.48947259357997347, 0.48883875778743197, 0.4895303930555071, 0.48274682249341694, 0.48798087665012907, 0.4781606197357178, 0.475103565624782, 0.4766937664576939, 0.47256362438201904, 0.4730708088193621, 0.47278732912881033, 0.47025069168635775, 0.46762001514434814, 0.46684534209115164, 0.462875383240836, 0.4618191719055176, 0.462952767099653, 0.4637597458703177, 0.46117075851985384, 0.4592926672526768, 0.4576977491378784, 0.4596321242196219, 0.4561610903058733], "val_accuracy": [0.3440000116825104, 0.4266666769981384, 0.5026666522026062, 0.5506666898727417, 0.5896666646003723, 0.628333330154419, 0.6666666865348816, 0.6836666464805603, 0.7009999752044678, 0.7083333134651184, 0.7049999833106995, 0.7233333587646484, 0.7239999771118164, 0.7310000061988831, 0.734333336353302, 0.7326666712760925, 0.7276666760444641, 0.7440000176429749, 0.7476666569709778, 0.750333309173584, 0.7559999823570251, 0.7583333253860474, 0.7543333172798157, 0.7630000114440918, 0.7559999823570251, 0.765666663646698, 0.765333354473114, 0.7699999809265137, 0.7753333449363708, 0.7739999890327454, 0.765999972820282, 0.7730000019073486, 0.7789999842643738, 0.7746666669845581, 0.7770000100135803, 0.7789999842643738, 0.781333327293396, 0.781333327293396, 0.7820000052452087, 0.7833333611488342, 0.7793333530426025, 0.7860000133514404, 0.7806666493415833, 0.7850000262260437, 0.7820000052452087, 0.7873333096504211, 0.7839999794960022, 0.7883333563804626, 0.7956666946411133, 0.7846666574478149, 0.7956666946411133, 0.7900000214576721, 0.793666660785675, 0.7976666688919067, 0.796999990940094, 0.7943333387374878, 0.8050000071525574, 0.7996666431427002, 0.7953333258628845, 0.8073333501815796, 0.7929999828338623, 0.7990000247955322, 0.7973333597183228, 0.8023333549499512, 0.7963333129882812]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 2, 6, 6, 4, 2, 5, 5, 5, 7, 2, 4, 0, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 2, 1], [59, 83, 42, 75, 51, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7900000214576721, "mapping_values": [1, 34, 34, 19, 15, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.square(tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2848281148969223, 2.2335830533729646, 2.1535349256563117, 2.0217655386985838, 1.8291427698023268, 1.6068546323885833, 1.4086486643740939, 1.2875547092730233, 1.1925503518902283, 1.1154257472259588, 1.0657913855053982, 1.0113317927412306, 0.9811100028509383, 0.9380921807665127, 0.9222387813810092, 0.9028427497491294, 0.8803151254294304, 0.8574167884666811, 0.8401757801418307, 0.8304977828737389, 0.8226970622190285, 0.8110676613529172, 0.7989610928460009, 0.7909771035832657, 0.7712285723023017, 0.7716577471270931, 0.7536155095252819, 0.7463128564301389, 0.7541041545911378, 0.7377186033625283, 0.7421813742784761, 0.7250636374441829, 0.7321064505578977, 0.7168314543382571, 0.7164520627440494, 0.709651141756514, 0.7032521434778771, 0.7045409270186922, 0.6895054004935856, 0.6845717663069631, 0.6837015215746872, 0.6724774187046696, 0.6728565138738232, 0.6588953084492838, 0.6621872574787697, 0.6693699790612345, 0.6664269586768936, 0.6598502392813577, 0.645892300177181, 0.6430174720962806, 0.6417386430192539, 0.6491853634065027, 0.6513152818842933, 0.6385149439296639, 0.6417416154495902, 0.6363350686978482, 0.6404593575506194, 0.6228148980840417, 0.6292077945743365, 0.6147816255108052, 0.6274049975270246, 0.6208710255498159, 0.6200698927692403, 0.6130539008481801, 0.6138250890613909], "accuracy": [0.1410645842552185, 0.25201427936553955, 0.3354906737804413, 0.4060229957103729, 0.4493461847305298, 0.4967639744281769, 0.5375775694847107, 0.5581825375556946, 0.5847312211990356, 0.6075815558433533, 0.6188086271286011, 0.646149754524231, 0.6458855867385864, 0.6655659675598145, 0.6728305220603943, 0.6789063811302185, 0.6795667409896851, 0.6948884129524231, 0.698718786239624, 0.7034738063812256, 0.7020208835601807, 0.7053229212760925, 0.7057191729545593, 0.7131158113479614, 0.7230220437049866, 0.7191916704177856, 0.7259278893470764, 0.7265883088111877, 0.7220974564552307, 0.7271166443824768, 0.7280412316322327, 0.7372870445251465, 0.7351737022399902, 0.7417778372764587, 0.737022876739502, 0.7359662055969238, 0.7456082701683044, 0.7449478507041931, 0.7479857206344604, 0.7446836829185486, 0.7475894689559937, 0.7604015469551086, 0.7489103078842163, 0.7553823590278625, 0.7548540234565735, 0.7519482374191284, 0.7523444890975952, 0.7577598690986633, 0.7588165402412415, 0.7604015469551086, 0.7600052952766418, 0.7629110813140869, 0.7663452625274658, 0.7627789974212646, 0.7643640041351318, 0.7643640041351318, 0.765949010848999, 0.7666094303131104, 0.7703077793121338, 0.7769119143486023, 0.7681944370269775, 0.7761194109916687, 0.7711002230644226, 0.7769119143486023, 0.7758552432060242], "val_loss": [1.926661559513637, 1.868161405835833, 1.7676784651620048, 1.6022899832044328, 1.3778026103973389, 1.1630127770560128, 0.9976586954934257, 0.8907403264726911, 0.8190052509307861, 0.7667821475437709, 0.7330401284354073, 0.6964364051818848, 0.677620393889291, 0.6546905892235892, 0.6430469070162091, 0.6315982341766357, 0.6234512499400547, 0.6040892771312169, 0.5937994888850621, 0.5886145830154419, 0.577380895614624, 0.574562702860151, 0.5693874529429844, 0.5598680121558053, 0.5551490102495465, 0.5515597207205636, 0.5427495411464146, 0.5401526519230434, 0.5356183392660958, 0.5300893783569336, 0.5283241782869611, 0.5266085863113403, 0.5190234695162091, 0.514616778918675, 0.5172602449144635, 0.5118360349110195, 0.5052149295806885, 0.5049141645431519, 0.5023914405277797, 0.501021180834089, 0.49563011101314, 0.49332501207079205, 0.48932911668504986, 0.4889763763972691, 0.4894305637904576, 0.48289917196546284, 0.48841837474278044, 0.4781179598399571, 0.47542682715824675, 0.47723000390189035, 0.4726556198937552, 0.4732357604163034, 0.4726838895252773, 0.47039198875427246, 0.467754670551845, 0.46701226915631977, 0.46309820243290495, 0.46210016523088726, 0.46311538560049875, 0.464019775390625, 0.4606335163116455, 0.4592606169836862, 0.45752676895686556, 0.45988515445164274, 0.45605901309422087], "val_accuracy": [0.3440000116825104, 0.4266666769981384, 0.5026666522026062, 0.5503333210945129, 0.5893333554267883, 0.628333330154419, 0.6669999957084656, 0.6840000152587891, 0.7009999752044678, 0.7083333134651184, 0.7046666741371155, 0.7226666808128357, 0.7246666550636292, 0.7303333282470703, 0.734000027179718, 0.7319999933242798, 0.7276666760444641, 0.7433333396911621, 0.7476666569709778, 0.7493333220481873, 0.7553333044052124, 0.7580000162124634, 0.7540000081062317, 0.7633333206176758, 0.7566666603088379, 0.7673333287239075, 0.765333354473114, 0.7699999809265137, 0.7746666669845581, 0.7733333110809326, 0.765666663646698, 0.7736666798591614, 0.7789999842643738, 0.7736666798591614, 0.7763333320617676, 0.7786666750907898, 0.7820000052452087, 0.7816666960716248, 0.7823333144187927, 0.7836666703224182, 0.7799999713897705, 0.7863333225250244, 0.7799999713897705, 0.7836666703224182, 0.7816666960716248, 0.7870000004768372, 0.7846666574478149, 0.7889999747276306, 0.7963333129882812, 0.7839999794960022, 0.7960000038146973, 0.7900000214576721, 0.7926666736602783, 0.7986666560173035, 0.79666668176651, 0.7943333387374878, 0.8029999732971191, 0.7993333339691162, 0.7953333258628845, 0.8069999814033508, 0.7940000295639038, 0.8006666898727417, 0.796999990940094, 0.8026666641235352, 0.7953333258628845]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 5, 0, 1, 2, 6, 2, 9, 2, 6, 2, 2, 1, 2, 2, 1, 2, 3, 5, 0, 6, 2, 9, 5, 0, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [28], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7828571200370789, "mapping_values": [1, 39, 39, 23, 16, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.negative(grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.multiply(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), grad))), alpha)))))))))), tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293279965351192, 2.2667448885326515, 2.235781858247962, 2.198067931073327, 2.149252860553355, 2.079672448308539, 1.9860790187121224, 1.8773654147287826, 1.7550099780294701, 1.6250326027565976, 1.5161392482799891, 1.4126919481370428, 1.3373799720192787, 1.2659349464044405, 1.2165821653709215, 1.1733074645954527, 1.1243063707739653, 1.0800153930598813, 1.0559126536576282, 1.033021521952489, 1.0129116040809107, 0.9927480498703007, 0.9684410174965874, 0.9581795088556134, 0.9277207083422447, 0.9220392224480368, 0.8995567388097451, 0.8887143999184631, 0.8916631715172679, 0.870314615954655, 0.876034018866154, 0.8519516090092768, 0.856474140568684, 0.8399439541230097, 0.8358674102046187, 0.8246338880136107, 0.8189074001953414, 0.8174937153615185, 0.7989001308749019, 0.7969735212266846, 0.7919125863668421, 0.7787206865115929, 0.7783493336637999, 0.7640152563587108, 0.7673233328021796, 0.7720726755442888, 0.7664724238843745, 0.7596280776341169, 0.7479503051070426, 0.742808357788477, 0.7376593359630531, 0.7455777968193295, 0.7463834739994174, 0.7299631438109192, 0.737709878064449, 0.7312293827825014, 0.7303426113614884, 0.7154936565226725, 0.7234394044813747, 0.7043499599484373, 0.7173599084102876, 0.7091134949256999, 0.7055319846266879, 0.7041567192180297, 0.6990694798545878, 0.704524353707487, 0.7004485480411571, 0.6954682899141796, 0.6905084614346859, 0.6862482361238647, 0.6826655497530181, 0.6786633520440624, 0.6745580855204429, 0.6737421062234811, 0.6849234227994965, 0.6666513602999081, 0.6756915680846644, 0.6683571823457953, 0.6736207947503023, 0.6654211986160958, 0.6599869617948506, 0.6601930827339327], "accuracy": [0.11847840249538422, 0.1868973672389984, 0.2506934404373169, 0.3093382716178894, 0.3461894094944, 0.3847576379776001, 0.4147404432296753, 0.4418174624443054, 0.46030908823013306, 0.49148064851760864, 0.5079910159111023, 0.5411438345909119, 0.5444459319114685, 0.5699379444122314, 0.5827499628067017, 0.5909391045570374, 0.6040153503417969, 0.6193369626998901, 0.6283186078071594, 0.6318848133087158, 0.6435081362724304, 0.6446968913078308, 0.6536785364151001, 0.6573768258094788, 0.6741513609886169, 0.6741513609886169, 0.6818121671676636, 0.6814159154891968, 0.6769251227378845, 0.6819442510604858, 0.6864351034164429, 0.6964733600616455, 0.6915863156318665, 0.6954167485237122, 0.696209192276001, 0.6970016956329346, 0.7047945857048035, 0.7100779414176941, 0.7086250185966492, 0.7096816897392273, 0.7150970697402954, 0.7250033020973206, 0.7170783281326294, 0.7210407853126526, 0.7190595865249634, 0.7180029153823853, 0.7177387475967407, 0.7182670831680298, 0.7263241410255432, 0.7231541275978088, 0.7279091477394104, 0.7312111854553223, 0.7321357727050781, 0.7343811988830566, 0.7296261787414551, 0.7305507659912109, 0.7353057861328125, 0.7364945411682129, 0.735041618347168, 0.7424382567405701, 0.7374191284179688, 0.7430986762046814, 0.7436270117759705, 0.741909921169281, 0.7478536367416382, 0.7420420050621033, 0.7423061728477478, 0.7461365461349487, 0.7489103078842163, 0.7530049085617065, 0.7495707273483276, 0.7508915662765503, 0.755118191242218, 0.7548540234565735, 0.7470611333847046, 0.748249888420105, 0.7559106945991516, 0.7467969655990601, 0.7524765729904175, 0.7543256878852844, 0.759609043598175, 0.755118191242218], "val_loss": [1.9467039108276367, 1.9211974143981934, 1.8892072950090681, 1.8468758719308036, 1.7894912447248186, 1.7128452914101737, 1.6116134439195906, 1.4919453007834298, 1.3627422877720423, 1.2356085436684745, 1.1269547258104597, 1.0332516942705428, 0.9606396130153111, 0.9021124839782715, 0.8565659182412284, 0.8198063032967704, 0.7885616506849017, 0.7597093411854335, 0.7360975572041103, 0.7181655168533325, 0.7018874032156808, 0.689391953604562, 0.6764003208705357, 0.6641662461417062, 0.6546091692788261, 0.6459238529205322, 0.635267836706979, 0.6276269980839321, 0.6206672532217843, 0.6148936578205654, 0.6101008823939732, 0.6028446810586112, 0.5984539985656738, 0.5922584193093436, 0.5891965627670288, 0.5842855487551007, 0.5786143711635044, 0.5750363383974347, 0.5711835282189506, 0.568091699055263, 0.5639435393469674, 0.5597497395106724, 0.557354211807251, 0.5554671628134591, 0.55319196837289, 0.5486821617398944, 0.5479644196374076, 0.541864241872515, 0.5384278808321271, 0.5370447635650635, 0.5341352224349976, 0.5331418003354754, 0.5294098854064941, 0.5274789673941476, 0.5262694869722638, 0.5239896603993007, 0.5204237188611712, 0.5182567323957171, 0.5174398592540196, 0.5158384186880929, 0.5141547577721732, 0.5138415268489293, 0.5121449061802456, 0.5107522862298148, 0.5074551786695208, 0.5039042234420776, 0.5035079206739154, 0.502936703818185, 0.5009186438151768, 0.49894230706351145, 0.4993316786629813, 0.4952493565423148, 0.4933888741901943, 0.49153290476117817, 0.4917811666216169, 0.48885927881513325, 0.4885765484401158, 0.48612269333430697, 0.48578454766954693, 0.48353258201054167, 0.4823877811431885, 0.48301942007882254], "val_accuracy": [0.2436666637659073, 0.3633333444595337, 0.4153333306312561, 0.4516666531562805, 0.4896666705608368, 0.5286666750907898, 0.5543333292007446, 0.5756666660308838, 0.5950000286102295, 0.6166666746139526, 0.6363333463668823, 0.6650000214576721, 0.6736666560173035, 0.6826666593551636, 0.6913333535194397, 0.6983333230018616, 0.6990000009536743, 0.7086666822433472, 0.7133333086967468, 0.715666651725769, 0.7233333587646484, 0.7260000109672546, 0.7263333201408386, 0.7300000190734863, 0.7273333072662354, 0.734333336353302, 0.734333336353302, 0.7366666793823242, 0.7436666488647461, 0.7436666488647461, 0.7379999756813049, 0.7426666617393494, 0.7509999871253967, 0.7473333477973938, 0.7516666650772095, 0.7563333511352539, 0.7526666522026062, 0.7536666393280029, 0.7556666731834412, 0.7603333592414856, 0.7636666893959045, 0.7613333463668823, 0.7599999904632568, 0.7633333206176758, 0.7639999985694885, 0.7639999985694885, 0.7646666765213013, 0.7689999938011169, 0.7710000276565552, 0.765666663646698, 0.7716666460037231, 0.7683333158493042, 0.7733333110809326, 0.7720000147819519, 0.7746666669845581, 0.7753333449363708, 0.7756666541099548, 0.7756666541099548, 0.7770000100135803, 0.7799999713897705, 0.7716666460037231, 0.7756666541099548, 0.7749999761581421, 0.7806666493415833, 0.7743333578109741, 0.7803333401679993, 0.7766666412353516, 0.7739999890327454, 0.7829999923706055, 0.7886666655540466, 0.7799999713897705, 0.7856666445732117, 0.7826666831970215, 0.7833333611488342, 0.7893333435058594, 0.7870000004768372, 0.7923333048820496, 0.7903333306312561, 0.7873333096504211, 0.7873333096504211, 0.7889999747276306, 0.7919999957084656]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 6, 4, 2, 5, 5, 5, 7, 5, 4, 0, 2, 3, 6, 8, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7797142863273621, "mapping_values": [1, 38, 38, 22, 16, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2848281643693285, 2.233583966329381, 2.1535461400840354, 2.0217883990598535, 1.8291899233509317, 1.6069003436323233, 1.4086812316088109, 1.287559438060382, 1.1925976638387081, 1.115386787926469, 1.0657834995219642, 1.0113800170635425, 0.9811182841963662, 0.9380718809880317, 0.9222119690137155, 0.902935614903621, 0.8803217931509238, 0.8575036723017614, 0.8400898998943476, 0.8304487054830749, 0.8226879450150957, 0.8109711584177598, 0.7988084098209779, 0.7908941165897998, 0.7712407509380911, 0.7715334527055743, 0.7534483754482125, 0.7460290923126149, 0.754040810079654, 0.7376078593417591, 0.742098880993487, 0.7249903375950346, 0.7319176528809991, 0.7168318870643567, 0.716393474692666, 0.7097026801317154, 0.7032624020820217, 0.7044207602050467, 0.6894281587234152, 0.6843664700077069, 0.6835599402001411, 0.6722882501343065, 0.6729503697911904, 0.6586453732388005, 0.6621110075264244, 0.669099804944429, 0.6662524572263981], "accuracy": [0.1410645842552185, 0.2518821954727173, 0.3354906737804413, 0.40589091181755066, 0.4493461847305298, 0.4971602261066437, 0.5379738211631775, 0.5577862858772278, 0.5845991373062134, 0.6077136397361755, 0.618280291557312, 0.64667809009552, 0.6458855867385864, 0.6654338836669922, 0.6725663542747498, 0.6789063811302185, 0.6798309087753296, 0.6944921612739563, 0.6984546184539795, 0.7038700580596924, 0.700700044631958, 0.7065116763114929, 0.7054550051689148, 0.7135120630264282, 0.7231541275978088, 0.7191916704177856, 0.72672039270401, 0.72672039270401, 0.722757875919342, 0.7271166443824768, 0.7276449799537659, 0.7374191284179688, 0.7347774505615234, 0.7416457533836365, 0.7375511527061462, 0.737022876739502, 0.7449478507041931, 0.7450799345970154, 0.7497028112411499, 0.744419515132904, 0.7485140562057495, 0.7600052952766418, 0.7499669790267944, 0.7559106945991516, 0.7549861073493958, 0.7514199018478394, 0.752740740776062], "val_loss": [1.9266616276332311, 1.8681676728384835, 1.7676982879638672, 1.6023331710270472, 1.3778364998953683, 1.163052729197911, 0.9976496696472168, 0.8908488409859794, 0.8190239156995501, 0.7668412753513881, 0.7330353260040283, 0.696419392313276, 0.6774231536047799, 0.6546301671436855, 0.6430934837886265, 0.6315641573497227, 0.6239568846566337, 0.6040960550308228, 0.5937247446605137, 0.5882054226739066, 0.5771313905715942, 0.574436971119472, 0.5692941631589618, 0.5598376478467669, 0.5551214388438633, 0.5516344308853149, 0.5426269258771624, 0.540048633302961, 0.5357261896133423, 0.5300266231809344, 0.5281831877572196, 0.5265496628625053, 0.5190732649394444, 0.5146908760070801, 0.5173711947032383, 0.5119039331163678, 0.5053386688232422, 0.5049562113625663, 0.5023454768317086, 0.5009501661573138, 0.49554944038391113, 0.4932248592376709, 0.4894291843686785, 0.48913068430764334, 0.48901680537632536, 0.48235944339207243, 0.4882629598890032], "val_accuracy": [0.3440000116825104, 0.4266666769981384, 0.503000020980835, 0.5506666898727417, 0.5893333554267883, 0.628000020980835, 0.6669999957084656, 0.6840000152587891, 0.7009999752044678, 0.7083333134651184, 0.7046666741371155, 0.7236666679382324, 0.7243333458900452, 0.7310000061988831, 0.7350000143051147, 0.7319999933242798, 0.7260000109672546, 0.7443333268165588, 0.7476666569709778, 0.75, 0.7559999823570251, 0.7596666812896729, 0.7543333172798157, 0.762333333492279, 0.7566666603088379, 0.765999972820282, 0.765333354473114, 0.7703333497047424, 0.7746666669845581, 0.7736666798591614, 0.765333354473114, 0.7726666927337646, 0.7786666750907898, 0.7736666798591614, 0.7763333320617676, 0.777999997138977, 0.7816666960716248, 0.7829999923706055, 0.7820000052452087, 0.781333327293396, 0.7806666493415833, 0.7886666655540466, 0.7803333401679993, 0.7826666831970215, 0.781000018119812, 0.7876666784286499, 0.7839999794960022]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 6, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7797142863273621, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2848281148969223, 2.2335830398633134, 2.153538529143247, 2.021763458574421, 1.8291454030191736, 1.6068638545048786, 1.4086655061856834, 1.287579186289239, 1.1925639129034549, 1.1154637320355623, 1.0658063749516913, 1.0114422367705866, 0.9812397424019937, 0.938103217356524, 0.9222243728812156, 0.9029053827680538, 0.880325288702358, 0.8574481823220466, 0.8401937516389695, 0.8305614166224495, 0.8224951723673403, 0.8110693625691482, 0.7988581205749588, 0.7909154611225252, 0.7711586108564811, 0.7716065243471095, 0.753755126717761, 0.746363289509593, 0.7540250684858832, 0.7377584250359692, 0.74207778281508, 0.7255979052797332, 0.7318835583786214, 0.7166862246492961, 0.716604187748042, 0.7097905022813628, 0.7032078805695341, 0.7043257816639936, 0.6892786838863157, 0.6846793405588639, 0.6835980812682294, 0.672324774413612, 0.6728815301030524, 0.6586748517940483, 0.6621651818267013, 0.6689985042093232, 0.666039277305535], "accuracy": [0.1410645842552185, 0.25201427936553955, 0.3357548415660858, 0.4061550796031952, 0.4492141008377075, 0.4967639744281769, 0.537709653377533, 0.5583146214485168, 0.5845991373062134, 0.607449471950531, 0.6184123754501343, 0.64667809009552, 0.6456214785575867, 0.6649055480957031, 0.672698438167572, 0.678642213344574, 0.6804913282394409, 0.6944921612739563, 0.6989829540252686, 0.7036058902740479, 0.7014925479888916, 0.7055870890617371, 0.7055870890617371, 0.7125874757766724, 0.7219653725624084, 0.7197200059890747, 0.7255316376686096, 0.726192057132721, 0.7231541275978088, 0.7269845604896545, 0.7284374833106995, 0.7345132827758789, 0.7351737022399902, 0.741909921169281, 0.7372870445251465, 0.7364945411682129, 0.7458723783493042, 0.7449478507041931, 0.7497028112411499, 0.7434949278831482, 0.748249888420105, 0.759080708026886, 0.7506273984909058, 0.755118191242218, 0.7552502751350403, 0.7515519857406616, 0.7523444890975952], "val_loss": [1.926661695752825, 1.8681607927594865, 1.7676757403782435, 1.6022823197501046, 1.3777970586504256, 1.1630373341696603, 0.9976502486637661, 0.8907553809029716, 0.8190356663295201, 0.7668990067073277, 0.733162488256182, 0.696494596345084, 0.6775134290967669, 0.6547895499638149, 0.6429803030831474, 0.6314274072647095, 0.6236026627676827, 0.6041797910417829, 0.5938282864434379, 0.5883676154272897, 0.5772467511040824, 0.5742103202002389, 0.5692706789289202, 0.5597716229302543, 0.5552957568849836, 0.5518171957560948, 0.5427245582853045, 0.5403133290154594, 0.5358789988926479, 0.5303677490779332, 0.5280059576034546, 0.5262630156108311, 0.5192948750087193, 0.5146613802228656, 0.5173720802579608, 0.5117668424333844, 0.5053030252456665, 0.5048179456165859, 0.5022243091038295, 0.5007433720997402, 0.49535628727504183, 0.49331954547337126, 0.4893862009048462, 0.4889579841068813, 0.4891876152583531, 0.4824164765221732, 0.4882629428591047], "val_accuracy": [0.3440000116825104, 0.4266666769981384, 0.503000020980835, 0.5503333210945129, 0.5893333554267883, 0.628333330154419, 0.6669999957084656, 0.6840000152587891, 0.7006666660308838, 0.7083333134651184, 0.7049999833106995, 0.7229999899864197, 0.7243333458900452, 0.731333315372467, 0.734333336353302, 0.7326666712760925, 0.7276666760444641, 0.7440000176429749, 0.746999979019165, 0.75, 0.7553333044052124, 0.7593333125114441, 0.7546666860580444, 0.7630000114440918, 0.7580000162124634, 0.7673333287239075, 0.765666663646698, 0.7699999809265137, 0.7749999761581421, 0.7743333578109741, 0.765333354473114, 0.7716666460037231, 0.7793333530426025, 0.7733333110809326, 0.7763333320617676, 0.778333306312561, 0.7816666960716248, 0.7806666493415833, 0.7826666831970215, 0.7829999923706055, 0.781000018119812, 0.7870000004768372, 0.7806666493415833, 0.7829999923706055, 0.7820000052452087, 0.7870000004768372, 0.7856666445732117]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 2, 6, 6, 4, 2, 5, 5, 5, 7, 5, 4, 0, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7791428565979004, "mapping_values": [1, 33, 33, 20, 13, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2848281148969223, 2.2335832738101664, 2.1535342149667738, 2.021763788285493, 1.8291614626408441, 1.6068717454324042, 1.408664609415656, 1.2875380182404796, 1.1925206343731813, 1.115393539319626, 1.0657500406187665, 1.011280378684738, 0.9811138247990133, 0.9379914397529528, 0.9222609401772665, 0.9029786913244716, 0.8803329038393259, 0.8573146542585159, 0.8401759405020222, 0.8305472731275361, 0.822661102652597, 0.8109418485205896, 0.7989848369006484, 0.7910523322972922, 0.7711615653448038, 0.7715541947519365, 0.7536347462689762, 0.7459416718231673, 0.7539929435584114, 0.7377322686819148, 0.742201657193511, 0.7251336382931534, 0.7321256708868932, 0.7170112693566436, 0.7164680358756094, 0.709699177227126, 0.7033289468141989, 0.7044702442708568, 0.6895583384481986, 0.684431032489839, 0.6836767687757868, 0.6724745284580457, 0.6730837443831921, 0.6587499131962388, 0.6623399171217038, 0.6694058239215936, 0.6664777443141607], "accuracy": [0.1410645842552185, 0.25201427936553955, 0.3354906737804413, 0.4061550796031952, 0.4492141008377075, 0.49689605832099915, 0.5378417372703552, 0.55791836977005, 0.5848633050918579, 0.607449471950531, 0.6186765432357788, 0.6470743417739868, 0.6454893946647644, 0.6649055480957031, 0.6724342703819275, 0.6793025732040405, 0.6803592443466187, 0.6946242451667786, 0.698718786239624, 0.7030775547027588, 0.7018887996673584, 0.7058512568473816, 0.7057191729545593, 0.7137762308120728, 0.7232862114906311, 0.7193237543106079, 0.7260599732398987, 0.72672039270401, 0.7236824631690979, 0.7271166443824768, 0.7288337349891663, 0.7362303733825684, 0.7347774505615234, 0.7413815855979919, 0.7376832365989685, 0.7364945411682129, 0.7452120184898376, 0.7456082701683044, 0.7493065595626831, 0.7446836829185486, 0.7481178045272827, 0.7602694630622864, 0.7495707273483276, 0.7547219395637512, 0.7541936039924622, 0.750759482383728, 0.7518161535263062], "val_loss": [1.9266616276332311, 1.8681635175432478, 1.767679146357945, 1.6023005076817103, 1.3778254985809326, 1.1630209173474992, 0.9976170063018799, 0.8907533032553536, 0.8189946413040161, 0.7667298316955566, 0.7331284284591675, 0.6963971172060285, 0.6773636170795986, 0.6547648055212838, 0.6431478432246617, 0.6315985407148089, 0.6237627949033465, 0.6040547745568412, 0.5937555347170148, 0.5882059165409633, 0.5770233188356672, 0.5743686131068638, 0.5693567650658744, 0.5594743830817086, 0.5553065027509417, 0.5516409192766462, 0.5427224125180926, 0.540102515901838, 0.5357180833816528, 0.5300877945763725, 0.5282116276877267, 0.5268144096646991, 0.5189759390694755, 0.5145531211580548, 0.516777753829956, 0.5115338223321098, 0.5051360641207013, 0.5049696820122855, 0.5027068853378296, 0.5009524141039167, 0.495673554284232, 0.49327988283974783, 0.4893127679824829, 0.48866643224443707, 0.48936498165130615, 0.48276681559426443, 0.48825149876730783], "val_accuracy": [0.3440000116825104, 0.4266666769981384, 0.5026666522026062, 0.5506666898727417, 0.5896666646003723, 0.628333330154419, 0.6669999957084656, 0.684333324432373, 0.7009999752044678, 0.7083333134651184, 0.7046666741371155, 0.7226666808128357, 0.7243333458900452, 0.731333315372467, 0.7350000143051147, 0.7323333621025085, 0.7266666889190674, 0.7440000176429749, 0.7476666569709778, 0.750333309173584, 0.7556666731834412, 0.7583333253860474, 0.753000020980835, 0.7633333206176758, 0.7566666603088379, 0.7670000195503235, 0.765666663646698, 0.7689999938011169, 0.7753333449363708, 0.7736666798591614, 0.7663333415985107, 0.7726666927337646, 0.7793333530426025, 0.7739999890327454, 0.7776666879653931, 0.7789999842643738, 0.7823333144187927, 0.781000018119812, 0.7806666493415833, 0.7826666831970215, 0.781333327293396, 0.7883333563804626, 0.7803333401679993, 0.7846666574478149, 0.7836666703224182, 0.7873333096504211, 0.784333348274231]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 6, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 0, 0, 0, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 93, 75, 78, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7788571715354919, "mapping_values": [1, 31, 31, 19, 12, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.square(tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))))), tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(grad, alpha)))))), grad)), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2848281328782996, 2.233583579588056, 2.15354264924051, 2.0217840806005998, 1.8291595147947484, 1.6068858019097323, 1.408679307601424, 1.2876012228294496, 1.192616219502304, 1.1154603253833024, 1.0658128525303527, 1.0113490270097667, 0.9811867612810529, 0.9380446798639873, 0.922197810308635, 0.9029064512429157, 0.8803867708895075, 0.8573629696607559, 0.8400922088087069, 0.8303490089245948, 0.8226119945109434, 0.810862038334237, 0.7987256467602177, 0.7909699496324146, 0.7710890895214063, 0.7715256332311932, 0.7534573609094263, 0.745831194893559, 0.7537816552013029, 0.7375150335982901, 0.7420248863498974, 0.7249939900269016, 0.7320175469433391, 0.7167524063765113, 0.7161511511630102, 0.7095837094418173, 0.7032859242193892, 0.7043548998359077, 0.6894714843485223, 0.6842428941878471, 0.6835733919788614, 0.6722583897030978, 0.6730275611520963, 0.6588508510051103, 0.6621282302456257, 0.6694728545603452, 0.6662930089484872], "accuracy": [0.1410645842552185, 0.2518821954727173, 0.3357548415660858, 0.40628713369369507, 0.4493461847305298, 0.4971602261066437, 0.538237988948822, 0.55791836977005, 0.5845991373062134, 0.607449471950531, 0.618280291557312, 0.6464139223098755, 0.6457535624504089, 0.6650376319885254, 0.6725663542747498, 0.6795667409896851, 0.6796988248825073, 0.6940959095954895, 0.698718786239624, 0.703209638595581, 0.7010962963104248, 0.7061154246330261, 0.7057191729545593, 0.7128516435623169, 0.7226257920265198, 0.7202483415603638, 0.7260599732398987, 0.7269845604896545, 0.7232862114906311, 0.7272487282752991, 0.728701651096344, 0.7371549606323242, 0.7346453666687012, 0.7413815855979919, 0.7371549606323242, 0.7360982894897461, 0.7454761862754822, 0.7461365461349487, 0.748778223991394, 0.7446836829185486, 0.7489103078842163, 0.7605336308479309, 0.7497028112411499, 0.7553823590278625, 0.7537974119186401, 0.7510236501693726, 0.7518161535263062], "val_loss": [1.926661559513637, 1.8681668554033553, 1.76770053591047, 1.6023078645978654, 1.3778049945831299, 1.1630675792694092, 0.9976752144949776, 0.8907992158617292, 0.8190596103668213, 0.7668221167155674, 0.7330846275602069, 0.6964156797954014, 0.6774228130068097, 0.654592479978289, 0.6431009769439697, 0.6315386976514544, 0.6236549275262016, 0.6041078737803868, 0.5937209980828422, 0.5883023227964129, 0.5771219049181256, 0.574058072907584, 0.5692095756530762, 0.5594791684831891, 0.5551342623574393, 0.5514873266220093, 0.5424853563308716, 0.5400892496109009, 0.5357781818934849, 0.5302709681647164, 0.5281594821384975, 0.5268305710383824, 0.5190981796809605, 0.5147244930267334, 0.5172175339290074, 0.511562602860587, 0.5051819256373814, 0.5048633813858032, 0.5026692492621285, 0.5006967272077288, 0.49548392636435373, 0.4932508298328945, 0.48938965797424316, 0.48891823632376535, 0.4895467758178711, 0.4826307126453945, 0.48804688453674316], "val_accuracy": [0.3440000116825104, 0.4266666769981384, 0.503000020980835, 0.5506666898727417, 0.5893333554267883, 0.628000020980835, 0.6666666865348816, 0.684333324432373, 0.7009999752044678, 0.7083333134651184, 0.7049999833106995, 0.7236666679382324, 0.7243333458900452, 0.7310000061988831, 0.734666645526886, 0.7326666712760925, 0.7269999980926514, 0.7443333268165588, 0.7476666569709778, 0.749666690826416, 0.7559999823570251, 0.7586666941642761, 0.7536666393280029, 0.7630000114440918, 0.7563333511352539, 0.7673333287239075, 0.765666663646698, 0.7703333497047424, 0.7746666669845581, 0.7736666798591614, 0.7666666507720947, 0.7739999890327454, 0.7789999842643738, 0.7743333578109741, 0.7770000100135803, 0.7789999842643738, 0.7823333144187927, 0.7816666960716248, 0.7836666703224182, 0.7820000052452087, 0.7803333401679993, 0.7873333096504211, 0.7803333401679993, 0.7839999794960022, 0.7823333144187927, 0.7873333096504211, 0.784333348274231]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 3, 0, 1, 2, 6, 4, 9, 2, 1, 5, 2, 1, 2, 0, 1, 1, 4, 5, 9, 6, 2, 9, 5, 0, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 1, 2, 1], [30, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [99], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.16571427881717682, "mapping_values": [1, 21, 21, 12, 9, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4498818086642538, 15.116128752716875, 8.381737327437124, 2.310333214604765, 2.304610789302412, 2.3033228194819086], "accuracy": [0.21674811840057373, 0.1818782240152359, 0.10302469879388809, 0.09906221181154251, 0.09998679161071777, 0.10038304328918457], "val_loss": [1.859400749206543, 2.6267174312046597, 1.9845694133213587, 1.9758118220738001, 1.974064486367362, 1.9737563133239746], "val_accuracy": [0.12600000202655792, 0.10466666519641876, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 2, 2, 1, 4, 6, 5, 4, 2, 5, 5, 5, 7, 8, 8, 0, 4, 3, 2, 9, 6, 2, 5, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 37, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023419377353798, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [3, 8, 6, 5, 2, 6, 5, 8, 2, 5, 3, 5, 7, 8, 9, 5, 2, 3, 9, 9, 3, 2, 3, 5, 8, 4, 2, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 2, 1], [70, 83, 4, 92, 41, 36, 4, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 14, 8, 3, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), grad))))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 6, 3, 9, 6, 4, 8, 0, 5, 6, 5, 7, 8, 1, 6, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 2, 2, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 4, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [4, 4], [4, 0, 1, 5, 3, 4], [4], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [3, 8, 6, 6, 2, 6, 3, 8, 2, 5, 3, 5, 4, 8, 2, 5, 2, 3, 9, 9, 3, 2, 3, 5, 8, 4, 2, 4, 1, 4], [0, 0, 2, 2, 2, 0, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 60, 4, 92, 41, 36, 4, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 21, 12, 5, 15, 15, 8, 7, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))))), alpha))), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)))))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 6, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 2, 1], [70, 83, 93, 75, 78, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [5, 4], [4, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045195837566297, 2.3049708394610007, 2.3060905965500975, 2.308114752966604, 2.311966476218733, 2.3148290099500586, 2.3163538064151754, 2.3228665309228824, 2.3295392833916804, 2.3401756080039946, 2.3659996577005784, 763.776295209841, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.08875974267721176, 0.08611807972192764, 0.08413683623075485, 0.08083476126194, 0.07528728246688843, 0.0816272646188736, 0.07607977837324142, 0.07277770340442657, 0.07330603897571564, 0.07568352669477463, 0.09087307006120682, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9722192628043038, 1.9734150341578893, 1.9749342373439245, 1.9768236705235072, 1.9792232513427734, 1.9819305283682687, 1.9842791557312012, 1.987861224583217, 1.993095534188407, 2.0035019602094377, 2.033473559788295, 6.416207002685727e+25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03233333304524422, 0.027666667476296425, 0.023000000044703484, 0.020666666328907013, 0.026333333924412727, 0.032999999821186066, 0.041999999433755875, 0.052000001072883606, 0.07100000232458115, 0.09133332967758179, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 3, 0, 1, 2, 8, 4, 6, 2, 1, 5, 3, 1, 2, 2, 1, 2, 3, 5, 5, 6, 2, 9, 5, 0, 4, 5, 4, 1, 4], [1, 2, 2, 0, 0, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [6, 4], [2, 0, 1, 5, 3, 4], [9], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 24, 17, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, grad))), alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)), grad)))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.731263874732664e+29, 51.11619946871924, 56.04596710860091, 60.98141033528834, 65.91849700218305, 70.84701076855733], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [42.03882489885603, 46.25787244524275, 50.48753356933594, 54.71564810616629, 58.93875994001116, 63.15966360909598], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023419377353798, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 3, 0, 1, 2, 3, 0, 9, 2, 1, 5, 2, 1, 2, 2, 1, 0, 3, 5, 9, 6, 0, 1, 5, 0, 4, 5, 4, 1, 4], [2, 0, 2, 0, 1, 0, 1, 1, 0, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 4, 92, 41, 9, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [5, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 22, 13, 6, 15, 15, 8, 7, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))))), tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 2, 2, 1, 2, 6, 5, 4, 2, 5, 0, 5, 7, 8, 4, 0, 2, 6, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 1, 0, 0, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 2, 2, 1], [70, 83, 4, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1], [3, 4, 9], [2, 0, 1, 5, 3, 4], [17], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302336458296367, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 1, 1, 2, 8, 5, 5, 6, 0, 6, 2, 7, 8, 1, 6, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 0, 0, 2, 1, 0, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 35, 75, 86, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 1, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 32, 32, 20, 12, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)))))))))), alpha)))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30395082771786, 2.302961024310941, 2.3024625673333117, 2.3022878678593544, 2.302908991495096, 2.302115479543492], "accuracy": [0.08730682730674744, 0.09179764986038208, 0.09430722147226334, 0.09285431355237961, 0.09206181764602661, 0.09457138925790787], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 8, 5, 8, 1, 5, 3, 5, 5, 8, 2, 6, 2, 3, 9, 4, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [64, 74, 42, 75, 86, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 31, 31, 20, 11, 5, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))))), tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(tf.math.add(alpha, alpha), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30395082771786, 2.302961024310941, 2.3024625673333117, 2.3022878678593544, 2.302908991495096, 2.302115479543492], "accuracy": [0.08730682730674744, 0.09179764986038208, 0.09430722147226334, 0.09285431355237961, 0.09206181764602661, 0.09457138925790787], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]