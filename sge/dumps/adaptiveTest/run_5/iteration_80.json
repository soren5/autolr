[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7645714282989502, "mapping_values": [1, 44, 44, 27, 17, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2937339021702643, 2.273010419297133, 2.2509913520412423, 2.2224100444767503, 2.189048538748394, 2.147080250199539, 2.0898128699286422, 2.0194842184633863, 1.9324686631802412, 1.8365301192475978, 1.7303501344423065, 1.635481423327731, 1.535623676284681, 1.4429905423871152, 1.370500401199738, 1.31373568099834, 1.2612421553542097, 1.2276393411465294, 1.179245106123064, 1.1438451977989157, 1.1164408042178635, 1.0860013470059577, 1.0612536326784894, 1.0368375156092968, 1.0116703764417025, 0.992410068294045, 0.9925049069125843, 0.9615498657523208, 0.9480625279764411, 0.9338303330772509, 0.9192281623857211, 0.9148624581337101, 0.9008056612031146, 0.9044789164892324, 0.8927191771914254, 0.8817518668215052, 0.8653767898239874, 0.8599350042646083, 0.8558950834679896, 0.8487863831547793, 0.8427498197637419, 0.8394354125291695, 0.8240678713479456, 0.8257328154246852, 0.8233167359999315, 0.8128536454816583, 0.803085171165499, 0.7835952412293272, 0.795497948223369, 0.7941680241175898, 0.7832596161267572, 0.7780862672139058, 0.7803764271777084, 0.7718988849486594, 0.7621022663127792, 0.7645660821929536, 0.7641231064169146, 0.7578976653224017, 0.7590285131818252, 0.7592727143010916, 0.7426769002049811], "accuracy": [0.1154404953122139, 0.16880200803279877, 0.21714437007904053, 0.2739400267601013, 0.31303659081459045, 0.3564918637275696, 0.38304054737091064, 0.40324923396110535, 0.4313828945159912, 0.44287413358688354, 0.4671773910522461, 0.48249900341033936, 0.509311854839325, 0.521067202091217, 0.5396909117698669, 0.5543521046638489, 0.5720512270927429, 0.5752212405204773, 0.5807687044143677, 0.5993924140930176, 0.6092986464500427, 0.6144498586654663, 0.6240919232368469, 0.6362435817718506, 0.6412627100944519, 0.6505085229873657, 0.6448289752006531, 0.6564522385597229, 0.6586976647377014, 0.6621318459510803, 0.6748117804527283, 0.6741513609886169, 0.6757363677024841, 0.678642213344574, 0.6841896772384644, 0.681547999382019, 0.6848500967025757, 0.6921146512031555, 0.6980583667755127, 0.6939638257026672, 0.6927750706672668, 0.6966054439544678, 0.7041342258453369, 0.7034738063812256, 0.7029454708099365, 0.7057191729545593, 0.7125874757766724, 0.7132478952407837, 0.7073041796684265, 0.7121912837028503, 0.7096816897392273, 0.7144366502761841, 0.7169462442398071, 0.7234182953834534, 0.7275128960609436, 0.7234182953834534, 0.7244749665260315, 0.7199841737747192, 0.7243428826332092, 0.7264562249183655, 0.7317395210266113], "val_loss": [1.9508931296212333, 1.9302961485726493, 1.9068787438528878, 1.8782382692609514, 1.8416773251124792, 1.79437289919172, 1.7332815442766463, 1.6568520750318254, 1.5651030540466309, 1.462691068649292, 1.355166264942714, 1.2528070041111536, 1.1577194758823939, 1.075124944959368, 1.0068960530417306, 0.9506442887442452, 0.9031688145228794, 0.8642582382474627, 0.8317645447594779, 0.8033209698540824, 0.7789900132587978, 0.7576441935130528, 0.7395382949284145, 0.7228105579103742, 0.7076760019574847, 0.695196441241673, 0.6856520857129779, 0.6735804762159076, 0.6657670906611851, 0.6563713380268642, 0.6484216281345913, 0.6422426530293056, 0.6365677288600377, 0.6292480230331421, 0.6237265552793231, 0.6175766842705863, 0.6138740267072406, 0.6073542833328247, 0.6027813638959613, 0.5979904617582049, 0.5949186938149589, 0.5899164165769305, 0.5853524037769863, 0.582280193056379, 0.5798135825565883, 0.5749654940196446, 0.5725890227726528, 0.5673230716160366, 0.5659492356436593, 0.5630710635866437, 0.5607594081333706, 0.5578315258026123, 0.5553677763257708, 0.5523530926023211, 0.5481707538877215, 0.5463901247297015, 0.5466618878500802, 0.543064968926566, 0.5410900115966797, 0.539413298879351, 0.5362400668007987], "val_accuracy": [0.21266666054725647, 0.33933332562446594, 0.39266666769981384, 0.43433332443237305, 0.4569999873638153, 0.48766666650772095, 0.5249999761581421, 0.546999990940094, 0.5643333196640015, 0.5809999704360962, 0.5943333506584167, 0.609666645526886, 0.6359999775886536, 0.6503333449363708, 0.6710000038146973, 0.6793333292007446, 0.6833333373069763, 0.6883333325386047, 0.6976666450500488, 0.7026666402816772, 0.7066666483879089, 0.7086666822433472, 0.7116666436195374, 0.7120000123977661, 0.7203333377838135, 0.7226666808128357, 0.7210000157356262, 0.7250000238418579, 0.7303333282470703, 0.7293333411216736, 0.7333333492279053, 0.7356666922569275, 0.7366666793823242, 0.734000027179718, 0.737666666507721, 0.7406666874885559, 0.737666666507721, 0.7453333139419556, 0.7490000128746033, 0.7483333349227905, 0.750333309173584, 0.7459999918937683, 0.7483333349227905, 0.7473333477973938, 0.7543333172798157, 0.7549999952316284, 0.7516666650772095, 0.7573333382606506, 0.7603333592414856, 0.7616666555404663, 0.7573333382606506, 0.7599999904632568, 0.7649999856948853, 0.7643333077430725, 0.7689999938011169, 0.7693333625793457, 0.7613333463668823, 0.7693333625793457, 0.7680000066757202, 0.7673333287239075, 0.7666666507720947]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7642857432365417, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2937338706792354, 2.2730107071881185, 2.2509912396812513, 2.2224107372793838, 2.189051525640985, 2.1470868675983685, 2.0898212008803134, 2.0194910156287538, 1.9324689443636376, 1.836526806596059, 1.7303424378301742, 1.6354586016216992, 1.5355805268361347, 1.4429310933395132, 1.37045252655381, 1.3136944882921051, 1.2612525527786822, 1.2276451559807442, 1.1792343534325502, 1.1438563756183184, 1.1164626365702432, 1.086005029614103, 1.061240870907574, 1.0368622667706637, 1.0117017283431449, 0.9924518980637926, 0.9925223312452248, 0.9615593070068128, 0.9480639666992015, 0.9338406903978982, 0.9192197166964866, 0.9148354528366284, 0.9007939742839945, 0.9044650505641196, 0.8927112517654777, 0.8817408251063289, 0.8653556331509943, 0.8599811508245849, 0.8559317701622763, 0.8488954608041408, 0.8427597912956679, 0.8394480478006221, 0.8241156395856872, 0.8256239579369788, 0.8233132190975798, 0.8129184576955217, 0.80309559571162, 0.7836353876067663, 0.7955754417092052, 0.794214524030528, 0.7832713352454541, 0.7780477230685214, 0.7803670352617857, 0.7719599427312136, 0.7621356871511958, 0.764613878520693, 0.7641531096441934, 0.7579336447360541, 0.7589600594792273, 0.7592393454622363], "accuracy": [0.1154404953122139, 0.16880200803279877, 0.21714437007904053, 0.2739400267601013, 0.313300758600235, 0.3563597798347473, 0.3827763795852661, 0.40324923396110535, 0.4315149784088135, 0.4427420496940613, 0.4671773910522461, 0.4822348356246948, 0.5091797709465027, 0.5209351181983948, 0.5398229956626892, 0.5536917448043823, 0.5719191431999207, 0.5749570727348328, 0.5809007883071899, 0.5989961624145508, 0.609430730342865, 0.614317774772644, 0.6238277554512024, 0.6357152462005615, 0.6411306262016296, 0.650640606880188, 0.6444327235221863, 0.6564522385597229, 0.6586976647377014, 0.6617355942726135, 0.6748117804527283, 0.6740192770957947, 0.6754721999168396, 0.6785101294517517, 0.6841896772384644, 0.6814159154891968, 0.6852463483810425, 0.6921146512031555, 0.6979262828826904, 0.6933034062385559, 0.6930392384529114, 0.6968696117401123, 0.7042662501335144, 0.7038700580596924, 0.7036058902740479, 0.7055870890617371, 0.7125874757766724, 0.7131158113479614, 0.7077004313468933, 0.7119271159172058, 0.7094175219535828, 0.7148329019546509, 0.7172104120254517, 0.722229540348053, 0.7273808121681213, 0.7235503792762756, 0.724210798740387, 0.7199841737747192, 0.7248712182044983, 0.7263241410255432], "val_loss": [1.9508930615016393, 1.9302965572902135, 1.9068783351353236, 1.87823942729405, 1.8416822297232491, 1.7943801198686873, 1.733287947518485, 1.6568557194301061, 1.5650943687983923, 1.4626734937940324, 1.3551414353506905, 1.2527316638401575, 1.1576331002371651, 1.075049843106951, 1.0068119594029017, 0.9505954129355294, 0.9031637736729213, 0.8642939158848354, 0.8318021638052804, 0.8033386979784284, 0.7790150812694004, 0.7576578514916557, 0.7395740917750767, 0.7228186130523682, 0.7076725789478847, 0.6952061142240252, 0.6856316157749721, 0.6735868283680507, 0.6657947472163609, 0.6563916376658848, 0.6484552621841431, 0.6422349725450788, 0.6365480082375663, 0.6292251007897514, 0.6236993074417114, 0.617564218384879, 0.6138263089316232, 0.6073432309286935, 0.6028194597789219, 0.5979870898383004, 0.5949429273605347, 0.5899770941053119, 0.5853451831000192, 0.5822949068886893, 0.579810619354248, 0.5749368837901524, 0.5726282937186105, 0.5672860315867833, 0.5659271989549909, 0.5630922487803868, 0.5607553890773228, 0.5578373670578003, 0.5553212676729474, 0.5523443903241839, 0.5481882265635899, 0.5464029823030744, 0.5466304506574359, 0.5431388786860875, 0.5410560539790562, 0.5393689700535366], "val_accuracy": [0.21266666054725647, 0.33933332562446594, 0.39266666769981384, 0.43433332443237305, 0.4569999873638153, 0.48766666650772095, 0.5249999761581421, 0.546999990940094, 0.5640000104904175, 0.5809999704360962, 0.5943333506584167, 0.609666645526886, 0.6356666684150696, 0.6503333449363708, 0.6710000038146973, 0.6793333292007446, 0.6833333373069763, 0.6883333325386047, 0.6976666450500488, 0.7026666402816772, 0.7066666483879089, 0.7093333601951599, 0.7116666436195374, 0.7116666436195374, 0.7203333377838135, 0.7226666808128357, 0.7210000157356262, 0.7250000238418579, 0.7303333282470703, 0.7300000190734863, 0.7329999804496765, 0.7360000014305115, 0.7366666793823242, 0.734666645526886, 0.7383333444595337, 0.7406666874885559, 0.737666666507721, 0.7459999918937683, 0.7493333220481873, 0.7480000257492065, 0.7506666779518127, 0.7459999918937683, 0.7483333349227905, 0.7473333477973938, 0.7543333172798157, 0.7543333172798157, 0.7519999742507935, 0.7573333382606506, 0.7596666812896729, 0.7613333463668823, 0.7573333382606506, 0.7599999904632568, 0.765666663646698, 0.7646666765213013, 0.7696666717529297, 0.7689999938011169, 0.7620000243186951, 0.7689999938011169, 0.7683333158493042, 0.7676666378974915]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6842857003211975, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.278251803011045, 2.0959383521680235, 1.5862683179970225, 1.3207138507373424, 1.0186297057043716, 0.9806256044369175, 0.8595424131190756, 0.849562044219885, 0.7791642727648436, 0.7901227839193671, 0.7532351495189563, 0.7255526236838448, 0.7042750373429563, 0.6567490805393638, 0.6469480910982675, 0.6160015317789395, 0.6113579994053526, 0.6155534501262172, 0.5809748345645758, 0.5765958172203354, 0.5705893030492243, 0.5829222973358865, 0.5453169842941603, 0.5602019677434883, 0.5493527412760952, 0.5433463639256315, 0.518290161901477, 0.5199407443410102, 0.5111211833070849, 0.505022149217631, 0.4882061998597887, 0.4814053532265086, 0.4732346258198407, 0.4836475310222017, 0.4646106992832595, 0.4727857908899002, 0.4660007036270766, 0.449526953541324, 0.4535418076522126, 0.4393477806278491, 0.44838579409016344, 0.44870307186984776, 0.42400507507086777, 0.43402872229564016, 0.41609142635476715, 0.4139775600982553, 0.41726558982121426, 0.40520535305333316], "accuracy": [0.1534803807735443, 0.3619072735309601, 0.4745740294456482, 0.5592392086982727, 0.6388852000236511, 0.648659348487854, 0.6909258961677551, 0.687491774559021, 0.6983225345611572, 0.7123233675956726, 0.7164179086685181, 0.7169462442398071, 0.7417778372764587, 0.7490423917770386, 0.7531369924545288, 0.7644960880279541, 0.7696473598480225, 0.7662131786346436, 0.7823272943496704, 0.7880068421363831, 0.7861577272415161, 0.7769119143486023, 0.7944789528846741, 0.800818920135498, 0.7969884872436523, 0.7852331399917603, 0.8092722296714783, 0.8138951063156128, 0.8099326491355896, 0.8088759779930115, 0.8178576231002808, 0.8152159452438354, 0.8241975903511047, 0.81548011302948, 0.8264430165290833, 0.817461371421814, 0.8197067975997925, 0.8260467648506165, 0.8267071843147278, 0.8286884427070618, 0.8285563588142395, 0.8286884427070618, 0.8378021121025085, 0.8387266993522644, 0.8432175517082214, 0.844010055065155, 0.8362171649932861, 0.8396512866020203], "val_loss": [1.8888955116271973, 1.5062925815582275, 0.8800267492021833, 0.7207702909197126, 0.7560947622571673, 0.6238020828792027, 0.6279883555003575, 0.5879656587328229, 0.5843010970524379, 0.5684467724391392, 0.5130800349371774, 0.5030871459415981, 0.4923145430428641, 0.48294886520930697, 0.47832672936575754, 0.47554683685302734, 0.4512888363429478, 0.4523904493876866, 0.46115497180393766, 0.46104458400181364, 0.44934756415230886, 0.41785753624779837, 0.4339670368603298, 0.4296837789671762, 0.429071273122515, 0.41604352848870413, 0.42654309953962055, 0.4273933938571385, 0.4033229351043701, 0.39767238071986605, 0.3959041748728071, 0.38993024826049805, 0.3996552654675075, 0.3975959931101118, 0.3878698263849531, 0.3917604855128697, 0.3914812207221985, 0.3824419804981777, 0.384083662714277, 0.3818056583404541, 0.3930761643818447, 0.39875625712530954, 0.39279586928231375, 0.4001702666282654, 0.4139618192400251, 0.40518684898103985, 0.3962132675307138, 0.40402322156088694], "val_accuracy": [0.40166667103767395, 0.5223333239555359, 0.6706666946411133, 0.703000009059906, 0.6823333501815796, 0.7296666502952576, 0.737333357334137, 0.7353333234786987, 0.7526666522026062, 0.7453333139419556, 0.7713333368301392, 0.7726666927337646, 0.7833333611488342, 0.7976666688919067, 0.7776666879653931, 0.784333348274231, 0.809333324432373, 0.8100000023841858, 0.800000011920929, 0.7993333339691162, 0.8090000152587891, 0.8199999928474426, 0.8116666674613953, 0.8233333230018616, 0.8169999718666077, 0.8199999928474426, 0.8166666626930237, 0.8199999928474426, 0.8306666612625122, 0.8299999833106995, 0.8333333134651184, 0.8363333344459534, 0.8326666951179504, 0.8353333473205566, 0.8349999785423279, 0.8396666646003723, 0.8389999866485596, 0.8410000205039978, 0.8396666646003723, 0.8460000157356262, 0.8456666469573975, 0.846666693687439, 0.8519999980926514, 0.8519999980926514, 0.8493333458900452, 0.8479999899864197, 0.8433333039283752, 0.8413333296775818]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [1, 5, 9, 4, 2, 1, 2], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0], [3, 3, 6, 8], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.23828572034835815, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2574225875286142, 2.4002690108665434, 2.303793991970868, 2.3031191842242036, 2.3030823842803043, 2.3029820566967163], "accuracy": [0.20472857356071472, 0.11900673806667328, 0.1010434553027153, 0.09985470771789551, 0.09536388516426086, 0.09642054885625839], "val_loss": [1.9609384536743164, 1.9746980667114258, 1.9737843104771204, 1.9737281118120467, 1.9738142149788993, 1.9736862182617188], "val_accuracy": [0.2409999966621399, 0.10100000351667404, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [2, 0, 0, 1], [40, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.23485714197158813, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.257642403884634, 2.39449423024872, 2.303804052472823, 2.303126303495559, 2.303078347823214, 2.3029811933071795], "accuracy": [0.20499274134635925, 0.11927089840173721, 0.09879804402589798, 0.09972262382507324, 0.09536388516426086, 0.09642054885625839], "val_loss": [1.9562035288129533, 1.9747644833156042, 1.973794664655413, 1.973729133605957, 1.973813874380929, 1.973686695098877], "val_accuracy": [0.2370000034570694, 0.10100000351667404, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [7, 5, 4, 4, 4, 5, 8, 6, 4, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 2, 1, 3, 0, 3, 2, 2, 3, 1, 1, 2], [40, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [1, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 34, 21, 13, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.pow(grad, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), alpha))))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [2, 5, 9, 4, 3], [0, 0, 3, 1], [77, 28, 63], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [26, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027987151082323, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 3], [3, 0, 2, 1], [77, 68, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0], [5, 4], [1, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 4], [2, 0, 2, 1], [40, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 3, 4, 4, 1], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 4], [2, 0, 2, 1], [40, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0], [7, 5, 9, 4, 4], [2, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [9, 4], [7, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [39, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027987151082323, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1242058778.4071064, 23914594707.59477, 110481818965.51367, 310199261545.12537, 658458850837.5729, 1222525302830.2566], "accuracy": [0.10289261490106583, 0.10276053100824356, 0.10077928751707077, 0.09985470771789551, 0.09840179979801178, 0.10117553919553757], "val_loss": [4710971538.285714, 37676467346.28571, 127145096923.42857, 301365423542.8571, 588585313426.2858, 1017056030134.8572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [83, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [5, 0, 1, 5, 3, 4], [67], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07977809756994247, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 5, 9, 4, 4, 2, 6, 8, 6, 5, 9, 9, 7], [2, 0, 2, 1, 0], [77, 28, 79, 35, 92], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 5, 5, 2, 4], [42], [0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 13, 5, 5, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027987151082323, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 0], [3, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.07828571647405624, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021571399072505, 2.3019788839624638, 2.301795224251607, 2.3000759650152185, 2.300091866000831, 2.300194215276978, 2.3003687181209513, 2.299474275343611, 2.2991496604966795, 2.2995447428187736, 2.298809721768729, 2.299957476618299, 2.2997869592789315, 2.30023591462663, 2.299312778042607, 2.2999807621556942, 2.30066911422534, 2.300341630829103, 2.300226194889097, 2.3014047344236985, 2.3012626121041326, 2.3010135281748854, 2.3014035151540453, 2.301452667548467, 2.300825190062316, 2.301209247406715, 2.301195456918362, 2.300674807173528, 2.3012498125439826], "accuracy": [0.09430722147226334, 0.09140139818191528, 0.0936468094587326, 0.09509972482919693, 0.09826971590518951, 0.10091137140989304, 0.10051512718200684, 0.09932637959718704, 0.10130762308835983, 0.09893012791872025, 0.10777968913316727, 0.10249637067317963, 0.09509972482919693, 0.09589222073554993, 0.1014397069811821, 0.09866596013307571, 0.10117553919553757, 0.09602430462837219, 0.09893012791872025, 0.09747721254825592, 0.09694888442754745, 0.09615638852119446, 0.08955223858356476, 0.0878351628780365, 0.09642054885625839, 0.09602430462837219, 0.0944393053650856, 0.09919429570436478, 0.09760929644107819], "val_loss": [1.9701969964163644, 1.9698128019060408, 1.9694012914385115, 1.9692519051688058, 1.9691856929234095, 1.9691878046308244, 1.9692224775041853, 1.9692158017839705, 1.969221864427839, 1.9692740440368652, 1.9694271087646484, 1.9695613043648856, 1.9698502676827567, 1.97011627469744, 1.970264094216483, 1.9704669543675013, 1.9706360271998815, 1.970780645098005, 1.970940181187221, 1.971057619367327, 1.9711670194353377, 1.9713173593793596, 1.9714350700378418, 1.971515314919608, 1.9716179711478097, 1.9716839109148299, 1.9717516217912947, 1.9718291418892997, 1.971872057233538], "val_accuracy": [0.04699999839067459, 0.05366666615009308, 0.05833333358168602, 0.06433333456516266, 0.070333331823349, 0.07500000298023224, 0.07633333653211594, 0.07966666668653488, 0.0806666687130928, 0.0806666687130928, 0.0820000022649765, 0.08033332973718643, 0.0793333351612091, 0.07866666465997696, 0.07966666668653488, 0.08266666531562805, 0.08399999886751175, 0.08433333039283752, 0.08266666531562805, 0.0846666693687439, 0.0846666693687439, 0.08633333444595337, 0.08633333444595337, 0.08833333104848862, 0.08500000089406967, 0.08399999886751175, 0.08233333379030228, 0.07866666465997696, 0.08699999749660492]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026236733267917, 2.3032059740979265, 2.3038391150881536, 2.3021677251442187, 2.3029635784853055, 2.303110020807186], "accuracy": [0.09298639744520187, 0.08730682730674744, 0.0878351628780365, 0.08928807079792023, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [4, 5, 9, 7, 6], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [6, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026236733267917, 2.3032059740979265, 2.3038391150881536, 2.3021677251442187, 2.3029635784853055, 2.303110020807186], "accuracy": [0.09298639744520187, 0.08730682730674744, 0.0878351628780365, 0.08928807079792023, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [40, 92, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026236733267917, 2.3032059740979265, 2.3038391150881536, 2.3021677251442187, 2.3029635784853055, 2.303110020807186], "accuracy": [0.09298639744520187, 0.08730682730674744, 0.0878351628780365, 0.08928807079792023, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [2, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026236733267917, 2.3032059740979265, 2.3038391150881536, 2.3021677251442187, 2.3029635784853055, 2.303110020807186], "accuracy": [0.09298639744520187, 0.08730682730674744, 0.0878351628780365, 0.08928807079792023, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [86, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026236733267917, 2.3032059740979265, 2.3038391150881536, 2.3021677251442187, 2.3029635784853055, 2.303110020807186], "accuracy": [0.09298639744520187, 0.08730682730674744, 0.0878351628780365, 0.08928807079792023, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]