[{"genotype": [[0], [0, 0, 0, 0, 0], [0, 1, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0], [1], [2], [4, 2, 3], [42], [0, 0], [1], [], [2], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.37685713171958923, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.272247713507442, 2.3060910474701393, 2.297060658918821, 2.242865294954166, 2.3039721360595204, 2.3032076856353423, 2.3030450104438964, 2.3033365438076103], "accuracy": [0.1690661758184433, 0.09959053993225098, 0.13736626505851746, 0.1868973672389984, 0.09642054885625839, 0.1002509593963623, 0.1002509593963623, 0.09100515395402908], "val_loss": [1.9781654221670968, 1.9737862859453474, 1.9178392546517509, 1.974581241607666, 1.973703384399414, 1.9736410549708776, 1.9736377171107702, 1.9735922813415527], "val_accuracy": [0.09833333641290665, 0.1756666600704193, 0.32633334398269653, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.09833333641290665, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1], [2], [4, 2, 3], [79], [0, 0], [1], [], [2], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.36057141423225403, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2723882792884362, 2.30623962696218, 2.2964531357230733, 2.192897546151216, 2.209539607594341, 6.876448287908443, 3.7195015514783414, 2.3076871075981], "accuracy": [0.16893409192562103, 0.09893012791872025, 0.1372341811656952, 0.20353981852531433, 0.19640734791755676, 0.25782591104507446, 0.09985470771789551, 0.09866596013307571], "val_loss": [1.978649684361049, 1.9738480704171317, 1.9032419068472726, 1.829841477530343, 1.9768123626708984, 10.483880996704102, 1.9793880326407296, 1.974630355834961], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.3089999854564667, 0.20866666734218597, 0.3076666593551636, 0.09799999743700027, 0.10166666656732559, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0], [1], [2], [4, 2, 3], [79], [0, 0], [1], [], [2], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 9, 1, 5, 1], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3328571319580078, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2728815068343313, 2.306432088352607, 2.30041936996071, 2.3028533439185277, 2.303842168615762, 2.3030829180532426, 2.303029757291728, 2.303031451729515], "accuracy": [0.1694624274969101, 0.09932637959718704, 0.12138422578573227, 0.20420023798942566, 0.09853387624025345, 0.09615638852119446, 0.09668471664190292, 0.09140139818191528], "val_loss": [1.979093279157366, 1.9741332190377372, 1.9550518989562988, 1.9747792652675085, 1.9737371035984583, 1.973639965057373, 1.973644188472203, 1.9736339024135046], "val_accuracy": [0.09833333641290665, 0.11299999803304672, 0.17733334004878998, 0.09833333641290665, 0.10100000351667404, 0.09833333641290665, 0.10100000351667404, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [0, 1, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0], [1], [2], [4, 2, 3], [42], [0, 0], [1], [], [2], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3188571333885193, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2729173015530995, 2.306496691347948, 2.299567763044251, 2.3046355854959506, 2.30293736853352, 2.2714022511205245, 2.402412110599371, 2.2738403717540336, 2.308282967304053, 2.3040530277895117, 2.231706946690667, 2.6163473878444035, 2.3039873767727324, 2.303093213824674, 2.302190937370499, 2.299871231192973], "accuracy": [0.16959451138973236, 0.09893012791872025, 0.1286487877368927, 0.17897239327430725, 0.10368511080741882, 0.14872540533542633, 0.14991414546966553, 0.1320829540491104, 0.09985470771789551, 0.10077928751707077, 0.1686699241399765, 0.11834631860256195, 0.09866596013307571, 0.09694888442754745, 0.09655263274908066, 0.10394927859306335], "val_loss": [1.9791425977434431, 1.9739482743399483, 1.9455468314034599, 1.9741401672363281, 1.9719160624912806, 2.208181517464774, 1.9785716193062919, 1.9820107051304408, 1.9744139398847307, 1.97296142578125, 3.4514056614467075, 1.97475951058524, 1.9738120351518904, 1.973210334777832, 1.9721484865461076, 1.9649735178266252], "val_accuracy": [0.09833333641290665, 0.1379999965429306, 0.27133333683013916, 0.09833333641290665, 0.09833333641290665, 0.27166667580604553, 0.10400000214576721, 0.10166666656732559, 0.10433333367109299, 0.10433333367109299, 0.3086666762828827, 0.10466666519641876, 0.10100000351667404, 0.0963333323597908, 0.11933333426713943, 0.13333334028720856]}}, {"genotype": [[0], [1], [1, 1, 1, 1, 1, 0, 1], [1, 2, 6], [0, 0, 2, 1], [51, 76], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1], [0, 2, 9, 5], [0, 2, 3], [7], [0, 0], [1], [0], [2], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [4]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3015533595462405, 2.302557273390365, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10421344637870789, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0], [0, 1, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0, 0, 1], [0, 1, 1], [2, 4, 3, 8, 4, 3, 2, 5, 7, 9, 2, 2, 4, 6], [5, 2, 3], [42], [0, 0], [0, 1], [5], [3], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 2, 0, 3], [4]], "fitness": -0.10285714268684387, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3015533595462405, 2.302557273390365, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10421344637870789, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0], [1], [4, 0], [3, 0, 2, 1], [51, 76], [0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1], [5, 4, 3, 8, 4, 3, 2, 5, 7, 9, 2, 2, 4, 6], [4, 2, 3], [42], [0, 0], [1, 1], [], [3], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 2, 0, 3], [4]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(grad, tf.math.multiply(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3015533595462405, 2.302557273390365, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10421344637870789, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1], [4, 0], [3, 2, 2, 1], [51, 76], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 1, 3, 0, 4, 1, 7, 9, 7, 9, 6, 4, 1, 6], [4, 4, 3, 1, 5, 3, 5, 1, 3, 3], [79, 96], [0, 0], [1, 1], [], [3], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 9, 1, 5, 1], [0, 2, 0, 3], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 24, 24, 14, 10, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), tf.math.subtract(grad, tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026275613666636, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [0, 1, 0, 1], [3, 0], [3, 0, 2, 1], [51, 76], [0, 0, 1], [1, 1, 1], [2, 4, 3, 8, 4, 3, 2, 5, 7, 9, 2, 2, 4, 6], [4, 2, 3], [42], [0, 0], [1, 1], [], [3], [60], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 2, 0, 3], [4]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.square(beta))", "other_info": {"loss": [2.3026644636249154, 2.3026250505554455, 2.302669384759478, 2.3026220320773523, 2.3027142037364077, 2.30276884284427, 2.3028178421922916, 2.302888366540252, 2.302888890173079, 2.3030315506743277], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.1006472036242485, 0.10434553027153015, 0.09906221181154251, 0.09998679161071777, 0.09708096832036972, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737723895481654, 1.9738044738769531, 1.973773615700858, 1.9738256590706962, 1.9738939149039132, 1.9738695962088448, 1.9740129198346819, 1.9740086964198522, 1.9740680285862513, 1.9741919381277901], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0], [0, 1, 0, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0, 0, 0], [0, 1, 1], [2, 9], [4, 2, 3], [42], [0, 0], [0], [9], [3], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [4]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [894441881.1600722, 17174946830.20156, 78296016654.97926, 221262652306.30988, 471506594168.8147, 869523938625.7667], "accuracy": [0.10593052208423615, 0.0956280529499054, 0.10077928751707077, 0.09496764093637466, 0.09985470771789551, 0.1014397069811821], "val_loss": [3393479972.571429, 27138830336.0, 91583437677.71428, 217074115730.2857, 423961334345.1429, 732588446281.1428], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [1, 1, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0], [1], [2], [4, 2, 3], [42], [0, 0], [1], [], [5], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0], [0, 1, 1], [1, 2, 6], [1, 0, 2, 1], [51, 76], [0, 0, 1], [0, 1, 1], [2], [4, 2, 3], [], [0, 0], [1, 1], [], [3], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [4]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08691058307886124, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 2, 6, 8, 4, 3, 6, 9, 0, 4, 4, 3, 2, 5, 7, 3, 5, 7, 9, 4, 6, 8], [3, 0, 2, 1, 1, 1, 3, 0, 1, 3, 2, 2, 0, 0], [51, 76, 29, 77, 73, 36], [1], [1], [0, 2, 9, 5], [4, 2, 3], [], [0, 0], [1], [0], [2], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 36, 22, 14, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.negative(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.pow(tf.math.pow(alpha, tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha)))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1], [1, 1, 1, 1, 1, 0, 1], [1, 2, 6], [3, 0, 2, 1], [51, 76], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1], [0, 2, 9, 5], [5, 2, 3], [42], [0, 0, 0], [0, 1, 1], [7], [2, 4], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026275613666636, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1, 1, 1, 0, 1], [1, 2, 6], [1, 0], [51], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0], [0, 2, 9, 5], [5], [48], [0, 0], [0, 1], [0], [3], [22], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 5, 1, 1, 2, 3, 6, 6, 1, 7, 3, 0, 2, 9, 6, 1, 8, 8, 0], [0, 2, 0, 3, 3, 1, 1, 3, 0, 2, 2, 3], [14, 31, 95, 52, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, sigma)))))", "other_info": {"loss": [2.3023816017253664, 2.3026439139651207, 2.3026345619483317, 2.302650068697755, 2.302670802769014, 2.3026586301007748, 2.3026704768053747, 2.3026429979225838], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09615638852119446, 0.10011887550354004, 0.09549596905708313, 0.09338264167308807, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97363315309797, 1.973616463797433, 1.973616259438651, 1.973628112248012, 1.9736930302211217, 1.9737067222595215, 1.9737017495291573, 1.9736872400556291], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10433333367109299, 0.10100000351667404, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [4, 0, 3, 7, 4, 5, 9], [3, 0, 2, 1], [51, 76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3, 8, 4, 3, 2, 5, 7, 9, 2, 2, 4, 6], [4, 2, 3, 4, 1], [42], [0, 0], [1, 1], [], [1], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [4]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.square(alpha), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1], [4, 0], [3, 0, 2, 1], [51, 76], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1], [2, 4, 3, 8, 4, 3, 2, 5, 7, 9, 2, 2, 4, 6], [4, 2, 3], [42], [0, 0], [1, 1], [], [2], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 9, 1, 5, 1], [3, 0, 2, 3, 0, 0, 0], [4]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5316367488826317, 3.1263255024031875, 3.7226218074430264, 4.596248489093188, 5.6037554452447935, 6.998667466437356], "accuracy": [0.1500462293624878, 0.1200634017586708, 0.11861048638820648, 0.10672302544116974, 0.11015717685222626, 0.10777968913316727], "val_loss": [2.221552303859166, 2.7193266323634555, 3.307757650102888, 4.0739321027483255, 4.975049291338239, 6.0560712814331055], "val_accuracy": [0.12266666442155838, 0.10000000149011612, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 0, 0], [0, 1, 0, 0, 1], [4, 0, 5], [1, 0, 2, 1], [51, 76], [0], [1], [0], [3, 2, 3], [], [0, 0], [1], [], [3], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [6, 5, 1, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 2, 1, 2, 0, 0, 2, 2, 1, 0, 1, 2], [4]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024671344457284, 2.3035435837808773, 2.301519883228504, 2.302885748250153, 2.3006483261154753, 2.3024761858491565], "accuracy": [0.09457138925790787, 0.08955223858356476, 0.0882314071059227, 0.08915598690509796, 0.09589222073554993, 0.09245806187391281], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1], [4, 0, 8, 4], [3, 0, 2, 1], [51, 76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [2, 0, 6, 3, 6, 1, 4, 4, 1, 0, 7, 2, 6, 5, 5, 8], [4, 2, 3, 2, 3, 4, 1, 2, 0, 3, 5, 5], [42], [1, 0], [1], [], [2], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 7, 7, 4, 3, 1, 28, 28, 16, 12, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.subtract(beta, tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), alpha)))), beta)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024671344457284, 2.3035435837808773, 2.301519883228504, 2.302885748250153, 2.3006483261154753, 2.3024761858491565], "accuracy": [0.09457138925790787, 0.08955223858356476, 0.0882314071059227, 0.08915598690509796, 0.09589222073554993, 0.09245806187391281], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0], [1, 1, 1, 1, 1, 0, 1], [4, 0], [3, 0, 2, 1], [51, 76], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1], [2], [2, 2, 3], [42], [0, 0, 0, 1], [0, 0, 0], [5, 0, 0], [2], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024671344457284, 2.3035435837808773, 2.301519883228504, 2.302885748250153, 2.3006483261154753, 2.3024761858491565], "accuracy": [0.09457138925790787, 0.08955223858356476, 0.0882314071059227, 0.08915598690509796, 0.09589222073554993, 0.09245806187391281], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]