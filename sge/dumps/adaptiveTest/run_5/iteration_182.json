[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 2, 1, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7839999794960022, "mapping_values": [1, 33, 33, 19, 14, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), alpha))), tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.232548096145007, 2.15301629007768, 2.0209976258672793, 1.821784135514656, 1.60221982589566, 1.4173377363232416, 1.2744374133025524, 1.1885454813565843, 1.117197459274043, 1.0548670710258952, 1.0210872331173853, 0.9801377993155275, 0.9397469639321517, 0.91702796994514, 0.9006553403595262, 0.8843370050156452, 0.8643425604717968, 0.8347723659129427, 0.8275159706985631, 0.8183877408748541, 0.8073373178622631, 0.7996097182821305, 0.7895635069321962, 0.7701602945505998, 0.772602537005506, 0.7635898778325515, 0.7544922890711643, 0.7431905150744169, 0.7397613034839123, 0.7356937350519518, 0.7284779102102231, 0.7199435034337974, 0.7150709798952938, 0.7026227362844623, 0.7102652331227404, 0.6933258749065366, 0.6987952704852236, 0.6903371860275274, 0.6941654726089409, 0.6823367586996829, 0.6733195772339182, 0.6804145285009692, 0.6780956232347792, 0.6681818126089081, 0.6681374603526435, 0.6663109502772204, 0.6623041650260428, 0.6421372813319391, 0.6483174315092193, 0.646082538104155, 0.6508299403218325], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.3543785512447357, 0.40866464376449585, 0.44670453667640686, 0.49451854825019836, 0.5398229956626892, 0.5678246021270752, 0.5823537111282349, 0.6069211363792419, 0.6236956715583801, 0.6380926966667175, 0.6503764390945435, 0.6627922058105469, 0.6725663542747498, 0.6791704893112183, 0.6841896772384644, 0.6860388517379761, 0.6996433734893799, 0.7040021419525146, 0.702681303024292, 0.7074362635612488, 0.7150970697402954, 0.7145687341690063, 0.7147008180618286, 0.7177387475967407, 0.7217012047767639, 0.7255316376686096, 0.7265883088111877, 0.7310791015625, 0.7309470176696777, 0.7353057861328125, 0.7346453666687012, 0.7400607466697693, 0.7449478507041931, 0.737947404384613, 0.7477215528488159, 0.7442874312400818, 0.748249888420105, 0.7452120184898376, 0.7457403540611267, 0.7511557340621948, 0.7456082701683044, 0.7540615797042847, 0.7564390301704407, 0.7544577717781067, 0.7576277852058411, 0.7584202885627747, 0.763439416885376, 0.7621186375617981, 0.7611940503120422, 0.7637035846710205], "val_loss": [1.9260176249912806, 1.8669078009469169, 1.7662315368652344, 1.6004936013902937, 1.3765664441244942, 1.1586435862949915, 0.9980387006487165, 0.8891429901123047, 0.8178539957318988, 0.7655811820711408, 0.7275226797376361, 0.6989238262176514, 0.6739952564239502, 0.6598406689507621, 0.6399622474397931, 0.62870682988848, 0.6124617542539325, 0.6086464098521641, 0.5938203675406319, 0.5838275636945452, 0.5774161985942295, 0.5733680384499686, 0.570284264428275, 0.5602846997124808, 0.5522463321685791, 0.5497310161590576, 0.547620415687561, 0.5385681561061314, 0.536311149597168, 0.529769880431039, 0.5298449993133545, 0.5227067470550537, 0.5219908612115043, 0.5159158025469098, 0.514390230178833, 0.5076454366956439, 0.5051325900214059, 0.5037533385413033, 0.5074974468776158, 0.5002842119761876, 0.4973998410361154, 0.49523498330797466, 0.4919292075293405, 0.4893615245819092, 0.4857535532542637, 0.4832908936909267, 0.4807098763329642, 0.47991274084363666, 0.4794633388519287, 0.4755511794771467, 0.47654385226113455, 0.479216422353472], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5106666684150696, 0.5406666398048401, 0.5876666903495789, 0.6190000176429749, 0.656000018119812, 0.6926666498184204, 0.6973333358764648, 0.7053333520889282, 0.7146666646003723, 0.7153333425521851, 0.7266666889190674, 0.7276666760444641, 0.7400000095367432, 0.7353333234786987, 0.7413333058357239, 0.7443333268165588, 0.749666690826416, 0.7540000081062317, 0.7519999742507935, 0.753333330154419, 0.7573333382606506, 0.7540000081062317, 0.7616666555404663, 0.7643333077430725, 0.7563333511352539, 0.7696666717529297, 0.7680000066757202, 0.7713333368301392, 0.7670000195503235, 0.7753333449363708, 0.7763333320617676, 0.7713333368301392, 0.7756666541099548, 0.777999997138977, 0.7793333530426025, 0.7796666622161865, 0.7799999713897705, 0.7853333353996277, 0.7820000052452087, 0.777999997138977, 0.7799999713897705, 0.7873333096504211, 0.7946666479110718, 0.7919999957084656, 0.7950000166893005, 0.7933333516120911, 0.7929999828338623, 0.7846666574478149, 0.7829999923706055, 0.7876666784286499]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 8, 2, 5, 3, 9, 7, 8, 2, 1, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 0, 0, 0, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 2, 1, 1, 1], [70, 32, 28, 91, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7828571200370789, "mapping_values": [1, 30, 30, 20, 10, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.2325482310525744, 2.153015727994307, 2.020989188885314, 1.8217797473657558, 1.6021960791721477, 1.417305270442401, 1.2744276136250434, 1.188532261359709, 1.1171555114759193, 1.0548473957617521, 1.0210595932052182, 0.9801667205819112, 0.9397673720555173, 0.9169987101187055, 0.900616174100995, 0.884317434876429, 0.864361594043246, 0.834709940616717, 0.8274541298600866, 0.8184689642211245, 0.8072586255995605, 0.7997824414814657, 0.7894979542855179, 0.769906261727448, 0.7725768102127027, 0.7635723223870126, 0.7545364023026474, 0.7429854865355058, 0.739693234200176, 0.7354643548704834, 0.7283622962356857, 0.7201759737748133, 0.7149436647991825, 0.7024941695695383, 0.7101862942931548, 0.6930525305170062, 0.6989239272093808, 0.6902660402198588, 0.6940629883858632, 0.6824116077499934, 0.6731711612196803, 0.6807317194008414, 0.6779581546200864, 0.6681519001230288, 0.6682012369997702, 0.6663675422382519, 0.6622947591517218, 0.6419753368819442, 0.6484868198479675], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.3543785512447357, 0.4087967276573181, 0.4468366205692291, 0.49451854825019836, 0.5396909117698669, 0.5678246021270752, 0.5819574594497681, 0.6071853041648865, 0.6234315037727356, 0.6379606127738953, 0.6503764390945435, 0.6633205413818359, 0.672698438167572, 0.6790384650230408, 0.6839255094528198, 0.6866992712020874, 0.6985867023468018, 0.7043983340263367, 0.7034738063812256, 0.7086250185966492, 0.7156254053115845, 0.7141724824905396, 0.7152291536331177, 0.7174745798110962, 0.7220974564552307, 0.7257958054542542, 0.7264562249183655, 0.7308149337768555, 0.7304186820983887, 0.7341170310974121, 0.7342491149902344, 0.7396644949913025, 0.744419515132904, 0.7368907928466797, 0.748249888420105, 0.744419515132904, 0.7494386434555054, 0.7470611333847046, 0.7456082701683044, 0.7510236501693726, 0.7460044622421265, 0.7537974119186401, 0.7569673657417297, 0.7540615797042847, 0.7573636174201965, 0.7578919529914856, 0.763439416885376, 0.7609298825263977], "val_loss": [1.9260176249912806, 1.866907732827323, 1.7662313325064523, 1.6004884924207414, 1.3765222685677665, 1.1585835388728551, 0.9980120999472482, 0.889110633305141, 0.8178069932120187, 0.7655201469148908, 0.7274972881589618, 0.6988956757954189, 0.6740638869149345, 0.6596038511821202, 0.63986223084586, 0.6285784925733294, 0.6123517581394741, 0.6086730786732265, 0.5936926433018276, 0.583498341696603, 0.5771274566650391, 0.5730690274919782, 0.5702236890792847, 0.5602126632417951, 0.5521947656358991, 0.5499782732554844, 0.5473265307290214, 0.5385653972625732, 0.5361901181084769, 0.5295426845550537, 0.5297137158257621, 0.5226860386984689, 0.5220831802913121, 0.5159015144620623, 0.5142587423324585, 0.5078194311686924, 0.5049501827784947, 0.503436803817749, 0.5076944317136493, 0.5004927941731044, 0.4967692920139858, 0.4949885606765747, 0.4918626035962786, 0.4893092257635934, 0.48567584582737516, 0.4831809997558594, 0.48056444099971224, 0.47976769719805035, 0.47976480211530415, 0.47561802182878765], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5103333592414856, 0.5406666398048401, 0.5876666903495789, 0.6190000176429749, 0.656000018119812, 0.6923333406448364, 0.6970000267028809, 0.7053333520889282, 0.7146666646003723, 0.715666651725769, 0.7269999980926514, 0.7273333072662354, 0.7400000095367432, 0.7353333234786987, 0.7406666874885559, 0.7443333268165588, 0.749666690826416, 0.7536666393280029, 0.7526666522026062, 0.7536666393280029, 0.7583333253860474, 0.7546666860580444, 0.7613333463668823, 0.7646666765213013, 0.7573333382606506, 0.7696666717529297, 0.7680000066757202, 0.7713333368301392, 0.7670000195503235, 0.7746666669845581, 0.7763333320617676, 0.7716666460037231, 0.7766666412353516, 0.7773333191871643, 0.781000018119812, 0.7793333530426025, 0.7803333401679993, 0.784333348274231, 0.781333327293396, 0.7770000100135803, 0.7803333401679993, 0.7866666913032532, 0.7943333387374878, 0.7919999957084656, 0.7943333387374878, 0.7929999828338623, 0.7926666736602783, 0.7850000262260437]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 9, 6, 1, 2, 9, 5, 5, 2, 5, 2, 5, 2, 3, 2, 1, 2, 3, 9, 2, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 2, 0, 1, 2, 2, 2, 2, 2, 0, 2, 1, 2, 3, 1, 1], [70, 83, 18, 88, 41, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7825714349746704, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.2325482849967067, 2.153020734595522, 2.021008363410608, 1.8217954558782008, 1.6022402757761296, 1.417337526325316, 1.2744151378084152, 1.1885671038370027, 1.1172365282410408, 1.0548878477674986, 1.0211044129064417, 0.9801792556016736, 0.9398589721445268, 0.9170716481044419, 0.9006323537349764, 0.8844033303262063, 0.8644864703087586, 0.8346640629507626, 0.8274246638855048, 0.8183791792041606, 0.8073188602696036, 0.7997690527477851, 0.7896554843939495, 0.770006918368669, 0.7726284237806084, 0.7635954632231304, 0.7546685964219433, 0.7430309655329083, 0.7396504941271312, 0.7355233909762248, 0.7282841635921833, 0.7201809850918098, 0.7148065517260777, 0.7024868473778658, 0.7100565900592882, 0.6931412258184093, 0.6987914661170155, 0.6903009126451211, 0.6940793279155434, 0.682486653453906, 0.6732125749220828, 0.6804644352787317, 0.6778929206311285, 0.6680013873494927, 0.6678914684172965, 0.6664467840508983, 0.6622945251891232, 0.6419726438557609, 0.6486306968161679], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.3543785512447357, 0.4087967276573181, 0.4465724527835846, 0.4943864643573761, 0.5395588278770447, 0.5683529376983643, 0.5822216272354126, 0.6073173880577087, 0.6236956715583801, 0.6379606127738953, 0.650640606880188, 0.6625280380249023, 0.672698438167572, 0.6794346570968628, 0.6836613416671753, 0.6872276067733765, 0.6985867023468018, 0.7038700580596924, 0.7038700580596924, 0.7087571024894714, 0.7144366502761841, 0.7144366502761841, 0.7149649858474731, 0.7176066637039185, 0.7214370369911194, 0.7257958054542542, 0.7269845604896545, 0.7310791015625, 0.7312111854553223, 0.7342491149902344, 0.7343811988830566, 0.7405890822410583, 0.7445515990257263, 0.7372870445251465, 0.7486461400985718, 0.7441553473472595, 0.7490423917770386, 0.7452120184898376, 0.7453441023826599, 0.7518161535263062, 0.7453441023826599, 0.7543256878852844, 0.7563069462776184, 0.7534011602401733, 0.7569673657417297, 0.7576277852058411, 0.7630431652069092, 0.7623828053474426], "val_loss": [1.9260176249912806, 1.866908277784075, 1.766237463269915, 1.6005095754350935, 1.3765604836600167, 1.1586409296308244, 0.9980155399867466, 0.8891088962554932, 0.8178821461541312, 0.7656183242797852, 0.7276099920272827, 0.6989097935812814, 0.6740570068359375, 0.6599425758634295, 0.6398715802601406, 0.6286942958831787, 0.612441897392273, 0.6086068153381348, 0.5937083448682513, 0.583571025303432, 0.5772006341389248, 0.572963033403669, 0.5702247960226876, 0.5601171595709664, 0.552129898752485, 0.5497408935001918, 0.5475123269217355, 0.5384951659611293, 0.5362024307250977, 0.5295391082763672, 0.5295408964157104, 0.5225841999053955, 0.5226196902138847, 0.5158311298915318, 0.514114328793117, 0.5078851325171334, 0.5049895899636405, 0.5037339074271066, 0.5079592296055385, 0.5007739407675607, 0.49709345613207134, 0.4952359199523926, 0.4916978733880179, 0.48923889228275846, 0.4854618310928345, 0.4829566478729248, 0.48046018396105084, 0.4797834498541696, 0.4792868750435965, 0.475385240146092], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5106666684150696, 0.5406666398048401, 0.5873333215713501, 0.6186666488647461, 0.6556666493415833, 0.6923333406448364, 0.6970000267028809, 0.7053333520889282, 0.7146666646003723, 0.7153333425521851, 0.7266666889190674, 0.7273333072662354, 0.7403333187103271, 0.7356666922569275, 0.7419999837875366, 0.7450000047683716, 0.7490000128746033, 0.7543333172798157, 0.7523333430290222, 0.7536666393280029, 0.7586666941642761, 0.7549999952316284, 0.7606666684150696, 0.7643333077430725, 0.7559999823570251, 0.7696666717529297, 0.768666684627533, 0.7706666588783264, 0.7666666507720947, 0.7749999761581421, 0.7763333320617676, 0.7699999809265137, 0.7760000228881836, 0.778333306312561, 0.7796666622161865, 0.7789999842643738, 0.7799999713897705, 0.7829999923706055, 0.7820000052452087, 0.777999997138977, 0.781000018119812, 0.7863333225250244, 0.7946666479110718, 0.7913333177566528, 0.7940000295639038, 0.7946666479110718, 0.7929999828338623, 0.7846666574478149]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [5, 0, 0, 1, 2, 6, 5, 3, 2, 2, 3, 4, 7, 0, 2, 1, 5, 3, 9, 6, 6, 2, 3, 5, 8, 4, 5, 4, 6, 4], [2, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [70, 83, 42, 15, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7822856903076172, "mapping_values": [1, 26, 26, 15, 11, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))))), alpha)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.2325482670153294, 2.153017113410628, 2.020993889944822, 1.8217826028305384, 1.6022482771584385, 1.4173808024307804, 1.274451074504487, 1.1885647674860846, 1.1172181651765771, 1.054864425212637, 1.0210875369113404, 0.9802130581507231, 0.939784162662694, 0.9170517541351036, 0.900602438013394, 0.884371359074955, 0.8643691090466151, 0.8347343525331034, 0.827446555433146, 0.8185737791739718, 0.8073613696078803, 0.7996144417789964, 0.7896441667228878, 0.7700513567528973, 0.7725926629304414, 0.7636312843549993, 0.7545694198590763, 0.7430731344846545, 0.739703829136381, 0.7354788681802937, 0.7285007052197354, 0.7202301897770851, 0.7147355529264042, 0.7026078525063164, 0.710227496525426, 0.693241577476889, 0.6988195301503585, 0.6903173338231662, 0.6940460393709388, 0.682239725990948, 0.6731615096995891, 0.6806182830703099, 0.6780991644954417, 0.6681023435255068, 0.6681813479981418, 0.6663318995502977, 0.6623066729243405, 0.6421458699983171, 0.6487337764401273], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.3543785512447357, 0.4087967276573181, 0.4468366205692291, 0.4950468838214874, 0.5394267439842224, 0.5686171054840088, 0.5823537111282349, 0.6070532202720642, 0.6238277554512024, 0.6380926966667175, 0.6505085229873657, 0.6621318459510803, 0.6724342703819275, 0.6794346570968628, 0.6837934255599976, 0.6865671873092651, 0.6993792057037354, 0.7040021419525146, 0.7037379741668701, 0.7074362635612488, 0.7154933214187622, 0.7140403985977173, 0.7147008180618286, 0.7182670831680298, 0.7214370369911194, 0.7259278893470764, 0.72672039270401, 0.7302865982055664, 0.7314753532409668, 0.7345132827758789, 0.7339849472045898, 0.7397965788841248, 0.744419515132904, 0.7364945411682129, 0.7475894689559937, 0.7442874312400818, 0.7491744756698608, 0.7460044622421265, 0.7453441023826599, 0.7514199018478394, 0.7457403540611267, 0.7540615797042847, 0.7573636174201965, 0.7541936039924622, 0.7576277852058411, 0.7578919529914856, 0.7633073329925537, 0.761590301990509], "val_loss": [1.9260176249912806, 1.866908005305699, 1.7662303788321358, 1.600484813962664, 1.3765841211591447, 1.158688988004412, 0.9980524267469134, 0.8891117913382394, 0.817828757422311, 0.7655731439590454, 0.7275195462363107, 0.6989432913916451, 0.6740351063864571, 0.6597892556871686, 0.6399361576352801, 0.6287274020058768, 0.6122657230922154, 0.6085153477532523, 0.5935529470443726, 0.5834917851856777, 0.5770424774714878, 0.572854825428554, 0.5699958971568516, 0.5599287407738822, 0.5519096851348877, 0.5496123688561576, 0.5473916190011161, 0.5383686678750175, 0.5362457036972046, 0.529579656464713, 0.5299409287316459, 0.5227665049689156, 0.522367136819022, 0.5159197875431606, 0.5142403500420707, 0.5075887441635132, 0.5048790488924298, 0.5035532372338432, 0.506954516683306, 0.5005542380469186, 0.49718242032187326, 0.4950387307575771, 0.4917689732142857, 0.48905926091330393, 0.48591641017368864, 0.48336897577558247, 0.4807686465127127, 0.479715245110648, 0.47968062332698275, 0.47539455550057547], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5106666684150696, 0.5406666398048401, 0.5876666903495789, 0.6186666488647461, 0.6556666493415833, 0.6926666498184204, 0.6976666450500488, 0.7049999833106995, 0.7149999737739563, 0.7153333425521851, 0.7263333201408386, 0.7273333072662354, 0.7406666874885559, 0.7350000143051147, 0.7413333058357239, 0.7443333268165588, 0.7493333220481873, 0.7549999952316284, 0.7523333430290222, 0.753000020980835, 0.7580000162124634, 0.7556666731834412, 0.7616666555404663, 0.765333354473114, 0.7559999823570251, 0.7699999809265137, 0.7689999938011169, 0.7703333497047424, 0.7670000195503235, 0.7743333578109741, 0.7763333320617676, 0.7713333368301392, 0.7760000228881836, 0.7776666879653931, 0.7806666493415833, 0.7793333530426025, 0.7796666622161865, 0.7836666703224182, 0.7820000052452087, 0.7776666879653931, 0.7796666622161865, 0.7866666913032532, 0.7946666479110718, 0.7910000085830688, 0.7943333387374878, 0.7933333516120911, 0.7940000295639038, 0.784333348274231]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 8, 2, 5, 3, 5, 7, 8, 2, 1, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7820000052452087, "mapping_values": [1, 31, 31, 20, 11, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))))), grad)), tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.2325481500891393, 2.1530163802679865, 2.0209980264961476, 1.8217736304381016, 1.6021920245289882, 1.4172999859958386, 1.2743992301467042, 1.1884884078662314, 1.1171387329770432, 1.054862506810653, 1.0209511037295473, 0.9801097221189344, 0.9397286058590161, 0.9169406243885954, 0.9005800792176127, 0.884290849457107, 0.8643827085340059, 0.8346993830131266, 0.8274122804950461, 0.818457600014195, 0.8072499230616222, 0.7994930465947903, 0.7894423527567063, 0.7700011831910115, 0.7724383461036073, 0.7636086877389685, 0.7545449366470007, 0.7430669649827277, 0.739752985742728, 0.735660203617042, 0.7285659960421274, 0.7199607233502971, 0.714790362306259, 0.7024763444820652, 0.7100123857321315, 0.693154638154616, 0.6988437451375962, 0.6901548342178243, 0.6941076521513847, 0.68240026883036, 0.6730523223276105, 0.6806289573639076, 0.6779446536681246, 0.6681269551265068, 0.6681389873919943, 0.6662798140578345, 0.6623644883748232, 0.6418256155881805, 0.6484785603573137], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.3543785512447357, 0.4087967276573181, 0.44670453667640686, 0.49425438046455383, 0.5398229956626892, 0.5679566860198975, 0.5826178789138794, 0.6069211363792419, 0.6232994198799133, 0.6376964449882507, 0.6502443552017212, 0.6629242897033691, 0.6725663542747498, 0.6787742972373962, 0.6840575933456421, 0.6865671873092651, 0.6995112895965576, 0.7047945857048035, 0.7030775547027588, 0.7071720957756042, 0.7157574892044067, 0.7144366502761841, 0.7147008180618286, 0.7180029153823853, 0.7219653725624084, 0.7257958054542542, 0.7265883088111877, 0.7304186820983887, 0.7312111854553223, 0.7351737022399902, 0.7334566116333008, 0.7408532500267029, 0.7441553473472595, 0.7380794882774353, 0.7481178045272827, 0.7442874312400818, 0.7494386434555054, 0.7461365461349487, 0.7450799345970154, 0.7516840696334839, 0.7457403540611267, 0.7548540234565735, 0.7568352818489075, 0.7536653280258179, 0.7563069462776184, 0.7578919529914856, 0.7627789974212646, 0.7622507214546204], "val_loss": [1.9260175568716866, 1.8669078690665108, 1.766230242592948, 1.60048542703901, 1.3765321799686976, 1.1585730825151717, 0.9980171067374093, 0.8890858037131173, 0.8178389923913139, 0.7655437162944249, 0.7274473224367414, 0.6988820518766131, 0.6740778854915074, 0.6596555709838867, 0.639945421900068, 0.6285768917628697, 0.6123237098966327, 0.6086456435067313, 0.593733549118042, 0.5837834221976144, 0.5774109193256923, 0.5733601706368583, 0.5702037470681327, 0.5602396215711322, 0.5522479840687343, 0.5499122653688703, 0.5473966768809727, 0.5384461198534284, 0.5361676556723458, 0.529529230935233, 0.5297824484961373, 0.522688627243042, 0.5223805734089443, 0.5157655307224819, 0.5141259942735944, 0.507800987788609, 0.5050984450748989, 0.5036587204251971, 0.5077060971941266, 0.5006558724812099, 0.4971153906413487, 0.4950390202658517, 0.49171301296779085, 0.4891282320022583, 0.48561605385371615, 0.4829037700380598, 0.4805511065891811, 0.47984439986092703, 0.47941223212650846, 0.4755091837474278], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5106666684150696, 0.5406666398048401, 0.5876666903495789, 0.6190000176429749, 0.6556666493415833, 0.6926666498184204, 0.6973333358764648, 0.7053333520889282, 0.7143333554267883, 0.715666651725769, 0.7266666889190674, 0.7273333072662354, 0.7400000095367432, 0.7356666922569275, 0.7416666746139526, 0.7446666955947876, 0.749666690826416, 0.7543333172798157, 0.7516666650772095, 0.753000020980835, 0.7573333382606506, 0.7543333172798157, 0.7613333463668823, 0.7646666765213013, 0.7566666603088379, 0.7696666717529297, 0.7683333158493042, 0.7716666460037231, 0.7670000195503235, 0.7749999761581421, 0.7766666412353516, 0.7710000276565552, 0.7766666412353516, 0.7773333191871643, 0.7799999713897705, 0.7789999842643738, 0.7803333401679993, 0.784333348274231, 0.7816666960716248, 0.7770000100135803, 0.7806666493415833, 0.7870000004768372, 0.7950000166893005, 0.7916666865348816, 0.7950000166893005, 0.793666660785675, 0.7926666736602783, 0.7850000262260437]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 9, 5, 8, 2, 0, 9, 5, 7, 3, 2, 1, 2, 3, 2, 2, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 0, 2, 0, 1, 2, 2, 2, 2, 2, 0, 2, 1, 2, 3, 1, 1], [70, 83, 18, 92, 44, 67, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7820000052452087, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.2325482985063583, 2.1530176756829476, 2.020999107567421, 1.821807842323289, 1.6022513510607426, 1.4173496258398954, 1.2744367751525991, 1.1885657942038423, 1.1172271274446481, 1.0548888968281411, 1.0210975714017057, 0.9801481543215841, 0.9398202431389306, 0.9170959930945192, 0.9006234950172808, 0.8844371114298653, 0.8644044927366028, 0.8347395340906016, 0.8274433634079931, 0.8185294690684494, 0.8073388395560117, 0.7996260643304536, 0.789573831517919, 0.7699054893469846, 0.7726398587793706, 0.7636059977516695, 0.7546250720254624, 0.7430911127602372, 0.7396849672146572, 0.7356130701833319, 0.7283855442515201, 0.7203398329974512, 0.7148622774397614, 0.7029395957727473, 0.7101703167685963, 0.6934044831905383, 0.6987019996160624, 0.6901819914040107, 0.6940621351679287, 0.6821975123219407, 0.6732842645325823, 0.6806120562547108, 0.6781597462044952, 0.6682488549308313, 0.6680191337723758, 0.6662490673982204, 0.6625853997290236, 0.6418354211387665, 0.6489705791830497], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.3543785512447357, 0.4087967276573181, 0.4468366205692291, 0.4943864643573761, 0.5394267439842224, 0.5679566860198975, 0.5819574594497681, 0.6073173880577087, 0.6236956715583801, 0.6379606127738953, 0.6505085229873657, 0.6629242897033691, 0.6724342703819275, 0.6794346570968628, 0.6837934255599976, 0.6864351034164429, 0.6999075412750244, 0.7043983340263367, 0.7037379741668701, 0.7077004313468933, 0.7154933214187622, 0.7137762308120728, 0.7141724824905396, 0.717870831489563, 0.7215691208839417, 0.7252674698829651, 0.7263241410255432, 0.7306828498840332, 0.7306828498840332, 0.7339849472045898, 0.7339849472045898, 0.7397965788841248, 0.7440232634544373, 0.7358341217041016, 0.7477215528488159, 0.7440232634544373, 0.7498348951339722, 0.7458723783493042, 0.7453441023826599, 0.7514199018478394, 0.7453441023826599, 0.7541936039924622, 0.7559106945991516, 0.7549861073493958, 0.7576277852058411, 0.7578919529914856, 0.7625148296356201, 0.7611940503120422], "val_loss": [1.9260176249912806, 1.8669082096644811, 1.7662335123334612, 1.6005065441131592, 1.3765823500497, 1.158663068498884, 0.9980135304587228, 0.8891241209847587, 0.8178532293864659, 0.7655313696180072, 0.7274537427084786, 0.698895914213998, 0.6739740882601056, 0.6599037817546299, 0.6399371453693935, 0.6287802968706403, 0.6123273883547101, 0.6086196899414062, 0.5936850309371948, 0.5835256917136056, 0.5770301989146641, 0.5730185338429042, 0.5700837884630475, 0.5600543703351702, 0.5518920251301357, 0.5494786330631801, 0.5472536938531058, 0.5384359530040196, 0.5360990762710571, 0.5297173942838397, 0.5300799267632621, 0.5227717501776559, 0.522472756249564, 0.5160932200295585, 0.5141517264502389, 0.5076849801199776, 0.5049304451261248, 0.5037965604237148, 0.5073755979537964, 0.500626700265067, 0.4972254719052996, 0.495340211050851, 0.49189557347978863, 0.4892080511365618, 0.4859420231410435, 0.4833818333489554, 0.4805502550942557, 0.4799468347004482, 0.4794961554663522, 0.47566659109933035], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5103333592414856, 0.5406666398048401, 0.5876666903495789, 0.6193333268165588, 0.6556666493415833, 0.6923333406448364, 0.6976666450500488, 0.7049999833106995, 0.7149999737739563, 0.715666651725769, 0.7269999980926514, 0.7269999980926514, 0.7400000095367432, 0.7350000143051147, 0.7416666746139526, 0.7446666955947876, 0.75, 0.7543333172798157, 0.7523333430290222, 0.753333330154419, 0.7586666941642761, 0.7549999952316284, 0.7609999775886536, 0.7649999856948853, 0.7566666603088379, 0.7689999938011169, 0.7683333158493042, 0.7706666588783264, 0.7666666507720947, 0.7736666798591614, 0.7763333320617676, 0.7710000276565552, 0.7766666412353516, 0.7776666879653931, 0.7799999713897705, 0.7796666622161865, 0.7803333401679993, 0.784333348274231, 0.7823333144187927, 0.7766666412353516, 0.7799999713897705, 0.7866666913032532, 0.7953333258628845, 0.7906666398048401, 0.7946666479110718, 0.7933333516120911, 0.7926666736602783, 0.7853333353996277]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 6, 2, 2, 3, 0, 7, 0, 2, 1, 5, 3, 9, 1, 6, 2, 1, 5, 8, 4, 5, 4, 6, 4], [2, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 18, 19, 41, 57, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7820000052452087, "mapping_values": [1, 47, 47, 28, 19, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, grad)))))))), tf.math.add(alpha, alpha))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.232548199561546, 2.1530208020493053, 2.0210028665570565, 1.8218003582598559, 1.6022529298477264, 1.4173640749946073, 1.2744675633646259, 1.1885665698593728, 1.1171801184713566, 1.0548826148717505, 1.0210677677252038, 0.9801923985400015, 0.9397852120461198, 0.9170217669761224, 0.9005976325532528, 0.8843664296897427, 0.8644307963190896, 0.834783479482774, 0.827353103561424, 0.818485683304302, 0.807268442447553, 0.799730194723444, 0.7896178370737018, 0.7700630039145934, 0.7725475009138622, 0.7635429953036134, 0.7546229523958043, 0.7429568451456405, 0.7396971320337576, 0.7354598936151598, 0.7285331877199666, 0.7201509531919494, 0.714872369605946, 0.7027652570678888, 0.7101296501593615, 0.6931648569147364, 0.6988364705446137, 0.6900236940638989, 0.6940952540546156, 0.6825380462382086, 0.6732177992601436, 0.6807179360137151, 0.6780644971318863, 0.6679352176597232, 0.6679701578143156, 0.6664382267653305, 0.6624156122336124, 0.6420644609573227, 0.6486356350503594], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.35424646735191345, 0.40866464376449585, 0.44710078835487366, 0.4943864643573761, 0.5392946600914001, 0.568220853805542, 0.5823537111282349, 0.607449471950531, 0.6234315037727356, 0.637828528881073, 0.6505085229873657, 0.6626601219177246, 0.6725663542747498, 0.6787742972373962, 0.6837934255599976, 0.6872276067733765, 0.6988508701324463, 0.7047945857048035, 0.7025492191314697, 0.7084929347038269, 0.7152291536331177, 0.7143045663833618, 0.7150970697402954, 0.7180029153823853, 0.7213049530982971, 0.7252674698829651, 0.726192057132721, 0.7300224304199219, 0.7302865982055664, 0.7334566116333008, 0.7338528633117676, 0.7409853339195251, 0.7434949278831482, 0.7366266250610352, 0.748249888420105, 0.7440232634544373, 0.7498348951339722, 0.7454761862754822, 0.7453441023826599, 0.7510236501693726, 0.7448157668113708, 0.7536653280258179, 0.7560427784919739, 0.7543256878852844, 0.7567031979560852, 0.7572315335273743, 0.763439416885376, 0.761590301990509], "val_loss": [1.9260175568716866, 1.8669079371861048, 1.7662383488246374, 1.6005026953560966, 1.3765957014901298, 1.1586781569889613, 0.998070478439331, 0.8891563074929374, 0.817839435168675, 0.7655114446367536, 0.7275036743709019, 0.6989506823675973, 0.6740093742098127, 0.6598750523158482, 0.6398984364100865, 0.6288220541817802, 0.6123119762965611, 0.6087063380650112, 0.5936964920588902, 0.5835952588490078, 0.5772103922707694, 0.5728907755443028, 0.5701760564531598, 0.5601896728788104, 0.5521649973733085, 0.5497455767222813, 0.5474773985998971, 0.5382917097636631, 0.5361793722425189, 0.5294673953737531, 0.5297304562159947, 0.5227668966565814, 0.5223114149911063, 0.5160911423819405, 0.5142016581126622, 0.5077379260744367, 0.504913330078125, 0.5037040029253278, 0.5072438035692487, 0.5010488373892648, 0.4970678261348179, 0.49543486322675434, 0.4918429340635027, 0.4889888422829764, 0.48571455478668213, 0.4831136635371617, 0.4807391507284982, 0.4800648348672049, 0.4796812193734305, 0.4754727397646223], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5103333592414856, 0.5406666398048401, 0.5873333215713501, 0.6183333396911621, 0.656000018119812, 0.6926666498184204, 0.6973333358764648, 0.7053333520889282, 0.7149999737739563, 0.7149999737739563, 0.7266666889190674, 0.7269999980926514, 0.7406666874885559, 0.7350000143051147, 0.7406666874885559, 0.7450000047683716, 0.749666690826416, 0.7540000081062317, 0.7516666650772095, 0.753000020980835, 0.7583333253860474, 0.7546666860580444, 0.7609999775886536, 0.7643333077430725, 0.7566666603088379, 0.7696666717529297, 0.7693333625793457, 0.7706666588783264, 0.7670000195503235, 0.7739999890327454, 0.7763333320617676, 0.7703333497047424, 0.7776666879653931, 0.777999997138977, 0.7806666493415833, 0.7796666622161865, 0.7806666493415833, 0.7839999794960022, 0.7823333144187927, 0.7773333191871643, 0.7806666493415833, 0.7873333096504211, 0.7953333258628845, 0.7923333048820496, 0.7950000166893005, 0.7926666736602783, 0.7929999828338623, 0.7856666445732117]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 3, 2, 9, 9, 5, 7, 2, 2, 1, 0, 3, 9, 5, 5, 2, 3, 5, 8, 4, 5, 4, 2, 4, 1, 2], [2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 2, 2, 2, 0, 2, 1, 2, 1, 2, 1], [70, 83, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7820000052452087, "mapping_values": [1, 50, 50, 32, 18, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, alpha)), grad)))))))), tf.math.sqrt(alpha)))), tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.math.add(grad, tf.math.pow(grad, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, alpha)))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.232548442451851, 2.1530179411208294, 2.020996775703974, 1.821776300530943, 1.6022233802093537, 1.4173522843125475, 1.2744563252241572, 1.1885550473706596, 1.1171867342011614, 1.0548555191088158, 1.0210694135723333, 0.9801237488214949, 0.9397160383168938, 0.9170056110863767, 0.9005362497517903, 0.8843642256011454, 0.8643647275501947, 0.8347039190832618, 0.8274840572254769, 0.8184475400397145, 0.8072225925881771, 0.7996746694265403, 0.7896513954176958, 0.7700519392424571, 0.7725126423131615, 0.7635063802986538, 0.754578710121958, 0.7430829520490679, 0.7396946981078866, 0.7354294255015683, 0.7286261487174044, 0.7200433093999843, 0.7148540192481124, 0.7027511988664269, 0.7101775231283921, 0.6931604053901408, 0.6987658667998968, 0.6902269697570372, 0.6940484943800536, 0.682425310031975, 0.6732875136116067, 0.6805844396065412, 0.6780025060654569, 0.6683188248871025, 0.6680993387381383, 0.6662022938439874, 0.6621965849955384, 0.6420952870294386, 0.6485379752214039], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.3543785512447357, 0.40866464376449585, 0.4469687044620514, 0.49465063214302063, 0.5395588278770447, 0.568220853805542, 0.5822216272354126, 0.6075815558433533, 0.6235635876655579, 0.6382247805595398, 0.6501122713088989, 0.6627922058105469, 0.672170102596283, 0.6791704893112183, 0.6837934255599976, 0.6857746839523315, 0.6991150379180908, 0.7042662501335144, 0.7037379741668701, 0.7079645991325378, 0.7152291536331177, 0.7140403985977173, 0.7147008180618286, 0.7176066637039185, 0.7218332886695862, 0.7260599732398987, 0.7265883088111877, 0.7298903465270996, 0.7309470176696777, 0.7337207794189453, 0.7331924438476562, 0.7409853339195251, 0.7436270117759705, 0.7362303733825684, 0.7477215528488159, 0.7449478507041931, 0.7497028112411499, 0.7454761862754822, 0.7454761862754822, 0.7512878179550171, 0.7452120184898376, 0.7543256878852844, 0.7555144429206848, 0.7544577717781067, 0.7578919529914856, 0.7577598690986633, 0.7626469135284424, 0.7617223858833313], "val_loss": [1.9260176249912806, 1.866908345903669, 1.7662314687456404, 1.6004924092973982, 1.3765577248164587, 1.1587043489728654, 0.9980546065739223, 0.889134338923863, 0.8178300346646991, 0.7655506644930158, 0.7275235142026629, 0.6989220380783081, 0.6740251779556274, 0.6597227369035993, 0.639842186655317, 0.6288536276136126, 0.6123649052211216, 0.6086083820887974, 0.5937816245215279, 0.5836640766688755, 0.5772264344351632, 0.5731062548501151, 0.5701678310121808, 0.5601157460893903, 0.5520613874707904, 0.5497552667345319, 0.5473543064934867, 0.538647072655814, 0.5364414623805455, 0.5294554233551025, 0.5299180575779506, 0.5227699109486171, 0.5223429032734462, 0.5159098420824323, 0.5144054378782, 0.5077211686543056, 0.5050958054406303, 0.5035318987710136, 0.5074012449809483, 0.5005978005273002, 0.4971086638314383, 0.49495834963662283, 0.4918388639177595, 0.48909502370016916, 0.4860719953264509, 0.48333431993212017, 0.4806577478136335, 0.479746903691973, 0.4795345067977905, 0.4756431409290859], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5106666684150696, 0.5406666398048401, 0.5876666903495789, 0.6186666488647461, 0.656000018119812, 0.6930000185966492, 0.6970000267028809, 0.7049999833106995, 0.7143333554267883, 0.7153333425521851, 0.7269999980926514, 0.7273333072662354, 0.7400000095367432, 0.7350000143051147, 0.7413333058357239, 0.7446666955947876, 0.75, 0.7549999952316284, 0.7526666522026062, 0.7536666393280029, 0.7583333253860474, 0.7553333044052124, 0.7609999775886536, 0.7646666765213013, 0.7566666603088379, 0.7699999809265137, 0.7693333625793457, 0.7720000147819519, 0.7670000195503235, 0.7743333578109741, 0.7770000100135803, 0.7710000276565552, 0.7760000228881836, 0.778333306312561, 0.7796666622161865, 0.7796666622161865, 0.7806666493415833, 0.7850000262260437, 0.7826666831970215, 0.7786666750907898, 0.7806666493415833, 0.7866666913032532, 0.7953333258628845, 0.7916666865348816, 0.7950000166893005, 0.7929999828338623, 0.7929999828338623, 0.7853333353996277]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 6, 9, 2, 6, 5, 9, 2, 0, 5, 4, 7, 0, 2, 1, 0, 3, 9, 2, 6, 2, 3, 5, 8, 9, 5, 4, 2, 4, 1, 2], [2, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1], [70, 83, 18, 91, 41, 36, 61, 62], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7817142605781555, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2827088466299648, 2.2325483164877356, 2.153014909510977, 2.020987114335064, 1.8217721100827218, 1.6021867728016048, 1.4172987423363836, 1.274406069872197, 1.1885868222123643, 1.1172763086218702, 1.0549531625230724, 1.0211266204429388, 0.9802024620336045, 0.9397890695633118, 0.9170853912932698, 0.9006534721227512, 0.8843990816983092, 0.8644626066039471, 0.8347185308261554, 0.8274850033655646, 0.8184876039578945, 0.8072970957410271, 0.7997840959886282, 0.7896207729272083, 0.7701371085327283, 0.7725439798625674, 0.7635653711596595, 0.7545329956818786, 0.7432234730340738, 0.739679127195492, 0.7356651392532236, 0.7285081466049519, 0.7200582085851162, 0.7148926597088083, 0.702458338399904, 0.7101435030314428, 0.6930366772166836, 0.6988133514451785, 0.6902109739913004, 0.6941106988926763, 0.682461545003199, 0.6730740087505628, 0.6806820041357707, 0.6780073768616101, 0.6681076032673567, 0.6682043616892309, 0.6663102302820832, 0.6623851154002027, 0.6420300233601862, 0.6486172853066008], "accuracy": [0.13855500519275665, 0.25822216272354126, 0.35424646735191345, 0.4087967276573181, 0.4469687044620514, 0.4943864643573761, 0.5396909117698669, 0.5679566860198975, 0.5819574594497681, 0.6071853041648865, 0.6235635876655579, 0.637828528881073, 0.6502443552017212, 0.6625280380249023, 0.672698438167572, 0.6787742972373962, 0.6839255094528198, 0.6861709356307983, 0.6996433734893799, 0.7041342258453369, 0.7033417224884033, 0.7083608508110046, 0.7150970697402954, 0.7136441469192505, 0.7145687341690063, 0.7176066637039185, 0.7217012047767639, 0.7260599732398987, 0.7263241410255432, 0.7302865982055664, 0.7309470176696777, 0.7339849472045898, 0.733588695526123, 0.7401928305625916, 0.7436270117759705, 0.7378153204917908, 0.7474573850631714, 0.7445515990257263, 0.7497028112411499, 0.7453441023826599, 0.7448157668113708, 0.7508915662765503, 0.7446836829185486, 0.7536653280258179, 0.7556465268135071, 0.7544577717781067, 0.7568352818489075, 0.7577598690986633, 0.7631752490997314, 0.7613261342048645], "val_loss": [1.9260176249912806, 1.866908414023263, 1.7662230219159807, 1.6004876409258162, 1.3765122890472412, 1.1585804734911238, 0.9980058670043945, 0.8891521521977016, 0.8178743634905133, 0.7656210490635463, 0.7276068585259574, 0.6989777939660209, 0.6740742240633283, 0.6599050419671195, 0.6398643595831734, 0.6286878074918475, 0.6123989309583392, 0.6085928848811558, 0.5937749658312116, 0.5836172444479806, 0.5771488973072597, 0.5730025768280029, 0.5700746604374477, 0.5601641110011509, 0.5521763392857143, 0.5497395140784127, 0.5475613049098423, 0.5385484184537616, 0.5363619497844151, 0.5296917131968907, 0.530010632106236, 0.522713303565979, 0.5223043475832257, 0.5158097403390067, 0.5143421377454486, 0.5075950792857579, 0.5049806492669242, 0.5036729233605521, 0.5074835504804339, 0.5007042714527675, 0.49699389934539795, 0.49512978962489534, 0.4916659082685198, 0.48926266602107454, 0.48572771889822824, 0.48330085618155344, 0.48082407883235384, 0.4798961196626936, 0.47970528262002127, 0.4754312379019601], "val_accuracy": [0.3466666638851166, 0.44066667556762695, 0.5099999904632568, 0.5406666398048401, 0.5876666903495789, 0.6190000176429749, 0.6556666493415833, 0.6930000185966492, 0.6970000267028809, 0.7056666612625122, 0.7143333554267883, 0.7153333425521851, 0.7266666889190674, 0.7269999980926514, 0.7409999966621399, 0.7356666922569275, 0.7413333058357239, 0.7446666955947876, 0.7493333220481873, 0.7543333172798157, 0.7523333430290222, 0.7536666393280029, 0.7583333253860474, 0.7546666860580444, 0.7616666555404663, 0.7646666765213013, 0.7566666603088379, 0.7699999809265137, 0.768666684627533, 0.7713333368301392, 0.7666666507720947, 0.7746666669845581, 0.7766666412353516, 0.7706666588783264, 0.7763333320617676, 0.7773333191871643, 0.7799999713897705, 0.778333306312561, 0.781000018119812, 0.7836666703224182, 0.7820000052452087, 0.7776666879653931, 0.781000018119812, 0.7863333225250244, 0.7950000166893005, 0.7919999957084656, 0.7946666479110718, 0.7926666736602783, 0.7926666736602783, 0.7850000262260437]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 8, 6, 5, 3, 5, 7, 8, 2, 5, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 2, 1, 2, 0, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 9, 6, 1, 2, 6, 5, 2, 2, 4, 3, 5, 7, 8, 2, 8, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 68, 42, 75, 51, 83, 99, 44, 68, 7], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [8, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 24, 14, 10, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), grad))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(alpha)))))), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 1, 2, 2, 6, 2, 3, 2, 9, 3, 4, 2, 8, 2, 1, 2, 3, 9, 5, 6, 6, 2, 3, 6, 4, 5], [2, 0, 2, 0, 1, 2, 1, 3, 2, 0, 2, 2, 2, 0, 2, 1, 2, 2, 0, 0, 0, 0, 1], [77, 67, 18, 92, 41, 40, 99, 44, 14], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 1, 5, 0, 3, 1, 3], [14], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [1, 0, 1, 5, 3, 4], [31], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 22, 16, 6, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), alpha))))), grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), grad)), tf.math.divide_no_nan(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.add(beta, tf.math.pow(alpha, grad)))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025748138934112, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 6, 1, 2, 9, 5, 8, 9, 5, 3, 5, 7, 3, 2, 1, 2, 3, 9, 3, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 0, 1, 2, 2, 2, 2, 2, 0, 2, 1, 2, 3, 1, 1], [70, 42, 18, 92, 41, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 0, 0], [8, 4], [2, 4, 1, 5, 3, 4], [34], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 12, 5, 5, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 2, 2, 2, 8, 4, 7, 2, 2, 1, 5, 3, 9, 6, 6, 2, 3, 5, 8, 4, 5, 4, 6, 4], [2, 2, 1, 0, 0, 0, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 2, 1, 1, 1], [70, 83, 18, 92, 41, 40, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [1, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302328304450242, 2.306083661973626, 2.31361356891299, 2.3242245219276882, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.09100515395402908, 0.06287148594856262, 0.05349359288811684, 0.07290978729724884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9715118408203125, 1.9774902207510812, 1.9845796993800573, 123.88592093331474, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.038333334028720856, 0.01666666753590107, 0.012000000104308128, 0.010999999940395355, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 8, 6, 0, 2, 6, 5, 8, 2, 5, 3, 5, 7, 8, 2, 1, 4, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 2, 0, 2, 1, 2, 2, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 2, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad)))))))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025748138934112, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 8, 2, 5, 2, 5, 8, 8, 2, 2, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 0, 2, 1, 3, 2, 2, 2, 2, 1, 0, 2, 1, 2, 3, 1, 1], [70, 67, 18, 92, 41, 40, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 30, 30, 20, 10, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))))))), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302337952766121, 2.3035892592508085, 2.302211400178036, 2.3026463528823196, 2.301867613498293, 2.303518219993036], "accuracy": [0.09232597798109055, 0.0948355570435524, 0.09628847241401672, 0.09100515395402908, 0.09192973375320435, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 3, 2, 6, 5, 3, 2, 2, 5, 4, 7, 0, 2, 2, 5, 3, 9, 6, 6, 0, 3, 5, 8, 4, 5, 4, 6, 4], [2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 1], [70, 83, 18, 92, 41, 18, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 41, 41, 25, 16, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), grad)))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), grad)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), grad)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302337952766121, 2.3035892592508085, 2.302211400178036, 2.3026463528823196, 2.301867613498293, 2.303518219993036], "accuracy": [0.09232597798109055, 0.0948355570435524, 0.09628847241401672, 0.09100515395402908, 0.09192973375320435, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 9, 1, 2, 3, 5, 8, 4, 1, 3, 5, 6, 8, 2, 1, 3, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 18, 92, 53, 57, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 0, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 30, 30, 20, 10, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302337952766121, 2.3035892592508085, 2.302211400178036, 2.3026463528823196, 2.301867613498293, 2.303518219993036], "accuracy": [0.09232597798109055, 0.0948355570435524, 0.09628847241401672, 0.09100515395402908, 0.09192973375320435, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 3, 2, 9, 3, 4, 7, 0, 2, 1, 2, 3, 9, 5, 6, 2, 3, 5, 8, 4, 5, 4, 6, 4], [3, 0, 2, 0, 0, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 1, 1], [70, 83, 42, 75, 51, 83, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302337952766121, 2.3035892592508085, 2.302211400178036, 2.3026463528823196, 2.301867613498293, 2.303518219993036], "accuracy": [0.09232597798109055, 0.0948355570435524, 0.09628847241401672, 0.09100515395402908, 0.09192973375320435, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 2, 2, 5, 3, 5, 7, 6, 2, 1, 1, 3, 9, 2, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 2, 1, 1, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302337952766121, 2.3035892592508085, 2.302211400178036, 2.3026463528823196, 2.301867613498293, 2.303518219993036], "accuracy": [0.09232597798109055, 0.0948355570435524, 0.09628847241401672, 0.09100515395402908, 0.09192973375320435, 0.08836349099874496], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]