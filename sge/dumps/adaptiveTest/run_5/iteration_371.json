[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 3, 0, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 0, 0, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [30, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8185714483261108, "mapping_values": [1, 33, 33, 20, 13, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, alpha)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.031439031608006, 1.5513365542679225, 1.1339903867098287, 1.0189515195345094, 0.9081913510947857, 0.8808449999515516, 0.7891799910602915, 0.7888250811508445, 0.7227768455718754, 0.6915844250600792, 0.6835277859230303, 0.6535325289213457, 0.6382343649879942, 0.6557598436954172, 0.6070610863925318, 0.6054364876535512, 0.608489867049343, 0.5815670573794847, 0.590331801160798, 0.5714304133838336, 0.545761489687878, 0.5367539993146186, 0.5409483200822602, 0.5138992658498784, 0.5124445849516136, 0.5047521744232923, 0.4989162443092297, 0.4915867341374047, 0.49173472497945353, 0.4985048015198577, 0.4837202520623041, 0.47231710990815823, 0.4749556668973665, 0.46307440861230986, 0.47310518534302226, 0.44265114092367075, 0.4479093115681812, 0.45328355199231635, 0.43683618051642675, 0.4563454620283293, 0.43722011397511906, 0.4157187312451714, 0.42405537393162074, 0.4007988341566972, 0.39289058624651013, 0.41283044879934994, 0.3881000928111348, 0.4124835680079356], "accuracy": [0.31726324558258057, 0.44287413358688354, 0.5898824334144592, 0.6135252714157104, 0.6518293619155884, 0.6691322326660156, 0.6921146512031555, 0.6915863156318665, 0.7186633348464966, 0.7357020378112793, 0.7384757399559021, 0.7430986762046814, 0.7479857206344604, 0.7493065595626831, 0.7647602558135986, 0.7638356685638428, 0.7618544697761536, 0.7815347909927368, 0.7696473598480225, 0.7844406366348267, 0.7954035401344299, 0.7964601516723633, 0.793950617313385, 0.8050455451011658, 0.8062343001365662, 0.8083476424217224, 0.8112534880638123, 0.8146876096725464, 0.809140145778656, 0.8054417967796326, 0.817989706993103, 0.8255184292793274, 0.8201030492782593, 0.8274996876716614, 0.822348415851593, 0.8327829837799072, 0.8281601071357727, 0.8280280232429504, 0.8330471515655518, 0.8272355198860168, 0.8347642421722412, 0.8408400416374207, 0.8397833704948425, 0.844010055065155, 0.8545766472816467, 0.8433496356010437, 0.8619733452796936, 0.8385946154594421], "val_loss": [1.5099778175354004, 1.0480706691741943, 0.8573054075241089, 0.6889975922448295, 0.6394632032939366, 0.6294850962502616, 0.6180199044091361, 0.5842444726399013, 0.5593698024749756, 0.5292639221463885, 0.5323154926300049, 0.5124562638146537, 0.5332038913454328, 0.4953122649874006, 0.4736275332314627, 0.4689933572496687, 0.47442712102617535, 0.464734639440264, 0.48118443148476736, 0.43681037425994873, 0.437293461390904, 0.43931271348680767, 0.4331145201410566, 0.4344991786139352, 0.4233945097242083, 0.4187024406024388, 0.42668101617268156, 0.40576482670647757, 0.42408420358385357, 0.4168140207018171, 0.4018186330795288, 0.42864854846681866, 0.3988312142235892, 0.3936315519469125, 0.3983080472264971, 0.38916722365788053, 0.3909934333392552, 0.3969988056591579, 0.3909180334636143, 0.39708649260657175, 0.3776363134384155, 0.39332501377378193, 0.3587388140814645, 0.3615464653287615, 0.3643848044531686, 0.3602375388145447, 0.37197067056383404, 0.36578079632350374], "val_accuracy": [0.3543333411216736, 0.5460000038146973, 0.6140000224113464, 0.690666675567627, 0.7120000123977661, 0.6949999928474426, 0.6909999847412109, 0.7269999980926514, 0.7323333621025085, 0.7446666955947876, 0.7556666731834412, 0.7486666440963745, 0.7396666407585144, 0.7490000128746033, 0.7696666717529297, 0.7756666541099548, 0.784333348274231, 0.7749999761581421, 0.7649999856948853, 0.8016666769981384, 0.8040000200271606, 0.8073333501815796, 0.8073333501815796, 0.8026666641235352, 0.8190000057220459, 0.8076666593551636, 0.8116666674613953, 0.8206666707992554, 0.7986666560173035, 0.8173333406448364, 0.8253333568572998, 0.8080000281333923, 0.8256666660308838, 0.8303333520889282, 0.8316666483879089, 0.831333339214325, 0.8336666822433472, 0.8236666917800903, 0.8270000219345093, 0.8270000219345093, 0.8356666564941406, 0.8303333520889282, 0.8519999980926514, 0.8479999899864197, 0.8473333120346069, 0.8456666469573975, 0.8396666646003723, 0.8433333039283752]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 1, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [82, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8057143092155457, "mapping_values": [1, 31, 31, 19, 12, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), alpha)))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0314003459655567, 1.5527218054818157, 1.1318090379419201, 1.0132822658502036, 0.9128631304094836, 0.8829222265849922, 0.7793234715828916, 0.794957755366494, 0.7227286015125612, 0.6995034390641494, 0.6808439690470617, 0.6542568657896097, 0.6430170197433972, 0.6519656383822764, 0.6044415354476771, 0.6094092642154046, 0.6015567500766683, 0.5851051077284062, 0.5946982889253513, 0.5767425645643206, 0.5475668067693427, 0.5293709579995437, 0.5370178300675273, 0.5337560393114006, 0.5372845395413435, 0.5219075431708473, 0.5235163469781272], "accuracy": [0.31739532947540283, 0.4427420496940613, 0.5881653428077698, 0.6181482076644897, 0.6499801874160767, 0.6741513609886169, 0.6968696117401123, 0.6927750706672668, 0.7191916704177856, 0.7300224304199219, 0.7429665923118591, 0.7427024245262146, 0.7464007139205933, 0.7503632307052612, 0.7647602558135986, 0.7621186375617981, 0.7598732113838196, 0.7823272943496704, 0.7671377658843994, 0.78113853931427, 0.7936864495277405, 0.7954035401344299, 0.796328067779541, 0.8025360107421875, 0.7936864495277405, 0.8020076751708984, 0.8047813773155212], "val_loss": [1.5091493810926164, 1.0480617114475794, 0.8822675091879708, 0.6827947412218366, 0.6418125459126064, 0.6291970184871128, 0.632894618170602, 0.5922516754695347, 0.5628004925591605, 0.5299312557492938, 0.5350610358374459, 0.5147399391446795, 0.5178069387163434, 0.5073949950081962, 0.4786640575953892, 0.46870393412453787, 0.47531117711748394, 0.4699969802583967, 0.48902937344142366, 0.44047567674091886, 0.43589991331100464, 0.43306719405310495, 0.43437111377716064, 0.48303002970559256, 0.4307705504553659, 0.4267140882355826, 0.4258370910372053], "val_accuracy": [0.35466668009757996, 0.5446666479110718, 0.6023333072662354, 0.6926666498184204, 0.7176666855812073, 0.6973333358764648, 0.6856666803359985, 0.7133333086967468, 0.7273333072662354, 0.7443333268165588, 0.750333309173584, 0.7456666827201843, 0.7456666827201843, 0.7393333315849304, 0.7670000195503235, 0.7770000100135803, 0.7823333144187927, 0.7726666927337646, 0.7636666893959045, 0.7979999780654907, 0.7953333258628845, 0.815666675567627, 0.8153333067893982, 0.7646666765213013, 0.8080000281333923, 0.8083333373069763, 0.8136666417121887]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 1, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [30, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8031428456306458, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0312219707012615, 1.5600199049741932, 1.1457152339083534, 0.9853073447104285, 0.8980746319139354, 0.8427982401649445, 0.8019180026005256, 0.800817942583109, 0.7281939318119937, 0.6984640314374003, 0.6757577346332038, 0.6585432306225305, 0.634205687779792, 0.6511719441448519, 0.6092056350905771, 0.6067423287982309, 0.6044848976889778, 0.57999098704019, 0.5858949720662708, 0.5741824452761473, 0.5447471897048783, 0.5265728273427623, 0.5310651793959843, 0.5357282726582976, 0.5351750791395629, 0.5182553256003612, 0.5239421159300617, 0.5016964164471126, 0.48861210461321636, 0.484817844438767, 0.4834793194559634, 0.4715255606506699, 0.472680666986442, 0.459357468573456, 0.46357814645439704, 0.432673358662159, 0.44224749791104134, 0.44043033740791615, 0.42058372080302464, 0.45312841401328785, 0.454215794073482, 0.415953508548103, 0.41611982720434515, 0.40251198984911857, 0.39434668224139097, 0.41647443529196293, 0.40755020319951, 0.40888001346128366], "accuracy": [0.31726324558258057, 0.44023245573043823, 0.5809007883071899, 0.6221106648445129, 0.6543388962745667, 0.6782459616661072, 0.6886804699897766, 0.6873596906661987, 0.7189275026321411, 0.7273808121681213, 0.7458723783493042, 0.743891179561615, 0.7528728246688843, 0.7494386434555054, 0.7626469135284424, 0.7629110813140869, 0.7572315335273743, 0.7795535326004028, 0.7709681391716003, 0.7829877138137817, 0.7965922355651855, 0.7975168228149414, 0.7981772422790527, 0.7992339134216309, 0.7943468689918518, 0.8035926818847656, 0.8068947196006775, 0.8070268034934998, 0.8158763647079468, 0.81112140417099, 0.8150838613510132, 0.8256505131721497, 0.821820080280304, 0.8310658931732178, 0.8259146809577942, 0.8359529972076416, 0.8293488025665283, 0.8345000743865967, 0.8450667262077332, 0.8256505131721497, 0.8251221776008606, 0.8433496356010437, 0.8446704745292664, 0.8428213000297546, 0.8515387773513794, 0.8385946154594421, 0.8494254350662231, 0.8486329317092896], "val_loss": [1.5113443306514196, 1.0408910342625208, 0.8269908428192139, 0.6902408429554531, 0.6264173984527588, 0.6787734712873187, 0.6174818107060024, 0.5893375192369733, 0.5618706090109689, 0.5333869116646903, 0.546581506729126, 0.5168798310416085, 0.5319452456065586, 0.5077475139072963, 0.480796217918396, 0.46861190455300467, 0.4718848637172154, 0.46665271690913607, 0.4884709119796753, 0.4386721168245588, 0.439602724143437, 0.4270126734461103, 0.43359804153442383, 0.46543991565704346, 0.432959394795554, 0.426118654864175, 0.4322582483291626, 0.3953638332230704, 0.3956864987100874, 0.40853482484817505, 0.40319458075932096, 0.42781607593808857, 0.4047006368637085, 0.3881456937108721, 0.38640577452523367, 0.3849426507949829, 0.3738705430712019, 0.3601147362164089, 0.3898254632949829, 0.4004423873765128, 0.37778645753860474, 0.3832977158682687, 0.3579425471169608, 0.3613008941922869, 0.367618237222944, 0.4146295700754438, 0.37942250285829815, 0.370495821748461], "val_accuracy": [0.3569999933242798, 0.5426666736602783, 0.6150000095367432, 0.687666654586792, 0.7160000205039978, 0.6809999942779541, 0.690666675567627, 0.7139999866485596, 0.718999981880188, 0.7429999709129333, 0.7443333268165588, 0.7459999918937683, 0.7433333396911621, 0.7396666407585144, 0.765999972820282, 0.7710000276565552, 0.7839999794960022, 0.7726666927337646, 0.7670000195503235, 0.7983333468437195, 0.7919999957084656, 0.8173333406448364, 0.8176666498184204, 0.7756666541099548, 0.8019999861717224, 0.8100000023841858, 0.8103333115577698, 0.8220000267028809, 0.8190000057220459, 0.8193333148956299, 0.8243333101272583, 0.8063333630561829, 0.8220000267028809, 0.8270000219345093, 0.8403333425521851, 0.8323333263397217, 0.8460000157356262, 0.846666693687439, 0.824999988079071, 0.8246666789054871, 0.8363333344459534, 0.8376666903495789, 0.8526666760444641, 0.8503333330154419, 0.8479999899864197, 0.8256666660308838, 0.8379999995231628, 0.8383333086967468]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8011428713798523, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0313743171974052, 1.5549510222982816, 1.1364341225716668, 1.0153250583583937, 0.912665052790888, 0.8546719622019968, 0.8139762829528147, 0.7375943222302236, 0.7294172120289544, 0.6973585008929324, 0.6781185257310456, 0.6938353685922689, 0.6488761168901773, 0.6463015143582534, 0.6046075059627231, 0.6055047814840685, 0.6169594686422775, 0.5848757475279955, 0.5778583076966674, 0.5735241289876314, 0.5494580562198796, 0.5591641699617502], "accuracy": [0.31739532947540283, 0.44062870740890503, 0.5892220139503479, 0.6186765432357788, 0.6453573107719421, 0.6738871932029724, 0.6950204968452454, 0.7186633348464966, 0.7236824631690979, 0.7321357727050781, 0.7339849472045898, 0.7238145470619202, 0.7500990629196167, 0.7520803213119507, 0.76542067527771, 0.7689869403839111, 0.7646281719207764, 0.7795535326004028, 0.7802139520645142, 0.7812706232070923, 0.7893276810646057, 0.7821952104568481], "val_loss": [1.510066032409668, 1.0504048892429896, 0.8593959978648594, 0.6706990003585815, 0.6428726230348859, 0.6316263335091727, 0.6477032899856567, 0.5456993579864502, 0.5827242136001587, 0.5298892600195748, 0.5236774853297642, 0.5253715685435704, 0.5334773063659668, 0.4928107602255685, 0.4758212906973703, 0.48150925976889475, 0.46593970911843435, 0.5145518268857684, 0.4521108865737915, 0.44960364273616243, 0.4667044537408011, 0.45817291736602783], "val_accuracy": [0.3543333411216736, 0.5416666865348816, 0.5979999899864197, 0.6956666707992554, 0.7056666612625122, 0.7289999723434448, 0.6986666917800903, 0.7463333606719971, 0.7263333201408386, 0.7486666440963745, 0.7580000162124634, 0.7590000033378601, 0.7583333253860474, 0.7699999809265137, 0.7833333611488342, 0.7756666541099548, 0.8019999861717224, 0.7603333592414856, 0.800000011920929, 0.7953333258628845, 0.7773333191871643, 0.7803333401679993]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7900000214576721, "mapping_values": [1, 23, 23, 13, 10, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, alpha)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0572032949565786, 1.614704000730997, 1.1382493635351947, 0.9948618757395681, 0.9014836444815058, 0.8205642248535232, 0.8019378867289173, 0.7387433700541999, 0.7430689708431714, 0.694068702929024, 0.6875174675304593, 0.6363156797580117, 0.6590969573316195, 0.655535692284372, 0.6099579679085798, 0.5994997495799379, 0.6075639691036044, 0.5642643764963429, 0.5855562690226724, 0.5763130590915995, 0.5582814749914342, 0.5573001401126187, 0.5315904596919129], "accuracy": [0.3238673806190491, 0.4410249590873718, 0.5717870593070984, 0.6259410977363586, 0.6567164063453674, 0.700171709060669, 0.6973979473114014, 0.7172104120254517, 0.7279091477394104, 0.7338528633117676, 0.7380794882774353, 0.7557786107063293, 0.7543256878852844, 0.7498348951339722, 0.7718927264213562, 0.7670056819915771, 0.7680623531341553, 0.7865539789199829, 0.7804781198501587, 0.7836481332778931, 0.7943468689918518, 0.7911768555641174, 0.7988376617431641], "val_loss": [1.7286900111607142, 1.032494340624128, 0.7965426445007324, 0.699350254876273, 0.620846322604588, 0.6236381360462734, 0.6098314864294869, 0.5993908814021519, 0.5729015214102608, 0.5373307807104928, 0.5389114448002407, 0.5170240913118634, 0.5095356191907611, 0.5126756429672241, 0.4841996261051723, 0.5133764573505947, 0.4624159846987043, 0.4592334202357701, 0.47834127289908274, 0.45565714154924664, 0.4531276226043701, 0.44462062631334576, 0.4589146205357143], "val_accuracy": [0.22766666114330292, 0.5296666622161865, 0.6233333349227905, 0.671999990940094, 0.7163333296775818, 0.7246666550636292, 0.706333339214325, 0.7336666584014893, 0.7450000047683716, 0.7573333382606506, 0.7366666793823242, 0.7549999952316284, 0.7646666765213013, 0.7599999904632568, 0.7853333353996277, 0.7749999761581421, 0.7886666655540466, 0.7963333129882812, 0.7796666622161865, 0.7940000295639038, 0.793666660785675, 0.7919999957084656, 0.793666660785675]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [30, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7891428470611572, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0154889017882804, 1.5664756648560336, 1.203547242153527, 1.010286028028369, 0.8918461429129628, 0.858260707832551, 0.8004411449521808, 0.7789745457955576, 0.7302920911463575, 0.7139535809882707, 0.704781343530371, 0.6724842361502597, 0.6561327208270958, 0.6339352657026256, 0.6713871517437734, 0.6611845682105368, 0.606638354159869, 0.5739550282847785, 0.5854394455485734, 0.5706963382062029, 0.5441942353290165, 0.549139304699411, 0.5540031438033814], "accuracy": [0.32505613565444946, 0.47470611333847046, 0.5494650602340698, 0.6369040012359619, 0.6672830581665039, 0.6767930388450623, 0.6989829540252686, 0.7061154246330261, 0.719852089881897, 0.7312111854553223, 0.7334566116333008, 0.7449478507041931, 0.7526086568832397, 0.7606657147407532, 0.7445515990257263, 0.7537974119186401, 0.7670056819915771, 0.7877426743507385, 0.787082314491272, 0.7810064554214478, 0.798309326171875, 0.7965922355651855, 0.7902522683143616], "val_loss": [1.3449294567108154, 1.110414947782244, 0.8076632533754621, 0.7075358629226685, 0.6422103813716343, 0.6257084267480033, 0.6241514682769775, 0.5468912976128715, 0.5666049718856812, 0.5276078496660505, 0.5006906815937587, 0.535662157194955, 0.49328763144356863, 0.5251463311059135, 0.4884570666721889, 0.48848140239715576, 0.4552774599620274, 0.4469958884375436, 0.4604143926075527, 0.45095006057194303, 0.4822606018611363, 0.46343510491507395, 0.4380208168710981], "val_accuracy": [0.5226666927337646, 0.5350000262260437, 0.6323333382606506, 0.6793333292007446, 0.690666675567627, 0.7256666421890259, 0.7043333053588867, 0.7509999871253967, 0.746666669845581, 0.7636666893959045, 0.7756666541099548, 0.7356666922569275, 0.7850000262260437, 0.7463333606719971, 0.7846666574478149, 0.7643333077430725, 0.7846666574478149, 0.8003333210945129, 0.7793333530426025, 0.7986666560173035, 0.7773333191871643, 0.784333348274231, 0.793666660785675]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 6, 5, 5, 9, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7805714011192322, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.279038652342702, 2.210162013229866, 2.089590492533214, 1.8833495524455182, 1.6178125987168175, 1.3923167249451318, 1.2458323539759835, 1.1520133264596042, 1.0734962950985996, 1.020405619655539, 0.9703645410239815, 0.9376111564981372, 0.9028494160613993, 0.8893457392990597, 0.854222662775445, 0.8441908769225873, 0.8327978540247836, 0.81153212256829, 0.7950816710296639, 0.792302543161851, 0.7802881362840972, 0.7702778717703461, 0.7618220524859702, 0.7439253962491844, 0.7367932905122321, 0.7323104913806903, 0.7179665560530886, 0.7162000194296246, 0.7127632683672217, 0.7131421629149034, 0.6999089627958103, 0.7018508835475615, 0.6921876270647267, 0.6942298308245148, 0.6828617235342305, 0.6744014115901026, 0.670432801496052, 0.6735435249846073, 0.6629927332107465, 0.6590428991860025, 0.6528547342269806, 0.6566351859592539, 0.6510623634814146, 0.6439707347462127, 0.6455503617689011], "accuracy": [0.14542332291603088, 0.2900541424751282, 0.38304054737091064, 0.43508124351501465, 0.4839519262313843, 0.5424646735191345, 0.5753533244132996, 0.5927882790565491, 0.6260731816291809, 0.6388852000236511, 0.654999315738678, 0.6687359809875488, 0.6767930388450623, 0.6790384650230408, 0.689869225025177, 0.6954167485237122, 0.6966054439544678, 0.7079645991325378, 0.7135120630264282, 0.7094175219535828, 0.7173424959182739, 0.717870831489563, 0.7181349992752075, 0.7276449799537659, 0.7297582626342773, 0.7337207794189453, 0.7346453666687012, 0.7345132827758789, 0.7346453666687012, 0.7374191284179688, 0.7433628439903259, 0.7417778372764587, 0.7453441023826599, 0.7445515990257263, 0.7469290494918823, 0.748249888420105, 0.7519482374191284, 0.7508915662765503, 0.7567031979560852, 0.7547219395637512, 0.7560427784919739, 0.7574957013130188, 0.7644960880279541, 0.7646281719207764, 0.76542067527771], "val_loss": [1.9158242770603724, 1.8307185854230608, 1.6663292816707067, 1.410937752042498, 1.1465954780578613, 0.9626715864453997, 0.8540365695953369, 0.7860547133854457, 0.7329990182604108, 0.7006329808916364, 0.6702398572649274, 0.653117265020098, 0.6339629377637591, 0.6139658008302961, 0.61207001549857, 0.5937927109854562, 0.5860296147210258, 0.5784213542938232, 0.5699065753391811, 0.5617343527930123, 0.5541819163731166, 0.5479595150266375, 0.5390407187598092, 0.5354985850197929, 0.5369384799684797, 0.5296961409705025, 0.5260408776147025, 0.5221731322152274, 0.5163856233869281, 0.5099693536758423, 0.5125500815255302, 0.5034034592764718, 0.5027829578944615, 0.4957083633967808, 0.4956747123173305, 0.49446908065250944, 0.49114653042384554, 0.4882523502622332, 0.48804077080317904, 0.4791238307952881, 0.4763002225330898, 0.4765196016856602, 0.47612931047167095, 0.47531425952911377, 0.4720592669078282], "val_accuracy": [0.3856666684150696, 0.4723333418369293, 0.5653333067893982, 0.5889999866485596, 0.656000018119812, 0.6809999942779541, 0.6836666464805603, 0.7049999833106995, 0.7136666774749756, 0.7226666808128357, 0.7279999852180481, 0.7316666841506958, 0.737333357334137, 0.7413333058357239, 0.7300000190734863, 0.7536666393280029, 0.7493333220481873, 0.734666645526886, 0.7413333058357239, 0.7583333253860474, 0.7670000195503235, 0.7639999985694885, 0.7666666507720947, 0.7766666412353516, 0.7609999775886536, 0.7673333287239075, 0.7699999809265137, 0.7770000100135803, 0.7720000147819519, 0.7746666669845581, 0.7789999842643738, 0.7853333353996277, 0.7760000228881836, 0.7883333563804626, 0.7776666879653931, 0.7850000262260437, 0.7820000052452087, 0.793666660785675, 0.7873333096504211, 0.79666668176651, 0.7839999794960022, 0.7889999747276306, 0.7846666574478149, 0.7906666398048401, 0.7916666865348816]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 8, 1, 3, 0, 2, 5, 2, 3, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [94, 94, 73, 70, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.17257143557071686, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), alpha)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.99547726250501, 1.4057256680564039, 0.9314555757238786, 0.7443208236184811, 0.7281065502139665, 0.6809196476812895, 0.6504095327569163, 0.6466171598595053, 0.7388807289856394, 0.7034340387542628, 0.694925131350303, 0.7049839482126675, 1.2117480645956318, NaN, NaN, NaN], "accuracy": [0.3653414249420166, 0.5005943775177002, 0.6509047746658325, 0.7169462442398071, 0.7230220437049866, 0.7467969655990601, 0.7540615797042847, 0.7593448758125305, 0.7485140562057495, 0.7321357727050781, 0.7363624572753906, 0.7397965788841248, 0.6972658634185791, 0.11411966383457184, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5089319433484758, 0.7203530584062848, 0.5766244956425258, 0.5244351625442505, 0.5054295573915754, 0.4505553586142404, 0.4386083057948521, 0.5117558240890503, 0.5075345209666661, 0.4565385750361851, 0.4771770238876343, 0.49625403540475027, 37.00257328578404, NaN, NaN, NaN], "val_accuracy": [0.4336666762828827, 0.6776666641235352, 0.7406666874885559, 0.7630000114440918, 0.778333306312561, 0.7926666736602783, 0.8023333549499512, 0.7889999747276306, 0.7736666798591614, 0.7933333516120911, 0.8100000023841858, 0.7889999747276306, 0.2913333475589752, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 5, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [47, 65, 17, 70, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.16428571939468384, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.7870094835041788, 31.030657268549867, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18214239180088043, 0.12349755316972733, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0747502190726146, 372.40982491629467, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.11100000143051147, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [30, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [30], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.12885713577270508, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.858726652653273, 4.81673251311887, 2.3085100892323545, 2.3042768508436, 2.303244924753129, 2.303050894826048], "accuracy": [0.18082155287265778, 0.11636507511138916, 0.09998679161071777, 0.09681680053472519, 0.09549596905708313, 0.0952318087220192], "val_loss": [1.890679155077253, 1.981548581804548, 1.9754516056605749, 1.9740546771458216, 1.9737918036324638, 1.973764078957694], "val_accuracy": [0.2253333330154419, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [30, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021317351180897, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 6, 1, 9, 0, 2, 5, 6, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [79, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [5, 0, 1, 5, 3, 4], [33], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))))))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 11, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))))), sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 8, 5, 2, 2, 3, 5, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [48, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [33], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 11, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), alpha)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.math.sqrt(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 1, 5, 2, 1, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 2, 2, 1, 1, 2, 0, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [30, 26, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [9449.81199708676, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15453705191612244, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1586905666963748.5, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 5, 2, 4, 3, 5, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [52, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021317351180897, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 0, 2, 3, 0, 9, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 1, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [2, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), alpha))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 1, 5, 2, 2, 6, 1, 3, 3, 2, 8, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 1, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 11, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))))))), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12653546035289764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 3, 0, 2, 2, 6, 1, 5, 2, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 1, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.061714284121990204, "mapping_values": [1, 23, 23, 13, 10, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), alpha))), tf.math.square(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha))), tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3020806738949564, 2.3006927585085353, 2.299817107278342, 2.3009190018686243, 2.301474793995565, 2.300778391212914, 2.3006722200280563, 2.3007460879674912, 2.3004270673443723, 2.2999027672224606, 2.299664330504527, 2.2994799266606587, 2.3000377131144543, 2.300544681424368], "accuracy": [0.08519349992275238, 0.09298639744520187, 0.09919429570436478, 0.1002509593963623, 0.09021265059709549, 0.09576013684272766, 0.09800554811954498, 0.09259014576673508, 0.09549596905708313, 0.1010434553027153, 0.09774138033390045, 0.10645885765552521, 0.09998679161071777, 0.10077928751707077], "val_loss": [1.970233372279576, 1.9699345997401647, 1.9696834427969796, 1.969613756452288, 1.9695981570652552, 1.9695958409990584, 1.9694836480276925, 1.9692991801670618, 1.9691825594220842, 1.9692986352103097, 1.9693974767412459, 1.9696503366742815, 1.969883986881801, 1.9701143673488073], "val_accuracy": [0.04699999839067459, 0.052000001072883606, 0.05533333495259285, 0.057999998331069946, 0.05900000035762787, 0.06366666406393051, 0.06966666877269745, 0.07333333045244217, 0.07699999958276749, 0.07633333653211594, 0.07566666603088379, 0.07533333450555801, 0.07566666603088379, 0.07500000298023224]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 5, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [30, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024960723708663, 2.301700411754876, 2.3013808638459703, 2.3027194570383425, 2.3035960106124747, 2.30293043247697], "accuracy": [0.08308017253875732, 0.08889182657003403, 0.09166556596755981, 0.09325055778026581, 0.08717474341392517, 0.08981640636920929], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]