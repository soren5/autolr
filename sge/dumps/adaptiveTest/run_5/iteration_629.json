[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 6, 4, 0, 8, 3, 2, 5, 8, 8, 3, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 5, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7737143039703369, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 16, 11, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677823374945618, 2.305708521062105, 2.3036262166813426, 2.303068226512082, 2.3027325082433032, 2.2997071512182234, 2.275722574327978, 2.3033855727571995, 2.0261996523610604, 2.220173050305154, 2.309692453667315, 2.254215827124891, 2.4593822648732764, 1.991815570827016, 1.7735937692863657, 1.3664962936464853, 1.8123357577519787, 1.6609359755570847, 1.1971108698022994, 1.0284706716917886, 0.9446400055606934, 0.901867475964374, 0.8825043962931101, 0.8606200921631539, 0.8056329068112855, 0.8006287683522334, 0.7718205913151449, 0.771113721819885, 0.7376458088971557, 0.7112992955252416, 0.7269552110082611, 0.6905349247869074, 0.6566646435729674, 0.6395739868269494, 0.6338658829753142, 0.637545955124438, 0.6060948787647514, 0.5942891572743926, 0.5698109930375028, 0.573416948853829, 0.5476678580167728, 0.5610655826537239, 0.5673346545135404, 0.5254263890465064, 0.5209237132027101, 0.5250530448083974, 0.5353714576990629, 0.5152604377910587, 0.5029861076774693, 0.5102660087168635, 0.4976784628632046, 0.49373184232868617, 0.48604023923427986, 0.48379460760095666, 0.48478705767139135, 0.47683772284908066, 0.46257552415183695, 0.46889048854530985, 0.46221508755108875, 0.4555027581846804, 0.43711683090730447], "accuracy": [0.15638621151447296, 0.09074098616838455, 0.0940430611371994, 0.0940430611371994, 0.10315678268671036, 0.12838461995124817, 0.2148989588022232, 0.11755382269620895, 0.28978997468948364, 0.22084268927574158, 0.09747721254825592, 0.1534803807735443, 0.13736626505851746, 0.3209615647792816, 0.395720511674881, 0.5241051316261292, 0.43045833706855774, 0.419759601354599, 0.570730447769165, 0.6264694333076477, 0.6316206455230713, 0.6539427042007446, 0.6597543358802795, 0.6692643165588379, 0.687491774559021, 0.6960771083831787, 0.700700044631958, 0.6993792057037354, 0.709549605846405, 0.7202483415603638, 0.7145687341690063, 0.7325320243835449, 0.7417778372764587, 0.7495707273483276, 0.7547219395637512, 0.7530049085617065, 0.7705719470977783, 0.7726852297782898, 0.7790252566337585, 0.7766477465629578, 0.7947431206703186, 0.7869502305984497, 0.7824593782424927, 0.7948752045631409, 0.8033285140991211, 0.7976489067077637, 0.789988100528717, 0.8037247657775879, 0.8064984679222107, 0.8033285140991211, 0.8083476424217224, 0.8088759779930115, 0.8142913579940796, 0.8088759779930115, 0.8140271902084351, 0.8219521641731262, 0.8202351331710815, 0.821820080280304, 0.8215559124946594, 0.8249900937080383, 0.8305375576019287], "val_loss": [1.9780005727495467, 1.9743356704711914, 1.973602294921875, 1.9733623777117049, 1.9730443954467773, 1.9615274156842912, 1.984731946672712, 1.9315411703927177, 1.9384677069527763, 1.9879208973475866, 1.971831934792655, 2.338408810751779, 1.799940926688058, 1.8363939693995885, 1.1462741579328264, 0.8924110276358468, 1.911827768598284, 0.9150335107530866, 0.8116975682122367, 0.7101473637989589, 0.7246208531515939, 0.6405969517571586, 0.6181356566292899, 0.638788001877921, 0.5813007525035313, 0.5863912957055228, 0.6703016928264073, 0.5702994891575405, 0.5453555924551827, 0.537936806678772, 0.5252288579940796, 0.5076736552374703, 0.4852700063160488, 0.4752440111977713, 0.5589151041848319, 0.4658161401748657, 0.4662794385637556, 0.457724860736302, 0.4297951119286673, 0.44120150804519653, 0.43929403168814524, 0.4185104966163635, 0.4204106160572597, 0.4188147783279419, 0.43509319850376676, 0.4169781633785793, 0.48505897181374685, 0.4168550286974226, 0.38248967272894724, 0.39553374903542654, 0.3878185323306492, 0.3758416942187718, 0.3860118474279131, 0.43364526544298443, 0.375024003641946, 0.38219715867723736, 0.37758306094578337, 0.3953485148293631, 0.38572273935590473, 0.37650110040392193, 0.396300664969853], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.17800000309944153, 0.09733333438634872, 0.21466666460037231, 0.13466666638851166, 0.10166666656732559, 0.09833333641290665, 0.3526666760444641, 0.2723333239555359, 0.34566667675971985, 0.5216666460037231, 0.5929999947547913, 0.11833333224058151, 0.6366666555404663, 0.6296666860580444, 0.6613333225250244, 0.6616666913032532, 0.6966666579246521, 0.7166666388511658, 0.6990000009536743, 0.7323333621025085, 0.7266666889190674, 0.6856666803359985, 0.734333336353302, 0.7463333606719971, 0.7406666874885559, 0.7526666522026062, 0.7676666378974915, 0.7670000195503235, 0.7889999747276306, 0.7129999995231628, 0.7940000295639038, 0.793666660785675, 0.8009999990463257, 0.8066666722297668, 0.7993333339691162, 0.8040000200271606, 0.8053333163261414, 0.8080000281333923, 0.8196666836738586, 0.7979999780654907, 0.8226666450500488, 0.7630000114440918, 0.8216666579246521, 0.8376666903495789, 0.8276666402816772, 0.8360000252723694, 0.8413333296775818, 0.8376666903495789, 0.8289999961853027, 0.8356666564941406, 0.8420000076293945, 0.8346666693687439, 0.8309999704360962, 0.8370000123977661, 0.8360000252723694, 0.8296666741371155]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 0, 8, 5, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 3, 3, 0, 3, 3], [88, 83, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.412285715341568, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677593808179803, 2.305738258355518, 2.303643908372818, 2.303018663758064, 2.3028910890971477, 2.302142803616386, 2.2776994816048615, 2.2860393461187862, 2.3161524477699067, 2.303135321738934, 2.312110239441337, 2.304894381164009], "accuracy": [0.15651829540729523, 0.09298639744520187, 0.09377889335155487, 0.09536388516426086, 0.10513802617788315, 0.10672302544116974, 0.16431118547916412, 0.1290450394153595, 0.1702549159526825, 0.09932637959718704, 0.14542332291603088, 0.09708096832036972], "val_loss": [1.9779960768563407, 1.9743698665073939, 1.9736183030264718, 1.9735071318490165, 1.9732016154697962, 1.971444743020194, 1.641484090260097, 1.9681777954101562, 1.976602486201695, 1.9657043048313685, 1.977428913116455, 1.9742289270673479], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.12833333015441895, 0.3970000147819519, 0.1720000058412552, 0.10166666656732559, 0.10266666859388351, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 0, 1, 3, 2, 5, 8, 8, 2, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 3, 5, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 5, 0, 2, 4, 3], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.3865714371204376, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, alpha))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677474452771877, 2.305725169392814, 2.3036021330982956, 2.3029405724937733, 2.3025389478789533, 2.291041036559732, 2.2924606374635546, 2.3038652309132543, 2.3029355139638517, 2.2949694521501787, 2.206834329164984, 2.2831838837609615, 2.303169710792649, 2.377453615510815, 2.3122128562337734], "accuracy": [0.15651829540729523, 0.09325055778026581, 0.09549596905708313, 0.09417514503002167, 0.10962884873151779, 0.15598995983600616, 0.13221503794193268, 0.09589222073554993, 0.1002509593963623, 0.13578127324581146, 0.21159687638282776, 0.14898955821990967, 0.10051512718200684, 0.19244486093521118, 0.09721305221319199], "val_loss": [1.9780097007751465, 1.974362918308803, 1.9735452788216727, 1.9733914647783553, 1.971782616206578, 1.8956445285252161, 1.9744348526000977, 1.973534447806222, 1.972783020564488, 1.888221332005092, 1.7968955039978027, 1.973956789289202, 1.9714389528547014, 2.0084706715175082, 1.9744548116411482], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.27300000190734863, 0.10166666656732559, 0.10166666656732559, 0.09799999743700027, 0.3889999985694885, 0.22633333504199982, 0.10433333367109299, 0.1860000044107437, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 2, 8, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.3402857184410095, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, beta))))), tf.math.add(beta, alpha))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.967761276263004, 2.305729691063676, 2.3036292370803886, 2.3029407612195087, 2.3024741161642703, 2.2948851207180927, 2.262458005050359, 2.3039596049289, 2.861356072689737, 2.3053039445097356, 2.303578801552507], "accuracy": [0.15678246319293976, 0.09351472556591034, 0.0952318087220192, 0.09351472556591034, 0.10500594228506088, 0.1472724825143814, 0.1736890822649002, 0.09800554811954498, 0.14859332144260406, 0.09972262382507324, 0.09800554811954498], "val_loss": [1.9780074528285436, 1.9743449347359794, 1.9735661234174455, 1.9733203479221888, 1.9722347940717424, 1.912461485181536, 1.9758075986589705, 1.9714892251150948, 1.9768883160182409, 1.974252496446882, 1.9739653042384557], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.30300000309944153, 0.10166666656732559, 0.0989999994635582, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 3, 4, 2, 8, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 37, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.3351428508758545, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, beta))))), tf.math.add(beta, grad)))), tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.967757932356619, 2.305737792918112, 2.3036378640162396, 2.303080256557452, 2.3030435839002914, 2.3025012016296387, 2.296424427367535, 3.118979919509424, 2.3067835595046904, 2.303762072065739, 2.303126109888714, 2.30294885312278], "accuracy": [0.1566503793001175, 0.09338264167308807, 0.09628847241401672, 0.0952318087220192, 0.09800554811954498, 0.10381719470024109, 0.13551710546016693, 0.18082155287265778, 0.09681680053472519, 0.09179764986038208, 0.09853387624025345, 0.09879804402589798], "val_loss": [1.9779901504516602, 1.9743900299072266, 1.9736460958208357, 1.9735239573887415, 1.973433017730713, 1.9720829554966517, 1.9427924156188965, 1.980557577950614, 1.97470338003976, 1.9738553592136927, 1.973787580217634, 1.9736366271972656], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.10433333367109299, 0.30566665530204773, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [5, 2, 1, 2, 6, 4, 2, 8, 3, 2, 5, 1, 8, 2, 2, 3, 6, 2, 7, 1, 5, 6, 1, 8, 2, 3, 9, 6, 7, 0, 3, 0, 2, 9], [0, 0, 3, 5, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.322857141494751, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677136641577833, 2.305675777761046, 2.3036096003770106, 2.3029168643467712, 2.302099353963862, 2.279375025404443, 2.3825597628594832, 2.3043816396352748, 2.303547971488903, 2.3031774021615252, 2.3026452040266068], "accuracy": [0.1566503793001175, 0.08942015469074249, 0.09285431355237961, 0.09457138925790787, 0.11108175665140152, 0.16761326789855957, 0.12376172095537186, 0.09576013684272766, 0.09708096832036972, 0.09628847241401672, 0.10011887550354004], "val_loss": [1.9779863357543945, 1.9742910521371024, 1.9735311780657088, 1.9732210295540946, 1.9714253289358956, 2.1397666931152344, 1.9755182266235352, 1.9738853318350655, 1.9738133294241769, 1.97354337147304, 1.9715649059840612], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.3266666531562805, 0.10166666656732559, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 5, 0, 8, 2, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [49, 20, 79], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.24885714054107666, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, beta)))))), tf.math.add(beta, beta)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677139160860135, 2.305675777761046, 2.303609586867359, 2.3029094506342966, 2.3023314968532875, 2.2840435922799283, 4.933551277671555, 2.3083818142739396, 2.3041298258432135, 2.303158747316934, 2.303081791052304], "accuracy": [0.1566503793001175, 0.08942015469074249, 0.09285431355237961, 0.09285431355237961, 0.10857218503952026, 0.1702549159526825, 0.24593845009803772, 0.09721305221319199, 0.09325055778026581, 0.0952318087220192, 0.09721305221319199], "val_loss": [1.9779863357543945, 1.9742910521371024, 1.9735312461853027, 1.9733105387006487, 1.971329689025879, 1.853848934173584, 1.9850597381591797, 1.9753909792218889, 1.9740417344229562, 1.9738483428955078, 1.9738106046404158], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.23899999260902405, 0.09799999743700027, 0.0989999994635582, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 2, 8, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 2, 5, 2, 2, 1, 0, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2191428542137146, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, beta))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677596554827335, 2.3057341651830847, 2.30361071301804, 2.3029788071059625, 2.3027277463588733, 2.3000745013121993, 2.2464989781332463, 2.361047218283957, 2.3041318291450112, 2.3032385598493685, 2.3026547130576653], "accuracy": [0.15651829540729523, 0.09219389408826828, 0.09377889335155487, 0.09549596905708313, 0.10698718577623367, 0.12772421538829803, 0.1974640041589737, 0.10051512718200684, 0.10051512718200684, 0.09325055778026581, 0.09813763201236725], "val_loss": [1.9780352456229073, 1.9743680272783553, 1.973609788077218, 1.973365102495466, 1.9727749143327986, 1.9628677368164062, 2.0928982325962613, 1.9749979972839355, 1.97390045438494, 1.9735770225524902, 1.9731495720999581], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.20533333718776703, 0.09966666996479034, 0.10166666656732559, 0.0976666659116745, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 4, 2, 2, 6, 4, 0, 8, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 3, 2, 5, 2, 3, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.20200000703334808, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 14, 11, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(grad, beta)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, beta)), tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677225880225446, 2.3056509862596712, 2.3036441429494916, 2.3030172742164177, 2.302881939000835, 2.3001601971245997, 3.096104202143284, 2.310528565045156, 2.304077728124358, 2.3032293337337126, 2.30301385309403], "accuracy": [0.15678246319293976, 0.08955223858356476, 0.09311848133802414, 0.09457138925790787, 0.10276053100824356, 0.12613920867443085, 0.21054022014141083, 0.09774138033390045, 0.09391097724437714, 0.09100515395402908, 0.09470347315073013], "val_loss": [1.9779979160853796, 1.9743016787937708, 1.9735874448503767, 1.9733718463352747, 1.9729982103620256, 1.9631524085998535, 1.9895803587777274, 1.9749548094613212, 1.9738755907331194, 1.9737086296081543, 1.9737321989876884], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.23800000548362732, 0.09799999743700027, 0.10166666656732559, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 2, 6, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1817142814397812, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 8, 9, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, beta)), tf.math.add(beta, alpha))))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677764672203906, 2.305730162484377, 2.3036030728535772, 2.3030011985185768, 2.302689740245589, 2.300098549026965, 2.234206769287216, 2.306477291551579, 2.303751276185279, 2.3034359256841124, 2.303237105814095], "accuracy": [0.15651829540729523, 0.09338264167308807, 0.09496764093637466, 0.09628847241401672, 0.10051512718200684, 0.12878087162971497, 0.22903183102607727, 0.09879804402589798, 0.09866596013307571, 0.09470347315073013, 0.09853387624025345], "val_loss": [1.9780408995492118, 1.974363122667585, 1.9736086300441198, 1.973386492047991, 1.9730379240853446, 1.9628427369253976, 1.9798031534467424, 1.9742704800197057, 1.9737520217895508, 1.9737770216805595, 1.9737969126020158], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.2136666625738144, 0.10166666656732559, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 5, 2, 2, 8, 4, 0, 8, 3, 2, 5, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 0, 3, 3, 3, 1, 0, 0, 3, 3], [88, 51, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1565714329481125, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(grad, tf.math.negative(tf.math.sqrt(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9677822969656074, 2.3056912963196052, 2.3036286827123176, 2.302998931353449, 2.302802521176956, 2.3011360171606134, 2.4226354148173455, 2.3140757996502836, 2.303873020408176, 2.3031727196974696, 2.3029963223846943], "accuracy": [0.15651829540729523, 0.08994849026203156, 0.09417514503002167, 0.09298639744520187, 0.10421344637870789, 0.11781799048185349, 0.1958790123462677, 0.10130762308835983, 0.09813763201236725, 0.09259014576673508, 0.1014397069811821], "val_loss": [1.9779974392482214, 1.9743191174098425, 1.973576273236956, 1.9734696660723006, 1.9729581560407365, 1.9676731654575892, 1.9929759843008858, 1.9755215644836426, 1.974069254738944, 1.9738616262163435, 1.973815849849156], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.15700000524520874, 0.09799999743700027, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 4, 9, 6, 3, 4, 0, 8, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 5, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 5, 2, 2, 8, 8, 0, 8, 3, 2, 5, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 5, 0, 2, 4, 3], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3017358928859792, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 5, 9, 3, 8, 4, 0, 5, 3, 2, 5, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 0, 3, 3, 3, 1, 0, 0, 3, 3], [88, 34, 39, 63], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [2, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 5, 2, 2, 8, 4, 0, 5, 3, 2, 5, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.08057142794132233, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta))))), tf.math.sqrt(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.square(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.395903529901672, 2.3156346237150873, 2.3058634411468324, 2.303651484138127, 2.30373917607237, 2.303282723592462, 2.3030840109808883], "accuracy": [0.16312244534492493, 0.10236428678035736, 0.09853387624025345, 0.10011887550354004, 0.1002509593963623, 0.09602430462837219, 0.09668471664190292], "val_loss": [1.9922545978001185, 1.9778776850019182, 1.9747427531651087, 1.9738198007856096, 1.9741198675973075, 1.9738510676792689, 1.9737278393336706], "val_accuracy": [0.10100000351667404, 0.10433333367109299, 0.10433333367109299, 0.09966666996479034, 0.09833333641290665, 0.10100000351667404, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 1, 2, 2, 6, 4, 2, 8, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 1, 2, 5, 2, 2, 3, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 34, 79], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.0705714300274849, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 7, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(beta, beta)))), tf.math.divide_no_nan(tf.math.add(beta, grad), beta)), tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302109394909888, 2.300211076235113, 2.3013564342394983, 2.3011743169907235, 2.301781560514644, 2.300355392093782, 2.3002876091343523, 2.300245381522692, 2.3004344346390706, 2.299918704076356, 2.2995542454256626, 2.300605945394433, 2.300732278773467, 2.3002736608444536, 2.300146639921788, 2.300880723830306, 2.3000286784012713, 2.300490921451557], "accuracy": [0.09047681838274002, 0.09232597798109055, 0.09589222073554993, 0.09879804402589798, 0.09615638852119446, 0.09959053993225098, 0.09615638852119446, 0.09642054885625839, 0.10315678268671036, 0.09774138033390045, 0.10077928751707077, 0.09853387624025345, 0.09708096832036972, 0.10051512718200684, 0.10368511080741882, 0.10011887550354004, 0.09932637959718704, 0.09708096832036972], "val_loss": [1.9702403885977608, 1.9699996539524622, 1.9697788783482142, 1.9696072850908553, 1.9696764945983887, 1.9698420252118791, 1.9697940008980888, 1.9696805136544364, 1.9695209775652205, 1.9695483616420202, 1.9696961811610632, 1.9698167528424944, 1.9700050354003906, 1.970248017992292, 1.9704352106366838, 1.9705973352704729, 1.9708690643310547, 1.97107880456107], "val_accuracy": [0.04866666719317436, 0.054999999701976776, 0.05833333358168602, 0.061666667461395264, 0.06566666811704636, 0.07100000232458115, 0.07633333653211594, 0.07966666668653488, 0.08433333039283752, 0.08399999886751175, 0.08433333039283752, 0.08366666734218597, 0.08500000089406967, 0.08266666531562805, 0.07800000160932541, 0.07733333110809326, 0.07766667008399963, 0.07733333110809326]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 1, 2, 8, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 0, 3, 3, 3, 1, 0, 0, 3, 3], [88, 34, 39, 23, 32], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 18, 18, 9, 9, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025085460618504, 2.3011062942586005, 2.30275645987894, 2.303473139325657, 2.3038312353399437, 2.302308687995595], "accuracy": [0.08942015469074249, 0.08915598690509796, 0.09430722147226334, 0.09496764093637466, 0.08981640636920929, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [5, 2, 1, 2, 6, 4, 0, 8, 3, 2, 5, 1, 8, 2, 2, 3, 6, 2, 7, 1, 5, 6, 1, 8, 2, 3, 9, 6, 7, 0, 3, 0, 2, 9], [3, 0, 3, 5, 3, 2, 3, 3, 0, 3, 3, 1, 0, 4, 4, 1, 3, 0, 4, 2, 1, 1, 3], [34, 64, 39, 98, 95], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 56, 56, 33, 23, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad))))), grad), tf.math.sqrt(grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), grad)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(beta), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))), grad)))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025085460618504, 2.3011062942586005, 2.30275645987894, 2.303473139325657, 2.3038312353399437, 2.302308687995595], "accuracy": [0.08942015469074249, 0.08915598690509796, 0.09430722147226334, 0.09496764093637466, 0.08981640636920929, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 2, 2, 2, 6, 4, 0, 8, 5, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 1, 3, 0, 3, 3], [88, 34, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025085460618504, 2.3011062942586005, 2.30275645987894, 2.303473139325657, 2.3038312353399437, 2.302308687995595], "accuracy": [0.08942015469074249, 0.08915598690509796, 0.09430722147226334, 0.09496764093637466, 0.08981640636920929, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [4, 2, 2, 2, 6, 4, 0, 8, 5, 3, 3, 1, 8, 2, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 1, 3, 0, 3, 3, 5], [68, 34, 42, 88, 30, 77], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad))), tf.math.sqrt(grad)), grad)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025085460618504, 2.3011062942586005, 2.30275645987894, 2.303473139325657, 2.3038312353399437, 2.302308687995595], "accuracy": [0.08942015469074249, 0.08915598690509796, 0.09430722147226334, 0.09496764093637466, 0.08981640636920929, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]