[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7799999713897705, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293996966258331, 2.2715015959005944, 2.2499143752313606, 2.2226472111929834, 2.1861086035952546, 2.1451967495968787, 2.088013784272276, 2.0175894206588327, 1.934755123365415, 1.8315548413402258, 1.729809962873367, 1.6267705070281215, 1.5288658467864538, 1.4506864820284346, 1.3826808599259923, 1.3172666821670633, 1.2604106485946005, 1.2197324728307597, 1.1774124128156256, 1.1362370820549959, 1.1110841606460338, 1.0808333595588522, 1.0681971787398659, 1.0438655977629556, 1.0205471621229192, 1.0021833419059765, 0.9812054371852695, 0.9679141066188054, 0.9521007513829888, 0.9382082114539614, 0.9287839329568639, 0.9174611474214024, 0.8962152751681512, 0.8946033154874193, 0.8943012349987547, 0.8787023761347694, 0.8655432773587443, 0.8561963069046871, 0.8519358815077416, 0.8495123494397285, 0.8413551384982904, 0.8315361534694182, 0.8251208783833578, 0.8234330155058717, 0.823486204617185, 0.8123658928243224, 0.8048179188440379, 0.796872704981057, 0.7960803887595621, 0.7829226424917333, 0.7816868436775817, 0.7788176806438175, 0.7800642138679408, 0.7715261895753263, 0.7666684864550187, 0.7590818561110687, 0.7642008923126989, 0.7563279505419048, 0.7541987075860458, 0.7487894378129155, 0.7468300332183521, 0.7409035468366026, 0.7377803425085999, 0.7353894379648787, 0.7306194837460853, 0.7426690465392154, 0.7288739186283651, 0.7267611896861041, 0.7268933751217489, 0.7243312787874232, 0.716092262978504, 0.7131530260050916, 0.7104650401656559, 0.7202985535570502, 0.700507256766163, 0.7132022090560299, 0.7019368625666565, 0.7016291190462814, 0.6985031501917146, 0.6962067135935053, 0.6938570333808846, 0.6914935999652886, 0.686376505815405, 0.6890854502256442, 0.6818535527407045, 0.6832538693336337, 0.6817323258366835, 0.6816049540567203, 0.6818837236734571], "accuracy": [0.11478008329868317, 0.17593449354171753, 0.22520142793655396, 0.27222296595573425, 0.31805574893951416, 0.35305771231651306, 0.37907806038856506, 0.3995509147644043, 0.4259675145149231, 0.4414212107658386, 0.4690265357494354, 0.48712190985679626, 0.5127459764480591, 0.533350944519043, 0.5381059050559998, 0.5523709058761597, 0.5641262531280518, 0.5789195895195007, 0.589750349521637, 0.602562427520752, 0.6131290197372437, 0.6273940205574036, 0.6223748326301575, 0.6320168972015381, 0.64231938123703, 0.6421872973442078, 0.6522256135940552, 0.6520935297012329, 0.6613393425941467, 0.6653017997741699, 0.6707172393798828, 0.6734909415245056, 0.6795667409896851, 0.6804913282394409, 0.6783780455589294, 0.6819442510604858, 0.6905296444892883, 0.6960771083831787, 0.6913221478462219, 0.6925109028816223, 0.7005679607391357, 0.69673752784729, 0.7005679607391357, 0.7036058902740479, 0.7045304179191589, 0.6999075412750244, 0.7129837274551392, 0.7116629481315613, 0.71100252866745, 0.7102100253105164, 0.7129837274551392, 0.7187954187393188, 0.713908314704895, 0.7194558382034302, 0.7185312509536743, 0.7271166443824768, 0.7223616242408752, 0.7231541275978088, 0.720380425453186, 0.7273808121681213, 0.7289658188819885, 0.726192057132721, 0.7334566116333008, 0.7341170310974121, 0.7314753532409668, 0.7283053994178772, 0.7323999404907227, 0.737947404384613, 0.7301545143127441, 0.7309470176696777, 0.7387399077415466, 0.7347774505615234, 0.7407211661338806, 0.7342491149902344, 0.7452120184898376, 0.7427024245262146, 0.744419515132904, 0.7467969655990601, 0.7440232634544373, 0.7493065595626831, 0.7415136694908142, 0.7470611333847046, 0.7494386434555054, 0.7474573850631714, 0.7499669790267944, 0.746268630027771, 0.7454761862754822, 0.7500990629196167, 0.7511557340621948], "val_loss": [1.9510126113891602, 1.9300291197640556, 1.9064428465706962, 1.8773268972124373, 1.8396220207214355, 1.7912559509277344, 1.7299133028302873, 1.653221879686628, 1.5623281342642648, 1.4591894490378243, 1.3507870946611678, 1.2474216052464075, 1.1535188129970007, 1.0732791764395577, 1.0048329830169678, 0.9506136689867292, 0.9029609135219029, 0.8645932163511004, 0.830925566809518, 0.802081721169608, 0.7787485633577619, 0.7570329904556274, 0.7401870148522514, 0.7236203806740897, 0.7086806467601231, 0.6963216406958443, 0.6854158980505807, 0.6752251556941441, 0.6664031403405326, 0.6574040991919381, 0.6485293081828526, 0.640800050326756, 0.6345644337790353, 0.6270516770226615, 0.6225345134735107, 0.6180484124592373, 0.6139037949698312, 0.6065234456743512, 0.6015956231525966, 0.5982095854622977, 0.5927033424377441, 0.5893738780702863, 0.5857293435505458, 0.5822584799357823, 0.5795292854309082, 0.5761787721088955, 0.5727375234876361, 0.5696158579417637, 0.5654175451823643, 0.5639705998556954, 0.561136109488351, 0.5576402970722744, 0.556784987449646, 0.5536922897611346, 0.5494131360735212, 0.5474288463592529, 0.5457359892981393, 0.5431421995162964, 0.5414024761744908, 0.5396686792373657, 0.5374017783573696, 0.535544787134443, 0.5318214212145124, 0.5304070881434849, 0.5289003849029541, 0.5274971212659564, 0.5242986168180194, 0.5231494052069527, 0.521641458783831, 0.5198250327791486, 0.518303666796003, 0.5161582912717547, 0.5151623828070504, 0.5146438905170986, 0.5116209302629743, 0.5118070500237601, 0.5092818226133075, 0.5084679978234428, 0.5070978403091431, 0.5048272098813739, 0.5025817666734967, 0.5046830007008144, 0.501794832093375, 0.4999115637370518, 0.4971987179347447, 0.49558251244681223, 0.49731930664607454, 0.4947608028139387, 0.4944002798625401], "val_accuracy": [0.210999995470047, 0.34833332896232605, 0.3959999978542328, 0.4323333203792572, 0.4586666524410248, 0.4846666753292084, 0.5293333530426025, 0.5506666898727417, 0.5723333358764648, 0.5846666693687439, 0.6000000238418579, 0.6190000176429749, 0.6416666507720947, 0.6549999713897705, 0.6726666688919067, 0.6766666769981384, 0.6823333501815796, 0.6916666626930237, 0.6970000267028809, 0.7006666660308838, 0.7043333053588867, 0.7070000171661377, 0.7143333554267883, 0.7113333344459534, 0.721666693687439, 0.7203333377838135, 0.7213333249092102, 0.7269999980926514, 0.722000002861023, 0.7310000061988831, 0.7319999933242798, 0.7319999933242798, 0.7363333106040955, 0.7383333444595337, 0.7396666407585144, 0.7443333268165588, 0.7363333106040955, 0.7443333268165588, 0.7473333477973938, 0.7483333349227905, 0.746666669845581, 0.7493333220481873, 0.7519999742507935, 0.7526666522026062, 0.7506666779518127, 0.7556666731834412, 0.7509999871253967, 0.75, 0.7590000033378601, 0.7540000081062317, 0.7583333253860474, 0.7613333463668823, 0.7630000114440918, 0.7590000033378601, 0.7639999985694885, 0.765999972820282, 0.7676666378974915, 0.7716666460037231, 0.7689999938011169, 0.7693333625793457, 0.7710000276565552, 0.7699999809265137, 0.7733333110809326, 0.7706666588783264, 0.7710000276565552, 0.7699999809265137, 0.7753333449363708, 0.7733333110809326, 0.7723333239555359, 0.7766666412353516, 0.7766666412353516, 0.7760000228881836, 0.7743333578109741, 0.7763333320617676, 0.7773333191871643, 0.7753333449363708, 0.7763333320617676, 0.7770000100135803, 0.778333306312561, 0.7773333191871643, 0.7789999842643738, 0.7753333449363708, 0.7799999713897705, 0.784333348274231, 0.7796666622161865, 0.7789999842643738, 0.7789999842643738, 0.7820000052452087, 0.7836666703224182]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7717142701148987, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29399699774936, 2.2715015959005944, 2.2499144382134184, 2.2226472426840123, 2.1861088779765883, 2.14519741538021, 2.0880145084714656, 2.017591624841903, 1.9347573570870704, 1.8315590874960772, 1.7298190989404258, 1.6267795264996463, 1.5288808144094639, 1.4507008223029143, 1.3826837031092736, 1.3172750895159702, 1.2604211632759186, 1.2197526959285854, 1.177422102494971, 1.136240826826432, 1.1111087341822528, 1.080846183508804, 1.0681819286738183, 1.0438789650118818, 1.0205166586291567, 1.0022397999120443, 0.9812580400832089, 0.9679198380647759, 0.9520903230658171, 0.9382274249808946, 0.9288008633212265, 0.91746977280632, 0.8962433612137234, 0.8945943873556236, 0.8942683768105497, 0.8787073277369025, 0.8655337350259226, 0.8562159956233723, 0.8519342910218406, 0.849587808471267, 0.8413835494997889, 0.8315113313587633, 0.8251237021130562, 0.8234042523480709, 0.8234412986777793, 0.8123625363057804, 0.8048215346124745, 0.796927062708704, 0.7960390160112427, 0.7829051991700023, 0.7816601395213357, 0.7788355180600285, 0.7800341342906627, 0.7715883845146763, 0.766652725698957, 0.7590128208242781, 0.764150914735231, 0.7562812526448686, 0.7542258074506871, 0.7488088300042007, 0.7467945665180125, 0.7408625099401055, 0.7377580200298477, 0.7353435590550286, 0.7305611096604971, 0.7426047084857728, 0.7288044744935475, 0.7267476735475938, 0.726924877510945, 0.7243121625520235, 0.7160445720512381, 0.7131917977912504, 0.7104911710907046, 0.7202696807081232, 0.7004916136369667, 0.7132291657860725], "accuracy": [0.11478008329868317, 0.17593449354171753, 0.22520142793655396, 0.27222296595573425, 0.31805574893951416, 0.35305771231651306, 0.37921014428138733, 0.3995509147644043, 0.4259675145149231, 0.44128912687301636, 0.4691586196422577, 0.486989825963974, 0.5127459764480591, 0.533350944519043, 0.5381059050559998, 0.5522388219833374, 0.564258337020874, 0.5789195895195007, 0.589750349521637, 0.6028265953063965, 0.6131290197372437, 0.6272619366645813, 0.6225069165229797, 0.6317527294158936, 0.6424514651298523, 0.6421872973442078, 0.6520935297012329, 0.6524897813796997, 0.6612072587013245, 0.6651697158813477, 0.6708492636680603, 0.6738871932029724, 0.6794346570968628, 0.6806234121322632, 0.6781138777732849, 0.6823405027389526, 0.6907938122749329, 0.6952846646308899, 0.6914542317390442, 0.6933034062385559, 0.7016246318817139, 0.6964733600616455, 0.7008321285247803, 0.7034738063812256, 0.7045304179191589, 0.700171709060669, 0.7121912837028503, 0.711530864238739, 0.7112666964530945, 0.7099458575248718, 0.713379979133606, 0.7189275026321411, 0.7136441469192505, 0.7197200059890747, 0.7182670831680298, 0.7273808121681213, 0.7223616242408752, 0.7224937081336975, 0.7205125093460083, 0.7275128960609436, 0.7285695672035217, 0.7268524765968323, 0.7329282760620117, 0.7346453666687012, 0.7320036888122559, 0.7283053994178772, 0.7322678565979004, 0.7383436560630798, 0.7300224304199219, 0.7316074371337891, 0.7387399077415466, 0.735041618347168, 0.7409853339195251, 0.7347774505615234, 0.7449478507041931, 0.7429665923118591], "val_loss": [1.9510126113891602, 1.9300291197640556, 1.9064429146902901, 1.8773269653320312, 1.8396227700369698, 1.7912562234061105, 1.7299154826572962, 1.6532256603240967, 1.5623298031943185, 1.4591973509107317, 1.3507980959756034, 1.2474356038229806, 1.1535389763968331, 1.0732895646776472, 1.0048370701926095, 0.9506181648799351, 0.9029769556862968, 0.864600692476545, 0.83092543057033, 0.8020761353628976, 0.778737119265965, 0.7570070368903024, 0.7402013369968959, 0.7236382450376239, 0.7087172951017108, 0.6963247571672712, 0.6853901999337333, 0.6752633878162929, 0.6663955109460014, 0.6573865583964756, 0.6485150882175991, 0.6408107110432216, 0.6345708540507725, 0.6270659821374076, 0.6225288425173078, 0.618088790348598, 0.6139489752905709, 0.6065917355673653, 0.6016204697745187, 0.5982654094696045, 0.5926740850721087, 0.5893604414803642, 0.585721526827131, 0.5822653940745762, 0.5795398950576782, 0.5760505369731358, 0.5726315804890224, 0.5695031540734428, 0.5653689929417202, 0.5639558689934867, 0.5611101048333305, 0.5576806919915336, 0.5568409817559379, 0.5536774226597377, 0.5494019304003034, 0.5474452802113124, 0.5457755497523716, 0.5431933573314122, 0.5415243591581073, 0.5397446496146066, 0.5374402829578945, 0.5354990788868496, 0.5318353687013898, 0.5304119416645595, 0.528888327734811, 0.5274974278041294, 0.5243456704275948, 0.5231723955699376, 0.5216903856822422, 0.5199376855577741, 0.5183227062225342, 0.5162345170974731, 0.5151980774743217, 0.5145704235349383, 0.5117039680480957, 0.5118144409997123], "val_accuracy": [0.210999995470047, 0.34833332896232605, 0.3959999978542328, 0.4323333203792572, 0.4586666524410248, 0.4846666753292084, 0.5289999842643738, 0.5506666898727417, 0.5723333358764648, 0.5846666693687439, 0.6000000238418579, 0.6193333268165588, 0.6416666507720947, 0.6549999713897705, 0.6726666688919067, 0.6766666769981384, 0.6823333501815796, 0.6916666626930237, 0.6970000267028809, 0.7006666660308838, 0.7043333053588867, 0.7073333263397217, 0.7143333554267883, 0.7113333344459534, 0.721666693687439, 0.7203333377838135, 0.7210000157356262, 0.7269999980926514, 0.722000002861023, 0.7310000061988831, 0.7323333621025085, 0.7319999933242798, 0.7363333106040955, 0.7383333444595337, 0.7396666407585144, 0.7443333268165588, 0.7369999885559082, 0.7436666488647461, 0.7476666569709778, 0.7480000257492065, 0.746666669845581, 0.749666690826416, 0.7526666522026062, 0.7526666522026062, 0.7506666779518127, 0.7559999823570251, 0.7509999871253967, 0.7506666779518127, 0.7583333253860474, 0.7536666393280029, 0.7583333253860474, 0.7616666555404663, 0.762666642665863, 0.7590000033378601, 0.7643333077430725, 0.765999972820282, 0.7680000066757202, 0.7720000147819519, 0.7693333625793457, 0.7693333625793457, 0.7710000276565552, 0.7703333497047424, 0.7730000019073486, 0.7703333497047424, 0.7703333497047424, 0.7699999809265137, 0.7753333449363708, 0.7730000019073486, 0.7726666927337646, 0.7766666412353516, 0.7770000100135803, 0.7756666541099548, 0.7743333578109741, 0.7770000100135803, 0.7766666412353516, 0.7753333449363708]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [6, 2, 3, 1, 3, 2, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 2, 5, 6, 2, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 1, 3, 2, 0, 2, 1], [40, 28, 79, 92, 41, 94, 67], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7717142701148987, "mapping_values": [1, 48, 48, 30, 18, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), alpha)), alpha)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293996934767302, 2.2715016273916233, 2.2499143617217094, 2.2226458527014916, 2.1861059134426277, 2.1451946398868946, 2.0880099651977577, 2.0175855721874387, 1.9347524401093235, 1.8315581937176975, 1.7298308743021003, 1.626800714734523, 1.5289008808079303, 1.4507184070980923, 1.3827071081393776, 1.3172852830675221, 1.2604384566373703, 1.2197440447131513, 1.1774060282457175, 1.136216188702113, 1.1110938136383306, 1.0808340592895123, 1.0682167679547727, 1.0438819763730025, 1.0205461621489176, 1.0022349985614822, 0.9812412840846728, 0.9679427722803811, 0.9521221855391822, 0.9382378992119863, 0.9287851435901026, 0.917452527185268, 0.896213197925418, 0.8945852078781813, 0.8942960169037902, 0.8786800210470568, 0.8655652906664485, 0.8562064120215573, 0.8518679174827688, 0.8496061931936858, 0.8413331432349457, 0.8315109211251311, 0.8250951218157869, 0.8234613005038911, 0.8234041114650807, 0.8123935789653197, 0.8048509654351954, 0.7969178819086384, 0.7962108132247486, 0.7829583982403535, 0.7816624022698468, 0.7789129935802328, 0.7801339113795762, 0.7715385045357793, 0.7666815685448063, 0.7590895657526141, 0.764192450142587, 0.7562720049972217, 0.7542047188455528, 0.7488622847187237, 0.7468117926539903, 0.7408694689536155, 0.7378602980181778, 0.735342146021075, 0.7306457465319444, 0.7426385826218035, 0.7288731014991496, 0.7267522809764004, 0.7269791271849992, 0.7242827954120357, 0.7160916033516691, 0.7131919867216777, 0.7105209960079054, 0.7202739580952023, 0.7005736356508369, 0.7131907587211366], "accuracy": [0.11478008329868317, 0.17593449354171753, 0.2250693440437317, 0.27222296595573425, 0.31805574893951416, 0.35305771231651306, 0.37907806038856506, 0.3995509147644043, 0.42583543062210083, 0.4414212107658386, 0.46929070353507996, 0.48685774207115173, 0.5127459764480591, 0.5332188606262207, 0.5379738211631775, 0.5522388219833374, 0.5639941692352295, 0.5789195895195007, 0.5898824334144592, 0.6028265953063965, 0.6133931875228882, 0.6273940205574036, 0.622639000415802, 0.6318848133087158, 0.6424514651298523, 0.6421872973442078, 0.6520935297012329, 0.6520935297012329, 0.6613393425941467, 0.6653017997741699, 0.670320987701416, 0.6736230254173279, 0.6795667409896851, 0.6804913282394409, 0.6779817938804626, 0.6819442510604858, 0.6906617283821106, 0.6954167485237122, 0.6915863156318665, 0.6927750706672668, 0.7010962963104248, 0.6964733600616455, 0.7009642124176025, 0.7040021419525146, 0.7038700580596924, 0.7004358768463135, 0.7129837274551392, 0.7113987803459167, 0.71100252866745, 0.7103421092033386, 0.7129837274551392, 0.7181349992752075, 0.7137762308120728, 0.7195879220962524, 0.7185312509536743, 0.7269845604896545, 0.722229540348053, 0.7228899598121643, 0.7205125093460083, 0.7269845604896545, 0.7285695672035217, 0.72672039270401, 0.733060359954834, 0.7343811988830566, 0.7316074371337891, 0.7289658188819885, 0.7321357727050781, 0.7375511527061462, 0.7304186820983887, 0.7317395210266113, 0.7388719916343689, 0.7349095344543457, 0.7408532500267029, 0.7343811988830566, 0.7448157668113708, 0.7429665923118591], "val_loss": [1.9510126113891602, 1.9300290516444616, 1.9064419610159737, 1.8773246492658342, 1.8396195002964564, 1.7912535667419434, 1.7299096924918038, 1.6532188143048967, 1.5623265675136022, 1.4592058658599854, 1.3508247647966658, 1.2474589347839355, 1.153550658907209, 1.0733106136322021, 1.0048530101776123, 0.9506288255964007, 0.9029947349003383, 0.8646012204033988, 0.8309273038591657, 0.802074841090611, 0.7787615231105259, 0.7570264169148037, 0.7402078594480243, 0.7236334596361432, 0.7086941514696393, 0.6963253021240234, 0.685406003679548, 0.6752443483897618, 0.6664210557937622, 0.657440049307687, 0.6485521112169538, 0.6408182723181588, 0.6345771040235247, 0.6270772389003209, 0.6225543192454747, 0.6180239745548793, 0.6139104536601475, 0.6065588508333478, 0.6016253573553902, 0.59821617603302, 0.5927153996058873, 0.5894087723323277, 0.5857256821223668, 0.5823142358234951, 0.5795725584030151, 0.576055748122079, 0.5726578235626221, 0.569651586668832, 0.5654721600668771, 0.564018794468471, 0.5611260959080288, 0.5577523708343506, 0.5568649087633405, 0.5536843197686332, 0.549420884677342, 0.547521846635001, 0.5458500896181379, 0.5431721721376691, 0.5414967366627285, 0.53976913860866, 0.5374220269066947, 0.5355538811002459, 0.5318685088838849, 0.5303987264633179, 0.5289078610283988, 0.5275834458214896, 0.5242824554443359, 0.5231778110776629, 0.5216692515781948, 0.519859961100987, 0.5183512653623309, 0.5162183216639927, 0.515160356249128, 0.5145402806145805, 0.5117304154804775, 0.5118172679628644], "val_accuracy": [0.210999995470047, 0.34833332896232605, 0.3959999978542328, 0.4323333203792572, 0.4586666524410248, 0.4846666753292084, 0.5293333530426025, 0.5506666898727417, 0.5723333358764648, 0.5846666693687439, 0.6000000238418579, 0.6190000176429749, 0.6413333415985107, 0.6549999713897705, 0.6726666688919067, 0.6766666769981384, 0.6823333501815796, 0.6916666626930237, 0.6966666579246521, 0.7006666660308838, 0.7039999961853027, 0.7070000171661377, 0.7139999866485596, 0.7113333344459534, 0.721666693687439, 0.7203333377838135, 0.7213333249092102, 0.7269999980926514, 0.722000002861023, 0.731333315372467, 0.7319999933242798, 0.7316666841506958, 0.7363333106040955, 0.7383333444595337, 0.7396666407585144, 0.7440000176429749, 0.7369999885559082, 0.7436666488647461, 0.7483333349227905, 0.7486666440963745, 0.746666669845581, 0.749666690826416, 0.7523333430290222, 0.7526666522026062, 0.7513333559036255, 0.7556666731834412, 0.750333309173584, 0.75, 0.7586666941642761, 0.7536666393280029, 0.7580000162124634, 0.7616666555404663, 0.762666642665863, 0.7593333125114441, 0.7643333077430725, 0.7663333415985107, 0.7680000066757202, 0.7716666460037231, 0.768666684627533, 0.7693333625793457, 0.7716666460037231, 0.7706666588783264, 0.7730000019073486, 0.7706666588783264, 0.7703333497047424, 0.7703333497047424, 0.7749999761581421, 0.7733333110809326, 0.7723333239555359, 0.7770000100135803, 0.7773333191871643, 0.7756666541099548, 0.7739999890327454, 0.7766666412353516, 0.7770000100135803, 0.7753333449363708]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6911428570747375, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2781903668480337, 2.0857275325104765, 1.5742121596519643, 1.3176813006101897, 1.0086935404631534, 0.9735224134870697, 0.8617676563345446, 0.8541399073197684, 0.7993941042700684, 0.7983723088908016, 0.7661842480311698, 0.7341308990222053, 0.7226897838833373, 0.6802596845458039, 0.684931736029591, 0.6522272188807396, 0.6401311877601733, 0.6184615401103118, 0.6008342550084607, 0.5826070026604412, 0.5679386828349109, 0.5503028679627784, 0.5656032583118666, 0.5328196342067633, 0.5297246641329235, 0.5183453363135285, 0.5070393113821662, 0.49963143169525637, 0.49768200695018694, 0.4787469860734626, 0.4693006221817595, 0.46370027338383046, 0.443145053273478, 0.44389335199228097, 0.45496034230522714, 0.4317153464014252, 0.4303866405142864, 0.42399884101626834, 0.41566868126589185, 0.4104682784653012, 0.4023694988719508, 0.40570365128075014, 0.3911018884885801, 0.3914781926511506], "accuracy": [0.1526878923177719, 0.36705851554870605, 0.47272488474845886, 0.5559371113777161, 0.6494518518447876, 0.6478668451309204, 0.687887966632843, 0.6778497099876404, 0.7029454708099365, 0.7106062769889832, 0.7017567157745361, 0.715889573097229, 0.737947404384613, 0.7380794882774353, 0.7413815855979919, 0.7611940503120422, 0.7655527591705322, 0.7585523724555969, 0.7707040309906006, 0.7817989587783813, 0.7816668748855591, 0.7931581139564514, 0.7918372750282288, 0.7992339134216309, 0.7964601516723633, 0.8013472557067871, 0.8095363974571228, 0.8100647330284119, 0.8101968169212341, 0.8224804997444153, 0.8251221776008606, 0.8238013386726379, 0.8325188159942627, 0.8305375576019287, 0.8296129703521729, 0.8272355198860168, 0.8345000743865967, 0.8379341959953308, 0.8442742228507996, 0.8433496356010437, 0.848368763923645, 0.8475762605667114, 0.8467837572097778, 0.8481045961380005], "val_loss": [1.8859825815473283, 1.492095708847046, 0.8729627302714756, 0.7198308535984584, 0.7565810680389404, 0.6272978101457868, 0.6212406839643206, 0.5968687874930245, 0.6242753267288208, 0.5740842138017926, 0.5279754911150251, 0.5362686429704938, 0.5176747696740287, 0.5203851631709507, 0.47637072631290983, 0.49128704411642893, 0.4755797045571463, 0.44973502840314594, 0.45232081413269043, 0.4390133959906442, 0.43357936825071064, 0.42487152985164095, 0.4266725608280727, 0.4169332725661142, 0.41744293485369, 0.41045805386134554, 0.4018920063972473, 0.38894160304750713, 0.394835250718253, 0.37902241945266724, 0.3762915219579424, 0.3731049724987575, 0.3770973341805594, 0.3648289867809841, 0.36011492354529245, 0.35746744700840544, 0.37102043628692627, 0.3574749657085964, 0.35365138735089985, 0.3618206637246268, 0.3832629493304661, 0.3659150259835379, 0.36764040163585116, 0.3682072843824114], "val_accuracy": [0.40799999237060547, 0.5346666574478149, 0.6783333420753479, 0.7059999704360962, 0.6753333210945129, 0.7303333282470703, 0.7416666746139526, 0.7246666550636292, 0.7383333444595337, 0.7390000224113464, 0.7639999985694885, 0.7543333172798157, 0.7716666460037231, 0.781000018119812, 0.7896666526794434, 0.7850000262260437, 0.7903333306312561, 0.8040000200271606, 0.8096666932106018, 0.8040000200271606, 0.8019999861717224, 0.8230000138282776, 0.8206666707992554, 0.8143333196640015, 0.8169999718666077, 0.8196666836738586, 0.8293333053588867, 0.8296666741371155, 0.8289999961853027, 0.8376666903495789, 0.8330000042915344, 0.8383333086967468, 0.8370000123977661, 0.8473333120346069, 0.8479999899864197, 0.8553333282470703, 0.8476666808128357, 0.8539999723434448, 0.859666645526886, 0.8553333282470703, 0.8529999852180481, 0.8569999933242798, 0.8543333411216736, 0.8543333411216736]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.14914286136627197, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.028315342081977, 2.311085169042311, 2.3030522537899056, 2.257433727794965, 2.3421112175048258, 2.301960121387063, 2.376134470705469, 2.384883312643039], "accuracy": [0.20512482523918152, 0.09708096832036972, 0.09945846349000931, 0.13551710546016693, 0.10936468094587326, 0.10447761416435242, 0.18742570281028748, 0.09879804402589798], "val_loss": [2.006621701376779, 1.9744486127580916, 1.972252368927002, 2.094350814819336, 1.973724024636405, 1.9592901638575964, 2.33406857081822, 1.9749497004917689], "val_accuracy": [0.10166666656732559, 0.10100000351667404, 0.13966666162014008, 0.1276666671037674, 0.10100000351667404, 0.12700000405311584, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 2, 2, 1, 4, 6, 5, 3, 2, 4, 3, 2, 2, 0, 5, 1, 2, 3, 9, 9, 5, 6, 3, 5, 8, 4, 5, 9], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 2, 2, 0, 2], [16, 63, 93, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.13771428167819977, "mapping_values": [1, 43, 43, 28, 15, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, alpha))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.0244737254346696, 2.3111540693664248, 2.3006297535884332, 2.2704732945535033, 2.3034992197863318, 2.303418628417773, 2.3031449453343553, 2.303251532736141, 2.302945190023327, 2.3027695534078436, 2.3029614669803333, 2.3023597176962083], "accuracy": [0.20459648966789246, 0.09615638852119446, 0.108440101146698, 0.14251750707626343, 0.09932637959718704, 0.09642054885625839, 0.09906221181154251, 0.09708096832036972, 0.10117553919553757, 0.10276053100824356, 0.08717474341392517, 0.09972262382507324], "val_loss": [2.0087428092956543, 1.9740214347839355, 1.9570704187665666, 1.9744422776358468, 1.973891053880964, 1.9736568587166923, 1.9735422815595354, 1.9736731392996651, 1.9736712319510323, 1.9735428265162878, 1.9733569962637765, 1.9727251870291573], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10166666656732559, 0.10433333367109299, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [0, 37, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 6, 2, 0, 4, 0, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 1, 5, 1, 3, 3, 4], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.11628571152687073, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.0249129665872565, 2.3115770737445587, 2.300997353563723, 2.264812139708368, 2.3041899698033483, 2.3033616744673657, 2.3030356276918633, 2.303245221272656, 2.3029304254544707, 2.3028525104769595, 2.3031080798576253, 2.3029887599715813], "accuracy": [0.20433232188224792, 0.09681680053472519, 0.10685510188341141, 0.1418570876121521, 0.09760929644107819, 0.09747721254825592, 0.10276053100824356, 0.09655263274908066, 0.09879804402589798, 0.1002509593963623, 0.08757099509239197, 0.09285431355237961], "val_loss": [2.011420590536935, 1.9741079466683524, 1.9609766687665666, 1.9759198597499303, 1.97409268787929, 1.97371734891619, 1.9735657828194755, 1.9736817223685128, 1.9737096514020647, 1.9736690521240234, 1.973658629826137, 1.9736477306910925], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.10166666656732559, 0.10433333367109299, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.09833333641290665, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1], [2, 4, 3, 6, 4, 7, 6], [5, 6, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 9, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.1164168729298967e+33, 8159892.831786626, 3102417891327.696, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1640470176935196, 0.09998679161071777, 0.09998679161071777, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [821.503662109375, 320693796.5714286, 125271018719524.58, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 2, 4, 0, 0], [42, 59], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 17, 17, 9, 8, 2, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, beta), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [88], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [0, 0, 1, 5, 3, 4], [27, 82], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [331.64767915445816, 4274.878897220892, 18439.657399534408, 48981.32154974574, 101962.96378450668, 186567.0383783516], "accuracy": [0.1018359512090683, 0.09893012791872025, 0.09800554811954498, 0.10474177449941635, 0.09959053993225098, 0.10157178342342377], "val_loss": [819.4990931919643, 5919.853515625, 19454.968191964286, 45558.45647321428, 88365.06026785714, 152006.4107142857], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 2, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 2, 3, 2, 0, 2], [40, 73, 79, 92, 41, 36, 82], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 2, 1, 0, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 6, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, beta), tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 9, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 4, 3, 6, 4, 7, 6], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [0, 37, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 0, 4, 4, 0, 3], [42, 8], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 2, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 1, 5, 1, 3, 3, 4], [42], [0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1], [3, 4, 6], [1, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 7, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 5, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 1, 3, 5, 4, 0, 4], [42, 67], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 5, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 24, 24, 14, 10, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.math.add(grad, tf.math.add(beta, alpha)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 7, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.311795373807541, 2.3363113451186677, 2.368684146036136, 2.4145636143166045, 2.48504321865827, 2.647819970813268, 3.6296138403800184, 7.353156626830304e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.04054946452379227, 0.022718267515301704, 0.015321621671319008, 0.010566635988652706, 0.010566635988652706, 0.03737947344779968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9922750336783273, 2.0181856836591447, 2.052236897604806, 2.102841717856271, 2.191535064152309, 2.4340954508100237, 7.143011093139648, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007000000216066837, 0.004333333112299442, 0.0033333334140479565, 0.004666666500270367, 0.00566666666418314, 0.008999999612569809, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 1, 3, 5, 4], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 5, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.08085714280605316, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302451928372648, 2.301213291831036, 2.301602703658046, 2.3011421581946503, 2.2990735516556344, 2.3008889949805136, 2.3004845074217917, 2.299912109886414, 2.300075567472471, 2.2997077711821077, 2.2996148475802665, 2.2998625504704453, 2.29907905200469, 2.300032443815077, 2.3006343132374765, 2.2999790603490067, 2.2999737594326364, 2.300553184285565, 2.3008702595188883, 2.3004759556865175, 2.3008456121834433, 2.3010886126757457, 2.3012081890877103, 2.30136131799421, 2.301539062808108, 2.3016796593558375, 2.3017812679000045, 2.3009447437377575, 2.30171413677338, 2.3010318339729134, 2.30100165804096, 2.3012984689232097, 2.3016929529787387, 2.301330441670285, 2.300946250268576, 2.301141574539922, 2.3013101005440832, 2.3012989910759583, 2.3016880872998775], "accuracy": [0.09232597798109055, 0.0948355570435524, 0.0940430611371994, 0.09470347315073013, 0.09866596013307571, 0.09509972482919693, 0.09655263274908066, 0.10077928751707077, 0.09932637959718704, 0.10315678268671036, 0.10460969805717468, 0.10130762308835983, 0.09945846349000931, 0.09668471664190292, 0.09853387624025345, 0.10077928751707077, 0.1022322028875351, 0.09470347315073013, 0.09708096832036972, 0.09457138925790787, 0.09430722147226334, 0.09549596905708313, 0.09681680053472519, 0.09800554811954498, 0.09787346422672272, 0.0956280529499054, 0.0948355570435524, 0.09853387624025345, 0.09536388516426086, 0.09945846349000931, 0.0948355570435524, 0.09602430462837219, 0.09126931428909302, 0.09747721254825592, 0.10130762308835983, 0.09866596013307571, 0.09853387624025345, 0.09919429570436478, 0.09430722147226334], "val_loss": [1.9703912053789412, 1.9699700900486536, 1.969712802342006, 1.969616276877267, 1.9696165493556432, 1.969567094530378, 1.9695298331124442, 1.9693734305245536, 1.9692270415169852, 1.9692694119044714, 1.9693104880196708, 1.9695690699986048, 1.96987213407244, 1.970083781651088, 1.9702197483607702, 1.9704039437430245, 1.9705816677638464, 1.9708451543535506, 1.9710111618041992, 1.9711751256670271, 1.9712694713047572, 1.9713900429861886, 1.9714745794023787, 1.9715530531747, 1.971625600542341, 1.97167934690203, 1.9717051642281669, 1.9717488970075334, 1.9717865671430315, 1.9718437194824219, 1.9718642234802246, 1.9718943323407854, 1.97190945489066, 1.9719369070870536, 1.971959454672677, 1.972012656075614, 1.9720376559666224, 1.9720463071550642, 1.972045625959124], "val_accuracy": [0.04466666653752327, 0.050333332270383835, 0.054999999701976776, 0.05833333358168602, 0.05966666713356972, 0.06666667014360428, 0.07366666942834854, 0.07699999958276749, 0.0806666687130928, 0.08433333039283752, 0.08433333039283752, 0.0806666687130928, 0.0806666687130928, 0.0833333358168602, 0.08533333241939545, 0.08733333647251129, 0.08833333104848862, 0.09033333510160446, 0.09099999815225601, 0.08966666460037231, 0.09233333170413971, 0.09200000017881393, 0.09366666525602341, 0.09700000286102295, 0.09733333438634872, 0.09566666930913925, 0.09666666388511658, 0.1003333330154419, 0.0989999994635582, 0.1003333330154419, 0.10300000011920929, 0.10866666585206985, 0.11166666448116302, 0.11599999666213989, 0.11533333361148834, 0.11533333361148834, 0.11233333498239517, 0.1120000034570694, 0.1120000034570694]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 2, 3, 1, 4, 6, 5, 6, 2, 2, 0, 1, 4, 0, 5, 1, 2, 3, 9, 2, 5, 6, 3, 5, 8, 4, 5, 6, 8, 1, 5, 7, 7, 5, 7, 0, 2], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 1, 2, 2, 3, 2, 0, 2, 3, 2, 1, 0, 2, 3, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.08057142794132233, "mapping_values": [1, 61, 61, 37, 24, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, alpha)))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.square(grad), grad))))))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302451928372648, 2.301212653161481, 2.301603387328281, 2.3011441509784443, 2.299071189922947, 2.3008903220754493, 2.3004836842777894, 2.299913697947506, 2.3000753650166463, 2.2997092061653084, 2.29961656579378, 2.2998664005636273, 2.2990836044107965, 2.3000372751687164, 2.3006428200980347, 2.299986726084185, 2.2999797152364416, 2.300562316022608, 2.3008803765157495, 2.3004856859420535, 2.3008547978646186, 2.301098900731875, 2.3012178156432883, 2.3013704772229207, 2.3015464624440933, 2.301689007247302, 2.301790395354267, 2.3009525664557144, 2.301722755804983, 2.301038091649721, 2.301008342704627, 2.3013069439148466, 2.301700353181562, 2.30134036106094, 2.3009598219572607, 2.3011555651222726, 2.301320109463733, 2.30130945428519, 2.3016945653194134], "accuracy": [0.09232597798109055, 0.09496764093637466, 0.0940430611371994, 0.09470347315073013, 0.09866596013307571, 0.0948355570435524, 0.09655263274908066, 0.1006472036242485, 0.09919429570436478, 0.10328886657953262, 0.10474177449941635, 0.10117553919553757, 0.09959053993225098, 0.09668471664190292, 0.09840179979801178, 0.10091137140989304, 0.10210011899471283, 0.09470347315073013, 0.09655263274908066, 0.0948355570435524, 0.09417514503002167, 0.09536388516426086, 0.09681680053472519, 0.09826971590518951, 0.09747721254825592, 0.09576013684272766, 0.0948355570435524, 0.09853387624025345, 0.0952318087220192, 0.09932637959718704, 0.09509972482919693, 0.09602430462837219, 0.09113723784685135, 0.09774138033390045, 0.10130762308835983, 0.09893012791872025, 0.09893012791872025, 0.09919429570436478, 0.0944393053650856], "val_loss": [1.9703912053789412, 1.9699688638959612, 1.969714914049421, 1.9696172305515833, 1.969616481236049, 1.9695679800851005, 1.969531467982701, 1.9693745885576521, 1.9692299706595284, 1.9692713192531042, 1.9693149157932825, 1.9695735658918108, 1.969878877912249, 1.9700925690787179, 1.97022887638637, 1.9704136167253767, 1.9705899783543177, 1.9708553041730608, 1.9710233552115304, 1.9711855479649134, 1.97128084727696, 1.9714001246861048, 1.971484933580671, 1.9715609550476074, 1.9716343198503767, 1.9716901097978865, 1.9717143603733607, 1.9717576163155692, 1.9717940602983748, 1.971851144518171, 1.9718715122767858, 1.9719020298549108, 1.9719172886439733, 1.9719465800694056, 1.971971103123256, 1.9720238958086287, 1.972048282623291, 1.972053119114467, 1.972053119114467], "val_accuracy": [0.04466666653752327, 0.05066666752099991, 0.054999999701976776, 0.05833333358168602, 0.059333331882953644, 0.06666667014360428, 0.07366666942834854, 0.07699999958276749, 0.0806666687130928, 0.08500000089406967, 0.08399999886751175, 0.0806666687130928, 0.08133333176374435, 0.08366666734218597, 0.08566666394472122, 0.08699999749660492, 0.08833333104848862, 0.09099999815225601, 0.09033333510160446, 0.09033333510160446, 0.09333333373069763, 0.09200000017881393, 0.09366666525602341, 0.09666666388511658, 0.09700000286102295, 0.09600000083446503, 0.0963333323597908, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767, 0.10266666859388351, 0.10966666787862778, 0.11100000143051147, 0.11633333563804626, 0.11599999666213989, 0.1146666631102562, 0.1120000034570694, 0.11233333498239517, 0.11233333498239517]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 7, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302725894308487, 2.302102500673424, 2.303032261395357, 2.3030660311150086, 2.300990143094348, 2.3033648092418284], "accuracy": [0.09311848133802414, 0.09338264167308807, 0.09179764986038208, 0.09008057415485382, 0.09549596905708313, 0.09166556596755981], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]