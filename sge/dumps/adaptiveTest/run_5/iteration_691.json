[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7997142672538757, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.249268972925648, 1.7382720780174226, 1.2035817008181617, 0.935927012687535, 0.8347844018313895, 0.7613194686798702, 0.7339570882486992, 0.6834578997880051, 0.6413607624197176, 0.6071090925056323, 0.5839219682047537, 0.5682197696009111, 0.5465365502151279, 0.519219520975019, 0.49243030025659534, 0.48377624359963484, 0.4647099349193601, 0.45451595378259013, 0.43411442525256755, 0.42352312824918514, 0.40925169704754305, 0.39864552993312125, 0.39425064787306036, 0.37823194544061206, 0.36957671556175503, 0.3644650741583006, 0.35341981928802957, 0.3483376809792071, 0.3379254596557096, 0.32854242715554044, 0.3252392010902291, 0.31992596784650124, 0.3040193299363239, 0.30395004287088523, 0.29178918406255117, 0.28072464996718804, 0.2822808880044516, 0.2746639201559521, 0.26500765499445456, 0.26542747411013373, 0.257949836997938, 0.25003793697473065, 0.24278348958086043, 0.23507247008840879], "accuracy": [0.20882314443588257, 0.4414212107658386, 0.5867124795913696, 0.6612072587013245, 0.6991150379180908, 0.71100252866745, 0.724210798740387, 0.7437590956687927, 0.7559106945991516, 0.767930269241333, 0.7738739848136902, 0.7861577272415161, 0.7960638999938965, 0.8076872229576111, 0.8173292875289917, 0.8269713521003723, 0.8317263126373291, 0.8367455005645752, 0.8448025584220886, 0.8438779711723328, 0.8506141901016235, 0.8541803956031799, 0.8551049828529358, 0.8661999702453613, 0.8691058158874512, 0.8640866279602051, 0.8673887252807617, 0.8712190985679626, 0.8746532797813416, 0.8809932470321655, 0.8812574148178101, 0.8841632604598999, 0.8868049383163452, 0.8862766027450562, 0.8926165699958801, 0.8969752788543701, 0.8947299122810364, 0.8994848728179932, 0.9046360850334167, 0.8981640338897705, 0.9013340473175049, 0.9052965044975281, 0.9122969508171082, 0.9124290347099304], "val_loss": [1.7696238926478796, 0.8708095380238124, 0.7035288470132011, 0.6158538205283028, 0.5806206805365426, 0.5666504757744926, 0.530156169618879, 0.4991117204938616, 0.4717249700001308, 0.45113350663866314, 0.4382838521684919, 0.4178540451186044, 0.40413314955575125, 0.3880363277026585, 0.3825433679989406, 0.36902298246111187, 0.36202050958360943, 0.35210273947034565, 0.35321163279669626, 0.3466230716024126, 0.34369280508586336, 0.3314455321856907, 0.33062111479895456, 0.32865675006593975, 0.3386082053184509, 0.327558023588998, 0.32438671588897705, 0.31494620868137907, 0.31846578632082256, 0.3117670331682478, 0.31530398981911795, 0.3087663565363203, 0.3084700618471418, 0.30787731068474905, 0.3135634660720825, 0.3077161823000227, 0.3107719251087734, 0.30485877820423674, 0.307239294052124, 0.3062672104154314, 0.305668762751988, 0.3072225706917899, 0.3086411612374442, 0.30869174855096], "val_accuracy": [0.4713333249092102, 0.6673333048820496, 0.703000009059906, 0.7213333249092102, 0.734666645526886, 0.7350000143051147, 0.7583333253860474, 0.7760000228881836, 0.7860000133514404, 0.7926666736602783, 0.8056666851043701, 0.8159999847412109, 0.8220000267028809, 0.8356666564941406, 0.8370000123977661, 0.843999981880188, 0.8433333039283752, 0.8516666889190674, 0.847000002861023, 0.8550000190734863, 0.8583333492279053, 0.8633333444595337, 0.862333357334137, 0.8673333525657654, 0.8603333234786987, 0.862666666507721, 0.8619999885559082, 0.8686666488647461, 0.8703333139419556, 0.874666690826416, 0.8703333139419556, 0.8743333220481873, 0.8763333559036255, 0.8769999742507935, 0.8713333606719971, 0.8776666522026062, 0.8790000081062317, 0.8803333044052124, 0.8809999823570251, 0.8790000081062317, 0.8809999823570251, 0.878000020980835, 0.8806666731834412, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 7, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [90, 15, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.798285722732544, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.249268972925648, 1.7382709513313939, 1.203579463931658, 0.935892647740202, 0.8350188054302822, 0.761322809090751, 0.7338150031042924, 0.6841164866946771, 0.6412318908086526, 0.6074057318956121, 0.5833366453812941, 0.5686050119527248, 0.5464694687459195, 0.519001320667743, 0.4926977411567921, 0.4847509537343383, 0.46480332146687925, 0.4567271435123787, 0.43581708035984246, 0.4250784007833146, 0.41295016211856234, 0.4007696438703271, 0.39852207208652823, 0.38202726635887574, 0.3724388566747428, 0.3679807626883021, 0.3569887006256039, 0.3531326559737468, 0.342005061376616, 0.33437388199289886, 0.32931146137450806, 0.3254077802040101, 0.31159130004513236, 0.31080112302103347, 0.29918920622210793, 0.2864700768562655, 0.28363972887339733, 0.2772778032667145, 0.27011628738877447, 0.267453418557733, 0.25845921075599165], "accuracy": [0.20882314443588257, 0.4414212107658386, 0.5868445634841919, 0.6605468392372131, 0.6992471218109131, 0.7117950320243835, 0.724210798740387, 0.7432307600975037, 0.7555144429206848, 0.7664773464202881, 0.7757231593132019, 0.7882710099220276, 0.7942147850990295, 0.8086118102073669, 0.8158763647079468, 0.8257825970649719, 0.8298771381378174, 0.8352925777435303, 0.8459912538528442, 0.8430854678153992, 0.8520671129226685, 0.854708731174469, 0.8555012345314026, 0.8619733452796936, 0.8673887252807617, 0.8656716346740723, 0.8652753829956055, 0.871879518032074, 0.8742570281028748, 0.8812574148178101, 0.8798044919967651, 0.8784837126731873, 0.8864086866378784, 0.8849557638168335, 0.8901069760322571, 0.8956544995307922, 0.8919561505317688, 0.9001452922821045, 0.9008057117462158, 0.8990886211395264, 0.9025228023529053], "val_loss": [1.7696238926478796, 0.8707996606826782, 0.7034953832626343, 0.6158095257622855, 0.580279929297311, 0.5667154959269932, 0.5300964117050171, 0.4993185145514352, 0.47162301199776785, 0.4512291465486799, 0.4371623822620937, 0.4173945529120309, 0.4038147159985134, 0.3866387520517622, 0.38302591017314364, 0.3709202664239066, 0.3639915755816868, 0.35289753334862844, 0.3540274841444833, 0.3468185237475804, 0.34326341322490145, 0.33402871234076364, 0.3329227992466518, 0.3293376479830061, 0.33731417996542795, 0.32766114813940866, 0.3269011804035732, 0.3164708273751395, 0.3200012190001352, 0.3110495124544416, 0.31440627574920654, 0.30775173221315655, 0.3092320902006967, 0.31064661911555697, 0.31356332131794523, 0.3072954671723502, 0.3129110506602696, 0.3078402025359018, 0.30452787024634226, 0.3069835475512913, 0.3097059300967625], "val_accuracy": [0.4713333249092102, 0.6673333048820496, 0.703000009059906, 0.7210000157356262, 0.734666645526886, 0.7363333106040955, 0.7583333253860474, 0.7760000228881836, 0.7866666913032532, 0.7923333048820496, 0.8066666722297668, 0.8146666884422302, 0.8209999799728394, 0.8360000252723694, 0.8323333263397217, 0.8433333039283752, 0.8416666388511658, 0.8489999771118164, 0.8479999899864197, 0.8529999852180481, 0.8566666841506958, 0.8629999756813049, 0.8603333234786987, 0.8666666746139526, 0.859000027179718, 0.8633333444595337, 0.8600000143051147, 0.8656666874885559, 0.8696666955947876, 0.8733333349227905, 0.8693333268165588, 0.875333309173584, 0.8723333477973938, 0.8726666569709778, 0.8726666569709778, 0.8803333044052124, 0.878000020980835, 0.8799999952316284, 0.8790000081062317, 0.8773333430290222, 0.8803333044052124]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [33, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [36, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7822856903076172, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.273999179847142, 2.179499667822299, 1.983295137305002, 1.662430801144082, 1.3812205205740253, 1.2044819030842335, 1.0945417418251295, 1.0123419399668339, 0.9780875889144286, 0.9211628630082243, 0.8992894516172599, 0.8611905962059511, 0.8473282039850427, 0.824129692473038, 0.8089917740565501, 0.7878444087094383, 0.7781376167925168, 0.7645839042651608, 0.7544224303097159, 0.7502865693619883, 0.7335455954082732, 0.7270433138846847, 0.7143993699917499, 0.713388122375127, 0.6959294296290345, 0.7054695449311893, 0.6902752412529103, 0.6865118018482749, 0.6742966334109041, 0.6646637664872894, 0.6721115233545149, 0.6673049064297261, 0.6590061062488574, 0.6524569108076477, 0.6531572646437194, 0.6485529585584374], "accuracy": [0.16417910158634186, 0.3197728097438812, 0.40589091181755066, 0.4835556745529175, 0.5328226089477539, 0.5848633050918579, 0.6100911498069763, 0.637432336807251, 0.648659348487854, 0.6716417670249939, 0.6720380187034607, 0.6890767216682434, 0.6948884129524231, 0.7038700580596924, 0.7063795924186707, 0.71100252866745, 0.7176066637039185, 0.7275128960609436, 0.726192057132721, 0.7255316376686096, 0.7313432693481445, 0.7323999404907227, 0.7375511527061462, 0.735569953918457, 0.7407211661338806, 0.7434949278831482, 0.7497028112411499, 0.7473253011703491, 0.7563069462776184, 0.7555144429206848, 0.7528728246688843, 0.7572315335273743, 0.7561748623847961, 0.7543256878852844, 0.76106196641922, 0.7614582180976868], "val_loss": [1.9002480506896973, 1.76727751323155, 1.4916483334132604, 1.150430509022304, 0.9302475452423096, 0.8211566890989032, 0.7470202956880841, 0.6927497046334403, 0.6716067790985107, 0.6428497859409877, 0.6251945495605469, 0.6155551161084857, 0.5896139315196446, 0.588079571723938, 0.5746970346995762, 0.5652141571044922, 0.5503320012773786, 0.5459831782749721, 0.5394922835486275, 0.5370417663029262, 0.524679286139352, 0.5236180339540754, 0.5308283737727574, 0.5146507535661969, 0.5101875237056187, 0.5030715295246669, 0.5173585414886475, 0.5007187128067017, 0.4902675322123936, 0.4954127754483904, 0.4820554256439209, 0.48278469698769705, 0.4858031613486154, 0.4788736275264195, 0.4818274463926043, 0.4731194291796003], "val_accuracy": [0.41366666555404663, 0.5133333206176758, 0.5606666803359985, 0.652999997138977, 0.6856666803359985, 0.6919999718666077, 0.70333331823349, 0.7210000157356262, 0.7089999914169312, 0.7289999723434448, 0.7366666793823242, 0.7213333249092102, 0.7486666440963745, 0.7386666536331177, 0.7406666874885559, 0.7590000033378601, 0.7649999856948853, 0.7649999856948853, 0.7639999985694885, 0.765666663646698, 0.7726666927337646, 0.7733333110809326, 0.7673333287239075, 0.7803333401679993, 0.7723333239555359, 0.7793333530426025, 0.7753333449363708, 0.7803333401679993, 0.7853333353996277, 0.7793333530426025, 0.7956666946411133, 0.7906666398048401, 0.7833333611488342, 0.7913333177566528, 0.7906666398048401, 0.7893333435058594]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7771428823471069, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.249268972925648, 1.7382717133040724, 1.2036166347454031, 0.9353550842189046, 0.8352829114541465, 0.7609804413337844, 0.7346890451350405, 0.6836716871235774, 0.6409700881252357, 0.6079684790524478, 0.5844367508009015, 0.5676490947507739, 0.5462530597388988, 0.5196317034453575, 0.49382856152848387, 0.48521958265353693, 0.4644244184166197, 0.45769935117311417, 0.43522739002985206, 0.42449243642461615, 0.4106121914001929, 0.40247184992340407, 0.3947725433360757, 0.37809097771599876, 0.370543987731955, 0.3644796188843485, 0.35696655227649543, 0.35310923704822633], "accuracy": [0.20882314443588257, 0.4414212107658386, 0.5865803956985474, 0.6613393425941467, 0.700171709060669, 0.7094175219535828, 0.7244749665260315, 0.7420420050621033, 0.7540615797042847, 0.7658169269561768, 0.7744023203849792, 0.7872143983840942, 0.7951393723487854, 0.8063663840293884, 0.8175934553146362, 0.8260467648506165, 0.8314621448516846, 0.8378021121025085, 0.8453308939933777, 0.8457271456718445, 0.850350022315979, 0.8511425256729126, 0.8551049828529358, 0.8642187118530273, 0.8701624870300293, 0.8676528930664062, 0.8676528930664062, 0.8732003569602966], "val_loss": [1.7696238926478796, 0.8708092485155378, 0.7034291710172381, 0.6150165966578892, 0.5805205617632184, 0.5675417866025653, 0.531250034059797, 0.49916441099984304, 0.4709007058824812, 0.449817419052124, 0.43710906164986746, 0.41668885946273804, 0.4027884432247707, 0.38709819316864014, 0.3830549546650478, 0.3702478323663984, 0.3619423338345119, 0.35298034123011995, 0.3542991280555725, 0.3490577254976545, 0.34280541964939665, 0.33320818628583637, 0.32761774744306293, 0.3303092632974897, 0.33673833097730366, 0.33228605134146555, 0.32747387886047363, 0.3157849482127598], "val_accuracy": [0.4713333249092102, 0.6676666736602783, 0.703000009059906, 0.7223333120346069, 0.7350000143051147, 0.7310000061988831, 0.7553333044052124, 0.7773333191871643, 0.7893333435058594, 0.7953333258628845, 0.8073333501815796, 0.8163333535194397, 0.8253333568572998, 0.8366666436195374, 0.8343333601951599, 0.8416666388511658, 0.8426666855812073, 0.8516666889190674, 0.8456666469573975, 0.8536666631698608, 0.8583333492279053, 0.862333357334137, 0.8653333187103271, 0.8640000224113464, 0.859666645526886, 0.8603333234786987, 0.8619999885559082, 0.8643333315849304]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 3, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 0, 0, 3], [90, 15, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7005714178085327, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303043672043681, 2.3006319422779176, 2.2994443375468174, 2.2951493643026435, 2.289789878051389, 2.2818073836205546, 2.27422056640884, 2.2638851945678304, 2.256040298612819, 2.243290182936697, 2.2308175920290703, 2.2149352422086177, 2.2011650587668146, 2.1819552043488533, 2.1605517229997973, 2.135882559359239, 2.108174606699119, 2.078305933658457, 2.0369088200057863, 1.9963891412194348, 1.947285315899439, 1.8910772790840793, 1.829656203629838, 1.7698881713516756, 1.6942149697514006, 1.6359164304800038, 1.5794853774107143, 1.5229313911904812, 1.4692205978091746, 1.458853502110436, 1.427927990457905, 1.3881558449890918, 1.3960165396153636, 1.3897421373084646, 1.384982720546876, 1.3928307301931062, 1.3993638951182286, 1.4048582768758306, 1.3681280217733145, 1.3144227620428264, 1.264669821577585, 1.199477301155965, 1.172337011591224, 1.1398980349062173, 1.1111683869295745, 1.0566382504347183, 1.018120063105437, 0.9731767271739963, 0.9401677455081443, 0.9265136921001133, 0.9143524941373353, 0.9231826272371061, 0.9160907292614807, 0.9144119833123808], "accuracy": [0.09298639744520187, 0.09140139818191528, 0.09919429570436478, 0.11200633645057678, 0.12429005652666092, 0.14449875056743622, 0.16193369030952454, 0.1966715157032013, 0.22031435370445251, 0.24858011305332184, 0.2771100103855133, 0.30339452624320984, 0.3175274133682251, 0.33284902572631836, 0.3533218801021576, 0.35886937379837036, 0.3835688829421997, 0.3774930536746979, 0.3863426148891449, 0.4007396697998047, 0.4091929793357849, 0.41262713074684143, 0.4233258366584778, 0.4279487431049347, 0.4525161683559418, 0.4465724527835846, 0.459780752658844, 0.47510236501693726, 0.4909523129463196, 0.4888390004634857, 0.5050851702690125, 0.5144630670547485, 0.5196143388748169, 0.527010977268219, 0.5297846794128418, 0.5352001190185547, 0.5423325896263123, 0.5477479696273804, 0.5542200207710266, 0.5649187564849854, 0.5819574594497681, 0.5982036590576172, 0.6112799048423767, 0.6240919232368469, 0.6275261044502258, 0.6333377361297607, 0.6412627100944519, 0.6452252268791199, 0.6560559868812561, 0.6542068123817444, 0.6514331102371216, 0.6490556001663208, 0.6477347612380981, 0.657508909702301], "val_loss": [1.9702621868678503, 1.9682294981820243, 1.9649105072021484, 1.9603370257786341, 1.9545775141034807, 1.9476936204092843, 1.9397271020071847, 1.9307082039969308, 1.9206741877964564, 1.9096112932477678, 1.8973522186279297, 1.8836428097316198, 1.868053708757673, 1.8500999041966029, 1.829174382346017, 1.8047071184430803, 1.776061943599156, 1.7425092969621931, 1.7033227171216692, 1.6578616414751326, 1.605609314782279, 1.5466063703809465, 1.481210470199585, 1.4105919088636125, 1.3364808900015694, 1.2615576812199183, 1.188553844179426, 1.119852100099836, 1.0567902496882848, 1.0000911780766077, 0.949772664478847, 0.9056787150246757, 0.8670463562011719, 0.8346679551260812, 0.8112685510090419, 0.7988024950027466, 0.7920440776007516, 0.7800942659378052, 0.7606478248323713, 0.74276145866939, 0.7348350286483765, 0.7354168891906738, 0.7364493608474731, 0.7313400677272252, 0.71711836542402, 0.6970996345792498, 0.6772658143724714, 0.6641406842640468, 0.6605809756687709, 0.663680877004351, 0.6690522602626255, 0.6742442675999233, 0.6787670510155814, 0.6830772161483765], "val_accuracy": [0.04333333298563957, 0.054666668176651, 0.07733333110809326, 0.11500000208616257, 0.18000000715255737, 0.2473333328962326, 0.31066668033599854, 0.3476666808128357, 0.36399999260902405, 0.38366666436195374, 0.39633333683013916, 0.406333327293396, 0.41600000858306885, 0.42633333802223206, 0.43566668033599854, 0.44699999690055847, 0.4569999873638153, 0.46666666865348816, 0.47999998927116394, 0.49533334374427795, 0.5086666941642761, 0.5220000147819519, 0.5363333225250244, 0.5523333549499512, 0.5669999718666077, 0.5789999961853027, 0.593666672706604, 0.609333336353302, 0.6263333559036255, 0.6416666507720947, 0.6570000052452087, 0.6673333048820496, 0.6743333339691162, 0.6809999942779541, 0.6819999814033508, 0.6783333420753479, 0.6669999957084656, 0.6713333129882812, 0.6869999766349792, 0.6933333277702332, 0.6973333358764648, 0.7016666531562805, 0.7059999704360962, 0.7043333053588867, 0.7046666741371155, 0.7086666822433472, 0.7120000123977661, 0.7183333039283752, 0.7250000238418579, 0.7213333249092102, 0.715666651725769, 0.7146666646003723, 0.7086666822433472, 0.7133333086967468]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 8, 4, 5, 4, 1, 3, 5, 2, 6, 1, 9, 4, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 0, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 3, 1, 0, 3, 3, 3, 0, 1, 3, 2, 0, 4, 5, 2, 0, 1, 2, 2, 3, 0, 2], [3, 15, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7005714178085327, "mapping_values": [1, 3, 3, 2, 1, 1, 26, 26, 15, 11, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha))))), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303043672043681, 2.3006319422779176, 2.2994443375468174, 2.2951493957936724, 2.289789878051389, 2.2818074151115835, 2.274220647372275, 2.2638851945678304, 2.256040298612819, 2.243290214427726, 2.2308175605380414, 2.2149352422086177, 2.2011651217488724, 2.1819552853122883, 2.160551898436319, 2.1358827347957603, 2.108174849589424, 2.078306172077036, 2.0369092023698583, 1.9963896113017672, 1.9472859906734588, 1.8910780798222142, 1.829657166294843, 1.769889190291149, 1.694216195571188, 1.635917744018052, 1.5794865043329258, 1.522932619293368, 1.4692219249041105, 1.458855011302246, 1.4279291802677008, 1.3881560092462981, 1.3960160494102636, 1.389739667545803, 1.384981760212207, 1.3928294929578209, 1.3993617043975732, 1.4048581621382672, 1.368131109893818, 1.3144260590433239, 1.264675363573526, 1.1994800432058075, 1.17233735827596, 1.1398988465874849, 1.1111692830382904, 1.0566418586295625, 1.0181193491801956, 0.9731812465460136, 0.9401714555292302, 0.9265173892728593, 0.9143484767716811, 0.923177075541928, 0.9160899212410453, 0.9144089182669287], "accuracy": [0.09298639744520187, 0.09140139818191528, 0.09919429570436478, 0.11200633645057678, 0.12429005652666092, 0.14449875056743622, 0.16193369030952454, 0.1966715157032013, 0.22031435370445251, 0.24858011305332184, 0.2771100103855133, 0.30339452624320984, 0.3175274133682251, 0.33284902572631836, 0.3533218801021576, 0.3587372899055481, 0.3835688829421997, 0.3774930536746979, 0.3863426148891449, 0.4007396697998047, 0.4093250632286072, 0.41262713074684143, 0.4233258366584778, 0.4279487431049347, 0.4525161683559418, 0.4465724527835846, 0.459780752658844, 0.47510236501693726, 0.4909523129463196, 0.4888390004634857, 0.5050851702690125, 0.5144630670547485, 0.5196143388748169, 0.527010977268219, 0.5297846794128418, 0.5350680351257324, 0.5423325896263123, 0.5478800535202026, 0.5542200207710266, 0.5649187564849854, 0.5819574594497681, 0.5982036590576172, 0.6112799048423767, 0.6239598393440247, 0.6275261044502258, 0.6333377361297607, 0.6412627100944519, 0.6450931429862976, 0.6560559868812561, 0.6540747880935669, 0.6514331102371216, 0.6489235162734985, 0.6477347612380981, 0.6573768258094788], "val_loss": [1.9702623231070382, 1.9682294981820243, 1.9649104390825545, 1.9603370257786341, 1.9545775141034807, 1.9476936885288783, 1.9397270338875907, 1.930708340236119, 1.9206741877964564, 1.9096112932477678, 1.8973522186279297, 1.8836428097316198, 1.868053708757673, 1.850099972316197, 1.8291744504656111, 1.8047072546822684, 1.7760621479579382, 1.7425095694405692, 1.7033230917794364, 1.6578621183122908, 1.605609961918422, 1.546607255935669, 1.4812113557543074, 1.410593066896711, 1.336482150214059, 1.261559213910784, 1.1885555812290736, 1.119854143687657, 1.0567925657544817, 1.000093834740775, 0.9497750146048409, 0.9056801114763532, 0.8670468500682286, 0.8346678359167916, 0.8112680741718837, 0.7988020351954869, 0.7920437710625785, 0.7800941637584141, 0.760648216520037, 0.7427619865962437, 0.7348346710205078, 0.7354136194501605, 0.7364444562367031, 0.7313343627112252, 0.7171121665409633, 0.6970947129385812, 0.6772633961268834, 0.6641395943505424, 0.6605777570179531, 0.6636735200881958, 0.6690444775990078, 0.6742375237601144, 0.6787676811218262, 0.6830842835562569], "val_accuracy": [0.04333333298563957, 0.054666668176651, 0.07733333110809326, 0.11500000208616257, 0.18000000715255737, 0.2473333328962326, 0.31066668033599854, 0.3476666808128357, 0.36399999260902405, 0.38366666436195374, 0.39633333683013916, 0.406333327293396, 0.41600000858306885, 0.42633333802223206, 0.43566668033599854, 0.44699999690055847, 0.4569999873638153, 0.46666666865348816, 0.47999998927116394, 0.49533334374427795, 0.5086666941642761, 0.5220000147819519, 0.5363333225250244, 0.5523333549499512, 0.5669999718666077, 0.5789999961853027, 0.593666672706604, 0.609333336353302, 0.6263333559036255, 0.6416666507720947, 0.6570000052452087, 0.6673333048820496, 0.6743333339691162, 0.6809999942779541, 0.6819999814033508, 0.6783333420753479, 0.6669999957084656, 0.6713333129882812, 0.6869999766349792, 0.6933333277702332, 0.6973333358764648, 0.7016666531562805, 0.7059999704360962, 0.7043333053588867, 0.7046666741371155, 0.7086666822433472, 0.7120000123977661, 0.7183333039283752, 0.7250000238418579, 0.7213333249092102, 0.715666651725769, 0.7143333554267883, 0.7086666822433472, 0.7133333086967468]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.18885713815689087, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.509860463571303, 2.3805223869499574, 2.2887401073175164, 2.3023579969004304, 2.2671897593994403, 2.277810039080649, 2.382694446336733, 2.305528434890215, 2.302787216883357], "accuracy": [0.24356095492839813, 0.10130762308835983, 0.15968827903270721, 0.10672302544116974, 0.2044644057750702, 0.13736626505851746, 0.16417910158634186, 0.09932637959718704, 0.10645885765552521], "val_loss": [2.398773806435721, 1.9651923860822404, 1.9759268079485213, 1.9624884469168526, 1.974743161882673, 1.90474762235369, 1.9787163734436035, 1.9745849881853377, 1.9730586324419295], "val_accuracy": [0.10000000149011612, 0.1679999977350235, 0.0989999994635582, 0.312333345413208, 0.10066666454076767, 0.18566666543483734, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 8, 1, 4, 5, 4, 9, 3, 8, 2, 6, 1, 2, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 76, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.16571427881717682, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031784692350366, 2.3019468748432503, 2.3033850097290953, 2.3030345599570405, 2.302797902608198, 2.3012606102509223, 2.301477376700802, 2.300118612969131, 2.3019140473981623, 2.3012200107254515, 2.3005514450675353, 2.2990541046542137, 2.3015651650920663, 2.299357713158451, 2.2991836636908194, 2.2994272176379527, 2.2993541344549553, 2.2999628302821424, 2.2984100408431893, 2.2992156332258094, 2.2993945344847586, 2.2990139089696964, 2.297086304771807, 2.2982750356850796, 2.2959037179472013, 2.2971645225040698, 2.29748087832484, 2.296972407672415, 2.2965921044995237, 2.2985758902043747, 2.2979756237383233, 2.2973089040530246, 2.298611630128753, 2.298052403432755, 2.298367240756116, 2.296602148752108, 2.2965086824968584, 2.2964748719963244, 2.297063767839149, 2.2942807276991175, 2.2958152492237507, 2.296818094419813, 2.2945096836019547, 2.2944120469897604, 2.295483227182987, 2.295878580233456, 2.2937272793234866, 2.2933859931573957, 2.293429871906678, 2.294908783045648, 2.29338496176322, 2.2933006039416517, 2.2915907328737535, 2.293766611146102, 2.2943407627317836, 2.2932291504193953, 2.2926942858445947, 2.2925817422611114, 2.2913868857129156, 2.2925346309892127, 2.2927472516136587, 2.2920217795567885, 2.293212240272273, 2.2916229500227034, 2.292407360027778, 2.289466275074195, 2.2922917822521787, 2.2911265127851883, 2.288738545079068, 2.2910971301122505, 2.290005329750816, 2.2903181693777825, 2.2903368646883457, 2.2907252790055272, 2.289486130986625, 2.289624512329424, 2.290161845643428, 2.2900140878782924, 2.28767032721543, 2.2887055672958088, 2.2889755972309387, 2.2875262491140287, 2.2886435492730586, 2.2894172020056747, 2.2875681078712686, 2.2884377184608247, 2.288092668109078, 2.2871772866632645, 2.2881045335823313, 2.2865574125915455, 2.2874153104078467, 2.2868286684409362, 2.285339995051545, 2.287582167387481, 2.286291819364482, 2.2857454192479367, 2.285723184660646, 2.286758903467644, 2.284546284549004, 2.2852887200673084], "accuracy": [0.09272222965955734, 0.08902391046285629, 0.09008057415485382, 0.09113723784685135, 0.09140139818191528, 0.09576013684272766, 0.08955223858356476, 0.09311848133802414, 0.09430722147226334, 0.09166556596755981, 0.09840179979801178, 0.09721305221319199, 0.09034473448991776, 0.09245806187391281, 0.10130762308835983, 0.09668471664190292, 0.09655263274908066, 0.09338264167308807, 0.09866596013307571, 0.09391097724437714, 0.09840179979801178, 0.09549596905708313, 0.10381719470024109, 0.09536388516426086, 0.11253467202186584, 0.09906221181154251, 0.10500594228506088, 0.10276053100824356, 0.1002509593963623, 0.10130762308835983, 0.10196803510189056, 0.10527011007070541, 0.10540219396352768, 0.10500594228506088, 0.10355303436517715, 0.10738343745470047, 0.10870426893234253, 0.10210011899471283, 0.1072513535618782, 0.10962884873151779, 0.10896842926740646, 0.10276053100824356, 0.10830801725387573, 0.10751552134752274, 0.10698718577623367, 0.10751552134752274, 0.11979923397302628, 0.11108175665140152, 0.10593052208423615, 0.10566636174917221, 0.11940298229455948, 0.11636507511138916, 0.11728965491056442, 0.11200633645057678, 0.10487385839223862, 0.11187426000833511, 0.11702549457550049, 0.11174217611551285, 0.11332716792821884, 0.11161009222269058, 0.11227050423622131, 0.11293092370033264, 0.11610091477632523, 0.11940298229455948, 0.11411966383457184, 0.12178047746419907, 0.11398758739233017, 0.11795007437467575, 0.1216483935713768, 0.11874257028102875, 0.1274600476026535, 0.12059172987937927, 0.1266675442457199, 0.12323339283466339, 0.12455421686172485, 0.12732796370983124, 0.12217672914266586, 0.12191256135702133, 0.12653546035289764, 0.12442214041948318, 0.12178047746419907, 0.13010171055793762, 0.1212521493434906, 0.12072381377220154, 0.1278562992811203, 0.12217672914266586, 0.1282525360584259, 0.12812046706676483, 0.12917712330818176, 0.13617752492427826, 0.12759213149547577, 0.13274335861206055, 0.13274335861206055, 0.1328754425048828, 0.13551710546016693, 0.13234710693359375, 0.13591335713863373, 0.13895125687122345, 0.13168670237064362, 0.13432836532592773], "val_loss": [1.9708433151245117, 1.9706809861319405, 1.970514910561698, 1.9703501973833357, 1.9701873234340124, 1.970024585723877, 1.969860213143485, 1.9696954999651228, 1.9695323535374232, 1.9693664823259627, 1.9692028590611048, 1.9690397807529993, 1.968874726976667, 1.9687132835388184, 1.9685506139482771, 1.9683869906834193, 1.9682231630597795, 1.9680609021868025, 1.967897823878697, 1.9677338600158691, 1.9675711223057337, 1.9674070903233118, 1.9672461237226213, 1.9670839990888322, 1.9669211932591029, 1.9667590005057198, 1.9665988513401575, 1.966437544141497, 1.966275419507708, 1.9661140441894531, 1.9659528732299805, 1.9657888412475586, 1.96562773840768, 1.9654652050563268, 1.9653028079441615, 1.9651404108319963, 1.9649779456002372, 1.9648161615644182, 1.9646565573556083, 1.9644947052001953, 1.9643337385995048, 1.9641727719988142, 1.9640112604413713, 1.9638479096548898, 1.963686466217041, 1.963524341583252, 1.9633631025041853, 1.9632011141095842, 1.963040828704834, 1.9628793171473913, 1.962719099862235, 1.9625590869358607, 1.9623968941824776, 1.9622365406581335, 1.9620743479047502, 1.9619150161743164, 1.9617526871817452, 1.961592469896589, 1.9614304133823939, 1.9612696511404855, 1.9611104556492396, 1.960951805114746, 1.960792405264718, 1.960632051740374, 1.9604717663356237, 1.9603119577680315, 1.9601520129612513, 1.9599909101213728, 1.9598287854875838, 1.9596692493983678, 1.9595089639936174, 1.9593477930341447, 1.959188665662493, 1.9590276990618025, 1.9588687079293388, 1.9587095124380929, 1.9585495676313127, 1.958390372140067, 1.9582312447684151, 1.9580731391906738, 1.957913943699428, 1.9577538626534599, 1.957594394683838, 1.9574337686811174, 1.9572714396885462, 1.9571121760777064, 1.9569518906729562, 1.9567922864641463, 1.9566311155046736, 1.9564712388174874, 1.9563098634992326, 1.9561499186924525, 1.9559882708958216, 1.955829416002546, 1.9556688581194197, 1.9555087089538574, 1.9553477423531669, 1.9551872525896346, 1.955026285988944, 1.9548632758004325], "val_accuracy": [0.03799999877810478, 0.03933333232998848, 0.04066666588187218, 0.0416666679084301, 0.04333333298563957, 0.04500000178813934, 0.04600000008940697, 0.046666666865348816, 0.047333333641290665, 0.04866666719317436, 0.05066666752099991, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05366666615009308, 0.05366666615009308, 0.054666668176651, 0.055666666477918625, 0.05666666850447655, 0.05833333358168602, 0.05900000035762787, 0.05999999865889549, 0.061000000685453415, 0.06133333221077919, 0.06300000101327896, 0.06400000303983688, 0.06533333659172058, 0.06733333319425583, 0.0676666647195816, 0.06966666877269745, 0.070333331823349, 0.07133333384990692, 0.0716666653752327, 0.07199999690055847, 0.07400000095367432, 0.07566666603088379, 0.07699999958276749, 0.07766667008399963, 0.07966666668653488, 0.0806666687130928, 0.08233333379030228, 0.08399999886751175, 0.08633333444595337, 0.08766666799783707, 0.08833333104848862, 0.08966666460037231, 0.09099999815225601, 0.09333333373069763, 0.09366666525602341, 0.0949999988079071, 0.09600000083446503, 0.09700000286102295, 0.0963333323597908, 0.09966666996479034, 0.10100000351667404, 0.10199999809265137, 0.10266666859388351, 0.10333333164453506, 0.10400000214576721, 0.10566666722297668, 0.10566666722297668, 0.10966666787862778, 0.11100000143051147, 0.11233333498239517, 0.11400000005960464, 0.1146666631102562, 0.11599999666213989, 0.11666666716337204, 0.11800000071525574, 0.11966666579246521, 0.12166666984558105, 0.1223333328962326, 0.1236666664481163, 0.12533333897590637, 0.12833333015441895, 0.12933333218097687, 0.1316666603088379, 0.13199999928474426, 0.13333334028720856, 0.1353333294391632, 0.1379999965429306, 0.13899999856948853, 0.140666663646698, 0.14133332669734955, 0.14266666769981384, 0.1456666737794876, 0.1483333259820938, 0.15033333003520966, 0.15299999713897705, 0.15533334016799927, 0.15700000524520874, 0.15833333134651184, 0.16200000047683716, 0.1626666635274887, 0.16500000655651093, 0.16599999368190765, 0.1679999977350235, 0.16866666078567505, 0.17100000381469727, 0.1733333319425583]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 4, 4, 0, 3, 4, 2, 9, 5, 9, 2, 4, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 3, 3, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [15, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.16571427881717682, "mapping_values": [1, 3, 3, 2, 1, 1, 26, 26, 16, 10, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(beta, beta)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031784377440077, 2.3019469872977143, 2.303385266129052, 2.3030349558307637, 2.302798253481241, 2.3012610061246455, 2.3014778085372796, 2.300119107787667, 2.301914668180813, 2.301220631508102, 2.300552110850866, 2.299054774909271, 2.3015659613112387, 2.2993583474507533, 2.299184540873427, 2.299428009385399, 2.2993549756748077, 2.2999637254461276, 2.298410972064402, 2.2992165733904746, 2.2993956006135385, 2.2990150875529403, 2.297087312390256, 2.298275998397321, 2.2959046401304892, 2.2971654626687346, 2.297482088399113, 2.296973631256339, 2.296593517029621, 2.2985774557178895, 2.2979771576663364, 2.297310321054848, 2.2986133890601668, 2.2980543648199934, 2.298368941177199, 2.2966037772476806, 2.2965103154641575, 2.296476478038793, 2.2970653422961163, 2.2942821357574887, 2.2958169316634556, 2.2968199613339646, 2.294511177095487, 2.2944134504819322, 2.2954846352413583, 2.2958805190731173, 2.293728691853584, 2.2933875496329854, 2.293431306889879, 2.2949107939052924, 2.2933864327091755, 2.2933017689207715, 2.291591924872176, 2.2937681270927377, 2.2943421706956815, 2.2932305943460483, 2.2926957073181438, 2.292582772427137, 2.2913879517472227, 2.292535971404854, 2.292748160192822, 2.2920227647221334, 2.293213148945909, 2.291624092643193, 2.2924085835172296, 2.289466778930656, 2.292293289349835, 2.291127479874683, 2.2887393637513442, 2.291097804744561, 2.2900059549107197, 2.290318772179056, 2.2903378182681893, 2.290726367681884, 2.2894865043127717, 2.289625020657611, 2.290162925376333, 2.290014974004352, 2.287670250723721, 2.288705936244702, 2.2889760154632923, 2.287526653931204, 2.288643769615787, 2.289417728220766, 2.287568355422246, 2.288438037748366, 2.2880931629276136, 2.2871763375551475, 2.2881044976195763, 2.2865565263710126, 2.287414374714908, 2.286828002752078, 2.2853388884882837, 2.287581362413803, 2.2862910546363384, 2.2857433859351888, 2.2857221815139233, 2.2867580533043395, 2.2845437835314963, 2.2852863898256497], "accuracy": [0.09272222965955734, 0.08902391046285629, 0.09008057415485382, 0.09113723784685135, 0.09140139818191528, 0.09576013684272766, 0.08955223858356476, 0.09311848133802414, 0.09430722147226334, 0.09166556596755981, 0.09840179979801178, 0.09721305221319199, 0.09034473448991776, 0.09245806187391281, 0.10130762308835983, 0.09668471664190292, 0.09655263274908066, 0.09338264167308807, 0.09866596013307571, 0.09391097724437714, 0.09840179979801178, 0.09549596905708313, 0.10394927859306335, 0.09536388516426086, 0.11253467202186584, 0.09906221181154251, 0.10500594228506088, 0.10276053100824356, 0.1002509593963623, 0.10130762308835983, 0.10196803510189056, 0.10500594228506088, 0.10540219396352768, 0.10500594228506088, 0.10355303436517715, 0.1072513535618782, 0.10870426893234253, 0.10210011899471283, 0.1072513535618782, 0.10962884873151779, 0.10896842926740646, 0.10276053100824356, 0.10817593336105347, 0.10751552134752274, 0.10698718577623367, 0.10751552134752274, 0.11979923397302628, 0.11121384054422379, 0.10593052208423615, 0.10566636174917221, 0.11940298229455948, 0.11636507511138916, 0.11728965491056442, 0.11200633645057678, 0.10487385839223862, 0.11187426000833511, 0.11702549457550049, 0.11174217611551285, 0.11332716792821884, 0.11161009222269058, 0.11227050423622131, 0.11293092370033264, 0.11610091477632523, 0.11940298229455948, 0.11411966383457184, 0.12178047746419907, 0.1138555034995079, 0.11795007437467575, 0.1216483935713768, 0.11874257028102875, 0.1274600476026535, 0.12059172987937927, 0.12653546035289764, 0.12336547672748566, 0.12455421686172485, 0.12732796370983124, 0.12217672914266586, 0.12178047746419907, 0.12640337646007538, 0.12442214041948318, 0.12178047746419907, 0.13010171055793762, 0.12138422578573227, 0.12059172987937927, 0.12772421538829803, 0.12230881303548813, 0.12812046706676483, 0.12812046706676483, 0.1290450394153595, 0.13617752492427826, 0.12759213149547577, 0.1328754425048828, 0.13261127471923828, 0.1328754425048828, 0.13551710546016693, 0.13234710693359375, 0.13591335713863373, 0.13895125687122345, 0.13155461847782135, 0.13419628143310547], "val_loss": [1.9708433832441057, 1.9706812586103166, 1.9705150468008858, 1.9703503336225237, 1.9701875277927943, 1.970024926321847, 1.9698606899806432, 1.9696959086826868, 1.9695328984941756, 1.9693670954023088, 1.9692036764962333, 1.9690404619489397, 1.9688756125313895, 1.9687139647347587, 1.9685514313834054, 1.9683878081185477, 1.968223980494908, 1.9680615152631487, 1.9678986413138253, 1.9677348818097795, 1.9675720078604562, 1.9674080439976283, 1.9672472817557198, 1.9670850208827428, 1.9669223512922014, 1.9667600222996302, 1.9665998731340681, 1.9664387021745955, 1.9662767818995885, 1.9661150659833635, 1.965953963143485, 1.9657899992806571, 1.9656289645603724, 1.9654662268502372, 1.9653040340968542, 1.9651416369846888, 1.9649790355137415, 1.9648174558367049, 1.9646577153887068, 1.9644959994724818, 1.9643348966326033, 1.9641739981515067, 1.9640124865940638, 1.9638492039271764, 1.9636875561305456, 1.9635254314967565, 1.9633640561785017, 1.9632024765014648, 1.9630418504987444, 1.9628804070608956, 1.9627201216561454, 1.962560040610177, 1.962397915976388, 1.9622376305716378, 1.9620753696986608, 1.9619160379682268, 1.9617535727364677, 1.9615934235709054, 1.9614314351763045, 1.9612703323364258, 1.961111409323556, 1.9609524863106864, 1.9607930864606584, 1.9606327329363142, 1.960472515651158, 1.9603125027247839, 1.9601526260375977, 1.9599913188389368, 1.9598291260855538, 1.959669521876744, 1.9595091683523995, 1.9593477930341447, 1.959188665662493, 1.9590278353009904, 1.9588687760489327, 1.9587095124380929, 1.9585494995117188, 1.958390372140067, 1.9582311766488212, 1.9580730029514857, 1.957913534981864, 1.9577535220554896, 1.9575938497270857, 1.9574333599635534, 1.957270690373012, 1.957111426762172, 1.9569511413574219, 1.9567910603114538, 1.956630093710763, 1.956469944545201, 1.9563085011073522, 1.956148420061384, 1.955986772264753, 1.9558277130126953, 1.9556670870099748, 1.9555068016052246, 1.955345562526158, 1.9551850727626257, 1.955023901803153, 1.9548607553754533], "val_accuracy": [0.03799999877810478, 0.03933333232998848, 0.04066666588187218, 0.0416666679084301, 0.04333333298563957, 0.04500000178813934, 0.04600000008940697, 0.046666666865348816, 0.047333333641290665, 0.04866666719317436, 0.05066666752099991, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05366666615009308, 0.05366666615009308, 0.054666668176651, 0.055666666477918625, 0.05666666850447655, 0.05833333358168602, 0.05900000035762787, 0.05999999865889549, 0.061000000685453415, 0.06133333221077919, 0.06300000101327896, 0.06400000303983688, 0.06533333659172058, 0.06700000166893005, 0.0676666647195816, 0.06966666877269745, 0.070333331823349, 0.07133333384990692, 0.0716666653752327, 0.07199999690055847, 0.07400000095367432, 0.07566666603088379, 0.07699999958276749, 0.07766667008399963, 0.07966666668653488, 0.0806666687130928, 0.08233333379030228, 0.08399999886751175, 0.0860000029206276, 0.08766666799783707, 0.08866667002439499, 0.08966666460037231, 0.09099999815225601, 0.09333333373069763, 0.09366666525602341, 0.0949999988079071, 0.09600000083446503, 0.09700000286102295, 0.0963333323597908, 0.09966666996479034, 0.10100000351667404, 0.10199999809265137, 0.10266666859388351, 0.10333333164453506, 0.10366666316986084, 0.10566666722297668, 0.10566666722297668, 0.109333336353302, 0.11100000143051147, 0.11233333498239517, 0.11366666853427887, 0.1146666631102562, 0.11599999666213989, 0.11666666716337204, 0.11800000071525574, 0.11933333426713943, 0.12166666984558105, 0.12200000137090683, 0.1236666664481163, 0.12533333897590637, 0.12833333015441895, 0.12933333218097687, 0.1316666603088379, 0.13199999928474426, 0.13333334028720856, 0.13500000536441803, 0.1379999965429306, 0.13899999856948853, 0.140666663646698, 0.14166666567325592, 0.14266666769981384, 0.1456666737794876, 0.14766666293144226, 0.15066666901111603, 0.15299999713897705, 0.15533334016799927, 0.15700000524520874, 0.15833333134651184, 0.16200000047683716, 0.1626666635274887, 0.16500000655651093, 0.16599999368190765, 0.1679999977350235, 0.16866666078567505, 0.17033334076404572, 0.17266666889190674]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 8, 4, 5, 4, 1, 3, 5, 2, 6, 1, 2, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [36, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1120000034570694, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015976059532846, 2.3025172165183028, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0944393053650856, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736081532069616, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11433333158493042, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 3, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 0, 0, 3], [90, 15, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30268733133934, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [3, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 73, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [19316886.89116151, 363632864.4353454, 1680863261.5189538, 4686530732.244617, 10150360161.382116, 18521586719.243427], "accuracy": [0.0944393053650856, 0.1010434553027153, 0.09681680053472519, 0.1014397069811821, 0.09985470771789551, 0.10077928751707077], "val_loss": [72529874.28571428, 579533970.2857143, 1955138194.2857144, 4633478582.857142, 9048641243.428572, 15634790107.428572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 8, 8, 5, 3, 1, 3, 5, 2, 6, 0, 2, 3, 1, 6, 2, 7, 9, 5, 6, 8, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 0, 1, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 3, 2, 3, 1, 1, 1, 1, 3, 2], [36, 14, 73, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 3, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30268733133934, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 1, 0, 1, 2, 0, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [19316886.89116151, 363632864.4353454, 1680863261.5189538, 4686530732.244617, 10150360161.382116, 18521586719.243427], "accuracy": [0.0944393053650856, 0.1010434553027153, 0.09681680053472519, 0.1014397069811821, 0.09985470771789551, 0.10077928751707077], "val_loss": [72529874.28571428, 579533970.2857143, 1955138194.2857144, 4633478582.857142, 9048641243.428572, 15634790107.428572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 8, 4, 5, 4, 1, 3, 5, 2, 6, 1, 2, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 3, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 0, 0, 3], [90, 15, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12693171203136444, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [74, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 1, 2, 8, 0, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [15, 15, 51, 45, 3, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.08885714411735535, "mapping_values": [1, 3, 3, 1, 2, 0, 25, 25, 15, 10, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30250675387591, 2.3003512006693385, 2.3009698677529054, 2.3021135997495095, 2.302638355578099, 2.3026135428202794, 2.3033247112739734], "accuracy": [0.09351472556591034, 0.10117553919553757, 0.09311848133802414, 0.080042265355587, 0.0886276587843895, 0.1018359512090683, 0.11028926074504852], "val_loss": [1.9697092601231165, 1.9713243756975447, 1.9729961667742049, 1.97353880746024, 1.9737660544259208, 1.974423544747489, 1.9751219749450684], "val_accuracy": [0.0716666653752327, 0.10766666382551193, 0.06833333522081375, 0.07833333313465118, 0.10166666656732559, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [63, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 3, 1, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 0, 0, 3], [90, 15, 96, 57, 93, 42, 17], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032499637271213, 2.3021901434501717, 2.3038112117062943, 2.303638053907143, 2.3035674467377767, 2.3021992703061045], "accuracy": [0.09272222965955734, 0.08836349099874496, 0.08968432247638702, 0.08955223858356476, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 8, 1, 4, 2, 4, 9, 3, 8, 2, 6, 1, 2, 8, 1, 6, 2, 7, 0, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 3, 1, 0, 1, 2, 0, 0, 1, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 76, 95, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 45, 45, 27, 18, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(grad, alpha), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))), tf.math.add(beta, beta))))))))))), tf.math.add(beta, grad)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032499637271213, 2.3021901434501717, 2.3038112117062943, 2.303638053907143, 2.3035674467377767, 2.3021992703061045], "accuracy": [0.09272222965955734, 0.08836349099874496, 0.08968432247638702, 0.08955223858356476, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 8, 1, 4, 5, 4, 9, 3, 8, 2, 6, 1, 2, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [2, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032499637271213, 2.3021901434501717, 2.3038112117062943, 2.303638053907143, 2.3035674467377767, 2.3021992703061045], "accuracy": [0.09272222965955734, 0.08836349099874496, 0.08968432247638702, 0.08955223858356476, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [3, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 8, 4, 5, 4, 1, 1, 4, 2, 6, 1, 2, 5, 1, 6, 2, 7, 1, 5, 6, 2, 8, 8, 3, 9, 6, 0, 9, 3, 0, 2, 9], [2, 2, 3, 1, 0, 0, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 0, 0, 3], [90, 68, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 3, 2, 0, 47, 47, 27, 20, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, grad)))))), beta)), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.multiply(alpha, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3032499996898763, 2.302190705722491, 2.3038129345804803, 2.3036412613314092, 2.3035730203664566, 2.3022071111943854], "accuracy": [0.09272222965955734, 0.08836349099874496, 0.08968432247638702, 0.08955223858356476, 0.08955223858356476, 0.09285431355237961], "val_loss": [1.9710071427481515, 1.9710078239440918, 1.9710091182163783, 1.9710112299237932, 1.9710136822291784, 1.9710169519696916], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]