[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7822856903076172, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2937662641779464, 2.271081525730561, 2.2492001784113906, 2.2229078495271013, 2.1880613196212635, 2.1448988768686283, 2.0860543196873027, 2.0162654839423606, 1.9256416684868565, 1.8306819929690519, 1.7262968580090783, 1.6218309454111108, 1.528915643581798, 1.4406866253233226, 1.3704626452984228, 1.304498151072642, 1.261974345187564, 1.2159706406888708, 1.1658718652414088, 1.1319385430658844, 1.1054489752399514, 1.078943207704506, 1.0711063992912586, 1.030832802118831, 1.0236825414022608, 0.9956528136144775, 0.9799777674967854, 0.9679514718345442, 0.94153592020781, 0.9405915083870707, 0.929573756167445, 0.9119110579787307, 0.8988870194150063, 0.8906634360051914, 0.8833229305595849, 0.8720785673693454, 0.878879421588027, 0.8541378902091546, 0.8583886834529917, 0.8440052260654698, 0.8312128140327717, 0.8302584588252133, 0.8367333691495835, 0.8274862294845168, 0.8093810978346434, 0.8132810577456946, 0.8094598211081367, 0.8049079582691507, 0.7939875485040193, 0.7855820924126319, 0.7890928616188049, 0.7813697906611791, 0.7702372173166483, 0.775477830822977, 0.7734338024178705, 0.7658129157312731, 0.7661141899630001, 0.7522289269572913, 0.7666968108561879, 0.7464263958544259, 0.7495542843863634, 0.7482222198668472, 0.7407543035687835, 0.736289684538828, 0.7319826252818533, 0.728606634222836, 0.7315421424301277, 0.7313532571215687, 0.7263516074300143, 0.7218875257708471, 0.7273204404176297, 0.7171024436397071, 0.7211026989426422, 0.7128891815614581, 0.7102542928952772, 0.7045199914363397, 0.7062883675688876, 0.7015200529934913, 0.694550221984444, 0.6971894155766089, 0.6936818942842923, 0.6826145518032346, 0.6937089754747535, 0.6774806917193953, 0.6845041932982224, 0.6865166839103437, 0.6813960758418833, 0.678419470180846, 0.689491039332681, 0.674170455684153, 0.6758091093731469, 0.6739329810092761, 0.6819897561954422, 0.6698608506136818, 0.6712619717945244, 0.661260866706303, 0.6676349032036994, 0.6600720706617104, 0.6561286364957688, 0.6616275631724852], "accuracy": [0.11557257920503616, 0.177255317568779, 0.22559767961502075, 0.27777042984962463, 0.31937655806541443, 0.34764233231544495, 0.387399286031723, 0.4035134017467499, 0.42570334672927856, 0.4497424364089966, 0.474970281124115, 0.4955752193927765, 0.5091797709465027, 0.533350944519043, 0.5480121374130249, 0.5650508403778076, 0.5669000148773193, 0.5816932916641235, 0.5896182656288147, 0.6045436263084412, 0.6174877882003784, 0.6196011304855347, 0.6190727949142456, 0.6388852000236511, 0.632941484451294, 0.6483951807022095, 0.6538106203079224, 0.6571126580238342, 0.663848876953125, 0.6633205413818359, 0.6692643165588379, 0.6796988248825073, 0.6793025732040405, 0.684982180595398, 0.6848500967025757, 0.6933034062385559, 0.6828688383102417, 0.6964733600616455, 0.6951525807380676, 0.6927750706672668, 0.7063795924186707, 0.6979262828826904, 0.6972658634185791, 0.6999075412750244, 0.7053229212760925, 0.7058512568473816, 0.7040021419525146, 0.7086250185966492, 0.7112666964530945, 0.7143045663833618, 0.7145687341690063, 0.7181349992752075, 0.7199841737747192, 0.7186633348464966, 0.7224937081336975, 0.7240787148475647, 0.7215691208839417, 0.7228899598121643, 0.7199841737747192, 0.7329282760620117, 0.7252674698829651, 0.7269845604896545, 0.7294940948486328, 0.7318716049194336, 0.7358341217041016, 0.7304186820983887, 0.7314753532409668, 0.7290979027748108, 0.7327961921691895, 0.735569953918457, 0.7351737022399902, 0.7416457533836365, 0.7386078238487244, 0.7388719916343689, 0.7434949278831482, 0.7404569983482361, 0.7425703406333923, 0.7428345084190369, 0.7473253011703491, 0.7445515990257263, 0.7465327978134155, 0.7450799345970154, 0.7430986762046814, 0.7506273984909058, 0.7479857206344604, 0.7483819723129272, 0.7479857206344604, 0.7498348951339722, 0.7499669790267944, 0.7573636174201965, 0.7497028112411499, 0.7503632307052612, 0.7504953145980835, 0.7540615797042847, 0.7494386434555054, 0.7561748623847961, 0.7573636174201965, 0.759609043598175, 0.7593448758125305, 0.7592127919197083], "val_loss": [1.9508684703281947, 1.9299041203090124, 1.9059339932032995, 1.876621927533831, 1.8390466826302665, 1.7907671928405762, 1.7286318370274134, 1.6514654159545898, 1.5587413992200578, 1.4557571070534843, 1.3478147302355086, 1.2451748847961426, 1.1512432779584612, 1.071221453802926, 1.0037960324968611, 0.9457518373216901, 0.8996213163648333, 0.8619607176099505, 0.8274229764938354, 0.7992691653115409, 0.7755421570369175, 0.7553860630307879, 0.7400560889925275, 0.7222046681812831, 0.7091763530458722, 0.6969442026955741, 0.6850296599524361, 0.6750520297459194, 0.6640775374003819, 0.6566321679524013, 0.6487926585333688, 0.64122816494533, 0.6348819392068046, 0.6278428179877145, 0.6231328248977661, 0.6157518454960415, 0.6127100672040667, 0.6067212990352085, 0.602495687348502, 0.5968975169318063, 0.5953274113791329, 0.5890456438064575, 0.5849550281252179, 0.580835086958749, 0.5770184482846942, 0.5738059963498797, 0.5712240082877023, 0.5690047570637294, 0.5660764489855085, 0.5638099908828735, 0.5612585544586182, 0.5570628643035889, 0.553232022694179, 0.5518646240234375, 0.5496940272194999, 0.547759975705828, 0.5448514904294696, 0.5425097942352295, 0.540702394076756, 0.5382821389607021, 0.537673967225211, 0.5341966492789132, 0.531385098184858, 0.5305247477122715, 0.5286826235907418, 0.5263731479644775, 0.5256002630506244, 0.5253653866904122, 0.5214906930923462, 0.5204273973192487, 0.5186186347688947, 0.5163590908050537, 0.5137368610927037, 0.5133776153836932, 0.5127722365515572, 0.5106329917907715, 0.5074375016348702, 0.5065978935786656, 0.506391167640686, 0.5041840757642474, 0.504005925995963, 0.5003640822001866, 0.5004129750388009, 0.4996101515633719, 0.496611271585737, 0.4964392525809152, 0.496106675692967, 0.49360612460545134, 0.49305570125579834, 0.49265781470707487, 0.4910914046423776, 0.4899782793862479, 0.489422219140189, 0.4877875362123762, 0.4871103422982352, 0.4849317414419992, 0.48339896542685373, 0.48309784276144846, 0.48187395504542757, 0.48058744839259554], "val_accuracy": [0.21566666662693024, 0.34833332896232605, 0.38233333826065063, 0.42633333802223206, 0.4583333432674408, 0.4933333396911621, 0.5266666412353516, 0.54666668176651, 0.5666666626930237, 0.5816666483879089, 0.5903333425521851, 0.6106666922569275, 0.6356666684150696, 0.659333348274231, 0.6673333048820496, 0.6753333210945129, 0.6836666464805603, 0.687666654586792, 0.6956666707992554, 0.7006666660308838, 0.7070000171661377, 0.7076666951179504, 0.7153333425521851, 0.7163333296775818, 0.7213333249092102, 0.7239999771118164, 0.7213333249092102, 0.7286666631698608, 0.7286666631698608, 0.7350000143051147, 0.7303333282470703, 0.7360000014305115, 0.7379999756813049, 0.7386666536331177, 0.7416666746139526, 0.7433333396911621, 0.7473333477973938, 0.7463333606719971, 0.746666669845581, 0.7483333349227905, 0.7513333559036255, 0.753000020980835, 0.7543333172798157, 0.7540000081062317, 0.7536666393280029, 0.7513333559036255, 0.7559999823570251, 0.7599999904632568, 0.7559999823570251, 0.7599999904632568, 0.7596666812896729, 0.7616666555404663, 0.7603333592414856, 0.762666642665863, 0.7663333415985107, 0.7590000033378601, 0.7670000195503235, 0.7693333625793457, 0.7680000066757202, 0.768666684627533, 0.7683333158493042, 0.7696666717529297, 0.7710000276565552, 0.7703333497047424, 0.7689999938011169, 0.7720000147819519, 0.7696666717529297, 0.7720000147819519, 0.7726666927337646, 0.7733333110809326, 0.7723333239555359, 0.7746666669845581, 0.7756666541099548, 0.7760000228881836, 0.7753333449363708, 0.7749999761581421, 0.7760000228881836, 0.778333306312561, 0.7796666622161865, 0.7773333191871643, 0.7749999761581421, 0.7823333144187927, 0.7796666622161865, 0.7796666622161865, 0.7833333611488342, 0.778333306312561, 0.781333327293396, 0.7826666831970215, 0.7846666574478149, 0.7833333611488342, 0.7833333611488342, 0.7850000262260437, 0.781000018119812, 0.7823333144187927, 0.7806666493415833, 0.7900000214576721, 0.7886666655540466, 0.7940000295639038, 0.7919999957084656, 0.7876666784286499]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7817142605781555, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2937662641779464, 2.2710815437119383, 2.2492003627913646, 2.222909959331558, 2.188064580989662, 2.1449026734900434, 2.0860595017250394, 2.0162684823921597, 1.9256381980022812, 1.8306777796898346, 1.7263050669015219, 1.621854614210072, 1.5289463853917937, 1.4407084145172475, 1.370482625946818, 1.304526354863171, 1.2620373745132132, 1.216054873349345, 1.165951950501898, 1.1320205200869473, 1.1055630046961378, 1.0790274344604123, 1.0711725562586525, 1.0308767305767028, 1.0236912140945764, 0.995674068586717, 0.9799336095716598, 0.9679227867036401, 0.9415599066410334, 0.9405813550101988, 0.9295704576632507, 0.9119278893825353, 0.8988690203553446, 0.8906889661050287, 0.8833084878920249, 0.8720830255306754, 0.8788778239457898, 0.854101335517388, 0.8583675153487551, 0.8439906354609292, 0.8312287434862746, 0.8301892415360217, 0.8366935512078295, 0.8275081840299612, 0.8093782982900551, 0.8132760185906286, 0.8094469706427389, 0.8049275365645434, 0.7939959955867318, 0.7856526139421455, 0.7891111562453902, 0.781405297205543, 0.7703296933050059, 0.775536595279231, 0.7734430710936518, 0.7657975312064054, 0.766081946267113, 0.752215677319485, 0.76669589072769, 0.7464724074044893, 0.7495755730854947, 0.7482223949254764, 0.7407446041665828, 0.736303699353525, 0.7319991939323862, 0.7285730409710367, 0.7315313783004976, 0.7313316184626343, 0.7262916698148458, 0.7218741452956889, 0.7272786222129624, 0.7171343390526883, 0.721131856683034, 0.7128562880481916, 0.7102764164373276, 0.7044630977440157, 0.7063848924769103, 0.7014898648194003, 0.6946391910373606, 0.6972491860373964, 0.6936849065271619, 0.6825578080475716, 0.6936469252839175, 0.677510135256619, 0.6845884409720446, 0.6866057307775923, 0.681338366114657, 0.6783388173339263, 0.6894818277580076, 0.6742256897835133, 0.6758028742832798, 0.6738837585158242, 0.6819320425318374, 0.6698999212497041, 0.6713379000187739, 0.6611867764953137, 0.6675813026620948, 0.6600262111030974, 0.6561290285984412, 0.6615817861203678], "accuracy": [0.11557257920503616, 0.177255317568779, 0.22559767961502075, 0.27777042984962463, 0.31924447417259216, 0.34764233231544495, 0.387399286031723, 0.4033813178539276, 0.42570334672927856, 0.4497424364089966, 0.47510236501693726, 0.49531105160713196, 0.5091797709465027, 0.533350944519043, 0.5480121374130249, 0.5650508403778076, 0.5672962665557861, 0.5815612077713013, 0.5896182656288147, 0.6045436263084412, 0.6176198720932007, 0.6190727949142456, 0.6194690465927124, 0.6383568644523621, 0.6338660717010498, 0.6482630968093872, 0.6536785364151001, 0.6564522385597229, 0.6645092964172363, 0.6634526252746582, 0.6693964004516602, 0.6796988248825073, 0.6794346570968628, 0.6851142644882202, 0.6851142644882202, 0.6933034062385559, 0.6826046705245972, 0.6966054439544678, 0.6951525807380676, 0.6931713223457336, 0.7058512568473816, 0.6973979473114014, 0.6970016956329346, 0.7003037929534912, 0.7059833407402039, 0.7057191729545593, 0.7040021419525146, 0.7092854380607605, 0.71100252866745, 0.7141724824905396, 0.7148329019546509, 0.7181349992752075, 0.7197200059890747, 0.7185312509536743, 0.7224937081336975, 0.7240787148475647, 0.7217012047767639, 0.7231541275978088, 0.7201162576675415, 0.7327961921691895, 0.7257958054542542, 0.7268524765968323, 0.7294940948486328, 0.7322678565979004, 0.7359662055969238, 0.7305507659912109, 0.7316074371337891, 0.7289658188819885, 0.7329282760620117, 0.7349095344543457, 0.7349095344543457, 0.7420420050621033, 0.7388719916343689, 0.7391361594200134, 0.7432307600975037, 0.7401928305625916, 0.7417778372764587, 0.7430986762046814, 0.7479857206344604, 0.7440232634544373, 0.7466648817062378, 0.7453441023826599, 0.7430986762046814, 0.7503632307052612, 0.7485140562057495, 0.7486461400985718, 0.7477215528488159, 0.7494386434555054, 0.7491744756698608, 0.757099449634552, 0.7494386434555054, 0.7499669790267944, 0.750231146812439, 0.7537974119186401, 0.750231146812439, 0.7559106945991516, 0.7569673657417297, 0.7604015469551086, 0.759609043598175, 0.7593448758125305], "val_loss": [1.9508685384477888, 1.9299041203090124, 1.9059362411499023, 1.876624516078404, 1.8390509060450964, 1.7907705307006836, 1.728635038648333, 1.6514641557421004, 1.558739525931222, 1.4557618073054723, 1.3478328500475203, 1.2451818329947335, 1.1512752601078577, 1.0712269714900426, 1.0037946360451835, 0.9457687991006034, 0.899688686643328, 0.8620816469192505, 0.8275331769670758, 0.7993626253945487, 0.7756127970559257, 0.7554760490145002, 0.7401242085865566, 0.7222283397402082, 0.7092006036213466, 0.6969776664461408, 0.6850600753511701, 0.6751085008893695, 0.6640823228018624, 0.6566118683133807, 0.6487235341753278, 0.64117203439985, 0.6348956142153058, 0.6278551476342338, 0.6231469937733242, 0.6157634769167218, 0.6126960175377982, 0.6067025491169521, 0.6024845497948783, 0.5968965121677944, 0.5953050340924945, 0.5890815939222064, 0.5850053344454084, 0.5809432779039655, 0.5770087923322406, 0.5737985713141305, 0.5712110825947353, 0.5690311874662127, 0.5661587033952985, 0.5638351951326642, 0.5612298590796334, 0.5571740184511457, 0.553213357925415, 0.5518674680164882, 0.5496527637754168, 0.5477471692221505, 0.5448899609701974, 0.5425828184400286, 0.5407066174915859, 0.5382704564503261, 0.5376912866319928, 0.5342271498271397, 0.5313806193215507, 0.5305254629680088, 0.5287035703659058, 0.5263893944876534, 0.5257134778159005, 0.5254370655332293, 0.5213967902319772, 0.5204013245446342, 0.5186375209263393, 0.516465323311942, 0.5138581139700753, 0.5135312931878226, 0.5128597021102905, 0.5106847967420306, 0.5074487924575806, 0.5064910990851266, 0.506395663533892, 0.5040560109274728, 0.5039092302322388, 0.5003550052642822, 0.5003734656742641, 0.49967975275857107, 0.49669831139700754, 0.49648002215794157, 0.49607598781585693, 0.4935797793524606, 0.4930040495736258, 0.49253146989004953, 0.49104768889290945, 0.4900734083993094, 0.4895626817430769, 0.4878286974770682, 0.4871546540941511, 0.48492906774793354, 0.48344840322222027, 0.48308381012507845, 0.4818896566118513, 0.4806960139955793], "val_accuracy": [0.21566666662693024, 0.34833332896232605, 0.38233333826065063, 0.42633333802223206, 0.4583333432674408, 0.4936666786670685, 0.5266666412353516, 0.54666668176651, 0.5663333535194397, 0.5820000171661377, 0.5903333425521851, 0.6106666922569275, 0.6359999775886536, 0.6600000262260437, 0.6673333048820496, 0.6753333210945129, 0.6840000152587891, 0.687333345413208, 0.6963333487510681, 0.7006666660308838, 0.7066666483879089, 0.7076666951179504, 0.7153333425521851, 0.7163333296775818, 0.7213333249092102, 0.7246666550636292, 0.7213333249092102, 0.7283333539962769, 0.7289999723434448, 0.734666645526886, 0.7303333282470703, 0.7360000014305115, 0.7379999756813049, 0.7386666536331177, 0.7416666746139526, 0.7436666488647461, 0.746999979019165, 0.7459999918937683, 0.746666669845581, 0.7476666569709778, 0.7513333559036255, 0.753000020980835, 0.7543333172798157, 0.7543333172798157, 0.7536666393280029, 0.7513333559036255, 0.7559999823570251, 0.7603333592414856, 0.7559999823570251, 0.7599999904632568, 0.7599999904632568, 0.7616666555404663, 0.7596666812896729, 0.762666642665863, 0.7666666507720947, 0.7593333125114441, 0.7670000195503235, 0.7689999938011169, 0.768666684627533, 0.768666684627533, 0.768666684627533, 0.7696666717529297, 0.7710000276565552, 0.7703333497047424, 0.7689999938011169, 0.7723333239555359, 0.7706666588783264, 0.7720000147819519, 0.7720000147819519, 0.7733333110809326, 0.7730000019073486, 0.7746666669845581, 0.7756666541099548, 0.7760000228881836, 0.7753333449363708, 0.7743333578109741, 0.7763333320617676, 0.7786666750907898, 0.7793333530426025, 0.7766666412353516, 0.7749999761581421, 0.7820000052452087, 0.7793333530426025, 0.7786666750907898, 0.7829999923706055, 0.7789999842643738, 0.781000018119812, 0.7836666703224182, 0.7839999794960022, 0.7833333611488342, 0.7839999794960022, 0.7850000262260437, 0.781000018119812, 0.7823333144187927, 0.7806666493415833, 0.7896666526794434, 0.7886666655540466, 0.793666660785675, 0.7919999957084656, 0.7873333096504211]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [0, 37, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6162857413291931, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.0255960533253945, 2.238724120714094, 2.791272336969664, 2.605566897806065, 2.03965778523086, 2.0255230488857148, 1.7590919891919725, 1.824294925350098, 1.7766902620892215, 1.5299465202337337, 1.8006668905965593, 1.498850156161543, 1.3912237058493913, 1.275458390702346, 1.4649000394424632, 1.2903679381618567, 1.4613624834948211, 2.2363893162257886, 2.1064385263879837], "accuracy": [0.16629242897033691, 0.1468762308359146, 0.1884823739528656, 0.19733192026615143, 0.3061682879924774, 0.31264033913612366, 0.40166425704956055, 0.4057588279247284, 0.3687755763530731, 0.4757627844810486, 0.40628713369369507, 0.4873860776424408, 0.5138026475906372, 0.5492008924484253, 0.5062739253044128, 0.5365209579467773, 0.5106326937675476, 0.3867388665676117, 0.2785629332065582], "val_loss": [1.9667643819536482, 1.6062725271497453, 1.9950999532427107, 1.799379621233259, 1.439079420907157, 1.4478485584259033, 1.25630555834089, 1.9003345625741142, 1.309307030269078, 1.7283823490142822, 1.089710337775094, 1.0178283282688685, 0.9358804907117572, 0.9209557260785785, 1.0117430346352714, 0.8065396206719535, 2.10183538709368, 2.1756929670061385, 1.2749395370483398], "val_accuracy": [0.08733333647251129, 0.421999990940094, 0.12333333492279053, 0.2630000114440918, 0.42633333802223206, 0.40566667914390564, 0.4906666576862335, 0.16699999570846558, 0.460999995470047, 0.32199999690055847, 0.5673333406448364, 0.5979999899864197, 0.6183333396911621, 0.6460000276565552, 0.5976666808128357, 0.6303333044052124, 0.5016666650772095, 0.2043333351612091, 0.5120000243186951]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3865714371204376, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.0255896166850706, 2.2310547288603173, 2.308437074951728, 2.5037995261160955, 2.249895588628305, 2.273719217704508, 2.3049370479495566], "accuracy": [0.16602826118469238, 0.14449875056743622, 0.15915995836257935, 0.10421344637870789, 0.17144367098808289, 0.12930920720100403, 0.09668471664190292], "val_loss": [1.9677037511553084, 1.6793852874210902, 2.778262206486293, 1.9726323400224959, 1.9571274348667689, 1.9752789906093053, 1.9744396209716797], "val_accuracy": [0.08666666597127914, 0.367000013589859, 0.10100000351667404, 0.10599999874830246, 0.12300000339746475, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 3, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.19342857599258423, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026211694121095, 2.301635911703708, 2.302805402637583, 2.303184188100341, 2.299830871408705, 2.295735987343446, 2.2930931775104795, 2.2934197151366478, 2.288580811239426, 2.286883482575936, 2.2871409591792706, 2.282827642064415, 2.2838384778256176, 2.288795010666601, 2.287850597043, 2.2882913066852426], "accuracy": [0.09325055778026581, 0.09351472556591034, 0.09074098616838455, 0.0882314071059227, 0.10011887550354004, 0.11015717685222626, 0.12376172095537186, 0.11861048638820648, 0.1410645842552185, 0.14898955821990967, 0.1476687341928482, 0.15295206010341644, 0.14476291835308075, 0.1310262829065323, 0.1320829540491104, 0.12996962666511536], "val_loss": [1.9710022381373815, 1.9709530557904924, 1.9707062585013253, 1.969508443559919, 1.9657062121800013, 1.9629310880388533, 1.9629853112357003, 1.9607819148472376, 1.9577552250453405, 1.95772123336792, 1.9547527858189173, 1.9505024637494768, 1.9583073343549455, 1.9574223927089147, 1.9573804310389928, 1.9586741583687919], "val_accuracy": [0.03700000047683716, 0.03766666725277901, 0.04066666588187218, 0.0533333346247673, 0.1080000028014183, 0.11699999868869781, 0.12033333629369736, 0.14366666972637177, 0.1823333352804184, 0.18733333051204681, 0.2056666612625122, 0.2006666660308838, 0.17866666615009308, 0.17366667091846466, 0.17133332788944244, 0.16300000250339508]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 7, 9], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 5, 7], [2, 0, 1, 5, 3, 4], [62], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 46, 29, 17, 5, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, grad))))), alpha)), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad)))))))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025908113360454, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [3, 1, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 0, 1, 4, 5, 4], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 2, 1, 4, 1], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, beta), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10632677376270294, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [1, 2, 0, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0], [5, 4, 8, 2, 2, 4, 8], [6, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 12, 8, 7, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))))), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [2, 0, 1, 1, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0, 1], [73, 50, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 4, 5, 1, 9, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 4, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [71, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(grad), tf.math.subtract(beta, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 2, 5, 1, 2, 6, 4, 3, 4, 4, 3, 2, 7, 2, 1, 2, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [2, 0, 1, 1, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0, 1], [73, 50, 79, 92, 41, 36], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 4, 5, 4, 9, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(grad), tf.math.pow(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 8, 2, 1, 1, 8, 5, 5, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 8, 2, 5, 5, 0, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 7, 7, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025763818947174, 2.3046640022760525, 2.4009238758621054e+24, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09074098616838455, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9708928380693709, 2.114825929914202, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03966666758060455, 0.06666667014360428, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [1, 2, 1, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [40, 63, 79, 92, 41, 36, 91, 33], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025908113360454, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 0, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42, 88], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025908113360454, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [2, 2, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36, 82, 10], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 1, 5, 0, 1], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [74, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1], [3, 4, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1], [0, 0, 1, 0], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 35, 35, 21, 14, 4, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026220465002436, 2.3016545567860804, 2.302942769559871, 2.3039054846987197, 2.3030434420646975, 2.303710610497157], "accuracy": [0.09325055778026581, 0.09351472556591034, 0.09034473448991776, 0.0866464152932167, 0.09021265059709549, 0.08558975160121918], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 2, 1, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [16, 63, 79, 92, 41, 36, 91, 33], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026220465002436, 2.3016545567860804, 2.302942769559871, 2.3039054846987197, 2.3030434420646975, 2.303710610497157], "accuracy": [0.09325055778026581, 0.09351472556591034, 0.09034473448991776, 0.0866464152932167, 0.09021265059709549, 0.08558975160121918], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 1, 6, 4, 3, 4, 4, 3, 2, 7, 2, 1, 2, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [2, 0, 1, 1, 0, 2, 2, 3, 1, 1, 2, 2, 0, 3, 2, 0, 2, 3, 0, 2], [26, 50, 79, 92, 41, 36], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 2, 5, 1, 9, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 3, 0, 4], [42, 88], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [71, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.subtract(grad, tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), grad)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026220465002436, 2.3016545567860804, 2.302942769559871, 2.3039054846987197, 2.3030434420646975, 2.303710610497157], "accuracy": [0.09325055778026581, 0.09351472556591034, 0.09034473448991776, 0.0866464152932167, 0.09021265059709549, 0.08558975160121918], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [1, 2, 1, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42, 88], [0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026220465002436, 2.3016545567860804, 2.302942769559871, 2.3039054846987197, 2.3030434420646975, 2.303710610497157], "accuracy": [0.09325055778026581, 0.09351472556591034, 0.09034473448991776, 0.0866464152932167, 0.09021265059709549, 0.08558975160121918], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]