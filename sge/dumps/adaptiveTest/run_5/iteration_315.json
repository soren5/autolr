[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8045714497566223, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2380773707812947, 1.7963368932033463, 1.4652305071490268, 1.224351318001259, 1.0339791440551214, 0.9323249708596884, 0.8802720995674265, 0.8535596546228016, 0.7803654218976523, 0.7856257348138705, 0.7323251896373127, 0.7279161489745173, 0.6886673855853984, 0.6826048716026889, 0.6513174571428537, 0.6299416689966585, 0.6062630477236278, 0.6265307383341419, 0.592424007305112, 0.5695947682805553, 0.5703158427097259, 0.5666022753718665, 0.5696990416191982, 0.5425083672468137], "accuracy": [0.287280410528183, 0.4271562397480011, 0.5095760226249695, 0.5567296147346497, 0.6059965491294861, 0.6450931429862976, 0.665830135345459, 0.6816800832748413, 0.7049266695976257, 0.6951525807380676, 0.7169462442398071, 0.7239466309547424, 0.7276449799537659, 0.7325320243835449, 0.7446836829185486, 0.7602694630622864, 0.7707040309906006, 0.7539294958114624, 0.7733456492424011, 0.7895918488502502, 0.7800818681716919, 0.7781006693840027, 0.7788931727409363, 0.7917051911354065], "val_loss": [1.8030008588518416, 1.5812842505318778, 1.0793392317635673, 0.9265977655138288, 0.8627331597464425, 0.7084541150501796, 0.6737227269581386, 0.6443348952702114, 0.6187053918838501, 0.5859415020261493, 0.5755185059138707, 0.5434868846620832, 0.5307081767490932, 0.5269809620721, 0.555322391646249, 0.5103148903165545, 0.5021447965076992, 0.48947499479566303, 0.45185926982334684, 0.5061167137963432, 0.46945321559906006, 0.45754258973257883, 0.46153134959084646, 0.4563839946474348], "val_accuracy": [0.4126666784286499, 0.4416666626930237, 0.5596666932106018, 0.5723333358764648, 0.5556666851043701, 0.6553333401679993, 0.7049999833106995, 0.7210000157356262, 0.7133333086967468, 0.731333315372467, 0.7519999742507935, 0.7440000176429749, 0.7509999871253967, 0.7636666893959045, 0.7336666584014893, 0.7756666541099548, 0.7580000162124634, 0.7733333110809326, 0.8036666512489319, 0.7563333511352539, 0.7696666717529297, 0.7963333129882812, 0.7743333578109741, 0.7896666526794434]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 2, 9, 4, 9, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 1, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 12, 48, 68, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7994285821914673, "mapping_values": [1, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2383356089951607, 1.796517904707627, 1.477209956654468, 1.2296330525874777, 1.0744125743142807, 0.9560013537582641, 0.893151635081934, 0.8176553600405374, 0.8185849944362079, 0.7440145404473303, 0.7594922847357943, 0.6880633531229575, 0.6913033258393771, 0.7004200676413039, 0.647057471242579, 0.6361938727420036, 0.6215027626542335, 0.6232583775354682, 0.5938263455118722, 0.5771917244698692, 0.5703762156962404, 0.5601287902527324, 0.5567214719812396, 0.547582940686223], "accuracy": [0.287280410528183, 0.4271562397480011, 0.5037643909454346, 0.5536917448043823, 0.5896182656288147, 0.637828528881073, 0.648659348487854, 0.684982180595398, 0.6882842183113098, 0.7202483415603638, 0.7017567157745361, 0.7358341217041016, 0.7378153204917908, 0.7253995537757874, 0.7503632307052612, 0.7555144429206848, 0.7631752490997314, 0.7600052952766418, 0.7736098170280457, 0.7824593782424927, 0.7759873270988464, 0.783119797706604, 0.7868181467056274, 0.7901201844215393], "val_loss": [1.8041563034057617, 1.55172027860369, 1.0920889718191964, 1.0188443320138114, 0.776382429259164, 0.704430069242205, 0.68324727671487, 0.623388545853751, 0.5881434338433402, 0.6230140583855766, 0.5744136571884155, 0.5344851698194232, 0.55069443157741, 0.5053327764783587, 0.553273218018668, 0.5028833491461617, 0.5103514875684466, 0.5110196726662772, 0.4664267301559448, 0.4771720511572702, 0.47088941505977083, 0.45123569454465595, 0.46371560437338694, 0.46734281948634554], "val_accuracy": [0.41066667437553406, 0.43566668033599854, 0.5613333582878113, 0.5379999876022339, 0.6326666474342346, 0.6620000004768372, 0.6759999990463257, 0.6970000267028809, 0.7383333444595337, 0.7039999961853027, 0.7276666760444641, 0.7459999918937683, 0.737666666507721, 0.7706666588783264, 0.7236666679382324, 0.778333306312561, 0.7553333044052124, 0.7540000081062317, 0.8053333163261414, 0.7770000100135803, 0.7646666765213013, 0.7943333387374878, 0.7749999761581421, 0.7870000004768372]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 2, 5, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 1, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 50, 88, 75, 33, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [19], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.693142831325531, "mapping_values": [1, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.pow(tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301410791187742, 2.2949824480883843, 2.290660502715055, 2.2873411437445124, 2.2829158119380026, 2.27913482931422, 2.272081702691752, 2.2696825411530406, 2.265241711949943, 2.262046711461545, 2.2570087259723652, 2.2530071674919303, 2.2464904297360215, 2.2417359788262567, 2.2372903916751072, 2.229230981980962, 2.2229171502450042, 2.2171947586065617, 2.2096857395721323, 2.205516546598562, 2.1974843536243935, 2.1888496095730154, 2.1800132492167714, 2.172256713341161, 2.163524284559297, 2.152756942623815, 2.1437106475129717, 2.1359256275294403, 2.122058301223283, 2.11275109619969, 2.1009718040669867, 2.0843822520249367, 2.073125717709518, 2.057962362020873, 2.0444776435900422, 2.0344874347756803, 2.015481670676536, 1.9992493433077512, 1.9831730644889654, 1.96190819608348, 1.9452281842976828, 1.9220317947141814, 1.9105032316650523, 1.8865325748172528, 1.8662326975962142, 1.847112352286568, 1.8263486563931084, 1.8024531879193275, 1.7834035204921526, 1.7628699104783714, 1.7419622488277557, 1.7144483113096785, 1.699681210999696, 1.6716639030374918, 1.6558266425287058, 1.6365076925114965, 1.615820684405901, 1.5945966991970741, 1.572676081431304, 1.5627521966127529, 1.533642438361516, 1.520932289713551, 1.5168170535474672, 1.4901650929416348, 1.4651274910346, 1.459083531322008, 1.4341518774386552, 1.425114110255868, 1.41080342740777, 1.3993140913791124, 1.3828963127905871, 1.3557431566055504, 1.3510338782539866, 1.3396184111567315, 1.3276414242339976, 1.3093750575404077, 1.308786954956599, 1.2922413674926305, 1.2874499779682211, 1.271812145704638, 1.2553019154545748, 1.2532366106554564, 1.244024518993883, 1.227032970065816, 1.219232553157824, 1.209592615718839, 1.2104267977988006, 1.1939632516920669, 1.185766725161639, 1.1817781768061182, 1.1801529257383487, 1.1651583595707935, 1.160398549690947, 1.1515548934301665, 1.147900018205795, 1.1408361791540933, 1.1390237477571736, 1.132675835044235, 1.117369793740246, 1.1148313142525568], "accuracy": [0.09166556596755981, 0.11147800832986832, 0.12072381377220154, 0.13274335861206055, 0.13829085230827332, 0.1546691358089447, 0.17421740293502808, 0.17434948682785034, 0.19072777032852173, 0.1978602558374405, 0.21001188457012177, 0.21344605088233948, 0.23233389854431152, 0.2362964004278183, 0.2499009370803833, 0.2673358917236328, 0.282129168510437, 0.28239333629608154, 0.2925637364387512, 0.29863953590393066, 0.3061682879924774, 0.32505613565444946, 0.32743361592292786, 0.33218860626220703, 0.3420948386192322, 0.3529256284236908, 0.360190212726593, 0.35226520895957947, 0.368511438369751, 0.368511438369751, 0.3695680797100067, 0.38409721851348877, 0.3895126283168793, 0.40285298228263855, 0.4010038375854492, 0.39730551838874817, 0.40826839208602905, 0.4089288115501404, 0.41685378551483154, 0.41606128215789795, 0.42609959840774536, 0.4364020526409149, 0.42966583371162415, 0.436930388212204, 0.44287413358688354, 0.4449874460697174, 0.44789329171180725, 0.45925241708755493, 0.4663848876953125, 0.4703473746776581, 0.4761590361595154, 0.4711398780345917, 0.47510236501693726, 0.4846123456954956, 0.48408401012420654, 0.4893673360347748, 0.4920089840888977, 0.4955752193927765, 0.5001981258392334, 0.500990629196167, 0.5061418414115906, 0.5148593187332153, 0.5064060091972351, 0.5175009965896606, 0.5262184739112854, 0.5196143388748169, 0.5233126282691956, 0.5288601517677307, 0.5328226089477539, 0.5340113639831543, 0.5433892607688904, 0.5497292280197144, 0.5474838018417358, 0.5539559125900269, 0.5563333630561829, 0.5674283504486084, 0.555408775806427, 0.5577862858772278, 0.559371292591095, 0.5672962665557861, 0.5729758143424988, 0.5709945559501648, 0.5783912539482117, 0.5785233378410339, 0.5782591700553894, 0.5797120332717896, 0.579051673412323, 0.5861841440200806, 0.5851274728775024, 0.5905428528785706, 0.5904107689857483, 0.5946374535560608, 0.5943732857704163, 0.5992603302001953, 0.5963544845581055, 0.598599910736084, 0.5983357429504395, 0.6017699241638184, 0.6071853041648865, 0.6067890524864197], "val_loss": [1.9668595450265067, 1.9627958025251115, 1.9587397575378418, 1.9546692030770438, 1.9506118638174874, 1.9464946474347795, 1.9423111506870814, 1.9380858285086495, 1.933772087097168, 1.9293114117213659, 1.9247751235961914, 1.920074803488595, 1.9151697840009416, 1.9101218496050154, 1.904853071485247, 1.8992975098746163, 1.8935306412833077, 1.8874332564217704, 1.88107545035226, 1.8744324956621443, 1.8674374989100866, 1.8599899836948939, 1.852058001926967, 1.8437848772321428, 1.8349853924342565, 1.8257019860403878, 1.8160087721688407, 1.8058840206691198, 1.7950553894042969, 1.783843653542655, 1.7720940453665597, 1.7595618111746651, 1.746516227722168, 1.7327922412327357, 1.7184216635567802, 1.7036789485386439, 1.6880974769592285, 1.6719394070761544, 1.6551868574959892, 1.6376467432294572, 1.6195220266069685, 1.600769008908953, 1.5817359175000871, 1.5619699954986572, 1.5417968205043249, 1.5212316172463554, 1.5004143033708846, 1.4792397362845284, 1.4577363899775915, 1.4362102576664515, 1.4146425042833601, 1.392899513244629, 1.3714962346213204, 1.3497229984828405, 1.3281694139753069, 1.3071002279009138, 1.2859619004385812, 1.2652151584625244, 1.244798251560756, 1.22498961857387, 1.2053141934531075, 1.186300345829555, 1.1682279791150774, 1.1505598681313651, 1.1331111703600203, 1.1166159766060966, 1.1002144472939628, 1.084777593612671, 1.0695976529802596, 1.0550803116389684, 1.0409657273973738, 1.0269289697919572, 1.0139313425336565, 1.0014189992632185, 0.9892882619585309, 0.9776186943054199, 0.966625588280814, 0.9556500571114677, 0.9453780651092529, 0.9352874415261405, 0.9255035264151437, 0.9162835393633161, 0.9071597031184605, 0.8983101844787598, 0.8898264680589948, 0.8818397521972656, 0.8741239990506854, 0.866499832698277, 0.8592310292380196, 0.852225627217974, 0.8455840349197388, 0.8389971426555088, 0.8327486344746181, 0.8265571594238281, 0.8204020261764526, 0.815136330468314, 0.8098485469818115, 0.8045166730880737, 0.7991999047143119, 0.7941710438047137], "val_accuracy": [0.06333333253860474, 0.09466666728258133, 0.1276666671037674, 0.17399999499320984, 0.2163333296775818, 0.24699999392032623, 0.2796666622161865, 0.3089999854564667, 0.3283333480358124, 0.3463333249092102, 0.3656666576862335, 0.37466666102409363, 0.3840000033378601, 0.39233332872390747, 0.4023333191871643, 0.40833333134651184, 0.41733333468437195, 0.4246666729450226, 0.4336666762828827, 0.4403333365917206, 0.44433334469795227, 0.44699999690055847, 0.4519999921321869, 0.460999995470047, 0.4646666646003723, 0.4713333249092102, 0.4776666760444641, 0.4830000102519989, 0.4936666786670685, 0.500333309173584, 0.5046666860580444, 0.5103333592414856, 0.5199999809265137, 0.5220000147819519, 0.528333306312561, 0.5346666574478149, 0.5363333225250244, 0.5410000085830688, 0.5473333597183228, 0.5519999861717224, 0.5546666383743286, 0.559333324432373, 0.562333345413208, 0.5646666884422302, 0.5686666369438171, 0.5726666450500488, 0.5759999752044678, 0.5793333053588867, 0.581333339214325, 0.5839999914169312, 0.5870000123977661, 0.5899999737739563, 0.5923333168029785, 0.5920000076293945, 0.593666672706604, 0.5976666808128357, 0.6010000109672546, 0.6043333411216736, 0.6083333492279053, 0.609666645526886, 0.612666666507721, 0.6176666617393494, 0.6236666440963745, 0.6296666860580444, 0.6366666555404663, 0.640666663646698, 0.6470000147819519, 0.6503333449363708, 0.6539999842643738, 0.6576666831970215, 0.6613333225250244, 0.6629999876022339, 0.6676666736602783, 0.6696666479110718, 0.6736666560173035, 0.675000011920929, 0.675000011920929, 0.6766666769981384, 0.6779999732971191, 0.6800000071525574, 0.6813333630561829, 0.6830000281333923, 0.6846666932106018, 0.687333345413208, 0.6886666417121887, 0.6899999976158142, 0.6909999847412109, 0.6916666626930237, 0.6913333535194397, 0.6943333148956299, 0.6956666707992554, 0.6959999799728394, 0.6973333358764648, 0.6966666579246521, 0.7003333568572998, 0.699999988079071, 0.7006666660308838, 0.7009999752044678, 0.7013333439826965, 0.7023333311080933]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 6, 1, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 50, 88, 75, 33, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6854285597801208, "mapping_values": [1, 11, 11, 5, 6, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.132166844821326, 1.4530953755310703, 0.9700876007998357, 1.1059539090089667, 1.34516346933284, 2.742955352935368, NaN, NaN], "accuracy": [0.34764233231544495, 0.5263505578041077, 0.6490556001663208, 0.6110157370567322, 0.5676925182342529, 0.505877673625946, 0.10276053100824356, 0.09998679161071777], "val_loss": [1.4026423863002233, 0.6859423773629325, 0.5882449150085449, 0.7320601088660104, 1.1428792817252023, 35.23199898856027, NaN, NaN], "val_accuracy": [0.47200000286102295, 0.7166666388511658, 0.7403333187103271, 0.6916666626930237, 0.6736666560173035, 0.052666667848825455, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 4, 6, 8, 1, 4, 6, 8, 2, 9, 1, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [37, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [9, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.38942858576774597, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.pow(alpha, tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5074809563866918, 2.1737084534221465, 2.9567966583051923, 2.3077471484880974, 2.303987730889351, 2.3027936265043785], "accuracy": [0.24422137439250946, 0.2218993455171585, 0.1266675442457199, 0.09655263274908066, 0.10157178342342377, 0.09628847241401672], "val_loss": [1.3988769054412842, 4.089887619018555, 1.9805233819144112, 1.9750047411237444, 1.9734315872192383, 1.9730990273611886], "val_accuracy": [0.42266666889190674, 0.16099999845027924, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 6, 1, 1, 6, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3817142844200134, "mapping_values": [1, 18, 18, 12, 6, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5072014935658102, 2.5271726609724956, 2.304458693049729, 2.3032666708515808, 2.303156935669538, 2.3030403217446174], "accuracy": [0.2440892904996872, 0.21120063960552216, 0.10011887550354004, 0.09972262382507324, 0.0944393053650856, 0.09826971590518951], "val_loss": [1.4087190968649728, 1.975607054574149, 1.9740335600716727, 1.9736899648393904, 1.9735919407435827, 1.9735638754708427], "val_accuracy": [0.41333332657814026, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10433333367109299, 0.11766666918992996]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 9, 6, 2, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 1, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [2, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.36057141423225403, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.507046839926678, 3.7800415535298133, 2.312891363294574, 2.3047983889818475, 2.3035114263704095, 2.3037994372421142], "accuracy": [0.24395720660686493, 0.1978602558374405, 0.09932637959718704, 0.09245806187391281, 0.11662924289703369, 0.09826971590518951], "val_loss": [1.4283194541931152, 1.9896119662693568, 1.9766486712864466, 1.9734093121119909, 1.9740994998386927, 1.974017551967076], "val_accuracy": [0.3943333327770233, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10433333367109299, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 1, 6, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 1, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [96, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.34314286708831787, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.507150853361987, 2.070777420921411, 2.240522918290529, 2.735714291694882, 2.3060860130308547, 2.3036008136871704], "accuracy": [0.2440892904996872, 0.240919291973114, 0.16299036145210266, 0.1554616242647171, 0.1014397069811821, 0.10328886657953262], "val_loss": [1.472510474068778, 1.96529940196446, 1.977804388318743, 1.978830201285226, 1.974449838910784, 1.9738240923200334], "val_accuracy": [0.40033334493637085, 0.12099999934434891, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 2, 8, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 2, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 11, 9, 6, 3, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), tf.math.add(sigma, alpha))))), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1262712925672531, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 2, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 50, 88, 75, 33, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [0, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07172103971242905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 6, 1, 1, 2, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [98, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 2, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024503928385927, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 6, 1, 1, 2, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [96, 22, 62, 4, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 1, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024503928385927, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [86], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 6, 1, 1, 2, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 0, 0, 1, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 50, 88, 75, 33, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [93], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.88464947940966, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21265354752540588, 0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [18.810189383370535, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 0, 6, 8, 1, 4, 5, 4, 2, 9, 1, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [69, 22, 62, 86, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 4, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303870342285122, 2.302965871221149, 2.3046105140078383, 2.3076762458384077, 2.309813621919295, 2.313646144839231, 2.3131359701757463, 2.3204068909893105, 2.3257376746478853, 2.3379915085262106, 2.353380634674165, 2.4864297855358553, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08598599582910538, 0.09430722147226334, 0.09126931428909302, 0.08374059200286865, 0.07845727354288101, 0.07991018146276474, 0.08426892012357712, 0.07740060985088348, 0.07251353561878204, 0.07674019038677216, 0.07858935743570328, 0.08308017253875732, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9721535273960658, 1.9733038629804338, 1.9747958183288574, 1.9764558928353446, 1.9784505707877023, 1.9808014460972376, 1.9829555920192175, 1.9859636170523507, 1.9903667994907923, 1.9990804536002023, 2.0190350668770924, 25.760668073381698, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03033333271741867, 0.02800000086426735, 0.021666666492819786, 0.022333333268761635, 0.028999999165534973, 0.038333334028720856, 0.047333333641290665, 0.06300000101327896, 0.07833333313465118, 0.09366666525602341, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 2, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 50, 88, 75, 33, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06314285844564438, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302677188771764, 2.299936558954342, 2.299552927715053, 2.300191715078237, 2.299806979983915, 2.2999986321493746, 2.2984032659262335, 2.2997924416151188, 2.2993050956486742, 2.3002056692884487, 2.3000392899647397, 2.3003280136358817, 2.2995213192247084, 2.2997186845555957, 2.300747502324068], "accuracy": [0.0878351628780365, 0.1018359512090683, 0.1022322028875351, 0.09760929644107819, 0.09285431355237961, 0.10210011899471283, 0.09813763201236725, 0.0936468094587326, 0.1026284471154213, 0.0952318087220192, 0.09628847241401672, 0.08981640636920929, 0.10210011899471283, 0.09787346422672272, 0.09034473448991776], "val_loss": [1.9700852121625627, 1.9696399143763952, 1.9694726126534599, 1.9693428448268346, 1.9693405968802316, 1.9693074907575334, 1.9693981579371862, 1.9693943432399206, 1.969398089817592, 1.9694058554513114, 1.9695289475577218, 1.9695969309125627, 1.9698029926845007, 1.970087664467948, 1.9702858243669783], "val_accuracy": [0.04800000041723251, 0.05400000140070915, 0.058666665107011795, 0.06466666609048843, 0.06700000166893005, 0.07333333045244217, 0.07433333247900009, 0.07733333110809326, 0.07800000160932541, 0.0793333351612091, 0.07733333110809326, 0.07566666603088379, 0.07733333110809326, 0.07599999755620956, 0.07366666942834854]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 4, 6, 8, 1, 4, 5, 4, 2, 9, 1, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 1, 0, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [2, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [35], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032430641056916, 2.3011640312334394, 2.3012122999266107, 2.302198127276232, 2.3020283313333523, 2.302634840329026], "accuracy": [0.08770307898521423, 0.09734513610601425, 0.09826971590518951, 0.09100515395402908, 0.08875974267721176, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 4, 6, 2, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [40, 22, 62, 75, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [59], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032430641056916, 2.3011640312334394, 2.3012122999266107, 2.302198127276232, 2.3020283313333523, 2.302634840329026], "accuracy": [0.08770307898521423, 0.09734513610601425, 0.09826971590518951, 0.09100515395402908, 0.08875974267721176, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 4, 6, 2, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [96, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [6, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032430641056916, 2.3011640312334394, 2.3012122999266107, 2.302198127276232, 2.3020283313333523, 2.302634840329026], "accuracy": [0.08770307898521423, 0.09734513610601425, 0.09826971590518951, 0.09100515395402908, 0.08875974267721176, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 1, 1, 9, 4, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 0, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032430641056916, 2.3011640312334394, 2.3012122999266107, 2.302198127276232, 2.3020283313333523, 2.302634840329026], "accuracy": [0.08770307898521423, 0.09734513610601425, 0.09826971590518951, 0.09100515395402908, 0.08875974267721176, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]