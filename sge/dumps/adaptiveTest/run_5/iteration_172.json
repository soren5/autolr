[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 3, 1, 8, 3, 2, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 1, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.774571418762207, "mapping_values": [1, 42, 42, 24, 18, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2833794389560222, 2.2308303452344256, 2.150672003105253, 2.013598741998195, 1.8143184558984042, 1.5958758080404007, 1.4208898353633344, 1.288530974670912, 1.1816455840182705, 1.1141551192001093, 1.051083617962394, 1.0210758822075428, 0.9752047067509824, 0.9418500793718658, 0.9125268808319396, 0.9039008076149065, 0.8783460656618162, 0.8666821711287916, 0.8485952403252198, 0.8344554194306906, 0.8182242604499291, 0.8063637113857736, 0.7896240298081352, 0.786777090623221, 0.7757894097617147, 0.7703463268506765, 0.758693299108036, 0.745173003931465, 0.7452078988728128, 0.7394964332515065, 0.7339188477161963, 0.7432435091775343, 0.7187555541987148, 0.7196065777911014, 0.7070022956522906, 0.7084164591340057, 0.7022426659798562, 0.6952619126617412, 0.6919635959336661, 0.6984856955568316, 0.6834529336685077, 0.6817553355362846, 0.6760441385098358], "accuracy": [0.14014001190662384, 0.2631092369556427, 0.35266146063804626, 0.4089288115501404, 0.4539690911769867, 0.4893673360347748, 0.5255580544471741, 0.5564654469490051, 0.5933166146278381, 0.6110157370567322, 0.6272619366645813, 0.6412627100944519, 0.656980574131012, 0.6563201546669006, 0.6704530715942383, 0.677189290523529, 0.6865671873092651, 0.6901333928108215, 0.6948884129524231, 0.6935675740242004, 0.6991150379180908, 0.7058512568473816, 0.7123233675956726, 0.7136441469192505, 0.7189275026321411, 0.7194558382034302, 0.7255316376686096, 0.7268524765968323, 0.7290979027748108, 0.7309470176696777, 0.7309470176696777, 0.7281733155250549, 0.7400607466697693, 0.739400327205658, 0.7429665923118591, 0.7364945411682129, 0.7403249144554138, 0.748778223991394, 0.748249888420105, 0.7456082701683044, 0.7518161535263062, 0.7500990629196167, 0.7559106945991516], "val_loss": [1.9259324073791504, 1.8656497682843889, 1.76259183883667, 1.5927886962890625, 1.3679377010890417, 1.1524902071271623, 0.9974521228245327, 0.8898734705788749, 0.8149946928024292, 0.7634772402899606, 0.7232204505375454, 0.7009985957826886, 0.673606242452349, 0.6552933965410505, 0.637857266834804, 0.6248989445822579, 0.6160404852458409, 0.6114431279046195, 0.5951916319983346, 0.5833085605076381, 0.5781639814376831, 0.5717806986400059, 0.5650820732116699, 0.5619533743177142, 0.5529204096112933, 0.550615668296814, 0.5429275206157139, 0.5366630043302264, 0.5338423763002668, 0.5292064462389264, 0.5251061575753349, 0.5248962129865374, 0.5238519906997681, 0.51662164075034, 0.5136833701814923, 0.5089962482452393, 0.5070153304508754, 0.5039488077163696, 0.502078754561288, 0.5039932387215751, 0.49593465668814524, 0.4947580780301775, 0.49542462825775146], "val_accuracy": [0.36800000071525574, 0.46433332562446594, 0.515666663646698, 0.5583333373069763, 0.6000000238418579, 0.6343333125114441, 0.6660000085830688, 0.6916666626930237, 0.6990000009536743, 0.7099999785423279, 0.7089999914169312, 0.7143333554267883, 0.7329999804496765, 0.7323333621025085, 0.7419999837875366, 0.7393333315849304, 0.7473333477973938, 0.7433333396911621, 0.7423333525657654, 0.7516666650772095, 0.7543333172798157, 0.7603333592414856, 0.7606666684150696, 0.7639999985694885, 0.7673333287239075, 0.7676666378974915, 0.7723333239555359, 0.7696666717529297, 0.7646666765213013, 0.7706666588783264, 0.7699999809265137, 0.7763333320617676, 0.7723333239555359, 0.7739999890327454, 0.7743333578109741, 0.7710000276565552, 0.7820000052452087, 0.7860000133514404, 0.7746666669845581, 0.7763333320617676, 0.7786666750907898, 0.7839999794960022, 0.7749999761581421]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7614285945892334, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.297877847526398, 2.285703164585483, 2.2737862720560043, 2.2606601151083563, 2.2481812437873994, 2.2338345309668024, 2.2195886146941946, 2.1999259688488606, 2.1783538276902625, 2.1537471790323797, 2.127950683671092, 2.0935608097401905, 2.055968333292064, 2.0180504452739774, 1.9668821502182194, 1.920803035743138, 1.8699785624166378, 1.81479356141217, 1.7510979603688164, 1.6981691196531337, 1.6420227336593827, 1.5832144771631855, 1.5287659251694634, 1.4813413875229906, 1.4353985671653189, 1.3925816094508465, 1.359930910375754, 1.3212978781143498, 1.2985241610250295, 1.2717297840521493, 1.243981877857778, 1.2286796874342467, 1.195657999980656, 1.1796534268642855, 1.1568012343043774, 1.1406573697072389, 1.1192721637201315, 1.0946266183669242, 1.0875099232609025, 1.0791885499169467, 1.0634690479847417, 1.045112162989837, 1.0333570596517085, 1.021204758282461, 1.0244598501724669, 0.9992480306593245, 1.0041267723219034, 0.984050778775183, 0.9616776851851313, 0.9720054992422089, 0.964159354549814, 0.9507119117112538, 0.9463904702573672, 0.9424756217579154, 0.9260289228319917, 0.9251325196121442, 0.9172737505284472, 0.9168872583291912, 0.9012220354128067, 0.9020398184214254, 0.8918231230023955, 0.8892214067025412, 0.8792629708640406, 0.88269332294939, 0.8743389036992065, 0.8775497003159645, 0.8596634163895556, 0.8558940466416116, 0.8568126722381036, 0.8530356094286411, 0.8436203642748665, 0.8350710197367988, 0.8498711161263284, 0.8436192862267319, 0.8350609555189021, 0.8314368455889612, 0.826938202226513, 0.8390495122195455, 0.8214731984418129, 0.8161191972428467, 0.8087155169436739, 0.8115398806587832, 0.8034707640833182, 0.7986525087749575, 0.8031746056164575, 0.7976620873565986, 0.7886626571239718, 0.7968249026306584, 0.7904583753265363, 0.8036099139646753, 0.7945020296444211, 0.7775044012000422, 0.7917163471945083, 0.7765364398132494, 0.77703521248057, 0.7740515890988723, 0.7715065042576722, 0.7705083359832446, 0.7828751683959462, 0.7700454678439099], "accuracy": [0.10355303436517715, 0.13234710693359375, 0.16523577272891998, 0.19812442362308502, 0.2312772423028946, 0.2537313401699066, 0.2813366651535034, 0.3090741038322449, 0.3349623680114746, 0.3520010709762573, 0.3619072735309601, 0.3829084634780884, 0.39466384053230286, 0.404570072889328, 0.42266544699668884, 0.4303262531757355, 0.44128912687301636, 0.4492141008377075, 0.46730947494506836, 0.4699511229991913, 0.48289525508880615, 0.4982168674468994, 0.5074626803398132, 0.518689751625061, 0.5365209579467773, 0.5341434478759766, 0.5493329763412476, 0.5577862858772278, 0.566239595413208, 0.5650508403778076, 0.5695416927337646, 0.5733720660209656, 0.587769091129303, 0.5913353562355042, 0.5954299569129944, 0.6017699241638184, 0.6022982597351074, 0.6164311170578003, 0.6239598393440247, 0.6189407110214233, 0.6254127621650696, 0.6341302394866943, 0.633469820022583, 0.6449610590934753, 0.635979413986206, 0.653150200843811, 0.6411306262016296, 0.6516972780227661, 0.6552634835243225, 0.6561880707740784, 0.6579051613807678, 0.6617355942726135, 0.6586976647377014, 0.6627922058105469, 0.6717738509178162, 0.6708492636680603, 0.6733588576316833, 0.6728305220603943, 0.6740192770957947, 0.6800950765609741, 0.6779817938804626, 0.6853784322738647, 0.6859067678451538, 0.6819442510604858, 0.6860388517379761, 0.6823405027389526, 0.6915863156318665, 0.6865671873092651, 0.6952846646308899, 0.6911900639533997, 0.7004358768463135, 0.6977941989898682, 0.6889446377754211, 0.6935675740242004, 0.698190450668335, 0.6993792057037354, 0.702681303024292, 0.7012283802032471, 0.7047945857048035, 0.7016246318817139, 0.7069079279899597, 0.7079645991325378, 0.709021270275116, 0.7083608508110046, 0.7063795924186707, 0.7091533541679382, 0.709549605846405, 0.7172104120254517, 0.713379979133606, 0.7037379741668701, 0.7079645991325378, 0.7177387475967407, 0.7136441469192505, 0.7180029153823853, 0.7176066637039185, 0.717870831489563, 0.7177387475967407, 0.7202483415603638, 0.7137762308120728, 0.7219653725624084], "val_loss": [1.9598462922232491, 1.9488278797694616, 1.9375029972621374, 1.9255429676600866, 1.9123488834926061, 1.8978376388549805, 1.8815663201468331, 1.8627985545567103, 1.8407487869262695, 1.8155013493129186, 1.7867965698242188, 1.7537054334368025, 1.7158285549708776, 1.673574754170009, 1.6261603491646903, 1.5749707903180803, 1.5204386029924666, 1.4634177684783936, 1.4043893814086914, 1.3461135114942278, 1.288224560873849, 1.2322450365339006, 1.1798199244907923, 1.130610806601388, 1.0857295649392265, 1.0455544335501534, 1.0096707344055176, 0.9766243185315814, 0.9472932815551758, 0.9212337562016079, 0.8972870281764439, 0.8758152212415423, 0.856154033115932, 0.8382281575884137, 0.8215851613453456, 0.8057737350463867, 0.7921026434217181, 0.778634752546038, 0.7668891974857875, 0.7564528839928764, 0.7457727023533413, 0.7366326025554112, 0.7277543033872332, 0.7189228364399501, 0.7115281479699271, 0.7042235817228045, 0.6984262466430664, 0.6916653939655849, 0.6841136557715279, 0.6787554195949009, 0.6727626323699951, 0.6681407179151263, 0.6624577215739659, 0.6584431954792568, 0.6539488009044102, 0.6502334730965751, 0.6460199526378086, 0.6411291360855103, 0.6377554961613247, 0.6338960613523211, 0.6294397456305367, 0.6265316690717425, 0.6227635315486363, 0.6208561488560268, 0.618059515953064, 0.615232024874006, 0.6118146351405552, 0.6086364473615374, 0.6060668230056763, 0.6037674801690238, 0.600807785987854, 0.5976151057652065, 0.596436721937997, 0.5941371236528669, 0.5913230180740356, 0.5896290370396206, 0.587191002709525, 0.585557188306536, 0.5826624461582729, 0.5814076662063599, 0.5779907703399658, 0.5767014367239816, 0.5753556319645473, 0.5742808069501605, 0.5714098215103149, 0.5699159758431571, 0.5683306115014213, 0.5665638106209892, 0.5648283447538104, 0.5640148265021188, 0.5619850499289376, 0.5592827796936035, 0.558796865599496, 0.5574819360460553, 0.556371910231454, 0.5542964594704765, 0.553252032824925, 0.5519726957593646, 0.5514025006975446, 0.5500607660838536], "val_accuracy": [0.11833333224058151, 0.2303333282470703, 0.3166666626930237, 0.3606666624546051, 0.38199999928474426, 0.4046666622161865, 0.4233333468437195, 0.4436666667461395, 0.46033334732055664, 0.47699999809265137, 0.4950000047683716, 0.5193333625793457, 0.531000018119812, 0.5410000085830688, 0.5526666641235352, 0.5630000233650208, 0.5736666917800903, 0.5826666951179504, 0.5913333296775818, 0.593999981880188, 0.6056666374206543, 0.6133333444595337, 0.625333309173584, 0.6383333206176758, 0.6523333191871643, 0.659333348274231, 0.6683333516120911, 0.6746666431427002, 0.6779999732971191, 0.684333324432373, 0.6890000104904175, 0.6916666626930237, 0.6943333148956299, 0.6976666450500488, 0.7003333568572998, 0.7006666660308838, 0.7026666402816772, 0.7046666741371155, 0.7083333134651184, 0.7099999785423279, 0.7110000252723694, 0.7143333554267883, 0.7149999737739563, 0.7133333086967468, 0.7196666598320007, 0.718666672706604, 0.722000002861023, 0.7226666808128357, 0.7250000238418579, 0.7260000109672546, 0.7286666631698608, 0.7293333411216736, 0.731333315372467, 0.7300000190734863, 0.7316666841506958, 0.7329999804496765, 0.731333315372467, 0.734666645526886, 0.7350000143051147, 0.7353333234786987, 0.7383333444595337, 0.737666666507721, 0.7400000095367432, 0.7396666407585144, 0.7406666874885559, 0.7413333058357239, 0.7429999709129333, 0.746666669845581, 0.7403333187103271, 0.7463333606719971, 0.7440000176429749, 0.7483333349227905, 0.7453333139419556, 0.746666669845581, 0.7506666779518127, 0.750333309173584, 0.75, 0.7506666779518127, 0.753000020980835, 0.7540000081062317, 0.7549999952316284, 0.753333330154419, 0.7563333511352539, 0.7553333044052124, 0.7576666474342346, 0.7580000162124634, 0.7563333511352539, 0.7590000033378601, 0.7606666684150696, 0.7590000033378601, 0.7580000162124634, 0.762666642665863, 0.7620000243186951, 0.7603333592414856, 0.7596666812896729, 0.7649999856948853, 0.7636666893959045, 0.7633333206176758, 0.7643333077430725, 0.7663333415985107]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 4, 7, 0, 5, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [0, 1, 2, 0, 2, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 32, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7608571648597717, "mapping_values": [1, 42, 42, 25, 17, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, grad)))), alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.297877847526398, 2.285703133094454, 2.273786191092569, 2.260660083617328, 2.2481813607135894, 2.2338348053481365, 2.2195903016056255, 2.1999296304682354, 2.1783581731688186, 2.153754704915899, 2.1279642327177273, 2.093580121267206, 2.0559926245899374, 2.0180727621473262, 1.9669032499790506, 1.9208275932819143, 1.8699987809482645, 1.8148142678185604, 1.751118217288007, 1.6981892257775328, 1.6420417502571674, 1.5832322952439049, 1.5287840422260102, 1.4813559957546345, 1.4354107968165748, 1.392590995729875, 1.3599410111074985, 1.3213052758923642, 1.2985296324338298, 1.2717356411945613, 1.2439883760000816, 1.228679063077364, 1.1956539185228854, 1.1796441466627876, 1.1568005518780378, 1.1406547641080242, 1.1192647011178343, 1.0946174999348413, 1.0874850525123536, 1.079196661376147, 1.0634645445314397, 1.045106337684855, 1.0333376004632595, 1.0211994279692154, 1.024431299917639, 0.999235916233743, 1.0041129614116178, 0.9840504201789653, 0.9616617358686618, 0.9720109192104136, 0.9641436083032439, 0.9506997271394055, 0.946385295509804, 0.9423930589879713, 0.9259880030585035, 0.9251430554396881, 0.917232637077259, 0.9168973653906325, 0.9012264131539218, 0.9020118331313999, 0.8918784770747028, 0.8892681765093418, 0.8792547900379767, 0.8826781074447465, 0.8743796373607146, 0.8775220450912846, 0.8597339655996833, 0.8558665120590632, 0.8568405710616368, 0.8529788305447353, 0.8436479687360079, 0.8350350713103187, 0.8498533494389682, 0.8436220727025431, 0.8350636779498336, 0.83136251672321, 0.8269143716266457, 0.8389970457171247, 0.8214591662283225, 0.816131669067987, 0.8086822034266835, 0.8115314790727346, 0.8035034704926369, 0.7986391858890183, 0.80322410996249, 0.7975379310153684, 0.7886961502657905, 0.7967522223045199, 0.7904165898804116, 0.8036514634642666, 0.7944962484977344, 0.7774429581326233, 0.7917120062978968, 0.776539104584107, 0.7770597837258166, 0.7740076294727549, 0.771540314970771, 0.7704959725502255, 0.7829265067794965, 0.7700166875786076], "accuracy": [0.10355303436517715, 0.13234710693359375, 0.16523577272891998, 0.1982565075159073, 0.2312772423028946, 0.2538634240627289, 0.2813366651535034, 0.3090741038322449, 0.3349623680114746, 0.3520010709762573, 0.3619072735309601, 0.3831726312637329, 0.39426758885383606, 0.404570072889328, 0.4225333631038666, 0.4303262531757355, 0.4414212107658386, 0.44947826862335205, 0.46730947494506836, 0.4699511229991913, 0.4830273389816284, 0.49808478355407715, 0.5075947642326355, 0.518689751625061, 0.5366530418395996, 0.5341434478759766, 0.5494650602340698, 0.5577862858772278, 0.5663716793060303, 0.5650508403778076, 0.5695416927337646, 0.573107898235321, 0.5876370072364807, 0.5913353562355042, 0.5954299569129944, 0.6017699241638184, 0.602562427520752, 0.6166952848434448, 0.6240919232368469, 0.6188086271286011, 0.6255448460578918, 0.6338660717010498, 0.6332056522369385, 0.6449610590934753, 0.6361114978790283, 0.6530181169509888, 0.6411306262016296, 0.6518293619155884, 0.6560559868812561, 0.6560559868812561, 0.6581693291664124, 0.6619997620582581, 0.6584334969520569, 0.6627922058105469, 0.6715096831321716, 0.6708492636680603, 0.6734909415245056, 0.6724342703819275, 0.6744155287742615, 0.6802271604537964, 0.6781138777732849, 0.6852463483810425, 0.6853784322738647, 0.6818121671676636, 0.6860388517379761, 0.6824725866317749, 0.6914542317390442, 0.6863030195236206, 0.6951525807380676, 0.6917183995246887, 0.7005679607391357, 0.698190450668335, 0.6889446377754211, 0.6936996579170227, 0.6977941989898682, 0.6996433734893799, 0.7028133869171143, 0.7009642124176025, 0.705058753490448, 0.7010962963104248, 0.7067758440971375, 0.7074362635612488, 0.7088891863822937, 0.7084929347038269, 0.7071720957756042, 0.7094175219535828, 0.7092854380607605, 0.7173424959182739, 0.7125874757766724, 0.7034738063812256, 0.7083608508110046, 0.717870831489563, 0.7135120630264282, 0.7182670831680298, 0.7174745798110962, 0.717870831489563, 0.7176066637039185, 0.7205125093460083, 0.713908314704895, 0.7218332886695862], "val_loss": [1.959846360342843, 1.9488276754106795, 1.9375029972621374, 1.9255430357796806, 1.9123496328081404, 1.8978384562901087, 1.8815710203988212, 1.8628037316458566, 1.8407563482012068, 1.8155147688729423, 1.7868152345929826, 1.7537275041852678, 1.715853146144322, 1.6735955306461878, 1.6261828626905168, 1.574988807950701, 1.520458119256156, 1.463437216622489, 1.404409340449742, 1.34613071169172, 1.288241011755807, 1.2322606018611364, 1.1798336846487862, 1.1306232384272985, 1.0857417583465576, 1.045557907649449, 1.009674310684204, 0.9766338212149483, 0.9473065308162144, 0.9212466648646763, 0.8972970758165631, 0.8758133820125035, 0.8561560937336513, 0.8382247856685093, 0.8215766634259906, 0.8057733263288226, 0.7920928342001778, 0.7786202601024083, 0.766877429825919, 0.7564401115689959, 0.7457535948072161, 0.7366103955677578, 0.7277286563600812, 0.7189012254987445, 0.7115214211600167, 0.7042338337217059, 0.6984201839991978, 0.691660898072379, 0.6841218641826085, 0.6787656715938023, 0.6727842092514038, 0.6681800740105766, 0.6624933140618461, 0.6584434509277344, 0.6539350407464164, 0.6502062593187604, 0.6460029057094029, 0.6411146606717791, 0.6377837317330497, 0.6338973896844047, 0.6294623272759574, 0.6265396560941424, 0.6227765764508929, 0.6208770786012922, 0.6181007112775531, 0.6152694565909249, 0.6118560518537249, 0.6086669819695609, 0.6060795954295567, 0.6037688085011074, 0.6007918289729527, 0.5976145437785557, 0.5964040756225586, 0.5941083090645927, 0.5913192885262626, 0.5895827668053764, 0.587184020451137, 0.5855362074715751, 0.5826145580836705, 0.581374968801226, 0.5779607466288975, 0.5766545023236956, 0.5753373077937535, 0.5742264815739223, 0.5713730880192348, 0.5698794978005546, 0.5683012008666992, 0.5665123292378017, 0.5647593055452619, 0.5639769349779401, 0.5619700125285557, 0.5592222213745117, 0.5587625673839024, 0.557463356426784, 0.5563850062234061, 0.5542633022580828, 0.5532012156077794, 0.5519781453268868, 0.5514199733734131, 0.5500134740556989], "val_accuracy": [0.11833333224058151, 0.2303333282470703, 0.3166666626930237, 0.3606666624546051, 0.38199999928474426, 0.4046666622161865, 0.4233333468437195, 0.4436666667461395, 0.46033334732055664, 0.476666659116745, 0.4946666657924652, 0.5193333625793457, 0.5306666493415833, 0.5410000085830688, 0.5526666641235352, 0.5630000233650208, 0.5733333230018616, 0.5826666951179504, 0.5913333296775818, 0.593999981880188, 0.6056666374206543, 0.6133333444595337, 0.625333309173584, 0.6383333206176758, 0.6526666879653931, 0.6596666574478149, 0.6683333516120911, 0.6746666431427002, 0.6776666641235352, 0.684333324432373, 0.6890000104904175, 0.6916666626930237, 0.6940000057220459, 0.6976666450500488, 0.7003333568572998, 0.7006666660308838, 0.7023333311080933, 0.7043333053588867, 0.7083333134651184, 0.7099999785423279, 0.7103333473205566, 0.7143333554267883, 0.7149999737739563, 0.7133333086967468, 0.7196666598320007, 0.718666672706604, 0.721666693687439, 0.7226666808128357, 0.7250000238418579, 0.7260000109672546, 0.7286666631698608, 0.7293333411216736, 0.7310000061988831, 0.7303333282470703, 0.7316666841506958, 0.7329999804496765, 0.731333315372467, 0.734333336353302, 0.7350000143051147, 0.7353333234786987, 0.7390000224113464, 0.737666666507721, 0.7400000095367432, 0.7396666407585144, 0.7406666874885559, 0.7416666746139526, 0.7426666617393494, 0.746666669845581, 0.7406666874885559, 0.746666669845581, 0.7440000176429749, 0.7476666569709778, 0.7453333139419556, 0.7473333477973938, 0.7509999871253967, 0.7506666779518127, 0.749666690826416, 0.750333309173584, 0.7536666393280029, 0.7540000081062317, 0.7543333172798157, 0.753333330154419, 0.7563333511352539, 0.7549999952316284, 0.7573333382606506, 0.7580000162124634, 0.7559999823570251, 0.7593333125114441, 0.7609999775886536, 0.7590000033378601, 0.7586666941642761, 0.762666642665863, 0.7620000243186951, 0.7603333592414856, 0.7593333125114441, 0.765666663646698, 0.7633333206176758, 0.7633333206176758, 0.7646666765213013, 0.765999972820282]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 2, 6, 2, 3, 2, 1, 2, 2, 7, 0, 3, 1, 3, 0, 9, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [2, 2, 1, 2, 2, 1, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.44285714626312256, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2669370663778547, 2.313465150182651, 2.290155969795345, 2.2960895397061325, 2.2988503534465403, 2.380428765412445, 2.285661558291821, 2.5530284996660018], "accuracy": [0.2145027071237564, 0.10394927859306335, 0.148064985871315, 0.20723815262317657, 0.1146479994058609, 0.11887465417385101, 0.14093250036239624, 0.2188614457845688], "val_loss": [2.0193868364606584, 1.9727251870291573, 1.869680540902274, 1.9807462011064803, 1.8745829037257604, 1.972226279122489, 1.7495192800249373, 1.9800215448651994], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.39133334159851074, 0.10066666454076767, 0.21166667342185974, 0.10899999737739563, 0.1653333306312561, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 2, 6, 2, 1, 2, 3, 9, 2, 7, 0, 3, 1, 3, 0, 9, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [0, 0, 0, 0, 2, 1, 1, 1, 2, 1, 0, 2, 2, 0, 2, 1, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.44285714626312256, "mapping_values": [1, 34, 34, 20, 14, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), alpha)))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))), tf.math.subtract(tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.265176520198328, 2.313279718125202, 2.2963183457431633, 2.2800384679443377, 2.2691769976232345, 2.305268153632873, 2.3032892670818463, 2.3037525485802983], "accuracy": [0.21503104269504547, 0.10249637067317963, 0.1282525360584259, 0.17778365314006805, 0.16061286628246307, 0.09694888442754745, 0.09998679161071777, 0.09589222073554993], "val_loss": [2.0178940636771068, 1.9734779766627721, 1.9225941385541643, 1.9184649331229073, 1.9764306885855538, 1.9740240233285087, 1.9737157140459334, 1.973656245640346], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.37466666102409363, 0.18700000643730164, 0.09833333641290665, 0.10100000351667404, 0.09833333641290665, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 5, 2, 6, 2, 3, 2, 1, 2, 2, 7, 0, 3, 4, 3, 0, 5, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 1, 0, 3, 1], [3, 10, 18, 42, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4108571410179138, "mapping_values": [1, 38, 38, 21, 17, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), grad)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2646133784431557, 2.3131095957148267, 2.2840152997004437, 2.2710751126455264, 2.3020401919884783, 2.287265679776755, 2.304507745995482, 2.2909903879320583], "accuracy": [0.2148989588022232, 0.1014397069811821, 0.15334829688072205, 0.1468762308359146, 0.10091137140989304, 0.15493330359458923, 0.09760929644107819, 0.1394795924425125], "val_loss": [2.018941811152867, 1.9721360887799944, 1.733929021017892, 1.9747304916381836, 1.9489075115748815, 1.9756646156311035, 1.9732334954398019, 1.720829963684082], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.460999995470047, 0.09799999743700027, 0.15533334016799927, 0.0989999994635582, 0.0989999994635582, 0.20399999618530273]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4011428654193878, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2646681549778673, 2.312725660965002, 2.281880045642533, 2.3787146041957286, 2.3044499050057747, 2.295857861939202, 2.0939397947930893, 2.303153388708999], "accuracy": [0.21503104269504547, 0.1014397069811821, 0.15215955674648285, 0.14093250036239624, 0.1002509593963623, 0.11913882195949554, 0.24620261788368225, 0.10566636174917221], "val_loss": [2.0165929113115584, 1.9720708983285087, 1.6830509730747767, 1.9749870300292969, 1.9734498432704382, 1.8021552222115653, 1.977414812360491, 1.9410905156816756], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.4359999895095825, 0.10066666454076767, 0.09799999743700027, 0.22499999403953552, 0.0989999994635582, 0.17233332991600037]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [60, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.36657142639160156, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2661381720740796, 2.3126803729606893, 2.2909930801001113, 2.23966384116669, 2.5419449335422497, 2.3057741815891752, 2.303477031868746, 2.3030518389900743], "accuracy": [0.2141064554452896, 0.10077928751707077, 0.14476291835308075, 0.1784440577030182, 0.16259410977363586, 0.09457138925790787, 0.09417514503002167, 0.09351472556591034], "val_loss": [2.0155080386570523, 1.9728196007864816, 1.8563741275242396, 1.8669584819248743, 1.9789533615112305, 1.9746618952069963, 1.973935263497489, 1.9736635344369071], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.4153333306312561, 0.1733333319425583, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 9, 6, 2, 3, 0, 1, 2, 2, 7, 0, 3, 1, 6, 0, 9, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 1, 2, 3, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.34057143330574036, "mapping_values": [1, 35, 35, 21, 14, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(grad), alpha), grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha))))), tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2662310080363874, 2.3133724720533797, 2.293412091693921, 2.2183107876302133, 2.3307162212295744, 2.3047039412771944, 2.303192354102003, 2.303074311995944], "accuracy": [0.21516312658786774, 0.10077928751707077, 0.13657376170158386, 0.2122572958469391, 0.14819706976413727, 0.09932637959718704, 0.09615638852119446, 0.09721305221319199], "val_loss": [2.018679618835449, 1.9731275013514928, 1.8767736979893275, 1.9748461587088448, 1.9764417239597865, 1.9739792687552316, 1.9736475944519043, 1.973461627960205], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.38233333826065063, 0.12166666984558105, 0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 2, 2, 1, 2, 6, 2, 3, 2, 1, 2, 2, 7, 0, 3, 1, 3, 0, 9, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [31, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4], [2, 0, 1, 5, 3, 4], [8], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.13028571009635925, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020395327552814, 2.3000591084973183, 2.298956239480132, 2.2974469834598397, 2.297619684985474, 2.297136550975624, 2.2976326886704728, 2.296541636283954, 2.2962927366716985, 2.2955468086408444, 2.2958592346331477, 2.2954352740614152, 2.2954367020221165, 2.296029299131521, 2.2958199626749787, 2.2966171755782523, 2.2966803483455376], "accuracy": [0.09377889335155487, 0.0936468094587326, 0.09959053993225098, 0.10328886657953262, 0.10487385839223862, 0.10645885765552521, 0.10540219396352768, 0.108440101146698, 0.11887465417385101, 0.11240258812904358, 0.11861048638820648, 0.1142517477273941, 0.11570466309785843, 0.11134592443704605, 0.11636507511138916, 0.11517632752656937, 0.11372341960668564], "val_loss": [1.9695090566362654, 1.968320710318429, 1.9675246647426061, 1.9671196937561035, 1.9666786875043596, 1.9664812769208635, 1.9661175864083427, 1.9658922467912947, 1.9657392501831055, 1.9657460621425085, 1.9658102989196777, 1.9660049165998186, 1.9662506239754813, 1.9664172445024763, 1.9665882928030831, 1.9668311391557967, 1.9669805254255022], "val_accuracy": [0.05133333429694176, 0.06066666543483734, 0.07433333247900009, 0.08233333379030228, 0.09099999815225601, 0.09366666525602341, 0.10400000214576721, 0.11766666918992996, 0.12166666984558105, 0.12600000202655792, 0.12666666507720947, 0.12999999523162842, 0.1289999932050705, 0.12933333218097687, 0.12800000607967377, 0.12533333897590637, 0.12666666507720947]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [51, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 0, 0], [3, 4, 9], [2, 6, 1, 5, 3, 4], [90], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 1, 5, 4, 3, 1, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302829544825435, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 0, 2, 1, 3, 2, 7, 0, 5, 6, 2, 3, 9, 5, 5, 2, 3, 5, 8, 0, 5, 4, 2], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 0, 0, 2, 0, 2, 0], [40, 28, 79, 92, 41, 36, 93], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 6, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 42, 27, 15, 7, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.square(alpha)))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [311.78103199718083, 5012.035111749397, 22610.467153653746, 61321.816135376765, 128410.98000594373, 237617.0459896315], "accuracy": [0.10447761416435242, 0.09813763201236725, 0.09747721254825592, 0.10236428678035736, 0.09866596013307571, 0.09509972482919693], "val_loss": [1058.3425990513392, 7743.354910714285, 25526.282366071428, 59858.341517857145, 116192.80803571429, 199982.54910714287], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 4, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [40, 14, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [311.78103199718083, 5012.035111749397, 22610.467153653746, 61321.816135376765, 128410.98000594373, 237617.0459896315], "accuracy": [0.10447761416435242, 0.09813763201236725, 0.09747721254825592, 0.10236428678035736, 0.09866596013307571, 0.09509972482919693], "val_loss": [1058.3425990513392, 7743.354910714285, 25526.282366071428, 59858.341517857145, 116192.80803571429, 199982.54910714287], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 1, 2], [2, 0, 1, 5, 3, 4], [13], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 11, 7, 5, 2, 1, 5, 3, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))))))), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302829544825435, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 1, 4, 6, 5, 3, 2, 4, 9, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 24, 14, 7, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [16270.835576392876, 307844.1951030247, 1435324.2755250297, 3941011.931977282, 8305198.131290451, 15429006.581164971], "accuracy": [0.10487385839223862, 0.09813763201236725, 0.09734513610601425, 0.1022322028875351, 0.09866596013307571, 0.0952318087220192], "val_loss": [61677.39955357143, 486162.78571428574, 1633209.392857143, 3862564.4285714286, 7533974.571428572, 13007166.857142856], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 2, 6, 2, 3, 2, 0, 2, 2, 3, 2, 3, 1, 3, 0, 9, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [0, 2, 2, 0, 2, 2, 2, 3, 2, 1, 0, 2, 2, 0, 2, 1, 2, 3, 1], [40, 33, 29, 92, 41, 36], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [45], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302829544825435, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [3, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027649315640186, 2.3023717707300295, 2.30254276811864, 2.3014679673073584, 2.3026333660450216, 2.3021868389705546], "accuracy": [0.09232597798109055, 0.08770307898521423, 0.09206181764602661, 0.09219389408826828, 0.09087307006120682, 0.08968432247638702], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 5, 2, 6, 2, 3, 2, 1, 2, 3, 7, 0, 3, 1, 3, 0, 9, 5, 2, 6, 6, 5, 0, 6, 9, 8, 8, 3], [0, 2, 2, 0, 2, 2, 1, 3, 0, 1, 0, 2, 2, 0, 2, 1, 2, 2, 1], [3, 10, 18, 88, 60, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 42, 42, 24, 18, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027649315640186, 2.3023717707300295, 2.30254276811864, 2.3014679673073584, 2.3026333660450216, 2.3021868389705546], "accuracy": [0.09232597798109055, 0.08770307898521423, 0.09206181764602661, 0.09219389408826828, 0.09087307006120682, 0.08968432247638702], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 2, 2, 1, 2, 6, 2, 3, 2, 1, 2, 2, 7, 0, 3, 1, 3, 0, 9, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [2, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 1, 2, 3, 1], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 3, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027649315640186, 2.3023717707300295, 2.30254276811864, 2.3014679673073584, 2.3026333660450216, 2.3021868389705546], "accuracy": [0.09232597798109055, 0.08770307898521423, 0.09206181764602661, 0.09219389408826828, 0.09087307006120682, 0.08968432247638702], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]