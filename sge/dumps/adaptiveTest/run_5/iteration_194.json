[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 2, 1, 2, 6, 5, 4, 8, 5, 5, 5, 4, 8, 4, 0, 2, 8, 8, 4, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 2, 0, 2, 2, 1, 0, 1, 2, 2, 1, 0, 2, 1, 2, 0, 2, 1], [90, 44, 89, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7705714106559753, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.284386815049818, 2.2303244225211416, 2.1532301233901543, 2.021201818957069, 1.824041008162004, 1.6037886334196167, 1.4188294099731658, 1.2760033151177903, 1.1928300083651913, 1.1103930600079028, 1.0550532122770588, 1.0046473801049416, 0.9748022295401758, 0.9366434039204836, 0.912502442589053, 0.8987031397550586, 0.8771610839129785, 0.8506172942510607, 0.8296798638081302, 0.8338048275530126, 0.8111637158794426, 0.8002522439532166, 0.8018352753529381, 0.7892465156775739, 0.7758899063812728, 0.7658525454590207, 0.7588980195308485, 0.7582017962785523, 0.7549935912238829, 0.743228442956113, 0.7347440239366303, 0.7270110755658908, 0.7233040872707879, 0.7206092230742398, 0.7100382262390398, 0.7198657061303879, 0.7045121906203932], "accuracy": [0.13789460062980652, 0.27037379145622253, 0.3471139967441559, 0.40787214040756226, 0.4496103525161743, 0.4912164807319641, 0.5355963706970215, 0.5621450543403625, 0.5847312211990356, 0.6126006841659546, 0.62660151720047, 0.6440364718437195, 0.652621865272522, 0.6649055480957031, 0.6791704893112183, 0.6802271604537964, 0.6856426000595093, 0.700171709060669, 0.7053229212760925, 0.6947563290596008, 0.7082287669181824, 0.7127195596694946, 0.7103421092033386, 0.7135120630264282, 0.7162858247756958, 0.7199841737747192, 0.7231541275978088, 0.7223616242408752, 0.7259278893470764, 0.7276449799537659, 0.7321357727050781, 0.7293620109558105, 0.7400607466697693, 0.7349095344543457, 0.7413815855979919, 0.7337207794189453, 0.7411174178123474], "val_loss": [1.9264212335859026, 1.866405963897705, 1.763954026358468, 1.5977362905229842, 1.3747970717293876, 1.1578238691602434, 0.9973327772957938, 0.8883587632860456, 0.8168175901685443, 0.7635798794882638, 0.7238023621695382, 0.6981747491019112, 0.6738890579768589, 0.6554139511925834, 0.6406612736838204, 0.6281966311591012, 0.6195673942565918, 0.6043071235929217, 0.5936630283083234, 0.5864363738468715, 0.5817570175443377, 0.5717578785760062, 0.5670288119997297, 0.5605103118079049, 0.5569265910557338, 0.549107381275722, 0.5436423165457589, 0.5415018115724836, 0.5388247455869403, 0.5408344779695783, 0.5304062025887626, 0.529282672064645, 0.5212193557194301, 0.5171425512858799, 0.5127996206283569, 0.5119269234793526, 0.5078945330211094], "val_accuracy": [0.3619999885559082, 0.43566668033599854, 0.500333309173584, 0.5653333067893982, 0.5963333249092102, 0.6430000066757202, 0.6643333435058594, 0.6726666688919067, 0.6953333616256714, 0.7059999704360962, 0.7103333473205566, 0.7223333120346069, 0.7203333377838135, 0.7303333282470703, 0.7319999933242798, 0.7269999980926514, 0.7450000047683716, 0.7456666827201843, 0.7446666955947876, 0.75, 0.7549999952316284, 0.7559999823570251, 0.762333333492279, 0.750333309173584, 0.7609999775886536, 0.7573333382606506, 0.762666642665863, 0.7613333463668823, 0.7580000162124634, 0.7543333172798157, 0.7743333578109741, 0.778333306312561, 0.7760000228881836, 0.7760000228881836, 0.7739999890327454, 0.7763333320617676, 0.7760000228881836]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 6, 3, 8, 0, 2, 1, 4, 2, 5, 5, 5, 4, 3, 4, 0, 2, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7594285607337952, "mapping_values": [1, 26, 26, 16, 10, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.284386846540847, 2.230324399973565, 2.1532268441348514, 2.021192505312098, 1.823989893246667, 1.6037374571597556, 1.4188174428783624, 1.276024364414248, 1.1928514799720906, 1.1103960717626613, 1.055068174389139, 1.0046348319691658, 0.9749073475784299, 0.9367063953073159, 0.912534465438355, 0.8986988040229759, 0.877216528608594, 0.8506058551742102, 0.8296865814271589, 0.8337981761202536, 0.811127168643177, 0.8001995803484465, 0.80167915896339, 0.7892752109958259, 0.77598403564077, 0.7660396735681724, 0.7585728304056428, 0.7582768293466897], "accuracy": [0.13789460062980652, 0.27037379145622253, 0.3471139967441559, 0.40787214040756226, 0.44987452030181885, 0.4913485646247864, 0.5352001190185547, 0.5620129704475403, 0.5852595567703247, 0.6128648519515991, 0.6269977688789368, 0.6439043879508972, 0.6527539491653442, 0.6653017997741699, 0.6789063811302185, 0.6798309087753296, 0.6860388517379761, 0.7000396251678467, 0.7053229212760925, 0.6944921612739563, 0.7087571024894714, 0.7120591998100281, 0.7106062769889832, 0.7125874757766724, 0.7169462442398071, 0.719852089881897, 0.7223616242408752, 0.7226257920265198], "val_loss": [1.9264212335859026, 1.8664065769740514, 1.7639472143990653, 1.5977098260607039, 1.3747077669416154, 1.1577696459633964, 0.997338056564331, 0.888423238481794, 0.8167726652962821, 0.7636130707604545, 0.7237940345491681, 0.6982035126004901, 0.67389030115945, 0.6554104770932879, 0.640649574143546, 0.6280666930334908, 0.6195912872041974, 0.6043264865875244, 0.5936251538140433, 0.5862749133791242, 0.5819650547845023, 0.5717434201921735, 0.5670047146933419, 0.5604637861251831, 0.5567945923124041, 0.5490317004067558, 0.5433638266154698, 0.5416269642966134], "val_accuracy": [0.3619999885559082, 0.43566668033599854, 0.5006666779518127, 0.5653333067893982, 0.5963333249092102, 0.6430000066757202, 0.6643333435058594, 0.671999990940094, 0.6953333616256714, 0.7056666612625122, 0.7103333473205566, 0.7226666808128357, 0.7206666469573975, 0.7310000061988831, 0.7319999933242798, 0.7283333539962769, 0.7453333139419556, 0.7453333139419556, 0.7446666955947876, 0.749666690826416, 0.7540000081062317, 0.7563333511352539, 0.7630000114440918, 0.7509999871253967, 0.7620000243186951, 0.7576666474342346, 0.7630000114440918, 0.7603333592414856]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 6, 3, 2, 2, 2, 1, 4, 4, 5, 5, 5, 4, 3, 4, 0, 2, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 1, 2, 2, 1, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.34285715222358704, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.251608479874812, 2.2466274882351733, 2.238186121679741, 2.2981914220595043, 2.327009320747205, 2.2867018595473674, 2.2861331276622163, 2.295414118734664, 2.216937443961588], "accuracy": [0.227314755320549, 0.19323734939098358, 0.22018226981163025, 0.11662924289703369, 0.1818782240152359, 0.1414608359336853, 0.12534672021865845, 0.11557257920503616, 0.18333113193511963], "val_loss": [1.8799631936209542, 1.6608902386256628, 1.984333106449672, 1.8155721936907088, 1.9744826725551061, 1.697837965829032, 1.9744104657854353, 1.872574806213379, 1.974271024976458], "val_accuracy": [0.15600000321865082, 0.312333345413208, 0.0989999994635582, 0.3580000102519989, 0.0989999994635582, 0.3253333270549774, 0.09799999743700027, 0.3296666741371155, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 1, 1, 2, 6, 5, 4, 8, 5, 5, 5, 4, 8, 4, 0, 8, 2, 8, 9, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 0, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [56, 44, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [42], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.30571427941322327, "mapping_values": [1, 29, 29, 20, 9, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.252302612752616, 2.238079747566694, 2.220054227442018, 2.1199419315480728, 2.2597630259509196, 2.3055114927482077, 2.30413733632762, 2.3038609452361616], "accuracy": [0.227314755320549, 0.17540615797042847, 0.20301149785518646, 0.2662792205810547, 0.16563200950622559, 0.09840179979801178, 0.09536388516426086, 0.09391097724437714], "val_loss": [1.882946150643485, 1.9481093542916434, 1.8972484724862235, 1.9457086154392786, 1.9766385214669364, 1.9740046773638045, 1.974050726209368, 1.973860808781215], "val_accuracy": [0.14866666495800018, 0.23133333027362823, 0.2540000081062317, 0.15066666901111603, 0.09833333641290665, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 8, 0, 6, 6, 5, 4, 2, 5, 5, 0, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.24142856895923615, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.255934531489352, 2.4657007123123087, 2.3132815689159467, 2.307914550482967, 2.3033639137629334, 2.297044973457809, 2.20803499259591, 2.311399032190696, 2.3032609947196026, 2.480965661586882, 2.3042332579068945], "accuracy": [0.22665433585643768, 0.17302866280078888, 0.13142253458499908, 0.09813763201236725, 0.09998679161071777, 0.13313961029052734, 0.24541011452674866, 0.09774138033390045, 0.09879804402589798, 0.1670849323272705, 0.10711926966905594], "val_loss": [1.8501731327601842, 1.9766806874956404, 1.9813009670802526, 1.9746078763689314, 1.9724270956856864, 1.94883850642613, 1.9990175792149134, 1.9746552194867815, 1.9720508030482702, 1.97857631955828, 1.9634130341666085], "val_accuracy": [0.16766667366027832, 0.09799999743700027, 0.09966666996479034, 0.09966666996479034, 0.11366666853427887, 0.23933333158493042, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404, 0.14666666090488434]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 3, 2, 2, 2, 5, 4, 2, 5, 5, 5, 4, 3, 4, 9, 2, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 69, 16, 49, 12, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 25, 13, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027607369274903, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027607369274903, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 35, 49, 58, 99, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 0, 1, 0], [6, 4, 5], [2, 6, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, beta))), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [16733.175301191182, 305914.1335853916, 1409220.967342491, 3977349.6349227317, 8383820.672170123, 15509118.849293357], "accuracy": [0.09708096832036972, 0.10355303436517715, 0.09932637959718704, 0.09576013684272766, 0.09919429570436478, 0.09998679161071777], "val_loss": [61677.39955357143, 486162.78571428574, 1633209.392857143, 3862564.4285714286, 7533974.571428572, 13007166.857142856], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 2, 1, 2, 2, 5, 4, 4, 6, 5, 5, 4, 8, 4, 0, 2, 8, 8, 4, 2, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 2, 0, 1, 1, 0, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [75], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 22, 15, 4, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(grad, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))))), alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, grad), grad), alpha))))))), tf.math.add(alpha, alpha))), tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07172103971242905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 4, 3, 8, 0, 2, 1, 4, 2, 2, 5, 4, 4, 3, 4, 0, 2, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 36, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 28, 16, 12, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07172103971242905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 6, 3, 8, 0, 2, 1, 4, 2, 5, 5, 5, 4, 9, 4, 0, 2, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 13, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4], [2, 0, 1, 5, 3, 4], [42], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 16, 9, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031764304743403, 2.303018492383885, 2.303075033266468, 2.303089341467335, 2.3028845607864388, 2.3028762395654954, 2.3030823295488965, 2.3031218860600022, 2.3029877850093294], "accuracy": [0.09311848133802414, 0.09800554811954498, 0.09972262382507324, 0.09945846349000931, 0.0940430611371994, 0.09734513610601425, 0.09721305221319199, 0.0936468094587326, 0.09985470771789551], "val_loss": [1.9736613546098982, 1.9736999103001185, 1.9737022263663155, 1.9736604009355818, 1.9735956873212541, 1.9736155782427107, 1.9737206867762975, 1.9737520899091447, 1.9736933708190918], "val_accuracy": [0.0989999994635582, 0.09833333641290665, 0.0989999994635582, 0.10433333367109299, 0.10433333367109299, 0.10100000351667404, 0.09799999743700027, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [81, 44, 89, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0], [3, 4, 1], [2, 7, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12296922504901886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 9, 2, 1, 5, 2, 8, 4, 5, 6, 0, 8, 1, 1, 2, 2, 8, 2, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 4, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [16733.175301191182, 305914.1335853916, 1409220.967342491, 3977349.6349227317, 8383820.672170123, 15509118.849293357], "accuracy": [0.09708096832036972, 0.10355303436517715, 0.09932637959718704, 0.09576013684272766, 0.09919429570436478, 0.09998679161071777], "val_loss": [61677.39955357143, 486162.78571428574, 1633209.392857143, 3862564.4285714286, 7533974.571428572, 13007166.857142856], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 0, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 7, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025738416708785, 2.296640869113417, 2.2978707314671274, 2.298903712034698, 2.2995991980505184, 2.3000923549305448, 2.301022864162741], "accuracy": [0.09047681838274002, 0.10962884873151779, 0.11557257920503616, 0.10051512718200684, 0.09721305221319199, 0.09351472556591034, 0.08757099509239197], "val_loss": [1.9678776604788644, 1.9670704432896204, 1.969461100442069, 1.970473289489746, 1.9711313247680664, 1.971931321280343, 1.9722791399274553], "val_accuracy": [0.07366666942834854, 0.1223333328962326, 0.09933333098888397, 0.09466666728258133, 0.08900000154972076, 0.08433333039283752, 0.07699999958276749]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [6, 4, 5], [2, 0, 1, 5, 3, 4], [70], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.07285714149475098, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3037029273159484, 2.301041919163835, 2.3021334362319745, 2.3022303587536, 2.3019114349653944, 2.3037772992063177, 2.3103952564347328, 2.3252343587304747, 2.3616868397185296], "accuracy": [0.08902391046285629, 0.09245806187391281, 0.09457138925790787, 0.09589222073554993, 0.10210011899471283, 0.10328886657953262, 0.09259014576673508, 0.1002509593963623, 0.10011887550354004], "val_loss": [1.9713688577924455, 1.9723313195364816, 1.9718704223632812, 1.972416537148612, 1.9733762059892928, 1.9771316392081124, 1.9859344618661063, 2.0094845635550365, 2.0565716879708424], "val_accuracy": [0.03933333232998848, 0.052666667848825455, 0.07966666668653488, 0.1080000028014183, 0.10266666859388351, 0.09000000357627869, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 1, 1, 2, 6, 5, 4, 8, 5, 1, 5, 4, 8, 4, 1, 8, 2, 8, 9, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1], [3, 4, 5], [2, 0, 1, 5, 3, 4], [42], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 28, 28, 17, 11, 4, 1, 1, 0, 1, 0, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, alpha), grad))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)))), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303849634886764, 2.3007050478510367, 2.3025603479224896, 2.303872139793046, 2.3030497973636943, 2.3019720886708126], "accuracy": [0.08915598690509796, 0.09232597798109055, 0.09206181764602661, 0.09087307006120682, 0.08757099509239197, 0.08889182657003403], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 2, 1, 2, 6, 5, 4, 8, 5, 5, 5, 4, 8, 4, 0, 2, 8, 8, 4, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 2, 0, 2, 2, 1, 0, 1, 2, 2, 1, 0, 2, 1, 2, 0, 2, 1], [70, 83, 89, 50, 49, 58, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [7, 0, 1, 5, 3, 4], [74], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303849634886764, 2.3007050478510367, 2.3025603479224896, 2.303872139793046, 2.3030497973636943, 2.3019720886708126], "accuracy": [0.08915598690509796, 0.09232597798109055, 0.09206181764602661, 0.09087307006120682, 0.08757099509239197, 0.08889182657003403], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 6, 3, 8, 0, 9, 1, 4, 4, 5, 5, 5, 4, 3, 4, 0, 2, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 1, 2, 0, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 90, 47, 89, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 1, 0, 1], [0, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [84], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303849634886764, 2.3007050478510367, 2.3025603479224896, 2.303872139793046, 2.3030497973636943, 2.3019720886708126], "accuracy": [0.08915598690509796, 0.09232597798109055, 0.09206181764602661, 0.09087307006120682, 0.08757099509239197, 0.08889182657003403], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 1, 2, 9, 5, 4, 8, 4, 5, 6, 0, 8, 1, 1, 2, 2, 8, 2, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [3, 0, 2, 0, 0, 0, 1, 0, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 50, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [2, 4], [2, 0, 1, 5, 3, 4], [31], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.03457142785191536, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303849126464104, 2.300744000521665, 2.3030220590263166, 2.306159338852229, 2.3077529596221162, 2.3108985768868515, 2.313434057294921], "accuracy": [0.08915598690509796, 0.09232597798109055, 0.09047681838274002, 0.08413683623075485, 0.07396645098924637, 0.0684189647436142, 0.0668339729309082], "val_loss": [1.9710081645420618, 1.971142087663923, 1.972287314278739, 1.974048069545201, 1.978728975568499, 1.9804516519818987, 1.9817795072283064], "val_accuracy": [0.03766666725277901, 0.03799999877810478, 0.036666665226221085, 0.027666667476296425, 0.017999999225139618, 0.015333333052694798, 0.011666666716337204]}}]