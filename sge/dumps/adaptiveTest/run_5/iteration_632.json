[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 6, 4, 8, 8, 4, 3, 8, 1, 8, 0, 2, 9, 6, 2, 7, 1, 5, 6, 2, 8], [0, 0, 3, 5, 3, 2, 3, 3, 3, 3, 3, 4], [88, 30, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.6122857332229614, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 16, 10, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(beta))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.546867333697983, 2.260137740190491, 2.1965785969864062, 2.4438049233018004, 2.3843199116852083, 1.9427982564489557, 2.057632610215613, 1.8194130018575867, 1.7653631962931247, 1.3978610031986753, 1.3312295295495902, 2.6064428938000415, 2.3215545697565547, 2.3072039792881256, 2.306843329414385], "accuracy": [0.2052568942308426, 0.1554616242647171, 0.189274862408638, 0.1636507660150528, 0.18821820616722107, 0.34539690613746643, 0.30101704597473145, 0.3883238732814789, 0.4002113342285156, 0.5132743120193481, 0.535332202911377, 0.2930920720100403, 0.10130762308835983, 0.10698718577623367, 0.1006472036242485], "val_loss": [1.9780932835170202, 1.6399752412523543, 1.7241448334285192, 1.9225034032549178, 1.700923068182809, 1.0754626478467668, 1.5642752647399902, 1.3663955756596156, 1.1729914801461356, 1.0425942625318254, 1.4155479158673967, 1.9953231130327498, 1.975109304700579, 1.9740245001656669, 1.973745891026088], "val_accuracy": [0.10066666454076767, 0.29100000858306885, 0.33266666531562805, 0.2786666750907898, 0.2983333468437195, 0.57833331823349, 0.40066665410995483, 0.42366665601730347, 0.5350000262260437, 0.6083333492279053, 0.4323333203792572, 0.09833333641290665, 0.0989999994635582, 0.09833333641290665, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 2, 4, 0, 8, 5, 2, 5, 8, 3, 6, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [34, 28, 39, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.5357142686843872, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 16, 11, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta))))))))), alpha))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.546027622895549, 2.2510906097486174, 2.403975891541055, 2.3060526970024546, 2.3033407440180507, 2.302552408467289, 2.299519263773767, 2.2493557381733864, 2.0831206866763035, 1.8521554338272301, 1.8185454006948334, 1.6342437488213033, 1.6540505782157486, 2.328884536280624, 2.6112749579402794, 2.271701256644063, 2.2948490270549877], "accuracy": [0.2052568942308426, 0.1612732857465744, 0.1554616242647171, 0.09338264167308807, 0.0940430611371994, 0.10051512718200684, 0.10566636174917221, 0.16259410977363586, 0.3008849620819092, 0.38964468240737915, 0.39743760228157043, 0.4593845009803772, 0.48831066489219666, 0.09853387624025345, 0.18438778817653656, 0.13617752492427826, 0.16074495017528534], "val_loss": [1.9784256390162878, 1.9490901402064733, 1.9783488001142229, 1.974221910749163, 1.9733049528939384, 1.9719085012163435, 1.963108948298863, 1.7353171621050154, 1.5920026642935616, 1.4110547815050398, 1.4419782502310616, 1.14914870262146, 2.0170531954084123, 1.977433204650879, 1.9791261809212821, 1.5560863018035889, 1.9535320826939173], "val_accuracy": [0.10066666454076767, 0.10499999672174454, 0.10266666859388351, 0.10333333164453506, 0.10366666316986084, 0.11233333498239517, 0.16966666281223297, 0.30666667222976685, 0.40166667103767395, 0.460999995470047, 0.5023333430290222, 0.5379999876022339, 0.09833333641290665, 0.0989999994635582, 0.09933333098888397, 0.3840000033378601, 0.1733333319425583]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 3, 8, 6, 4, 6, 3, 5, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8, 7, 0, 4, 0, 0, 2, 4, 3, 8, 8, 5, 1, 8], [3, 4, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1, 3, 5, 1, 2, 4, 2], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.40371429920196533, "mapping_values": [1, 1, 1, 0, 1, 0, 61, 61, 37, 24, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), beta))))))), beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, grad), grad), grad)), tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))))), tf.math.add(beta, grad))), tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.square(grad)))), grad), alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad))))))))))))), tf.math.add(beta, tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.547098558686901, 2.271450131592293, 2.2785875534951456, 2.3045081568904258, 2.3037585022742046, 2.303014504171051, 2.2993638288107183, 2.4028405672082687, 2.308389616743165, 2.3042430186142555, 2.30312224137328, 2.3030708556980772], "accuracy": [0.2052568942308426, 0.14753665030002594, 0.12838461995124817, 0.10077928751707077, 0.09576013684272766, 0.09866596013307571, 0.11332716792821884, 0.17738740146160126, 0.09959053993225098, 0.09708096832036972, 0.09681680053472519, 0.09787346422672272], "val_loss": [1.9780332701546806, 1.9623448508126395, 1.9756672722952706, 1.9738334247044154, 1.9734187126159668, 1.9726647649492537, 1.9573051588875907, 1.9822980335780553, 1.9747184344700404, 1.973801817212786, 1.9737251826695033, 1.9736476625714983], "val_accuracy": [0.10066666454076767, 0.09799999743700027, 0.10166666656732559, 0.10433333367109299, 0.09966666996479034, 0.09833333641290665, 0.24500000476837158, 0.10100000351667404, 0.09833333641290665, 0.10433333367109299, 0.0989999994635582, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 2, 2, 4, 3, 8, 3, 2, 2, 8, 8, 6, 8, 9, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 4, 2, 3, 2, 2, 1, 3, 3, 3, 0, 2, 4, 4, 5, 2, 3, 1, 1, 0, 0, 0, 3, 1, 5, 5, 4, 5, 5, 3], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.337714284658432, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 16, 10, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta)), alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.223256697602449, 2.2895320628880036, 2.315968720605266, 2.3065283278023263, 2.308767404192238, 2.3032989916375066], "accuracy": [0.2082948088645935, 0.19257694482803345, 0.20631356537342072, 0.09945846349000931, 0.10210011899471283, 0.09113723784685135], "val_loss": [1.7507034029279436, 1.9454870223999023, 1.9787281581333704, 1.974466323852539, 1.9736220496041434, 1.9736854008265905], "val_accuracy": [0.34599998593330383, 0.13066667318344116, 0.10066666454076767, 0.10066666454076767, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 3, 2, 2, 4, 0, 8, 3, 2, 5, 8, 8, 6, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 1, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.30971428751945496, "mapping_values": [1, 1, 1, 0, 1, 0, 45, 45, 27, 18, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.negative(grad))), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), beta)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad))))))))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.547121831061046, 2.2635228348571896, 2.3104043546023387, 2.304333253417584, 2.3039135005196654, 2.3033742710678347, 2.3032845466396106], "accuracy": [0.20499274134635925, 0.15149913728237152, 0.13934750854969025, 0.10157178342342377, 0.09879804402589798, 0.09747721254825592, 0.09576013684272766], "val_loss": [1.9778973034449987, 1.8629786627633231, 1.9750558989388602, 1.9739738191877092, 1.9737042018345423, 1.9737470490591866, 1.9735851287841797], "val_accuracy": [0.10066666454076767, 0.3149999976158142, 0.09966666996479034, 0.10433333367109299, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [2, 2, 2, 8, 8, 4, 0, 8, 3, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.2825714349746704, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta))), tf.math.sqrt(grad))), tf.math.pow(beta, tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5464752345525388, 2.277242960317055, 2.282322171593796, 2.3059965621966887, 2.303859443995836, 2.3034563872634997, 2.3024496099716165, 2.2879191814176223, 2.269660916956361, 2.3041103108526615, 2.3033951301899696, 2.3035747439334453, 2.3038303902152033], "accuracy": [0.20512482523918152, 0.1508387327194214, 0.15136705338954926, 0.10460969805717468, 0.10117553919553757, 0.09470347315073013, 0.10236428678035736, 0.14040417969226837, 0.13934750854969025, 0.10619468986988068, 0.10302469879388809, 0.09906221181154251, 0.09694888442754745], "val_loss": [1.977949959891183, 1.9747867584228516, 1.9792613301958357, 1.9742296763828822, 1.9737020220075334, 1.973355838230678, 1.9704301016671317, 1.7556024960109167, 1.9741138049534388, 1.9738760675702776, 1.9738762038094657, 1.9737194606236048, 1.97376891544887], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10166666656732559, 0.10433333367109299, 0.10433333367109299, 0.09833333641290665, 0.10100000351667404, 0.3096666634082794, 0.10066666454076767, 0.09799999743700027, 0.0989999994635582, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 2, 4, 3, 8, 3, 2, 5, 8, 8, 6, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.27971428632736206, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 16, 12, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))))))), alpha)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, grad))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.545944890987289, 2.276456607567431, 2.256423897195911, 2.303603717695374, 2.299274826062401, 2.3050013231232875, 2.3034567655337375], "accuracy": [0.20512482523918152, 0.14463083446025848, 0.13591335713863373, 0.10553427785634995, 0.12693171203136444, 0.09668471664190292, 0.09417514503002167], "val_loss": [1.9787489346095495, 1.8423245974949427, 1.9749608721051897, 1.969498906816755, 1.9766758510044642, 1.9739767483302526, 1.973447663443429], "val_accuracy": [0.10066666454076767, 0.3323333263397217, 0.09799999743700027, 0.11500000208616257, 0.10433333367109299, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 2, 4, 0, 8, 3, 2, 5, 8, 8, 6, 8, 4, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 5, 3, 2, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.24400000274181366, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta))))), grad), tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(grad))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5470623276914193, 2.267668434720486, 2.286306497018099, 2.3036647701401987, 2.303557252902806, 2.303038010271612, 2.301948866304421, 2.2897071032208567, 2.307964534933352, 2.303821167091195, 2.303065435367726, 2.30296832550597], "accuracy": [0.204860657453537, 0.14661207795143127, 0.12732796370983124, 0.1022322028875351, 0.09576013684272766, 0.09893012791872025, 0.09840179979801178, 0.1694624274969101, 0.09800554811954498, 0.09470347315073013, 0.09919429570436478, 0.10302469879388809], "val_loss": [1.9782850401742118, 1.900348118373326, 1.9747573307582311, 1.9737245014735632, 1.973531927381243, 1.9731973239353724, 1.9693707057407923, 1.9827656745910645, 1.9742887360709054, 1.9737208230154855, 1.9737610816955566, 1.9736460958208357], "val_accuracy": [0.10066666454076767, 0.18700000643730164, 0.09799999743700027, 0.10433333367109299, 0.10333333164453506, 0.09833333641290665, 0.2133333384990692, 0.10433333367109299, 0.09833333641290665, 0.09799999743700027, 0.0989999994635582, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 2, 2, 2, 4, 3, 8, 3, 2, 5, 8, 8, 6, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9, 1, 4, 8], [0, 2, 3, 3, 3, 2, 0, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 4, 4, 1, 4, 3], [27, 15, 39, 5, 28], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.23714286088943481, "mapping_values": [1, 1, 1, 0, 1, 0, 60, 60, 37, 23, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta))))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(grad)))))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), alpha)))))), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.pow(tf.math.sqrt(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5466709492181696, 2.2857281189899497, 2.302663167895044, 2.409510864951371, 2.3060379054772775, 2.3039645941470672, 2.303299069010964, 2.303100568774889], "accuracy": [0.204860657453537, 0.1484612375497818, 0.10091137140989304, 0.160084530711174, 0.10051512718200684, 0.09774138033390045, 0.09655263274908066, 0.09879804402589798], "val_loss": [1.9778801373073034, 1.9764751025608607, 1.9511002131870814, 1.9780590193612235, 1.9745987483433314, 1.9738527706691198, 1.9737678255353654, 1.9736217090061732], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.18266665935516357, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 0, 0, 1, 3, 3, 1, 3, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8, 3, 7, 3, 8, 6, 1, 3, 8, 7, 0, 5, 1, 7, 4], [0, 1, 2, 0, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [14, 37, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.15228570997714996, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(alpha, beta)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.negative(beta))))), tf.math.add(beta, beta)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5458012228361007, 2.2729354794030776, 2.290124058833668, 2.3038761388702858, 2.303488320804244, 2.303236618994281, 2.303025962780212], "accuracy": [0.2056531459093094, 0.14674416184425354, 0.13802668452262878, 0.09747721254825592, 0.09589222073554993, 0.09219389408826828, 0.09906221181154251], "val_loss": [1.9783844947814941, 1.8210114751543318, 1.9747294698442732, 1.973846708025251, 1.9737242289951868, 1.9736614227294922, 1.9736362184797014], "val_accuracy": [0.10066666454076767, 0.21266666054725647, 0.10433333367109299, 0.10433333367109299, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [6, 2, 2, 2, 2, 1, 0, 1, 1, 3, 3, 1, 3, 1, 2, 3, 6, 3, 2, 1, 2, 6, 2, 8, 3, 7, 3, 8, 6, 1, 3, 8, 7, 0, 5, 1, 0, 4, 5, 3, 8, 7, 6, 2, 5], [0, 4, 3, 3, 2, 2, 1, 3, 3, 1, 3, 3, 4, 0, 5, 2, 3, 1, 1, 1, 0, 2, 3, 1, 5, 5, 4, 3, 5, 3, 1, 4, 5, 4, 5], [88, 83, 39, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1411428600549698, "mapping_values": [1, 1, 1, 0, 1, 0, 42, 42, 21, 21, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(beta, beta))), alpha)))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, grad)))))))))))), tf.math.add(beta, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)), tf.math.add(beta, alpha))), alpha)))), tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.545943946350898, 2.2791579798180837, 2.4178786235258105, 2.305084591292277, 2.3037030365898183, 2.303232799352924, 2.3028217819404326, 2.3016519051154907, 2.2663453553945097, 2.3055822809280073, 2.3036136876921125, 2.3032219964499645, 2.3033827947760934], "accuracy": [0.20512482523918152, 0.14529123902320862, 0.13459251821041107, 0.09906221181154251, 0.09919429570436478, 0.09668471664190292, 0.10011887550354004, 0.11121384054422379, 0.1962752640247345, 0.09747721254825592, 0.09826971590518951, 0.10051512718200684, 0.09285431355237961], "val_loss": [1.9787514550345284, 1.9478725024632044, 1.9768565041678292, 1.9740894181387765, 1.973661286490304, 1.9734962327139718, 1.9729912621634347, 1.9680133547101701, 1.9756896155221122, 1.973876953125, 1.973724092755999, 1.9736170087541853, 1.973707812173026], "val_accuracy": [0.10066666454076767, 0.0989999994635582, 0.10166666656732559, 0.10433333367109299, 0.10533333569765091, 0.09833333641290665, 0.13733333349227905, 0.14266666769981384, 0.10433333367109299, 0.09799999743700027, 0.0989999994635582, 0.10433333367109299, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 9, 2, 9, 6, 4, 2, 6, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 2, 0, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [59, 37, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.1411428600549698, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.546046078842802, 2.2803466368219114, 2.270603369192724, 2.307337065823814, 2.3040670279766258, 2.3027562452675787, 2.3029189458722845, 2.311178318844212, 2.304235067412901, 2.3033711821128193, 2.3029622808659727], "accuracy": [0.2052568942308426, 0.1426495909690857, 0.16814158856868744, 0.1018359512090683, 0.09206181764602661, 0.09893012791872025, 0.1776515692472458, 0.09972262382507324, 0.09853387624025345, 0.09153348207473755, 0.09549596905708313], "val_loss": [1.9786536352975028, 1.9755234718322754, 1.9830523218427385, 1.9741467067173548, 1.9731251852852958, 1.9695836475917272, 1.9871042796543665, 1.9753286497933524, 1.9738827432904924, 1.9736524309430803, 1.9736644881112235], "val_accuracy": [0.10066666454076767, 0.09799999743700027, 0.10400000214576721, 0.10433333367109299, 0.10433333367109299, 0.1133333370089531, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 2, 4, 6, 8, 3, 2, 0, 8, 8, 6, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 5, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [59, 37, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10685714334249496, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 15, 11, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(grad))))))), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.548439244710065, 2.271157195397718, 2.304200510039636, 2.240925282125759, 2.3049929025166573, 2.301938836474728, 2.3204992699223173, 2.308675564920992, 2.303936095521781, 2.303219902674441, 2.303355195786518], "accuracy": [0.20538897812366486, 0.14621582627296448, 0.09734513610601425, 0.13921542465686798, 0.09879804402589798, 0.11015717685222626, 0.19270901381969452, 0.09642054885625839, 0.10276053100824356, 0.09668471664190292, 0.1010434553027153], "val_loss": [1.9777908325195312, 1.9772770064217704, 1.962238039289202, 1.976480279650007, 1.9739410536629813, 1.9647524016244071, 1.9804428645542689, 1.9739638737269811, 1.9736739567347936, 1.9736296789986747, 1.9736946650913783], "val_accuracy": [0.10066666454076767, 0.09799999743700027, 0.10433333367109299, 0.09966666996479034, 0.10599999874830246, 0.1886666715145111, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 6, 4, 0, 0, 1, 3, 3, 1, 3, 0, 2, 3, 6, 2, 5, 1, 5, 2, 4, 1, 3, 7, 3, 8, 6, 1, 6, 8, 7, 0, 5, 2, 7, 4], [0, 1, 2, 0, 2, 2, 1, 3, 3, 3, 3, 2, 3, 4, 3, 2, 3, 1, 1, 4, 2, 3, 1, 5, 5, 0, 3, 4, 5, 1], [88, 83, 39, 40], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 61, 61, 34, 27, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.multiply(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.square(grad))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))))))), tf.math.add(beta, grad)))))), tf.math.pow(tf.math.add(beta, beta), grad))))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), alpha), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 2, 2, 8, 6, 4, 0, 8, 5, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 4, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [6, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 0, 8, 1, 3, 3, 1, 3, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8, 3, 7, 3, 8, 6, 1, 3, 8, 7, 0, 5, 1, 7, 4], [0, 4, 2, 5, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 83, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025334976636156, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 9, 2, 9, 6, 4, 2, 6, 3, 2, 5, 1, 4, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 1, 2, 0, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [19, 83, 39], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 1, 2, 2, 2, 6, 3, 8, 3, 2, 5, 4, 8, 6, 8, 3, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 4, 2, 3, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 0, 0, 0, 3, 1, 5, 5, 4, 5, 5, 3], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.sqrt(beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), alpha))))))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025334976636156, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 2, 2, 6, 4, 8, 8, 5, 3, 3, 1, 8, 0, 2, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 1, 2, 0, 2, 2, 1, 3, 3, 3, 3, 2, 4, 4, 5, 2, 3, 1], [19, 37, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [6, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [6, 2, 2, 2, 2, 4, 9, 8, 3, 9, 5, 8, 8, 6, 8, 6, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 5, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1], [88, 15, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.03028571419417858, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5458900446054753, 2.2821537228686193, 2.3040537302284005, 2.377087926064752, 2.3065648919728927, 2.3035705650739224, 2.302533721344393, 2.299662712778886, 2.2417054730887584, 2.3056816276920125, 2.3034699083775925, 2.3031217586158084], "accuracy": [0.20538897812366486, 0.13974376022815704, 0.0944393053650856, 0.15757495164871216, 0.10011887550354004, 0.09721305221319199, 0.1002509593963623, 0.12032756209373474, 0.18333113193511963, 0.09708096832036972, 0.09509972482919693, 0.1018359512090683], "val_loss": [1.9785421235220773, 1.9768565722874232, 1.9609193120683943, 1.9782065664018904, 1.9739644868033273, 1.9733930315290178, 1.9725680351257324, 1.955932889665876, 1.9774203981672014, 1.974118982042585, 1.9738638060433524, 1.973639965057373], "val_accuracy": [0.10066666454076767, 0.09799999743700027, 0.09799999743700027, 0.10433333367109299, 0.10433333367109299, 0.09833333641290665, 0.19466666877269745, 0.17466667294502258, 0.10433333367109299, 0.09799999743700027, 0.0989999994635582, 0.10433333367109299]}}]