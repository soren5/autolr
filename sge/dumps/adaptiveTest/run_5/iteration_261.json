[{"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 2, 2, 5, 6, 9, 1, 1, 9, 3, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 85, 75, 90, 84, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7882857322692871, "mapping_values": [1, 27, 27, 20, 7, 10, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.27733482434025, 2.0373855957249924, 1.897076438824577, 1.4912519010617638, 1.2524541014803714, 1.1079732821113981, 0.9322827549154543, 0.8663102785956197, 0.8009094335714493, 0.7703769070329667, 0.7348912126273842, 0.7534749097890857, 0.6814337116285416, 0.6794174400617922, 0.6105395199096497, 0.6442048366453039, 0.5979514325756233, 0.5912511193552321, 0.5732674496977824], "accuracy": [0.23893804848194122, 0.3693039119243622, 0.3467177450656891, 0.47932901978492737, 0.5540879964828491, 0.5732399821281433, 0.6432439684867859, 0.6734909415245056, 0.6925109028816223, 0.7112666964530945, 0.7308149337768555, 0.7205125093460083, 0.7464007139205933, 0.7516840696334839, 0.7753269076347351, 0.7523444890975952, 0.7774402499198914, 0.770439863204956, 0.7795535326004028], "val_loss": [1.5283190182277135, 1.9745452744620187, 1.2070185116359167, 0.8175032990319389, 1.0770086220332555, 0.8697855472564697, 0.6240684986114502, 0.6875258002962384, 0.6244086027145386, 0.5826084102903094, 0.587980968611581, 0.5626192433493478, 0.5557493652616229, 0.47483382906232563, 0.49618068763187956, 0.49588658128465923, 0.49718025752476286, 0.4892496040889195, 0.4668703249522618], "val_accuracy": [0.4339999854564667, 0.16033333539962769, 0.5296666622161865, 0.6646666526794434, 0.5536666512489319, 0.5653333067893982, 0.7096666693687439, 0.6793333292007446, 0.7076666951179504, 0.7223333120346069, 0.7436666488647461, 0.7213333249092102, 0.7649999856948853, 0.7839999794960022, 0.7749999761581421, 0.7773333191871643, 0.7549999952316284, 0.765666663646698, 0.7723333239555359]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 85, 75, 90, 84, 89, 98, 7], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7797142863273621, "mapping_values": [1, 24, 24, 19, 5, 8, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0564163258015564, 2.0129499455264153, 1.8601075379509322, 1.331406076397516, 1.3340515604958858, 1.0918654329379032, 1.0049660054054306, 0.8642098621024022, 0.8137436340970291, 0.7318640312718961, 0.7039077692831103, 0.6926588712193946, 0.6503578525854848, 0.6433112287502468, 0.6186203191293276, 0.5811620427396681, 0.5719569767266217, 0.6041110440992236, 0.5385835715855558], "accuracy": [0.29137498140335083, 0.3343019485473633, 0.34803855419158936, 0.5248976349830627, 0.5263505578041077, 0.5809007883071899, 0.6272619366645813, 0.6608110070228577, 0.6856426000595093, 0.7226257920265198, 0.7306828498840332, 0.7351737022399902, 0.7530049085617065, 0.759080708026886, 0.7553823590278625, 0.7646281719207764, 0.7779685854911804, 0.778232753276825, 0.7884030938148499], "val_loss": [1.2616842133658273, 1.604311534336635, 1.0332082680293493, 0.8445486511502948, 0.9743107046399798, 0.8994881084987095, 0.8601879051753453, 0.69395569392613, 0.6336831876209804, 0.5536094563347953, 0.5616402966635567, 0.5570147889001029, 0.5629722561155047, 0.49162643296378, 0.46855768135615755, 0.47738349437713623, 0.5076412814004081, 0.4626573324203491, 0.45195099285670687], "val_accuracy": [0.5019999742507935, 0.43966665863990784, 0.5336666703224182, 0.6039999723434448, 0.5619999766349792, 0.5249999761581421, 0.565666675567627, 0.6603333353996277, 0.7116666436195374, 0.7509999871253967, 0.7253333330154419, 0.7396666407585144, 0.7360000014305115, 0.784333348274231, 0.7673333287239075, 0.7680000066757202, 0.7743333578109741, 0.7816666960716248, 0.7833333611488342]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [1, 82, 52, 75, 90, 47, 89, 30, 17], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5154285430908203, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8668489618985378, 2.3097567407446546, 2.232909404307214, 1.7638208541761788, 1.6476605913626787, 1.5685094924351606, 1.7078604105677446, 2.022316819121573, 2.4452042990923717, 1053.9872843410203], "accuracy": [0.2566371560096741, 0.16114120185375214, 0.2218993455171585, 0.39730551838874817, 0.41526877880096436, 0.43323206901550293, 0.43270373344421387, 0.3225465714931488, 0.10051512718200684, 0.1010434553027153], "val_loss": [1.975271497453962, 2.001163959503174, 1.400256940296718, 1.0105532237461634, 0.9112866606031146, 0.9904159818376813, 1.194967610495431, 2.0558595657348633, 1.9944415092468262, Infinity], "val_accuracy": [0.1420000046491623, 0.10599999874830246, 0.47099998593330383, 0.6046666502952576, 0.6169999837875366, 0.5946666598320007, 0.43533334136009216, 0.10300000011920929, 0.10166666656732559, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.33571428060531616, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.866809716046431, 2.3611378609275993, 2.316446848832668, 2.318272718490784, 2.3142699983062966, 2.312164501570093], "accuracy": [0.25703340768814087, 0.18518029153347015, 0.09734513610601425, 0.09906221181154251, 0.09959053993225098, 0.09945846349000931], "val_loss": [1.9750947271074568, 1.9922741481236048, 1.979358128138951, 1.9878870419093542, 1.9793833323887415, 1.982339314052037], "val_accuracy": [0.14166666567325592, 0.10066666454076767, 0.0989999994635582, 0.0989999994635582, 0.09833333641290665, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [15, 82, 52, 75, 90, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [5], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2362857162952423, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3016783134607577, 2.3013273095410685, 2.301708918048595, 2.3003801153855883, 2.300696220065404, 2.302354207868353, 2.2995682323235624, 2.29968088011086, 2.2996372560295275, 2.300735099078516, 2.3000079818673185, 2.2987118041620844, 2.299891568256832, 2.2993707580652063, 2.2975825651242134, 2.2983074418116933, 2.298448108395471, 2.2969297161979005, 2.298323289168084, 2.2974304928991853, 2.297272486284251, 2.2974910420543875, 2.2960518120995066, 2.297815526654424, 2.294763174196827, 2.2970685815578125, 2.2961374277357476, 2.294957485527741, 2.2950904704103885, 2.295205815026411, 2.2950618815633046, 2.2938998947526485, 2.2950573172535895, 2.2928428400493397, 2.2935550723959506, 2.293385653054284, 2.2916741877530526, 2.2937690268544126, 2.2938904391618657, 2.2930137569153897, 2.290305696757494, 2.2925392043998354, 2.2898055334384684, 2.2912370763387444, 2.291176251888968, 2.290601347195332, 2.2892578675400204, 2.289889333144533, 2.2902843151677, 2.2905974167685357, 2.2894041205063442, 2.2876767434180767, 2.2895919556127104, 2.2880908725535973, 2.2892909272314457, 2.2867229970816876, 2.28844359742652, 2.287445264831904, 2.2875396223147595, 2.287170862619352, 2.2872197271857706, 2.2885423388699686, 2.287658973691832, 2.2871784115857956, 2.2857715817112507, 2.2851255746518206, 2.285643777228806, 2.2848541741326436, 2.2849385803874145, 2.282835999122149, 2.2852879503950736, 2.2846372243105035, 2.284672404702282, 2.284536568621886, 2.2840836531198603, 2.2828846220893944, 2.282465275520221, 2.2824358833369924, 2.283640665133175, 2.2824523068847373, 2.2816289773375966, 2.2835441773137113, 2.282577354390592, 2.2818363126022407, 2.281143383720941, 2.279430060574974, 2.280575404975235, 2.2810327918254596, 2.277974124629311, 2.279322129010115, 2.2802941559831997, 2.2777545216879935, 2.279102889223342, 2.279246414783152, 2.2788525562339284, 2.2780059481089094, 2.2773055614276947, 2.2774504608151274, 2.2765930828527297, 2.2770632888190327], "accuracy": [0.09351472556591034, 0.08611807972192764, 0.0940430611371994, 0.09615638852119446, 0.09655263274908066, 0.09259014576673508, 0.0956280529499054, 0.09866596013307571, 0.10077928751707077, 0.09351472556591034, 0.09549596905708313, 0.10170386731624603, 0.09536388516426086, 0.10038304328918457, 0.10276053100824356, 0.10355303436517715, 0.09813763201236725, 0.10447761416435242, 0.09391097724437714, 0.1080438494682312, 0.10910051316022873, 0.10500594228506088, 0.10355303436517715, 0.10249637067317963, 0.11081759631633759, 0.09985470771789551, 0.10619468986988068, 0.10645885765552521, 0.10962884873151779, 0.10645885765552521, 0.10474177449941635, 0.1088363528251648, 0.11174217611551285, 0.1150442510843277, 0.11306300014257431, 0.11491216719150543, 0.11570466309785843, 0.11002509295940399, 0.11372341960668564, 0.11227050423622131, 0.11411966383457184, 0.11795007437467575, 0.12508255243301392, 0.1200634017586708, 0.12230881303548813, 0.11808215826749802, 0.13195087015628815, 0.12402588874101639, 0.11847840249538422, 0.11821424216032028, 0.12455421686172485, 0.1290450394153595, 0.12296922504901886, 0.12917712330818176, 0.12402588874101639, 0.1266675442457199, 0.13274335861206055, 0.1274600476026535, 0.1290450394153595, 0.1270637959241867, 0.13142253458499908, 0.1310262829065323, 0.12917712330818176, 0.13472460210323334, 0.1328754425048828, 0.1406683325767517, 0.13459251821041107, 0.13908334076404572, 0.13498876988887787, 0.14621582627296448, 0.1348566859960556, 0.137630432844162, 0.1434420794248581, 0.13657376170158386, 0.13353586196899414, 0.1434420794248581, 0.14040417969226837, 0.14436666667461395, 0.14000792801380157, 0.14463083446025848, 0.14621582627296448, 0.14093250036239624, 0.14489498734474182, 0.14251750707626343, 0.14872540533542633, 0.14714039862155914, 0.14542332291603088, 0.15031039714813232, 0.15321621298789978, 0.149649977684021, 0.14489498734474182, 0.15717871487140656, 0.14912164211273193, 0.15229164063930511, 0.15281997621059418, 0.15968827903270721, 0.1574428677558899, 0.1546691358089447, 0.1612732857465744, 0.1582353711128235], "val_loss": [1.970757348196847, 1.9705141612461634, 1.9702675001961845, 1.9700240407671248, 1.9697772434779577, 1.969531740461077, 1.9692874635968889, 1.9690443447657995, 1.9688005447387695, 1.9685539518083846, 1.9683101517813546, 1.9680653980800085, 1.9678230285644531, 1.967583247593471, 1.9673404693603516, 1.9670953069414412, 1.9668511663164412, 1.966609001159668, 1.9663634300231934, 1.966120379311698, 1.9658797127859933, 1.9656378882271903, 1.9653964042663574, 1.9651532173156738, 1.9649146624973841, 1.9646750858851842, 1.9644338062831335, 1.9641899381365096, 1.9639503615243095, 1.9637081282479423, 1.9634667124067033, 1.963226250239781, 1.9629858561924525, 1.9627460071018763, 1.9625037738255091, 1.9622625623430525, 1.9620255061558314, 1.9617845671517509, 1.9615445818219865, 1.9613068444388253, 1.9610656329563685, 1.9608268737792969, 1.9605860710144043, 1.9603464262826102, 1.9601061684744698, 1.9598668643406458, 1.959622928074428, 1.9593819209507533, 1.9591418675013952, 1.958899906703404, 1.9586616924830846, 1.9584204128810339, 1.9581801550728934, 1.957939829145159, 1.957702704838344, 1.9574622426714217, 1.9572217805044991, 1.9569812502179826, 1.9567407199314661, 1.9565012114388602, 1.956261362348284, 1.956019674028669, 1.9557814598083496, 1.9555443355015345, 1.9553051676068987, 1.9550630024501257, 1.9548230171203613, 1.9545819418770927, 1.9543397767203194, 1.9540980202811105, 1.9538615090506417, 1.953622681753976, 1.9533843994140625, 1.9531431879316057, 1.952902180807931, 1.952662672315325, 1.952420711517334, 1.952183450971331, 1.951944351196289, 1.9517045702253069, 1.9514668328421456, 1.9512256213596888, 1.9509831156049455, 1.9507416316441126, 1.9505012375967843, 1.95026091166905, 1.9500209944588798, 1.94977753502982, 1.9495368003845215, 1.9492971556527274, 1.9490553310939245, 1.9488131659371513, 1.9485703195844377, 1.9483277457101005, 1.9480831963675362, 1.947840758732387, 1.9475972311837333, 1.9473543848310197, 1.9471118109566825, 1.946866580418178], "val_accuracy": [0.039000000804662704, 0.04066666588187218, 0.04333333298563957, 0.045666664838790894, 0.04633333161473274, 0.04766666516661644, 0.04933333396911621, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05400000140070915, 0.05533333495259285, 0.05666666850447655, 0.05833333358168602, 0.05999999865889549, 0.06133333221077919, 0.06333333253860474, 0.06433333456516266, 0.06700000166893005, 0.06833333522081375, 0.07000000029802322, 0.0716666653752327, 0.07233333587646484, 0.07466666400432587, 0.07733333110809326, 0.07833333313465118, 0.08133333176374435, 0.0833333358168602, 0.08633333444595337, 0.08900000154972076, 0.09133332967758179, 0.09366666525602341, 0.09366666525602341, 0.09566666930913925, 0.09700000286102295, 0.0976666659116745, 0.10133333504199982, 0.10266666859388351, 0.10366666316986084, 0.10533333569765091, 0.10733333230018616, 0.10999999940395355, 0.11233333498239517, 0.11500000208616257, 0.11633333563804626, 0.11733333021402359, 0.11966666579246521, 0.12200000137090683, 0.1236666664481163, 0.12700000405311584, 0.1289999932050705, 0.13199999928474426, 0.13466666638851166, 0.1366666704416275, 0.13966666162014008, 0.14133332669734955, 0.1433333307504654, 0.14733333885669708, 0.15199999511241913, 0.1536666601896286, 0.15800000727176666, 0.1616666615009308, 0.16366666555404663, 0.1653333306312561, 0.16766667366027832, 0.17133332788944244, 0.17366667091846466, 0.17533333599567413, 0.1770000010728836, 0.18000000715255737, 0.1836666613817215, 0.1860000044107437, 0.18833333253860474, 0.19099999964237213, 0.19333332777023315, 0.1966666728258133, 0.20033332705497742, 0.20200000703334808, 0.2043333351612091, 0.20633333921432495, 0.20866666734218597, 0.210999995470047, 0.21199999749660492, 0.2150000035762787, 0.2160000056028366, 0.21766667068004608, 0.21899999678134918, 0.22100000083446503, 0.2226666659116745, 0.22466666996479034, 0.22733333706855774, 0.23133333027362823, 0.23333333432674408, 0.23499999940395355, 0.23766666650772095, 0.23866666853427887, 0.24066667258739471, 0.2433333396911621, 0.24633333086967468, 0.24766667187213898]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4], [2, 5, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027846071273266, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [9, 82, 28, 75, 90, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 3, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 4, 2, 8, 9, 8, 4], [2, 1, 4, 5, 3, 4], [49, 73], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 19, 5, 8, 1, 1, 0, 1, 1, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027846071273266, 2.3025851429508597, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 1, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [9, 82, 28, 64, 90, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 19, 5, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [6, 1, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027846071273266, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 2, 5, 6, 9, 3, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 0, 0, 2, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [1, 4, 52, 57, 48, 44, 89, 7, 17], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027846071273266, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [29], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [57, 82, 52, 75, 90, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 3, 4, 5, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 3, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [2], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, beta)), tf.math.pow(grad, tf.math.square(grad)))), tf.math.add(beta, tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [4, 82, 70, 75, 90, 36, 89, 30], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [6, 3, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 2, 5, 6, 9, 4, 1, 9, 3, 5, 2, 1, 3, 9, 8, 5, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [38, 82, 28, 75, 1, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 0, 3, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 0, 5, 0, 3, 3, 3], [53], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [6, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, beta)))), tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027846071273266, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027846071273266, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 2, 5, 6, 5, 2, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0], [3, 8, 4, 2, 8, 8, 8, 4], [4, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.05999999865889549, "mapping_values": [1, 24, 24, 17, 7, 7, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3016881984002273, 2.3013902641699975, 2.301821279015602, 2.3006657334744514, 2.301061270149109, 2.3027590775707094, 2.300184813315417, 2.300446011245117, 2.300398077742456, 2.3015896609241717, 2.3009141607212746, 2.300020537686905, 2.301200001892586, 2.300775701343706, 2.2993323649586688, 2.3002333607671757, 2.300467288568114, 2.2994509871294784, 2.3010219168181214, 2.3004431226360262, 2.30047410634436, 2.300747237767935, 2.2996961597784744, 2.301233437523913, 2.2992540675226123, 2.3012744073209004, 2.300726049249639, 2.2997036280019203, 2.3000850276294527, 2.3004368011898855, 2.3003751658146268, 2.299739447063254, 2.300697415905732, 2.2991416847953046, 2.299694464679376, 2.299925954570828, 2.2986887146248525, 2.3005474246708695, 2.300697784602697, 2.3003791929503725, 2.2983038392065067, 2.299977841079353, 2.2986263370375357, 2.2996637043684007, 2.299443778360619], "accuracy": [0.09325055778026581, 0.08572183549404144, 0.09245806187391281, 0.09470347315073013, 0.09602430462837219, 0.09008057415485382, 0.09377889335155487, 0.09760929644107819, 0.09734513610601425, 0.09140139818191528, 0.09325055778026581, 0.09589222073554993, 0.09311848133802414, 0.0940430611371994, 0.09642054885625839, 0.09681680053472519, 0.09470347315073013, 0.09826971590518951, 0.08770307898521423, 0.09774138033390045, 0.1006472036242485, 0.1010434553027153, 0.09813763201236725, 0.09681680053472519, 0.1006472036242485, 0.09021265059709549, 0.09232597798109055, 0.09853387624025345, 0.09826971590518951, 0.09496764093637466, 0.0956280529499054, 0.09840179979801178, 0.09760929644107819, 0.10077928751707077, 0.09602430462837219, 0.09972262382507324, 0.1018359512090683, 0.09866596013307571, 0.10157178342342377, 0.09536388516426086, 0.09985470771789551, 0.09998679161071777, 0.10738343745470047, 0.09826971590518951, 0.10381719470024109], "val_loss": [1.9708138874598913, 1.9706598009381975, 1.970503534589495, 1.9704044886997767, 1.9702818053109306, 1.9701739038739885, 1.9700535365513392, 1.9699671609061105, 1.969874450138637, 1.9697772434779577, 1.9696766308375768, 1.9696168218340193, 1.9695581027439661, 1.9694907324654716, 1.9694605554853166, 1.9694374629429408, 1.969400474003383, 1.969395365033831, 1.969395569392613, 1.9694127355303084, 1.9694223403930664, 1.9694134167262487, 1.9694281305585588, 1.969423702784947, 1.96944488797869, 1.9694413457598006, 1.9694430487496513, 1.9694559233529227, 1.9694578307015556, 1.9694431849888392, 1.9694311959402901, 1.9694204330444336, 1.9694044930594308, 1.9693846021379744, 1.9693635531834193, 1.9693331037248885, 1.969313280923026, 1.969278267451695, 1.9692415509905135, 1.9692231587001257, 1.9692398480006628, 1.9692211832318987, 1.9692436626979284, 1.969242981501988, 1.9692351477486747], "val_accuracy": [0.039000000804662704, 0.04100000113248825, 0.0416666679084301, 0.044333335012197495, 0.04600000008940697, 0.04633333161473274, 0.04800000041723251, 0.04933333396911621, 0.05133333429694176, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.055666666477918625, 0.056333333253860474, 0.05700000002980232, 0.057999998331069946, 0.058666665107011795, 0.05966666713356972, 0.060333333909511566, 0.060333333909511566, 0.06133333221077919, 0.06266666948795319, 0.06266666948795319, 0.06366666406393051, 0.06333333253860474, 0.06300000101327896, 0.06333333253860474, 0.06533333659172058, 0.0663333311676979, 0.06833333522081375, 0.07000000029802322, 0.070333331823349, 0.0716666653752327, 0.07233333587646484, 0.07400000095367432, 0.07466666400432587, 0.07433333247900009, 0.07433333247900009, 0.07533333450555801, 0.07566666603088379, 0.07566666603088379, 0.07533333450555801, 0.07566666603088379, 0.07500000298023224, 0.07566666603088379]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 3, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [9], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [29], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3017888563876894, 2.3016961143946117, 2.302342064045896, 2.3012663110088853, 2.3018564594073805, 2.3037743012918663], "accuracy": [0.09351472556591034, 0.08519349992275238, 0.09259014576673508, 0.0944393053650856, 0.0936468094587326, 0.08968432247638702], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 85, 75, 90, 84, 89, 98, 7], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3017888563876894, 2.3016961143946117, 2.302342064045896, 2.3012663110088853, 2.3018564594073805, 2.3037743012918663], "accuracy": [0.09351472556591034, 0.08519349992275238, 0.09259014576673508, 0.0944393053650856, 0.0936468094587326, 0.08968432247638702], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 5, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 52, 75, 90, 47, 89, 30], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [14], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3017888563876894, 2.3016961143946117, 2.302342064045896, 2.3012663110088853, 2.3018564594073805, 2.3037743012918663], "accuracy": [0.09351472556591034, 0.08519349992275238, 0.09259014576673508, 0.0944393053650856, 0.0936468094587326, 0.08968432247638702], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 2, 5, 6, 9, 4, 1, 9, 3, 5, 9, 1, 3, 9, 8, 5, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [39, 82, 85, 75, 90, 84, 89, 98, 7], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3017888563876894, 2.3016961143946117, 2.302342064045896, 2.3012663110088853, 2.3018564594073805, 2.3037743012918663], "accuracy": [0.09351472556591034, 0.08519349992275238, 0.09259014576673508, 0.0944393053650856, 0.0936468094587326, 0.08968432247638702], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]