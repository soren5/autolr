[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7854285836219788, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.284771233312899, 2.2324023933899384, 2.157182401339171, 2.0274487242108528, 1.8236887044973378, 1.6109254441603285, 1.423607705197141, 1.289528361652915, 1.1939585138352917, 1.1092643482400726, 1.0633753033802888, 1.0214488505057497, 0.9853839410247268, 0.9410131282936139, 0.9252835272829436, 0.8917450503414301, 0.8824905367449306, 0.8654723346131022, 0.85287786377199, 0.8304368473157403, 0.8230095241425958, 0.8008885134748102, 0.787314090738522, 0.7814062115554371, 0.7744054948381381, 0.7641695427730839, 0.7572042515658589, 0.7563380048952366, 0.7488527102256889, 0.7411399625705265, 0.7353477522193511, 0.7294907990605399, 0.7207499473968186, 0.7243868857090735, 0.7096396344464768, 0.7076330323969415, 0.6984647006138898, 0.6905975152457065, 0.6854098878595193, 0.6976089422744672, 0.688439815571248, 0.6794818013241231, 0.6780480088385861, 0.6767850554126397, 0.6753660182612148, 0.67066618084136, 0.6661889949857032, 0.6572642627487943, 0.6545054588524453, 0.6574443023533255, 0.6512521941821494, 0.6541986061424202, 0.6334465813753296], "accuracy": [0.13617752492427826, 0.25822216272354126, 0.3397173285484314, 0.4023246467113495, 0.4497424364089966, 0.4834235906600952, 0.5330867767333984, 0.5584467053413391, 0.5884295105934143, 0.6110157370567322, 0.6306960582733154, 0.6336019039154053, 0.6539427042007446, 0.656980574131012, 0.670320987701416, 0.6819442510604858, 0.6868313550949097, 0.6903975605964661, 0.6929071545600891, 0.7022850513458252, 0.7030775547027588, 0.71100252866745, 0.7177387475967407, 0.7161537408828735, 0.7124554514884949, 0.7236824631690979, 0.7235503792762756, 0.7234182953834534, 0.7244749665260315, 0.7259278893470764, 0.728701651096344, 0.7360982894897461, 0.7387399077415466, 0.7339849472045898, 0.7420420050621033, 0.7446836829185486, 0.744419515132904, 0.7511557340621948, 0.7534011602401733, 0.7458723783493042, 0.7504953145980835, 0.7489103078842163, 0.7490423917770386, 0.7481178045272827, 0.7500990629196167, 0.7541936039924622, 0.7564390301704407, 0.7561748623847961, 0.7617223858833313, 0.7607977986335754, 0.7607977986335754, 0.7611940503120422, 0.7660810947418213], "val_loss": [1.926879814692906, 1.8680731228419714, 1.7685209683009557, 1.6055024351392473, 1.381981475012643, 1.1629464966910226, 1.000671488898141, 0.8946544442858014, 0.8205015318734306, 0.7641718217304775, 0.7290321929114205, 0.6986945186342511, 0.6772881065096173, 0.6574621541159493, 0.6412877525602069, 0.6280825648988996, 0.6162269796643939, 0.6054466111319405, 0.6022064856120518, 0.5882922240665981, 0.5821339743477958, 0.5720009122576032, 0.5675029414040702, 0.557333162852696, 0.559336747441973, 0.5485931975500924, 0.5440844127110073, 0.5387247630528041, 0.5372723511287144, 0.533527169908796, 0.5286761522293091, 0.5263127769742694, 0.5215306111744472, 0.5245809214455741, 0.5117132663726807, 0.5153223276138306, 0.51046051297869, 0.5076358148029873, 0.5016851425170898, 0.5073746953691755, 0.5003204345703125, 0.4934420245034354, 0.4937779222215925, 0.4892701080867222, 0.4995217663901193, 0.4855363368988037, 0.48463245800563265, 0.47927924564906527, 0.48082285267966135, 0.4791144984109061, 0.4766289847237723, 0.4736993653433664, 0.47230877195085796], "val_accuracy": [0.3643333315849304, 0.44566667079925537, 0.5133333206176758, 0.5686666369438171, 0.5933333039283752, 0.625, 0.656000018119812, 0.6729999780654907, 0.6970000267028809, 0.7053333520889282, 0.721666693687439, 0.7239999771118164, 0.722000002861023, 0.7226666808128357, 0.7386666536331177, 0.7316666841506958, 0.7423333525657654, 0.7450000047683716, 0.731333315372467, 0.7383333444595337, 0.7450000047683716, 0.753000020980835, 0.7486666440963745, 0.7606666684150696, 0.7580000162124634, 0.7633333206176758, 0.768666684627533, 0.7663333415985107, 0.765666663646698, 0.7649999856948853, 0.7749999761581421, 0.7726666927337646, 0.7746666669845581, 0.7720000147819519, 0.7786666750907898, 0.7649999856948853, 0.7726666927337646, 0.7736666798591614, 0.778333306312561, 0.781000018119812, 0.7789999842643738, 0.7820000052452087, 0.7940000295639038, 0.7929999828338623, 0.7876666784286499, 0.7883333563804626, 0.7926666736602783, 0.7943333387374878, 0.7893333435058594, 0.7923333048820496, 0.7886666655540466, 0.7886666655540466, 0.7889999747276306]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 0, 2, 6, 5, 4, 0, 5, 5, 5, 4, 8, 4, 0, 2, 2, 8, 9, 6, 8, 4, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 0, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 41, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7854285836219788, "mapping_values": [1, 23, 23, 15, 8, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.284771264803928, 2.2324019662141326, 2.157175631429289, 2.027429756849292, 1.8236527980956356, 1.6108903763647235, 1.4235699918244604, 1.2895399310002789, 1.1940549527806785, 1.1093910433722998, 1.0634498286162228, 1.0215375122534616, 0.9854232762483731, 0.9410942513488303, 0.9253591030438532, 0.8918226047938983, 0.8825071736207775, 0.8655163728014637, 0.8529395571537242, 0.8304055004686082, 0.8227870088951887, 0.8007231965560672, 0.787213926672101, 0.7813707982009003, 0.7743122807787929, 0.7639657617197879, 0.7570776503713706, 0.7562627211427645, 0.7488587222173623, 0.7412364700876286, 0.7351276953033625, 0.7295243221267087, 0.7205870577199758, 0.7243863714054638, 0.7096901199427483, 0.7075194484049759, 0.6982876642064301, 0.690455153893486, 0.6853223787936804, 0.6975606233688504, 0.6884116314075028, 0.6792172616136828, 0.6778638862096056, 0.6768545916193528, 0.6751935420853823, 0.6706456947776982, 0.66629279277832, 0.6571293499538723, 0.6542858177597465, 0.6572035414321374, 0.6510783097117632, 0.653998549352028, 0.6334986806529908], "accuracy": [0.13617752492427826, 0.25822216272354126, 0.3397173285484314, 0.40245673060417175, 0.44987452030181885, 0.4831594228744507, 0.5332188606262207, 0.5581825375556946, 0.5880332589149475, 0.6111478209495544, 0.6310923099517822, 0.6332056522369385, 0.6535464525222778, 0.6568484902381897, 0.6707172393798828, 0.6827367544174194, 0.6864351034164429, 0.6906617283821106, 0.6930392384529114, 0.7016246318817139, 0.7036058902740479, 0.7113987803459167, 0.7172104120254517, 0.7150970697402954, 0.7125874757766724, 0.7226257920265198, 0.7239466309547424, 0.7240787148475647, 0.7253995537757874, 0.726192057132721, 0.7298903465270996, 0.7368907928466797, 0.7384757399559021, 0.7342491149902344, 0.7412495017051697, 0.7440232634544373, 0.7440232634544373, 0.750759482383728, 0.7530049085617065, 0.7461365461349487, 0.7506273984909058, 0.7483819723129272, 0.7498348951339722, 0.7481178045272827, 0.7504953145980835, 0.7544577717781067, 0.7565711140632629, 0.7565711140632629, 0.7623828053474426, 0.7598732113838196, 0.7602694630622864, 0.7613261342048645, 0.7666094303131104], "val_loss": [1.926879610334124, 1.8680714198521204, 1.768505368913923, 1.6054696355547224, 1.3819398539406913, 1.1629188741956438, 1.000659397670201, 0.8947986875261579, 0.8206714391708374, 0.7643241882324219, 0.7291931765420097, 0.6987707274300712, 0.6772530930382865, 0.6575081178120205, 0.6412263938358852, 0.628083416393825, 0.6161407402583531, 0.605284299169268, 0.602114064352853, 0.5880341018949237, 0.5821044785635812, 0.572011010987418, 0.5675253868103027, 0.557382345199585, 0.5594233104160854, 0.5488000597272601, 0.5439591918672834, 0.5388164009366717, 0.5370515755244664, 0.5337353774479457, 0.5287082706178937, 0.5263143607548305, 0.521623969078064, 0.5248945099966866, 0.5114390679768154, 0.5146299600601196, 0.510253940309797, 0.5071752752576556, 0.5015192542757306, 0.5076650891985212, 0.500452058655875, 0.49333315236227854, 0.4938217060906546, 0.4892200231552124, 0.4996895449502127, 0.48550609179905485, 0.4844520262309483, 0.4795335531234741, 0.48054378373282297, 0.4792008399963379, 0.47660257135118755, 0.47352181162152973, 0.47220252241407124], "val_accuracy": [0.3643333315849304, 0.44566667079925537, 0.5133333206176758, 0.5690000057220459, 0.593666672706604, 0.624666690826416, 0.6570000052452087, 0.6729999780654907, 0.6973333358764648, 0.7049999833106995, 0.7210000157356262, 0.7250000238418579, 0.7223333120346069, 0.7226666808128357, 0.7386666536331177, 0.731333315372467, 0.7426666617393494, 0.7446666955947876, 0.7319999933242798, 0.7386666536331177, 0.7446666955947876, 0.753000020980835, 0.7480000257492065, 0.7609999775886536, 0.7563333511352539, 0.7630000114440918, 0.7683333158493042, 0.765999972820282, 0.765999972820282, 0.765666663646698, 0.7756666541099548, 0.7720000147819519, 0.7739999890327454, 0.7739999890327454, 0.7789999842643738, 0.765999972820282, 0.7716666460037231, 0.7746666669845581, 0.7786666750907898, 0.7803333401679993, 0.7796666622161865, 0.7823333144187927, 0.7919999957084656, 0.7916666865348816, 0.7889999747276306, 0.7876666784286499, 0.7923333048820496, 0.7926666736602783, 0.7900000214576721, 0.7923333048820496, 0.7879999876022339, 0.7889999747276306, 0.7893333435058594]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 3, 8, 2, 2, 5, 4, 2, 5, 5, 5, 4, 3, 4, 0, 2, 8, 8, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 49, 74, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7805714011192322, "mapping_values": [1, 34, 34, 22, 12, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.284771233312899, 2.2324023169927028, 2.157181974163365, 2.0274527840342866, 1.8236761331526736, 1.6109052681100997, 1.4235862111528834, 1.289499137867963, 1.1939221943500193, 1.1092442677178798, 1.0633798741929015, 1.0214268468894097, 0.985309553688008, 0.9409472927708966, 0.9253392541381772, 0.8917120220150694, 0.882508711721352, 0.8653946978588303, 0.8528625422842893, 0.8304482198048104, 0.8230241808940423, 0.8008636471507509, 0.7873448429877936, 0.7814281484580327, 0.7743489068449764, 0.7639889997529662, 0.7573773447847826, 0.7563191218430324, 0.7488357325775465, 0.7410182222210263, 0.7352175540093339, 0.7294455681179713, 0.7205934582873263, 0.7244631227658425, 0.7094428492590673, 0.7076640047763774, 0.6982459702496169, 0.6905059768318768, 0.685404018923717, 0.6976887772678778, 0.6884368699082861, 0.6793979860929812, 0.6779388439275837, 0.6770005217081583, 0.6751287940423628, 0.6704333139889276, 0.666359837218015, 0.6571287036241242, 0.6543508214311924], "accuracy": [0.13617752492427826, 0.25822216272354126, 0.33958524465560913, 0.4023246467113495, 0.4497424364089966, 0.4835556745529175, 0.5330867767333984, 0.5583146214485168, 0.5884295105934143, 0.6108836531639099, 0.6305639743804932, 0.6330735683441162, 0.6540747880935669, 0.6572447419166565, 0.670320987701416, 0.6820763349533081, 0.6869634389877319, 0.6909258961677551, 0.6936996579170227, 0.7020208835601807, 0.7034738063812256, 0.7112666964530945, 0.717870831489563, 0.7156254053115845, 0.7128516435623169, 0.7238145470619202, 0.7234182953834534, 0.7240787148475647, 0.7240787148475647, 0.726192057132721, 0.7294940948486328, 0.7363624572753906, 0.737947404384613, 0.7339849472045898, 0.7416457533836365, 0.7446836829185486, 0.744419515132904, 0.7518161535263062, 0.7534011602401733, 0.7458723783493042, 0.7500990629196167, 0.7491744756698608, 0.7493065595626831, 0.7475894689559937, 0.7504953145980835, 0.7549861073493958, 0.7564390301704407, 0.7564390301704407, 0.7618544697761536], "val_loss": [1.926879814692906, 1.8680765969412667, 1.7685252598353796, 1.6054881300245012, 1.3819449969700404, 1.1629399912697929, 1.0006590230124337, 0.8947182723454067, 0.8204919951302665, 0.7641989844185966, 0.7291790246963501, 0.6987442970275879, 0.6772932665688651, 0.6575898272650582, 0.6413024663925171, 0.6281668969563076, 0.6161048242024013, 0.6054433413914272, 0.602185879434858, 0.5880609410149711, 0.5821712698255267, 0.5719925165176392, 0.567454286984035, 0.5573596443448748, 0.5590491124561855, 0.5484758956091744, 0.5439690351486206, 0.5387210675648281, 0.5371532780783517, 0.5336599520274571, 0.5285489559173584, 0.5261112792151315, 0.5217522723334176, 0.5246559211186, 0.5115954194750104, 0.5146783079419818, 0.5104014362607684, 0.5071287325450352, 0.5017788239887783, 0.507496680532183, 0.5005200760705131, 0.4934077433177403, 0.4938708714076451, 0.48944972242627827, 0.49985800470624653, 0.4856761693954468, 0.48441961833408903, 0.4792587586811611, 0.4807246582848685], "val_accuracy": [0.3643333315849304, 0.44566667079925537, 0.5130000114440918, 0.5690000057220459, 0.593666672706604, 0.624666690826416, 0.6570000052452087, 0.6726666688919067, 0.6970000267028809, 0.7049999833106995, 0.721666693687439, 0.7250000238418579, 0.721666693687439, 0.7229999899864197, 0.7390000224113464, 0.7316666841506958, 0.7429999709129333, 0.7450000047683716, 0.7306666374206543, 0.7386666536331177, 0.7443333268165588, 0.7523333430290222, 0.7476666569709778, 0.7603333592414856, 0.7586666941642761, 0.7636666893959045, 0.7683333158493042, 0.7676666378974915, 0.765999972820282, 0.765666663646698, 0.7753333449363708, 0.7716666460037231, 0.7739999890327454, 0.7723333239555359, 0.7789999842643738, 0.765999972820282, 0.7726666927337646, 0.7736666798591614, 0.778333306312561, 0.7806666493415833, 0.7793333530426025, 0.7820000052452087, 0.7919999957084656, 0.7933333516120911, 0.7883333563804626, 0.7886666655540466, 0.7933333516120911, 0.7933333516120911, 0.7889999747276306]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 2, 1, 2, 9, 5, 4, 4, 6, 5, 5, 4, 8, 4, 0, 2, 8, 8, 4, 2, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 0, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 35, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7797142863273621, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.28477124682255, 2.232401246486669, 2.1571774890220965, 2.0274449706376743, 1.823663816397232, 1.6108839857642834, 1.4235778214861894, 1.2894767744351276, 1.1939203301598416, 1.1092607585776988, 1.0633737219952952, 1.0213661518520163, 0.9853205301695181, 0.9409506031865724, 0.925336664056167, 0.8917159560318432, 0.8825258365113265, 0.8654798950973897, 0.8528530728059627, 0.8304872774980198, 0.8231270244218859, 0.8007893663166914, 0.7873537464463684, 0.7814846827511176, 0.7744011818110872, 0.7639971680534735, 0.7573282788883442, 0.7563194359817903, 0.7489106540178595, 0.7413503620146193, 0.735250203404145, 0.7296686224839187, 0.7207310702019458, 0.7243079023747916, 0.7096688956506437, 0.707547060077563, 0.6981959819730719, 0.6903795818091542, 0.6855636557898486, 0.6977429145583229, 0.6886636229113124, 0.6795160913779168, 0.6777752273748139, 0.6771372248389229, 0.6751737259067581, 0.670718869741299, 0.6662099916370333, 0.6570243824899724, 0.6544830683609435], "accuracy": [0.13617752492427826, 0.25822216272354126, 0.3397173285484314, 0.4023246467113495, 0.44987452030181885, 0.48329150676727295, 0.5336151123046875, 0.5588429570198059, 0.5884295105934143, 0.6111478209495544, 0.6308281421661377, 0.6333377361297607, 0.6535464525222778, 0.6576409935951233, 0.6704530715942383, 0.6823405027389526, 0.6865671873092651, 0.6900013089179993, 0.6930392384529114, 0.7016246318817139, 0.7036058902740479, 0.7111346125602722, 0.7176066637039185, 0.7154933214187622, 0.7129837274551392, 0.7235503792762756, 0.7243428826332092, 0.7246070504188538, 0.724739134311676, 0.7250033020973206, 0.7289658188819885, 0.735041618347168, 0.7382115721702576, 0.7338528633117676, 0.7411174178123474, 0.7450799345970154, 0.7440232634544373, 0.7508915662765503, 0.7539294958114624, 0.7457403540611267, 0.7497028112411499, 0.7490423917770386, 0.748778223991394, 0.7473253011703491, 0.7500990629196167, 0.7539294958114624, 0.7568352818489075, 0.7560427784919739, 0.7604015469551086], "val_loss": [1.9268797465733118, 1.8680702618190221, 1.7685138157435827, 1.6054697036743164, 1.3819304874965124, 1.1628987107958113, 1.0006798676082067, 0.8946900027138847, 0.8205265828541347, 0.7641571589878627, 0.7291058472224644, 0.6987658739089966, 0.6772836106164115, 0.6574506419045585, 0.6412981407982963, 0.6281453030450004, 0.6162804535457066, 0.6054577486855643, 0.6021944965635028, 0.5880923100880214, 0.5821374995367867, 0.5719201735087803, 0.5673355715615409, 0.5571707487106323, 0.5592188664845058, 0.5485375097819737, 0.5441551719393048, 0.5387869051524571, 0.5369290454047067, 0.5341184990746635, 0.5286004713603428, 0.5261742217200143, 0.5214289767401559, 0.5251142467771258, 0.511568410055978, 0.5141608715057373, 0.5104104791368756, 0.5071721076965332, 0.5018552541732788, 0.508415767124721, 0.5004282508577619, 0.4933250291006906, 0.49393909318106516, 0.48953189168657574, 0.49950488976069857, 0.4856060743331909, 0.48421134267534527, 0.4793972969055176, 0.480762209211077], "val_accuracy": [0.3643333315849304, 0.445333331823349, 0.5136666893959045, 0.5690000057220459, 0.593666672706604, 0.625, 0.6566666960716248, 0.6729999780654907, 0.6970000267028809, 0.7053333520889282, 0.7213333249092102, 0.7246666550636292, 0.722000002861023, 0.7226666808128357, 0.7386666536331177, 0.731333315372467, 0.7429999709129333, 0.7446666955947876, 0.731333315372467, 0.7386666536331177, 0.7446666955947876, 0.7523333430290222, 0.7483333349227905, 0.7599999904632568, 0.7573333382606506, 0.7630000114440918, 0.7683333158493042, 0.7670000195503235, 0.765666663646698, 0.7649999856948853, 0.7766666412353516, 0.7713333368301392, 0.7743333578109741, 0.7733333110809326, 0.7793333530426025, 0.7673333287239075, 0.7720000147819519, 0.7739999890327454, 0.7789999842643738, 0.7803333401679993, 0.7796666622161865, 0.7826666831970215, 0.7926666736602783, 0.7943333387374878, 0.7883333563804626, 0.7896666526794434, 0.7913333177566528, 0.7926666736602783, 0.7893333435058594]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 2, 1, 2, 6, 5, 4, 8, 5, 5, 5, 4, 8, 4, 0, 2, 8, 8, 4, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 2, 1, 0, 1, 2, 2, 1, 0, 2, 1, 2, 0, 2, 1], [70, 83, 89, 50, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 1, 4, 6, 5, 4, 8, 2, 5, 5, 3, 8, 4, 0, 2, 3, 2, 9, 6, 8, 8, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 2, 0, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 41, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 2, 1, 2, 0, 9, 4, 0, 5, 5, 5, 1, 8, 4, 0, 2, 3, 4, 9, 8, 3, 0, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 41, 49, 58, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 9, 1, 1, 2, 0, 4, 4, 0, 5, 0, 5, 1, 8, 4, 0, 2, 3, 4, 9, 8, 3, 0, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 2, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 83, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 4], [2, 6, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 9, 1, 2, 6, 5, 4, 2, 5, 5, 5, 0, 8, 4, 0, 4, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 32, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027160511576126, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 1, 2, 6, 5, 4, 8, 4, 5, 5, 0, 8, 1, 0, 2, 2, 8, 9, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 0, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 44, 86, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [2, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 36, 24, 12, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(grad))))))))), tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.square(alpha), tf.math.add(alpha, grad)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.7368027146050094e+34, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [21.11379405430385, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 1, 5, 4, 2, 5, 5, 2, 5, 8, 4, 0, 3, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 2, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [2, 4], [2, 1, 1, 5, 3, 4], [97], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11927089840173721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 2, 2, 6, 0, 4, 2, 5, 5, 5, 2, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 0, 2, 0, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 92, 89, 41, 7, 58, 99, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 3, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [6, 4, 5], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 42, 27, 15, 4, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))))))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), grad))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(alpha)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1158367469906807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 1, 1, 2, 6, 5, 4, 8, 5, 5, 5, 4, 8, 4, 0, 8, 2, 8, 9, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 0, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 44, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [77], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 15, 9, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [21.822386112699355, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16166952252388, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13185544192.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [1, 1, 1, 0], [7, 4], [2, 0, 1, 5, 3, 4], [56], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06942857056856155, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303458539391899, 2.300897188631299, 2.3013303939928673, 2.301861102633614, 2.299083149932269, 2.3011065020364083, 2.300966867728555, 2.3003968899008496, 2.301092588733043, 2.2993670036732605, 2.298908798402689, 2.299853341485909, 2.2994954816228472, 2.300452501672118, 2.301178694684602, 2.2993337543428596, 2.2997720691238523, 2.300295175704281, 2.300703641398708, 2.30075715041951, 2.300967913451149], "accuracy": [0.08915598690509796, 0.09338264167308807, 0.09734513610601425, 0.09391097724437714, 0.10038304328918457, 0.09615638852119446, 0.09681680053472519, 0.09285431355237961, 0.1026284471154213, 0.10038304328918457, 0.10421344637870789, 0.09734513610601425, 0.10196803510189056, 0.09668471664190292, 0.09536388516426086, 0.10659094154834747, 0.09338264167308807, 0.10011887550354004, 0.09470347315073013, 0.09074098616838455, 0.0936468094587326], "val_loss": [1.9702318055289132, 1.9696606227329798, 1.9693878718784876, 1.9692479542323522, 1.9693356241498674, 1.969449520111084, 1.9693782670157296, 1.9692957741873605, 1.9692135538373674, 1.969346523284912, 1.969613688332694, 1.9698609624590193, 1.9700965881347656, 1.9702119146074568, 1.970376900264195, 1.9705447469438826, 1.9707232202802385, 1.9708860261099679, 1.9710144315447127, 1.9711452892848425, 1.971254484994071], "val_accuracy": [0.047333333641290665, 0.054666668176651, 0.057999998331069946, 0.06233333423733711, 0.06566666811704636, 0.06833333522081375, 0.07133333384990692, 0.07333333045244217, 0.07833333313465118, 0.0806666687130928, 0.07833333313465118, 0.07833333313465118, 0.08033332973718643, 0.08533333241939545, 0.08699999749660492, 0.08766666799783707, 0.08733333647251129, 0.08666666597127914, 0.08699999749660492, 0.0846666693687439, 0.0833333358168602]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 3, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 8, 9, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 2, 0, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 50, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 20, 20, 11, 9, 5, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3039037979447436, 2.302192286572137, 2.303257128849415, 2.304425159386829, 2.3013247097362033, 2.303636513743906], "accuracy": [0.08770307898521423, 0.09219389408826828, 0.09311848133802414, 0.08809932321310043, 0.09628847241401672, 0.08691058307886124], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 3, 2, 6, 5, 4, 8, 1, 5, 5, 4, 9, 4, 0, 2, 2, 8, 9, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 1, 1, 0, 1, 2, 2, 1, 0, 2, 1, 2, 0, 2, 1], [89, 17, 89, 75, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3039037979447436, 2.302192286572137, 2.303257128849415, 2.304425159386829, 2.3013247097362033, 2.303636513743906], "accuracy": [0.08770307898521423, 0.09219389408826828, 0.09311848133802414, 0.08809932321310043, 0.09628847241401672, 0.08691058307886124], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 57, 89, 16, 49, 47, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [5], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3039037979447436, 2.302192286572137, 2.303257128849415, 2.304425159386829, 2.3013247097362033, 2.303636513743906], "accuracy": [0.08770307898521423, 0.09219389408826828, 0.09311848133802414, 0.08809932321310043, 0.09628847241401672, 0.08691058307886124], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 0, 2, 6, 5, 4, 0, 5, 5, 5, 4, 8, 4, 0, 2, 2, 8, 9, 6, 8, 4, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 0, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 41, 49, 58, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 3, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3039037979447436, 2.302192286572137, 2.303257128849415, 2.304425159386829, 2.3013247097362033, 2.303636513743906], "accuracy": [0.08770307898521423, 0.09219389408826828, 0.09311848133802414, 0.08809932321310043, 0.09628847241401672, 0.08691058307886124], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 4, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 0, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [70, 83, 89, 41, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0], [3, 4, 8, 8], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.sqrt(sigma)))), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3039037979447436, 2.302192286572137, 2.303257128849415, 2.304425159386829, 2.3013247097362033, 2.303636513743906], "accuracy": [0.08770307898521423, 0.09219389408826828, 0.09311848133802414, 0.08809932321310043, 0.09628847241401672, 0.08691058307886124], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 3, 2, 8, 2, 6, 5, 3, 2, 5, 5, 5, 5, 8, 4, 0, 0, 3, 8, 1, 6, 8, 3, 5, 8, 4, 5, 4, 1, 4], [0, 2, 0, 2, 0, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1], [83, 83, 89, 41, 49, 58, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53, 60], [1, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3039037979447436, 2.302192286572137, 2.303257128849415, 2.304425159386829, 2.3013247097362033, 2.303636513743906], "accuracy": [0.08770307898521423, 0.09219389408826828, 0.09311848133802414, 0.08809932321310043, 0.09628847241401672, 0.08691058307886124], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]