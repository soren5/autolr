[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7888571619987488, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2917346256504505, 2.2196439148932243, 2.021475887600898, 1.6055981951335543, 1.3709256766951237, 1.1879796960240168, 0.9560116639132229, 0.9202304938922484, 0.8487397623320361, 0.8318025267765018, 0.8112980966806695, 0.7758485902380776, 0.7442811649740962, 0.7387735443407472, 0.711409495475506, 0.7063881310143129, 0.6971401300302444, 0.6737606094387686, 0.6499170158060865, 0.6328298893382347, 0.6171780710112638, 0.5973914225245385, 0.5871436006404689, 0.5789235675764783, 0.5686813676204537, 0.5523971286684121, 0.5423311013445453, 0.5322454016930738, 0.5270911077419529, 0.5170141010354649, 0.5045276830193547, 0.49387793626925097, 0.483265230715818, 0.47724841935617923, 0.46943644891719244, 0.4620912282647332, 0.4457134684913619, 0.44836277619895837, 0.4517888931306346, 0.4369011094321066, 0.43156267335118553, 0.426401245375162, 0.41560246790593813, 0.41427472272348786, 0.40338996586121306, 0.40637297590395177, 0.40304828075889615, 0.38737462340738354, 0.3886681532209513, 0.3778939799798903], "accuracy": [0.11874257028102875, 0.2826575040817261, 0.3932109475135803, 0.4562145173549652, 0.5304450988769531, 0.6012415885925293, 0.6388852000236511, 0.6654338836669922, 0.6837934255599976, 0.6936996579170227, 0.6980583667755127, 0.707040011882782, 0.7141724824905396, 0.7189275026321411, 0.7362303733825684, 0.7371549606323242, 0.7376832365989685, 0.7446836829185486, 0.7576277852058411, 0.7656848430633545, 0.7707040309906006, 0.7794214487075806, 0.7807422876358032, 0.7803460359573364, 0.7872143983840942, 0.7922335267066956, 0.791441023349762, 0.8025360107421875, 0.7984414100646973, 0.8038568496704102, 0.8124422430992126, 0.813498854637146, 0.819970965385437, 0.8193105459213257, 0.8212917447090149, 0.8240655064582825, 0.829216718673706, 0.8330471515655518, 0.8302733898162842, 0.8404437899589539, 0.841500461101532, 0.8380662798881531, 0.8457271456718445, 0.8446704745292664, 0.848368763923645, 0.8491612672805786, 0.8445383906364441, 0.8486329317092896, 0.8543124794960022, 0.8560295701026917], "val_loss": [1.9316344261169434, 1.818934372493199, 1.472273622240339, 0.941082307270595, 0.7593950373785836, 0.6817812408719744, 0.7037324224199567, 0.6477728400911603, 0.6009539876665387, 0.6092459814889091, 0.5827193260192871, 0.5608654703412738, 0.5602088485445295, 0.5452014889035907, 0.5288551024028233, 0.5138255868639264, 0.5037706579480853, 0.4949674095426287, 0.4846585307802473, 0.4733762570789882, 0.4587019852229527, 0.448556763785226, 0.443480270249503, 0.431216835975647, 0.4242080194609506, 0.41663105147225515, 0.4134036047118051, 0.4117004615919931, 0.4048243335315159, 0.4025867496218, 0.3972846099308559, 0.39777062620435444, 0.39213537318365915, 0.3870859146118164, 0.38185599020549227, 0.3756439600672041, 0.37362282616751535, 0.3751632571220398, 0.3768555096217564, 0.37010739530835834, 0.36660138198307585, 0.36280237776892527, 0.36151496853147236, 0.35803559848240446, 0.35148278304508757, 0.350737384387425, 0.3484303525515965, 0.3514089414051601, 0.3524646248136248, 0.34874668291636873], "val_accuracy": [0.3400000035762787, 0.4480000138282776, 0.5490000247955322, 0.6499999761581421, 0.6850000023841858, 0.7099999785423279, 0.7089999914169312, 0.7226666808128357, 0.7239999771118164, 0.718999981880188, 0.7433333396911621, 0.7483333349227905, 0.7573333382606506, 0.7559999823570251, 0.7620000243186951, 0.7703333497047424, 0.7823333144187927, 0.781000018119812, 0.7799999713897705, 0.7879999876022339, 0.7943333387374878, 0.8066666722297668, 0.8069999814033508, 0.8090000152587891, 0.8173333406448364, 0.8213333487510681, 0.8226666450500488, 0.828000009059906, 0.8299999833106995, 0.8246666789054871, 0.8346666693687439, 0.8376666903495789, 0.840666651725769, 0.8370000123977661, 0.8376666903495789, 0.843999981880188, 0.846666693687439, 0.847000002861023, 0.843999981880188, 0.8489999771118164, 0.8506666421890259, 0.859000027179718, 0.859000027179718, 0.8600000143051147, 0.8616666793823242, 0.8603333234786987, 0.8579999804496765, 0.8546666502952576, 0.8533333539962769, 0.8543333411216736]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7559999823570251, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 9, 10, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, alpha)), tf.math.add(beta, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2988838161286616, 2.289782514504123, 2.2787953178565483, 2.2691447565725937, 2.2579281966857243, 2.2472082968039078, 2.235775599091076, 2.2224486331740674, 2.2075755720550454, 2.191862291836893, 2.172690264033352, 2.151788097441299, 2.131492611817428, 2.103717731746149, 2.0718713907942936, 2.040806382040322, 2.003998989851688, 1.9671036786470022, 1.9276939304103908, 1.8779626043953555, 1.8353392034237648, 1.7833478371102844, 1.7405600709339506, 1.6915004518384458, 1.643991204096011, 1.592467842588902, 1.5582999982507615, 1.5082648227306452, 1.4746541765308998, 1.42617128166493, 1.4032387070573316, 1.3685083052643128, 1.3407846932649896, 1.3135786044237054, 1.2836448820810968, 1.270993273476442, 1.2380265351598918, 1.2172784758533675, 1.2121373780131766, 1.1851649671230082, 1.176225835195921, 1.161562179750723, 1.132366303014497, 1.1307204195757459, 1.104676156515742, 1.1028282605992363, 1.0894375928656583, 1.0802046684714324, 1.0613519182892965, 1.0511867857376158, 1.0332689305826217, 1.0310828554600362, 1.025955441581921, 1.0135895133396386, 1.0089565414825623, 1.0018702670016608, 0.9877665057520526, 0.9786943114901326, 0.9706011982232415, 0.9593303047465989, 0.9567541129569241, 0.9551048459330916, 0.9478244933359627, 0.9341367940546231, 0.9402170839909282, 0.9314169439704522, 0.9261485752790454, 0.9226914717851613, 0.9212383847541467, 0.9091055186322935, 0.9064235375022309, 0.8868418020610686, 0.8900136626029704, 0.8901868082938209, 0.8815011191739697, 0.8808539996073467, 0.8756088878122444, 0.8806080375333677, 0.870306500433112, 0.8797083190246077, 0.862085064412297, 0.8576610688882308, 0.8611939943635059, 0.8451339070193283, 0.8458895125031362, 0.8450398723667545, 0.8515372566338527, 0.8425605041775107, 0.8416492461591365, 0.8312023305748085, 0.827919332327041, 0.823864949905263, 0.8184033434199871, 0.8332043627013526, 0.8286820740873598, 0.819947943002824, 0.8128095400520776, 0.799604369027031, 0.8092839203852672, 0.810883160249007], "accuracy": [0.09919429570436478, 0.1216483935713768, 0.15255580842494965, 0.17738740146160126, 0.2036719024181366, 0.23325848579406738, 0.2491084337234497, 0.27922335267066956, 0.302469938993454, 0.31158366799354553, 0.33364152908325195, 0.34803855419158936, 0.3537181317806244, 0.3774930536746979, 0.39122968912124634, 0.4027208983898163, 0.41804254055023193, 0.4213446080684662, 0.433760404586792, 0.4383833110332489, 0.4519878625869751, 0.46070531010627747, 0.46044114232063293, 0.47246071696281433, 0.48989564180374146, 0.49808478355407715, 0.5036323070526123, 0.5153876543045044, 0.5246334671974182, 0.5324263572692871, 0.5326905250549316, 0.5385021567344666, 0.5498613119125366, 0.5495971441268921, 0.570202112197876, 0.5629374980926514, 0.5729758143424988, 0.5772024989128113, 0.5875049233436584, 0.5894861817359924, 0.5930524468421936, 0.5954299569129944, 0.6085061430931091, 0.6066569685935974, 0.6160348653793335, 0.6096948981285095, 0.6189407110214233, 0.6210539937019348, 0.6255448460578918, 0.629507303237915, 0.6394135355949402, 0.6362435817718506, 0.6387531161308289, 0.6436402201652527, 0.6470743417739868, 0.6444327235221863, 0.6478668451309204, 0.6522256135940552, 0.6564522385597229, 0.6651697158813477, 0.6597543358802795, 0.6536785364151001, 0.6625280380249023, 0.6682076454162598, 0.6660943031311035, 0.6656980514526367, 0.6646413803100586, 0.6715096831321716, 0.6738871932029724, 0.6713775992393494, 0.6800950765609741, 0.6827367544174194, 0.6775855422019958, 0.6836613416671753, 0.6880200505256653, 0.684982180595398, 0.6864351034164429, 0.6832650899887085, 0.6857746839523315, 0.6906617283821106, 0.687887966632843, 0.6933034062385559, 0.6922467350959778, 0.6935675740242004, 0.6942279934883118, 0.6935675740242004, 0.6963412761688232, 0.7004358768463135, 0.6927750706672668, 0.698718786239624, 0.7038700580596924, 0.7012283802032471, 0.7066437602043152, 0.7003037929534912, 0.6992471218109131, 0.6988508701324463, 0.7082287669181824, 0.7080966830253601, 0.7086250185966492, 0.711530864238739], "val_loss": [1.9619312286376953, 1.9528401238577706, 1.9436706815447127, 1.9341874803815569, 1.9240130015781947, 1.9130937031337194, 1.9012706620352608, 1.8881499426705497, 1.8733767100742884, 1.8568434715270996, 1.8381803376334054, 1.8171625137329102, 1.7937757628304618, 1.7672856875828333, 1.7375213759286063, 1.704500334603446, 1.6681388105664934, 1.6286427634102958, 1.586348056793213, 1.5410329273768835, 1.4939496517181396, 1.4447073595864433, 1.3957178592681885, 1.3462692669459753, 1.2979205335889543, 1.2502254758562361, 1.2056357860565186, 1.1626038551330566, 1.1234961918422155, 1.0857815742492676, 1.0520188808441162, 1.0205510003226144, 0.9918839931488037, 0.9666440486907959, 0.9418777057102748, 0.9205435344151088, 0.9000986984797886, 0.8812548092433384, 0.8647512027195522, 0.8486019372940063, 0.8348982845033918, 0.8212066548211234, 0.8081453357424054, 0.7968178987503052, 0.7854621921266828, 0.7751399108341762, 0.765397446496146, 0.7566724504743304, 0.7476937430245536, 0.7389899492263794, 0.7306528602327619, 0.7237725257873535, 0.7171901975359235, 0.7111782857349941, 0.7048368794577462, 0.6990889992032733, 0.6941175631114415, 0.6885550022125244, 0.683560814176287, 0.6785844394138881, 0.6738244806017194, 0.669605187007359, 0.6660967554364886, 0.6617643492562431, 0.658187849181039, 0.6545753479003906, 0.6509666953768048, 0.6467950514384678, 0.6438577515738351, 0.6410046304975238, 0.6372365951538086, 0.6338832889284406, 0.631053056035723, 0.6284545660018921, 0.6253087861197335, 0.6223470653806414, 0.6196163892745972, 0.6173152242388044, 0.6150513376508441, 0.6129101174218314, 0.6105628865105766, 0.6079512323651995, 0.6060281310762677, 0.6039600202015468, 0.6018346548080444, 0.5994391441345215, 0.5974749837602887, 0.5951297112873623, 0.5935186999184745, 0.5918534653527396, 0.5903837510517665, 0.5888644627162388, 0.5867497750691005, 0.5848661661148071, 0.5833753347396851, 0.5822892359324864, 0.5801306792667934, 0.5776840107781547, 0.576224684715271, 0.5746852670397077], "val_accuracy": [0.10300000011920929, 0.19599999487400055, 0.2773333191871643, 0.3310000002384186, 0.3646666705608368, 0.382666677236557, 0.4020000100135803, 0.4183333218097687, 0.43433332443237305, 0.44566667079925537, 0.4583333432674408, 0.4716666638851166, 0.4893333315849304, 0.5043333172798157, 0.518666684627533, 0.531333327293396, 0.5406666398048401, 0.5543333292007446, 0.5616666674613953, 0.5713333487510681, 0.5803333520889282, 0.5796666741371155, 0.5886666774749756, 0.5913333296775818, 0.6006666421890259, 0.609666645526886, 0.6176666617393494, 0.624666690826416, 0.6383333206176758, 0.6543333530426025, 0.659333348274231, 0.6663333177566528, 0.671999990940094, 0.6759999990463257, 0.6763333082199097, 0.6823333501815796, 0.6850000023841858, 0.6886666417121887, 0.6926666498184204, 0.6946666836738586, 0.6949999928474426, 0.6973333358764648, 0.6996666789054871, 0.70333331823349, 0.7049999833106995, 0.70333331823349, 0.7046666741371155, 0.7110000252723694, 0.7093333601951599, 0.7149999737739563, 0.7153333425521851, 0.7176666855812073, 0.7166666388511658, 0.7179999947547913, 0.721666693687439, 0.722000002861023, 0.7233333587646484, 0.7223333120346069, 0.7250000238418579, 0.7266666889190674, 0.7266666889190674, 0.7276666760444641, 0.7293333411216736, 0.7293333411216736, 0.7306666374206543, 0.731333315372467, 0.7306666374206543, 0.734000027179718, 0.7329999804496765, 0.7353333234786987, 0.734666645526886, 0.7353333234786987, 0.7379999756813049, 0.7353333234786987, 0.7363333106040955, 0.7366666793823242, 0.7393333315849304, 0.7396666407585144, 0.7409999966621399, 0.7416666746139526, 0.7409999966621399, 0.7453333139419556, 0.7423333525657654, 0.7453333139419556, 0.746666669845581, 0.746666669845581, 0.7476666569709778, 0.7486666440963745, 0.7480000257492065, 0.75, 0.75, 0.749666690826416, 0.750333309173584, 0.7516666650772095, 0.7516666650772095, 0.7509999871253967, 0.7506666779518127, 0.7536666393280029, 0.7546666860580444, 0.7559999823570251]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 4, 2, 0, 6, 4, 2, 8, 1, 9, 2, 6, 6, 6, 5, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 1, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7557142972946167, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2988838161286616, 2.289782514504123, 2.278795380838606, 2.2691446620995075, 2.257928223705027, 2.24720818882117, 2.2357752661994104, 2.222448538700981, 2.20757544609093, 2.1918620354369365, 2.1726899401796116, 2.1517869548208095, 2.1314918155982556, 2.103716791581484, 2.07186913723329, 2.0408038042476857, 2.0039978359574104, 1.9671027161709431, 1.927693241796064, 1.8779603304281651, 1.835338000151554, 1.7833481878416177, 1.7405634356244144, 1.6915049141014824, 1.6439943301317133, 1.5924702382374276, 1.5583003132082862, 1.5082646228885763, 1.4746522445877734, 1.4261719182875683, 1.4032403012591739, 1.3685120392343262, 1.3407859826809096, 1.3135839825875693, 1.2836495682925848, 1.2709966360727527, 1.2380265249253075, 1.2172799986020653, 1.2121398765586386, 1.1851637170866196, 1.1762246918668837, 1.1615623371586303, 1.1323698349065785, 1.1307169991776518, 1.1046724250177744, 1.1028322453165664, 1.0894374020615147, 1.0802034523036455, 1.0613472166944409, 1.0511852923543021, 1.0332786499894984, 1.0310849387726653, 1.0259570751003129, 1.0135946554467505, 1.008965703435247, 1.0018775823833983, 0.9877631057129088, 0.9786932100599091, 0.9706014724943569, 0.9593192517891252, 0.9567666672570688, 0.9551012554598238, 0.9478221125905666, 0.9341389460964226, 0.9402275266365179, 0.931414573310058, 0.9261439228731769, 0.9226902159544235, 0.9212470106901572, 0.909113450899667, 0.9064280976787487, 0.8868482579345386, 0.8900070704835643, 0.8901939074030453, 0.881496498392967, 0.8808557478947929, 0.8755918590069258, 0.8806091225567653, 0.8703063642107941, 0.8796984505706916, 0.862095978832862, 0.8576722768366755, 0.86120490806765, 0.8451225363961017, 0.8458926301858428, 0.8450476399754111, 0.8515341236622516, 0.842573003659647, 0.8416275147906132, 0.8311963346750508, 0.8279067116989168, 0.8238827060195103, 0.8184106300819063, 0.833201630807367, 0.8286937792712765, 0.8199363528320173, 0.8128098570014098, 0.7996037112109303, 0.809294592017873, 0.8108800169719665], "accuracy": [0.09919429570436478, 0.1216483935713768, 0.15255580842494965, 0.17738740146160126, 0.2036719024181366, 0.23325848579406738, 0.2491084337234497, 0.27922335267066956, 0.302469938993454, 0.31158366799354553, 0.33364152908325195, 0.34803855419158936, 0.3535860478878021, 0.3774930536746979, 0.39122968912124634, 0.4027208983898163, 0.41804254055023193, 0.4213446080684662, 0.4336283206939697, 0.4383833110332489, 0.45185577869415283, 0.46070531010627747, 0.46044114232063293, 0.47232863306999207, 0.48989564180374146, 0.49808478355407715, 0.5036323070526123, 0.5153876543045044, 0.5246334671974182, 0.5324263572692871, 0.5328226089477539, 0.5388984084129333, 0.5498613119125366, 0.5495971441268921, 0.570202112197876, 0.5628054141998291, 0.573107898235321, 0.577070415019989, 0.5875049233436584, 0.5893540978431702, 0.5930524468421936, 0.5954299569129944, 0.6085061430931091, 0.6066569685935974, 0.6160348653793335, 0.6096948981285095, 0.6190727949142456, 0.6210539937019348, 0.6255448460578918, 0.6292431354522705, 0.6395456194877625, 0.6362435817718506, 0.6387531161308289, 0.6439043879508972, 0.6472064256668091, 0.6444327235221863, 0.6477347612380981, 0.6522256135940552, 0.6565843224525452, 0.6650376319885254, 0.6598864197731018, 0.6538106203079224, 0.6625280380249023, 0.6684718132019043, 0.6660943031311035, 0.6654338836669922, 0.6645092964172363, 0.6715096831321716, 0.6740192770957947, 0.6713775992393494, 0.6800950765609741, 0.6827367544174194, 0.6777176260948181, 0.6833971738815308, 0.6880200505256653, 0.6851142644882202, 0.6865671873092651, 0.6832650899887085, 0.6856426000595093, 0.6907938122749329, 0.6880200505256653, 0.6933034062385559, 0.6919825673103333, 0.693831741809845, 0.6939638257026672, 0.6934354901313782, 0.6963412761688232, 0.7004358768463135, 0.6933034062385559, 0.6985867023468018, 0.7036058902740479, 0.7014925479888916, 0.7067758440971375, 0.7003037929534912, 0.6993792057037354, 0.6985867023468018, 0.7083608508110046, 0.7077004313468933, 0.7088891863822937, 0.7112666964530945], "val_loss": [1.9619312286376953, 1.9528401238577706, 1.9436706134251185, 1.9341874803815569, 1.9240129334586007, 1.9130935668945312, 1.9012703895568848, 1.8881497383117676, 1.8733763013567244, 1.8568431309291296, 1.838179315839495, 1.8171610151018416, 1.7937744004385812, 1.7672844614301408, 1.7375176293509347, 1.7044980866568429, 1.668138061250959, 1.6286415372576033, 1.5863456726074219, 1.5410295554569788, 1.4939494473593575, 1.4447099821908134, 1.3957252502441406, 1.34627366065979, 1.297926902770996, 1.250227689743042, 1.2056377615247453, 1.1626057284218925, 1.1234997000013078, 1.0857836178370885, 1.0520220484052385, 1.0205543381827218, 0.9918881143842425, 0.9666456495012555, 0.9418811798095703, 0.9205435684749058, 0.9001026153564453, 0.8812486103602818, 0.8647528886795044, 0.8485989570617676, 0.8348958492279053, 0.8212112358638218, 0.8081487417221069, 0.7968161957604545, 0.7854631117412022, 0.7751395872661045, 0.7653948068618774, 0.7566777297428676, 0.747693623815264, 0.7389786073139736, 0.7306486879076276, 0.7237734794616699, 0.7171886307852608, 0.7111782687050956, 0.7048378842217582, 0.6990866490772792, 0.6941154854638236, 0.6885426725660052, 0.6835557733263288, 0.6785847629819598, 0.673834000314985, 0.6696017980575562, 0.6660801683153424, 0.6617519514901298, 0.6581865719386509, 0.654572742325919, 0.6509594917297363, 0.6467929397310529, 0.643862111227853, 0.6410035235541207, 0.6372360161372593, 0.6338797126497541, 0.6310431786945888, 0.6284502574375698, 0.6252949748720441, 0.6223330157143729, 0.6195940290178571, 0.6173008510044643, 0.615047812461853, 0.6129110881260463, 0.6105636528560093, 0.6079425641468593, 0.6060229199273246, 0.603969761303493, 0.6018463543483189, 0.5994540112359183, 0.5975033555712018, 0.5951627492904663, 0.5935298715318952, 0.5918658631188529, 0.5904035568237305, 0.588874203818185, 0.5867362533296857, 0.5848665407725743, 0.5833797454833984, 0.5823142528533936, 0.5801496165139335, 0.57768714427948, 0.5762304748807635, 0.5746793406350272], "val_accuracy": [0.10300000011920929, 0.19599999487400055, 0.2773333191871643, 0.3310000002384186, 0.36500000953674316, 0.382666677236557, 0.4020000100135803, 0.4183333218097687, 0.43433332443237305, 0.44566667079925537, 0.4583333432674408, 0.47200000286102295, 0.4893333315849304, 0.5049999952316284, 0.518666684627533, 0.531333327293396, 0.5406666398048401, 0.5543333292007446, 0.5616666674613953, 0.5713333487510681, 0.5803333520889282, 0.5796666741371155, 0.5886666774749756, 0.5913333296775818, 0.6006666421890259, 0.609666645526886, 0.6179999709129333, 0.624666690826416, 0.6383333206176758, 0.6543333530426025, 0.659333348274231, 0.6663333177566528, 0.671999990940094, 0.6759999990463257, 0.6763333082199097, 0.6823333501815796, 0.6850000023841858, 0.6886666417121887, 0.6930000185966492, 0.6946666836738586, 0.6949999928474426, 0.6976666450500488, 0.6996666789054871, 0.703000009059906, 0.7049999833106995, 0.70333331823349, 0.7046666741371155, 0.7110000252723694, 0.7093333601951599, 0.7149999737739563, 0.7153333425521851, 0.7176666855812073, 0.7166666388511658, 0.7179999947547913, 0.721666693687439, 0.722000002861023, 0.7236666679382324, 0.722000002861023, 0.7250000238418579, 0.7266666889190674, 0.7266666889190674, 0.7276666760444641, 0.7293333411216736, 0.7293333411216736, 0.7310000061988831, 0.731333315372467, 0.7306666374206543, 0.734000027179718, 0.7329999804496765, 0.7353333234786987, 0.734666645526886, 0.7353333234786987, 0.7379999756813049, 0.7353333234786987, 0.7360000014305115, 0.7366666793823242, 0.7390000224113464, 0.7396666407585144, 0.7409999966621399, 0.7416666746139526, 0.7406666874885559, 0.7450000047683716, 0.7419999837875366, 0.7453333139419556, 0.746666669845581, 0.746666669845581, 0.7476666569709778, 0.7486666440963745, 0.7476666569709778, 0.749666690826416, 0.75, 0.75, 0.7506666779518127, 0.7516666650772095, 0.7516666650772095, 0.7509999871253967, 0.750333309173584, 0.7536666393280029, 0.7543333172798157, 0.7556666731834412]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [98, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 6, 4, 2, 8, 1, 9, 2, 6, 6, 6, 5, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.12085714191198349, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.0750649055989348, 2.4190587441934777, 2.305288369550744, 2.3035751837056626, 2.3029873096837408, 2.302524135223296], "accuracy": [0.17593449354171753, 0.14780081808567047, 0.09998679161071777, 0.09430722147226334, 0.09774138033390045, 0.10606260597705841], "val_loss": [1.9729161943708147, 1.9746150970458984, 1.973918846675328, 1.9734205518450056, 1.9730768203735352, 1.971583366394043], "val_accuracy": [0.15700000524520874, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767, 0.12866666913032532, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 1, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 2, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 3, 3, 2, 1], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.11371428519487381, "mapping_values": [1, 1, 1, 0, 1, 0, 54, 54, 30, 24, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(beta, tf.math.pow(grad, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta)), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), beta))))), tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), beta))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.negative(beta))))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.945828495811651, 3.8267251887514826, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17144367098808289, 0.1974640041589737, 0.12310130894184113, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.058086395263672, 8.86789539882115, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.2553333342075348, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1120076768.5730753, 20899199584.367718, 99069243755.01889, 270614054740.22876, 585718546525.0541, 1082347860382.956], "accuracy": [0.09998679161071777, 0.09259014576673508, 0.10249637067317963, 0.09932637959718704, 0.10196803510189056, 0.10157178342342377], "val_loss": [4192472064.0, 33529367990.857143, 113149589211.42857, 268193085147.42856, 523799326134.8571, 905100900059.4286], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [72, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 5, 6, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [24, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 2, 3, 3, 3, 2, 1, 2, 2, 6, 1, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 2, 3, 0, 0, 1, 3, 0, 3, 3, 0, 4, 4, 5, 2, 3, 1, 1, 2, 3, 5, 4, 3, 5, 3], [65, 15, 7, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [31, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 59, 59, 33, 26, 5, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 64, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))), tf.math.add(beta, beta))))), tf.math.add(beta, grad)))))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), alpha)))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.negative(beta))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), grad))), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 1, 4, 3, 8, 1, 1, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 1, 2, 5, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 63, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [6, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 26, 26, 13, 13, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(beta, grad))), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, alpha))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(beta), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [72, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 3, 2, 3, 4, 3, 2, 1, 2, 2, 0, 6, 2, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 0, 0, 0, 0, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), beta)), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020790506268947, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [18, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.09285714477300644, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028429466515106, 2.3034802365532925, 2.3021247318911753, 2.302123011221361, 2.301067813795949, 2.3010495593912803, 2.301088074273626, 2.300811349975592, 2.300288751471422, 2.3002389105256555, 2.2995928689835488, 2.298748272694396, 2.2996637334976024, 2.2988277507921047, 2.29747297561967, 2.299199826965211, 2.2988061889476623, 2.299226278169768, 2.299793835754455, 2.2989298753797605, 2.299569785020229, 2.300125365370001, 2.300286385141044, 2.300440672445039, 2.301024745877676, 2.300710626581263, 2.300753277999189], "accuracy": [0.09060890227556229, 0.08836349099874496, 0.09245806187391281, 0.08981640636920929, 0.09126931428909302, 0.09140139818191528, 0.09113723784685135, 0.09272222965955734, 0.09655263274908066, 0.09668471664190292, 0.10157178342342377, 0.0948355570435524, 0.10038304328918457, 0.10447761416435242, 0.1022322028875351, 0.10830801725387573, 0.10540219396352768, 0.10527011007070541, 0.10210011899471283, 0.10513802617788315, 0.10077928751707077, 0.09893012791872025, 0.10289261490106583, 0.10672302544116974, 0.107647605240345, 0.09549596905708313, 0.09179764986038208], "val_loss": [1.9709959030151367, 1.9709463119506836, 1.9708469935825892, 1.9706906591142928, 1.9704883439200265, 1.9702332360403878, 1.9699249267578125, 1.9695955685206823, 1.9692576953342982, 1.9689126014709473, 1.9686055183410645, 1.9683739117213659, 1.968264443533761, 1.9682854924883162, 1.9684818131583077, 1.9687769072396415, 1.969146728515625, 1.969541072845459, 1.9699691363743372, 1.9704227447509766, 1.9708589826311385, 1.971215043749128, 1.971531595502581, 1.971773420061384, 1.9719698769705636, 1.9721363612583704, 1.972266742161342], "val_accuracy": [0.03733333200216293, 0.038333334028720856, 0.03866666555404663, 0.0416666679084301, 0.04399999976158142, 0.046666666865348816, 0.050333332270383835, 0.05433333292603493, 0.060333333909511566, 0.06566666811704636, 0.07466666400432587, 0.07900000363588333, 0.08633333444595337, 0.09300000220537186, 0.09933333098888397, 0.1066666692495346, 0.1080000028014183, 0.11400000005960464, 0.11500000208616257, 0.11766666918992996, 0.11699999868869781, 0.11866666376590729, 0.1133333370089531, 0.109333336353302, 0.10400000214576721, 0.10000000149011612, 0.09566666930913925]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.08942857384681702, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028405087105335, 2.3034688282353044, 2.3021200669361317, 2.3021516546738887, 2.3011576587088496, 2.3012364518136996, 2.3014533370162487, 2.301315639312194, 2.3009499843802987, 2.3010863246635567, 2.3006172329128347, 2.3000523160398596, 2.301041129715234, 2.3000801445675436, 2.2983491841465993, 2.3003430370609945, 2.299309550967939, 2.2999893842104355, 2.3004410415198966, 2.2988054133236226, 2.298904239320484, 2.2988935214747936, 2.299589011206556, 2.29926113420395, 2.299254422395016, 2.298774752587281, 2.2984693799871008, 2.2982718690416957, 2.2985233083739334, 2.2993198773171595], "accuracy": [0.09060890227556229, 0.0882314071059227, 0.09232597798109055, 0.08915598690509796, 0.09100515395402908, 0.09166556596755981, 0.08981640636920929, 0.08994849026203156, 0.09325055778026581, 0.0952318087220192, 0.09879804402589798, 0.09272222965955734, 0.09615638852119446, 0.09694888442754745, 0.09787346422672272, 0.10540219396352768, 0.09721305221319199, 0.09840179979801178, 0.09681680053472519, 0.09813763201236725, 0.09985470771789551, 0.09932637959718704, 0.10434553027153015, 0.10421344637870789, 0.1080438494682312, 0.10157178342342377, 0.1026284471154213, 0.10408136248588562, 0.11055342853069305, 0.1072513535618782], "val_loss": [1.970989431653704, 1.9709343910217285, 1.9708507401602608, 1.9707382747105189, 1.9706008093697684, 1.9704370498657227, 1.9702580315726144, 1.9700759478977747, 1.9698833738054549, 1.969691549028669, 1.9694995880126953, 1.969325338091169, 1.9691643033708846, 1.9690252712794714, 1.9689089911324638, 1.9688307217189245, 1.9687868527003698, 1.9687585149492537, 1.9687245232718331, 1.9686891692025321, 1.9686741828918457, 1.968681948525565, 1.968726703098842, 1.9688099452427454, 1.9689346040998186, 1.9690897805350167, 1.9692668233598982, 1.9694604192461287, 1.9696790831429618, 1.9698925699506487], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03866666555404663, 0.0403333343565464, 0.04100000113248825, 0.04333333298563957, 0.04600000008940697, 0.04833333194255829, 0.05000000074505806, 0.0533333346247673, 0.055666666477918625, 0.05999999865889549, 0.06233333423733711, 0.06666667014360428, 0.07133333384990692, 0.07533333450555801, 0.08100000023841858, 0.08733333647251129, 0.09300000220537186, 0.09733333438634872, 0.10133333504199982, 0.10366666316986084, 0.10533333569765091, 0.10700000077486038, 0.10733333230018616, 0.10733333230018616, 0.1066666692495346, 0.10333333164453506, 0.10166666656732559, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.08885714411735535, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300444201298236, 2.301043039520167, 2.3017237045352075, 2.3019135611136954, 2.302116627958331, 2.302287477370597, 2.302294807883774, 2.302345419887381, 2.3024273973650637, 2.3024328908805662, 2.3024169117972018, 2.3024064361805046, 2.3026021467837925, 2.3025545946374906, 2.302550862635667, 2.302591120577948, 2.302696768255943, 2.3026327635271673, 2.30263406051668, 2.3026083423602914, 2.3026553854541127, 2.3026824934040757, 2.3026542769698986, 2.302625600514773, 2.302619476580365, 2.302615825006628, 2.3026124527268266], "accuracy": [0.09391097724437714, 0.09008057415485382, 0.0812310129404068, 0.08149518072605133, 0.07792893797159195, 0.07924976944923401, 0.08638224750757217, 0.08677849918603897, 0.08400475233793259, 0.08836349099874496, 0.09893012791872025, 0.09893012791872025, 0.10566636174917221, 0.10527011007070541, 0.10487385839223862, 0.10949676483869553, 0.10355303436517715, 0.10976093262434006, 0.10236428678035736, 0.10210011899471283, 0.10460969805717468, 0.10738343745470047, 0.09760929644107819, 0.09998679161071777, 0.09945846349000931, 0.09760929644107819, 0.09734513610601425], "val_loss": [1.9709078924996513, 1.9724678993225098, 1.9728470529828752, 1.973090308053153, 1.9732738903590612, 1.973367691040039, 1.9734569958278112, 1.9734984806605749, 1.9735329491751534, 1.9735640117100306, 1.9735713005065918, 1.9735876492091589, 1.9736104692731584, 1.9736594472612654, 1.9736581529889787, 1.9736734117780412, 1.9736857414245605, 1.9736967086791992, 1.9736808368137904, 1.9737003190176827, 1.9737255232674735, 1.9737211636134557, 1.9737600599016463, 1.97378294808524, 1.9737944602966309, 1.9737956864493233, 1.9738101959228516], "val_accuracy": [0.07066666334867477, 0.05966666713356972, 0.0560000017285347, 0.0676666647195816, 0.08833333104848862, 0.09466666728258133, 0.08100000023841858, 0.08699999749660492, 0.09000000357627869, 0.09799999743700027, 0.1003333330154419, 0.11299999803304672, 0.1066666692495346, 0.10766666382551193, 0.1066666692495346, 0.10233332961797714, 0.1133333370089531, 0.10199999809265137, 0.10100000351667404, 0.10066666454076767, 0.10599999874830246, 0.11699999868869781, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419, 0.10199999809265137, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [9, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.07342857122421265, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024209530724193, 2.302111972608051, 2.300533440481198, 2.300431524143715, 2.299746582741436, 2.3002234229227776, 2.3003656322520563, 2.300397940158151, 2.299809742125034, 2.2999563184727325, 2.3001865311510388, 2.299621346131953, 2.301053828126199, 2.30041959953031, 2.2996610979189285, 2.30120368401262, 2.301125713925808, 2.3013143290019764, 2.301657992205395, 2.300563654422823, 2.3010156701946647, 2.3011988749546286, 2.3015956548321217, 2.3015443788401724, 2.301595551573038, 2.3013209330801008, 2.3008179645087377, 2.3008134803121996, 2.3010562205626397, 2.301467324229059], "accuracy": [0.09060890227556229, 0.09179764986038208, 0.0940430611371994, 0.09140139818191528, 0.0956280529499054, 0.09325055778026581, 0.09430722147226334, 0.09496764093637466, 0.09628847241401672, 0.09985470771789551, 0.09879804402589798, 0.09298639744520187, 0.0956280529499054, 0.09853387624025345, 0.09919429570436478, 0.09893012791872025, 0.09219389408826828, 0.09060890227556229, 0.0882314071059227, 0.09153348207473755, 0.09338264167308807, 0.09034473448991776, 0.08968432247638702, 0.08942015469074249, 0.09945846349000931, 0.08942015469074249, 0.08770307898521423, 0.09272222965955734, 0.0936468094587326, 0.09074098616838455], "val_loss": [1.9702207701546806, 1.9696709087916784, 1.9695507458278112, 1.9696076256888253, 1.9697435923985072, 1.969740731375558, 1.9698183195931571, 1.9697647775922502, 1.9696895054408483, 1.9696956362043108, 1.9698167528424944, 1.9700202941894531, 1.9702627318246024, 1.9704574857439314, 1.9706981522696358, 1.9708830969674247, 1.9710897718157088, 1.9711771692548479, 1.9712629999433244, 1.9713548932756697, 1.971456800188337, 1.9715864998953683, 1.9716454233442033, 1.971686908176967, 1.971757207598005, 1.971792221069336, 1.9718200819832938, 1.9718734196254186, 1.9719328880310059, 1.9719874518258231], "val_accuracy": [0.0430000014603138, 0.050333332270383835, 0.056333333253860474, 0.05900000035762787, 0.060333333909511566, 0.06066666543483734, 0.06433333456516266, 0.06466666609048843, 0.06700000166893005, 0.07000000029802322, 0.06866666674613953, 0.06966666877269745, 0.07233333587646484, 0.07100000232458115, 0.0729999989271164, 0.07233333587646484, 0.07133333384990692, 0.07100000232458115, 0.07199999690055847, 0.07366666942834854, 0.07133333384990692, 0.0716666653752327, 0.07333333045244217, 0.07433333247900009, 0.07533333450555801, 0.07199999690055847, 0.07400000095367432, 0.07066666334867477, 0.07133333384990692, 0.07100000232458115]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 6, 2, 0, 6, 4, 2, 8, 1, 9, 2, 6, 6, 6, 5, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 1, 3, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [84, 15, 70, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028460951875527, 2.303517571529771, 2.3022509697894096, 2.302389104494471, 2.301545803116423, 2.301770306156296], "accuracy": [0.09047681838274002, 0.0882314071059227, 0.09206181764602661, 0.08981640636920929, 0.08942015469074249, 0.09192973375320435], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 8, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028460951875527, 2.303517571529771, 2.3022509697894096, 2.302389104494471, 2.301545803116423, 2.301770306156296], "accuracy": [0.09047681838274002, 0.0882314071059227, 0.09206181764602661, 0.08981640636920929, 0.08942015469074249, 0.09192973375320435], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 8, 9, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 2, 3, 0, 2, 1, 3, 2, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [38, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta)))), beta)), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028460951875527, 2.303517571529771, 2.3022509697894096, 2.302389104494471, 2.301545803116423, 2.301770306156296], "accuracy": [0.09047681838274002, 0.0882314071059227, 0.09206181764602661, 0.08981640636920929, 0.08942015469074249, 0.09192973375320435], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 6, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 3, 3, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028460951875527, 2.303517571529771, 2.3022509697894096, 2.302389104494471, 2.301545803116423, 2.301770306156296], "accuracy": [0.09047681838274002, 0.0882314071059227, 0.09206181764602661, 0.08981640636920929, 0.08942015469074249, 0.09192973375320435], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 2, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 3, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028460951875527, 2.303517571529771, 2.3022509697894096, 2.302389104494471, 2.301545803116423, 2.301770306156296], "accuracy": [0.09047681838274002, 0.0882314071059227, 0.09206181764602661, 0.08981640636920929, 0.08942015469074249, 0.09192973375320435], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [8, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 2, 2, 0, 2, 1, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 26, 26, 14, 12, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(grad, tf.math.subtract(beta, tf.math.pow(tf.math.multiply(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta)))), tf.math.add(beta, alpha))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028460951875527, 2.303517571529771, 2.3022509697894096, 2.302389104494471, 2.301545803116423, 2.301770306156296], "accuracy": [0.09047681838274002, 0.0882314071059227, 0.09206181764602661, 0.08981640636920929, 0.08942015469074249, 0.09192973375320435], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]