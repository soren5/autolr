[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.755142867565155, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 9, 10, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, alpha)), tf.math.add(beta, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2982983961081414, 2.290190044505611, 2.279514819970142, 2.2695370298004454, 2.2604039565305416, 2.2482074403869885, 2.2357080037237047, 2.2218227732246105, 2.209540159285675, 2.1926959459382656, 2.174544304495144, 2.1538284612826195, 2.1309813263708843, 2.10403872518775, 2.075962914105467, 2.044562731468131, 2.0075852317328877, 1.969644363892313, 1.9325558562178606, 1.8832930772847125, 1.840523491666585, 1.7930661786611857, 1.739008097443299, 1.6982874865576638, 1.6481307495413455, 1.5962127058843911, 1.5549542335487077, 1.513169200208445, 1.472893109631466, 1.4413099116527046, 1.405066168256298, 1.3695532301901638, 1.3489896165475932, 1.3195539954756985, 1.2882895551069837, 1.2726392585839799, 1.252498121829065, 1.2283425199010858, 1.211968409686025, 1.1799186848221108, 1.1700949020011628, 1.1571668510219093, 1.1445242862628358, 1.1277412828626319, 1.128357122335231, 1.1094844422367476, 1.080278057322101, 1.071722054651558, 1.0646538605480271, 1.0560653096476031, 1.042294153195992, 1.0302084773963924, 1.0242064770391321, 1.0105887457616198, 1.0150599824187148, 0.9859823886713001, 0.9948290994359108, 0.9724685940618418, 0.9760943259372215, 0.9654918187298496, 0.9659766720868908, 0.9539125384655863, 0.9523390835428345, 0.933829278773352, 0.9371315483104724, 0.9342597120032728, 0.9230904040902188, 0.9046908835016301, 0.9241556417137451, 0.9083147269308669, 0.8986249512858347, 0.905948139491917, 0.8899268510004376, 0.8868681377407865, 0.8848058846191786, 0.8843272258702869, 0.8830927147243033, 0.878604532162023, 0.8659909910151766, 0.8749685078296427, 0.8632596204104819, 0.8596999846775739, 0.8604301340575893, 0.8553847107416792, 0.8563896456902856, 0.8372319704663437, 0.8407102705244816, 0.8487496850764857, 0.8319300789213325, 0.836230635296604, 0.8297598551702443, 0.8317258290453452, 0.8286211545189311, 0.8265514300798837, 0.8251170149301069, 0.8208225880237917, 0.8085384934632817, 0.8075983713111228, 0.8050431251573116, 0.8052706613973336], "accuracy": [0.10077928751707077, 0.12508255243301392, 0.15097081661224365, 0.17923656105995178, 0.2008981704711914, 0.227314755320549, 0.25861841440200806, 0.28080835938453674, 0.29665830731391907, 0.3185840845108032, 0.3280940353870392, 0.34539690613746643, 0.36349228024482727, 0.3747193217277527, 0.38409721851348877, 0.38805970549583435, 0.4084004759788513, 0.4161933660507202, 0.4231937527656555, 0.4434024691581726, 0.4500066041946411, 0.4589882493019104, 0.469819039106369, 0.47232863306999207, 0.49068814516067505, 0.5037643909454346, 0.5062739253044128, 0.5087835192680359, 0.5208030939102173, 0.5362567901611328, 0.54220050573349, 0.5379738211631775, 0.548540472984314, 0.5515784025192261, 0.563730001449585, 0.5638620853424072, 0.5704662799835205, 0.5748249888420105, 0.585391640663147, 0.5933166146278381, 0.5963544845581055, 0.5993924140930176, 0.6009774208068848, 0.6045436263084412, 0.604939877986908, 0.6066569685935974, 0.6199973821640015, 0.6213181614875793, 0.6254127621650696, 0.627129852771759, 0.6297714710235596, 0.6339981555938721, 0.637828528881073, 0.6449610590934753, 0.6412627100944519, 0.6498481035232544, 0.6416589617729187, 0.653150200843811, 0.654999315738678, 0.6596222519874573, 0.6540747880935669, 0.6610751748085022, 0.656980574131012, 0.6667547225952148, 0.667811393737793, 0.669792652130127, 0.6741513609886169, 0.6695284843444824, 0.6690001487731934, 0.6740192770957947, 0.6757363677024841, 0.6774534583091736, 0.6876237988471985, 0.6833971738815308, 0.6812838315963745, 0.684982180595398, 0.6876237988471985, 0.6848500967025757, 0.6929071545600891, 0.6845859289169312, 0.6859067678451538, 0.6925109028816223, 0.6940959095954895, 0.6950204968452454, 0.6915863156318665, 0.702681303024292, 0.6993792057037354, 0.6997754573822021, 0.700700044631958, 0.6947563290596008, 0.7037379741668701, 0.7042662501335144, 0.7018887996673584, 0.7030775547027588, 0.7017567157745361, 0.7071720957756042, 0.7034738063812256, 0.7103421092033386, 0.7054550051689148, 0.7063795924186707], "val_loss": [1.9617494174412318, 1.9526967321123396, 1.9435606002807617, 1.9341779436383928, 1.9241897719247, 1.9133197239467077, 1.9014336041041784, 1.8881712641034807, 1.8735405376979284, 1.8571042333330428, 1.838573660169329, 1.8177737508501326, 1.7943664959498815, 1.7680941309247697, 1.7390129225594657, 1.7066921506609236, 1.6707298415047782, 1.631586960383824, 1.5897984845297677, 1.544609478541783, 1.4975066866193498, 1.449190276009696, 1.3996987342834473, 1.3508411134992326, 1.3021140779767717, 1.2538800580160958, 1.2085562433515276, 1.1662063939230782, 1.1261348383767265, 1.08933002608163, 1.0554712159293038, 1.0237205028533936, 0.995356832231794, 0.969383716583252, 0.9448918955666679, 0.9234539100102016, 0.9031530448368618, 0.8842208726065499, 0.8673213039125715, 0.8506814922605243, 0.8354522841317313, 0.8221712793622699, 0.8093019383294242, 0.7972408022199359, 0.7865925686700004, 0.7763709000178746, 0.7655567101069859, 0.756317274911063, 0.7479881729398455, 0.7395406450544085, 0.7316985130310059, 0.7244156769343785, 0.7181516545159476, 0.7113680669239589, 0.7054894481386457, 0.6996255261557442, 0.6944788183484759, 0.688674909727914, 0.6835109336035592, 0.6788809640066964, 0.6749870777130127, 0.670514668737139, 0.6666709184646606, 0.6629584857395717, 0.6586591516222272, 0.654770987374442, 0.6510958671569824, 0.6469324827194214, 0.6445030484880719, 0.640845775604248, 0.6377642154693604, 0.635320782661438, 0.6315371649605888, 0.6291911942618233, 0.6262471505573818, 0.6234735591070992, 0.6205135754176548, 0.6188849210739136, 0.6162955250058856, 0.6139250823429653, 0.611160397529602, 0.6086504629680088, 0.6063272271837506, 0.6044960362570626, 0.602355922971453, 0.600081375667027, 0.5980432203837803, 0.5963741200310844, 0.595290984426226, 0.5933937174933297, 0.5914325543812343, 0.5894103220530919, 0.5876992770603725, 0.5853852544512067, 0.5837606702532087, 0.582636799131121, 0.580411400113787, 0.5779197045734951, 0.5770444869995117, 0.5754542691367013], "val_accuracy": [0.10333333164453506, 0.1979999989271164, 0.2783333361148834, 0.3330000042915344, 0.3683333396911621, 0.3883333206176758, 0.40799999237060547, 0.42766666412353516, 0.44433334469795227, 0.45266667008399963, 0.4663333296775818, 0.47833332419395447, 0.4933333396911621, 0.5063333511352539, 0.5216666460037231, 0.5346666574478149, 0.5400000214576721, 0.5513333082199097, 0.5583333373069763, 0.5690000057220459, 0.578000009059906, 0.5839999914169312, 0.5910000205039978, 0.5943333506584167, 0.5986666679382324, 0.6029999852180481, 0.6106666922569275, 0.625, 0.637333333492279, 0.6446666717529297, 0.656000018119812, 0.6603333353996277, 0.6676666736602783, 0.6740000247955322, 0.6779999732971191, 0.6806666851043701, 0.6846666932106018, 0.6899999976158142, 0.6909999847412109, 0.6933333277702332, 0.6949999928474426, 0.6973333358764648, 0.7003333568572998, 0.70333331823349, 0.7043333053588867, 0.7059999704360962, 0.7080000042915344, 0.7103333473205566, 0.7123333215713501, 0.7139999866485596, 0.7143333554267883, 0.715666651725769, 0.715666651725769, 0.7170000076293945, 0.7203333377838135, 0.7226666808128357, 0.7239999771118164, 0.7246666550636292, 0.7229999899864197, 0.7266666889190674, 0.7263333201408386, 0.7279999852180481, 0.7289999723434448, 0.7296666502952576, 0.7303333282470703, 0.7303333282470703, 0.7323333621025085, 0.7316666841506958, 0.7329999804496765, 0.734666645526886, 0.7353333234786987, 0.734666645526886, 0.7366666793823242, 0.7336666584014893, 0.7350000143051147, 0.7369999885559082, 0.7366666793823242, 0.7419999837875366, 0.7433333396911621, 0.7400000095367432, 0.7406666874885559, 0.7426666617393494, 0.7453333139419556, 0.7459999918937683, 0.746999979019165, 0.7476666569709778, 0.7483333349227905, 0.7486666440963745, 0.7490000128746033, 0.7473333477973938, 0.750333309173584, 0.7486666440963745, 0.7493333220481873, 0.7509999871253967, 0.75, 0.750333309173584, 0.7516666650772095, 0.7559999823570251, 0.7516666650772095, 0.753000020980835]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7540000081062317, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.subtract(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2982989448708095, 2.2901898918056123, 2.279508018758177, 2.2695161889116164, 2.2603636058471803, 2.248138191961042, 2.2355942158352002, 2.2216459103799564, 2.2092879253403073, 2.1923264656021546, 2.174025721317584, 2.1531202943333545, 2.1300150455028435, 2.1027371503295615, 2.074246109626265, 2.0423254557037556, 2.0047262777442616, 1.966092089273989, 1.9282584655806059, 1.8780660432925895, 1.834497232478702, 1.786203539650186, 1.7313060772937003, 1.6900667906783717, 1.6393346516620906, 1.5869343878334508, 1.5456676307591812, 1.5039522499062554, 1.4637823852770333, 1.4324796701135762, 1.3964233949687959, 1.3611842175012472, 1.3413287301530235, 1.3121074880544048, 1.2810407938218435, 1.2657043544481836, 1.245759946669192, 1.2220408101643019, 1.2058303081096517, 1.1739296715855678, 1.1644519292415487, 1.1516240971545975, 1.1392682023319853, 1.1225757449294567, 1.123373891982609, 1.1046909051658833, 1.0755966344073054, 1.0672609807792797, 1.060336584412521, 1.0518480893123607, 1.0382276774869854, 1.0263697641432137, 1.020366077850744, 1.0068330450962406, 1.0114657635922446, 0.9825822300347891, 0.99148539567211, 0.9692731155238808, 0.9730865801282925, 0.9625073961373317, 0.9629416883487775, 0.950938430838282, 0.9495148721025951, 0.9310326526477085, 0.9344919016253852, 0.9318225066643885, 0.9205230617913682, 0.9022687101376732, 0.921840015246238, 0.9061443085494751, 0.8964828327032459, 0.9035926221651785, 0.8875972115053492, 0.8848404082970424, 0.8827998169409113, 0.8823886803506215, 0.8811553815147738, 0.8765160809213837, 0.8642711581145893, 0.8732715122940015, 0.8612384421320608, 0.8578398138808222, 0.8587427322166377, 0.8534727239684343, 0.8547863655354226, 0.8357055849324222, 0.8390840195142015, 0.8469649794126592, 0.8303545739798419, 0.8346385542648249, 0.8281608150541003, 0.8302476712820033, 0.8271050194723416, 0.8249252859265372, 0.823831611085231, 0.8194910473339215, 0.8072657416903222, 0.8063383461965814, 0.803892445287149, 0.8038066752267756], "accuracy": [0.10077928751707077, 0.12495046854019165, 0.15097081661224365, 0.17936864495277405, 0.2008981704711914, 0.227314755320549, 0.25861841440200806, 0.28080835938453674, 0.29718664288520813, 0.31845200061798096, 0.3276977837085724, 0.34566107392311096, 0.36349228024482727, 0.3743230700492859, 0.3843613862991333, 0.3881917893886566, 0.4093250632286072, 0.4169858694076538, 0.42345792055130005, 0.4447232782840729, 0.45185577869415283, 0.4600449204444885, 0.4706115424633026, 0.47232863306999207, 0.4913485646247864, 0.5050851702690125, 0.505877673625946, 0.509840190410614, 0.5226522088050842, 0.5375775694847107, 0.5433892607688904, 0.5381059050559998, 0.5499933958053589, 0.5535596609115601, 0.5643904209136963, 0.5665037631988525, 0.5720512270927429, 0.5758816599845886, 0.5875049233436584, 0.5949016213417053, 0.5982036590576172, 0.601109504699707, 0.6021661758422852, 0.6053361296653748, 0.6073173880577087, 0.6091665625572205, 0.6211860775947571, 0.6229031682014465, 0.6272619366645813, 0.6301677227020264, 0.6296393871307373, 0.6353189945220947, 0.6394135355949402, 0.64667809009552, 0.6416589617729187, 0.6505085229873657, 0.6424514651298523, 0.6546030640602112, 0.6548672318458557, 0.6608110070228577, 0.6540747880935669, 0.6623960137367249, 0.658961832523346, 0.6676793098449707, 0.668339729309082, 0.6693964004516602, 0.6752080321311951, 0.6705851554870605, 0.6712455153465271, 0.6750759482383728, 0.6758684515953064, 0.6774534583091736, 0.6880200505256653, 0.6840575933456421, 0.6823405027389526, 0.6863030195236206, 0.6884163022041321, 0.685510516166687, 0.6926429867744446, 0.6845859289169312, 0.6865671873092651, 0.6936996579170227, 0.6936996579170227, 0.696209192276001, 0.6926429867744446, 0.7029454708099365, 0.700700044631958, 0.7000396251678467, 0.7013604640960693, 0.694360077381134, 0.7043983340263367, 0.7047945857048035, 0.7020208835601807, 0.7041342258453369, 0.7008321285247803, 0.7082287669181824, 0.7033417224884033, 0.7107383608818054, 0.7057191729545593, 0.7067758440971375], "val_loss": [1.961749826158796, 1.952692644936698, 1.9435454777308874, 1.9341448375156947, 1.9241303716387068, 1.9132273537772042, 1.9012866701398576, 1.8879555293491908, 1.8732269832066126, 1.8566594123840332, 1.8379522051130022, 1.8169216428484236, 1.7932169778006417, 1.7665643010820662, 1.737001827784947, 1.7040841920035226, 1.6674303667885917, 1.6274802003587996, 1.5848228931427002, 1.5386558260236467, 1.4905918325696672, 1.4413063526153564, 1.390918254852295, 1.3413215705326624, 1.2920690945216589, 1.243466751916068, 1.197969572884696, 1.1556359359196253, 1.115694182259696, 1.0791686943599157, 1.045701265335083, 1.0143613134111678, 0.9864461762564523, 0.9609206063406808, 0.9368513992854527, 0.9158805779048375, 0.8959660189492362, 0.8773909296308245, 0.860897353717259, 0.8446062632969448, 0.829702479498727, 0.8167863232748849, 0.8042465107781547, 0.792449951171875, 0.7820958920887539, 0.7720894132341657, 0.7615154300417218, 0.752487199647086, 0.7443783112934658, 0.7361492940357753, 0.728438104901995, 0.7212858540671212, 0.7151833772659302, 0.7085750613893781, 0.7028110708509173, 0.6970693894795009, 0.6920633316040039, 0.6863790239606585, 0.6813517468316215, 0.676726256098066, 0.6729317392621722, 0.6685451098850795, 0.6647221871784755, 0.6610460451671055, 0.6567417894090924, 0.6529390471322196, 0.6492997237614223, 0.6451679297855922, 0.642830661364964, 0.6392426150185722, 0.6362760577883039, 0.6339177063533238, 0.6300719976425171, 0.6277815614427839, 0.6248780829565865, 0.622038619858878, 0.6190342051642281, 0.6175553628376552, 0.6149445261274066, 0.6125585862568447, 0.609803489276341, 0.6073362827301025, 0.6050042084285191, 0.6032108409064156, 0.6011307750429425, 0.598793489592416, 0.5968912499291557, 0.5952273607254028, 0.5941765308380127, 0.5923797062465123, 0.5904159205300468, 0.5883807625089373, 0.5867472205843244, 0.5843493597848075, 0.5827961989811489, 0.5816931894847325, 0.579473580632891, 0.5769830431256976, 0.5761324337550572, 0.5746226991925921], "val_accuracy": [0.10300000011920929, 0.19833333790302277, 0.27799999713897705, 0.3330000042915344, 0.3683333396911621, 0.38866665959358215, 0.40833333134651184, 0.4273333251476288, 0.4440000057220459, 0.45266667008399963, 0.46700000762939453, 0.4803333282470703, 0.49300000071525574, 0.5070000290870667, 0.5220000147819519, 0.534333348274231, 0.5410000085830688, 0.5529999732971191, 0.559333324432373, 0.5690000057220459, 0.578000009059906, 0.5853333473205566, 0.5923333168029785, 0.5943333506584167, 0.6013333201408386, 0.6060000061988831, 0.612333357334137, 0.628333330154419, 0.6420000195503235, 0.6480000019073486, 0.656333327293396, 0.6636666655540466, 0.668666660785675, 0.6743333339691162, 0.6790000200271606, 0.6809999942779541, 0.6890000104904175, 0.6903333067893982, 0.6916666626930237, 0.6946666836738586, 0.6963333487510681, 0.6980000138282776, 0.7020000219345093, 0.7036666870117188, 0.7053333520889282, 0.7056666612625122, 0.7083333134651184, 0.7123333215713501, 0.7126666903495789, 0.7139999866485596, 0.715666651725769, 0.715666651725769, 0.7160000205039978, 0.7176666855812073, 0.7203333377838135, 0.7233333587646484, 0.7243333458900452, 0.7250000238418579, 0.7239999771118164, 0.7279999852180481, 0.7260000109672546, 0.7276666760444641, 0.7289999723434448, 0.7296666502952576, 0.7306666374206543, 0.7310000061988831, 0.7323333621025085, 0.7316666841506958, 0.734333336353302, 0.7360000014305115, 0.7353333234786987, 0.7360000014305115, 0.7369999885559082, 0.7350000143051147, 0.7363333106040955, 0.7369999885559082, 0.7386666536331177, 0.7419999837875366, 0.7433333396911621, 0.7409999966621399, 0.7409999966621399, 0.7419999837875366, 0.7459999918937683, 0.7463333606719971, 0.7480000257492065, 0.7480000257492065, 0.7490000128746033, 0.7493333220481873, 0.75, 0.7480000257492065, 0.7516666650772095, 0.7486666440963745, 0.75, 0.7523333430290222, 0.7519999742507935, 0.75, 0.7513333559036255, 0.7553333044052124, 0.7523333430290222, 0.753333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7505714297294617, "mapping_values": [1, 3, 3, 2, 1, 1, 26, 26, 15, 11, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, beta)), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2982983331260836, 2.290189963542176, 2.2795147749694613, 2.2695371602362866, 2.2604041814394695, 2.2482065361850787, 2.2357076078499816, 2.2218226202411926, 2.2095403077028934, 2.192696935575337, 2.1745448443143593, 2.1538293115403975, 2.1309833191546783, 2.1040396071255025, 2.0759636743618843, 2.0445637166334762, 2.007586466543364, 1.9696456234389923, 1.9325571000190254, 1.883294550277585, 1.8405256915196389, 1.7930680253108604, 1.739010488761808, 1.6982894009917782, 1.648128939326791, 1.5962106839399044, 1.5549503447845423, 1.5131628748416712, 1.472884848133259, 1.4413011785920868, 1.4050612605054222, 1.3695477942245164, 1.3489837627274848, 1.3195473288406454, 1.28827817018683, 1.2726371284205726, 1.2524926990896499, 1.2283404618048979, 1.2119614169141322, 1.1799202917620741, 1.1700852154551749, 1.1571569509510005, 1.14451318518707, 1.1277206163396294, 1.1283509533214153, 1.1094577624703033, 1.0802454501095229, 1.071687237729234, 1.0646002202568714, 1.0559970333339705, 1.0422142057402448, 1.0301199978715188, 1.0241206295187006, 1.0105036601902486, 1.0150265828446154, 0.9859214643713443, 0.9947890455633689, 0.9724480180283107, 0.9760601027152637, 0.9654706224805061, 0.9659341913503411, 0.9538838804799489, 0.9523335585914126, 0.9338209150788838, 0.9371333084070546, 0.9342847193205408, 0.9230606418716563, 0.9046794454403652, 0.9241738821285245, 0.9083139846400814, 0.8986225295233736, 0.90593757633016, 0.8899168330349895, 0.886837689442925, 0.8847991507980156, 0.884332932619418, 0.8830628924129851, 0.8786287057543034, 0.8659547686561098, 0.8749878404556469, 0.8632534626310906, 0.8596843953193092, 0.8604116399904457, 0.8553636067453046, 0.8563408462315691, 0.837227799778743, 0.8407241435508214, 0.8487419100595645, 0.8319722258608496, 0.8362252530389065, 0.8297150894367715, 0.8316700562919371, 0.8286053420624728, 0.8265387543582047, 0.8251068948156342, 0.8207890377021374], "accuracy": [0.10077928751707077, 0.12508255243301392, 0.15097081661224365, 0.17923656105995178, 0.2008981704711914, 0.227314755320549, 0.25861841440200806, 0.28080835938453674, 0.29679039120674133, 0.3185840845108032, 0.3279619514942169, 0.34539690613746643, 0.36349228024482727, 0.3747193217277527, 0.38409721851348877, 0.38805970549583435, 0.4084004759788513, 0.4161933660507202, 0.4231937527656555, 0.4434024691581726, 0.4500066041946411, 0.4589882493019104, 0.469819039106369, 0.47232863306999207, 0.49068814516067505, 0.5037643909454346, 0.5062739253044128, 0.5087835192680359, 0.520671010017395, 0.5362567901611328, 0.54220050573349, 0.5379738211631775, 0.5488046407699585, 0.5515784025192261, 0.5638620853424072, 0.5638620853424072, 0.5704662799835205, 0.5748249888420105, 0.5855237245559692, 0.5933166146278381, 0.5963544845581055, 0.5993924140930176, 0.6009774208068848, 0.6044115424156189, 0.6048077940940857, 0.6065248847007751, 0.6198652982711792, 0.6217144131660461, 0.6256769299507141, 0.627129852771759, 0.6296393871307373, 0.6339981555938721, 0.6376964449882507, 0.6450931429862976, 0.6412627100944519, 0.6495839357376099, 0.6419231295585632, 0.653150200843811, 0.6547351479530334, 0.6597543358802795, 0.6540747880935669, 0.6610751748085022, 0.6571126580238342, 0.6668868064880371, 0.6679434776306152, 0.669792652130127, 0.6737551093101501, 0.6693964004516602, 0.6690001487731934, 0.6741513609886169, 0.6757363677024841, 0.6773213744163513, 0.6876237988471985, 0.6833971738815308, 0.6814159154891968, 0.684982180595398, 0.6881521344184875, 0.6847180128097534, 0.6927750706672668, 0.684982180595398, 0.6857746839523315, 0.6926429867744446, 0.6939638257026672, 0.6950204968452454, 0.6917183995246887, 0.7025492191314697, 0.6995112895965576, 0.6997754573822021, 0.700700044631958, 0.6947563290596008, 0.7036058902740479, 0.7042662501335144, 0.7018887996673584, 0.703209638595581, 0.7016246318817139, 0.7071720957756042], "val_loss": [1.9617494174412318, 1.9526968002319336, 1.9435607365199499, 1.9341785567147392, 1.9241894313267298, 1.9133193152291434, 1.901433331625802, 1.8881707872663225, 1.8735410145350866, 1.857104710170201, 1.838574000767299, 1.8177741595676966, 1.79436799458095, 1.7680937903267997, 1.739013739994594, 1.7066941601889474, 1.670731748853411, 1.6315880502973283, 1.589799233845302, 1.544611828667777, 1.4975076743534632, 1.4491925580160958, 1.3996978487287248, 1.3508383546556746, 1.3021113531930106, 1.2538765839168005, 1.2085487501961845, 1.16619416645595, 1.126121929713658, 1.0893116678510393, 1.0554593631199427, 1.0237135546548026, 0.9953483854021344, 0.9693774495806012, 0.9448925086430141, 0.9234615734645298, 0.9031535897936139, 0.8842226437159947, 0.8673206738063267, 0.8506787674767631, 0.835448043687003, 0.8221577065331596, 0.8092818771089826, 0.7972267695835659, 0.7865735633032662, 0.7763396331242153, 0.7655166898454938, 0.7562683480126517, 0.7479247195380074, 0.7394700390951974, 0.7316355875560215, 0.7243450198854718, 0.7180534941809518, 0.7113297666822161, 0.7054501942225865, 0.6996011393410819, 0.6944446563720703, 0.6886525665010724, 0.683499642780849, 0.6788607324872699, 0.6749741690499442, 0.6705023050308228, 0.6666591508047921, 0.6629682949611119, 0.6586534636361259, 0.6547671726771763, 0.6510892084666661, 0.6469384772436959, 0.6445175920213971, 0.6408628055027553, 0.637775148664202, 0.6353303704942975, 0.6315406731196812, 0.6291635547365461, 0.6262236663273403, 0.623458981513977, 0.6205035788672311, 0.6188976424080985, 0.6162957123347691, 0.613938467843192, 0.6111855166299003, 0.6086746965135846, 0.6063265800476074, 0.6044881854738507, 0.602352499961853, 0.6000685351235526, 0.5980453831808907, 0.5963666779654366, 0.5952922105789185, 0.5933981112071446, 0.5914369140352521, 0.58942369052342, 0.5877373218536377, 0.585400904927935, 0.5837749242782593, 0.5826457057680402], "val_accuracy": [0.10333333164453506, 0.1979999989271164, 0.2783333361148834, 0.3330000042915344, 0.3683333396911621, 0.3883333206176758, 0.40799999237060547, 0.4273333251476288, 0.44433334469795227, 0.45266667008399963, 0.4663333296775818, 0.47833332419395447, 0.4933333396911621, 0.5059999823570251, 0.5216666460037231, 0.5346666574478149, 0.5400000214576721, 0.5513333082199097, 0.5586666464805603, 0.5690000057220459, 0.5776666402816772, 0.5839999914169312, 0.5910000205039978, 0.5943333506584167, 0.5986666679382324, 0.6029999852180481, 0.6106666922569275, 0.625, 0.637333333492279, 0.6446666717529297, 0.656000018119812, 0.6603333353996277, 0.6676666736602783, 0.6740000247955322, 0.6779999732971191, 0.6809999942779541, 0.6846666932106018, 0.6899999976158142, 0.6909999847412109, 0.6936666369438171, 0.6953333616256714, 0.6970000267028809, 0.7003333568572998, 0.70333331823349, 0.7043333053588867, 0.7059999704360962, 0.7080000042915344, 0.7103333473205566, 0.7123333215713501, 0.7139999866485596, 0.7146666646003723, 0.715666651725769, 0.715666651725769, 0.7170000076293945, 0.7210000157356262, 0.7226666808128357, 0.7239999771118164, 0.7246666550636292, 0.7226666808128357, 0.7269999980926514, 0.7263333201408386, 0.7276666760444641, 0.7286666631698608, 0.7296666502952576, 0.7303333282470703, 0.7303333282470703, 0.7323333621025085, 0.7319999933242798, 0.7329999804496765, 0.7350000143051147, 0.7353333234786987, 0.734666645526886, 0.7363333106040955, 0.734333336353302, 0.7353333234786987, 0.7369999885559082, 0.737333357334137, 0.7419999837875366, 0.7433333396911621, 0.7400000095367432, 0.7406666874885559, 0.7429999709129333, 0.7453333139419556, 0.7459999918937683, 0.746999979019165, 0.7476666569709778, 0.7486666440963745, 0.7493333220481873, 0.7490000128746033, 0.7473333477973938, 0.7506666779518127, 0.7486666440963745, 0.7493333220481873, 0.7506666779518127, 0.75, 0.750333309173584]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 3, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.40457141399383545, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta))), beta)), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), beta)), alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8551001555695117, 2.5125860098787287, 2.3077754966177566, 2.2970295941525793, 2.2794026789364796, 2.301882276854983, 2.2068465457632085, 2.1393519294354832, 1.842001148391913, 2.304543864032643, 2.210250263846451, 2.3044891487479826, 2.3047044378592276], "accuracy": [0.1698586642742157, 0.18742570281028748, 0.1002509593963623, 0.1150442510843277, 0.15215955674648285, 0.10830801725387573, 0.19733192026615143, 0.23973055183887482, 0.3921542763710022, 0.1142517477273941, 0.1768590658903122, 0.09959053993225098, 0.09800554811954498], "val_loss": [1.9745105334690638, 1.9831496647426061, 1.973977906363351, 1.9322889191763741, 1.9735636711120605, 1.9649991989135742, 1.6250624997275216, 1.4644244057791573, 1.9817769186837333, 1.9305798666817802, 1.9743133272443498, 1.9743420737130302, 1.9738109452383858], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.1860000044107437, 0.09833333641290665, 0.1003333330154419, 0.42766666412353516, 0.4833333194255829, 0.10100000351667404, 0.14933332800865173, 0.10433333367109299, 0.10100000351667404, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.23800000548362732, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.85526015805436, 3.9571799337588374, 30.200351983958296, 2.30676261327837, 2.3036779890663794, 2.303291773232392], "accuracy": [0.16959451138973236, 0.18412363529205322, 0.09549596905708313, 0.09536388516426086, 0.09140139818191528, 0.09985470771789551], "val_loss": [1.9747561727251326, 12.181294577462333, 1.9795167786734444, 1.9745768819536482, 1.973951952798026, 1.9737398283822196], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 2, 2, 3, 1, 9, 3, 5, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 3, 3, 1, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [11, 11, 24, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.add(beta, beta)))), beta)), tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), grad)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8552599624950714, 2.530196280543043, 4.029865102083959, 2.304623460820039, 2.3033504344689266, 2.3032507268177316, 2.3030577758047888], "accuracy": [0.16959451138973236, 0.17316074669361115, 0.09760929644107819, 0.09998679161071777, 0.09325055778026581, 0.09615638852119446, 0.09747721254825592], "val_loss": [1.9747625078473772, 2.2398926189967563, 1.9760827336992537, 1.974076202937535, 1.973829882485526, 1.973731245313372, 1.9736865588596888], "val_accuracy": [0.09833333641290665, 0.10433333367109299, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [27, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 2, 2, 3, 1, 4, 4, 9, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 3, 1, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, beta))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))))), alpha), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024149316728013, 2.302216660596943, 2.302621060610605, 2.3046979872998685, 2.3138357569528623, 2.3589615478901074], "accuracy": [0.10210011899471283, 0.10751552134752274, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973736149924142, 1.9740266118730818, 1.9751054900033134, 1.9795291083199638, 1.9984327043805803, 2.097558225904192], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [65, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 1, 2, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 82, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [0, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 18, 18, 9, 9, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(beta, alpha))))), grad), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [19413785.706692457, 361176738.0752873, 1690520063.019416, 4670364028.669396, 10257465830.099062, 18479718289.09259], "accuracy": [0.09681680053472519, 0.1026284471154213, 0.09932637959718704, 0.1006472036242485, 0.09813763201236725, 0.09866596013307571], "val_loss": [72529874.28571428, 579533970.2857143, 1955138194.2857144, 4633478582.857142, 9048641243.428572, 15634790107.428572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [4, 5, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [5, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [86, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 0, 2, 3, 1, 4, 3, 8, 0, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, beta)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027381578598356, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 2, 1, 1, 4, 3, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.add(beta, tf.math.subtract(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), beta))))), alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 1, 2, 0, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [95, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.0965714305639267, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(alpha, beta)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.8850778029374693, 2.3454447739852684, 2.3243908144936127, 2.337188180883909, 2.3314249166927756, 2.3278564302094025, 2.3234550745385496], "accuracy": [0.17593449354171753, 0.09747721254825592, 0.10276053100824356, 0.09774138033390045, 0.09536388516426086, 0.09906221181154251, 0.10579843819141388], "val_loss": [1.9964425904410226, 1.9914990833827428, 1.9862151145935059, 1.9911251749311174, 2.0006525175912038, 2.013601234980992, 2.0004311970302036], "val_accuracy": [0.09799999743700027, 0.10433333367109299, 0.10066666454076767, 0.09799999743700027, 0.10433333367109299, 0.09966666996479034, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 8, 2, 0, 1, 4, 2, 8, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.087714284658432, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3000260310449527, 2.3012158769295907, 2.301648967096976, 2.302060712424598, 2.302225006632817, 2.3021202133694154, 2.3023229015974116, 2.302320163578421], "accuracy": [0.09615638852119446, 0.09893012791872025, 0.09219389408826828, 0.09206181764602661, 0.08360850811004639, 0.08109892904758453, 0.080042265355587, 0.08149518072605133], "val_loss": [1.9711075510297502, 1.9725582940237862, 1.9730492319379533, 1.9731545448303223, 1.9732230731419154, 1.9733193942478724, 1.9733570643833704, 1.9734160559517997], "val_accuracy": [0.08166666328907013, 0.09799999743700027, 0.10966666787862778, 0.10000000149011612, 0.0989999994635582, 0.07666666805744171, 0.10599999874830246, 0.08799999952316284]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06514285504817963, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301970296516363, 2.302661453838346, 2.3007774034653043, 2.300374773751318, 2.301246480194805, 2.300007605171632, 2.3000712198525246, 2.2990503164094123, 2.2999443823336105, 2.3000339545027106, 2.300246234583171, 2.2994022457244734, 2.300437971081606, 2.300154767819305, 2.299534868649236, 2.2998557040688543], "accuracy": [0.09311848133802414, 0.09457138925790787, 0.09615638852119446, 0.09245806187391281, 0.09668471664190292, 0.09549596905708313, 0.10170386731624603, 0.1014397069811821, 0.09576013684272766, 0.10117553919553757, 0.09747721254825592, 0.10011887550354004, 0.0944393053650856, 0.10077928751707077, 0.09430722147226334, 0.09866596013307571], "val_loss": [1.97017274584089, 1.9696577617100306, 1.9693238394601005, 1.9693364415849959, 1.9693192073277064, 1.9692189352852958, 1.9692679813929967, 1.9691917555672782, 1.9691262926374162, 1.9692755426679338, 1.9694538797651018, 1.9696930476597376, 1.96994229725429, 1.9701266288757324, 1.9702716554914201, 1.9703916140965052], "val_accuracy": [0.04600000008940697, 0.054666668176651, 0.059333331882953644, 0.06366666406393051, 0.06533333659172058, 0.07000000029802322, 0.07100000232458115, 0.0716666653752327, 0.07599999755620956, 0.07666666805744171, 0.07966666668653488, 0.07599999755620956, 0.07533333450555801, 0.07466666400432587, 0.07599999755620956, 0.07966666668653488]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 4, 3, 2, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 3, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 51, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024089184293595, 2.3041336771015635, 2.302898651163859, 2.30256341558957, 2.303898170434914, 2.302709263896174], "accuracy": [0.09060890227556229, 0.09074098616838455, 0.09192973375320435, 0.08955223858356476, 0.08875974267721176, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 6, 3, 6, 4, 3, 2, 5, 5, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 32, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 13, 13, 6, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, beta)), tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024089184293595, 2.3041336771015635, 2.302898651163859, 2.30256341558957, 2.303898170434914, 2.302709263896174], "accuracy": [0.09060890227556229, 0.09074098616838455, 0.09192973375320435, 0.08955223858356476, 0.08875974267721176, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 3, 2, 8, 3, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2, 4, 5, 2], [65, 15, 39, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024089184293595, 2.3041336771015635, 2.302898651163859, 2.30256341558957, 2.303898170434914, 2.302709263896174], "accuracy": [0.09060890227556229, 0.09074098616838455, 0.09192973375320435, 0.08955223858356476, 0.08875974267721176, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 2, 3, 2, 2, 1, 8, 1, 9, 2, 6, 8, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 2, 2, 0, 2, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 32, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [6, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024089184293595, 2.3041336771015635, 2.302898651163859, 2.30256341558957, 2.303898170434914, 2.302709263896174], "accuracy": [0.09060890227556229, 0.09074098616838455, 0.09192973375320435, 0.08955223858356476, 0.08875974267721176, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [6, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 3, 1, 0, 3, 8, 2, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 3, 2, 3, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 17, 17, 10, 7, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))), beta), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), grad)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024089184293595, 2.3041336771015635, 2.302898651163859, 2.30256341558957, 2.303898170434914, 2.302709263896174], "accuracy": [0.09060890227556229, 0.09074098616838455, 0.09192973375320435, 0.08955223858356476, 0.08875974267721176, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 2, 2, 3, 1, 4, 3, 9, 1, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [4, 5, 3, 3, 3, 1, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 11, 39, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.011428571306169033, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3066160207127915, 2.3189685806354525, 2.3287794794058203, 2.3412143337948605, 2.3574060376892474, 2.3723567261467235], "accuracy": [0.08308017253875732, 0.06234315037727356, 0.04715361073613167, 0.03790780529379845, 0.02852991595864296, 0.02285034954547882], "val_loss": [1.9806030137198312, 1.9906955446515764, 2.0015619822910855, 2.0138132912772044, 2.0279132979256764, 2.0439490590776717], "val_accuracy": [0.013000000268220901, 0.007333333138376474, 0.005333333276212215, 0.004333333112299442, 0.004000000189989805, 0.004000000189989805]}}]