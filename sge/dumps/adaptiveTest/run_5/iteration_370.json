[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8217142820358276, "mapping_values": [1, 23, 23, 13, 10, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, alpha)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.006846741300454, 1.6277794412980227, 1.2198751329383704, 0.9845372072583759, 0.9457941613869975, 0.8649180645735477, 0.7933984406320977, 0.7636954203777467, 0.7267844669964681, 0.7095753111308356, 0.6962533337391914, 0.6917853391937309, 0.6583531161482623, 0.6721859404108922, 0.623888835852188, 0.6091750383440058, 0.6180371701000956, 0.5904455561647955, 0.571890605777687, 0.5815811183364117, 0.5592097775370233, 0.5524484475275245, 0.548047738887095, 0.5382692470227439, 0.5415677540747245, 0.5232462869769373, 0.5221242029763578, 0.510643168557605, 0.4892585551529324, 0.49383874419201257, 0.4956063389730901, 0.48087861471880916, 0.4696121690901846, 0.48737030447497737, 0.47179705301736874, 0.4463729665122248, 0.4586269134748346, 0.44244075077336775, 0.455904825508256, 0.44718852133373654, 0.43140823091844666, 0.43393122722774746], "accuracy": [0.33258485794067383, 0.4439307749271393, 0.561880886554718, 0.6347906589508057, 0.6349227428436279, 0.6592260003089905, 0.6897371411323547, 0.7059833407402039, 0.7137762308120728, 0.7276449799537659, 0.7285695672035217, 0.7323999404907227, 0.7473253011703491, 0.7368907928466797, 0.7597411274909973, 0.7627789974212646, 0.7650244235992432, 0.7725531458854675, 0.7844406366348267, 0.7766477465629578, 0.7873464822769165, 0.7898560166358948, 0.787082314491272, 0.7902522683143616, 0.7868181467056274, 0.7992339134216309, 0.7977809906005859, 0.8033285140991211, 0.819442629814148, 0.8164047002792358, 0.8150838613510132, 0.8150838613510132, 0.8227446675300598, 0.811649739742279, 0.8178576231002808, 0.8317263126373291, 0.8310658931732178, 0.8358209133148193, 0.8281601071357727, 0.8289526104927063, 0.839519202709198, 0.8317263126373291], "val_loss": [1.600069863455636, 0.8990281990596226, 0.8358792407172067, 0.7048902000699725, 0.7137711559023175, 0.6539744138717651, 0.606079271861485, 0.5664746931621006, 0.547362106187003, 0.5673674855913434, 0.5555707216262817, 0.5165896075112479, 0.523678013256618, 0.509015509060451, 0.48963235105787006, 0.5166504893984113, 0.4734542029244559, 0.484472462109157, 0.4847060441970825, 0.46285360200064524, 0.4519740343093872, 0.45364134652273996, 0.4457848582948957, 0.47142350673675537, 0.4396252121244158, 0.4236119730131967, 0.41607068266187397, 0.41371582235608784, 0.4312106966972351, 0.4112910202571324, 0.4309278556278774, 0.38517766339438303, 0.41927570104599, 0.38415564809526714, 0.37847037826265606, 0.40602623564856394, 0.37470713683537077, 0.42059420687811716, 0.4030855638640268, 0.376514732837677, 0.38439018385750906, 0.37973111867904663], "val_accuracy": [0.3943333327770233, 0.6676666736602783, 0.6313333511352539, 0.6600000262260437, 0.6656666398048401, 0.6963333487510681, 0.7086666822433472, 0.7436666488647461, 0.7519999742507935, 0.7260000109672546, 0.734666645526886, 0.7583333253860474, 0.7583333253860474, 0.753000020980835, 0.7736666798591614, 0.7609999775886536, 0.7839999794960022, 0.7766666412353516, 0.7713333368301392, 0.7886666655540466, 0.7879999876022339, 0.7900000214576721, 0.7960000038146973, 0.7789999842643738, 0.8069999814033508, 0.8090000152587891, 0.815666675567627, 0.815666675567627, 0.8053333163261414, 0.8146666884422302, 0.8006666898727417, 0.8299999833106995, 0.8100000023841858, 0.8299999833106995, 0.831333339214325, 0.8233333230018616, 0.8426666855812073, 0.8069999814033508, 0.8193333148956299, 0.8303333520889282, 0.8330000042915344, 0.8233333230018616]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [30, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8059999942779541, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0064231880966696, 1.6223210484328727, 1.2200485447599052, 0.9941140107427684, 0.9243239128373917, 0.8726434940990125, 0.79952370075738, 0.7606796604720057, 0.7352048623689398, 0.7086501537832397, 0.6969858418759921, 0.6892009301743629, 0.6580510074751268, 0.6772821604252932, 0.6241330134712741, 0.6087382166314166, 0.624859856930958, 0.5923329963423967, 0.5792859176036279, 0.5821347391411708, 0.5636680062263397, 0.5532435774724435, 0.5491193544713497, 0.54366320063803, 0.5407671657425459, 0.5248342118148617, 0.523633378434726, 0.5111789534577226, 0.4871045773205047, 0.49802005469303057, 0.49027970395052295, 0.4834888423627567, 0.47550845704357686, 0.4870430622055483, 0.47598226188731596, 0.4537899889777192, 0.458809544338353, 0.44296155881179466, 0.4595920275175938, 0.44960986379115275, 0.4339038164482424, 0.4327808501438269], "accuracy": [0.33245277404785156, 0.4453836977481842, 0.5655791759490967, 0.6229031682014465, 0.6440364718437195, 0.6585655808448792, 0.6872276067733765, 0.703209638595581, 0.7074362635612488, 0.724210798740387, 0.7321357727050781, 0.7339849472045898, 0.7461365461349487, 0.7339849472045898, 0.7589486241340637, 0.7619865536689758, 0.7637035846710205, 0.7732135653495789, 0.7802139520645142, 0.776251494884491, 0.7854973077774048, 0.7898560166358948, 0.7872143983840942, 0.7898560166358948, 0.7868181467056274, 0.8000264167785645, 0.7985734939575195, 0.8047813773155212, 0.8210275769233704, 0.8121780753135681, 0.817989706993103, 0.8127063512802124, 0.8206313848495483, 0.8141592741012573, 0.8132346868515015, 0.8301413059234619, 0.8293488025665283, 0.8352925777435303, 0.8261788487434387, 0.8309338092803955, 0.8378021121025085, 0.8345000743865967], "val_loss": [1.5973023005894251, 0.9020345892224994, 0.7918555566242763, 0.7066301277705601, 0.7486376592091152, 0.6567696162632534, 0.603493230683463, 0.5708460296903338, 0.5466866833823067, 0.5619543279920306, 0.5567113161087036, 0.5196657691683088, 0.528245108468192, 0.51422119140625, 0.49375738416399273, 0.5276164157049996, 0.4849629061562674, 0.49615657329559326, 0.4835015705653599, 0.46707916259765625, 0.453114458492824, 0.4518596274512155, 0.4509805951799665, 0.45980141844068256, 0.4381697177886963, 0.4281102163451059, 0.416425211088998, 0.41604587009974886, 0.43520104033606394, 0.4149270738874163, 0.4467331681932722, 0.38517123460769653, 0.4148329070636204, 0.38460640396390644, 0.3785814642906189, 0.4131346344947815, 0.3781719548361642, 0.42638654368264334, 0.40351830210004536, 0.3814497675214495, 0.38016498940331594, 0.3784691435950143], "val_accuracy": [0.3930000066757202, 0.6589999794960022, 0.6506666541099548, 0.6566666960716248, 0.6586666703224182, 0.6963333487510681, 0.7120000123977661, 0.7323333621025085, 0.750333309173584, 0.7300000190734863, 0.7363333106040955, 0.7509999871253967, 0.7586666941642761, 0.7516666650772095, 0.7713333368301392, 0.7509999871253967, 0.7763333320617676, 0.7730000019073486, 0.7763333320617676, 0.7893333435058594, 0.7883333563804626, 0.7876666784286499, 0.7946666479110718, 0.7910000085830688, 0.8076666593551636, 0.8040000200271606, 0.8166666626930237, 0.8100000023841858, 0.8063333630561829, 0.812666654586792, 0.7886666655540466, 0.8286666870117188, 0.8103333115577698, 0.8266666531562805, 0.8316666483879089, 0.8206666707992554, 0.8416666388511658, 0.8046666383743286, 0.8176666498184204, 0.8296666741371155, 0.8363333344459534, 0.8236666917800903]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 6, 1, 9, 0, 2, 5, 6, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 2, 0, 0, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [79, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [33], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7891428470611572, "mapping_values": [1, 15, 15, 9, 6, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2741134326377046, 2.1814045036599587, 1.998990239106338, 1.691977494081974, 1.4086298403439506, 1.2297865364608542, 1.1058175847782608, 1.0383704066859134, 0.9768620856827622, 0.9459412588718592, 0.9078281123829304, 0.8589488775533944, 0.8473330861809484, 0.8405178920026972, 0.8098536965129335, 0.8054173196531983, 0.7787929152170145, 0.7752208368905138, 0.7589594334060836, 0.753058720392369, 0.7435210494947251, 0.7310083323166812, 0.7112032554767167, 0.7090948939543863, 0.7154967730795749, 0.7004631202391913, 0.6982283170795428, 0.6971182312475392, 0.6858230419383151, 0.6805692847378738, 0.6763345627122788, 0.6626826227774095, 0.654705261218943, 0.6598190359309711, 0.6520542045547159, 0.6509980183975996, 0.6615259905595821, 0.6404087704485434, 0.6380973363895741, 0.6239084559755397, 0.6295818325755556, 0.6276444859272295, 0.6292226598987395, 0.6207667246643956, 0.6132078448133603], "accuracy": [0.17157575488090515, 0.32360321283340454, 0.4080042243003845, 0.47827234864234924, 0.5299167633056641, 0.5737683176994324, 0.6155065298080444, 0.6400739550590515, 0.656980574131012, 0.658961832523346, 0.6758684515953064, 0.6926429867744446, 0.6909258961677551, 0.6963412761688232, 0.7080966830253601, 0.7057191729545593, 0.7132478952407837, 0.7129837274551392, 0.7236824631690979, 0.7205125093460083, 0.7269845604896545, 0.7375511527061462, 0.7413815855979919, 0.7366266250610352, 0.7353057861328125, 0.7408532500267029, 0.7433628439903259, 0.7429665923118591, 0.7425703406333923, 0.748778223991394, 0.7514199018478394, 0.7549861073493958, 0.7609298825263977, 0.7557786107063293, 0.7584202885627747, 0.7577598690986633, 0.7629110813140869, 0.7637035846710205, 0.7618544697761536, 0.7672698497772217, 0.7728173136711121, 0.7697794437408447, 0.7626469135284424, 0.7697794437408447, 0.7718927264213562], "val_loss": [1.901900359562465, 1.7755016599382674, 1.517862285886492, 1.1872686658586775, 0.9559516906738281, 0.8301813091550555, 0.7535502570016044, 0.7058419329779488, 0.6723928962435041, 0.6464408465794155, 0.6346212114606585, 0.6152100392750331, 0.6000807285308838, 0.5859168257032122, 0.5769758224487305, 0.5656289032527378, 0.5609512499400547, 0.560918756893703, 0.5429090431758335, 0.5365406955991473, 0.5372997522354126, 0.5248521396092006, 0.5267526762826102, 0.515307971409389, 0.513603925704956, 0.5128835609980992, 0.503360560962132, 0.5041588885443551, 0.4957799230303083, 0.49509942531585693, 0.48936506680079866, 0.4918604918888637, 0.48277262278965544, 0.48203582423073904, 0.4763462713786534, 0.47662341594696045, 0.47773444652557373, 0.47570340973990305, 0.4704193387712751, 0.46499386855534147, 0.46453639439174105, 0.45961947100503103, 0.4592305932726179, 0.46487830366407124, 0.4625791140965053], "val_accuracy": [0.39366665482521057, 0.48366665840148926, 0.5916666388511658, 0.6513333320617676, 0.6763333082199097, 0.6916666626930237, 0.7059999704360962, 0.7163333296775818, 0.721666693687439, 0.7360000014305115, 0.7273333072662354, 0.7436666488647461, 0.7433333396911621, 0.7540000081062317, 0.7540000081062317, 0.7609999775886536, 0.7459999918937683, 0.7433333396911621, 0.7670000195503235, 0.765999972820282, 0.7723333239555359, 0.7733333110809326, 0.7730000019073486, 0.7763333320617676, 0.7863333225250244, 0.7853333353996277, 0.7846666574478149, 0.7839999794960022, 0.7870000004768372, 0.7876666784286499, 0.7850000262260437, 0.7770000100135803, 0.7839999794960022, 0.7883333563804626, 0.7866666913032532, 0.7879999876022339, 0.7873333096504211, 0.7929999828338623, 0.796999990940094, 0.8043333292007446, 0.8003333210945129, 0.7983333468437195, 0.7990000247955322, 0.796999990940094, 0.7933333516120911]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 6, 5, 5, 9, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7799999713897705, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2793011638891776, 2.209362911526175, 2.0923154192231572, 1.878775398020479, 1.609557934944829, 1.3881765570638676, 1.2320148850854016, 1.139521800531703, 1.0620550656787882, 1.020673980227614, 0.9739091828073793, 0.917822307638756, 0.8981397586601947, 0.8879840520347476, 0.8541922522274542, 0.8464621371045766, 0.8186006018939413, 0.8140852189948924, 0.796244764222508, 0.7887605958453511, 0.7773872295690014, 0.764609164329426, 0.7449970766222944, 0.7400798087012357, 0.7460961681724838, 0.7317602281966592, 0.727726954077654, 0.7267116442836429, 0.7155921295523375, 0.7086833953904659, 0.7046904666800745, 0.6906827717425092, 0.6823959921282107, 0.689005094535945, 0.6801247258212163, 0.6775019893698515, 0.6841525656514715, 0.6669216124121192, 0.6633931827142081, 0.6487277374448966, 0.6556530486654061, 0.6538078417757232, 0.6541475921164667, 0.6443388446321135, 0.6378351664499065], "accuracy": [0.15876370668411255, 0.29665830731391907, 0.37405890226364136, 0.44168537855148315, 0.49253731966018677, 0.5385021567344666, 0.5746929049491882, 0.6086382269859314, 0.6301677227020264, 0.632941484451294, 0.652621865272522, 0.6742834448814392, 0.670320987701416, 0.6799629926681519, 0.693831741809845, 0.6925109028816223, 0.7010962963104248, 0.7022850513458252, 0.7121912837028503, 0.7086250185966492, 0.7173424959182739, 0.7268524765968323, 0.7288337349891663, 0.7265883088111877, 0.7256637215614319, 0.7284374833106995, 0.733588695526123, 0.7317395210266113, 0.7337207794189453, 0.7404569983482361, 0.7437590956687927, 0.7427024245262146, 0.750759482383728, 0.744419515132904, 0.7490423917770386, 0.7478536367416382, 0.7555144429206848, 0.7564390301704407, 0.7532690763473511, 0.7588165402412415, 0.76106196641922, 0.759609043598175, 0.755118191242218, 0.763439416885376, 0.7633073329925537], "val_loss": [1.9153896059308733, 1.8302949496677943, 1.667243208203997, 1.4082753317696708, 1.1412808895111084, 0.9588963644845145, 0.8454868793487549, 0.7760788202285767, 0.7291241032736642, 0.6931929077420916, 0.6735540969031197, 0.646374089377267, 0.6309402499880109, 0.614837646484375, 0.6030176877975464, 0.5916503156934466, 0.5835950885500226, 0.5794395548956734, 0.5644992419651577, 0.5585576636450631, 0.556014861379351, 0.5457157918385097, 0.5424783911023822, 0.5344955750874111, 0.5317881277629307, 0.5283924681799752, 0.5206877333777291, 0.5201652220317295, 0.5133069583347866, 0.5101750578199115, 0.5079360689435687, 0.5070757695606777, 0.4991659436907087, 0.4981377124786377, 0.4925989934376308, 0.49286961555480957, 0.4914771148136684, 0.48875343799591064, 0.48523381778172087, 0.4805187327521188, 0.47998576504843576, 0.47615599632263184, 0.47367329256875174, 0.47800775936671663, 0.477521402495248], "val_accuracy": [0.36933332681655884, 0.4586666524410248, 0.5566666722297668, 0.6119999885559082, 0.6363333463668823, 0.67166668176651, 0.6880000233650208, 0.7023333311080933, 0.7056666612625122, 0.7239999771118164, 0.7226666808128357, 0.7369999885559082, 0.7366666793823242, 0.7453333139419556, 0.7490000128746033, 0.750333309173584, 0.7409999966621399, 0.7386666536331177, 0.7546666860580444, 0.7596666812896729, 0.7670000195503235, 0.7670000195503235, 0.7676666378974915, 0.7710000276565552, 0.7710000276565552, 0.7756666541099548, 0.7766666412353516, 0.7793333530426025, 0.7786666750907898, 0.781000018119812, 0.7770000100135803, 0.7699999809265137, 0.7753333449363708, 0.7789999842643738, 0.7820000052452087, 0.7776666879653931, 0.781333327293396, 0.7873333096504211, 0.7889999747276306, 0.7916666865348816, 0.7903333306312561, 0.7893333435058594, 0.7893333435058594, 0.7889999747276306, 0.7896666526794434]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 5, 2, 2, 3, 5, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [33], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7771428823471069, "mapping_values": [1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), alpha)))), tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.274113410184601, 2.1814160912248832, 1.999014002661805, 1.691949088874825, 1.4086155871736563, 1.2298010528489127, 1.1058864994465383, 1.0383911933156997, 0.9768858929084135, 0.9458830137184158, 0.9078328102067351, 0.858995814349248, 0.8473014805720325, 0.8407919350049562, 0.8098353293703815, 0.8055371276895525, 0.7786763588419491, 0.7753986239260088, 0.7588801754070484, 0.7530876631198888, 0.7433636302740787, 0.7312089947897761, 0.7113151501875512, 0.7090660826310569, 0.7152888411780264, 0.7003836332137763, 0.6984740781856487, 0.6971508105984295, 0.6858924607464729, 0.6808204921623027, 0.6761705305487835, 0.6624379205807656, 0.6548724080183881, 0.660378397188135, 0.6517007766367029], "accuracy": [0.17157575488090515, 0.3234711289405823, 0.4081363081932068, 0.4785365164279938, 0.5300488471984863, 0.5735041499137878, 0.6155065298080444, 0.6406022906303406, 0.6564522385597229, 0.6586976647377014, 0.6753401160240173, 0.6922467350959778, 0.6914542317390442, 0.6966054439544678, 0.7082287669181824, 0.7046625018119812, 0.7137762308120728, 0.7140403985977173, 0.7228899598121643, 0.7195879220962524, 0.7277770638465881, 0.7357020378112793, 0.7412495017051697, 0.7364945411682129, 0.7351737022399902, 0.7417778372764587, 0.743891179561615, 0.7430986762046814, 0.7437590956687927, 0.7474573850631714, 0.7514199018478394, 0.7548540234565735, 0.7609298825263977, 0.754589855670929, 0.759609043598175], "val_loss": [1.9019033568246024, 1.7755297252110072, 1.5178515229906355, 1.1872482299804688, 0.9559405190604073, 0.8301913397652763, 0.7534843342644828, 0.7057871988841465, 0.6724520070212228, 0.6465684516089303, 0.6346635137285505, 0.6154458863394601, 0.6001062052590507, 0.5859112228666034, 0.5770321573529925, 0.5655590295791626, 0.560752374785287, 0.5606898409979684, 0.5424182074410575, 0.5364559888839722, 0.5369822978973389, 0.5248091561453683, 0.5268750020435878, 0.5146961723055158, 0.5134142466953823, 0.5129718439919608, 0.5038538830620902, 0.5040883507047381, 0.4959076813289097, 0.4951815094266619, 0.4895057167325701, 0.4904234749930246, 0.48211065360477995, 0.48224447454724995, 0.47604661328451975], "val_accuracy": [0.39366665482521057, 0.4833333194255829, 0.5910000205039978, 0.6523333191871643, 0.6766666769981384, 0.6916666626930237, 0.7053333520889282, 0.7163333296775818, 0.722000002861023, 0.7356666922569275, 0.7273333072662354, 0.7433333396911621, 0.7429999709129333, 0.7543333172798157, 0.753333330154419, 0.7606666684150696, 0.7456666827201843, 0.7446666955947876, 0.7693333625793457, 0.765999972820282, 0.7713333368301392, 0.7730000019073486, 0.7736666798591614, 0.7763333320617676, 0.7850000262260437, 0.784333348274231, 0.7833333611488342, 0.7833333611488342, 0.7873333096504211, 0.7900000214576721, 0.7839999794960022, 0.7793333530426025, 0.7833333611488342, 0.7893333435058594, 0.7856666445732117]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 5, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [47, 65, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7734285593032837, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2793010964353937, 2.2093633477399064, 2.092316903962183, 1.8787749661367645, 1.60957865254628, 1.3881909733419453, 1.232014506893891, 1.1395004160919713, 1.0620246012575196, 1.0206325834280212, 0.9738110323718132, 0.9177481513595883, 0.8981338317887722, 0.8880530081294736, 0.8541955243264207, 0.8464120773670145, 0.8186158912922838, 0.8139692895511011, 0.7962413455170568, 0.7890312181660969, 0.7771248550163741, 0.764652448291902, 0.7450536744878938, 0.7400014818683041, 0.746248680862532, 0.7318237001602094, 0.7274869523264429, 0.7270945904749637, 0.715219012246455, 0.7086925002814064, 0.7048380021894014, 0.6907994062468171, 0.6825453961026227, 0.6886990502557387, 0.6800273974825756], "accuracy": [0.15876370668411255, 0.29665830731391907, 0.37405890226364136, 0.4415532946586609, 0.49266940355300903, 0.5386342406272888, 0.5748249888420105, 0.6086382269859314, 0.6297714710235596, 0.6330735683441162, 0.6522256135940552, 0.6741513609886169, 0.6708492636680603, 0.6799629926681519, 0.6940959095954895, 0.6923788189888, 0.7009642124176025, 0.7030775547027588, 0.7111346125602722, 0.7080966830253601, 0.717870831489563, 0.7259278893470764, 0.7300224304199219, 0.7271166443824768, 0.7251353859901428, 0.7279091477394104, 0.733588695526123, 0.7313432693481445, 0.7341170310974121, 0.7412495017051697, 0.7434949278831482, 0.7420420050621033, 0.7514199018478394, 0.7465327978134155, 0.7497028112411499], "val_loss": [1.9153891972133092, 1.830296516418457, 1.6672373499189104, 1.4082684176308768, 1.1412932532174247, 0.9589051178523472, 0.8455313103539603, 0.7760674101965768, 0.7291525432041713, 0.6932370662689209, 0.6734624590192523, 0.6463630029133388, 0.6310254335403442, 0.6149261678968158, 0.603043794631958, 0.5916413068771362, 0.5838577917643956, 0.5792489903313773, 0.5642389740262713, 0.5582320690155029, 0.5565512350627354, 0.5460481473377773, 0.5424854755401611, 0.5343997989382062, 0.5315861361367362, 0.5281462499073574, 0.5208226442337036, 0.5201483283724103, 0.5133040802819389, 0.5103025095803397, 0.5079107625143868, 0.5072427988052368, 0.49920594692230225, 0.49830383913857595, 0.4929278407778059], "val_accuracy": [0.36933332681655884, 0.4583333432674408, 0.5566666722297668, 0.612333357334137, 0.6363333463668823, 0.671999990940094, 0.687666654586792, 0.7013333439826965, 0.7056666612625122, 0.7239999771118164, 0.7226666808128357, 0.737333357334137, 0.7369999885559082, 0.7459999918937683, 0.7480000257492065, 0.75, 0.7409999966621399, 0.737666666507721, 0.7546666860580444, 0.7606666684150696, 0.7666666507720947, 0.7683333158493042, 0.7673333287239075, 0.7726666927337646, 0.7693333625793457, 0.7760000228881836, 0.7763333320617676, 0.7776666879653931, 0.7776666879653931, 0.781333327293396, 0.7776666879653931, 0.7696666717529297, 0.7756666541099548, 0.778333306312561, 0.7806666493415833]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 2, 2, 6, 1, 3, 0, 2, 2, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 1, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7714285850524902, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2793011459078, 2.2093636896694973, 2.092315131710064, 1.8787742933151885, 1.6095592841149762, 1.3881957421858926, 1.2319995142512585, 1.1394772747362516, 1.0619937808774071, 1.0205979901156201, 0.9739128674939324, 0.9177898435686495, 0.8981366627377888, 0.8879913721637577, 0.8541350787373393, 0.8464107096722696, 0.8186113291082129, 0.8139872146698273, 0.7962195874205229, 0.7888902568499079, 0.7774076714507498, 0.7644613044861207, 0.7450410595911369, 0.7400500575045332, 0.7459155302935147, 0.7315933213824719, 0.727421332611746, 0.7265452880034939, 0.7153090824776668, 0.7084958161959448, 0.7046294697303153, 0.6904059144027512, 0.682662034905456, 0.6887342283014356, 0.6795904261246176], "accuracy": [0.15876370668411255, 0.29665830731391907, 0.37405890226364136, 0.44168537855148315, 0.49253731966018677, 0.5385021567344666, 0.5746929049491882, 0.6087703108787537, 0.6297714710235596, 0.6332056522369385, 0.6520935297012329, 0.6744155287742615, 0.6705851554870605, 0.6793025732040405, 0.693831741809845, 0.6921146512031555, 0.7012283802032471, 0.7025492191314697, 0.7119271159172058, 0.7084929347038269, 0.7174745798110962, 0.7260599732398987, 0.7301545143127441, 0.7271166443824768, 0.726192057132721, 0.728701651096344, 0.733588695526123, 0.7325320243835449, 0.7329282760620117, 0.7400607466697693, 0.744419515132904, 0.7423061728477478, 0.7512878179550171, 0.744419515132904, 0.7490423917770386], "val_loss": [1.9153891972133092, 1.8302957671029227, 1.6672446727752686, 1.4082920551300049, 1.1412758146013533, 0.9589060374668666, 0.8454470123563494, 0.7760428019932338, 0.7290661334991455, 0.6932424477168492, 0.6736023255756923, 0.6464639050619942, 0.6308602435248238, 0.6148571457181659, 0.6029186759676252, 0.591695751462664, 0.5838296754019601, 0.5795552219663348, 0.5643516268048968, 0.5582190070833478, 0.5561935901641846, 0.5459870951516288, 0.5424436160496303, 0.5343617030552456, 0.5315872941698346, 0.5280939340591431, 0.5206130572727748, 0.5201696668352399, 0.5130579812186105, 0.5101004498345512, 0.5075112581253052, 0.5069402796881539, 0.49902800151279997, 0.4980958529881069, 0.4922672850745065], "val_accuracy": [0.36933332681655884, 0.4583333432674408, 0.5569999814033508, 0.612333357334137, 0.6363333463668823, 0.671999990940094, 0.6886666417121887, 0.7016666531562805, 0.7056666612625122, 0.7236666679382324, 0.7226666808128357, 0.737333357334137, 0.7363333106040955, 0.7459999918937683, 0.7493333220481873, 0.750333309173584, 0.7409999966621399, 0.7383333444595337, 0.7549999952316284, 0.7603333592414856, 0.765999972820282, 0.7670000195503235, 0.7673333287239075, 0.7716666460037231, 0.7706666588783264, 0.7766666412353516, 0.7749999761581421, 0.7776666879653931, 0.778333306312561, 0.7816666960716248, 0.7760000228881836, 0.7703333497047424, 0.7766666412353516, 0.7770000100135803, 0.781000018119812]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 6, 5, 2, 8, 8, 2, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 2, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 87, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [20], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7117142677307129, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300888868921925, 2.293057955802471, 2.2899101909440445, 2.284302577335034, 2.278895987716129, 2.272599311064515, 2.2682779075258273, 2.2631295371002067, 2.2568072404182504, 2.2508938579574442, 2.244613169962468, 2.237118758451134, 2.229490263524104, 2.226681409148555, 2.216375197464874, 2.208111985547589, 2.200881522518375, 2.1915314508041828, 2.181384529498716, 2.1710587595873, 2.159038656470546, 2.1477768740807037, 2.135975720057036, 2.121215389483735, 2.1087851575368495, 2.0913589162880704, 2.075402414888486, 2.0609704578683328, 2.040437547963104, 2.0223509700716193, 2.0053752490699788, 1.9814466292186421, 1.9588877933057796, 1.9371470388971253, 1.9156947660408379, 1.893539004762962, 1.8707578488155805, 1.8414011551892642, 1.8173387352942538, 1.7895220655098159, 1.7635470285328734, 1.7412353400241871, 1.712590248199612, 1.684241836648245, 1.6598463274342683, 1.6349873911545592, 1.6091885412720295, 1.5841631068529596, 1.565127572394822, 1.5463628765771795, 1.5201848907367412, 1.4944439167044874, 1.4646389089508016, 1.4582190531088361, 1.4322893303052513, 1.4106388108258896, 1.4104861591659312, 1.3743329434866571, 1.3688169757939759, 1.3449507462050951, 1.3417469737489132, 1.3130423977484935, 1.3088861314958475, 1.306349492501337, 1.282161251602077, 1.266333462665771, 1.2507321417622987, 1.245492608335276, 1.2377454183514502, 1.2162149409418959, 1.2123343037450476, 1.1958476351772112, 1.1802169174770747, 1.1790013319906574, 1.1736081454259781, 1.159941503778346, 1.16077979644528, 1.1512459793173957, 1.137977061490845, 1.1350960091451188, 1.1256313066850359, 1.107528535146062, 1.1020208226061452, 1.104695182497853, 1.0929657981821166, 1.0873118434615532, 1.0808230245653443, 1.0688235167073945, 1.061099151106338, 1.0573851745976686, 1.0614187285853194, 1.0531199263102973, 1.0433824244523013, 1.0508331618273121, 1.0346163137792643, 1.0221867266190665, 1.0278974528231437, 1.0145631906237065, 0.9971472406588872, 0.9993038948233165], "accuracy": [0.1014397069811821, 0.11293092370033264, 0.1208558976650238, 0.13155461847782135, 0.14859332144260406, 0.1682736724615097, 0.18333113193511963, 0.19178444147109985, 0.2215031087398529, 0.2172764539718628, 0.2285034954547882, 0.24858011305332184, 0.2775062620639801, 0.2641659080982208, 0.2883370816707611, 0.2973187267780304, 0.302469938993454, 0.3160744905471802, 0.32465988397598267, 0.3357548415660858, 0.34803855419158936, 0.35966187715530396, 0.3575485348701477, 0.3704926669597626, 0.3663980960845947, 0.37947431206703186, 0.38541802763938904, 0.39083343744277954, 0.3980979919433594, 0.4080042243003845, 0.40681546926498413, 0.4161933660507202, 0.43006208539009094, 0.43309998512268066, 0.43164706230163574, 0.4377228915691376, 0.4410249590873718, 0.44564786553382874, 0.4493461847305298, 0.4644036591053009, 0.4593845009803772, 0.46651697158813477, 0.472989022731781, 0.4830273389816284, 0.4827631711959839, 0.4934619069099426, 0.4947827160358429, 0.4955752193927765, 0.49953770637512207, 0.5049530863761902, 0.5115572810173035, 0.5119535326957703, 0.529388427734375, 0.5229163765907288, 0.5284639000892639, 0.5435213446617126, 0.5362567901611328, 0.5481442213058472, 0.5443138480186462, 0.5526350736618042, 0.5489367246627808, 0.5518425703048706, 0.5600317120552063, 0.5474838018417358, 0.5663716793060303, 0.5671641826629639, 0.5758816599845886, 0.5716549754142761, 0.5754854083061218, 0.5831462144851685, 0.5799762010574341, 0.5863162279129028, 0.5938449501991272, 0.5933166146278381, 0.5914674401283264, 0.5962224006652832, 0.6001849174499512, 0.5988640785217285, 0.6098269820213318, 0.6070532202720642, 0.6046757102012634, 0.6135252714157104, 0.6174877882003784, 0.6127327680587769, 0.6153744459152222, 0.6194690465927124, 0.6205257177352905, 0.620261549949646, 0.6239598393440247, 0.6296393871307373, 0.6209219098091125, 0.625148594379425, 0.6349227428436279, 0.6263373494148254, 0.6386210322380066, 0.6448289752006531, 0.6301677227020264, 0.6390172839164734, 0.6481310129165649, 0.6501122713088989], "val_loss": [1.9659162248883928, 1.9609736715044295, 1.9560129983084542, 1.9510739871433802, 1.9460605893816267, 1.940962655203683, 1.9357126099722726, 1.9303711482456751, 1.9247808456420898, 1.9190436090741838, 1.9130407742091589, 1.9066546303885323, 1.8998923301696777, 1.8930021694728307, 1.8855949810573034, 1.87770414352417, 1.8692866734095983, 1.8603830337524414, 1.850785800388881, 1.8405634335109167, 1.8295983586992537, 1.8179260662623815, 1.8054695129394531, 1.7922938891819544, 1.7783747400556291, 1.76345614024571, 1.7476444244384766, 1.7309998103550501, 1.713156291416713, 1.6945445878165108, 1.6750043800898962, 1.6544708865029472, 1.6329433577401298, 1.6105829647609167, 1.587346008845738, 1.5634943757738387, 1.5390538147517614, 1.5138428211212158, 1.4882431030273438, 1.462174994604928, 1.4358421734401159, 1.4096054690224784, 1.3830203669411796, 1.3561580862317766, 1.3298012188502721, 1.3040963581630163, 1.2784655434744698, 1.2531800270080566, 1.2288615362984794, 1.2050953933170863, 1.1823157242366247, 1.15958149092538, 1.1374928270067488, 1.1168020793369837, 1.09667021887643, 1.0774056230272566, 1.0597591400146484, 1.0422260080065047, 1.02549832207816, 1.0097756726401192, 0.9948220252990723, 0.980212926864624, 0.9666280405861991, 0.953765732901437, 0.9413223266601562, 0.9290798051016671, 0.9176667417798724, 0.9070744514465332, 0.8965974875858852, 0.8861979757036481, 0.8766589845929827, 0.867019670350211, 0.8577887160437447, 0.8491056476320539, 0.8411313806261335, 0.8332326582499913, 0.8259085927690778, 0.8190942832401821, 0.8122094529015678, 0.8053810596466064, 0.7991937569209507, 0.7927041394369942, 0.7865820101329258, 0.7810016019003732, 0.7752929415021624, 0.7697514976773944, 0.7648030008588519, 0.759486368724278, 0.754507303237915, 0.7497863599232265, 0.7455502578190395, 0.7408887147903442, 0.7366104296275547, 0.7328347308295113, 0.729008606501988, 0.7246050664356777, 0.7209253140858242, 0.7172841514859881, 0.7136064938136509, 0.7098893778664725], "val_accuracy": [0.070333331823349, 0.10899999737739563, 0.1576666682958603, 0.21299999952316284, 0.25433334708213806, 0.2926666736602783, 0.32766667008399963, 0.3490000069141388, 0.36500000953674316, 0.37566667795181274, 0.38600000739097595, 0.398333340883255, 0.40833333134651184, 0.41966667771339417, 0.42899999022483826, 0.4410000145435333, 0.44600000977516174, 0.45266667008399963, 0.4586666524410248, 0.4650000035762787, 0.4736666679382324, 0.4803333282470703, 0.4896666705608368, 0.49433332681655884, 0.5043333172798157, 0.512333333492279, 0.5176666378974915, 0.5260000228881836, 0.534333348274231, 0.5373333096504211, 0.543666660785675, 0.5526666641235352, 0.5566666722297668, 0.5596666932106018, 0.5636666417121887, 0.5693333148956299, 0.574999988079071, 0.5806666612625122, 0.5863333344459534, 0.5876666903495789, 0.5893333554267883, 0.590666651725769, 0.5913333296775818, 0.5973333120346069, 0.5993333458900452, 0.6013333201408386, 0.6050000190734863, 0.609333336353302, 0.612333357334137, 0.6169999837875366, 0.6193333268165588, 0.6306666731834412, 0.6380000114440918, 0.6456666588783264, 0.6503333449363708, 0.6520000100135803, 0.6536666750907898, 0.6579999923706055, 0.6626666784286499, 0.6663333177566528, 0.6706666946411133, 0.6756666898727417, 0.6766666769981384, 0.6753333210945129, 0.6793333292007446, 0.6816666722297668, 0.6840000152587891, 0.684333324432373, 0.6886666417121887, 0.6886666417121887, 0.6909999847412109, 0.6923333406448364, 0.6930000185966492, 0.6946666836738586, 0.6946666836738586, 0.6963333487510681, 0.6983333230018616, 0.7003333568572998, 0.7016666531562805, 0.7016666531562805, 0.7026666402816772, 0.7036666870117188, 0.7046666741371155, 0.706333339214325, 0.7056666612625122, 0.7059999704360962, 0.7070000171661377, 0.7083333134651184, 0.7110000252723694, 0.7136666774749756, 0.7136666774749756, 0.7149999737739563, 0.715666651725769, 0.7153333425521851, 0.7149999737739563, 0.7163333296775818, 0.7176666855812073, 0.7179999947547913, 0.718999981880188, 0.7173333168029785]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [47, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [71], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3548571467399597, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))))), grad))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.865165642082195, 2.2990731562227857, 2.2354860537875014, 2.3748895101354517, 2.3055344329864718, 2.3031641992642786, 2.3029894467909195], "accuracy": [0.21595561504364014, 0.10910051316022873, 0.17791573703289032, 0.14080041646957397, 0.09325055778026581, 0.09668471664190292, 0.09179764986038208], "val_loss": [1.9763281685965401, 1.9189229692731584, 1.9642548561096191, 1.9773571831839425, 1.9738209588187081, 1.9735968453543526, 1.9736651693071638], "val_accuracy": [0.10433333367109299, 0.304666668176651, 0.14000000059604645, 0.10166666656732559, 0.10433333367109299, 0.10433333367109299, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 6, 1, 9, 0, 9, 9, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 0, 2, 1, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [44, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.31114286184310913, "mapping_values": [1, 18, 18, 13, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8657717502600546, 2.2993060661392, 2.3375158071864344, 2.3085278564078258, 2.3037663552865313, 2.3031180234333903, 2.3029278824909127], "accuracy": [0.21595561504364014, 0.11081759631633759, 0.21093647181987762, 0.09998679161071777, 0.09457138925790787, 0.09787346422672272, 0.09853387624025345], "val_loss": [1.9763318470546178, 1.9290966306413924, 1.9843832424708776, 1.9746205466134208, 1.9737697328839983, 1.973616123199463, 1.9736061777387346], "val_accuracy": [0.10433333367109299, 0.2863333225250244, 0.10066666454076767, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [65, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 12, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, alpha)))), grad))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))))))), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.sqrt(sigma)))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12772421538829803, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 8, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [62166.326633476296, 8901369.435807686, 154193204.82895258, 1079133586.9185047, 4773814142.562938, 15698737621.598204], "accuracy": [0.10328886657953262, 0.10394927859306335, 0.10276053100824356, 0.10566636174917221, 0.10619468986988068, 0.09576013684272766], "val_loss": [509690.875, 27210292.0, 291524845.71428573, 1588286098.2857144, 5947496301.714286, 17540425435.42857], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 3, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [75], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), alpha))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [49621269266.22793, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15612204372882843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 6, 5, 2, 8, 0, 5, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 87, 73, 44, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 2, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(grad))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3136979891497775, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.09259014576673508, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0591323716299876, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [47, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, alpha))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [47, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030615077436307, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 0, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [51, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [2, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [40], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [9306164980057.531, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11887465417385101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 5, 2, 2, 5, 1, 3, 6, 2, 3, 5, 3, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [27, 87, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 2, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 2, 2, 6, 1, 3, 0, 9, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 3, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031367272465313, 2.3006153487415992, 2.3028122900090024, 2.3023706546564773, 2.3023617980880444, 2.3013064478051786], "accuracy": [0.09536388516426086, 0.09219389408826828, 0.08889182657003403, 0.09021265059709549, 0.0878351628780365, 0.0940430611371994], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 5, 2, 6, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [47, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 23, 23, 13, 10, 2, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031367272465313, 2.3006153487415992, 2.3028122900090024, 2.3023706546564773, 2.3023617980880444, 2.3013064478051786], "accuracy": [0.09536388516426086, 0.09219389408826828, 0.08889182657003403, 0.09021265059709549, 0.0878351628780365, 0.0940430611371994], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]