[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5097143054008484, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3016141695101435, 2.299887236949239, 2.300145682877931, 2.301056144322859, 2.2977433671033016, 2.2959851950639276, 2.2942680488755722, 2.2937023037570485, 2.2925635351244766, 2.2902493862317868, 2.291345776820054, 2.287268630234226, 2.287384783350922, 2.284547460801912, 2.283160856166583, 2.2821631604150427, 2.282864597196104, 2.280450399509904, 2.2800275053503714, 2.277031479573379, 2.2759995772586348, 2.275743953304016, 2.2739946604751244, 2.272478291355718, 2.270631932752511, 2.2698316107399634, 2.266230501345734, 2.2662447562007983, 2.2656073288406757, 2.263763721860584, 2.262048160741673, 2.26183365559959, 2.2607080943989732, 2.257647301747326, 2.2581354267388414, 2.255952780729492, 2.2548520933478, 2.2521608770169195, 2.2519404457985623, 2.249903579445374, 2.2494331939487155, 2.24816965943456, 2.2452856978846105, 2.2457126366574105, 2.240870436751658, 2.2408031043973597, 2.238737298198081, 2.237779920757124, 2.233534531869814, 2.2345792256200223, 2.230934822642808, 2.2313736788805496, 2.2276894569145043, 2.227457533076675, 2.224527569998682, 2.223558796174837, 2.222781956014758, 2.220275358611472, 2.217744362557396, 2.215849149087007, 2.2133683282244774, 2.209749600292433, 2.208667467361932, 2.208064811388106, 2.206865599977027, 2.2036859768099237, 2.2005865191896876, 2.1964216498398996, 2.1977834319551905, 2.196290906866575, 2.1929174298387335, 2.189964188529264, 2.188180167740205, 2.1858052677088535, 2.182312840279209, 2.181124060838261, 2.1778364125779435, 2.1768906204975385, 2.175119608746953, 2.172294129784931, 2.167194240490963, 2.165489245493965, 2.1613272609428535, 2.16094322246158, 2.158018419031202, 2.1551571591119916, 2.1536973842839524, 2.1485291618192988, 2.1476686812662695, 2.1448885323490843, 2.140880314933153, 2.1363514061727384, 2.1316325145863018, 2.1302816415932107, 2.1238627571707562, 2.123691066097763, 2.1198887265101716, 2.114595327048553, 2.11403583755992, 2.112462497264513], "accuracy": [0.09800554811954498, 0.1002509593963623, 0.09813763201236725, 0.09259014576673508, 0.10315678268671036, 0.10091137140989304, 0.11279883980751038, 0.11821424216032028, 0.11715757846832275, 0.1262712925672531, 0.12415797263383865, 0.1286487877368927, 0.1286487877368927, 0.13710209727287292, 0.13815876841545105, 0.14555540680885315, 0.14040417969226837, 0.1500462293624878, 0.14700831472873688, 0.15942411124706268, 0.16140536963939667, 0.1604807823896408, 0.16312244534492493, 0.16721701622009277, 0.1752740740776062, 0.1768590658903122, 0.19152027368545532, 0.18399155139923096, 0.18953903019428253, 0.19099193811416626, 0.20116232335567474, 0.19336943328380585, 0.19495442509651184, 0.21159687638282776, 0.20842689275741577, 0.21516312658786774, 0.21833311021327972, 0.228899747133255, 0.21621978282928467, 0.22639016807079315, 0.23061682283878326, 0.23154141008853912, 0.2359001487493515, 0.2378813922405243, 0.2440892904996872, 0.24065512418746948, 0.25478801131248474, 0.2467309534549713, 0.2685246467590332, 0.258090078830719, 0.26324132084846497, 0.261260062456131, 0.26958128809928894, 0.2685246467590332, 0.2797516882419586, 0.2715625464916229, 0.27658170461654663, 0.28305375576019287, 0.28345000743865967, 0.2806762754917145, 0.2860916554927826, 0.2930920720100403, 0.2985074520111084, 0.30260202288627625, 0.29837536811828613, 0.308149516582489, 0.3109232485294342, 0.31145158410072327, 0.3151499032974243, 0.3065645098686218, 0.3140932619571686, 0.31964072585105896, 0.3183199167251587, 0.31686699390411377, 0.3311319649219513, 0.3222824037075043, 0.32822611927986145, 0.3303394615650177, 0.33086779713630676, 0.3276977837085724, 0.3427552580833435, 0.3411702513694763, 0.34143441915512085, 0.34341567754745483, 0.3389248549938202, 0.34460440278053284, 0.34962356090545654, 0.3485668897628784, 0.3486989736557007, 0.35385021567344666, 0.3543785512447357, 0.3579447865486145, 0.36666226387023926, 0.36600184440612793, 0.37366265058517456, 0.35966187715530396, 0.3641526997089386, 0.3761722445487976, 0.37326639890670776, 0.3671905994415283], "val_loss": [1.9697785377502441, 1.9685478210449219, 1.9673125403267997, 1.9660942213875907, 1.9648865972246443, 1.9636703899928503, 1.962454182761056, 1.9612340927124023, 1.9600356646946497, 1.9588260650634766, 1.9576287950788225, 1.956423214503697, 1.9552185876028878, 1.9540040833609444, 1.9527816091264998, 1.9515790939331055, 1.9503617967878069, 1.9491594859531947, 1.9479453223092216, 1.9467236655099052, 1.945500714438302, 1.9442664555140905, 1.9430204800197057, 1.9417706217084612, 1.9405267579214913, 1.9392620495387487, 1.9379905291966029, 1.936697006225586, 1.935401099068778, 1.9341044425964355, 1.9328000886099679, 1.9314817019871302, 1.930152348109654, 1.9288177490234375, 1.9274798120771135, 1.9261275700160436, 1.9247537340436662, 1.9233722005571638, 1.9219756807599748, 1.9205602237156458, 1.9191256250653947, 1.9176665033612932, 1.916203566959926, 1.9147373608180456, 1.9132371629987444, 1.9117236818586076, 1.910196099962507, 1.908625670841762, 1.9070355551583427, 1.9054277965000697, 1.9037919725690569, 1.9021450451442175, 1.9004722322736467, 1.8988051414489746, 1.8970879827226912, 1.8953592436654227, 1.8936271667480469, 1.8918475423540388, 1.890038013458252, 1.8881936754499162, 1.8863328524998255, 1.88443694795881, 1.8825147492544991, 1.8805938448224748, 1.8786354746137346, 1.8766327585492815, 1.8745853560311454, 1.8724919727870397, 1.8704022680010115, 1.8682801382882255, 1.8661176136561803, 1.8639190537588937, 1.8616857528686523, 1.8594256128583635, 1.857116971697126, 1.8547964777265276, 1.8524159022739954, 1.8500159127371651, 1.84758574622018, 1.8450897080557687, 1.842531749180385, 1.8399591445922852, 1.8373402186802454, 1.8346987451825822, 1.832024097442627, 1.829279899597168, 1.8265260287693568, 1.8236871446881975, 1.8208232607160295, 1.8179503849574499, 1.814986297062465, 1.811983517238072, 1.8089205196925573, 1.805831023624965, 1.8026403018406458, 1.7994424956185477, 1.7962282044546944, 1.7929087366376604, 1.78956481388637, 1.7861945288521903], "val_accuracy": [0.04633333161473274, 0.0533333346247673, 0.06066666543483734, 0.0689999982714653, 0.07699999958276749, 0.08866667002439499, 0.09700000286102295, 0.10633333027362823, 0.11666666716337204, 0.12866666913032532, 0.140666663646698, 0.156333327293396, 0.16733333468437195, 0.18166667222976685, 0.19200000166893005, 0.20733332633972168, 0.2173333317041397, 0.2253333330154419, 0.23666666448116302, 0.24766667187213898, 0.2553333342075348, 0.265666663646698, 0.2759999930858612, 0.2853333353996277, 0.2943333387374878, 0.3019999861717224, 0.31166666746139526, 0.3186666667461395, 0.3240000009536743, 0.33000001311302185, 0.3343333303928375, 0.33766666054725647, 0.34466665983200073, 0.34933334589004517, 0.3543333411216736, 0.3583333194255829, 0.3643333315849304, 0.3659999966621399, 0.36800000071525574, 0.36933332681655884, 0.3733333349227905, 0.37466666102409363, 0.3766666650772095, 0.38066667318344116, 0.38366666436195374, 0.3853333294391632, 0.3889999985694885, 0.3919999897480011, 0.39533331990242004, 0.398333340883255, 0.39899998903274536, 0.4020000100135803, 0.4036666750907898, 0.40566667914390564, 0.40966665744781494, 0.4129999876022339, 0.414000004529953, 0.4180000126361847, 0.4203333258628845, 0.42266666889190674, 0.4246666729450226, 0.4269999861717224, 0.4300000071525574, 0.4323333203792572, 0.4333333373069763, 0.43700000643730164, 0.4410000145435333, 0.4416666626930237, 0.44333332777023315, 0.4440000057220459, 0.445333331823349, 0.44566667079925537, 0.4463333189487457, 0.4480000138282776, 0.4506666660308838, 0.4533333480358124, 0.4543333351612091, 0.4560000002384186, 0.4566666781902313, 0.4593333303928375, 0.4606666564941406, 0.46166667342185974, 0.46399998664855957, 0.4646666646003723, 0.46799999475479126, 0.47066667675971985, 0.4716666638851166, 0.4729999899864197, 0.47600001096725464, 0.47733333706855774, 0.47833332419395447, 0.4803333282470703, 0.48233333230018616, 0.4846666753292084, 0.48633334040641785, 0.49000000953674316, 0.49166667461395264, 0.4946666657924652, 0.49566665291786194, 0.49666666984558105]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5097143054008484, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3016141695101435, 2.299887286421645, 2.300145682877931, 2.301056175813888, 2.2977432996495177, 2.295985100590841, 2.2942680488755722, 2.2937022722660196, 2.2925635351244766, 2.2902493862317868, 2.291345790329705, 2.287268616724575, 2.287384769841271, 2.2845474293108836, 2.283160856166583, 2.2821631604150427, 2.282864597196104, 2.2804503815285266, 2.2800275053503714, 2.27703144808235, 2.2759995142765774, 2.2757439218129876, 2.273994673984776, 2.272478291355718, 2.2706319012614826, 2.2698315477579056, 2.2662304383636767, 2.2662447247097695, 2.2656072793682696, 2.263763721860584, 2.262048097759615, 2.26183365559959, 2.2607079819445093, 2.25764720727424, 2.2581354582298703, 2.255952699766057, 2.254851967383684, 2.252160751052804, 2.2519403333440984, 2.249903341026795, 2.2494331444763094, 2.24816949750769, 2.2452853829743225, 2.2457125421843243, 2.240870198333079, 2.2408029784332446, 2.2387371722339653, 2.2377798757564435, 2.2335344688877563, 2.2345792256200223, 2.2309348046614303, 2.2313735529164345, 2.2276892994593602, 2.227457501585646, 2.2245275385076533, 2.2235586027569383, 2.222781924523729, 2.220275264138386, 2.2177442365932807, 2.215848973650486, 2.2133682967334485, 2.209749474328318, 2.208667354907468, 2.2080646854239903, 2.2068655505046206, 2.2036858193547797, 2.2005864247166014, 2.196421505894407, 2.1977832430090176, 2.1962907944121115, 2.1929170789656904, 2.189963711692106, 2.1881798843209457, 2.185804885344782, 2.182312538878572, 2.181123727946596, 2.1778360796862777, 2.1768903055872504, 2.1751193703283738, 2.1722937474208597, 2.167194047073064, 2.1654888316388647, 2.161326815596724, 2.1609426961520155, 2.158017955703695, 2.1551565742920955, 2.1536968309550852, 2.1485287299828206, 2.147668060483619, 2.144887898056782, 2.1408796806408508, 2.136350753899059, 2.1316318623126222, 2.1302811827374297, 2.12386205542467, 2.1236903463702994, 2.1198882811640423, 2.1145947557383082, 2.114035252740024, 2.112461880953588], "accuracy": [0.09800554811954498, 0.1002509593963623, 0.09813763201236725, 0.09259014576673508, 0.10315678268671036, 0.10091137140989304, 0.11279883980751038, 0.11821424216032028, 0.11715757846832275, 0.1262712925672531, 0.12415797263383865, 0.1286487877368927, 0.1286487877368927, 0.13710209727287292, 0.13815876841545105, 0.14555540680885315, 0.14040417969226837, 0.1500462293624878, 0.14700831472873688, 0.15942411124706268, 0.16140536963939667, 0.1604807823896408, 0.16312244534492493, 0.16721701622009277, 0.1752740740776062, 0.1768590658903122, 0.19152027368545532, 0.18399155139923096, 0.18953903019428253, 0.19099193811416626, 0.20116232335567474, 0.19336943328380585, 0.19495442509651184, 0.21159687638282776, 0.20842689275741577, 0.21516312658786774, 0.21833311021327972, 0.228899747133255, 0.21621978282928467, 0.22639016807079315, 0.23061682283878326, 0.23154141008853912, 0.2359001487493515, 0.2378813922405243, 0.2440892904996872, 0.24065512418746948, 0.25478801131248474, 0.2467309534549713, 0.2685246467590332, 0.258090078830719, 0.26324132084846497, 0.261260062456131, 0.26958128809928894, 0.2685246467590332, 0.2797516882419586, 0.2715625464916229, 0.27658170461654663, 0.28305375576019287, 0.28345000743865967, 0.2806762754917145, 0.2860916554927826, 0.2930920720100403, 0.2985074520111084, 0.30260202288627625, 0.29837536811828613, 0.308149516582489, 0.3109232485294342, 0.31145158410072327, 0.3151499032974243, 0.3065645098686218, 0.3140932619571686, 0.31964072585105896, 0.3183199167251587, 0.31686699390411377, 0.3311319649219513, 0.3222824037075043, 0.32822611927986145, 0.3303394615650177, 0.33086779713630676, 0.3276977837085724, 0.3427552580833435, 0.3411702513694763, 0.34143441915512085, 0.34341567754745483, 0.3389248549938202, 0.34460440278053284, 0.34962356090545654, 0.3485668897628784, 0.3486989736557007, 0.35385021567344666, 0.354510635137558, 0.3579447865486145, 0.36666226387023926, 0.36600184440612793, 0.37366265058517456, 0.35966187715530396, 0.3641526997089386, 0.3761722445487976, 0.37326639890670776, 0.3671905994415283], "val_loss": [1.9697785377502441, 1.9685478210449219, 1.9673125403267997, 1.9660942213875907, 1.9648865972246443, 1.9636703899928503, 1.9624542508806502, 1.9612340927124023, 1.9600356646946497, 1.9588261331830705, 1.9576287950788225, 1.956423078264509, 1.9552185876028878, 1.9540038790021623, 1.9527816091264998, 1.9515790939331055, 1.9503617967878069, 1.9491594859531947, 1.9479452541896276, 1.9467236655099052, 1.945500714438302, 1.9442664555140905, 1.9430204800197057, 1.9417704854692732, 1.9405266898018974, 1.9392620495387487, 1.937990461077009, 1.936696938105992, 1.9354009628295898, 1.9341044425964355, 1.932800020490374, 1.9314816338675362, 1.93015227999006, 1.9288176809038435, 1.9274797439575195, 1.9261275700160436, 1.9247535978044783, 1.9233720643179757, 1.9219756126403809, 1.9205601555960519, 1.9191253525870187, 1.917666299002511, 1.916203430720738, 1.9147372926984514, 1.9132370948791504, 1.9117236137390137, 1.910195963723319, 1.9086257389613561, 1.9070355551583427, 1.9054277965000697, 1.9037919725690569, 1.9021450451442175, 1.9004723003932409, 1.8988049370901925, 1.8970879827226912, 1.8953591755458288, 1.8936270305088587, 1.8918474742344447, 1.890038013458252, 1.8881936073303223, 1.8863327843802316, 1.8844366073608398, 1.8825146811349052, 1.880593708583287, 1.8786354746137346, 1.8766327585492815, 1.8745852197919572, 1.8724917684282576, 1.8704019955226354, 1.8682797976902552, 1.866117204938616, 1.8639186450413294, 1.8616852079119002, 1.8594252041407995, 1.85711669921875, 1.8547960008893694, 1.8524155616760254, 1.8500157764979772, 1.8475854056222099, 1.8450894355773926, 1.842531340462821, 1.839958735874721, 1.8373398099626814, 1.8346983364650182, 1.8320236206054688, 1.8292794227600098, 1.8265257562909807, 1.8236866678510393, 1.8208226476396834, 1.8179498400006975, 1.8149856158665247, 1.8119830404009138, 1.808919974735805, 1.805830410548619, 1.8026398250034876, 1.7994418144226074, 1.7962277276175362, 1.7929082598005022, 1.7895641326904297, 1.786193779536656], "val_accuracy": [0.04633333161473274, 0.0533333346247673, 0.06066666543483734, 0.0689999982714653, 0.07699999958276749, 0.08866667002439499, 0.09700000286102295, 0.10633333027362823, 0.11666666716337204, 0.12866666913032532, 0.140666663646698, 0.156333327293396, 0.16733333468437195, 0.18166667222976685, 0.19200000166893005, 0.20733332633972168, 0.2173333317041397, 0.2253333330154419, 0.23666666448116302, 0.24766667187213898, 0.2553333342075348, 0.265666663646698, 0.2759999930858612, 0.2853333353996277, 0.2943333387374878, 0.3019999861717224, 0.31166666746139526, 0.3186666667461395, 0.3240000009536743, 0.33000001311302185, 0.3343333303928375, 0.33766666054725647, 0.34466665983200073, 0.34933334589004517, 0.3543333411216736, 0.3583333194255829, 0.3643333315849304, 0.3659999966621399, 0.36800000071525574, 0.36933332681655884, 0.3733333349227905, 0.37466666102409363, 0.3766666650772095, 0.38066667318344116, 0.38366666436195374, 0.3853333294391632, 0.3889999985694885, 0.3916666805744171, 0.39533331990242004, 0.398333340883255, 0.39899998903274536, 0.4020000100135803, 0.4036666750907898, 0.40566667914390564, 0.40966665744781494, 0.4129999876022339, 0.414000004529953, 0.4180000126361847, 0.4203333258628845, 0.42266666889190674, 0.4246666729450226, 0.4269999861717224, 0.4300000071525574, 0.4323333203792572, 0.4333333373069763, 0.43700000643730164, 0.4410000145435333, 0.4416666626930237, 0.44333332777023315, 0.4440000057220459, 0.445333331823349, 0.44566667079925537, 0.4463333189487457, 0.4480000138282776, 0.4506666660308838, 0.4533333480358124, 0.4543333351612091, 0.4560000002384186, 0.4566666781902313, 0.4593333303928375, 0.4606666564941406, 0.46166667342185974, 0.46399998664855957, 0.4646666646003723, 0.46799999475479126, 0.47066667675971985, 0.4716666638851166, 0.4729999899864197, 0.47600001096725464, 0.47733333706855774, 0.47833332419395447, 0.4803333282470703, 0.48233333230018616, 0.4846666753292084, 0.48633334040641785, 0.49000000953674316, 0.49166667461395264, 0.4946666657924652, 0.49566665291786194, 0.49666666984558105]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2774285674095154, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8861540819376437, 2.3644893485258094, 2.297555649962329, 2.7379127352103234, 2.30726513609422, 2.303651816494445, 2.3024517434573273, 2.2904389073993268, 2.290902555862737, 2.30294595749119, 2.2205404193252383, 2.282314976334588, 2.3258956408913205, 2.3043392113942702, 2.303057581316195, 2.303629589370528, 2.3032097648935013], "accuracy": [0.20221899449825287, 0.14449875056743622, 0.11557257920503616, 0.16734910011291504, 0.09760929644107819, 0.09681680053472519, 0.1080438494682312, 0.12732796370983124, 0.1368379294872284, 0.10857218503952026, 0.21159687638282776, 0.13261127471923828, 0.15612204372882843, 0.10500594228506088, 0.1002509593963623, 0.10315678268671036, 0.10038304328918457], "val_loss": [1.867478847503662, 1.974938188280378, 1.8103931290762765, 1.982372215815953, 1.9738054956708635, 1.9733882631574358, 1.9728634698050362, 1.9335477692740304, 1.9747264044625419, 1.9705848012651717, 1.9915712220328194, 1.6264361654009138, 1.9749938419886999, 1.9736787251063757, 1.9736205509730749, 1.973593030657087, 1.9736387389046806], "val_accuracy": [0.18199999630451202, 0.11100000143051147, 0.20999999344348907, 0.09799999743700027, 0.10100000351667404, 0.10433333367109299, 0.09799999743700027, 0.2536666691303253, 0.12099999934434891, 0.10199999809265137, 0.13699999451637268, 0.3166666626930237, 0.10100000351667404, 0.10433333367109299, 0.10433333367109299, 0.10166666656732559, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 9, 4, 9], [0, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.18885713815689087, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.885877823927273, 2.27911527581014, 2.3231329863113324, 2.322666672258298, 2.3052161299179352, 2.304211183105084], "accuracy": [0.20235107839107513, 0.17897239327430725, 0.14476291835308075, 0.1294412910938263, 0.09708096832036972, 0.09826971590518951], "val_loss": [1.8406427247183663, 1.9753501074654716, 1.9909584181649345, 1.9749151638575964, 1.9737098557608468, 1.9734903063092912], "val_accuracy": [0.18799999356269836, 0.10433333367109299, 0.10066666454076767, 0.09799999743700027, 0.10433333367109299, 0.12099999934434891]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.18857142329216003, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8852360355635174, 3.2173290954620577, 2.306947905011795, 2.303836852300279, 2.3034278273566713, 2.303158933995753], "accuracy": [0.20274733006954193, 0.21833311021327972, 0.09668471664190292, 0.10011887550354004, 0.09470347315073013, 0.09470347315073013], "val_loss": [1.8447948864528112, 1.979213033403669, 1.9745958873203822, 1.9737464359828405, 1.9735333578927177, 1.9735792023794991], "val_accuracy": [0.1863333284854889, 0.09799999743700027, 0.09799999743700027, 0.10433333367109299, 0.10433333367109299, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [8], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10314285755157471, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3008053684121252, 2.301846797329922, 2.302558740148014, 2.3025853004060037, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10421344637870789, 0.09774138033390045, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9727834974016463, 1.9736339705330985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09966666996479034, 0.10599999874830246, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 9, 4, 9], [2, 0, 2, 1], [86, 28, 21], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10199999809265137, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.808737225111182, 2.3178227595554888, 2.300842982934466, 2.32096540699577, 2.4225523918375065, 2.338198578384464, 2.3290532826275134, NaN, NaN], "accuracy": [0.18134988844394684, 0.09840179979801178, 0.10870426893234253, 0.1958790123462677, 0.1332716941833496, 0.09919429570436478, 0.09932637959718704, 0.10196803510189056, 0.09998679161071777], "val_loss": [1.9960535594395228, 1.9807111876351493, 1.9422153745378767, 1.8865713391985213, 1.9878229413713728, 2.0009709766932895, 2.00899144581386, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10433333367109299, 0.14766666293144226, 0.16766667366027832, 0.10400000214576721, 0.09933333098888397, 0.10333333164453506, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [8, 2, 1, 0, 9], [1, 0, 2, 1], [86, 28, 21], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 1], [7, 5, 3, 4], [1, 0, 2, 1], [37, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023640444376023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 5, 9, 4, 6, 3, 6, 5, 1, 3], [0, 0, 2, 1, 2, 0, 3], [6, 28, 79, 61], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1], [0, 1, 0], [3, 5], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 6, 2, 4], [1, 0, 2, 2, 1], [83, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [6], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023640444376023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1], [1, 9, 9, 4], [0, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 0, 0, 3, 4, 0], [42, 8, 26], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023640444376023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [6, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 9, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 0, 1, 3, 4, 0], [42, 47, 83], [0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 14, 14, 8, 6, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023640444376023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [7, 6, 9, 4, 6, 4, 4, 3, 5], [0, 2, 2, 1, 0, 2, 2], [90, 39, 21, 2], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0, 1], [0, 0, 0], [3, 9, 5], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 4, 3, 3, 0, 1, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023640444376023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 6, 2, 4, 6, 0], [1, 0, 2, 1, 2, 2], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [1, 1, 0], [3, 9], [7, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023640444376023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 9, 4], [0, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 3, 4, 0], [42], [0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [0, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.184135769682947, 21.26193601441752, 62.698830813779615, 137.17006926913822, 246.82109660948618, 411.54154033708755], "accuracy": [0.10738343745470047, 0.09998679161071777, 0.09655263274908066, 0.09417514503002167, 0.09919429570436478, 0.10289261490106583], "val_loss": [6.967203685215542, 25.68286078316825, 61.87828499930246, 121.0342276436942, 209.4530290876116, 334.1304670061384], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1], [0, 1, 0], [3, 9], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021545830246573, 2.301735888130834, 2.3033570853112284, 2.3055586804488333, 2.303505603868129, 2.3030899972680094], "accuracy": [0.09642054885625839, 0.09681680053472519, 0.08928807079792023, 0.08294808864593506, 0.08981640636920929, 0.08519349992275238], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 6, 2, 4, 8, 1, 4], [0, 0, 3, 1, 0, 2, 1], [86, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [1, 0, 0], [1, 1, 0], [3, 9], [1], [13], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021545830246573, 2.301735888130834, 2.3033570853112284, 2.3055586804488333, 2.303505603868129, 2.3030899972680094], "accuracy": [0.09642054885625839, 0.09681680053472519, 0.08928807079792023, 0.08294808864593506, 0.08981640636920929, 0.08519349992275238], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1], [7, 5, 9, 4], [1, 0, 2, 1], [46, 28, 21], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0], [0, 1, 0], [3, 9], [4, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.028857143595814705, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026964539754755, 2.303595078446531, 2.306603371364849, 2.31014233056848, 2.309394191363547, 2.3104119923419923], "accuracy": [0.09417514503002167, 0.09232597798109055, 0.08308017253875732, 0.07277770340442657, 0.07660810649394989, 0.0730418711900711], "val_loss": [1.9722402436392648, 1.9734855379377092, 1.9747485433306013, 1.9760103906903947, 1.9772690364292689, 1.9785513877868652], "val_accuracy": [0.03233333304524422, 0.028333334252238274, 0.023666666820645332, 0.019999999552965164, 0.014999999664723873, 0.014333332888782024]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 8, 4], [0, 0, 2, 1], [86, 28, 21], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 3, 0, 3, 3, 1], [42], [0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 9], [7, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.028857143595814705, "mapping_values": [1, 5, 5, 3, 2, 2, 17, 17, 9, 8, 1, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026964539754755, 2.303595078446531, 2.3066033083827913, 2.31014233056848, 2.3093940789090834, 2.3104119608509635], "accuracy": [0.09417514503002167, 0.09232597798109055, 0.08308017253875732, 0.07277770340442657, 0.07660810649394989, 0.0730418711900711], "val_loss": [1.9722402436392648, 1.9734855379377092, 1.9747485433306013, 1.9760103906903947, 1.9772690364292689, 1.9785514559064592], "val_accuracy": [0.03233333304524422, 0.028333334252238274, 0.023666666820645332, 0.019999999552965164, 0.014999999664723873, 0.014333332888782024]}}]