[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.826285719871521, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9930039036779388, 1.9159818998401537, 1.386588237226096, 1.1061650810775787, 0.967301723538546, 0.9417435312079023, 0.8421929572094953, 0.795957988980046, 0.7565832321496766, 0.7379676836545614, 0.7063229300988081, 0.6580204956126235, 0.6765522919610003, 0.6358563457466214, 0.6286001879352352, 0.6129097902874008, 0.6116328565451794, 0.5870449296660695, 0.5553358498896275, 0.5779022630163865, 0.5505564289007362, 0.5638539696004271, 0.5397900896002478, 0.5355232725006761, 0.5221802209189161, 0.5251487341806983, 0.5108428995024495, 0.4962191020162303, 0.4845964931667032, 0.4874376543343516, 0.47560753698015823, 0.4615358933875306, 0.47253479913178215, 0.44380225673595425, 0.4562705388560098, 0.4488480137189964, 0.4569566633408143, 0.4396483123404806, 0.4389622007040158, 0.4449076332302456, 0.41596601810343214, 0.4129494616360539, 0.40750159033301203, 0.4159269569658915, 0.40310407803987924, 0.4149002246160108, 0.3807630318700047, 0.3855668356736354], "accuracy": [0.33258485794067383, 0.38343679904937744, 0.5077268481254578, 0.5827499628067017, 0.6300356388092041, 0.6485272645950317, 0.6853784322738647, 0.6936996579170227, 0.7080966830253601, 0.7205125093460083, 0.7238145470619202, 0.7405890822410583, 0.7367587089538574, 0.7481178045272827, 0.7536653280258179, 0.7675340175628662, 0.7629110813140869, 0.772288978099823, 0.7890635132789612, 0.7792893648147583, 0.7857614755630493, 0.7837802171707153, 0.7910447716712952, 0.796328067779541, 0.7984414100646973, 0.8009510040283203, 0.8047813773155212, 0.8119139075279236, 0.8136309385299683, 0.8101968169212341, 0.8236692547798157, 0.8269713521003723, 0.8170651197433472, 0.8393871188163757, 0.8285563588142395, 0.8285563588142395, 0.8255184292793274, 0.8286884427070618, 0.8300092220306396, 0.8276317715644836, 0.8338396549224854, 0.8471800088882446, 0.8444063067436218, 0.8387266993522644, 0.8442742228507996, 0.844010055065155, 0.8543124794960022, 0.8540483713150024], "val_loss": [1.848522390638079, 1.1386689799172538, 0.9309816360473633, 0.8432571377073016, 0.6985470567430768, 0.6520664010729108, 0.6291158199310303, 0.6196900606155396, 0.5665841783796038, 0.5404650313513619, 0.5539012466158185, 0.621914301599775, 0.5481427737644741, 0.5058203084128243, 0.493483304977417, 0.49010094574519564, 0.4674624374934605, 0.4550973858152117, 0.45172698157174246, 0.45050740242004395, 0.4721465451376779, 0.4318022472517831, 0.4378714731761387, 0.42150451455797466, 0.42757439613342285, 0.41147606713431223, 0.4068382552691868, 0.40397664478846956, 0.43469424758638653, 0.41090671505246845, 0.3872096283095224, 0.4056188634463719, 0.3842930368014744, 0.37489310332707, 0.3954886794090271, 0.38604307174682617, 0.38742464780807495, 0.3636143207550049, 0.41468100036893574, 0.40832386698041645, 0.36394355978284565, 0.3705598201070513, 0.3688602702958243, 0.3708992004394531, 0.38239567620413645, 0.36361680712018696, 0.3806508779525757, 0.3829591529709952], "val_accuracy": [0.2566666603088379, 0.5266666412353516, 0.578000009059906, 0.6453333497047424, 0.6673333048820496, 0.7146666646003723, 0.7036666870117188, 0.7126666903495789, 0.7419999837875366, 0.7536666393280029, 0.7289999723434448, 0.6673333048820496, 0.7353333234786987, 0.7613333463668823, 0.7730000019073486, 0.7753333449363708, 0.7903333306312561, 0.784333348274231, 0.7916666865348816, 0.7953333258628845, 0.7799999713897705, 0.8103333115577698, 0.8040000200271606, 0.8103333115577698, 0.8146666884422302, 0.8190000057220459, 0.8180000185966492, 0.8213333487510681, 0.7886666655540466, 0.8263333439826965, 0.8306666612625122, 0.8196666836738586, 0.8349999785423279, 0.8336666822433472, 0.8203333616256714, 0.8326666951179504, 0.8299999833106995, 0.8453333377838135, 0.8149999976158142, 0.8043333292007446, 0.8500000238418579, 0.843666672706604, 0.8513333201408386, 0.8473333120346069, 0.8349999785423279, 0.8396666646003723, 0.8336666822433472, 0.8289999961853027]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8111428618431091, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.993046655662465, 1.9111708522929398, 1.4399262617576265, 1.124209137821651, 1.0394541932575738, 0.9057345270575187, 0.8433482711892386, 0.7486013774433471, 0.7484700764568648, 0.744934879494318, 0.7097811088932346, 0.6740073504512178, 0.7064916037092939, 0.6348890271074721, 0.6241213552404814, 0.6206055104362493, 0.6152999007139759, 0.5966305784057427, 0.559983947147641, 0.5779873755991877, 0.5605115299573774, 0.5578101692088229, 0.544308006251729, 0.5329614471781444, 0.5297379303271382, 0.5109746987636079, 0.5074255670523048, 0.5115538693933974, 0.502613629458398, 0.48661965423445297, 0.48381921626935465, 0.47712143460096007], "accuracy": [0.3327169418334961, 0.38462555408477783, 0.48527276515960693, 0.5732399821281433, 0.6116761565208435, 0.6524897813796997, 0.6733588576316833, 0.7067758440971375, 0.7194558382034302, 0.7275128960609436, 0.7289658188819885, 0.7325320243835449, 0.7260599732398987, 0.7523444890975952, 0.7553823590278625, 0.7646281719207764, 0.7630431652069092, 0.7648923397064209, 0.7881389260292053, 0.7803460359573364, 0.7783648371696472, 0.7857614755630493, 0.7887993454933167, 0.802800178527832, 0.7947431206703186, 0.8050455451011658, 0.8083476424217224, 0.807158887386322, 0.802271842956543, 0.8119139075279236, 0.816008448600769, 0.8149517774581909], "val_loss": [1.8535329954964774, 1.1696578093937464, 0.9974617617470878, 0.7900077615465436, 0.7765214102608817, 0.6769915478570121, 0.6169403450829642, 0.5571275097983224, 0.6297069958278111, 0.5931040559496198, 0.5301610571997506, 0.6925476448876517, 0.5518251657485962, 0.5043916361672538, 0.4951589618410383, 0.4953728573662894, 0.4811603171484811, 0.4596062387738909, 0.46021957056862967, 0.45729460035051617, 0.4681908743722098, 0.4327003700392587, 0.4791513170514788, 0.4609661783490862, 0.4262647203036717, 0.41076243775231497, 0.4048975961548941, 0.4279290097100394, 0.44483104773930143, 0.40973121779305594, 0.40435653924942017, 0.4095217670713152], "val_accuracy": [0.25466665625572205, 0.5096666812896729, 0.5296666622161865, 0.6603333353996277, 0.6150000095367432, 0.684333324432373, 0.699999988079071, 0.7310000061988831, 0.7263333201408386, 0.7023333311080933, 0.7409999966621399, 0.6676666736602783, 0.7403333187103271, 0.7596666812896729, 0.7666666507720947, 0.7710000276565552, 0.7760000228881836, 0.7826666831970215, 0.7846666574478149, 0.7860000133514404, 0.7860000133514404, 0.8026666641235352, 0.7770000100135803, 0.7889999747276306, 0.8056666851043701, 0.8306666612625122, 0.8309999704360962, 0.8040000200271606, 0.7826666831970215, 0.8259999752044678, 0.8233333230018616, 0.8240000009536743]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 2, 9, 4, 9, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 1, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 12, 48, 68, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.803428590297699, "mapping_values": [1, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.993002865938321, 1.9174224646997458, 1.3738345175749276, 1.1135594563288318, 0.9557147800268955, 0.9214094072174891, 0.8425300162403165, 0.7515757018391482, 0.7856466909677376, 0.7355410061366271, 0.7098172452739201, 0.6664340164069061, 0.6772719941370995, 0.6328208115768156, 0.6180956323920554, 0.6205726201980499, 0.6160108571149544, 0.5806846953165797, 0.5591208411403037, 0.5608191926166634, 0.5628682722851365, 0.5571810041499285, 0.5344196191443082, 0.5321561138722182, 0.5267433394073826, 0.5026962615322238, 0.5107348190755608, 0.5103623149078819, 0.48941048521958386, 0.48756159788676384, 0.4732559215926444, 0.4620293968342015, 0.453923484479526, 0.47443961888539904, 0.48286209501578997, 0.44388527029603936], "accuracy": [0.33258485794067383, 0.3825122117996216, 0.5122177004814148, 0.579447865486145, 0.6391493678092957, 0.6462818384170532, 0.68101966381073, 0.7100779414176941, 0.6975300312042236, 0.7176066637039185, 0.7210407853126526, 0.7416457533836365, 0.7342491149902344, 0.7544577717781067, 0.7585523724555969, 0.7633073329925537, 0.7614582180976868, 0.7726852297782898, 0.7897239327430725, 0.7889314293861389, 0.778761088848114, 0.7928939461708069, 0.7923656105995178, 0.7989697456359863, 0.7917051911354065, 0.8055738806724548, 0.8075551390647888, 0.8063663840293884, 0.8113855719566345, 0.809140145778656, 0.8248580098152161, 0.8281601071357727, 0.8322546482086182, 0.8156121969223022, 0.8164047002792358, 0.8302733898162842], "val_loss": [1.8488172803606306, 1.1392654010227747, 0.9362989493778774, 0.7796206133706229, 0.6923048155648368, 0.6500488349369594, 0.6270185027803693, 0.6274490186146328, 0.5769412517547607, 0.5429596900939941, 0.5546849795750209, 0.612760169165475, 0.5582338741847447, 0.4951329060963222, 0.49632576533726286, 0.4899437427520752, 0.46159342357090544, 0.46048762117113384, 0.4635486091886248, 0.4641729933874948, 0.4618654251098633, 0.4261828064918518, 0.46208012104034424, 0.45361323016030447, 0.41635118212018696, 0.4157184362411499, 0.4061516353062221, 0.41528829506465365, 0.44449410268238615, 0.4122775197029114, 0.3892229880605425, 0.40596566029957365, 0.39590087958744596, 0.41074356862476896, 0.4037107399531773, 0.4008250491959708], "val_accuracy": [0.2566666603088379, 0.5289999842643738, 0.5640000104904175, 0.6673333048820496, 0.6819999814033508, 0.718666672706604, 0.7039999961853027, 0.7110000252723694, 0.731333315372467, 0.7473333477973938, 0.7289999723434448, 0.6993333101272583, 0.7360000014305115, 0.7680000066757202, 0.7643333077430725, 0.7749999761581421, 0.796999990940094, 0.7829999923706055, 0.7850000262260437, 0.7883333563804626, 0.7873333096504211, 0.8136666417121887, 0.7829999923706055, 0.7946666479110718, 0.8096666932106018, 0.82833331823349, 0.8246666789054871, 0.815666675567627, 0.7820000052452087, 0.8270000219345093, 0.8339999914169312, 0.828000009059906, 0.824999988079071, 0.8240000009536743, 0.8206666707992554, 0.815666675567627]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 1, 6, 4, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8031428456306458, "mapping_values": [1, 18, 18, 11, 7, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9929879673593915, 1.9190918663788497, 1.3808569354057438, 1.1336513737079064, 0.9462117628965553, 0.8755888295935728, 0.8484152280391561, 0.8099508469666252, 0.7722745638765348, 0.7387236043871859, 0.6996116879719785, 0.6693089495182604, 0.6708881101273212, 0.6324455113757981, 0.6230505710784329, 0.6161226670755576, 0.61972068005927, 0.578364167553858, 0.5581886210083852, 0.566076987612564, 0.5567195404396239, 0.5608411561646056, 0.5465333164171252, 0.5323770265647874, 0.5194633234414788, 0.5264772545345046, 0.5066290398346923, 0.5075989284921301, 0.4750285696958145, 0.4828664416319596, 0.474091711116426, 0.4697867303775711, 0.4585504283829136, 0.4736188806956549, 0.4733144850455979, 0.4507837464324141, 0.44214452308528945, 0.4417920396304669, 0.44410010844787917, 0.4441418205041612, 0.41612687694744555, 0.4118904697463623, 0.4146306961755144, 0.40938524242720314, 0.3998270820294389, 0.4157197349705417, 0.3798723506566918, 0.421015849588664, 0.3822552379623711, 0.3750277757684017, 0.37566956027844295, 0.3950194072698196, 0.374140755296651, 0.3677200801998255], "accuracy": [0.33284902572631836, 0.3835688829421997, 0.5001981258392334, 0.5810328722000122, 0.6448289752006531, 0.6601505875587463, 0.6796988248825073, 0.6947563290596008, 0.7009642124176025, 0.7173424959182739, 0.7285695672035217, 0.7345132827758789, 0.7327961921691895, 0.7528728246688843, 0.7540615797042847, 0.7660810947418213, 0.7594769597053528, 0.774798572063446, 0.7917051911354065, 0.7852331399917603, 0.7825914621353149, 0.791969358921051, 0.7848368883132935, 0.7991018295288086, 0.800818920135498, 0.7989697456359863, 0.8059701323509216, 0.8080834746360779, 0.8189142942428589, 0.8171972036361694, 0.8220842480659485, 0.8253863453865051, 0.8296129703521729, 0.816008448600769, 0.826310932636261, 0.8323867321014404, 0.82683926820755, 0.8300092220306396, 0.8329150676727295, 0.8294808864593506, 0.8348963260650635, 0.8457271456718445, 0.837537944316864, 0.8426892161369324, 0.8496896028518677, 0.8454629778862, 0.8551049828529358, 0.8339717388153076, 0.8557654023170471, 0.8570862412452698, 0.8553691506385803, 0.8487650156021118, 0.8588033318519592, 0.8610487580299377], "val_loss": [1.859825951712472, 1.1786916937146867, 1.0076438699449812, 0.7808641706194196, 0.6992034060614449, 0.6104374783379691, 0.6469782420567104, 0.6440051283155169, 0.5791372912270683, 0.538129278591701, 0.5594011715480259, 0.6249440738133022, 0.553086348942348, 0.5022202048982892, 0.49847374643598286, 0.4903996161052159, 0.46073855672563824, 0.45882351057870047, 0.4632712943213327, 0.45831286907196045, 0.46483373641967773, 0.43754251514162334, 0.4328707882336208, 0.41788612944739206, 0.42641364676611765, 0.40928992203303743, 0.40919688769749235, 0.4061584642955235, 0.41071731703622, 0.4076563460486276, 0.39765613419669016, 0.40635531289236887, 0.4060883011136736, 0.4048066054071699, 0.44273705993379864, 0.37863560233797344, 0.40086544411523, 0.3631191679409572, 0.4009207487106323, 0.40642177207129343, 0.3709636926651001, 0.3692597576550075, 0.3673516171319144, 0.38043913670948576, 0.37529754638671875, 0.3595101237297058, 0.3802614041737148, 0.34480991533824373, 0.33768763712474276, 0.3842543193272182, 0.3616230147225516, 0.3519311547279358, 0.34886114086423603, 0.36298837832042147], "val_accuracy": [0.2540000081062317, 0.5086666941642761, 0.518666684627533, 0.6753333210945129, 0.6923333406448364, 0.7316666841506958, 0.7166666388511658, 0.6923333406448364, 0.7296666502952576, 0.7509999871253967, 0.7273333072662354, 0.6759999990463257, 0.7360000014305115, 0.768666684627533, 0.7763333320617676, 0.7776666879653931, 0.7986666560173035, 0.7850000262260437, 0.7839999794960022, 0.7879999876022339, 0.7893333435058594, 0.8133333325386047, 0.8086666464805603, 0.812666654586792, 0.8186666369438171, 0.8226666450500488, 0.8190000057220459, 0.8203333616256714, 0.8143333196640015, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8199999928474426, 0.8293333053588867, 0.8100000023841858, 0.8339999914169312, 0.8180000185966492, 0.8463333249092102, 0.8216666579246521, 0.8046666383743286, 0.8423333168029785, 0.8423333168029785, 0.846666693687439, 0.8349999785423279, 0.8446666598320007, 0.8416666388511658, 0.8303333520889282, 0.8539999723434448, 0.862333357334137, 0.8326666951179504, 0.8506666421890259, 0.8516666889190674, 0.8553333282470703, 0.8403333425521851]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 2, 5, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [19], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6934285759925842, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3003042791623796, 2.2972013124338213, 2.291790391318377, 2.2873942328954273, 2.2838803999742985, 2.280048329989829, 2.2742469042142024, 2.26974081533334, 2.266609392870277, 2.261604744130594, 2.2568670236486503, 2.2508855274151567, 2.247429390782457, 2.2413496079304434, 2.235752131944918, 2.230691029710257, 2.2251111924168048, 2.2180615562599697, 2.21041129602496, 2.2053560062469413, 2.1984304829737167, 2.1895462972550046, 2.1808720813404063, 2.1772018368564434, 2.1666386591019866, 2.157094405579482, 2.1478315564572394, 2.138529044541669, 2.1218436979236635, 2.1116367210848708, 2.100156829719609, 2.0890096119130055, 2.0732190175976624, 2.063943489242491, 2.0444873971489397, 2.0325741248281326, 2.018226140998122, 1.9975359397651875, 1.9859235824421964, 1.963718385728532, 1.9463344694774196, 1.92945940306221, 1.9137827021303178, 1.8930028373885541, 1.8674458158235068, 1.8505687004602533, 1.827419630760971, 1.8088169275194883, 1.781315760763015, 1.7626636298482823, 1.7462465318123803, 1.7226560164152938, 1.7043895478639715, 1.6792324480835976, 1.6595928642523365, 1.6373757588597273, 1.6123906719591703, 1.5913862545161814, 1.5767180614814058, 1.5523575551915147, 1.5360316720227398, 1.520728731719085, 1.502344876421504, 1.4798013971718216, 1.4691662288943397, 1.4462645301383013, 1.435615035253446, 1.4238423027965166, 1.405538512431966, 1.3938059264548215, 1.3853242558384962, 1.3627155899702361, 1.352115277915882, 1.3391981621806364, 1.3383516104088138, 1.3146747522948676, 1.2949483051528043, 1.3033067880762, 1.2830167325448996, 1.2751803509925477, 1.2614004090792468, 1.2511805190764178, 1.2455283635642944, 1.2469497092128226, 1.2300373717321775, 1.2195675052026353, 1.2117215534164103, 1.1945866929100741, 1.1974891349860248, 1.1911695411948164, 1.17931288972806, 1.168233591567697, 1.1608498506951626, 1.15119298687543, 1.145200638061879, 1.1359808392071877, 1.1416148764661054, 1.1237097825702973, 1.1237063198954973, 1.110091452632582], "accuracy": [0.09496764093637466, 0.09826971590518951, 0.11636507511138916, 0.12732796370983124, 0.1410645842552185, 0.15255580842494965, 0.16549994051456451, 0.17884030938148499, 0.19231277704238892, 0.1974640041589737, 0.21172896027565002, 0.21978603303432465, 0.22705058753490448, 0.24686303734779358, 0.25478801131248474, 0.2572975754737854, 0.2748646140098572, 0.28701624274253845, 0.30022454261779785, 0.2973187267780304, 0.3097345232963562, 0.31937655806541443, 0.3280940353870392, 0.3276977837085724, 0.3358869254589081, 0.35120856761932373, 0.34645357728004456, 0.35068023204803467, 0.3646810054779053, 0.3630960285663605, 0.38145554065704346, 0.3847576379776001, 0.39228636026382446, 0.3941355049610138, 0.4061550796031952, 0.3933430314064026, 0.39770177006721497, 0.4169858694076538, 0.4135517179965973, 0.43045833706855774, 0.4225333631038666, 0.4235900044441223, 0.4361378848552704, 0.43349623680114746, 0.4469687044620514, 0.4485536813735962, 0.4473649561405182, 0.45344075560569763, 0.46612071990966797, 0.46664905548095703, 0.4687623679637909, 0.472989022731781, 0.4690265357494354, 0.47351735830307007, 0.48487651348114014, 0.4888390004634857, 0.4924052357673645, 0.49993395805358887, 0.49953770637512207, 0.5042926669120789, 0.5085193514823914, 0.511821448802948, 0.5144630670547485, 0.5248976349830627, 0.522520124912262, 0.5259543061256409, 0.5304450988769531, 0.5278034806251526, 0.5345396995544434, 0.5395588278770447, 0.5399550795555115, 0.5449742674827576, 0.5473517179489136, 0.5502575635910034, 0.5476158857345581, 0.5587108731269836, 0.5601637959480286, 0.559371292591095, 0.5653150081634521, 0.5635979175567627, 0.5692775249481201, 0.5736362338066101, 0.573107898235321, 0.5700700283050537, 0.5797120332717896, 0.5801082849502563, 0.5744287371635437, 0.5827499628067017, 0.5819574594497681, 0.587372899055481, 0.5851274728775024, 0.59661865234375, 0.5934486985206604, 0.5993924140930176, 0.6001849174499512, 0.6046757102012634, 0.5975432395935059, 0.6044115424156189, 0.6075815558433533, 0.6172236204147339], "val_loss": [1.9668792997087752, 1.9628120831080846, 1.9587806974138533, 1.9547536032540458, 1.9507322311401367, 1.9466776847839355, 1.9425146920340401, 1.9383160046168737, 1.9340389115469796, 1.929652418409075, 1.9251440593174525, 1.9203948293413435, 1.9155536379132951, 1.9104488236563546, 1.9051782744271415, 1.8997182164873396, 1.8939785276140486, 1.8879494667053223, 1.8816205433436803, 1.8750527926853724, 1.8680315017700195, 1.8606089864458357, 1.8527890614100866, 1.8446856226239885, 1.83613954271589, 1.827033179146903, 1.8174255916050501, 1.8074289049421037, 1.7966998645237513, 1.7854094505310059, 1.7736059597560339, 1.7612320355006628, 1.7481485775538854, 1.7345961843218123, 1.7201803752354212, 1.7053672926766532, 1.689978735787528, 1.6737911701202393, 1.657076256615775, 1.6394711221967424, 1.6213699408939906, 1.602846963065011, 1.5839187077113561, 1.564448424748012, 1.5442723546709334, 1.5236958435603551, 1.5028233528137207, 1.4816367966788155, 1.459980113165719, 1.438504593712943, 1.4170970576150077, 1.3954064505440849, 1.3740037168775285, 1.352318627493722, 1.3308100359780448, 1.3094040666307722, 1.288208109991891, 1.2672169549124581, 1.2468465736934118, 1.2267234666006905, 1.2072920458657401, 1.1882622582571847, 1.169677700315203, 1.1514856474740165, 1.133943693978446, 1.1170333794185094, 1.1007479599543981, 1.0853375366755895, 1.0702276911054338, 1.0556514603751046, 1.041651657649449, 1.027824980872018, 1.0147390365600586, 1.002058710370745, 0.9901150975908551, 0.9786355495452881, 0.9670294352940151, 0.9565042427607945, 0.9459508487156459, 0.9358996663774762, 0.9261619363512311, 0.9168890544346401, 0.9081546579088483, 0.8997714519500732, 0.8915890966142926, 0.8834879398345947, 0.8756744861602783, 0.8679602146148682, 0.860675403050014, 0.853734953062875, 0.8470183440617153, 0.8401368856430054, 0.8336165121623448, 0.8275562865393502, 0.8214126484734672, 0.8154671703066144, 0.8098552227020264, 0.8041363103049142, 0.7990369115556989, 0.7938359294618879], "val_accuracy": [0.06266666948795319, 0.09566666930913925, 0.12966667115688324, 0.1770000010728836, 0.2163333296775818, 0.2513333261013031, 0.28733333945274353, 0.3140000104904175, 0.3330000042915344, 0.35100001096725464, 0.36533331871032715, 0.3733333349227905, 0.3803333342075348, 0.38866665959358215, 0.39633333683013916, 0.40666666626930237, 0.4156666696071625, 0.4233333468437195, 0.42899999022483826, 0.43833333253860474, 0.4436666667461395, 0.44699999690055847, 0.4533333480358124, 0.46133333444595337, 0.46399998664855957, 0.47066667675971985, 0.47733333706855774, 0.4816666543483734, 0.49000000953674316, 0.49799999594688416, 0.503333330154419, 0.5106666684150696, 0.5176666378974915, 0.5263333320617676, 0.5296666622161865, 0.5360000133514404, 0.5403333306312561, 0.5433333516120911, 0.5503333210945129, 0.5529999732971191, 0.5559999942779541, 0.5586666464805603, 0.5616666674613953, 0.565666675567627, 0.5709999799728394, 0.5766666531562805, 0.5799999833106995, 0.5836666822433472, 0.5853333473205566, 0.5883333086967468, 0.5903333425521851, 0.5920000076293945, 0.593666672706604, 0.593999981880188, 0.5946666598320007, 0.5986666679382324, 0.6010000109672546, 0.6046666502952576, 0.609000027179718, 0.609666645526886, 0.6129999756813049, 0.6173333525657654, 0.6230000257492065, 0.6320000290870667, 0.6366666555404663, 0.6420000195503235, 0.6460000276565552, 0.6520000100135803, 0.6536666750907898, 0.6576666831970215, 0.6603333353996277, 0.6633333563804626, 0.6660000085830688, 0.6679999828338623, 0.6710000038146973, 0.6736666560173035, 0.6759999990463257, 0.6763333082199097, 0.6769999861717224, 0.6773333549499512, 0.6806666851043701, 0.6830000281333923, 0.6823333501815796, 0.6836666464805603, 0.687333345413208, 0.6890000104904175, 0.6896666884422302, 0.6916666626930237, 0.6926666498184204, 0.6923333406448364, 0.6946666836738586, 0.6956666707992554, 0.6976666450500488, 0.6990000009536743, 0.6996666789054871, 0.6996666789054871, 0.7006666660308838, 0.7009999752044678, 0.7016666531562805, 0.7020000219345093]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 5, 6, 6, 1, 4, 4, 9, 2, 9, 1, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [81, 20, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.40142858028411865, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.6524548738104494, 2.28540262970013, 2.219820993923791, 2.302020591184873, 2.7459279614165, 2.280164761424238, 2.2404439274850003, 2.2971334790887457, 2.4509030747265625, 2.30289696094587, 2.1954670079616334], "accuracy": [0.21463479101657867, 0.136045441031456, 0.1810857206583023, 0.10738343745470047, 0.13697001338005066, 0.16853784024715424, 0.1364416927099228, 0.12996962666511536, 0.18478403985500336, 0.09734513610601425, 0.19984149932861328], "val_loss": [1.975454671042306, 1.760568686894008, 1.9740598542349679, 1.9577223232814245, 1.9761759894234794, 1.5842208181108748, 1.9720219203404017, 1.949777058192662, 1.976316247667585, 1.9586937086922782, 1.8872266496930803], "val_accuracy": [0.1003333330154419, 0.28966665267944336, 0.10066666454076767, 0.13433332741260529, 0.10100000351667404, 0.4116666615009308, 0.15166667103767395, 0.25566667318344116, 0.10433333367109299, 0.09666666388511658, 0.26633334159851074]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 6, 1, 1, 6, 9, 4, 8, 9, 6, 8, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 76, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.25542858242988586, "mapping_values": [1, 18, 18, 11, 7, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.6584785521195755, 2.286536331646604, 2.1651993622916517, 2.297821561910095, 2.3043262244310077, 2.3017576676727587, 2.2897489616316955], "accuracy": [0.21371020376682281, 0.1418570876121521, 0.22480517625808716, 0.13974376022815704, 0.09470347315073013, 0.09734513610601425, 0.13670584559440613], "val_loss": [1.9754155703953333, 1.8242219516209193, 1.8264267785208566, 1.9755099841526575, 1.973320620400565, 1.9605658394949776, 1.97416319165911], "val_accuracy": [0.10100000351667404, 0.2613333463668823, 0.19966666400432587, 0.10066666454076767, 0.1003333330154419, 0.22566667199134827, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 4, 6, 8, 1, 4, 6, 8, 2, 9, 1, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [37, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0], [9, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.23828572034835815, "mapping_values": [1, 23, 23, 14, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, alpha)), grad)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.654600555335274, 2.282756043525971, 2.1661879064353102, 2.2697075323705205, 2.138679586176733, 2.390339270117985, 2.308752397299915, 2.304053665419863, 2.3029794767626903], "accuracy": [0.21476687490940094, 0.1430458277463913, 0.22123894095420837, 0.1640470176935196, 0.2631092369556427, 0.15797120332717896, 0.09959053993225098, 0.09919429570436478, 0.10130762308835983], "val_loss": [1.9758007185799735, 1.8413755553109306, 1.974839687347412, 1.7373687880379813, 1.982560089656285, 1.9855927058628626, 1.9747590337480818, 1.973935604095459, 1.973637512751988], "val_accuracy": [0.09966666996479034, 0.2593333423137665, 0.10133333504199982, 0.2980000078678131, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 6, 1, 1, 2, 9, 4, 9, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 0, 2, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 33, 48, 68, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.1882857084274292, "mapping_values": [1, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.653813348800877, 2.2819910583211414, 2.319542283379501, 2.303475433762016, 2.2952286583037975, 2.3862337323857523, 2.2558662567975074], "accuracy": [0.21397437155246735, 0.14661207795143127, 0.14780081808567047, 0.10302469879388809, 0.12257297337055206, 0.15849953889846802, 0.15295206010341644], "val_loss": [1.9753314426967077, 1.8190385954720634, 1.974090508052281, 1.9731476647513253, 1.8593460491725378, 1.9678724152701241, 1.9749082156590052], "val_accuracy": [0.10100000351667404, 0.2136666625738144, 0.10066666454076767, 0.10066666454076767, 0.19900000095367432, 0.16200000047683716, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 6, 9, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 1, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [69, 22, 62, 86, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [0, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 4, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.14485713839530945, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.438119260783933, 3.0145078716875147, 2.3486767273380016, 2.267879962354304, 2.266707345085562, 2.3924303914829568, 2.3005614573882163, 2.3431052968266175, 2.338171945067287, 2.3494459951338027], "accuracy": [0.21542729437351227, 0.14489498734474182, 0.10236428678035736, 0.13630960881710052, 0.17395325005054474, 0.13393211364746094, 0.13195087015628815, 0.10236428678035736, 0.10051512718200684, 0.09998679161071777], "val_loss": [1.7805630820138114, 1.9839418275015694, 1.9770985330854143, 1.8886609077453613, 1.944404465811593, 1.8996165139334542, 2.003526415143694, 2.016953808920724, 2.003349781036377, 1.9949442999703544], "val_accuracy": [0.22300000488758087, 0.0989999994635582, 0.09833333641290665, 0.1720000058412552, 0.2293333262205124, 0.15566666424274445, 0.10433333367109299, 0.0989999994635582, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 4, 6, 1, 1, 2, 9, 4, 9, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 0, 0, 1, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [5, 22, 12, 48, 68, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0], [4, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 11, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 2, 5, 9, 4, 4, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 90, 88, 75, 33, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [19], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 3, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302385048953817, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 1, 2, 9, 4, 9, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [79], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 4, 15, 15, 8, 7, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 2, 2, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 50, 88, 75, 33, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [21], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 4, 1, 1, 0, 1, 0, 9, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 4, 6, 1, 1, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [36, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 4, 6, 8, 1, 4, 6, 8, 2, 9, 1, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 2, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [37, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [9, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(alpha, tf.math.add(alpha, grad)))))), tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302385048953817, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 6, 1, 5, 6, 9, 4, 8, 9, 6, 2, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [13, 50, 88, 75, 33, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [4, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [19], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 23, 23, 14, 9, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.sqrt(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302126255742059, 2.303412561954493, 2.3022670499904674, 2.3021514805599903, 2.3028065283788806, 2.3034345962903315], "accuracy": [0.08955223858356476, 0.08691058307886124, 0.09126931428909302, 0.09113723784685135, 0.08875974267721176, 0.08677849918603897], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 2, 5, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 1, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [90, 50, 88, 75, 33, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [19], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302126255742059, 2.303412561954493, 2.3022670499904674, 2.3021514805599903, 2.3028065283788806, 2.3034345962903315], "accuracy": [0.08955223858356476, 0.08691058307886124, 0.09126931428909302, 0.09113723784685135, 0.08875974267721176, 0.08677849918603897], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 6, 1, 1, 2, 9, 4, 9, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [98, 22, 62, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 3, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 15, 15, 10, 5, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302126255742059, 2.303412561954493, 2.3022670499904674, 2.3021514805599903, 2.3028065283788806, 2.3034345962903315], "accuracy": [0.08955223858356476, 0.08691058307886124, 0.09126931428909302, 0.09113723784685135, 0.08875974267721176, 0.08677849918603897], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 6, 2, 2, 9, 9, 4, 8, 9, 6, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [85, 22, 12, 48, 68, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302126255742059, 2.303412561954493, 2.3022670499904674, 2.3021514805599903, 2.3028065283788806, 2.3034345962903315], "accuracy": [0.08955223858356476, 0.08691058307886124, 0.09126931428909302, 0.09113723784685135, 0.08875974267721176, 0.08677849918603897], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]