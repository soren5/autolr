[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7708571553230286, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29452170860876, 2.2716480206819716, 2.2486599225724584, 2.222503032068362, 2.1873586151688373, 2.1424848673098342, 2.092578403449975, 2.0150319351858355, 1.9266514664297139, 1.8326406105083324, 1.7295115105842225, 1.6233041872516552, 1.533731758885805, 1.442165541500857, 1.36734354658181, 1.315883294922911, 1.2593007675802483, 1.216785847802188, 1.172779048044983, 1.1347386933683075, 1.101839112882774, 1.0849027023528308, 1.048099229521897, 1.0402179568151773, 1.0214683939327007, 1.0006424258838886, 0.9791631944395879, 0.9707969208875935, 0.9514862864701786, 0.9453820779953084, 0.9310111685861072, 0.9183610302582236, 0.9053717828886526, 0.8883121389801697, 0.885572612710743, 0.8731078088496104, 0.87064473131597, 0.8620063084196248, 0.8542024012664369, 0.8490520789245053, 0.8383798863767806, 0.8403268686658466, 0.8219292671720444, 0.8142792306650489, 0.8137833603605256, 0.801177587467902, 0.806922490334451, 0.8033577195562943, 0.7970646529181318, 0.7917068887222964, 0.7870418937088807, 0.786133878345361, 0.7803551430369035, 0.7757378792671432, 0.7667826338057442, 0.7736221901760472, 0.7743145973533451, 0.7665271404916584, 0.7527985220981422, 0.7500219295494404, 0.7378945798449402, 0.7442361329446112, 0.7466608901159906, 0.7363819516078277, 0.743741284476736, 0.7317058735630059, 0.7263364891775406, 0.729898456293657, 0.7196690152979734, 0.7275327818819781, 0.7113411129977426, 0.7104495912967436, 0.712929072562399, 0.710524925623808, 0.7049188549964813, 0.7068794518807592, 0.7036672556294804, 0.6997331522868656], "accuracy": [0.11081759631633759, 0.17117950320243835, 0.23061682283878326, 0.26997753977775574, 0.31924447417259216, 0.35385021567344666, 0.37181350588798523, 0.40906089544296265, 0.4333641529083252, 0.4484215974807739, 0.46612071990966797, 0.48566898703575134, 0.5036323070526123, 0.5263505578041077, 0.5503896474838257, 0.5538238286972046, 0.5658433437347412, 0.5812970399856567, 0.5888257622718811, 0.6056002974510193, 0.6141856908798218, 0.6188086271286011, 0.6255448460578918, 0.6263373494148254, 0.6366398334503174, 0.6497160196304321, 0.6513010263442993, 0.6539427042007446, 0.6602826714515686, 0.6573768258094788, 0.6687359809875488, 0.6701889038085938, 0.6763967871665955, 0.6841896772384644, 0.6814159154891968, 0.6851142644882202, 0.6890767216682434, 0.6863030195236206, 0.6966054439544678, 0.6929071545600891, 0.6979262828826904, 0.6923788189888, 0.7046625018119812, 0.7073041796684265, 0.7054550051689148, 0.7073041796684265, 0.7049266695976257, 0.713908314704895, 0.7141724824905396, 0.7120591998100281, 0.715889573097229, 0.7150970697402954, 0.7189275026321411, 0.7145687341690063, 0.7156254053115845, 0.718399167060852, 0.7243428826332092, 0.7205125093460083, 0.7260599732398987, 0.7320036888122559, 0.7334566116333008, 0.7276449799537659, 0.7269845604896545, 0.7308149337768555, 0.7284374833106995, 0.7323999404907227, 0.7345132827758789, 0.7346453666687012, 0.739928662776947, 0.7400607466697693, 0.7357020378112793, 0.7416457533836365, 0.7388719916343689, 0.7420420050621033, 0.737947404384613, 0.7386078238487244, 0.7415136694908142, 0.7407211661338806], "val_loss": [1.9508511679513114, 1.9299608639308385, 1.9060203007289342, 1.8769772393362862, 1.8396876880100794, 1.7910100391932897, 1.73006956917899, 1.6524279117584229, 1.5601073333195277, 1.457977294921875, 1.3509274891444616, 1.245955501283918, 1.1523094858442033, 1.07040160042899, 1.0028246470860072, 0.9465722697121757, 0.9005926336560931, 0.8619347299848285, 0.8289331878934588, 0.8012175389698574, 0.7766006503786359, 0.7567247152328491, 0.7384362731661115, 0.723622236933027, 0.7104539360318866, 0.6972337790897915, 0.6858805247715541, 0.6749362094061715, 0.6657246691840035, 0.6586019481931414, 0.6492288623537336, 0.6432063749858311, 0.6348460061209542, 0.6273406744003296, 0.6225178752626691, 0.616733261517116, 0.6120196240288871, 0.6078192676816668, 0.6022953646523612, 0.5981585127966744, 0.5960368769509452, 0.5908851112638202, 0.586724076952253, 0.5816148349217006, 0.5786760704857963, 0.574668254171099, 0.571936845779419, 0.5696873324257987, 0.5664217812674386, 0.5647087437765939, 0.5620706081390381, 0.558637295450483, 0.5551131452832904, 0.5527875934328351, 0.5516913448061261, 0.5484542846679688, 0.5475070476531982, 0.5431368691580636, 0.5418459006718227, 0.5394078493118286, 0.5357022966657367, 0.5350231613431659, 0.5336919341768537, 0.5320997749056134, 0.5299774408340454, 0.5268843855176654, 0.525479793548584, 0.5238774503980365, 0.5225698437009539, 0.5220263515199933, 0.5192973954336983, 0.5177349192755563, 0.5149810995374408, 0.5133590698242188, 0.5108330079487392, 0.5099044697625297, 0.5100728273391724, 0.5088715382984706], "val_accuracy": [0.2123333364725113, 0.3426666557788849, 0.3880000114440918, 0.42633333802223206, 0.45766666531562805, 0.48533332347869873, 0.5173333287239075, 0.5406666398048401, 0.5616666674613953, 0.5786666870117188, 0.5943333506584167, 0.6103333234786987, 0.6353333592414856, 0.6536666750907898, 0.6690000295639038, 0.6763333082199097, 0.6840000152587891, 0.6859999895095825, 0.6976666450500488, 0.699999988079071, 0.7036666870117188, 0.7066666483879089, 0.7049999833106995, 0.7113333344459534, 0.7139999866485596, 0.7229999899864197, 0.7266666889190674, 0.7246666550636292, 0.7269999980926514, 0.7306666374206543, 0.7310000061988831, 0.7306666374206543, 0.7296666502952576, 0.734666645526886, 0.7366666793823242, 0.737333357334137, 0.7456666827201843, 0.7419999837875366, 0.7463333606719971, 0.7450000047683716, 0.749666690826416, 0.750333309173584, 0.749666690826416, 0.7523333430290222, 0.7536666393280029, 0.7566666603088379, 0.753000020980835, 0.7540000081062317, 0.7580000162124634, 0.7599999904632568, 0.7603333592414856, 0.7570000290870667, 0.7590000033378601, 0.765333354473114, 0.762333333492279, 0.7599999904632568, 0.762666642665863, 0.768666684627533, 0.7683333158493042, 0.7713333368301392, 0.7723333239555359, 0.768666684627533, 0.7730000019073486, 0.7713333368301392, 0.7739999890327454, 0.7726666927337646, 0.7723333239555359, 0.7739999890327454, 0.7726666927337646, 0.7743333578109741, 0.7716666460037231, 0.7720000147819519, 0.7789999842643738, 0.7746666669845581, 0.7756666541099548, 0.7736666798591614, 0.7760000228881836, 0.7773333191871643]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7668571472167969, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29452170860876, 2.2716478272640725, 2.248658919425736, 2.222502145942302, 2.1873554483679984, 2.142481138142203, 2.0925713006484274, 2.0150261684226765, 1.9266496846200674, 1.8326497042829397, 1.7295232143510428, 1.6233195017955842, 1.5337443458342739, 1.4421736406470649, 1.36734264866236, 1.315881892863581, 1.259304851950939, 1.2167888880720732, 1.1727879492047126, 1.1347419059256112, 1.101858280700479, 1.0849147506000154, 1.0481330107200288, 1.0402337782229605, 1.0214785118113106, 1.0006415956701507, 0.9791261356551776, 0.9708022391240295, 0.9514688137909362, 0.9453787678473062, 0.9309708467878922, 0.9183578052855816, 0.9054377324403852, 0.8883318834537214, 0.8855322056190764, 0.8730469654264892, 0.8706217779380739, 0.8620623221345125, 0.8541456928673264, 0.8490284363654438, 0.8384262144510473, 0.8403026206838834, 0.8219360945451812, 0.8143108667887716, 0.8137449395576284, 0.8012197542152762, 0.8070083566077901, 0.8033831885241719, 0.7971218920198052, 0.791720277455977, 0.7870851567298225, 0.786184909998418, 0.7803851865569535, 0.7758196755297007, 0.7668581985211753, 0.7736334941012748, 0.7743148383699341, 0.7665544631159648, 0.75281881604291, 0.7500383987749226, 0.7379179171063502, 0.7443227699687531, 0.7466959196263773, 0.7364251233441498, 0.7438071456174054, 0.7318247279407892, 0.7264307819305866, 0.7300655079114675, 0.7196432748223183, 0.727570716093371], "accuracy": [0.11081759631633759, 0.17117950320243835, 0.23061682283878326, 0.26997753977775574, 0.31937655806541443, 0.35385021567344666, 0.37181350588798523, 0.40906089544296265, 0.4333641529083252, 0.4484215974807739, 0.4659886360168457, 0.48566898703575134, 0.5038964748382568, 0.5264826416969299, 0.550521731376648, 0.5539559125900269, 0.5661075115203857, 0.5812970399856567, 0.5890899300575256, 0.6053361296653748, 0.613789439201355, 0.6188086271286011, 0.6255448460578918, 0.6262052655220032, 0.6369040012359619, 0.6497160196304321, 0.6514331102371216, 0.6538106203079224, 0.6604147553443909, 0.6568484902381897, 0.6690001487731934, 0.6701889038085938, 0.6765288710594177, 0.6844538450241089, 0.6812838315963745, 0.6851142644882202, 0.6893408894538879, 0.6865671873092651, 0.6959450244903564, 0.6930392384529114, 0.698190450668335, 0.6926429867744446, 0.7045304179191589, 0.707568347454071, 0.7051908373832703, 0.7079645991325378, 0.7054550051689148, 0.713908314704895, 0.7136441469192505, 0.7117950320243835, 0.7154933214187622, 0.7147008180618286, 0.7186633348464966, 0.7150970697402954, 0.7154933214187622, 0.7186633348464966, 0.724210798740387, 0.7201162576675415, 0.726192057132721, 0.7320036888122559, 0.7331924438476562, 0.7273808121681213, 0.7264562249183655, 0.7302865982055664, 0.7280412316322327, 0.7327961921691895, 0.7342491149902344, 0.7341170310974121, 0.739928662776947, 0.7401928305625916], "val_loss": [1.9508510998317175, 1.929959433419364, 1.9060192108154297, 1.876974650791713, 1.839683668954032, 1.791004249027797, 1.7300635065351213, 1.6524301256452287, 1.5601122379302979, 1.4579925196511405, 1.3509434291294642, 1.2459758690425329, 1.1523260729653495, 1.0704105581556047, 1.0028371129717146, 0.9465874944414411, 0.9006015573229108, 0.8619205781391689, 0.8289165156228202, 0.8012199572154454, 0.776619417326791, 0.7567349672317505, 0.7384472063609532, 0.7236500467572894, 0.7104730776378086, 0.6972450358527047, 0.6858578409467425, 0.6749081441334316, 0.6657165799822126, 0.6586162362779889, 0.6492304972239903, 0.6431767089026315, 0.6348050321851458, 0.6273354291915894, 0.6225223200661796, 0.6167205231530326, 0.612052287374224, 0.6078557116644723, 0.6023094654083252, 0.5981860331126622, 0.5960119962692261, 0.5908772604806083, 0.5866769552230835, 0.5815599475588117, 0.5785825422831944, 0.5746126345225743, 0.5719128336225238, 0.5697377579552787, 0.5665093660354614, 0.5647587094988141, 0.5620979411261422, 0.5587351322174072, 0.5551270076206752, 0.552848219871521, 0.5517769541059222, 0.5485482386180333, 0.5475902727672032, 0.5432238749095372, 0.5420003959110805, 0.5394834109715053, 0.5357331207820347, 0.5350756645202637, 0.5336442334311349, 0.5320291008268084, 0.5299925633839199, 0.5269731112888881, 0.5255122865949359, 0.5239365441458566, 0.5226591144289289, 0.5220783438001361], "val_accuracy": [0.2123333364725113, 0.3423333466053009, 0.3880000114440918, 0.42633333802223206, 0.45766666531562805, 0.48533332347869873, 0.5173333287239075, 0.5406666398048401, 0.5616666674613953, 0.5786666870117188, 0.5943333506584167, 0.6103333234786987, 0.6356666684150696, 0.6536666750907898, 0.6690000295639038, 0.6763333082199097, 0.6840000152587891, 0.6859999895095825, 0.6973333358764648, 0.699999988079071, 0.7036666870117188, 0.7066666483879089, 0.7046666741371155, 0.7113333344459534, 0.7143333554267883, 0.7229999899864197, 0.7263333201408386, 0.7246666550636292, 0.7269999980926514, 0.7306666374206543, 0.7303333282470703, 0.7306666374206543, 0.7296666502952576, 0.734333336353302, 0.7369999885559082, 0.737666666507721, 0.7456666827201843, 0.7419999837875366, 0.7463333606719971, 0.7450000047683716, 0.749666690826416, 0.749666690826416, 0.75, 0.753333330154419, 0.753000020980835, 0.7570000290870667, 0.7526666522026062, 0.7540000081062317, 0.7580000162124634, 0.7599999904632568, 0.7599999904632568, 0.7570000290870667, 0.7599999904632568, 0.765333354473114, 0.762666642665863, 0.7599999904632568, 0.7630000114440918, 0.7683333158493042, 0.7683333158493042, 0.7710000276565552, 0.7723333239555359, 0.768666684627533, 0.7723333239555359, 0.7716666460037231, 0.7739999890327454, 0.7726666927337646, 0.7730000019073486, 0.7739999890327454, 0.7733333110809326, 0.7739999890327454]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 4], [2, 0, 2, 1], [40, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.4462857246398926, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2606278573989615, 2.4581072125468255, 2.6915147659123897, 2.292241458989815, 4.52110947530976, 2.3122549998273687, 2.305129518755801, 2.3037505658421424, 2.3028746031026923], "accuracy": [0.22982433438301086, 0.1398758441209793, 0.1938977688550949, 0.12429005652666092, 0.12653546035289764, 0.09589222073554993, 0.10434553027153015, 0.0940430611371994, 0.1006472036242485], "val_loss": [1.7625185421534948, 1.9466896738324846, 1.9863454273768835, 1.8108883585248674, 1.9856203624180384, 1.9763971056256975, 1.973942824772426, 1.9735405104500907, 1.9620531627110072], "val_accuracy": [0.179666668176651, 0.15166667103767395, 0.0989999994635582, 0.3149999976158142, 0.10066666454076767, 0.10066666454076767, 0.10433333367109299, 0.10433333367109299, 0.1456666737794876]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [2, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.18799999356269836, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.260635976321536, 2.4615854573933174, 2.4430111228293905, 2.310401679061549, 2.3040397715464622, 2.3030533973236347], "accuracy": [0.2300885021686554, 0.13697001338005066, 0.17553824186325073, 0.09853387624025345, 0.09311848133802414, 0.09813763201236725], "val_loss": [1.7628838675362724, 1.9571219171796526, 1.9879313196454729, 1.9747094426836287, 1.973811217716762, 1.973677294594901], "val_accuracy": [0.1809999942779541, 0.13600000739097595, 0.0989999994635582, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [8, 4], [2, 6, 1, 5, 3, 4], [20], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 5, 5, 2, 4], [42], [0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1], [3, 4, 2], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 7, 5, 3, 2, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302984291740995, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [0, 5, 1, 5, 3, 4], [27, 11], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 0, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.312820986859976, 2.337235708656155, 2.369960281465032, 2.417556889982051, 2.4938018800969517, 2.662290792896007, 3.984372474041597, 1558326220930.0203, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.03870030492544174, 0.023642847314476967, 0.015057455748319626, 0.013472461141645908, 0.013868709094822407, 0.047549862414598465, 0.10421344637870789, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9927116121564592, 2.018815585545131, 2.053452696119036, 2.1053978375026157, 2.1991684096200124, 2.4725682394845143, 9.330449513026647, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.004333333112299442, 0.004000000189989805, 0.004999999888241291, 0.00566666666418314, 0.01133333332836628, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 5, 9, 4, 4], [3, 0, 2, 1], [23, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [71], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [23126142779114.65, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15559370815753937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 5, 9, 4, 2, 1, 2], [3, 0, 2, 1, 3], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0], [1, 4, 8], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [8, 4], [2, 6, 1, 5, 3, 4], [20], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [353.0463162293571, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20935148000717163, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [285992.85714285716, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 2, 5, 5, 2, 4], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 4, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9, 9, 6, 8, 6, 2, 0, 9, 1, 1, 4, 9], [0, 0, 3, 3, 0, 0, 0, 2, 2], [83, 18, 10, 42, 15, 84, 9, 1, 27, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 33, 24, 9, 10], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), beta))), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 3], [2, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302984291740995, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 5, 9, 4, 3], [3, 0, 2, 1], [77, 68, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 2, 5, 1, 2], [42], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0], [3, 4], [1, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, beta), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032772566868784, 2.303290206333272, 2.3033349859149244, 2.3050047425766507, 2.3085554368176937, 2.313225256185868], "accuracy": [0.09245806187391281, 0.09576013684272766, 0.09985470771789551, 0.09998679161071777, 0.09985470771789551, 0.09853387624025345], "val_loss": [1.9737992967878069, 1.9744375773838587, 1.9749460220336914, 1.976764406476702, 1.9805478368486678, 1.9887752532958984], "val_accuracy": [0.10066666454076767, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4, 9], [3, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302984291740995, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 3], [0, 0, 3, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [77], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [26, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 10, 6, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.square(sigma)), tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.square(sigma))))", "other_info": {"loss": [3.4249359100502024, 16.20906781060679, 36.244475778729104, 58.319713483192444, 80.28686204093275, 99.33456523181299], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.451514380318778, 23.738287244524276, 41.9514890398298, 61.741529192243306, 78.28018188476562, 95.561525617327], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 3, 0, 2, 4, 4, 5, 3, 3, 1, 0, 0, 4, 2, 1, 5, 1, 1, 4, 2, 2, 3], [42, 50, 85, 99], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [67], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 0, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(beta), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [6, 5, 9, 4, 2], [1, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0], [3, 4], [2, 5, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.08085714280605316, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302969166725823, 2.300926729137273, 2.30051642609877, 2.3012648418579182, 2.3002881319484123, 2.299240450581319, 2.30166848032403, 2.2991976509036296, 2.29990465211799, 2.2998082667703343, 2.3003564131589, 2.30008100701235, 2.2998690078318664, 2.2995991833756992, 2.300079771965691, 2.3002963106094683, 2.300572338861292, 2.3004679463527236, 2.300840828948096, 2.3014185909802305, 2.3006010594353494, 2.3008245631704054, 2.3010799372122195, 2.3009941509575844, 2.3006892995969133, 2.301709149665112, 2.3010346105369233, 2.301228341267739, 2.301278847429998, 2.3007804308238677, 2.3011719493692135, 2.3010882004896693, 2.301154632169053, 2.3009516079947616, 2.3015517019844483, 2.300972678862574, 2.3011809642115573, 2.3010288287840344, 2.3009710786459454, 2.301462388608623, 2.3012921501223156, 2.301783845125802, 2.3013414046736345, 2.301447999507303, 2.301735177409805, 2.3011629284805926, 2.301439910217787, 2.301210964360588, 2.301770848242866, 2.3013038769090777, 2.301575102432608, 2.3012012026770052, 2.301490828156739, 2.30198992767732, 2.301743561045967, 2.3020328162541843], "accuracy": [0.09166556596755981, 0.09008057415485382, 0.0940430611371994, 0.09536388516426086, 0.09602430462837219, 0.09417514503002167, 0.09074098616838455, 0.09932637959718704, 0.10342095047235489, 0.09430722147226334, 0.09496764093637466, 0.09496764093637466, 0.09853387624025345, 0.0936468094587326, 0.09800554811954498, 0.09668471664190292, 0.09470347315073013, 0.09879804402589798, 0.09351472556591034, 0.09747721254825592, 0.09919429570436478, 0.09391097724437714, 0.09628847241401672, 0.0952318087220192, 0.09179764986038208, 0.08915598690509796, 0.0948355570435524, 0.09589222073554993, 0.09179764986038208, 0.09245806187391281, 0.09628847241401672, 0.0874389111995697, 0.09536388516426086, 0.0936468094587326, 0.09047681838274002, 0.0944393053650856, 0.09893012791872025, 0.09576013684272766, 0.09853387624025345, 0.09245806187391281, 0.0948355570435524, 0.09509972482919693, 0.09509972482919693, 0.09760929644107819, 0.09245806187391281, 0.09536388516426086, 0.09628847241401672, 0.09391097724437714, 0.09919429570436478, 0.09509972482919693, 0.09747721254825592, 0.10077928751707077, 0.09760929644107819, 0.09311848133802414, 0.09457138925790787, 0.10011887550354004], "val_loss": [1.9700661386762346, 1.9695848737444197, 1.9693437303815569, 1.969186510358538, 1.9692369188581194, 1.9692142350333077, 1.9691717965262276, 1.9692073549543108, 1.969245433807373, 1.9693222045898438, 1.9694769723074776, 1.9696620532444544, 1.9698445456368583, 1.9700967924935477, 1.9703215190342493, 1.9704555783952986, 1.9706478118896484, 1.9708209037780762, 1.9709621838160925, 1.9711036682128906, 1.9712120464869909, 1.9713070733206612, 1.9713914734976632, 1.9714757374354772, 1.971565110342843, 1.9716057096208846, 1.9716481481279646, 1.9716882024492537, 1.9717292785644531, 1.9717672892979212, 1.9717984880719865, 1.9718342508588518, 1.9718542098999023, 1.9718750544956751, 1.971900803702218, 1.9719208308628626, 1.9719362940107072, 1.971966130392892, 1.9719931738717216, 1.9720191274370467, 1.9720452172415597, 1.9720672879900252, 1.9720846584865026, 1.972116334097726, 1.9721318653651647, 1.9721592494419642, 1.9721777098519462, 1.9722048214503698, 1.9722207614353724, 1.9722480092729842, 1.9722869736807687, 1.9723233495439803, 1.9723492349897112, 1.9723640169416154, 1.972395760672433, 1.9724161965506417], "val_accuracy": [0.04866666719317436, 0.05433333292603493, 0.05966666713356972, 0.06466666609048843, 0.06733333319425583, 0.07133333384990692, 0.07333333045244217, 0.07500000298023224, 0.07566666603088379, 0.07400000095367432, 0.07533333450555801, 0.07500000298023224, 0.07833333313465118, 0.08033332973718643, 0.07966666668653488, 0.07800000160932541, 0.07866666465997696, 0.07866666465997696, 0.08100000023841858, 0.07999999821186066, 0.08033332973718643, 0.0806666687130928, 0.08133333176374435, 0.08233333379030228, 0.08166666328907013, 0.0820000022649765, 0.0846666693687439, 0.08266666531562805, 0.08833333104848862, 0.09033333510160446, 0.09099999815225601, 0.09300000220537186, 0.09200000017881393, 0.09166666865348816, 0.09466666728258133, 0.09566666930913925, 0.09700000286102295, 0.09966666996479034, 0.10100000351667404, 0.10133333504199982, 0.10066666454076767, 0.0989999994635582, 0.10266666859388351, 0.10466666519641876, 0.10533333569765091, 0.10466666519641876, 0.10466666519641876, 0.10533333569765091, 0.10966666787862778, 0.10966666787862778, 0.10999999940395355, 0.10733333230018616, 0.10733333230018616, 0.10966666787862778, 0.109333336353302, 0.10999999940395355]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.08085714280605316, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302969135234794, 2.3009262387904634, 2.3005090443496896, 2.301252767851072, 2.3002695213172255, 2.2992327803744144, 2.3016650072729363, 2.2991964766976385, 2.2999037703691836, 2.2998091932364018, 2.3003589725922664, 2.300085469700515, 2.2998736234089763, 2.299603168943287, 2.30008395989463, 2.300301223021016, 2.3005799636896245, 2.3004770779008203, 2.3008497450030823, 2.3014271874642565, 2.300609084703604, 2.300832602137257, 2.3010863024938724, 2.3010002912358365, 2.300695376987581, 2.301715668119129, 2.3010400579180685, 2.301233568589575, 2.3012824057273074, 2.30078220317046, 2.3011731505000346, 2.3010894331115193, 2.301155311273089, 2.3009516708823465, 2.3015531997607606, 2.3009743792836566, 2.3011802983337533, 2.301029760005247, 2.3009715378796183, 2.3014624156279258, 2.301291551792768, 2.301781996381974, 2.3013384987444785, 2.3014457231153034, 2.3017316144518234, 2.301160719447904, 2.301437413577532, 2.301210375257912, 2.3017695122044777, 2.30130258587137, 2.3015755884966373, 2.301199272497376, 2.301490607719537, 2.3019895454077215, 2.3017421305344925, 2.3020313853648173], "accuracy": [0.09166556596755981, 0.09008057415485382, 0.09417514503002167, 0.09536388516426086, 0.09615638852119446, 0.09417514503002167, 0.09060890227556229, 0.09932637959718704, 0.10342095047235489, 0.0940430611371994, 0.09496764093637466, 0.09470347315073013, 0.09826971590518951, 0.0936468094587326, 0.09800554811954498, 0.09668471664190292, 0.09470347315073013, 0.09879804402589798, 0.09338264167308807, 0.09774138033390045, 0.09906221181154251, 0.0940430611371994, 0.09655263274908066, 0.09496764093637466, 0.09192973375320435, 0.08915598690509796, 0.09457138925790787, 0.09549596905708313, 0.09179764986038208, 0.09245806187391281, 0.09628847241401672, 0.08757099509239197, 0.0952318087220192, 0.0936468094587326, 0.09021265059709549, 0.09457138925790787, 0.09893012791872025, 0.09536388516426086, 0.09840179979801178, 0.09272222965955734, 0.09470347315073013, 0.09470347315073013, 0.09509972482919693, 0.09708096832036972, 0.09232597798109055, 0.09509972482919693, 0.09589222073554993, 0.0936468094587326, 0.09932637959718704, 0.09549596905708313, 0.09787346422672272, 0.10117553919553757, 0.09774138033390045, 0.09311848133802414, 0.0948355570435524, 0.10011887550354004], "val_loss": [1.9700657980782645, 1.9695844650268555, 1.9693316050938197, 1.969172409602574, 1.969226905277797, 1.9692111015319824, 1.9691690717424666, 1.9692055157252721, 1.9692446163722448, 1.9693212509155273, 1.96948276247297, 1.9696656635829382, 1.969846521105085, 1.9701007434300013, 1.9703269004821777, 1.9704632077898299, 1.970656054360526, 1.9708301680428642, 1.9709698132106237, 1.9711095946175712, 1.9712181772504533, 1.9713117735726493, 1.9713959693908691, 1.9714803014482771, 1.9715706280299596, 1.9716102736336845, 1.9716527121407645, 1.971691608428955, 1.9717305728367396, 1.9717682429722376, 1.971799305507115, 1.9718337740216936, 1.9718538693019323, 1.9718753269740514, 1.9719015530177526, 1.9719198771885462, 1.9719365664890833, 1.97196626663208, 1.9719929013933455, 1.9720179012843542, 1.9720431055341447, 1.9720651081630163, 1.9720824105398995, 1.972113813672747, 1.9721297536577498, 1.9721578870500838, 1.9721764836992537, 1.972203595297677, 1.972219467163086, 1.9722472599574499, 1.9722860200064523, 1.9723221233912878, 1.9723478725978307, 1.9723622458321708, 1.9723943982805525, 1.972414425441197], "val_accuracy": [0.04866666719317436, 0.05433333292603493, 0.05966666713356972, 0.06499999761581421, 0.06733333319425583, 0.07133333384990692, 0.07366666942834854, 0.07533333450555801, 0.07533333450555801, 0.07400000095367432, 0.07533333450555801, 0.07500000298023224, 0.07833333313465118, 0.08033332973718643, 0.0793333351612091, 0.07733333110809326, 0.07900000363588333, 0.07833333313465118, 0.0806666687130928, 0.08033332973718643, 0.08033332973718643, 0.0806666687130928, 0.08100000023841858, 0.08233333379030228, 0.08166666328907013, 0.08233333379030228, 0.08433333039283752, 0.08299999684095383, 0.08799999952316284, 0.09000000357627869, 0.09133332967758179, 0.09200000017881393, 0.09166666865348816, 0.09166666865348816, 0.09533333033323288, 0.09566666930913925, 0.09700000286102295, 0.09966666996479034, 0.10133333504199982, 0.10133333504199982, 0.10100000351667404, 0.09933333098888397, 0.10266666859388351, 0.10433333367109299, 0.10466666519641876, 0.10533333569765091, 0.10400000214576721, 0.10566666722297668, 0.109333336353302, 0.11033333092927933, 0.1106666699051857, 0.1080000028014183, 0.1080000028014183, 0.10966666787862778, 0.109333336353302, 0.11033333092927933]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 5, 9, 4, 2], [3, 0, 2, 1], [77, 23, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0], [8, 4], [0, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3034604540779418, 2.3023005952105753, 2.3024448515197085, 2.303635488899865, 2.3026700531565645, 2.301683716534025], "accuracy": [0.09166556596755981, 0.08770307898521423, 0.09008057415485382, 0.08994849026203156, 0.08809932321310043, 0.08479725569486618], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 8], [0, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 3, 0, 1, 1], [42], [1, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [4, 6, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 7, 7, 5, 2, 3, 17, 17, 9, 8, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034604540779418, 2.3023005952105753, 2.3024448515197085, 2.303635488899865, 2.3026700531565645, 2.301683716534025], "accuracy": [0.09166556596755981, 0.08770307898521423, 0.09008057415485382, 0.08994849026203156, 0.08809932321310043, 0.08479725569486618], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]