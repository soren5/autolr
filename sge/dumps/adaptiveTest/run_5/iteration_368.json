[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [47, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7828571200370789, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0273298292647515, 1.506044113750959, 1.1516349764941565, 1.0293261089408088, 0.9054038032973998, 0.8343967569502605, 0.7715844365080129, 0.7721552515168468, 0.7532692722766595, 0.7291005657664253, 0.724895933285019, 0.6622586569939118, 0.6304379343561383, 0.6481394664549384, 0.6412232090075569, 0.6064040891372485, 0.6010232407182924, 0.5850676412690097, 0.5838166682270808, 0.5675308799794038, 0.5518333449135083, 0.5361751414025543], "accuracy": [0.3152819871902466, 0.4791969358921051, 0.5749570727348328, 0.6096948981285095, 0.6609430909156799, 0.6870955228805542, 0.707040011882782, 0.7078325152397156, 0.7168141603469849, 0.7230220437049866, 0.7166820764541626, 0.7420420050621033, 0.7543256878852844, 0.7537974119186401, 0.7531369924545288, 0.7681944370269775, 0.7607977986335754, 0.7779685854911804, 0.7737419009208679, 0.778232753276825, 0.7880068421363831, 0.793950617313385], "val_loss": [1.6178867816925049, 0.9988464287349156, 0.8186695746013096, 0.758874603680202, 0.6405243022101266, 0.5836818899427142, 0.5905497244426182, 0.5900389466966901, 0.5599044220788139, 0.5695776258196149, 0.5634684562683105, 0.502557669367109, 0.5158794948032924, 0.5177350214549473, 0.4949171883719308, 0.47269066742488314, 0.45566090515681673, 0.4886050394603184, 0.5033544301986694, 0.45658869402749197, 0.4640716144016811, 0.4681688036237444], "val_accuracy": [0.3726666569709778, 0.5373333096504211, 0.6233333349227905, 0.6386666893959045, 0.7160000205039978, 0.7400000095367432, 0.7193333506584167, 0.7443333268165588, 0.7319999933242798, 0.7279999852180481, 0.7173333168029785, 0.762666642665863, 0.7409999966621399, 0.7559999823570251, 0.7720000147819519, 0.781333327293396, 0.7960000038146973, 0.762666642665863, 0.7733333110809326, 0.7796666622161865, 0.7829999923706055, 0.7860000133514404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7820000052452087, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2792732587753113, 2.2121060841811913, 2.0948160723326086, 1.881853012172002, 1.6164049300472294, 1.4032441281434678, 1.2505885154784333, 1.139053008496848, 1.0734608453719245, 1.0151370083572464, 0.9772868934970065, 0.9220304580538453, 0.9085494270256687, 0.8918091422688644, 0.8610670099546881, 0.8370356056054412, 0.833393976751682, 0.8133641812370249, 0.796051485309228, 0.7873942329741551, 0.7764934932928925, 0.7626896301800344, 0.7609284418669391, 0.752309226112721, 0.7459495309919902, 0.7326139842577425, 0.7292071757236602, 0.7183257592368387, 0.7017408837700218, 0.7047662035963239, 0.7047200356933025, 0.697173592342346, 0.6810913743470182, 0.6852889975001232, 0.6862028292172998, 0.6735685421506947, 0.6691131782711237, 0.6705563573742177, 0.6602511310054642, 0.6599753727419754, 0.6465108553180133, 0.6518099799037783, 0.6562901035653853, 0.6454935339636823, 0.6417450739282108], "accuracy": [0.1558578759431839, 0.282129168510437, 0.3727380931377411, 0.436930388212204, 0.48949941992759705, 0.5275393128395081, 0.5676925182342529, 0.602562427520752, 0.6244881749153137, 0.641791045665741, 0.6494518518447876, 0.6745476126670837, 0.6789063811302185, 0.67666095495224, 0.6864351034164429, 0.6931713223457336, 0.6950204968452454, 0.7088891863822937, 0.7054550051689148, 0.7161537408828735, 0.7182670831680298, 0.7207766771316528, 0.7240787148475647, 0.7214370369911194, 0.7284374833106995, 0.7313432693481445, 0.7327961921691895, 0.7345132827758789, 0.7378153204917908, 0.7396644949913025, 0.7397965788841248, 0.7471932172775269, 0.7503632307052612, 0.7503632307052612, 0.750759482383728, 0.7549861073493958, 0.7519482374191284, 0.7528728246688843, 0.7528728246688843, 0.7530049085617065, 0.7629110813140869, 0.7589486241340637, 0.7593448758125305, 0.7563069462776184, 0.767401933670044], "val_loss": [1.9159841537475586, 1.8312636784144811, 1.668198926108224, 1.4129227229527064, 1.1494878360203333, 0.9690704686301095, 0.8523249626159668, 0.7800195046833583, 0.7341420991080148, 0.7028406688145229, 0.6722312484468732, 0.6458013568605695, 0.6298361846378872, 0.6168421336582729, 0.605831333569118, 0.5923922743116107, 0.5843725715364728, 0.5757517474038261, 0.5822687319346836, 0.5632760524749756, 0.5600853477205548, 0.5642997877938407, 0.5490893466132027, 0.5370270695005145, 0.5358037267412458, 0.5257366895675659, 0.5216890914099557, 0.5181287697383335, 0.5135225909096854, 0.5120928628104073, 0.5107126576559884, 0.5056277002607074, 0.4980869633810861, 0.4980646712439401, 0.4966325419289725, 0.500306384904044, 0.48945941243852886, 0.4873354434967041, 0.4913525070462908, 0.48370110988616943, 0.47747814655303955, 0.47893212522779194, 0.4824580124446324, 0.47263463905879427, 0.47193442072187153], "val_accuracy": [0.37400001287460327, 0.47200000286102295, 0.5366666913032532, 0.5860000252723694, 0.6306666731834412, 0.6663333177566528, 0.6923333406448364, 0.6963333487510681, 0.7106666564941406, 0.7226666808128357, 0.7263333201408386, 0.7260000109672546, 0.7396666407585144, 0.7393333315849304, 0.749666690826416, 0.7433333396911621, 0.746999979019165, 0.7553333044052124, 0.7329999804496765, 0.7486666440963745, 0.7473333477973938, 0.7553333044052124, 0.7616666555404663, 0.7646666765213013, 0.7590000033378601, 0.7693333625793457, 0.7743333578109741, 0.778333306312561, 0.7773333191871643, 0.7736666798591614, 0.7730000019073486, 0.7756666541099548, 0.7860000133514404, 0.7883333563804626, 0.7896666526794434, 0.7823333144187927, 0.7816666960716248, 0.7900000214576721, 0.7913333177566528, 0.7950000166893005, 0.7943333387374878, 0.7879999876022339, 0.7836666703224182, 0.7906666398048401, 0.7900000214576721]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 5, 8, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 2, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7817142605781555, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2792733082477175, 2.212105477097138, 2.0948129415889976, 1.8818409869290142, 1.6164090753688065, 1.4032976903683632, 1.2509203396138262, 1.1398381752943272, 1.0736246410614116, 1.0151800458866764, 0.9773067257675465, 0.9220544772692297, 0.9085274981139216, 0.8917957618094517, 0.8610685792313811, 0.8371272110006891, 0.8332677525126813, 0.8135037303380269, 0.7959479390039672, 0.7873310236064214, 0.7766183491758367, 0.7627598769503215, 0.7608026255312345, 0.7524223342122592, 0.7462002810092256, 0.7325398520849573, 0.7295109736779268, 0.7184895570204793, 0.7017440223548989, 0.7047172366210798, 0.7048378979540961, 0.6973252498698886, 0.6811421699197049, 0.6851637386186106, 0.6861339751220162, 0.6739381757064061, 0.668943130124467, 0.6703571950235166, 0.6602849565114737, 0.6599939989218575, 0.6467740634145549, 0.6517561365112322, 0.6564218745554726, 0.6453843224380845, 0.6417419918224938], "accuracy": [0.1558578759431839, 0.282129168510437, 0.3727380931377411, 0.4365341365337372, 0.4892352521419525, 0.5275393128395081, 0.5678246021270752, 0.6019020080566406, 0.6244881749153137, 0.6409985423088074, 0.6501122713088989, 0.6749438643455505, 0.6782459616661072, 0.6763967871665955, 0.6859067678451538, 0.6936996579170227, 0.6954167485237122, 0.7083608508110046, 0.7059833407402039, 0.7166820764541626, 0.7180029153823853, 0.7207766771316528, 0.7244749665260315, 0.7223616242408752, 0.7273808121681213, 0.7326641082763672, 0.7323999404907227, 0.7342491149902344, 0.7390040755271912, 0.739928662776947, 0.7391361594200134, 0.7471932172775269, 0.7497028112411499, 0.7508915662765503, 0.7508915662765503, 0.755118191242218, 0.7519482374191284, 0.752740740776062, 0.7536653280258179, 0.7526086568832397, 0.7626469135284424, 0.759609043598175, 0.7593448758125305, 0.7567031979560852, 0.7675340175628662], "val_loss": [1.9159841537475586, 1.8312632696969169, 1.6681905814579554, 1.4129149232591902, 1.1495450564793177, 0.9691626003810337, 0.8529867615018573, 0.780589086668832, 0.7343248299189976, 0.7029823746000018, 0.6723733459200177, 0.6458172287259784, 0.6297706535884312, 0.6165953363691058, 0.6056973934173584, 0.5925941807883126, 0.5842899765287127, 0.5755989040647235, 0.5824175902775356, 0.563828570502145, 0.5601352964128766, 0.5639948504311698, 0.5489018474306379, 0.5371618611471993, 0.5362792696271624, 0.5257236616952079, 0.5218753133501325, 0.5183464969907489, 0.513749258858817, 0.511817455291748, 0.5106821400778634, 0.5053915296282087, 0.4979693038122995, 0.49758803844451904, 0.4967620883669172, 0.49989570890154156, 0.4893300873892648, 0.4876930373055594, 0.49145705359322683, 0.4839766025543213, 0.47753861972263884, 0.47903845991407124, 0.48242924894605366, 0.47198075907570974, 0.47207917485918316], "val_accuracy": [0.37400001287460327, 0.47200000286102295, 0.5366666913032532, 0.5866666436195374, 0.6303333044052124, 0.6666666865348816, 0.6933333277702332, 0.6956666707992554, 0.7103333473205566, 0.721666693687439, 0.7269999980926514, 0.7260000109672546, 0.7383333444595337, 0.7393333315849304, 0.7490000128746033, 0.7433333396911621, 0.7463333606719971, 0.7549999952316284, 0.734000027179718, 0.746666669845581, 0.746666669845581, 0.7549999952316284, 0.7620000243186951, 0.7643333077430725, 0.7586666941642761, 0.7683333158493042, 0.7753333449363708, 0.7786666750907898, 0.7763333320617676, 0.7739999890327454, 0.7720000147819519, 0.7746666669845581, 0.7866666913032532, 0.7860000133514404, 0.7893333435058594, 0.7820000052452087, 0.7823333144187927, 0.7896666526794434, 0.7916666865348816, 0.7946666479110718, 0.7943333387374878, 0.7889999747276306, 0.7839999794960022, 0.7910000085830688, 0.7906666398048401]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1, 2, 1, 2, 1], [47, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7802857160568237, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))))), grad))), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.279272620105756, 2.2121006413662454, 2.094790251909104, 1.8817840673510644, 1.61634782667189, 1.4032415147187325, 1.2505832821260654, 1.1390443210509853, 1.0734129051065653, 1.0151051298943115, 0.9772511334262425, 0.9220607587690004, 0.9085260364027102, 0.8918377138116278, 0.8611232008459766, 0.8370864584288183, 0.8334910439982028, 0.8134495077777485, 0.7961741893235734, 0.7874854832371984, 0.7766829721128715, 0.7629213367455104, 0.7607998994237255, 0.7525162601420562, 0.7462301372206364, 0.7325564166337838, 0.7292440441448014, 0.7185343286663928, 0.7018008639374429, 0.7046319431538092, 0.7048898202443026, 0.6974238121451294, 0.6812190839233746, 0.685303740072496, 0.6858858913399714, 0.6739083582761974, 0.669139272894889, 0.6705174822187568, 0.6604693349105901, 0.6601076843857907, 0.6466023394728003, 0.6517448559602207, 0.65655445600655, 0.64559598543609, 0.6418260971017564], "accuracy": [0.1558578759431839, 0.2822612524032593, 0.37287017703056335, 0.43666622042655945, 0.48949941992759705, 0.5272751450538635, 0.5676925182342529, 0.6028265953063965, 0.6243560910224915, 0.6420552134513855, 0.6499801874160767, 0.6741513609886169, 0.678642213344574, 0.6763967871665955, 0.6861709356307983, 0.6934354901313782, 0.6951525807380676, 0.7088891863822937, 0.7057191729545593, 0.7154933214187622, 0.7185312509536743, 0.7211728692054749, 0.724739134311676, 0.7219653725624084, 0.7271166443824768, 0.7325320243835449, 0.7320036888122559, 0.7345132827758789, 0.7396644949913025, 0.7387399077415466, 0.7396644949913025, 0.7475894689559937, 0.7500990629196167, 0.7503632307052612, 0.7506273984909058, 0.7541936039924622, 0.7519482374191284, 0.7528728246688843, 0.7534011602401733, 0.7512878179550171, 0.7630431652069092, 0.759080708026886, 0.7577598690986633, 0.7559106945991516, 0.767401933670044], "val_loss": [1.9159819739205497, 1.8312538010733468, 1.668144634791783, 1.412851197378976, 1.1494917528969901, 0.9689984321594238, 0.8522998605455671, 0.7800698450633458, 0.7342384202139718, 0.7029742343085152, 0.6723093645913261, 0.6458709750856672, 0.6298857416425433, 0.6168298891612461, 0.6056679146630424, 0.5926217862537929, 0.5844348328454154, 0.5759833710534232, 0.5830157654626029, 0.5636492116110665, 0.5605001449584961, 0.5633654764720372, 0.5488093069621495, 0.5369368961879185, 0.5357426234654018, 0.5259421212332589, 0.521780184337071, 0.5184035130909511, 0.5138060876301357, 0.5117579017366681, 0.5107234716415405, 0.5054308176040649, 0.49804793085370747, 0.49813410214015413, 0.4968768528529576, 0.5002690894263131, 0.4895627328327724, 0.48742311341421946, 0.4917215619768415, 0.48411546434674946, 0.4775716406958444, 0.48009489263807026, 0.48212010519845144, 0.4723271301814488, 0.47239576067243305], "val_accuracy": [0.37400001287460327, 0.47200000286102295, 0.5373333096504211, 0.5870000123977661, 0.6303333044052124, 0.6666666865348816, 0.6923333406448364, 0.6959999799728394, 0.7096666693687439, 0.721666693687439, 0.7266666889190674, 0.7256666421890259, 0.7390000224113464, 0.7390000224113464, 0.7490000128746033, 0.7436666488647461, 0.7459999918937683, 0.7553333044052124, 0.734000027179718, 0.7480000257492065, 0.746666669845581, 0.7553333044052124, 0.7613333463668823, 0.765666663646698, 0.7593333125114441, 0.7680000066757202, 0.7753333449363708, 0.778333306312561, 0.7763333320617676, 0.7743333578109741, 0.7716666460037231, 0.7749999761581421, 0.7856666445732117, 0.7883333563804626, 0.7886666655540466, 0.7829999923706055, 0.781000018119812, 0.7893333435058594, 0.7910000085830688, 0.7960000038146973, 0.7950000166893005, 0.7863333225250244, 0.7850000262260437, 0.7926666736602783, 0.7913333177566528]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 5, 2, 8, 0, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [33], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7034285664558411, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2201905989013944, 1.5649317731915244, 1.0449216603965115, 0.8785451578505051, 0.8027121154324506, 0.7565801285592053, 0.7110639278048837, 0.6726451222418857, 0.6423570809426041, 0.6147526668566975, 0.6041445465269594, 0.5616958855937075, 0.557348179566846, 0.5577865491107376, 0.5268981569179565, 0.5056740200050346, 0.49582693472026346, 0.491060753154276, 0.46509759188123495, 0.4541360567888611, 0.4410432673850001, 0.43975232796048, 0.4237111064074865, 0.4192846827991351, 0.40170755567504685, 0.39527339090398433, 0.40054352432115436, 0.3940733977714156, 0.3919017050189428, 0.3856495531471949, 0.3593261771670674, 0.3736257167650393], "accuracy": [0.2417117953300476, 0.47364944219589233, 0.6302998065948486, 0.6827367544174194, 0.7045304179191589, 0.7161537408828735, 0.7304186820983887, 0.7440232634544373, 0.7573636174201965, 0.7625148296356201, 0.772288978099823, 0.7911768555641174, 0.7917051911354065, 0.7893276810646057, 0.7992339134216309, 0.8117818236351013, 0.8128384351730347, 0.8197067975997925, 0.8236692547798157, 0.8285563588142395, 0.8305375576019287, 0.8364813327789307, 0.8348963260650635, 0.8396512866020203, 0.847840428352356, 0.850350022315979, 0.8475762605667114, 0.8529917001724243, 0.8516708612442017, 0.8469158411026001, 0.8588033318519592, 0.8527275323867798], "val_loss": [1.6042940616607666, 0.7483862979071481, 0.7174215997968402, 0.5982861348560878, 0.586695841380528, 0.5265075819832938, 0.4989668471472604, 0.4803802626473563, 0.4588474375861032, 0.45564004353114534, 0.4397683995110648, 0.43458203758512226, 0.41900879996163504, 0.41480032886777607, 0.4117018239838736, 0.4070559484618051, 0.4009802086012704, 0.39437136479786467, 0.39242461749485563, 0.39421612875802176, 0.39518959181649344, 0.38082809107644217, 0.3819004212106977, 0.3844742008617946, 0.38072517088481356, 0.37810466970716206, 0.38291649307523457, 0.39363895995276316, 0.3955960954938616, 0.3993070806775774, 0.41956652062279837, 0.40855641875948223], "val_accuracy": [0.5210000276565552, 0.6679999828338623, 0.6883333325386047, 0.7336666584014893, 0.734000027179718, 0.765333354473114, 0.7743333578109741, 0.7836666703224182, 0.79666668176651, 0.7933333516120911, 0.8130000233650208, 0.8136666417121887, 0.8199999928474426, 0.8169999718666077, 0.8209999799728394, 0.8336666822433472, 0.8296666741371155, 0.8370000123977661, 0.8433333039283752, 0.843666672706604, 0.843999981880188, 0.8446666598320007, 0.8426666855812073, 0.8529999852180481, 0.859000027179718, 0.8600000143051147, 0.8653333187103271, 0.8603333234786987, 0.8510000109672546, 0.8619999885559082, 0.8640000224113464, 0.8576666712760925]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 2, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6397143006324768, "mapping_values": [1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.23635437365426, 1.642326942382629, 1.1414708027340843, 0.9058316182372215, 0.8253809691672123, 0.7697093164947574, 0.7386400250947046, 0.6981252636088828, 0.6548223576257888, 0.6364950649632187, 0.6186946385556429, 0.5886514625056797, 0.5801555101173335, 0.5698170821979424, 0.5359108454248043, 0.5182421191603737, 0.5122735425032771, 0.5107489527728281, 0.4860368015948477, 0.46697825076888344, 0.4575207142695428, 0.452293180215628, 0.44054731707751804, 0.4345695024523296, 0.4255237115797759, 0.42770280471614575, 0.41674275135934125, 0.41047356234502486, 0.4027461660434195, 0.3852338022866726, 0.3827932721564578, 0.37921092846311394, 0.37936492644328135, 0.37392620916899405, 0.3807990537689913, 0.35425556657446877, 0.37672325745549706, 0.3772560865328596, 0.37431754207866164, 0.3683272320415523], "accuracy": [0.22876766324043274, 0.4547615945339203, 0.6089023947715759, 0.6819442510604858, 0.6919825673103333, 0.7181349992752075, 0.7156254053115845, 0.7343811988830566, 0.7491744756698608, 0.7623828053474426, 0.7604015469551086, 0.7832518815994263, 0.7823272943496704, 0.7853652238845825, 0.7980451583862305, 0.8010830879211426, 0.8083476424217224, 0.8050455451011658, 0.817461371421814, 0.8244617581367493, 0.8274996876716614, 0.8333113193511963, 0.8290846943855286, 0.8388587832450867, 0.8339717388153076, 0.8438779711723328, 0.8400475382804871, 0.8429533839225769, 0.8532558679580688, 0.8498216867446899, 0.852331280708313, 0.8568220734596252, 0.8578787446022034, 0.852859616279602, 0.8558974862098694, 0.8642187118530273, 0.8584070801734924, 0.8533879518508911, 0.8573504090309143, 0.8598600029945374], "val_loss": [1.698084933417184, 0.7939745358058384, 0.7118551560810634, 0.5997330801827567, 0.567068372453962, 0.5570511136736188, 0.5038127899169922, 0.4851245709827968, 0.4844814198357718, 0.4649674722126552, 0.45329655919756207, 0.46966658319745747, 0.4279290863445827, 0.4276937076023647, 0.41917026894433157, 0.4183380263192313, 0.3970284802573068, 0.39527346406664166, 0.39199587277003695, 0.3861875534057617, 0.39227306842803955, 0.3775907840047564, 0.3853767854826791, 0.38173859460013254, 0.3743367961474827, 0.38356731619153706, 0.37389195816857473, 0.3897899729864938, 0.39433590854917255, 0.3805124844823565, 0.39596221276691984, 0.410460148538862, 0.39647678818021503, 0.39348238706588745, 0.3639350278036935, 0.4057774118014744, 0.4003733651978629, 0.4345650247165135, 0.43778759241104126, 0.47117514269692556], "val_accuracy": [0.4983333349227905, 0.6650000214576721, 0.6930000185966492, 0.7366666793823242, 0.7356666922569275, 0.7666666507720947, 0.7703333497047424, 0.7910000085830688, 0.781333327293396, 0.7846666574478149, 0.8083333373069763, 0.8066666722297668, 0.812666654586792, 0.8083333373069763, 0.8130000233650208, 0.8263333439826965, 0.8349999785423279, 0.8299999833106995, 0.8403333425521851, 0.8426666855812073, 0.8426666855812073, 0.8543333411216736, 0.8479999899864197, 0.8543333411216736, 0.8560000061988831, 0.8550000190734863, 0.8506666421890259, 0.8546666502952576, 0.8579999804496765, 0.8539999723434448, 0.8550000190734863, 0.8573333621025085, 0.8576666712760925, 0.859666645526886, 0.8663333058357239, 0.8606666922569275, 0.8569999933242798, 0.8503333330154419, 0.847000002861023, 0.8523333072662354]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 8, 2, 8, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.6311428546905518, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.square(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.236354355672882, 1.642326942382629, 1.1414753165715532, 0.9058545938477839, 0.8254061620374948, 0.7702125424422986, 0.7390810972852887, 0.6986868856148776, 0.6548448924957848, 0.6363005437209794, 0.617457684249044, 0.5880160851564232, 0.5796477102395676, 0.5696116383238523, 0.5368717828950768, 0.5177826865820632, 0.5145547629512769, 0.5116378435873163, 0.491673630438996, 0.4732090683542994, 0.45970871101013344, 0.45747865063954246, 0.44062850135916715, 0.44246533603212224, 0.434243282645433, 0.423564630228814, 0.3998296436514317, 0.40699193007548284, 0.3941835935255005, 0.3779965311843863, 0.3869704224091511, 0.37719216034664627, 0.38191243710928524, 0.38064628641886594, 0.3904375247888561, 0.36037291326794907, 0.37385242686941167, 0.36122996372758376, 0.35309205922342296, 0.3600578316844229, 0.3570404248490483, 0.364950799954613], "accuracy": [0.22876766324043274, 0.4547615945339203, 0.6087703108787537, 0.6827367544174194, 0.6917183995246887, 0.7174745798110962, 0.7150970697402954, 0.7342491149902344, 0.7500990629196167, 0.7633073329925537, 0.7618544697761536, 0.7837802171707153, 0.7832518815994263, 0.7825914621353149, 0.7960638999938965, 0.8005547523498535, 0.8079513907432556, 0.8020076751708984, 0.8124422430992126, 0.8224804997444153, 0.8249900937080383, 0.830669641494751, 0.8339717388153076, 0.8362171649932861, 0.8300092220306396, 0.8407079577445984, 0.8491612672805786, 0.8521991968154907, 0.8488970994949341, 0.8536521196365356, 0.8504821062088013, 0.8564258217811584, 0.8565579056739807, 0.8529917001724243, 0.850350022315979, 0.859199583530426, 0.859199583530426, 0.8605204224586487, 0.8644828796386719, 0.8569541573524475, 0.858671247959137, 0.8541803956031799], "val_loss": [1.69808486529759, 0.7939747401646206, 0.7119171108518328, 0.5999423606055123, 0.567439215523856, 0.5575078725814819, 0.5040285757609776, 0.48474931716918945, 0.48463668142046246, 0.4642518588474819, 0.45328370162418913, 0.4688605581011091, 0.4288151434489659, 0.42805185488292147, 0.4194479669843401, 0.4215654049600874, 0.39647322041647776, 0.3970766408102853, 0.3959014500890459, 0.3847098009926932, 0.3958905850137983, 0.38564529589244295, 0.3846680692264012, 0.37907612323760986, 0.3767660515648978, 0.37610564061573576, 0.37955139364515034, 0.39595983709607807, 0.37193532500948223, 0.397329500743321, 0.3778665406363351, 0.3767877732004438, 0.3994920424052647, 0.38958431993212017, 0.3840825983456203, 0.3832061631338937, 0.39634511300495695, 0.3947582415172032, 0.4323427081108093, 0.3961493968963623, 0.4174213239124843, 0.4301835298538208], "val_accuracy": [0.4983333349227905, 0.6650000214576721, 0.6926666498184204, 0.7366666793823242, 0.7363333106040955, 0.765999972820282, 0.7696666717529297, 0.7916666865348816, 0.7820000052452087, 0.7873333096504211, 0.8090000152587891, 0.8053333163261414, 0.8146666884422302, 0.8053333163261414, 0.809333324432373, 0.8256666660308838, 0.8346666693687439, 0.8289999961853027, 0.8356666564941406, 0.8413333296775818, 0.846666693687439, 0.8483333587646484, 0.8513333201408386, 0.8526666760444641, 0.8523333072662354, 0.8519999980926514, 0.8556666374206543, 0.8586666584014893, 0.8546666502952576, 0.8550000190734863, 0.859000027179718, 0.8613333106040955, 0.8550000190734863, 0.8586666584014893, 0.8600000143051147, 0.8656666874885559, 0.8673333525657654, 0.8566666841506958, 0.8506666421890259, 0.8576666712760925, 0.8543333411216736, 0.8446666598320007]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 5, 5, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [48, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023089036461606, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 5, 2, 2, 3, 5, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3292970614520834, 2.4400065586063384, 6.398414945621312, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.055871088057756424, 0.013340378180146217, 0.051512349396944046, 0.10672302544116974, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0384388651166643, 2.2238366263253346, 113.04254586356026, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004000000189989805, 0.0063333334401249886, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 4, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [18, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), alpha), tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [4, 8, 5, 6, 2, 3, 9, 1, 0, 2, 5, 5, 5, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 0, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 1, 2], [22, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [0, 0, 1, 5, 3, 4], [32, 78], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 19, 8, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [5116.882795224274, 78714.14968506472, 342938.05895027076, 942127.635616167, 1985049.873794743, 3568066.1810196806], "accuracy": [0.10011887550354004, 0.09906221181154251, 0.09615638852119446, 0.09866596013307571, 0.10408136248588562, 0.09879804402589798], "val_loss": [14201.27650669643, 110571.375, 369996.90178571426, 873193.8035714285, 1700729.9285714286, 2933035.5], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 4, 5, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [9, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1], [4, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023089036461606, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 2, 2, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 0, 1, 2, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [47, 94, 89, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), alpha)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3292970614520834, 2.4400107870642316, 6.397521397000244, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.055871088057756424, 0.013340378180146217, 0.051512349396944046, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.038438320159912, 2.2238580839974538, 113.09507533482143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004000000189989805, 0.0063333334401249886, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [5, 5, 5, 4, 2, 6, 4, 1, 0, 2, 5, 2, 8, 2, 3, 4, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0], [9, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 6, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07991018146276474, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 5, 2, 8, 0, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 15, 15, 8, 7, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 1, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30256739570921, 2.302888257297873, 2.302978477268927, 2.3010508592464762, 2.3024593085471774, 2.3039509989975655], "accuracy": [0.09325055778026581, 0.09642054885625839, 0.09100515395402908, 0.09272222965955734, 0.09259014576673508, 0.09430722147226334], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 8, 2, 9, 9, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [27, 82, 73, 44, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 9, 9, 7, 2, 3, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30256739570921, 2.302888257297873, 2.302978477268927, 2.3010508592464762, 2.3024593085471774, 2.3039509989975655], "accuracy": [0.09325055778026581, 0.09642054885625839, 0.09100515395402908, 0.09272222965955734, 0.09259014576673508, 0.09430722147226334], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 3, 2, 2, 3, 9, 1, 0, 2, 5, 2, 8, 3, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), alpha))), tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30256739570921, 2.302888257297873, 2.302978477268927, 2.3010508592464762, 2.3024593085471774, 2.3039509989975655], "accuracy": [0.09325055778026581, 0.09642054885625839, 0.09100515395402908, 0.09272222965955734, 0.09259014576673508, 0.09430722147226334], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 2, 5, 6, 1, 3, 0, 2, 5, 2, 8, 2, 3, 5, 3, 1, 8, 9, 6, 2, 2, 6, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [47, 94, 17, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))), sigma)))))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30256739570921, 2.302888257297873, 2.302978477268927, 2.3010508592464762, 2.3024593085471774, 2.3039509989975655], "accuracy": [0.09325055778026581, 0.09642054885625839, 0.09100515395402908, 0.09272222965955734, 0.09259014576673508, 0.09430722147226334], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]