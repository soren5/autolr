[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7668571472167969, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2936590618823325, 2.2736122649752972, 2.2481329832189134, 2.221801303176517, 2.1864459017689484, 2.1440749822149754, 2.088626473539809, 2.0143682390014495, 1.935609965843374, 1.8326884290529926, 1.7298133151878565, 1.621402500359421, 1.5286727098977135, 1.4485156964380286, 1.3771716153632696, 1.3165368420525692, 1.265269511663336, 1.2263479156579795, 1.1731537556399476, 1.1448817000082376, 1.1130099435130352, 1.0916025179913487, 1.055348277123471, 1.034554903832535, 1.0166434638488562, 0.9923811320458042, 0.9783175047819153, 0.9620294124852429, 0.953433633921342, 0.9339289006823484, 0.9307672925959678, 0.9203193044271987, 0.9021761166090506, 0.8981485226135117, 0.8748201777544224, 0.8741444608302652, 0.8581673192263058, 0.8571431994705845, 0.8529364746622421, 0.851137480699879, 0.840300772790313, 0.8292484502939736, 0.835586491348784, 0.8186000102641103, 0.8167391566709993, 0.8168742274013036, 0.804596670409865, 0.7977634659611459, 0.7872880351715053, 0.7930111500958977, 0.79059268593426, 0.7803427334144178, 0.7760738073055377, 0.7696185099954194, 0.772582795397638, 0.7735691250842781, 0.7647402829907243, 0.7662866524795988, 0.7419499404174368, 0.7581522673222808, 0.7536834319742238, 0.7437059097302006, 0.7482119739614599, 0.7391704273277412, 0.7382959035865981, 0.7370707197526915, 0.7260726415533132, 0.73002414019384, 0.7267120229160277, 0.71181938800483, 0.7200812504449304], "accuracy": [0.11213842034339905, 0.16774533689022064, 0.23352265357971191, 0.275260865688324, 0.32122573256492615, 0.3547748029232025, 0.38304054737091064, 0.41249504685401917, 0.42464667558670044, 0.44749704003334045, 0.46929070353507996, 0.4908202290534973, 0.5066701769828796, 0.5305771827697754, 0.5452384352684021, 0.5499933958053589, 0.568220853805542, 0.5705983638763428, 0.5946374535560608, 0.598599910736084, 0.6139215230941772, 0.611940324306488, 0.628582775592804, 0.6355831623077393, 0.6439043879508972, 0.6510368585586548, 0.6513010263442993, 0.6645092964172363, 0.6612072587013245, 0.6643772125244141, 0.6686038970947266, 0.6741513609886169, 0.6778497099876404, 0.6890767216682434, 0.6859067678451538, 0.6851142644882202, 0.6903975605964661, 0.6951525807380676, 0.6929071545600891, 0.6954167485237122, 0.6968696117401123, 0.6959450244903564, 0.703209638595581, 0.7034738063812256, 0.7037379741668701, 0.7036058902740479, 0.7104741930961609, 0.7125874757766724, 0.7137762308120728, 0.711530864238739, 0.718399167060852, 0.7161537408828735, 0.713379979133606, 0.7230220437049866, 0.7177387475967407, 0.720380425453186, 0.7197200059890747, 0.7228899598121643, 0.7297582626342773, 0.7255316376686096, 0.7281733155250549, 0.7257958054542542, 0.7256637215614319, 0.7325320243835449, 0.7327961921691895, 0.726192057132721, 0.7374191284179688, 0.7347774505615234, 0.7359662055969238, 0.7392682433128357, 0.7363624572753906], "val_loss": [1.9508789607456751, 1.9304629053388322, 1.9068098068237305, 1.877809728894915, 1.8402281488691057, 1.7917663710457938, 1.7305254255022322, 1.6525311129433768, 1.5613928862980433, 1.4585164955684118, 1.3532754353114538, 1.2480460916246687, 1.153615985597883, 1.07294842175075, 1.0048305988311768, 0.9498987879071917, 0.9036123411996024, 0.8645264761788505, 0.8311594894954136, 0.8032100881849017, 0.7784136704036168, 0.7581665856497628, 0.7400416135787964, 0.7225824594497681, 0.7090850217001778, 0.6958736181259155, 0.6851580313273838, 0.6741936717714582, 0.665474397795541, 0.6575238534382412, 0.649740389415196, 0.6439367532730103, 0.6364679677145821, 0.6306172609329224, 0.6223265443529401, 0.6178524834769112, 0.6124648536954608, 0.607042840548924, 0.6029316697801862, 0.5994360276630947, 0.5935002735682896, 0.589626635823931, 0.5873989718300956, 0.5834816013063703, 0.5805865355900356, 0.5765361785888672, 0.5731505155563354, 0.570848958832877, 0.5658540555409023, 0.5632315022604806, 0.5606613159179688, 0.5578610215868268, 0.554486836705889, 0.5510350295475551, 0.5497935669762748, 0.5493691308157784, 0.5465828350612095, 0.5438859803336007, 0.5405661548886981, 0.5405760151999337, 0.5378788709640503, 0.5363074200493949, 0.5350790704999652, 0.5317331382206508, 0.5316855907440186, 0.5273400885718209, 0.5248250109808785, 0.5239648308072772, 0.5226061003548759, 0.5198027917316982, 0.5193712030138288], "val_accuracy": [0.21166667342185974, 0.34933334589004517, 0.40299999713897705, 0.4386666715145111, 0.47066667675971985, 0.49900001287460327, 0.5363333225250244, 0.5519999861717224, 0.5746666789054871, 0.5833333134651184, 0.5953333377838135, 0.6146666407585144, 0.6236666440963745, 0.6606666445732117, 0.6696666479110718, 0.6796666383743286, 0.6819999814033508, 0.6949999928474426, 0.6990000009536743, 0.7009999752044678, 0.7016666531562805, 0.7066666483879089, 0.7116666436195374, 0.7149999737739563, 0.722000002861023, 0.721666693687439, 0.7260000109672546, 0.7300000190734863, 0.7329999804496765, 0.7329999804496765, 0.734000027179718, 0.734000027179718, 0.7409999966621399, 0.7356666922569275, 0.7366666793823242, 0.7426666617393494, 0.737666666507721, 0.7446666955947876, 0.7426666617393494, 0.7456666827201843, 0.7486666440963745, 0.7506666779518127, 0.7513333559036255, 0.7493333220481873, 0.753333330154419, 0.7523333430290222, 0.7473333477973938, 0.7586666941642761, 0.7593333125114441, 0.7570000290870667, 0.7586666941642761, 0.7570000290870667, 0.7596666812896729, 0.7676666378974915, 0.7586666941642761, 0.7646666765213013, 0.765333354473114, 0.7689999938011169, 0.7676666378974915, 0.7663333415985107, 0.7720000147819519, 0.7683333158493042, 0.7733333110809326, 0.7726666927337646, 0.7726666927337646, 0.7760000228881836, 0.7760000228881836, 0.7739999890327454, 0.7706666588783264, 0.7730000019073486, 0.7746666669845581]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7668571472167969, "mapping_values": [1, 37, 37, 22, 15, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2936589989002747, 2.2736122649752972, 2.2481329743699345, 2.2217993598651296, 2.186445064926349, 2.14407383512276, 2.0886247596090746, 2.0143620916849523, 1.9356022444950387, 1.8326804913140526, 1.7297938913480875, 1.6213525440935068, 1.5286229879250537, 1.448487114566208, 1.3771480587353528, 1.3165054758856907, 1.2652518047931849, 1.2263106759261178, 1.1731246520877436, 1.1448564781032264, 1.1129863512372737, 1.0915956791318593, 1.0553300489350836, 1.0345368548281015, 1.0166258134736108, 0.9923489611807942, 0.9783167107041328, 0.9619953899792298, 0.9533963395761634, 0.9339202837370264, 0.9307484612126691, 0.9203074346790382, 0.902162416366113, 0.8981106347411678, 0.8747888846546038, 0.8741232685015549, 0.858163963384821, 0.8571031196100711, 0.8529332100502677, 0.8511188672659907, 0.8402552437694113, 0.829215675525504, 0.8355467546460116, 0.8185580938861606, 0.8167081846300921, 0.8168793322309101, 0.8045400607430027, 0.7977482732402619, 0.7872533939140127, 0.7929522242245027, 0.7905419087523341, 0.7802833688493733, 0.7760692971997556, 0.7696115764502789, 0.7725890944772755, 0.7735326217858705, 0.76476231486239, 0.7662383862427276, 0.7419169380081927, 0.7581168692487656, 0.7536832018062942, 0.7437376581588048, 0.7481564663310234, 0.7391581750737992, 0.7382713916074677, 0.7370747438495532, 0.7260874681201326, 0.7300696050360249, 0.7266586384973537, 0.7118315022178472, 0.7199639012674692], "accuracy": [0.11213842034339905, 0.16774533689022064, 0.23339056968688965, 0.275260865688324, 0.32122573256492615, 0.3547748029232025, 0.38304054737091064, 0.4127592146396637, 0.42464667558670044, 0.44749704003334045, 0.46929070353507996, 0.49068814516067505, 0.5066701769828796, 0.5305771827697754, 0.5448421835899353, 0.5497292280197144, 0.5683529376983643, 0.5705983638763428, 0.5943732857704163, 0.598599910736084, 0.614317774772644, 0.6120724081993103, 0.6287148594856262, 0.6362435817718506, 0.643772304058075, 0.6513010263442993, 0.651168942451477, 0.6646413803100586, 0.6612072587013245, 0.6645092964172363, 0.668339729309082, 0.6741513609886169, 0.6778497099876404, 0.6888125538825989, 0.6857746839523315, 0.684982180595398, 0.6906617283821106, 0.6950204968452454, 0.6931713223457336, 0.6954167485237122, 0.6968696117401123, 0.6956809163093567, 0.7030775547027588, 0.703209638595581, 0.7037379741668701, 0.7038700580596924, 0.7100779414176941, 0.7124554514884949, 0.7137762308120728, 0.711530864238739, 0.718399167060852, 0.7170783281326294, 0.7131158113479614, 0.7228899598121643, 0.7177387475967407, 0.720380425453186, 0.7194558382034302, 0.7228899598121643, 0.7297582626342773, 0.7252674698829651, 0.7283053994178772, 0.7257958054542542, 0.726192057132721, 0.733060359954834, 0.7325320243835449, 0.726192057132721, 0.7372870445251465, 0.735569953918457, 0.737022876739502, 0.7391361594200134, 0.7360982894897461], "val_loss": [1.9508789607456751, 1.9304629053388322, 1.9068079675946916, 1.877807549067906, 1.8402276039123535, 1.7917650767735072, 1.7305195672171456, 1.6525264467511858, 1.561380352292742, 1.4585023607526506, 1.3532400471823556, 1.2479942866734095, 1.1535733086722237, 1.072920322418213, 1.0048129217965263, 0.9499028750828334, 0.9035948685237339, 0.8645144019808088, 0.831145031111581, 0.8031713451657977, 0.7783957549503872, 0.7581340585436139, 0.7400117942265102, 0.7225427968161446, 0.7090510640825544, 0.6958510535103934, 0.6851360968181065, 0.6741695914949689, 0.6654523100171771, 0.6575037411281041, 0.6497007438114711, 0.643910322870527, 0.6364313023430961, 0.63055191721235, 0.6223397595541817, 0.6178667034421649, 0.6124545165470668, 0.6070453269141061, 0.602909905569894, 0.5994340862546649, 0.5935249498912266, 0.5896236726215908, 0.5874236140932355, 0.5835417338779995, 0.5806105477469308, 0.5765679052897862, 0.5731794152941022, 0.5708718129566738, 0.5658671685627529, 0.5632709775652204, 0.5606145518166679, 0.5578877925872803, 0.5544890676225934, 0.5510670968464443, 0.5498730455126081, 0.5493240186146328, 0.5465907028743199, 0.5439014434814453, 0.5405648095267159, 0.5406077419008527, 0.5378594057900565, 0.5363351787839618, 0.535122105053493, 0.5316975457327706, 0.5316601480756488, 0.5273359162466866, 0.5248038939067295, 0.5238996062959943, 0.5226838929312569, 0.5198687314987183, 0.5194094862256732], "val_accuracy": [0.21166667342185974, 0.34933334589004517, 0.40299999713897705, 0.4386666715145111, 0.47066667675971985, 0.49900001287460327, 0.5363333225250244, 0.5519999861717224, 0.574999988079071, 0.5833333134651184, 0.5953333377838135, 0.6146666407585144, 0.6240000128746033, 0.6606666445732117, 0.6696666479110718, 0.6796666383743286, 0.6823333501815796, 0.6949999928474426, 0.6993333101272583, 0.7009999752044678, 0.7016666531562805, 0.7070000171661377, 0.7116666436195374, 0.7143333554267883, 0.721666693687439, 0.721666693687439, 0.7260000109672546, 0.7300000190734863, 0.7329999804496765, 0.7329999804496765, 0.734000027179718, 0.734000027179718, 0.7409999966621399, 0.7356666922569275, 0.7369999885559082, 0.7423333525657654, 0.7369999885559082, 0.7443333268165588, 0.7423333525657654, 0.7456666827201843, 0.7483333349227905, 0.7506666779518127, 0.7516666650772095, 0.7493333220481873, 0.753333330154419, 0.7523333430290222, 0.746999979019165, 0.7583333253860474, 0.7593333125114441, 0.7570000290870667, 0.7583333253860474, 0.7563333511352539, 0.7599999904632568, 0.7676666378974915, 0.7583333253860474, 0.7646666765213013, 0.765999972820282, 0.7689999938011169, 0.7676666378974915, 0.7663333415985107, 0.7716666460037231, 0.7683333158493042, 0.7730000019073486, 0.7730000019073486, 0.7726666927337646, 0.7760000228881836, 0.7760000228881836, 0.7736666798591614, 0.7706666588783264, 0.7730000019073486, 0.7746666669845581]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 8, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 28, 79, 99, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7665714025497437, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2936589989002747, 2.2736122649752972, 2.2481332666381726, 2.221801833957808, 2.18644819138718, 2.144079566206584, 2.0886332616200143, 2.0143719611780724, 1.9356137381537148, 1.8326944859430003, 1.7298198262729727, 1.6214142322004936, 1.5286789090326984, 1.448527996408752, 1.3771873094685687, 1.3165349593929028, 1.2652650395121163, 1.2263426651587466, 1.1731357575092711, 1.1448828379050726, 1.1130092570400982, 1.0916163304604403, 1.055341125794248, 1.0345340056615246, 1.016611941580948, 0.9923615341708645, 0.9783180645979344, 0.9620187906871902, 0.9534155118892127, 0.9339038375078679, 0.9307531391498892, 0.9203029112682964, 0.9021452505826919, 0.8981198676431404, 0.8748060990601735, 0.8741676361411869, 0.8581052928190693, 0.8571525582736903, 0.8529505569937049, 0.8511338158369285, 0.8402719290233511, 0.8292481638909394, 0.8355597846181464, 0.81864449131081, 0.8167267374043861, 0.8168351493963807, 0.8046157521783337, 0.7978244950081363, 0.787257479859255, 0.7930412182891688, 0.7906301732407176, 0.7803363363898079, 0.7760358799985528, 0.7696391797147611, 0.772569620196751, 0.7734789439888993, 0.7648524349753915, 0.7663752970017179, 0.7418024104426582, 0.7581784318482572, 0.7537099456806003, 0.7437131134447499, 0.7481774095499505, 0.7391983019661642, 0.738298599998067, 0.7370313522586135, 0.7260317105926369, 0.7299875282671284, 0.7266292011953537, 0.7118115070835789, 0.7200533046682733], "accuracy": [0.11213842034339905, 0.16774533689022064, 0.23352265357971191, 0.275260865688324, 0.32122573256492615, 0.3547748029232025, 0.38304054737091064, 0.41262713074684143, 0.42464667558670044, 0.44749704003334045, 0.4695548713207245, 0.4908202290534973, 0.5066701769828796, 0.5309734344482422, 0.5451063513755798, 0.5497292280197144, 0.5679566860198975, 0.570730447769165, 0.5943732857704163, 0.598599910736084, 0.6141856908798218, 0.611940324306488, 0.6287148594856262, 0.6361114978790283, 0.643772304058075, 0.6509047746658325, 0.6513010263442993, 0.6645092964172363, 0.6609430909156799, 0.6643772125244141, 0.6686038970947266, 0.6740192770957947, 0.6774534583091736, 0.6889446377754211, 0.6857746839523315, 0.6847180128097534, 0.6905296444892883, 0.6950204968452454, 0.6930392384529114, 0.6952846646308899, 0.6964733600616455, 0.6960771083831787, 0.7028133869171143, 0.7037379741668701, 0.7038700580596924, 0.7036058902740479, 0.7106062769889832, 0.7121912837028503, 0.7137762308120728, 0.7112666964530945, 0.7185312509536743, 0.7165499925613403, 0.7132478952407837, 0.7235503792762756, 0.7176066637039185, 0.720380425453186, 0.7190595865249634, 0.7231541275978088, 0.7298903465270996, 0.7256637215614319, 0.7277770638465881, 0.7257958054542542, 0.7260599732398987, 0.7327961921691895, 0.733060359954834, 0.7257958054542542, 0.7378153204917908, 0.7347774505615234, 0.7362303733825684, 0.7392682433128357, 0.7362303733825684], "val_loss": [1.9508789607456751, 1.9304629053388322, 1.9068100793021066, 1.8778102057320731, 1.840231078011649, 1.791771343776158, 1.730527605329241, 1.6525346551622664, 1.5613925116402763, 1.4585169383457728, 1.3532839502607072, 1.2480581828526087, 1.1536243983677454, 1.0729655197688512, 1.0048442908695765, 0.9499289308275495, 0.9036260332380023, 0.8645386525562831, 0.8311688899993896, 0.8032101903642926, 0.7784102644239154, 0.758144702230181, 0.7400255714144025, 0.7225483655929565, 0.7090420893260411, 0.6958806003843035, 0.6851400988442558, 0.674156631742205, 0.6654566356113979, 0.6575038943971906, 0.6497328451701573, 0.6439392396381923, 0.6364855936595372, 0.6306330646787371, 0.6223597185952323, 0.6178539991378784, 0.6124527113778251, 0.6070190157209124, 0.602887647492545, 0.5993916477475848, 0.5934825113841465, 0.5896388803209577, 0.587421144757952, 0.5835408312933785, 0.5805895839418683, 0.5765442337308612, 0.5731336389269147, 0.570903846195766, 0.5658412660871234, 0.5632547991616386, 0.5606634957449776, 0.5578886611121041, 0.5545568977083478, 0.5511218309402466, 0.5498468364988055, 0.5493652139391217, 0.5466231448309762, 0.5439236164093018, 0.5405748060771397, 0.5405870846339634, 0.5378737449645996, 0.5363579136984689, 0.5351847750799996, 0.531816976411002, 0.5317466940198626, 0.5273686647415161, 0.5247874941144671, 0.5239991460527692, 0.5227477380207607, 0.5199053628104073, 0.5194190229688372], "val_accuracy": [0.21166667342185974, 0.34933334589004517, 0.40299999713897705, 0.4386666715145111, 0.47066667675971985, 0.49900001287460327, 0.5363333225250244, 0.5519999861717224, 0.574999988079071, 0.5833333134651184, 0.5953333377838135, 0.6146666407585144, 0.6236666440963745, 0.6606666445732117, 0.6696666479110718, 0.6796666383743286, 0.6823333501815796, 0.6949999928474426, 0.6990000009536743, 0.7009999752044678, 0.7016666531562805, 0.7066666483879089, 0.7116666436195374, 0.7149999737739563, 0.722000002861023, 0.721666693687439, 0.7260000109672546, 0.7300000190734863, 0.7329999804496765, 0.7329999804496765, 0.734000027179718, 0.734000027179718, 0.7409999966621399, 0.7356666922569275, 0.7366666793823242, 0.7426666617393494, 0.737333357334137, 0.7443333268165588, 0.7426666617393494, 0.7456666827201843, 0.7490000128746033, 0.7506666779518127, 0.7516666650772095, 0.749666690826416, 0.753333330154419, 0.7523333430290222, 0.746999979019165, 0.7586666941642761, 0.7593333125114441, 0.7566666603088379, 0.7583333253860474, 0.7566666603088379, 0.7596666812896729, 0.7676666378974915, 0.7586666941642761, 0.7643333077430725, 0.765333354473114, 0.768666684627533, 0.7676666378974915, 0.7663333415985107, 0.7710000276565552, 0.7683333158493042, 0.7736666798591614, 0.7726666927337646, 0.7723333239555359, 0.7760000228881836, 0.7756666541099548, 0.7739999890327454, 0.7696666717529297, 0.7726666927337646, 0.7746666669845581]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7620000243186951, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2936589989002747, 2.2736123594483835, 2.248133307167127, 2.221800988266229, 2.1864454383469685, 2.1440770874532333, 2.0886298655329947, 2.0143659087125543, 1.935608011352671, 1.8326906105940133, 1.7298207104465886, 1.6214141673132287, 1.5286827692974827, 1.4485326741019167, 1.3771904856064978, 1.3165273852178907, 1.2652540159042815, 1.2263446485267229, 1.1731363631919738, 1.1448520891513052, 1.1129800484338221, 1.0916059034816372, 1.055336910720042, 1.034527270439011, 1.0166297684791554, 0.9923669829769787, 0.9783620701615899, 0.9619530767119714, 0.9534189315315219, 0.9339342304051371, 0.9307344668513953, 0.9202915661291848, 0.9022058597125586, 0.8980937540460303, 0.8748128578064858, 0.8741786046948306, 0.8581655500366893, 0.8571808692045719, 0.8528843271009611, 0.8511294022039132, 0.8401869780997464, 0.8293084937977265, 0.8354994986492172, 0.8185766859455131, 0.8166941210436641, 0.8168856557003495, 0.8045305397847168, 0.7977597718430296, 0.7872493400581289, 0.7930085605413623, 0.7905333476012425, 0.7802869756507395, 0.7760299589057341, 0.7696341498495487, 0.7726276332219484, 0.7734323341880162, 0.7649199100076688, 0.7663919573305085, 0.7416956269462363], "accuracy": [0.11213842034339905, 0.16774533689022064, 0.23339056968688965, 0.275260865688324, 0.3214899003505707, 0.3547748029232025, 0.38304054737091064, 0.4127592146396637, 0.42464667558670044, 0.4473649561405182, 0.46929070353507996, 0.4908202290534973, 0.5066701769828796, 0.5305771827697754, 0.5449742674827576, 0.5498613119125366, 0.5678246021270752, 0.570730447769165, 0.594241201877594, 0.598599910736084, 0.6145819425582886, 0.611940324306488, 0.6284506916999817, 0.6366398334503174, 0.6440364718437195, 0.6509047746658325, 0.6513010263442993, 0.6645092964172363, 0.6609430909156799, 0.6643772125244141, 0.6687359809875488, 0.6741513609886169, 0.6775855422019958, 0.6886804699897766, 0.6857746839523315, 0.6847180128097534, 0.6906617283821106, 0.6950204968452454, 0.6931713223457336, 0.6947563290596008, 0.6968696117401123, 0.6959450244903564, 0.7029454708099365, 0.7038700580596924, 0.7033417224884033, 0.7042662501335144, 0.7111346125602722, 0.7124554514884949, 0.7141724824905396, 0.7112666964530945, 0.718399167060852, 0.7172104120254517, 0.713379979133606, 0.722757875919342, 0.717870831489563, 0.7201162576675415, 0.7191916704177856, 0.7228899598121643, 0.7301545143127441], "val_loss": [1.9508789607456751, 1.9304632459368025, 1.9068093981061662, 1.8778090476989746, 1.84022433417184, 1.7917682783944267, 1.7305236543927873, 1.652529512132917, 1.561394214630127, 1.4585202762058802, 1.3532875605991908, 1.2480598177228654, 1.1536244664873396, 1.0729646342141288, 1.0048541682107108, 0.9499221529279437, 0.9036080156053815, 0.8645100252968925, 0.8311328036444527, 0.803163971219744, 0.7783603497913906, 0.7581034047263009, 0.7400075367518834, 0.7225099631718227, 0.7090107372828892, 0.6958544424601963, 0.6851154054914202, 0.6741635799407959, 0.6654395035334996, 0.6574752841676984, 0.6496902874537877, 0.6438757351466587, 0.6364520106996808, 0.6305747713361468, 0.62235769203731, 0.6178529262542725, 0.612460902759007, 0.6070408821105957, 0.6028820957456317, 0.5994168519973755, 0.5935084649494716, 0.5896485533033099, 0.5874443905694144, 0.5835211958203997, 0.5805449315479824, 0.5765107188905988, 0.5731404849461147, 0.5708442415509906, 0.5658626215798515, 0.5633186272212437, 0.5606339148112706, 0.5578937360218593, 0.554520879473005, 0.5510770423071725, 0.5498668295996529, 0.549389226096017, 0.5466846908841815, 0.5439313479832241, 0.5406837633677891], "val_accuracy": [0.21166667342185974, 0.34933334589004517, 0.40299999713897705, 0.4386666715145111, 0.47066667675971985, 0.49900001287460327, 0.5363333225250244, 0.5519999861717224, 0.574999988079071, 0.5833333134651184, 0.5953333377838135, 0.6146666407585144, 0.6236666440963745, 0.6603333353996277, 0.6696666479110718, 0.6796666383743286, 0.6819999814033508, 0.6949999928474426, 0.6990000009536743, 0.7013333439826965, 0.7016666531562805, 0.7070000171661377, 0.7110000252723694, 0.7139999866485596, 0.721666693687439, 0.721666693687439, 0.7256666421890259, 0.7300000190734863, 0.7329999804496765, 0.7329999804496765, 0.734000027179718, 0.734000027179718, 0.7406666874885559, 0.7356666922569275, 0.7369999885559082, 0.7426666617393494, 0.7369999885559082, 0.7436666488647461, 0.7423333525657654, 0.7456666827201843, 0.7480000257492065, 0.7506666779518127, 0.7516666650772095, 0.7490000128746033, 0.7536666393280029, 0.7523333430290222, 0.746666669845581, 0.7583333253860474, 0.7590000033378601, 0.7566666603088379, 0.7586666941642761, 0.7563333511352539, 0.7599999904632568, 0.7680000066757202, 0.7586666941642761, 0.7636666893959045, 0.765333354473114, 0.7680000066757202, 0.7663333415985107]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 1, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [75, 28, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.39314284920692444, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.532554477008421, 2.175029488382023, 2.295094780430046, 2.288414838118497, 2.304456700076989, 2.3031393266735045], "accuracy": [0.19984149932861328, 0.20684190094470978, 0.12191256135702133, 0.16853784024715424, 0.09866596013307571, 0.09787346422672272], "val_loss": [1.951908792768206, 1.9746248381478446, 1.8280284064156669, 1.975325448172433, 1.9737940515790666, 1.9736119679042272], "val_accuracy": [0.36500000953674316, 0.10433333367109299, 0.32899999618530273, 0.10066666454076767, 0.10066666454076767, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 3, 2, 0, 2, 3, 1], [40, 28, 5, 39, 41, 79, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.39228570461273193, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.532601248555101, 2.2913593429978087, 2.304847738069235, 2.303296936879368, 2.3031789754848155, 2.302832468452549], "accuracy": [0.19878484308719635, 0.2122572958469391, 0.10051512718200684, 0.09760929644107819, 0.09734513610601425, 0.09325055778026581], "val_loss": [1.9519307272774833, 1.975895541054862, 1.9737879889351981, 1.973593030657087, 1.9736193929399763, 1.9735790661403112], "val_accuracy": [0.4129999876022339, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 6, 0, 6, 1, 1, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 28, 63, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3888571560382843, "mapping_values": [1, 40, 40, 25, 15, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5325325083943593, 2.2631076124791125, 2.304316386444662, 2.3033583783643623, 2.303152627822761, 2.302981819033922], "accuracy": [0.19944524765014648, 0.18636904656887054, 0.09642054885625839, 0.09655263274908066, 0.09734513610601425, 0.08942015469074249], "val_loss": [1.9517297744750977, 1.975264413016183, 1.9737828118460519, 1.9736267498561315, 1.973663398197719, 1.973560060773577], "val_accuracy": [0.382999986410141, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.12266666442155838, 0.10433333367109299]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 3, 4, 8, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 29, 79, 99, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.311751733791748, 2.338423252987462, 2.3680736698321443, 2.415361822651299, 2.4911430244826214, 2.6614293291300766, 3.8251713772396982, 280576170553346.03, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.04200237616896629, 0.022322017699480057, 0.01241579744964838, 0.013868709094822407, 0.012547880411148071, 0.042926959693431854, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9925477164132255, 2.018850190298898, 2.0533692496163503, 2.104859011513846, 2.1971558162144254, 2.4622847012111118, 8.414375032697405, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.004333333112299442, 0.004333333112299442, 0.004666666500270367, 0.00566666666418314, 0.009999999776482582, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [27, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 1, 2, 1, 0], [42, 5], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 7, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(grad), tf.math.add(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, alpha), tf.math.add(beta, beta)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [16.256729741941086, 577739173.7692256, 2.365565568685003e+16, 1.049489027585619e+24, 4.073157334306502e+31, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1190.174839564732, 48988727588.57143, 2.025360263210561e+18, 8.373533436153046e+25, 3.461905244288897e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 9, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 0, 2, 2, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [9, 28, 55, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 4, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 3, 2, 0, 2], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [6, 4], [4, 0, 1, 5, 3, 4], [69], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad))))), tf.math.pow(tf.math.pow(grad, beta), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 0, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 1, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 37, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302849825047987, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 7, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [1, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [86], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.516784462804697, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19957733154296875, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.7444272722516745, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 9, 0, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [50, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 2, 1, 5, 3, 4], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030909918491727, 2.30645500651566, 2.305784532406925, 2.3089939434735247, 2.311644993910401, 2.3155398835532495, 2.3193461197147816, 2.3241962783797354, 2.334433784479825, 2.3462986667410353, 2.386578793349976, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.08109892904758453, 0.08215559273958206, 0.0820235088467598, 0.08189142495393753, 0.08189142495393753, 0.07198520749807358, 0.07330603897571564, 0.07687227427959442, 0.07660810649394989, 0.07938185334205627, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9723076139177596, 1.974339144570487, 1.9761578696114677, 1.9781752995082311, 1.9806528772626604, 1.9833293642316545, 1.9866065297807967, 1.9907749720982142, 1.9980034146990096, 2.012501989092146, 2.1025428771972656, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03166666626930237, 0.02500000037252903, 0.023666666820645332, 0.02199999988079071, 0.0273333340883255, 0.03866666555404663, 0.04800000041723251, 0.06966666877269745, 0.0833333358168602, 0.0989999994635582, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 6, 5, 2, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [1, 28, 67, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [14], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [4, 4, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 3, 2, 3, 0, 0, 0], [16, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 10, 5, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(sigma, tf.math.square(sigma)), tf.math.subtract(beta, tf.math.subtract(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 5, 3, 1, 2, 3, 9, 5, 3, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 0, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 0, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.07457143068313599, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.957701710567593, 2.3978721519518587, 2.319104268770995, 2.2371417500512663, 2.196970659177128, 3.3746705513116377, NaN, NaN, NaN, NaN], "accuracy": [0.1706511676311493, 0.09906221181154251, 0.11821424216032028, 0.14793290197849274, 0.17276449501514435, 0.16999074816703796, 0.10738343745470047, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0397136551993236, 1.985738686152867, 1.9314231872558594, 1.8252819606236048, 1.7574646132332938, 120.48377772739956, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.0989999994635582, 0.19966666400432587, 0.22433333098888397, 0.09433333575725555, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [6, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 40, 40, 24, 16, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025212715551002, 2.303698171635251, 2.301135969420214, 2.3020922073582932, 2.301806529814368, 2.3023791222792136], "accuracy": [0.08968432247638702, 0.0878351628780365, 0.08955223858356476, 0.08875974267721176, 0.09192973375320435, 0.09166556596755981], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 79, 35, 39, 41, 36, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 40, 40, 25, 15, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), tf.math.square(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025212715551002, 2.303698171635251, 2.301135969420214, 2.3020922073582932, 2.301806529814368, 2.3023791222792136], "accuracy": [0.08968432247638702, 0.0878351628780365, 0.08955223858356476, 0.08875974267721176, 0.09192973375320435, 0.09166556596755981], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 9, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 0, 3, 2, 2, 2, 4, 1], [42, 9], [1, 0, 0, 0, 1], [0, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 6, 6, 3, 3, 1, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025212715551002, 2.303698171635251, 2.301135969420214, 2.3020922073582932, 2.301806529814368, 2.3023791222792136], "accuracy": [0.08968432247638702, 0.0878351628780365, 0.08955223858356476, 0.08875974267721176, 0.09192973375320435, 0.09166556596755981], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 40, 40, 24, 16, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025212715551002, 2.303698171635251, 2.301135969420214, 2.3020922073582932, 2.301806529814368, 2.3023791222792136], "accuracy": [0.08968432247638702, 0.0878351628780365, 0.08955223858356476, 0.08875974267721176, 0.09192973375320435, 0.09166556596755981], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 2, 2, 5, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 2, 0, 0, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 34, 34, 19, 15, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))))), grad))))))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302521222082694, 2.303697933216672, 2.301135699510606, 2.302091919467308, 2.3018059360510197, 2.3023785509689687], "accuracy": [0.08968432247638702, 0.0878351628780365, 0.08955223858356476, 0.08875974267721176, 0.09192973375320435, 0.09166556596755981], "val_loss": [1.9710067340305872, 1.9710065977913993, 1.9710064615522112, 1.9710063934326172, 1.9710063253130232, 1.971006257193429], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]