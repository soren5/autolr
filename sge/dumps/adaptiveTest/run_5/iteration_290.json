[{"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 47, 85, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8222857117652893, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), alpha), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.033012639419703, 1.7230869121145909, 1.3049070831177148, 1.0591385059069491, 0.9820168364270015, 0.8969219687072876, 0.8048725510868556, 0.7902319839979758, 0.7563077688941456, 0.6952767315762406, 0.6898081908451489, 0.6925273424110644, 0.6515774731670058, 0.6432466734323236, 0.6341160643432969, 0.6156687403887239, 0.5997151132776847, 0.6118982491665166, 0.5903985661097395, 0.5532810922941874, 0.5642282015942564, 0.5458777938394845, 0.5259810540268623, 0.5171620626420298, 0.5046234292801991, 0.5074407806832321, 0.4897005729482568, 0.5103115609466533, 0.5010241875165427, 0.48760541340599695, 0.4747265327474334, 0.43508696496258353, 0.47118149415345445, 0.4488029158771975, 0.47127754300372193, 0.4508453348388037, 0.43897800324867275, 0.42386081619521554], "accuracy": [0.31382909417152405, 0.40285298228263855, 0.5235767960548401, 0.6103553175926208, 0.6243560910224915, 0.6516972780227661, 0.6903975605964661, 0.6956809163093567, 0.7100779414176941, 0.724210798740387, 0.7302865982055664, 0.7268524765968323, 0.7503632307052612, 0.7457403540611267, 0.7491744756698608, 0.7607977986335754, 0.7696473598480225, 0.7597411274909973, 0.778232753276825, 0.7795535326004028, 0.7824593782424927, 0.7893276810646057, 0.7994980812072754, 0.7979130744934082, 0.8086118102073669, 0.8042530417442322, 0.8082155585289001, 0.8055738806724548, 0.8090080618858337, 0.8084797263145447, 0.8202351331710815, 0.8297450542449951, 0.8216879963874817, 0.8314621448516846, 0.8271034359931946, 0.8261788487434387, 0.8337075710296631, 0.8387266993522644], "val_loss": [1.652221577508109, 1.063983644757952, 0.9640768936702183, 0.8036900929042271, 0.7495858158384051, 0.649889520236424, 0.6620219094412667, 0.6231723683221, 0.5588153600692749, 0.536238397870745, 0.5203550713402885, 0.5459433112825666, 0.49628354821886334, 0.4945857184273856, 0.5063601221357074, 0.48462603773389545, 0.519593494279044, 0.45548910754067556, 0.4635041781834194, 0.45541065079825266, 0.4285794751984732, 0.4517326184681484, 0.4289296439715794, 0.41247038330350605, 0.4302719065121242, 0.4398714474269322, 0.4134527104241507, 0.4259033373423985, 0.4118424228259495, 0.4113521916525705, 0.3963872364589146, 0.3805068816457476, 0.3793825762612479, 0.3907891426767622, 0.37067605767931255, 0.39912240845816477, 0.3835377778325762, 0.37262195348739624], "val_accuracy": [0.35199999809265137, 0.5883333086967468, 0.6016666889190674, 0.5993333458900452, 0.6433333158493042, 0.7013333439826965, 0.7036666870117188, 0.7070000171661377, 0.7350000143051147, 0.7450000047683716, 0.7586666941642761, 0.7516666650772095, 0.7720000147819519, 0.750333309173584, 0.7563333511352539, 0.7596666812896729, 0.7483333349227905, 0.7979999780654907, 0.7673333287239075, 0.7996666431427002, 0.7963333129882812, 0.7903333306312561, 0.8059999942779541, 0.8190000057220459, 0.8083333373069763, 0.7996666431427002, 0.8133333325386047, 0.809333324432373, 0.8203333616256714, 0.8203333616256714, 0.8196666836738586, 0.8389999866485596, 0.8426666855812073, 0.8323333263397217, 0.8399999737739563, 0.824999988079071, 0.8293333053588867, 0.8383333086967468]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 47, 26, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8105714321136475, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.032889858149991, 1.7251078150354562, 1.306284429532284, 1.0663311530286925, 0.9683269545890557, 0.8791872922140672, 0.8039014982178919, 0.7712534981365328, 0.7746828825655488, 0.717166560515909, 0.7089192352715642, 0.6518469234625142, 0.6475480358755867, 0.6728499164560515, 0.6169218376028918, 0.6238288274766778, 0.5946600556357851, 0.5674233007755388, 0.5737850741073519, 0.5997027793045231, 0.575174711297264, 0.5336451296478198, 0.526675429011632, 0.5211815372544383, 0.5308254423741069, 0.5231108247107991, 0.5214953421365474], "accuracy": [0.3139611780643463, 0.4017963409423828, 0.5200105905532837, 0.6028265953063965, 0.6289790272712708, 0.6577730774879456, 0.694360077381134, 0.7094175219535828, 0.6997754573822021, 0.7145687341690063, 0.7210407853126526, 0.7474573850631714, 0.7475894689559937, 0.7453441023826599, 0.7638356685638428, 0.7537974119186401, 0.7725531458854675, 0.7829877138137817, 0.7783648371696472, 0.7666094303131104, 0.780610203742981, 0.7980451583862305, 0.7964601516723633, 0.7991018295288086, 0.7944789528846741, 0.802271842956543, 0.8054417967796326], "val_loss": [1.6495938301086426, 1.0379000391278947, 1.0497064590454102, 0.8054749284471784, 0.7234296798706055, 0.6768898453031268, 0.6462194068091256, 0.5918896538870675, 0.5807041270392281, 0.562576447214399, 0.5266470738819667, 0.5219544512884957, 0.5261932781764439, 0.4812038966587612, 0.4858129024505615, 0.4651974950517927, 0.4675253629684448, 0.47530719212123324, 0.4664380890982492, 0.48107261317116873, 0.4476753388132368, 0.4126171980585371, 0.46253318446023123, 0.42356282472610474, 0.43556770256587435, 0.43870857783726286, 0.4016846077782767], "val_accuracy": [0.3513333201408386, 0.5833333134651184, 0.5709999799728394, 0.6193333268165588, 0.6633333563804626, 0.6846666932106018, 0.7206666469573975, 0.7453333139419556, 0.7250000238418579, 0.731333315372467, 0.7620000243186951, 0.7649999856948853, 0.7586666941642761, 0.7703333497047424, 0.7730000019073486, 0.7823333144187927, 0.7846666574478149, 0.7743333578109741, 0.7799999713897705, 0.781000018119812, 0.7933333516120911, 0.8206666707992554, 0.7856666445732117, 0.8046666383743286, 0.8059999942779541, 0.7993333339691162, 0.8206666707992554]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 4, 1, 1, 9, 9, 4, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 1, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 67, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7822856903076172, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), alpha), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0475250087346795, 1.5210754088816343, 1.2592773243672717, 1.0404257204050495, 0.8957196884009785, 0.8503294021398983, 0.8064715198285828, 0.7734320938169933, 0.7564946347223911, 0.7128370686875453, 0.6889544777299561, 0.6648583456179122, 0.6453852315132313, 0.6328037364167025, 0.619472692159535, 0.5869949133782544, 0.587517496939931, 0.5952602117572714, 0.5810552169980311, 0.5507930120016055, 0.5565477183245869], "accuracy": [0.31845200061798096, 0.4563465714454651, 0.5517104864120483, 0.6087703108787537, 0.6712455153465271, 0.6785101294517517, 0.6931713223457336, 0.7082287669181824, 0.7260599732398987, 0.7260599732398987, 0.7294940948486328, 0.7417778372764587, 0.7524765729904175, 0.7728173136711121, 0.7627789974212646, 0.7784969210624695, 0.7749306559562683, 0.7728173136711121, 0.7759873270988464, 0.7918372750282288, 0.7989697456359863], "val_loss": [1.3226422922951835, 0.982271841594151, 0.7598370824541364, 0.7432366950171334, 0.6862841503960746, 0.6457152536937169, 0.5747367824826922, 0.6024926219667707, 0.5806679385049003, 0.5632153749465942, 0.5561763899666923, 0.5105924436024257, 0.5171773433685303, 0.5085853338241577, 0.47316084589276997, 0.4566924912588937, 0.4747706821986607, 0.45206924847194124, 0.4733469145638602, 0.4561372995376587, 0.44232395717075895], "val_accuracy": [0.4423333406448364, 0.5756666660308838, 0.6539999842643738, 0.6743333339691162, 0.6859999895095825, 0.7059999704360962, 0.7260000109672546, 0.7416666746139526, 0.7356666922569275, 0.7273333072662354, 0.7403333187103271, 0.750333309173584, 0.7713333368301392, 0.762666642665863, 0.7713333368301392, 0.8029999732971191, 0.7786666750907898, 0.7916666865348816, 0.7713333368301392, 0.8026666641235352, 0.793666660785675]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 4, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5988571643829346, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026840315518866, 2.298907318702227, 2.2976142349590827, 2.2937578819588804, 2.2916987484566778, 2.287542708939439, 2.288472354278242, 2.2842474963450554, 2.2815576874742165, 2.2797085012915335, 2.276684417291293, 2.2751485502179807, 2.2737277025213456, 2.2713222694812654, 2.26656888589694, 2.265188460147864, 2.2614698379802793, 2.2598997314986207, 2.2579739816184716, 2.2561875992856715, 2.2533111821359664, 2.250330787497961, 2.2477928624098342, 2.244954733627505, 2.2413711093750925, 2.2385541210242583, 2.2371950240545204, 2.232621384429075, 2.228532465457475, 2.2250538627784233, 2.2228110020171066, 2.2225390919101016, 2.217025453293911, 2.2118650959971213, 2.209535222751999, 2.205253496398039, 2.1993848138150915, 2.198778630688584, 2.1910430347095975, 2.1896383209692063, 2.184073085845375, 2.180120991111164, 2.174961197661245, 2.1698034601031417, 2.165142935186156, 2.160721611652266, 2.155836204197019, 2.1499900665139604, 2.1458735461594673, 2.1366916558116165, 2.1340085461533, 2.126619702049329, 2.1226909334759405, 2.116951843058161, 2.109684876573084, 2.1015277174343883, 2.094219053961487, 2.089422269409768, 2.082070703094567, 2.0756237930420793, 2.0662453029417422, 2.0593755478872176, 2.049926485446592, 2.040041418123428, 2.0335103561692094, 2.0274908451623985, 2.0183706512824027, 2.008775939668694, 1.9980938690622894, 1.9918136378131948, 1.9836974896302613, 1.9713863182093063, 1.9632072908971854, 1.9503479251583191, 1.9358714085370952, 1.9311222072448146, 1.9171986358985453, 1.910598607268615, 1.8985943498707183, 1.891498461501505, 1.8760708953726166, 1.8684794804549503, 1.8538381898596838, 1.845943087647226, 1.8337532064587512, 1.8231268006072714, 1.8095036412683603, 1.799580020974451, 1.789413233333024, 1.7756298973323836, 1.7600588262388184, 1.7545275605979802, 1.7390415497176352, 1.7269150523650663, 1.7198010902394707, 1.7035067072791383, 1.6877569656771376, 1.680071951328661, 1.672664126621151, 1.6615834493426724], "accuracy": [0.09166556596755981, 0.09655263274908066, 0.10368511080741882, 0.11557257920503616, 0.12072381377220154, 0.12455421686172485, 0.12772421538829803, 0.13591335713863373, 0.149649977684021, 0.15057456493377686, 0.16100911796092987, 0.15995244681835175, 0.1678774207830429, 0.17593449354171753, 0.18663319945335388, 0.18544445931911469, 0.20182274281978607, 0.20036983489990234, 0.21014396846294403, 0.21529521048069, 0.21357811987400055, 0.22572976350784302, 0.2339189052581787, 0.23656055331230164, 0.23959846794605255, 0.2479196935892105, 0.2510896921157837, 0.2639017403125763, 0.2690529525279999, 0.2728833854198456, 0.27961960434913635, 0.27578920125961304, 0.2880729138851166, 0.2926958203315735, 0.2938845455646515, 0.3027341067790985, 0.3093382716178894, 0.3065645098686218, 0.3167349100112915, 0.3159424066543579, 0.3144895136356354, 0.3213578164577484, 0.3331131935119629, 0.33760401606559753, 0.33258485794067383, 0.334169864654541, 0.3457931578159332, 0.34922730922698975, 0.3494914770126343, 0.3619072735309601, 0.3597939610481262, 0.3593977093696594, 0.36322811245918274, 0.3615110218524933, 0.3641526997089386, 0.37947431206703186, 0.3800026476383209, 0.38026681542396545, 0.37683266401290894, 0.3797384798526764, 0.3933430314064026, 0.3941355049610138, 0.3995509147644043, 0.40562674403190613, 0.4002113342285156, 0.39902257919311523, 0.40549466013908386, 0.4027208983898163, 0.4189670979976654, 0.4130233824253082, 0.416589617729187, 0.41909918189048767, 0.4227975308895111, 0.42068418860435486, 0.43626996874809265, 0.43508124351501465, 0.4294016659259796, 0.4352133274078369, 0.44287413358688354, 0.4301941692829132, 0.43587371706962585, 0.4410249590873718, 0.4465724527835846, 0.4445911943912506, 0.4447232782840729, 0.4461762011051178, 0.4542332589626312, 0.44947826862335205, 0.45872408151626587, 0.4613657295703888, 0.4655923843383789, 0.4682340621948242, 0.4683661460876465, 0.47351735830307007, 0.47206446528434753, 0.469819039106369, 0.4822348356246948, 0.48131024837493896, 0.4827631711959839, 0.48408401012420654], "val_loss": [1.968742847442627, 1.9665087972368513, 1.9642691612243652, 1.9620446477617537, 1.9598380497523717, 1.9576088360377721, 1.9554292815072196, 1.9532171658107214, 1.9510015078953333, 1.9487682751246862, 1.9465325900486536, 1.9442579405648368, 1.9419798851013184, 1.9396801676068987, 1.9373329707554408, 1.9349865913391113, 1.9325758389064245, 1.9301265989031111, 1.9276727267674036, 1.925140108380999, 1.9225924355643136, 1.919994626726423, 1.9173566954476493, 1.9146507126944405, 1.911879539489746, 1.9090538024902344, 1.9061788831438338, 1.9031974247523717, 1.9001431465148926, 1.8970218385968889, 1.8938294819423132, 1.8905862399509974, 1.8872520583016532, 1.8838108607700892, 1.8802876472473145, 1.8766566685267858, 1.8728782790047782, 1.8690873554774694, 1.8650699343000139, 1.8610288756234306, 1.8568445614406042, 1.8525144032069616, 1.8480668749128069, 1.8434787477765764, 1.8387532915387834, 1.833899770464216, 1.8289496558053153, 1.82383394241333, 1.8185806274414062, 1.8131166866847448, 1.8075457981654577, 1.8017466408865792, 1.7958673068455286, 1.7898462159293038, 1.783646583557129, 1.7772175243922643, 1.7706035886492049, 1.7638670376368932, 1.7569306237357003, 1.7498577662876673, 1.7425573212759835, 1.7351219313485282, 1.7274460111345564, 1.7194931166512626, 1.711439779826573, 1.703214236668178, 1.6948858329227992, 1.6862656729561942, 1.6774093082972936, 1.668480396270752, 1.6593300615038191, 1.649914128439767, 1.6404362746647425, 1.630631651197161, 1.620537621634347, 1.610355990273612, 1.6000532422746931, 1.5896210329873222, 1.5790345668792725, 1.5683652332850866, 1.557469265801566, 1.546471697943551, 1.535344430378505, 1.5241589546203613, 1.5128734452383858, 1.5014301708766393, 1.4899749415261405, 1.4784010819026403, 1.466817923954555, 1.4551450525011336, 1.4433649267469133, 1.4316158635275704, 1.4197616236550468, 1.4079402855464391, 1.3961705480303084, 1.3841829640524728, 1.3722595487322127, 1.360379593712943, 1.3485941886901855, 1.3367876325334822], "val_accuracy": [0.05233333259820938, 0.06533333659172058, 0.08233333379030228, 0.10133333504199982, 0.11800000071525574, 0.14033333957195282, 0.16766667366027832, 0.1889999955892563, 0.21199999749660492, 0.23233333230018616, 0.2486666738986969, 0.26766666769981384, 0.2863333225250244, 0.3016666769981384, 0.31700000166893005, 0.32899999618530273, 0.33666667342185974, 0.34566667675971985, 0.35466668009757996, 0.3623333275318146, 0.3683333396911621, 0.37166666984558105, 0.3786666691303253, 0.38333332538604736, 0.3876666724681854, 0.39100000262260437, 0.3943333327770233, 0.40166667103767395, 0.40533334016799927, 0.4099999964237213, 0.4143333435058594, 0.4183333218097687, 0.4233333468437195, 0.4266666769981384, 0.43066665530204773, 0.43566668033599854, 0.4403333365917206, 0.44333332777023315, 0.445333331823349, 0.4466666579246521, 0.44999998807907104, 0.45266667008399963, 0.45266667008399963, 0.4586666524410248, 0.46133333444595337, 0.46399998664855957, 0.4676666557788849, 0.4699999988079071, 0.47466665506362915, 0.4779999852180481, 0.4806666672229767, 0.484333336353302, 0.4906666576862335, 0.4946666657924652, 0.49799999594688416, 0.5009999871253967, 0.5023333430290222, 0.5096666812896729, 0.5113333463668823, 0.5163333415985107, 0.5213333368301392, 0.5243333578109741, 0.5266666412353516, 0.528333306312561, 0.5316666960716248, 0.5350000262260437, 0.5360000133514404, 0.5386666655540466, 0.5396666526794434, 0.5419999957084656, 0.5453333258628845, 0.5490000247955322, 0.5516666769981384, 0.5536666512489319, 0.5553333163261414, 0.5566666722297668, 0.5580000281333923, 0.5613333582878113, 0.5633333325386047, 0.5649999976158142, 0.5676666498184204, 0.5706666707992554, 0.5720000267028809, 0.5743333101272583, 0.5753333568572998, 0.57833331823349, 0.5809999704360962, 0.5826666951179504, 0.5830000042915344, 0.5833333134651184, 0.5853333473205566, 0.5856666564941406, 0.5873333215713501, 0.5903333425521851, 0.5916666388511658, 0.5920000076293945, 0.5929999947547913, 0.593999981880188, 0.5946666598320007, 0.5950000286102295]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [98, 68, 85, 75, 19, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5988571643829346, "mapping_values": [1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026840630429155, 2.298907318702227, 2.297614266450111, 2.2937578819588804, 2.291698716965649, 2.2875427269208166, 2.288472322787213, 2.284247559327113, 2.2815577189652454, 2.2797085057632596, 2.276684385800264, 2.275148518726952, 2.2737276845399683, 2.271322206499208, 2.2665689173879686, 2.265188410675458, 2.2614699009623367, 2.259899780971027, 2.2579739816184716, 2.2561875677946426, 2.2533111191539086, 2.250330787497961, 2.247792925391892, 2.2449547291557788, 2.2413710149020063, 2.2385541884780418, 2.237195087036578, 2.2326214789021614, 2.228532640893997, 2.2250539122508295, 2.2228111459625994, 2.2225392358555944, 2.217025421802882, 2.2118650780157436, 2.20953519126097, 2.205253482888388, 2.199384714870279, 2.198778531743771, 2.1910430347095975, 2.1896380870223533, 2.184073022863317, 2.1801208606753226, 2.17496111669781, 2.1698033206293754, 2.1651428407130697, 2.1607213282330067, 2.1558357903419187, 2.1499897201126434, 2.145873226777453, 2.136691349939254, 2.1340082582623148, 2.1266192926659544, 2.122690569093246, 2.116951379730654, 2.1096844942090125, 2.1015274025241, 2.094218892034617, 2.089422107482898, 2.0820705321297717, 2.075623667077964, 2.0662449970693793, 2.059375259996232, 2.049925914136347, 2.0400409817207508, 2.033509879332051, 2.0274901793790674, 2.0183700890100833, 2.008775476341187, 1.998093398979957, 1.9918132104484427, 1.9836970802468867, 1.9713860190445327, 1.9632070907244608, 1.9503475023125298, 1.9358711071364585, 1.931121905844178, 1.9171983659889373, 1.9105983261324553, 1.8985941721983337, 1.891498270319469, 1.876070944845023, 1.86847950523839, 1.8538383247672512, 1.8459430741375746, 1.833752943303969, 1.8231268590703664, 1.8095031329401732, 1.7995795351466042, 1.7894127721941435, 1.7756298905775578, 1.760058682246089, 1.754527834979314, 1.7390417859003513, 1.726915194074696, 1.7198009643698287, 1.7035075238100243, 1.6877570871695269, 1.6800727767557626, 1.672664994907543, 1.6615847673996833], "accuracy": [0.09166556596755981, 0.09655263274908066, 0.10368511080741882, 0.11557257920503616, 0.12072381377220154, 0.12455421686172485, 0.12772421538829803, 0.13591335713863373, 0.149649977684021, 0.15057456493377686, 0.16100911796092987, 0.15995244681835175, 0.1678774207830429, 0.17593449354171753, 0.18663319945335388, 0.18544445931911469, 0.20182274281978607, 0.20036983489990234, 0.21014396846294403, 0.21529521048069, 0.21357811987400055, 0.22572976350784302, 0.2339189052581787, 0.23656055331230164, 0.23959846794605255, 0.2479196935892105, 0.2510896921157837, 0.2639017403125763, 0.2690529525279999, 0.2728833854198456, 0.27961960434913635, 0.27578920125961304, 0.2880729138851166, 0.2926958203315735, 0.2938845455646515, 0.3027341067790985, 0.3093382716178894, 0.3065645098686218, 0.3167349100112915, 0.3159424066543579, 0.3144895136356354, 0.3213578164577484, 0.3331131935119629, 0.33760401606559753, 0.33258485794067383, 0.334169864654541, 0.3457931578159332, 0.34922730922698975, 0.3494914770126343, 0.3619072735309601, 0.35966187715530396, 0.35926562547683716, 0.36322811245918274, 0.3615110218524933, 0.3641526997089386, 0.37947431206703186, 0.3800026476383209, 0.38026681542396545, 0.37683266401290894, 0.3797384798526764, 0.3933430314064026, 0.3941355049610138, 0.3995509147644043, 0.40562674403190613, 0.4002113342285156, 0.39902257919311523, 0.40549466013908386, 0.4027208983898163, 0.4189670979976654, 0.4130233824253082, 0.416589617729187, 0.41909918189048767, 0.4227975308895111, 0.42068418860435486, 0.43626996874809265, 0.43508124351501465, 0.4294016659259796, 0.4352133274078369, 0.44287413358688354, 0.4301941692829132, 0.43587371706962585, 0.4410249590873718, 0.4465724527835846, 0.4445911943912506, 0.4447232782840729, 0.4461762011051178, 0.4542332589626312, 0.44947826862335205, 0.45872408151626587, 0.4613657295703888, 0.4655923843383789, 0.46810197830200195, 0.4683661460876465, 0.47351735830307007, 0.47206446528434753, 0.469819039106369, 0.4822348356246948, 0.48131024837493896, 0.4827631711959839, 0.4842160940170288], "val_loss": [1.968742847442627, 1.9665087972368513, 1.9642691612243652, 1.9620446477617537, 1.9598381178719657, 1.957608767918178, 1.9554292815072196, 1.9532171658107214, 1.9510015078953333, 1.948768207005092, 1.9465325900486536, 1.9442579405648368, 1.9419798851013184, 1.9396801676068987, 1.9373329707554408, 1.9349865913391113, 1.9325758389064245, 1.9301265989031111, 1.9276726586478097, 1.9251398359026228, 1.9225925036839075, 1.919994558606829, 1.9173567635672433, 1.9146507808140345, 1.911879539489746, 1.9090538024902344, 1.9061789512634277, 1.9031977653503418, 1.9001434189932687, 1.8970218385968889, 1.893829618181501, 1.8905861718314034, 1.8872521945408411, 1.8838107245309013, 1.8802876472473145, 1.8766565322875977, 1.8728782790047782, 1.8690873554774694, 1.865069798060826, 1.8610287393842424, 1.8568445614406042, 1.8525143350873674, 1.8480666705540247, 1.8434785434177943, 1.8387530871800013, 1.8338994298662459, 1.8289494514465332, 1.823833806174142, 1.8185804230826241, 1.8131163460867745, 1.8075453894478934, 1.801746436527797, 1.7958671024867467, 1.7898458753313338, 1.7836464473179408, 1.7772171156747, 1.7706034524100167, 1.763866901397705, 1.7569304193769182, 1.7498578344072615, 1.7425569806780135, 1.73512179510934, 1.7274457386561803, 1.7194927079336983, 1.7114393029894148, 1.7032136235918318, 1.69488525390625, 1.686265196119036, 1.6774086952209473, 1.6684797491346086, 1.6593294824872697, 1.6499135494232178, 1.6404355934688024, 1.6306310721806117, 1.6205370426177979, 1.6103555815560477, 1.600052799497332, 1.589620556150164, 1.5790340219225203, 1.5683646542685372, 1.5574689252035958, 1.5464715276445662, 1.535344021660941, 1.5241584437234061, 1.5128726959228516, 1.501429455620902, 1.489973817552839, 1.4783995492117745, 1.4668172427586146, 1.4551444053649902, 1.4433645520891463, 1.4316155229296004, 1.4197611468178886, 1.4079393659319197, 1.396169934953962, 1.3841825893947057, 1.3722592762538366, 1.360379423413958, 1.3485940183912004, 1.336787257875715], "val_accuracy": [0.05233333259820938, 0.06533333659172058, 0.08233333379030228, 0.10133333504199982, 0.11800000071525574, 0.14033333957195282, 0.16766667366027832, 0.1889999955892563, 0.21199999749660492, 0.23233333230018616, 0.2486666738986969, 0.26766666769981384, 0.2863333225250244, 0.3016666769981384, 0.31700000166893005, 0.32899999618530273, 0.33666667342185974, 0.34566667675971985, 0.35466668009757996, 0.3623333275318146, 0.3683333396911621, 0.37166666984558105, 0.3786666691303253, 0.38333332538604736, 0.3876666724681854, 0.39100000262260437, 0.3943333327770233, 0.40166667103767395, 0.40533334016799927, 0.4099999964237213, 0.4143333435058594, 0.4183333218097687, 0.4233333468437195, 0.4266666769981384, 0.43066665530204773, 0.43566668033599854, 0.4403333365917206, 0.44333332777023315, 0.445333331823349, 0.4466666579246521, 0.44999998807907104, 0.45266667008399963, 0.453000009059906, 0.4586666524410248, 0.46133333444595337, 0.46399998664855957, 0.4676666557788849, 0.4699999988079071, 0.47466665506362915, 0.4779999852180481, 0.4806666672229767, 0.484333336353302, 0.4906666576862335, 0.4946666657924652, 0.49799999594688416, 0.5009999871253967, 0.5023333430290222, 0.5096666812896729, 0.5113333463668823, 0.5163333415985107, 0.5213333368301392, 0.5243333578109741, 0.5266666412353516, 0.528333306312561, 0.5316666960716248, 0.5350000262260437, 0.5360000133514404, 0.5386666655540466, 0.5396666526794434, 0.5419999957084656, 0.5453333258628845, 0.5490000247955322, 0.5516666769981384, 0.5536666512489319, 0.5553333163261414, 0.5566666722297668, 0.5580000281333923, 0.5613333582878113, 0.5633333325386047, 0.5649999976158142, 0.5676666498184204, 0.5706666707992554, 0.5720000267028809, 0.5743333101272583, 0.5753333568572998, 0.57833331823349, 0.5809999704360962, 0.5826666951179504, 0.5830000042915344, 0.5833333134651184, 0.5853333473205566, 0.5856666564941406, 0.5873333215713501, 0.5903333425521851, 0.5916666388511658, 0.5920000076293945, 0.5929999947547913, 0.593999981880188, 0.5943333506584167, 0.5950000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 9, 4, 0, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [3, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [4, 22, 11, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.26657143235206604, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), alpha)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4665259854857475, 2.3490002878652887, 2.2759468136934666, 2.2977872997967164, 2.302959533273709, 2.2990041562610566, 2.3033465286681145, 2.304974485334861], "accuracy": [0.2078985571861267, 0.09509972482919693, 0.14898955821990967, 0.11795007437467575, 0.1026284471154213, 0.13221503794193268, 0.19178444147109985, 0.09681680053472519], "val_loss": [2.2238342421395436, 1.973878996712821, 1.7315138067517961, 1.974534239087786, 1.9731032507760184, 1.9566688537597656, 1.9774531636919295, 1.9745009967258997], "val_accuracy": [0.10166666656732559, 0.10100000351667404, 0.25033333897590637, 0.0989999994635582, 0.1340000033378601, 0.1536666601896286, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 47, 85, 75, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2054285705089569, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), alpha), alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2638465295362593, 2.0619531552773647, 1.138160626720743, 0.8584240619784507, 0.805035610980582, 0.7508070619902071, 0.7676735240092698, 0.7679734384898638, 155.4349708767489, NaN, NaN, NaN, NaN], "accuracy": [0.27961960434913635, 0.29599788784980774, 0.5885615944862366, 0.6774534583091736, 0.7066437602043152, 0.715889573097229, 0.7207766771316528, 0.7102100253105164, 0.4571390748023987, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9073853492736816, 1.103062459400722, 0.5981885705675397, 0.5503842830657959, 0.5647269827978951, 0.5290910346167428, 0.5088319948741368, 0.514324392591204, 2.1714320182800293, NaN, NaN, NaN, NaN], "val_accuracy": [0.37033334374427795, 0.5843333601951599, 0.734000027179718, 0.7590000033378601, 0.7456666827201843, 0.781000018119812, 0.777999997138977, 0.7913333177566528, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 4, 4, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [16], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 11, 4, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.pow(tf.math.pow(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(grad))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302623058149544, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 11, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [16], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302623058149544, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 2, 0, 1, 1, 9, 4, 0, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 47, 85, 75, 50, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [26], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 4, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 2, 2, 8, 8, 8, 4], [2, 4, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 15, 15, 8, 7, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [98, 43, 85, 75, 19, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6, 8], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 20, 16, 12, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(sigma)))))))))), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 0, 5, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 49, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [86], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.203244403904109, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15572579205036163, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [913.5814732142857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 4, 1, 1, 9, 4, 2, 8, 9, 8, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 69, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302623058149544, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06458856165409088, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 0, 2, 9, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 12, 75, 49, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 4, 2, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 10, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, alpha))))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 47, 85, 75, 50, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09971428662538528, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2638691460782385, 2.0567475238795514, 1.4179629271828094, 0.9930473370417281, 0.8876370059311776, 0.8606633828725828, 0.8863656004154451, 0.9153466537927419, 1.0772872572136656, 1.143623512371609, 1.1892865337574126], "accuracy": [0.27961960434913635, 0.2953374683856964, 0.5254259705543518, 0.6297714710235596, 0.6667547225952148, 0.6802271604537964, 0.6748117804527283, 0.6754721999168396, 0.6522256135940552, 0.6112799048423767, 0.6190727949142456], "val_loss": [1.9089643614632743, 0.9539383138929095, 0.6597238608769008, 0.6179348060062954, 0.5829466240746635, 0.5538375547954014, 0.5855425425938198, 0.60944550377982, 0.6337469305310931, 0.6760538646153041, 0.8231425285339355], "val_accuracy": [0.36633333563804626, 0.6213333606719971, 0.7193333506584167, 0.7229999899864197, 0.7236666679382324, 0.7776666879653931, 0.768666684627533, 0.753000020980835, 0.7636666893959045, 0.7400000095367432, 0.7103333473205566]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 4, 1, 2, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 17, 17, 12, 5, 6, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), alpha), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303681908786226, 2.302293231663309, 2.303429965314108, 2.301926278324805, 2.302225626691174, 2.300478063947914], "accuracy": [0.08942015469074249, 0.08809932321310043, 0.08968432247638702, 0.09206181764602661, 0.09351472556591034, 0.09602430462837219], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 2, 1, 8, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 43, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 3, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303681908786226, 2.302293231663309, 2.303429965314108, 2.301926278324805, 2.302225626691174, 2.300478063947914], "accuracy": [0.08942015469074249, 0.08809932321310043, 0.08968432247638702, 0.09206181764602661, 0.09351472556591034, 0.09602430462837219], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 2, 1, 1, 9, 4, 1, 8, 9, 5, 9, 1, 3, 3, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [98, 43, 85, 75, 19, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [16], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 17, 17, 12, 5, 6, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), alpha)), alpha))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303681908786226, 2.302293231663309, 2.303429965314108, 2.301926278324805, 2.302225626691174, 2.300478063947914], "accuracy": [0.08942015469074249, 0.08809932321310043, 0.08968432247638702, 0.09206181764602661, 0.09351472556591034, 0.09602430462837219], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]