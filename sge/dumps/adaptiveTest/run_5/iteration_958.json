[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7931428551673889, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.289220237555584, 2.2552155897271255, 2.214659431843222, 2.1570673492433152, 2.068215441536894, 1.9448787629911377, 1.7920988988977113, 1.6379684455611088, 1.4939087017132637, 1.377785592881554, 1.2904779361837717, 1.220479493553077, 1.1534677186677988, 1.112048399934931, 1.0738136569790129, 1.0279907476018684, 0.9989010870590532, 0.9751413893139106, 0.9531465895565477, 0.9381471593161742, 0.9152155709367434, 0.8962253197041548, 0.8892874393905899, 0.8864501127083824, 0.8646191924932437, 0.8508699933425421, 0.8405083504414058, 0.8314905271176192, 0.8150253818728244, 0.8223095349254012, 0.8056941961473746, 0.799094627475411, 0.7926247466619791, 0.7850232276430282, 0.7688840038866777, 0.7733020141470812, 0.7605996328400992, 0.760388668659514, 0.7464161660015906, 0.744929517808135, 0.7462669770479233, 0.7386924705532454, 0.7369048481982036, 0.7434289757097874, 0.7328770190355344, 0.7195827969391868, 0.7164694008857441, 0.717210377416811, 0.7169489723155055, 0.7100567184324671, 0.7155199956112943, 0.6997269320450187, 0.7020367463629212, 0.6947613404080883, 0.6911899196457602, 0.6801692579936012, 0.6787013885540623, 0.6763208817182326, 0.6790462966608318, 0.6735190231692065, 0.6733768958110756, 0.6608137582602077, 0.672571605577004, 0.6689922845421875, 0.6601167946144606, 0.6653923493933133, 0.6570319817554618, 0.6567049953191508, 0.6519996351443734, 0.651774137806757, 0.6440279628102805, 0.6526966073714259, 0.6461073314949916, 0.6397269387617402, 0.6392177895327538, 0.6382862062675291, 0.6379096968424964, 0.6372771216830746, 0.6351417132010313, 0.6369757477428777, 0.624973428460349, 0.6312634693774817, 0.6252683458972553, 0.6201597838007527, 0.6211912970202175, 0.6157269276931474, 0.6189800359553759], "accuracy": [0.1228371411561966, 0.21133272349834442, 0.2837141752243042, 0.3333773612976074, 0.38726720213890076, 0.4220050275325775, 0.460969477891922, 0.4904239773750305, 0.5190860033035278, 0.544181764125824, 0.5575221180915833, 0.5713908076286316, 0.5975432395935059, 0.6122044920921326, 0.6273940205574036, 0.640338122844696, 0.6445648074150085, 0.6524897813796997, 0.6527539491653442, 0.6688680648803711, 0.6705851554870605, 0.6802271604537964, 0.6837934255599976, 0.6800950765609741, 0.6884163022041321, 0.6973979473114014, 0.6955488324165344, 0.7020208835601807, 0.7054550051689148, 0.6959450244903564, 0.7037379741668701, 0.7084929347038269, 0.7160216569900513, 0.7148329019546509, 0.722229540348053, 0.7201162576675415, 0.7252674698829651, 0.7205125093460083, 0.7312111854553223, 0.72672039270401, 0.7284374833106995, 0.7255316376686096, 0.7392682433128357, 0.7298903465270996, 0.7294940948486328, 0.7386078238487244, 0.7372870445251465, 0.7364945411682129, 0.743891179561615, 0.7403249144554138, 0.7372870445251465, 0.7457403540611267, 0.7436270117759705, 0.7442874312400818, 0.7473253011703491, 0.7500990629196167, 0.7532690763473511, 0.750231146812439, 0.7508915662765503, 0.7506273984909058, 0.754589855670929, 0.7597411274909973, 0.7530049085617065, 0.7594769597053528, 0.7572315335273743, 0.7540615797042847, 0.7540615797042847, 0.7588165402412415, 0.763967752456665, 0.7594769597053528, 0.7633073329925537, 0.7565711140632629, 0.763439416885376, 0.761590301990509, 0.7619865536689758, 0.7676661014556885, 0.765949010848999, 0.7630431652069092, 0.7683265209197998, 0.763439416885376, 0.7718927264213562, 0.7671377658843994, 0.769911527633667, 0.7720248103141785, 0.7711002230644226, 0.7718927264213562, 0.7763835787773132], "val_loss": [1.9405437197004045, 1.9055025918143136, 1.8586647851126534, 1.7887534414018904, 1.6864574977329798, 1.5487164088657923, 1.3880679266793388, 1.2296491691044398, 1.0962860243661063, 0.9913023880549839, 0.9134182248796735, 0.8534824507577079, 0.8060796942029681, 0.7716999905450004, 0.7410729612622943, 0.7177712747028896, 0.6962435415812901, 0.6792803662163871, 0.6656976597649711, 0.6517963750021798, 0.6408306871141706, 0.6343082530157906, 0.623003397669111, 0.6170634031295776, 0.6083684819085258, 0.6014134543282645, 0.5958764042173114, 0.5878888879503522, 0.5812417439052037, 0.5758036715643746, 0.5734455074582782, 0.5672909532274518, 0.5638271229607719, 0.5613567147936139, 0.553767170224871, 0.5496470928192139, 0.5479310750961304, 0.5431573050362724, 0.5390000343322754, 0.5357946327754429, 0.5334106854030064, 0.5300768784114293, 0.5299157244818551, 0.523539628301348, 0.5246037074497768, 0.5206148965018136, 0.5160970517567226, 0.514413697378976, 0.5135832854679653, 0.5107090813773019, 0.5099936212812152, 0.5057135139192853, 0.5068109376089913, 0.5048031296048846, 0.4999955211366926, 0.4974473885127476, 0.49522037165505545, 0.4965517691203526, 0.49420619010925293, 0.49149107933044434, 0.48762573514665875, 0.48728745324271067, 0.4871860572269985, 0.4825141429901123, 0.48570718084062847, 0.4834484372820173, 0.4804715939930507, 0.47926982811519075, 0.47743725776672363, 0.4755164384841919, 0.4738083226340158, 0.47350924355643137, 0.47154106412615093, 0.46944739137377056, 0.46801607949393137, 0.4665435722896031, 0.4681314059666225, 0.4662134647369385, 0.4652255432946341, 0.46450674533843994, 0.46414688655308317, 0.4602006844111851, 0.45963149411337717, 0.45795113699776785, 0.4574429988861084, 0.4584721326828003, 0.45965627261570524], "val_accuracy": [0.29499998688697815, 0.40400001406669617, 0.45233333110809326, 0.4896666705608368, 0.5376666784286499, 0.5640000104904175, 0.5916666388511658, 0.612333357334137, 0.6489999890327454, 0.6690000295639038, 0.6826666593551636, 0.6963333487510681, 0.6973333358764648, 0.703000009059906, 0.7136666774749756, 0.7160000205039978, 0.7250000238418579, 0.7213333249092102, 0.7263333201408386, 0.7243333458900452, 0.7396666407585144, 0.7356666922569275, 0.737333357334137, 0.7426666617393494, 0.7480000257492065, 0.7493333220481873, 0.75, 0.7559999823570251, 0.7526666522026062, 0.7556666731834412, 0.7476666569709778, 0.7596666812896729, 0.7613333463668823, 0.7546666860580444, 0.7646666765213013, 0.7666666507720947, 0.7630000114440918, 0.7689999938011169, 0.7689999938011169, 0.768666684627533, 0.7693333625793457, 0.7706666588783264, 0.7726666927337646, 0.7749999761581421, 0.7706666588783264, 0.7739999890327454, 0.7766666412353516, 0.7776666879653931, 0.7789999842643738, 0.7816666960716248, 0.7756666541099548, 0.7789999842643738, 0.7726666927337646, 0.7793333530426025, 0.7839999794960022, 0.781000018119812, 0.7856666445732117, 0.7873333096504211, 0.7886666655540466, 0.7846666574478149, 0.7893333435058594, 0.7846666574478149, 0.7829999923706055, 0.7889999747276306, 0.7910000085830688, 0.7853333353996277, 0.7853333353996277, 0.7903333306312561, 0.7916666865348816, 0.7933333516120911, 0.7963333129882812, 0.7956666946411133, 0.7953333258628845, 0.7953333258628845, 0.7963333129882812, 0.8009999990463257, 0.7923333048820496, 0.7986666560173035, 0.7986666560173035, 0.8013333082199097, 0.7929999828338623, 0.8059999942779541, 0.8033333420753479, 0.8026666641235352, 0.8023333549499512, 0.7973333597183228, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7919999957084656, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2892175345546173, 2.255170932078736, 2.214462170306765, 2.1564713423482935, 2.0666014831678003, 1.9413828005518, 1.786166773165505, 1.630422591611993, 1.4859431408116406, 1.3703409312281862, 1.2840526338109188, 1.2148789809663707, 1.148421898100433, 1.1075123164789504, 1.0699788364106324, 1.0244064617465594, 0.99567546086021, 0.9722051532151063, 0.9504728632013575, 0.9355006947367498, 0.9130417261818349, 0.894347167758264, 0.8874194386565627, 0.8846061662077636, 0.8628537242422959, 0.8490523232870161, 0.8391579160238726, 0.8302654140755453, 0.8140010332009417, 0.821054066145472, 0.8043340266483051, 0.7980753761540157, 0.791642354747418, 0.7839284605117695, 0.7678492079872608, 0.7723239412349937, 0.7597549396845422, 0.7596972852555627, 0.7455236934604678, 0.7443132606936389, 0.7454976470573405, 0.738051833910886, 0.7362640380638937, 0.7430111030860899, 0.7324912999882721, 0.7192673478868454, 0.7161584081446348, 0.7166609047678216, 0.7166463010787586, 0.7097687675590449, 0.71519293392717, 0.6994255122066473, 0.7016930126274707, 0.6945640058518086, 0.6909492595982101, 0.6798533335133251, 0.678539087468166, 0.6764475776849721, 0.6788229878867355, 0.6734517844692276, 0.6734888722017661, 0.6606504656084147, 0.6724971348914047, 0.6689219801196994, 0.660228346695029, 0.6653761995734634, 0.6570515141448072, 0.6566099157627501, 0.6520319346187452, 0.6521307538371627, 0.6436784590838402, 0.6526190314499489, 0.6459940827643914, 0.6397990151056918, 0.639359557349936, 0.6380700772433091, 0.6382594860193673, 0.637295084827218, 0.6352603235075959, 0.6370478427531366, 0.6250107954002218, 0.6315132092412405, 0.6254419944368538, 0.6200246664479802, 0.6215143254120997, 0.6158318539195451, 0.6191291642022123], "accuracy": [0.12270505726337433, 0.2114647924900055, 0.28384625911712646, 0.3335094451904297, 0.3870030343532562, 0.4224012792110443, 0.46229031682014465, 0.49108439683914185, 0.520671010017395, 0.5464271306991577, 0.5581825375556946, 0.5724474787712097, 0.5983357429504395, 0.6135252714157104, 0.6293752193450928, 0.6411306262016296, 0.6456214785575867, 0.6543388962745667, 0.654999315738678, 0.6700568199157715, 0.672170102596283, 0.6804913282394409, 0.6839255094528198, 0.6790384650230408, 0.6889446377754211, 0.6968696117401123, 0.6956809163093567, 0.7024171352386475, 0.7045304179191589, 0.69673752784729, 0.7053229212760925, 0.7082287669181824, 0.7161537408828735, 0.7165499925613403, 0.7226257920265198, 0.7211728692054749, 0.7259278893470764, 0.7213049530982971, 0.7310791015625, 0.7264562249183655, 0.7283053994178772, 0.724739134311676, 0.7395324110984802, 0.7294940948486328, 0.7293620109558105, 0.7383436560630798, 0.7366266250610352, 0.7366266250610352, 0.7433628439903259, 0.7395324110984802, 0.7368907928466797, 0.746268630027771, 0.7436270117759705, 0.7433628439903259, 0.7486461400985718, 0.748778223991394, 0.7530049085617065, 0.7506273984909058, 0.7515519857406616, 0.7511557340621948, 0.7537974119186401, 0.759609043598175, 0.752740740776062, 0.7604015469551086, 0.7564390301704407, 0.7543256878852844, 0.7540615797042847, 0.7597411274909973, 0.7638356685638428, 0.7592127919197083, 0.7630431652069092, 0.7564390301704407, 0.763967752456665, 0.7613261342048645, 0.7618544697761536, 0.7684586048126221, 0.7668735980987549, 0.7626469135284424, 0.7675340175628662, 0.7637035846710205, 0.7714964747428894, 0.7680623531341553, 0.7687227725982666, 0.7729493975639343, 0.7705719470977783, 0.7713643908500671, 0.7766477465629578], "val_loss": [1.9405253955296107, 1.9053925786699568, 1.8583008902413505, 1.7877112797328405, 1.6838573728288924, 1.5436415331704276, 1.3803256920405798, 1.2203648771558488, 1.0873644351959229, 0.9834281035831997, 0.9067262581416539, 0.8479686805180141, 0.8014785051345825, 0.7679300137928554, 0.7379922866821289, 0.7153270755495343, 0.6942508731569562, 0.6775550501687186, 0.6642501183918544, 0.650200469153268, 0.6395073958805629, 0.6333357776914325, 0.6218223231179374, 0.6162712233407157, 0.6073827232633319, 0.6005817311150687, 0.595138703073774, 0.5871574197496686, 0.5805257388523647, 0.5751915659223285, 0.5726229803902763, 0.5667448554720197, 0.5630153928484235, 0.5606685195650373, 0.5531753471919468, 0.5489508083888462, 0.547389200755528, 0.5426071541649955, 0.5383777788707188, 0.5353739602225167, 0.5330473184585571, 0.529747656413487, 0.5298358712877546, 0.5232155323028564, 0.5246038947786603, 0.520398599760873, 0.5158818108694894, 0.514466575213841, 0.5134447131838117, 0.5106984206608364, 0.5099865538733346, 0.5056467567171369, 0.50704973084586, 0.5047317062105451, 0.5000922679901123, 0.49746372018541607, 0.4953181403023856, 0.49674969060080393, 0.4942878314426967, 0.49154182842799593, 0.48750906331198557, 0.48732175145830425, 0.4874081952231271, 0.48242712020874023, 0.4857684714453561, 0.48353757177080425, 0.4806577818734305, 0.4794991527284895, 0.4777082545416696, 0.47564148902893066, 0.4740432841437204, 0.4736778906413487, 0.47161756243024555, 0.4693967955453055, 0.46804182870047434, 0.46647775173187256, 0.46834681715284077, 0.46631470748356413, 0.465309739112854, 0.46457386016845703, 0.46440281186785015, 0.46060975960322786, 0.4599547726767404, 0.45832947322300505, 0.4574378047670637, 0.45878284318106516, 0.45995960916791645], "val_accuracy": [0.29499998688697815, 0.40400001406669617, 0.45233333110809326, 0.49000000953674316, 0.5383333563804626, 0.565666675567627, 0.5933333039283752, 0.6140000224113464, 0.6506666541099548, 0.6700000166893005, 0.6856666803359985, 0.6949999928474426, 0.6976666450500488, 0.70333331823349, 0.7139999866485596, 0.7173333168029785, 0.7260000109672546, 0.722000002861023, 0.7279999852180481, 0.7250000238418579, 0.7390000224113464, 0.737666666507721, 0.7383333444595337, 0.7433333396911621, 0.7473333477973938, 0.7490000128746033, 0.749666690826416, 0.7566666603088379, 0.753000020980835, 0.7559999823570251, 0.7493333220481873, 0.7613333463668823, 0.7613333463668823, 0.7553333044052124, 0.7639999985694885, 0.7663333415985107, 0.7646666765213013, 0.7696666717529297, 0.7693333625793457, 0.7689999938011169, 0.7699999809265137, 0.7703333497047424, 0.7726666927337646, 0.7746666669845581, 0.7699999809265137, 0.7736666798591614, 0.7770000100135803, 0.7770000100135803, 0.778333306312561, 0.781333327293396, 0.7763333320617676, 0.778333306312561, 0.7716666460037231, 0.7789999842643738, 0.7853333353996277, 0.781000018119812, 0.7863333225250244, 0.7876666784286499, 0.7889999747276306, 0.7863333225250244, 0.7889999747276306, 0.7839999794960022, 0.7823333144187927, 0.7893333435058594, 0.7903333306312561, 0.7853333353996277, 0.7846666574478149, 0.7896666526794434, 0.7883333563804626, 0.7933333516120911, 0.7946666479110718, 0.7963333129882812, 0.7960000038146973, 0.7950000166893005, 0.7963333129882812, 0.8006666898727417, 0.7933333516120911, 0.8003333210945129, 0.7983333468437195, 0.8013333082199097, 0.7923333048820496, 0.8056666851043701, 0.8023333549499512, 0.8016666769981384, 0.8023333549499512, 0.7976666688919067, 0.7983333468437195]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 8, 5, 3, 2, 9, 2, 2, 0, 3, 4, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [3, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7917143106460571, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2893684542709734, 2.255929645152376, 2.2163196091859128, 2.160591254223607, 2.074855925746802, 1.9557209527566528, 1.8069247236624686, 1.6545539548950992, 1.509937218450804, 1.3919065161907693, 1.3026881760389515, 1.2312278002638308, 1.1631616655042882, 1.121027644142546, 1.0818175629948454, 1.0355297260753011, 1.0059137278544101, 0.9815544136495418, 0.9591551962750321, 0.9435913354146592, 0.9203371392847635, 0.9011802610515242, 0.8938673808196469, 0.8909716045442369, 0.8688182359547301, 0.8548730618965357, 0.8445321034131789, 0.8352608413051352, 0.8186098249234764, 0.8259696653962781, 0.8091030743742159, 0.8025093470834045, 0.7960216817508174, 0.7882974575208619, 0.7721396615208888, 0.7764841288765109, 0.7634111373274318, 0.763474859998935, 0.7496393028897159, 0.7479160194856111, 0.7491103751060119, 0.7417294367067314, 0.7398256300116385, 0.7462973459726469, 0.7357131748576725, 0.7223055465991991, 0.7191183660496747, 0.7199007695802309, 0.7197908491285926, 0.7128523569679562, 0.7181910455282008, 0.7024766932215909, 0.7047063047072482, 0.6973743529729777, 0.6936541658508433, 0.6826024089884906, 0.6811543607346496, 0.6788416932114457, 0.6814875670270425, 0.6759540045486544, 0.6759191542694581, 0.6633049938042938, 0.6749921281733581, 0.6712529643525725, 0.6625938515590087, 0.6677480991946991, 0.659436710073554, 0.6588983898070888, 0.6542841498374057, 0.6542603460836405, 0.6462280254133499, 0.6548947333549512, 0.6485719354617802, 0.6421451721964826, 0.6414341321553316, 0.6404872829289626, 0.6401960448093891, 0.6393269435714785, 0.6374693431433528, 0.6390075784601225, 0.6271905190657159, 0.6335092117490077, 0.6274044146831907, 0.6221841295334515, 0.6234909528911925, 0.6178195490388035, 0.6212181627962962], "accuracy": [0.12257297337055206, 0.21014396846294403, 0.28199708461761475, 0.3307357132434845, 0.38528597354888916, 0.41949543356895447, 0.459780752658844, 0.4877823293209076, 0.5160480737686157, 0.5406154990196228, 0.5552766919136047, 0.5690133571624756, 0.5952978730201721, 0.6103553175926208, 0.6262052655220032, 0.6386210322380066, 0.6421872973442078, 0.6507726907730103, 0.6513010263442993, 0.667811393737793, 0.6691322326660156, 0.6778497099876404, 0.6828688383102417, 0.6779817938804626, 0.687491774559021, 0.69673752784729, 0.6946242451667786, 0.7010962963104248, 0.7034738063812256, 0.6947563290596008, 0.7037379741668701, 0.707040011882782, 0.7147008180618286, 0.7136441469192505, 0.722229540348053, 0.7185312509536743, 0.7246070504188538, 0.7187954187393188, 0.7298903465270996, 0.7263241410255432, 0.7277770638465881, 0.7244749665260315, 0.7383436560630798, 0.7279091477394104, 0.7289658188819885, 0.7383436560630798, 0.735569953918457, 0.7357020378112793, 0.7427024245262146, 0.7392682433128357, 0.7357020378112793, 0.7449478507041931, 0.7423061728477478, 0.743891179561615, 0.7460044622421265, 0.7489103078842163, 0.7520803213119507, 0.7498348951339722, 0.7510236501693726, 0.7499669790267944, 0.7531369924545288, 0.7588165402412415, 0.7520803213119507, 0.7584202885627747, 0.7552502751350403, 0.752740740776062, 0.7532690763473511, 0.7578919529914856, 0.7630431652069092, 0.7586844563484192, 0.7637035846710205, 0.7561748623847961, 0.7629110813140869, 0.76106196641922, 0.7614582180976868, 0.7663452625274658, 0.7662131786346436, 0.7626469135284424, 0.7670056819915771, 0.7625148296356201, 0.7701756954193115, 0.7652885913848877, 0.7693831920623779, 0.7721568942070007, 0.770439863204956, 0.7711002230644226, 0.7761194109916687], "val_loss": [1.9409587042672294, 1.9066034725734167, 1.8611207008361816, 1.7936508996146066, 1.6950744901384627, 1.5619006838117326, 1.4047136987958635, 1.247133425303868, 1.1119873523712158, 1.004537718636649, 0.9244581290653774, 0.8627990995134626, 0.8140791484287807, 0.7785125459943499, 0.7470266819000244, 0.7230877876281738, 0.7008677891322544, 0.6834931373596191, 0.6696785858699253, 0.6554684809276036, 0.6441675594874791, 0.6375033685139248, 0.6259753363473075, 0.6197707312447684, 0.6109949009759086, 0.604082499231611, 0.5984996897833688, 0.590376615524292, 0.5835544722420829, 0.5782257999692645, 0.5756618295397077, 0.5694407565253121, 0.5659994738442558, 0.5635644708360944, 0.5558043207441058, 0.5515680994306292, 0.5497947590691703, 0.5449929237365723, 0.5410059860774449, 0.537654059273856, 0.5352907691683088, 0.5320421457290649, 0.5318313326154437, 0.5253339835575649, 0.5263888835906982, 0.5224612951278687, 0.518014669418335, 0.5161134685788836, 0.5156067269189017, 0.512585094996861, 0.5118109158107212, 0.5073485885347638, 0.5087134838104248, 0.5063509941101074, 0.5016435044152396, 0.4988797221864973, 0.4967515468597412, 0.4980642454964774, 0.4956003597804478, 0.49299514293670654, 0.4891952616827829, 0.4889490604400635, 0.48856593881334576, 0.4839659758976528, 0.4869471788406372, 0.4848618507385254, 0.4821441854749407, 0.48067402839660645, 0.47887531348637175, 0.47686643259865896, 0.4752767767224993, 0.47487124374934603, 0.4730006626674107, 0.47081286566598074, 0.46934751101902555, 0.46784416266850065, 0.4693457569394793, 0.4673957313810076, 0.4664062942777361, 0.46580844266074045, 0.46535163266318186, 0.4612915175301688, 0.46112023081098286, 0.45921519824436735, 0.4583904913493565, 0.45954092911311556, 0.46074518135615755], "val_accuracy": [0.29233333468437195, 0.40166667103767395, 0.4516666531562805, 0.4856666624546051, 0.5356666445732117, 0.559333324432373, 0.5899999737739563, 0.609000027179718, 0.643666684627533, 0.6676666736602783, 0.6816666722297668, 0.6936666369438171, 0.6966666579246521, 0.7013333439826965, 0.7126666903495789, 0.7136666774749756, 0.7223333120346069, 0.7213333249092102, 0.7260000109672546, 0.7250000238418579, 0.7379999756813049, 0.7333333492279053, 0.7363333106040955, 0.7416666746139526, 0.7456666827201843, 0.7490000128746033, 0.7493333220481873, 0.7556666731834412, 0.7516666650772095, 0.7543333172798157, 0.7476666569709778, 0.7586666941642761, 0.7603333592414856, 0.753333330154419, 0.7636666893959045, 0.765666663646698, 0.762333333492279, 0.7693333625793457, 0.7689999938011169, 0.7693333625793457, 0.7689999938011169, 0.7706666588783264, 0.7726666927337646, 0.7746666669845581, 0.7689999938011169, 0.7733333110809326, 0.7746666669845581, 0.7770000100135803, 0.7766666412353516, 0.7799999713897705, 0.7763333320617676, 0.7786666750907898, 0.7706666588783264, 0.777999997138977, 0.7836666703224182, 0.781000018119812, 0.7860000133514404, 0.7876666784286499, 0.7879999876022339, 0.7833333611488342, 0.7879999876022339, 0.7833333611488342, 0.7829999923706055, 0.7886666655540466, 0.7889999747276306, 0.7850000262260437, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.7929999828338623, 0.7956666946411133, 0.7953333258628845, 0.793666660785675, 0.7946666479110718, 0.7960000038146973, 0.7996666431427002, 0.7923333048820496, 0.7986666560173035, 0.7983333468437195, 0.8009999990463257, 0.7929999828338623, 0.8046666383743286, 0.8026666641235352, 0.8023333549499512, 0.8026666641235352, 0.7976666688919067, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [54, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7857142686843872, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 3, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.square(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2863287891709905, 2.2433828348969236, 2.186166850535814, 2.0952455283880327, 1.9512272279622485, 1.76431861668215, 1.5714335763270215, 1.4188240544670971, 1.2997615795408841, 1.2111036755137707, 1.1471383912515143, 1.0926638518373617, 1.0383646767672579, 1.0060188801627763, 0.9814033936106408, 0.941404642036578, 0.9186511744424384, 0.9008398187977684, 0.8840106880549883, 0.8743704422715948, 0.8543778898111031, 0.8375131854795588, 0.834856190662248, 0.8322260294450572, 0.8146319117418228, 0.8021989943817103, 0.7933763682078597, 0.7862291087201715, 0.7706210510668706, 0.7780780601243238, 0.7636055213947495, 0.7576779833858386, 0.7529569890331897, 0.7444351672764074, 0.7287467450450644, 0.7341178415426567, 0.7240503902102128, 0.7234463533783916, 0.709600391003434, 0.7095556059265968, 0.7102870282054876, 0.7032532230690722, 0.7008637267647954, 0.7076754571739331, 0.6990753987351618, 0.6863787392221501, 0.6832489203058922, 0.683204505689518, 0.684085984680993, 0.676688097754899, 0.6822238650855419, 0.6664482848188581, 0.6690150143495247, 0.663587100501735, 0.6598319497012097, 0.6490598110600926, 0.647943988255443, 0.6459886156934804, 0.648878201675012, 0.6431160756562601, 0.6428492335815944, 0.630645319045952, 0.6424178725000008, 0.6401115035840691], "accuracy": [0.1294412910938263, 0.23774930834770203, 0.3179236650466919, 0.3673226833343506, 0.4235900044441223, 0.4605732262134552, 0.500990629196167, 0.5346717834472656, 0.5568616986274719, 0.5855237245559692, 0.5925241112709045, 0.6103553175926208, 0.635979413986206, 0.6432439684867859, 0.657508909702301, 0.667811393737793, 0.6713775992393494, 0.6753401160240173, 0.6800950765609741, 0.6872276067733765, 0.6900013089179993, 0.6972658634185791, 0.7008321285247803, 0.6947563290596008, 0.7063795924186707, 0.7120591998100281, 0.7125874757766724, 0.7177387475967407, 0.717870831489563, 0.7127195596694946, 0.7202483415603638, 0.7230220437049866, 0.7252674698829651, 0.7285695672035217, 0.735041618347168, 0.7321357727050781, 0.7372870445251465, 0.7343811988830566, 0.7425703406333923, 0.7424382567405701, 0.7420420050621033, 0.7376832365989685, 0.752212405204773, 0.7413815855979919, 0.7432307600975037, 0.748249888420105, 0.7511557340621948, 0.7499669790267944, 0.7531369924545288, 0.7495707273483276, 0.7495707273483276, 0.7582882046699524, 0.7541936039924622, 0.7556465268135071, 0.7565711140632629, 0.7605336308479309, 0.7648923397064209, 0.7625148296356201, 0.7609298825263977, 0.7613261342048645, 0.7609298825263977, 0.7712323069572449, 0.7658169269561768, 0.7691190242767334], "val_loss": [1.9335720879690987, 1.8867746080671037, 1.8159941264561243, 1.7018954753875732, 1.535696234021868, 1.3373447486332484, 1.1518749850136893, 1.01188063621521, 0.9161346639905658, 0.8443294252668109, 0.79203919001988, 0.7518215179443359, 0.7187463045120239, 0.6963647944586617, 0.6753249679292951, 0.6606131281171527, 0.6443943977355957, 0.632366384778704, 0.6214696168899536, 0.6113085406167167, 0.6021778072629657, 0.5993474211011615, 0.5886108534676688, 0.5860717637198312, 0.5768687214170184, 0.5708481754575457, 0.5674641813550677, 0.5596202611923218, 0.5529876436505999, 0.5478096008300781, 0.5472212348665509, 0.5407344443457467, 0.5374412536621094, 0.5370971134730748, 0.5284242800303868, 0.5251326731273106, 0.5241794756480626, 0.5197255100522723, 0.5161828483854022, 0.5138969591685704, 0.5107772520610264, 0.5075297355651855, 0.5094878332955497, 0.5011131252561297, 0.5039603880473545, 0.49933719635009766, 0.4943437235695975, 0.4945094585418701, 0.4932605709348406, 0.4911836215427944, 0.48993328639439176, 0.4853061097008841, 0.4870160477502005, 0.4847778933388846, 0.4805571862629482, 0.47798214639936176, 0.47638867582593647, 0.4786089999335153, 0.4758451666150774, 0.4732285908290318, 0.46841418743133545, 0.4691140651702881, 0.469561117036002, 0.46427312919071745], "val_accuracy": [0.3316666781902313, 0.4313333332538605, 0.48399999737739563, 0.5236666798591614, 0.5630000233650208, 0.5899999737739563, 0.625, 0.6666666865348816, 0.6819999814033508, 0.6936666369438171, 0.7049999833106995, 0.7153333425521851, 0.7129999995231628, 0.7203333377838135, 0.7276666760444641, 0.731333315372467, 0.7356666922569275, 0.7310000061988831, 0.7403333187103271, 0.7333333492279053, 0.7483333349227905, 0.7446666955947876, 0.7443333268165588, 0.753333330154419, 0.7586666941642761, 0.7553333044052124, 0.7556666731834412, 0.765666663646698, 0.7599999904632568, 0.765999972820282, 0.7606666684150696, 0.768666684627533, 0.7723333239555359, 0.7683333158493042, 0.7723333239555359, 0.7756666541099548, 0.7703333497047424, 0.7733333110809326, 0.7736666798591614, 0.7743333578109741, 0.778333306312561, 0.7796666622161865, 0.7786666750907898, 0.781000018119812, 0.7776666879653931, 0.7793333530426025, 0.7846666574478149, 0.7883333563804626, 0.7850000262260437, 0.7929999828338623, 0.7850000262260437, 0.7883333563804626, 0.7789999842643738, 0.7886666655540466, 0.7973333597183228, 0.7889999747276306, 0.79666668176651, 0.7960000038146973, 0.7990000247955322, 0.7870000004768372, 0.7990000247955322, 0.7910000085830688, 0.7913333177566528, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 2, 2, 6, 2, 2, 8, 3, 9, 3, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [34, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7777143120765686, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2806678043144286, 2.2176993329999566, 2.113118371282035, 1.9263617477522803, 1.6710952021395131, 1.4373844206026123, 1.2755278331445208, 1.174224297588748, 1.0963347171827031, 1.035043491238317, 0.9939814873690209, 0.9544480721617671, 0.9191435289231777, 0.8950647452267768, 0.8825946935825124, 0.8481572200798198, 0.8320590688048289, 0.8192571974024245, 0.8069324296904183, 0.8008869662103463, 0.7843932837165185, 0.7688339380477287, 0.7703630806054768, 0.7674743044787331, 0.7551103206027878, 0.7432592644620297, 0.7366818577118082, 0.7306900383569246, 0.7159987809856129, 0.72306709397565, 0.7109612241838082, 0.7044973913877868, 0.7032019373070311, 0.6925840942914129, 0.6795671622451774, 0.6826430071283561, 0.6763390563010162, 0.676085325823232, 0.6615109256450384, 0.6641614349479484, 0.6637218718704467], "accuracy": [0.14674416184425354, 0.27460044622421265, 0.3681151866912842, 0.4209483563899994, 0.4784044325351715, 0.527010977268219, 0.5659754276275635, 0.5963544845581055, 0.6096948981285095, 0.6346585750579834, 0.6433760523796082, 0.659490168094635, 0.6781138777732849, 0.6793025732040405, 0.6889446377754211, 0.6946242451667786, 0.6980583667755127, 0.7033417224884033, 0.7042662501335144, 0.7117950320243835, 0.7106062769889832, 0.7214370369911194, 0.719852089881897, 0.7174745798110962, 0.7264562249183655, 0.7337207794189453, 0.7316074371337891, 0.7329282760620117, 0.7363624572753906, 0.7312111854553223, 0.7359662055969238, 0.7440232634544373, 0.7442874312400818, 0.7449478507041931, 0.752740740776062, 0.7456082701683044, 0.7536653280258179, 0.7526086568832397, 0.7589486241340637, 0.7574957013130188, 0.7593448758125305], "val_loss": [1.9194801194327218, 1.8423865182059151, 1.6993823732648576, 1.46690034866333, 1.206782681601388, 1.0058637346540178, 0.8822459493364606, 0.8022957188742501, 0.7520737988608224, 0.7122445787702288, 0.6826176302773612, 0.6605016674314227, 0.6386481693812779, 0.6254289490836007, 0.6116913216454642, 0.6028479167393276, 0.5902670962469918, 0.5829218796321324, 0.5748215743473598, 0.5677051544189453, 0.5593704155513218, 0.5578098808016095, 0.5513261216027396, 0.549785920551845, 0.5388080903462001, 0.5344582625797817, 0.5335654360907418, 0.5246314661843436, 0.5180560861315046, 0.5133216210774013, 0.5141100542885917, 0.5067078215735299, 0.5053110803876605, 0.5070360728672573, 0.4964606591633388, 0.4956913334982736, 0.49415949412754606, 0.4902382067271641, 0.48662510940006803, 0.4863862991333008, 0.481839690889631], "val_accuracy": [0.36533331871032715, 0.47333332896232605, 0.546999990940094, 0.559333324432373, 0.6100000143051147, 0.6586666703224182, 0.6866666674613953, 0.7049999833106995, 0.7123333215713501, 0.7163333296775818, 0.7266666889190674, 0.7356666922569275, 0.734666645526886, 0.737666666507721, 0.7416666746139526, 0.7423333525657654, 0.7509999871253967, 0.7413333058357239, 0.7590000033378601, 0.7436666488647461, 0.765333354473114, 0.7590000033378601, 0.7549999952316284, 0.765333354473114, 0.7720000147819519, 0.7689999938011169, 0.7726666927337646, 0.7739999890327454, 0.7720000147819519, 0.7749999761581421, 0.7763333320617676, 0.7773333191871643, 0.7806666493415833, 0.7749999761581421, 0.7816666960716248, 0.7896666526794434, 0.7820000052452087, 0.7870000004768372, 0.7820000052452087, 0.7829999923706055, 0.7879999876022339]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7665714025497437, "mapping_values": [1, 8, 8, 6, 2, 2, 5, 5, 3, 2, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0719258163299985, 1.31764241951867, 0.9858268047793036, 0.8722565959646497, 0.7937846243845993, 0.7564370260734946, 0.7150184057014273, 0.677799532103611, 0.6528672684830855, 0.6865075545981103, 0.6367883551563207, 0.6168595830982608], "accuracy": [0.313300758600235, 0.535860538482666, 0.6458855867385864, 0.6783780455589294, 0.7113987803459167, 0.7189275026321411, 0.7349095344543457, 0.743891179561615, 0.7518161535263062, 0.7371549606323242, 0.7638356685638428, 0.7688548564910889], "val_loss": [1.1968998908996582, 0.7823922974722726, 0.7826706341334752, 0.6218420948301043, 0.5854771137237549, 0.6064781972340175, 0.5322574377059937, 0.537529638835362, 0.5450951542173114, 0.5185220922742572, 0.5041658878326416, 0.5218727758952549], "val_accuracy": [0.476666659116745, 0.6696666479110718, 0.6366666555404663, 0.7200000286102295, 0.7396666407585144, 0.7099999785423279, 0.768666684627533, 0.7519999742507935, 0.7493333220481873, 0.7649999856948853, 0.7666666507720947, 0.7543333172798157]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 6, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 0, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 2, 2, 6, 2, 2, 8, 3, 9, 3, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 1, 3, 1, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 37, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 18, 18, 11, 7, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, alpha)))), grad)), tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [965.3727837480559, 13722.701970564076, 58803.094742685906, 160209.78525582817, 337819.2218126734, 607084.1774369304], "accuracy": [0.09945846349000931, 0.10566636174917221, 0.10249637067317963, 0.10077928751707077, 0.09998679161071777, 0.10130762308835983], "val_loss": [2526.5592215401784, 19083.56863839286, 63383.02232142857, 149119.11160714287, 289987.60714285716, 499684.25], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 5, 5, 2, 2, 6, 2, 2, 8, 3, 9, 3, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 37, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.square(grad)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08994849026203156, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 2, 2, 6, 2, 2, 8, 3, 9, 3, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 1, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [6, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 2, 8, 7, 9, 6, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [30, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 2, 2, 6, 2, 2, 8, 3, 9, 3, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 50, 50, 30, 20, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, grad))), tf.math.add(beta, alpha)), grad)))))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), grad))))), tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 37, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 21, 21, 13, 8, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, grad)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 0, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 37, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [4, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 17, 17, 11, 6, 1, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.square(grad)), tf.math.multiply(tf.math.add(grad, tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), grad)), alpha)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025326788968665, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 37, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 26, 26, 15, 11, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, grad)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad)))), tf.math.add(beta, grad))), beta))), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 4, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [93, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 0, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(grad)))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17316074669361115, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 3, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 5, 5, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 3, 3, 3, 1, 3, 0, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [96598368.35902628, 1821573996.7095497, 8450663632.01902, 23752498742.304054, 50992689622.13921, 92551287499.75854], "accuracy": [0.09932637959718704, 0.10566636174917221, 0.1026284471154213, 0.10077928751707077, 0.09972262382507324, 0.10130762308835983], "val_loss": [365673792.0, 2923331072.0, 9863945947.428572, 23378454820.57143, 45657659099.42857, 78892948333.71428], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 2, 6, 2, 3, 8, 3, 9, 4, 2, 3, 3, 1, 6, 2, 7, 1, 5, 2, 4, 8, 1, 4, 9, 5, 0, 0, 3, 0, 2, 9], [0, 3, 1, 3, 3, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 1, 5], [18, 86, 78, 38, 8], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 54, 54, 33, 21, 4, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))))))), tf.math.add(beta, grad))), grad), tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.add(beta, beta)))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))))), tf.math.negative(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, alpha), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025326788968665, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 8, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 3, 5, 9, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 0, 3, 3, 1, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 86, 78, 38, 8], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [0, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 4, 4, 2, 2, 0, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 3, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [29, 83, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 5, 5, 2, 2, 6, 2, 2, 8, 3, 9, 3, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 3, 3, 3, 3, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [18, 37, 78, 38, 8], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.316282484021563, 2.3579988469537128, 2.4269160045970937, 2.5944244086923476, 6.143471980217725, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.062475234270095825, 0.03011491149663925, 0.014529123902320862, 0.010038304142653942, 0.056531500071287155, 0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.004316602434431, 2.0519981384277344, 2.1382362501961842, 2.4349237169538225, 40.52921186174665, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.0033333334140479565, 0.005333333276212215, 0.009999999776482582, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [48, 83, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 2, 8, 3, 2, 6, 2, 6, 8, 3, 9, 4, 2, 1, 3, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 3, 1, 3, 1, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [76, 86, 78, 38, 8], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [5, 1, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 13, 13, 9, 4, 2, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302376181961854, 2.3021141385925037, 2.302801620533532, 2.304362777390768, 2.302820153791261, 2.301262819346593], "accuracy": [0.08625016361474991, 0.09034473448991776, 0.09087307006120682, 0.08638224750757217, 0.09272222965955734, 0.09457138925790787], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]