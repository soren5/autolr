[{"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7940000295639038, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164548906904, 2.2115606626168756, 2.0931295165138915, 1.881389107670782, 1.618253697777122, 1.395293862119626, 1.250048222857979, 1.1508730123575575, 1.0599758199744174, 1.0103558717449785, 0.9709687604958969, 0.9294909970430635, 0.9027976649013162, 0.8866510867694617, 0.8652753555905377, 0.8395630380166064, 0.8278198132205082, 0.8078220171100822, 0.7995816722222922, 0.7894889774134823, 0.7816437717520754, 0.7639848348360965, 0.7565738752832691, 0.7557126948185066, 0.739973173448832, 0.7353085738446467, 0.7273088889492973, 0.7176867715513481, 0.7186697548989213, 0.7067089088683304, 0.702413777342373, 0.6909820260373026, 0.6937322144054261, 0.6866393655109494, 0.6799196169093269, 0.6735722199958218, 0.6702489774728795, 0.6704733321900066, 0.6606651030952243, 0.6507171278049634, 0.6503538144829881, 0.6500033782678211, 0.6498377221040974, 0.6438693613376851, 0.6401755531639424, 0.6390778836383953, 0.6331648862813805, 0.6330977039975796, 0.6389724730327381, 0.6253134612205117, 0.6247414798705712, 0.621603519925037, 0.6200171555384448, 0.613574448042479, 0.607174320692368], "accuracy": [0.14595165848731995, 0.28780874609947205, 0.3755118250846863, 0.4427420496940613, 0.48408401012420654, 0.5404834151268005, 0.5667679309844971, 0.5970149040222168, 0.6337339878082275, 0.635979413986206, 0.6540747880935669, 0.6679434776306152, 0.6775855422019958, 0.6785101294517517, 0.6900013089179993, 0.7030775547027588, 0.7025492191314697, 0.7062475085258484, 0.718399167060852, 0.7135120630264282, 0.7132478952407837, 0.7214370369911194, 0.7275128960609436, 0.7277770638465881, 0.7367587089538574, 0.7316074371337891, 0.7351737022399902, 0.7347774505615234, 0.7396644949913025, 0.7429665923118591, 0.7359662055969238, 0.7434949278831482, 0.7445515990257263, 0.7432307600975037, 0.7457403540611267, 0.7512878179550171, 0.7515519857406616, 0.7498348951339722, 0.7561748623847961, 0.7577598690986633, 0.76106196641922, 0.7613261342048645, 0.7582882046699524, 0.7629110813140869, 0.7647602558135986, 0.7637035846710205, 0.7683265209197998, 0.7670056819915771, 0.7668735980987549, 0.7668735980987549, 0.7652885913848877, 0.7695152759552002, 0.7717606425285339, 0.7696473598480225, 0.7775723338127136], "val_loss": [1.91548068182809, 1.8301871844700404, 1.6687907150813512, 1.4105523654392786, 1.1493091923849923, 0.9660725593566895, 0.8552720035825457, 0.781060951096671, 0.7311049359185355, 0.6968732050486973, 0.6653497900281634, 0.6493159532546997, 0.6321784257888794, 0.6221247059958321, 0.6062331199645996, 0.5940840584891183, 0.5811127253941127, 0.5782791035515922, 0.5709603684289115, 0.5619699103491647, 0.5541110038757324, 0.5530045543398175, 0.5446668182100568, 0.5347404990877423, 0.5343538693019322, 0.5297296217509678, 0.5257655382156372, 0.521407961845398, 0.5115698575973511, 0.5157760551997593, 0.5068910632814679, 0.5069211551121303, 0.502871002469744, 0.5000044448035104, 0.4949903999056135, 0.49496470178876606, 0.48816793305533274, 0.4842878920691354, 0.48340797424316406, 0.4837345395769392, 0.4813139779227121, 0.4817084584917341, 0.47556354318346294, 0.47397661209106445, 0.4703648941857474, 0.47345527580806185, 0.4656350612640381, 0.4638364485331944, 0.46273650441850933, 0.460982084274292, 0.4584462472370693, 0.4657624789646694, 0.4592134782246181, 0.4571836675916399, 0.4539575065885271], "val_accuracy": [0.37933334708213806, 0.46533334255218506, 0.5596666932106018, 0.5879999995231628, 0.6293333172798157, 0.6733333468437195, 0.6923333406448364, 0.7066666483879089, 0.7089999914169312, 0.7143333554267883, 0.7239999771118164, 0.7379999756813049, 0.7369999885559082, 0.7243333458900452, 0.7459999918937683, 0.7436666488647461, 0.7540000081062317, 0.746666669845581, 0.7423333525657654, 0.7586666941642761, 0.7606666684150696, 0.7513333559036255, 0.7649999856948853, 0.7720000147819519, 0.7699999809265137, 0.7693333625793457, 0.7599999904632568, 0.7643333077430725, 0.7749999761581421, 0.7763333320617676, 0.7836666703224182, 0.7766666412353516, 0.7770000100135803, 0.7833333611488342, 0.7846666574478149, 0.784333348274231, 0.7799999713897705, 0.7860000133514404, 0.7846666574478149, 0.7853333353996277, 0.7829999923706055, 0.7916666865348816, 0.7976666688919067, 0.7943333387374878, 0.8003333210945129, 0.7916666865348816, 0.8040000200271606, 0.7906666398048401, 0.7940000295639038, 0.8053333163261414, 0.8009999990463257, 0.79666668176651, 0.7940000295639038, 0.8043333292007446, 0.7979999780654907]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 8, 2, 6, 1, 1, 0, 2, 5, 2, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 2, 2, 2, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1], [97, 12, 73, 33, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7931428551673889, "mapping_values": [1, 19, 19, 11, 8, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), tf.math.subtract(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164413810392, 2.2115608200720196, 2.093128162399653, 1.8813948778664635, 1.6183172809354949, 1.3955217767086137, 1.2502339071428237, 1.1509473509304182, 1.0599460231944506, 1.0104577952545426, 0.970974259144437, 0.9294758495511695, 0.9027943084536291, 0.8866822673124707, 0.8653519746413588, 0.8395989712407922, 0.8278189446113333, 0.8078400444880516, 0.7996549872816073, 0.7893414838580786, 0.7813081950669621, 0.7637282034519751, 0.7564478023192981, 0.7557742553632084, 0.7398212892173729, 0.7351077812663662, 0.7272134494110736, 0.7178348924474095, 0.7186443001413705, 0.7065564745988167, 0.7022773464043158, 0.690904013532075, 0.6929986290943668, 0.6864861398167724, 0.6799796021546765, 0.6734736073900444, 0.6701519413237496, 0.6700489143370448, 0.66059776658411, 0.6507195655412489, 0.6502544815907814, 0.6501337315317914, 0.6498241357169745, 0.6437504425213841, 0.6400839587984273, 0.6387716982941255, 0.6334273850188799, 0.6332374637499462, 0.6387785813119102, 0.6246616853195143, 0.6243499034210959, 0.6217672157643447, 0.619767524137662, 0.6136032513749597, 0.607168876712254, 0.6098498822423712, 0.6055903168811679, 0.6070900983530785, 0.6063537356592424], "accuracy": [0.14595165848731995, 0.28780874609947205, 0.3755118250846863, 0.44287413358688354, 0.4839519262313843, 0.5398229956626892, 0.5674283504486084, 0.5974111557006836, 0.6332056522369385, 0.6367719173431396, 0.6547351479530334, 0.667811393737793, 0.6773213744163513, 0.678642213344574, 0.6888125538825989, 0.7028133869171143, 0.7016246318817139, 0.7065116763114929, 0.7174745798110962, 0.7132478952407837, 0.7135120630264282, 0.7206445932388306, 0.7279091477394104, 0.72672039270401, 0.7367587089538574, 0.7308149337768555, 0.7346453666687012, 0.7353057861328125, 0.739400327205658, 0.7428345084190369, 0.735569953918457, 0.7445515990257263, 0.7449478507041931, 0.7427024245262146, 0.7457403540611267, 0.750759482383728, 0.7526086568832397, 0.7512878179550171, 0.7560427784919739, 0.7577598690986633, 0.7618544697761536, 0.7611940503120422, 0.7589486241340637, 0.7646281719207764, 0.7655527591705322, 0.7642319202423096, 0.7677981853485107, 0.767930269241333, 0.7672698497772217, 0.7662131786346436, 0.7647602558135986, 0.7689869403839111, 0.7718927264213562, 0.7691190242767334, 0.7778365015983582, 0.7746664881706238, 0.7784969210624695, 0.7778365015983582, 0.7759873270988464], "val_loss": [1.9154807499476842, 1.8301871844700404, 1.6687957559313094, 1.4105607441493444, 1.1495533330099923, 0.9663347176143101, 0.8554638624191284, 0.7810417073113578, 0.7312085969107491, 0.6968549149377006, 0.6653727122715541, 0.6496457372392926, 0.6322638136999947, 0.6222695112228394, 0.6063925879342216, 0.5944197007587978, 0.5809967517852783, 0.5782878569194249, 0.570948668888637, 0.5616327694484166, 0.5538584845406669, 0.5526809862681797, 0.5444036040987287, 0.5346779482705253, 0.5336812734603882, 0.529621992792402, 0.525292090007237, 0.5213458367756435, 0.5114280666623797, 0.5155611038208008, 0.5068203551428658, 0.5068646328789848, 0.5025098834718976, 0.4998230252947126, 0.49487505640302387, 0.4954022339412144, 0.4881537471498762, 0.48391704899924143, 0.48301502636500765, 0.4833986759185791, 0.4811697857720511, 0.4813956022262573, 0.47539406163351877, 0.4744659832545689, 0.4705680438450405, 0.4731634855270386, 0.46574422291346956, 0.46398299080984934, 0.4626176016671317, 0.46059559072766987, 0.45841680254255024, 0.4648225818361555, 0.45932200976780485, 0.4568268230983189, 0.45409134456089567, 0.4517040763582502, 0.4512045042855399, 0.45041312490190777, 0.4466882773808071], "val_accuracy": [0.37933334708213806, 0.46533334255218506, 0.5596666932106018, 0.5886666774749756, 0.6309999823570251, 0.6743333339691162, 0.6913333535194397, 0.7066666483879089, 0.7086666822433472, 0.7126666903495789, 0.7243333458900452, 0.7379999756813049, 0.7360000014305115, 0.7239999771118164, 0.7463333606719971, 0.7436666488647461, 0.753333330154419, 0.7459999918937683, 0.7426666617393494, 0.7583333253860474, 0.7606666684150696, 0.753000020980835, 0.7676666378974915, 0.7730000019073486, 0.7699999809265137, 0.7706666588783264, 0.7613333463668823, 0.7643333077430725, 0.7760000228881836, 0.7763333320617676, 0.7836666703224182, 0.7763333320617676, 0.7770000100135803, 0.7829999923706055, 0.7860000133514404, 0.7850000262260437, 0.7799999713897705, 0.7870000004768372, 0.7850000262260437, 0.7846666574478149, 0.7820000052452087, 0.7940000295639038, 0.7990000247955322, 0.7940000295639038, 0.8003333210945129, 0.7933333516120911, 0.8043333292007446, 0.7886666655540466, 0.7950000166893005, 0.8059999942779541, 0.7996666431427002, 0.7963333129882812, 0.7933333516120911, 0.8063333630561829, 0.79666668176651, 0.8019999861717224, 0.8016666769981384, 0.7996666431427002, 0.8026666641235352]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 0, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 12, 73, 33, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7771428823471069, "mapping_values": [1, 28, 28, 19, 9, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164413810392, 2.2115608695444258, 2.0931286617843874, 1.8813845795757498, 1.6182562342377829, 1.3953148653447085, 1.2500777738662112, 1.1508771793449624, 1.0600102439044474, 1.0102875070596462, 0.9708630317127573, 0.9293969152562922, 0.9027090639155444, 0.8865715930679486, 0.8654066929491583, 0.8395957484489041, 0.8278230090639485, 0.8078202885911292, 0.799719919980147, 0.7894870129794871, 0.7813282677400161, 0.7637604905739909, 0.7565866987923463, 0.7556426325541572, 0.7400013465356078, 0.7351983153919235, 0.7271302785099993, 0.7177644970394664, 0.7187520944210894, 0.7065885173425761, 0.7025354018521236, 0.6910977184008834, 0.6934084228678244, 0.6864354664214047, 0.6801954766684015, 0.6736480208624781, 0.6702209149668513, 0.6702938171000513, 0.6609855411059317, 0.6507802689158921], "accuracy": [0.14595165848731995, 0.28780874609947205, 0.3755118250846863, 0.44287413358688354, 0.48408401012420654, 0.5404834151268005, 0.5667679309844971, 0.5974111557006836, 0.6338660717010498, 0.6367719173431396, 0.6544709801673889, 0.6679434776306152, 0.6774534583091736, 0.6789063811302185, 0.6888125538825989, 0.702681303024292, 0.7022850513458252, 0.7069079279899597, 0.7185312509536743, 0.7128516435623169, 0.713908314704895, 0.7207766771316528, 0.7273808121681213, 0.7273808121681213, 0.7364945411682129, 0.7317395210266113, 0.735041618347168, 0.7354378700256348, 0.7397965788841248, 0.7430986762046814, 0.7354378700256348, 0.744419515132904, 0.7453441023826599, 0.7433628439903259, 0.7456082701683044, 0.7524765729904175, 0.7512878179550171, 0.7515519857406616, 0.7565711140632629, 0.7584202885627747], "val_loss": [1.9154807499476842, 1.8301879337855749, 1.6687889099121094, 1.4105401379721505, 1.1493279252733504, 0.9661041327885219, 0.8552187851497105, 0.7810886928013393, 0.7311486686979022, 0.6968326909201485, 0.6653565338679722, 0.6493561097553798, 0.6320756673812866, 0.6222634485789708, 0.6066379206521171, 0.5945212841033936, 0.5810173920222691, 0.5783346891403198, 0.5707832404545375, 0.5617350680487496, 0.5537351199558803, 0.5521135670798165, 0.5444643838065011, 0.5347308601651873, 0.533994231905256, 0.5297091177531651, 0.5257159471511841, 0.5216918161937169, 0.5113357475825718, 0.5156772477286202, 0.5067308970860073, 0.5063443354197911, 0.5023022549492973, 0.5002459117344448, 0.4947856494358608, 0.49538937636784147, 0.48774075508117676, 0.48421263694763184, 0.483230607850211, 0.4831505162375314], "val_accuracy": [0.37933334708213806, 0.46533334255218506, 0.5596666932106018, 0.5879999995231628, 0.6293333172798157, 0.6729999780654907, 0.6919999718666077, 0.706333339214325, 0.7086666822433472, 0.7143333554267883, 0.7236666679382324, 0.7379999756813049, 0.737333357334137, 0.7243333458900452, 0.7463333606719971, 0.7436666488647461, 0.753333330154419, 0.7463333606719971, 0.7423333525657654, 0.7593333125114441, 0.7599999904632568, 0.753000020980835, 0.765999972820282, 0.7733333110809326, 0.7699999809265137, 0.7703333497047424, 0.7603333592414856, 0.7643333077430725, 0.7753333449363708, 0.7766666412353516, 0.7850000262260437, 0.777999997138977, 0.7770000100135803, 0.7829999923706055, 0.7860000133514404, 0.7850000262260437, 0.7796666622161865, 0.7850000262260437, 0.7836666703224182, 0.7833333611488342]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 4, 5, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7768571376800537, "mapping_values": [1, 28, 28, 18, 10, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.multiply(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164728720677, 2.2115589260440918, 2.093129632589824, 1.8814078041780045, 1.6183551606437896, 1.395573819396896, 1.2502447811682715, 1.150942203831978, 1.059954189448041, 1.010263054960707, 0.9710347579769754, 0.9293773330638847, 0.9028444669785485, 0.8867424019197699, 0.8652529337969533, 0.8395291986309259, 0.8277573613301087, 0.8078908724964979, 0.7996094700934597, 0.7893516130813314, 0.7814268806607039, 0.7641157059621628, 0.7562722448171516, 0.755580893423831, 0.7400134340521052, 0.7352332179855913, 0.7273143840078602, 0.7178068690453664, 0.7184143594353348, 0.7065769709442994, 0.702222604926992, 0.6906197999037331, 0.693459629178, 0.6865040600780073, 0.6797334849165257, 0.6733292818557569, 0.6701199749457349, 0.6702808318766683, 0.6607932470981959, 0.650631590880549], "accuracy": [0.14595165848731995, 0.2876766622066498, 0.3759080767631531, 0.442609965801239, 0.4839519262313843, 0.5398229956626892, 0.5672962665557861, 0.5972790718078613, 0.6332056522369385, 0.6365077495574951, 0.6547351479530334, 0.6670188903808594, 0.6777176260948181, 0.6787742972373962, 0.6884163022041321, 0.7020208835601807, 0.7022850513458252, 0.7058512568473816, 0.7176066637039185, 0.7127195596694946, 0.7143045663833618, 0.7205125093460083, 0.7271166443824768, 0.7273808121681213, 0.7368907928466797, 0.7321357727050781, 0.7349095344543457, 0.7347774505615234, 0.739400327205658, 0.7428345084190369, 0.735041618347168, 0.7446836829185486, 0.7441553473472595, 0.7434949278831482, 0.7460044622421265, 0.752212405204773, 0.7511557340621948, 0.7510236501693726, 0.7568352818489075, 0.7581561207771301], "val_loss": [1.9154792513166154, 1.830184050968715, 1.6688038621629988, 1.4105932371956962, 1.1496070112500871, 0.9663446630750384, 0.8553895780018398, 0.7810304505484444, 0.7312100444521222, 0.6967520884105137, 0.6654173135757446, 0.6495002337864467, 0.6322688715798515, 0.6221614565168109, 0.6064757619585309, 0.5943882124764579, 0.5810961042131696, 0.5781036274773734, 0.5708833762577602, 0.5619044985089984, 0.5538320030484881, 0.552698186465672, 0.5440321138926915, 0.5346888644354684, 0.533502425466265, 0.5297141075134277, 0.5255998032433646, 0.5212750605174473, 0.5112311158861432, 0.515603746686663, 0.5067477055958339, 0.5066426992416382, 0.5023747852870396, 0.49964327471596853, 0.4945009435926165, 0.4955239125660488, 0.4880255460739136, 0.48389330932072233, 0.4829386813299997, 0.4830373866217477], "val_accuracy": [0.3790000081062317, 0.46533334255218506, 0.5596666932106018, 0.5886666774749756, 0.6309999823570251, 0.6736666560173035, 0.6916666626930237, 0.706333339214325, 0.7086666822433472, 0.7129999995231628, 0.7243333458900452, 0.7379999756813049, 0.7379999756813049, 0.7246666550636292, 0.7450000047683716, 0.7443333268165588, 0.7536666393280029, 0.746666669845581, 0.7429999709129333, 0.7583333253860474, 0.7609999775886536, 0.7516666650772095, 0.765666663646698, 0.7733333110809326, 0.7706666588783264, 0.7689999938011169, 0.7596666812896729, 0.7633333206176758, 0.7760000228881836, 0.7760000228881836, 0.7833333611488342, 0.7770000100135803, 0.7770000100135803, 0.7829999923706055, 0.7866666913032532, 0.784333348274231, 0.7799999713897705, 0.7853333353996277, 0.7866666913032532, 0.784333348274231]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.776285707950592, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164413810392, 2.211560838053397, 2.093127469785965, 1.881387514429416, 1.6183159733649968, 1.3955071870724223, 1.2502487048402422, 1.15098890611414, 1.0600217494667323, 1.0104131894876236, 0.9708676830243126, 0.9294276163798786, 0.9027648328506652, 0.8866664766005679, 0.8654444088804849, 0.8396715133685508, 0.8278410161538226, 0.807715664875427, 0.7996036529052905, 0.7894794203271136, 0.7814608134094121, 0.7640423578766311, 0.7565234415582489, 0.7555891741158199, 0.7398159430405216, 0.7353022611766302, 0.727391679619817, 0.7179199884738022, 0.718814671047454, 0.7067732318611886, 0.7024549176868997, 0.6912428308723625, 0.6934111086431983, 0.6868830788499249, 0.6800874771301568, 0.6735221207606369, 0.6702399879099592, 0.6704283844068963, 0.6610491841130048, 0.6506179872442152], "accuracy": [0.14595165848731995, 0.28780874609947205, 0.37564390897750854, 0.44287413358688354, 0.48408401012420654, 0.5398229956626892, 0.5671641826629639, 0.5968828201293945, 0.6337339878082275, 0.6370360851287842, 0.6542068123817444, 0.667811393737793, 0.6779817938804626, 0.6787742972373962, 0.6882842183113098, 0.7030775547027588, 0.7017567157745361, 0.7062475085258484, 0.717870831489563, 0.7135120630264282, 0.7140403985977173, 0.7206445932388306, 0.7273808121681213, 0.7272487282752991, 0.7362303733825684, 0.7309470176696777, 0.7342491149902344, 0.7342491149902344, 0.7397965788841248, 0.7427024245262146, 0.7349095344543457, 0.7437590956687927, 0.744419515132904, 0.7428345084190369, 0.7467969655990601, 0.750759482383728, 0.7514199018478394, 0.750759482383728, 0.7569673657417297, 0.7576277852058411], "val_loss": [1.9154807499476842, 1.8301880700247628, 1.6687817573547363, 1.410548380443028, 1.1495374270847865, 0.9662864548819405, 0.8554091794150216, 0.7811382838657924, 0.7312202453613281, 0.6968368632452828, 0.6653392144611904, 0.649381296975272, 0.6321899209703717, 0.6222925015858242, 0.6064931154251099, 0.5942641156060355, 0.5810984373092651, 0.5782337018421718, 0.570989762033735, 0.5616269452231271, 0.5539520297731672, 0.5527170045035226, 0.5446473019463676, 0.5347099133900234, 0.5336525951113019, 0.5295378650937762, 0.5258950846535819, 0.5213668857301984, 0.511215226990836, 0.5154704366411481, 0.5068164042064122, 0.5063675812312535, 0.5024638857160296, 0.4999551262174334, 0.4949500731059483, 0.49497292722974506, 0.487796493938991, 0.48419312068394255, 0.48330092430114746, 0.48385872159685406], "val_accuracy": [0.37933334708213806, 0.46533334255218506, 0.5596666932106018, 0.5886666774749756, 0.6306666731834412, 0.6736666560173035, 0.6913333535194397, 0.7066666483879089, 0.7089999914169312, 0.7143333554267883, 0.7236666679382324, 0.737666666507721, 0.737333357334137, 0.7236666679382324, 0.7456666827201843, 0.7436666488647461, 0.7543333172798157, 0.7463333606719971, 0.7433333396911621, 0.7576666474342346, 0.7606666684150696, 0.7523333430290222, 0.765666663646698, 0.7723333239555359, 0.7696666717529297, 0.7693333625793457, 0.7606666684150696, 0.7646666765213013, 0.7749999761581421, 0.7766666412353516, 0.7853333353996277, 0.778333306312561, 0.7770000100135803, 0.7839999794960022, 0.7860000133514404, 0.7846666574478149, 0.7789999842643738, 0.7856666445732117, 0.7850000262260437, 0.7846666574478149]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 8, 2, 6, 4, 1, 0, 2, 5, 2, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 3, 1, 2, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7754285931587219, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164728720677, 2.211560721127207, 2.093130555434423, 1.8813923960112466, 1.6182615272971412, 1.395316147738129, 1.2500586333039918, 1.1509252847099127, 1.0600012182134442, 1.0104015793515044, 0.9709074807252079, 0.9295619907175718, 0.9027970708702943, 0.886763640626893, 0.8652390569523263, 0.8394886150162973, 0.8278345474871222, 0.8079434016581933, 0.799760091196135, 0.7895612177784574, 0.7814950556834424, 0.7641282780941027, 0.7562722581929661, 0.7557136901239631, 0.7399297421240867, 0.7352979914497438, 0.7274364663263149, 0.7177668559064703, 0.7187689419168097, 0.7068215867216876, 0.7027243137706021, 0.6905925879940114, 0.6937925487839393, 0.6868356105721055, 0.6802393439313313, 0.6738869882751024, 0.6703963430487422, 0.6704748776043725, 0.66069081404804, 0.6509786328036851], "accuracy": [0.14595165848731995, 0.28780874609947205, 0.3755118250846863, 0.44287413358688354, 0.4839519262313843, 0.5406154990196228, 0.5669000148773193, 0.5970149040222168, 0.6338660717010498, 0.6365077495574951, 0.6546030640602112, 0.6679434776306152, 0.6778497099876404, 0.6789063811302185, 0.6889446377754211, 0.7025492191314697, 0.7024171352386475, 0.707040011882782, 0.7180029153823853, 0.7131158113479614, 0.7147008180618286, 0.7211728692054749, 0.7277770638465881, 0.7277770638465881, 0.7368907928466797, 0.7310791015625, 0.735041618347168, 0.7345132827758789, 0.739400327205658, 0.7425703406333923, 0.7358341217041016, 0.7445515990257263, 0.7437590956687927, 0.7428345084190369, 0.7457403540611267, 0.7499669790267944, 0.7518161535263062, 0.7515519857406616, 0.7576277852058411, 0.757099449634552], "val_loss": [1.9154807499476842, 1.8301871163504464, 1.6687960284096854, 1.4105496065957206, 1.1493053095681327, 0.9661382607051304, 0.8553660426821027, 0.7811176606587001, 0.7311168568474906, 0.6968213319778442, 0.6653933354786464, 0.6494337831224714, 0.6322983843939645, 0.6220327275139945, 0.6064221858978271, 0.5945366961615426, 0.5810630151203701, 0.5782362733568464, 0.5712124960763114, 0.5621343510491508, 0.5544040713991437, 0.5532355989728656, 0.5444001981190273, 0.5349462883813041, 0.5341919149671283, 0.5300712244851249, 0.5261511121477399, 0.5216733387538365, 0.5114304338182721, 0.515532408441816, 0.5070486068725586, 0.5071091651916504, 0.5028864315577916, 0.5002436126981463, 0.4951628957475935, 0.495207565171378, 0.48786929675510954, 0.48435752732413156, 0.4836010592324393, 0.4839392219270979], "val_accuracy": [0.37933334708213806, 0.46533334255218506, 0.5596666932106018, 0.5879999995231628, 0.6296666860580444, 0.6736666560173035, 0.6919999718666077, 0.7066666483879089, 0.7089999914169312, 0.7143333554267883, 0.7236666679382324, 0.737666666507721, 0.7369999885559082, 0.7233333587646484, 0.7473333477973938, 0.7436666488647461, 0.753000020980835, 0.7463333606719971, 0.7426666617393494, 0.7583333253860474, 0.7603333592414856, 0.7519999742507935, 0.7666666507720947, 0.7723333239555359, 0.7703333497047424, 0.7699999809265137, 0.7599999904632568, 0.7646666765213013, 0.7756666541099548, 0.7753333449363708, 0.7829999923706055, 0.7773333191871643, 0.7766666412353516, 0.7836666703224182, 0.7860000133514404, 0.7846666574478149, 0.781333327293396, 0.7853333353996277, 0.7850000262260437, 0.7839999794960022]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 5, 6, 2, 3, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 15, 73, 33, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7737143039703369, "mapping_values": [1, 34, 34, 22, 12, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.sqrt(grad))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), grad))))))), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164413810392, 2.211560887525803, 2.0931304699992617, 1.8813921591672191, 1.6183064668059837, 1.395443415314278, 1.2501344800924408, 1.1509657260716915, 1.059997235574522, 1.0104174613716455, 0.9708938180825588, 0.929448274471158, 0.9027036201873586, 0.8866903028074367, 0.8653186856637526, 0.8395623632268411, 0.8277957451231743, 0.8077554701892786, 0.7996866603679251, 0.7895258737435478, 0.7814907840513488, 0.7639543358140602, 0.7563524553095896, 0.755558944633372, 0.7400120117282981, 0.7352629165371664, 0.7273030079681765, 0.7177802900108505, 0.7184947085119179, 0.7066819862194538, 0.7024410116422162, 0.690730466598281, 0.6934924224868128, 0.6867338120504346, 0.6799941059856871, 0.6736361515945557], "accuracy": [0.14595165848731995, 0.28780874609947205, 0.37564390897750854, 0.44287413358688354, 0.48408401012420654, 0.5399550795555115, 0.5671641826629639, 0.5971469879150391, 0.6338660717010498, 0.6363756656646729, 0.6543388962745667, 0.667811393737793, 0.6779817938804626, 0.6787742972373962, 0.6889446377754211, 0.702681303024292, 0.7022850513458252, 0.7065116763114929, 0.7180029153823853, 0.7127195596694946, 0.7145687341690063, 0.7207766771316528, 0.7265883088111877, 0.7276449799537659, 0.7368907928466797, 0.7320036888122559, 0.7343811988830566, 0.7346453666687012, 0.7397965788841248, 0.7423061728477478, 0.7358341217041016, 0.7436270117759705, 0.744419515132904, 0.7433628439903259, 0.7467969655990601, 0.7523444890975952], "val_loss": [1.9154807499476842, 1.8301879337855749, 1.6687937804630824, 1.4105523654392786, 1.1494773456028529, 0.9661518846239362, 0.8553028787885394, 0.781184298651559, 0.7312096868242536, 0.696831294468471, 0.6654321295874459, 0.6494609117507935, 0.6322449616023472, 0.6222562108721051, 0.6065828970500401, 0.5942612716129848, 0.5810329062598092, 0.5782856089728219, 0.5711481400898525, 0.562023401260376, 0.554065499986921, 0.5526894501277378, 0.5446175336837769, 0.5348749671663556, 0.5342297043119159, 0.5301152467727661, 0.5258927685873849, 0.5217162711279733, 0.5113719020571027, 0.5155569314956665, 0.5069225345339093, 0.5069231986999512, 0.5029236078262329, 0.49997423376355854, 0.49499002524784635, 0.4953944342476981], "val_accuracy": [0.37933334708213806, 0.46533334255218506, 0.5596666932106018, 0.5886666774749756, 0.6299999952316284, 0.6733333468437195, 0.6919999718666077, 0.7066666483879089, 0.7089999914169312, 0.7143333554267883, 0.7239999771118164, 0.7383333444595337, 0.7369999885559082, 0.7243333458900452, 0.7463333606719971, 0.7436666488647461, 0.7536666393280029, 0.7463333606719971, 0.7423333525657654, 0.7580000162124634, 0.7599999904632568, 0.753333330154419, 0.7646666765213013, 0.7723333239555359, 0.7696666717529297, 0.7693333625793457, 0.7599999904632568, 0.7639999985694885, 0.7756666541099548, 0.7770000100135803, 0.784333348274231, 0.7766666412353516, 0.7766666412353516, 0.7836666703224182, 0.7826666831970215, 0.7839999794960022]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 2, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7722856998443604, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2786164413810392, 2.211560874016152, 2.0931291790560267, 1.8813827578512243, 1.6182474167969532, 1.3953005103481728, 1.2500364587228563, 1.1508951817741642, 1.0600273717018152, 1.010423721118988, 0.970908525070069, 0.929501953181369, 0.9028248763229271, 0.8867147072132128, 0.865413440949157, 0.8395420443333057, 0.8278519254019862, 0.8077876293474988, 0.7997268517066806, 0.7895887503455801, 0.7814382001661181, 0.7639910005905908, 0.7564830320181549, 0.7557918142412695, 0.7399240648820494, 0.7351940392329944, 0.7272012518885397, 0.7177818718367186, 0.7189161136417719, 0.7068100987471421, 0.7023826561756988, 0.690905163844248, 0.6932393326074093, 0.6868367667258644, 0.680113201844552, 0.6734933165464072], "accuracy": [0.14595165848731995, 0.28780874609947205, 0.37564390897750854, 0.442609965801239, 0.483819842338562, 0.5403513312339783, 0.5667679309844971, 0.5971469879150391, 0.6336019039154053, 0.6361114978790283, 0.6544709801673889, 0.6679434776306152, 0.6775855422019958, 0.6782459616661072, 0.6890767216682434, 0.702681303024292, 0.7025492191314697, 0.7066437602043152, 0.7177387475967407, 0.7129837274551392, 0.7143045663833618, 0.7209087014198303, 0.7284374833106995, 0.7268524765968323, 0.737022876739502, 0.7314753532409668, 0.7343811988830566, 0.7347774505615234, 0.7391361594200134, 0.7425703406333923, 0.7345132827758789, 0.7440232634544373, 0.7450799345970154, 0.7427024245262146, 0.7471932172775269, 0.7515519857406616], "val_loss": [1.9154807499476842, 1.8301879337855749, 1.6687891483306885, 1.410534177507673, 1.1493088858468192, 0.9661079815455845, 0.8552954537527901, 0.781033958707537, 0.7311517170497349, 0.6968754700251988, 0.6654250451496669, 0.64943037714277, 0.6322906698499408, 0.6222929443631854, 0.60640401499612, 0.5943058047975812, 0.5811500889914376, 0.5784218651907784, 0.5710537433624268, 0.5616255487714495, 0.5538078546524048, 0.5525834900992257, 0.5447609594890049, 0.534611565726144, 0.5336460556302752, 0.5295169012887138, 0.5255154200962612, 0.5213795219148908, 0.5113156182425362, 0.5155916895185199, 0.5068624019622803, 0.5067325830459595, 0.5026821408952985, 0.5001972402845111, 0.4949061700275966, 0.4954058272497995], "val_accuracy": [0.37933334708213806, 0.46533334255218506, 0.5596666932106018, 0.5879999995231628, 0.6293333172798157, 0.6733333468437195, 0.6919999718666077, 0.7066666483879089, 0.7086666822433472, 0.7143333554267883, 0.7243333458900452, 0.7379999756813049, 0.737333357334137, 0.7239999771118164, 0.746666669845581, 0.7440000176429749, 0.7546666860580444, 0.7459999918937683, 0.7426666617393494, 0.7576666474342346, 0.7599999904632568, 0.7519999742507935, 0.765999972820282, 0.7720000147819519, 0.7703333497047424, 0.7703333497047424, 0.7603333592414856, 0.7643333077430725, 0.7760000228881836, 0.7763333320617676, 0.784333348274231, 0.7766666412353516, 0.7763333320617676, 0.784333348274231, 0.7839999794960022, 0.784333348274231]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 5, 0, 0, 9, 1, 1, 0, 2, 5, 2, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 0, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [57, 94, 87, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [6, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [15], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3402857184410095, "mapping_values": [1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.square(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4118860997953404, 2.3150661221553213, 2.323823156169125, 2.304823016068561, 2.292104495530588, 2.2232086148008205, 2.290463350641414, 2.259715294148298, 2.3050626862586023, 2.3034781093657877, 2.2773630940257568, 2.2588145771613606], "accuracy": [0.22097477316856384, 0.1282525360584259, 0.16061286628246307, 0.09338264167308807, 0.12957337498664856, 0.15480121970176697, 0.1356491893529892, 0.15797120332717896, 0.1010434553027153, 0.10540219396352768, 0.16219785809516907, 0.1228371411561966], "val_loss": [1.9735495022365026, 1.926671096256801, 1.9767505781991142, 1.9727859497070312, 1.7660863058907645, 1.9755137988499232, 1.695439679282052, 1.9754753112792969, 1.9737536566598075, 1.9721482821873255, 1.5863541875566756, 1.9750752449035645], "val_accuracy": [0.10266666859388351, 0.17100000381469727, 0.10066666454076767, 0.10433333367109299, 0.2290000021457672, 0.09799999743700027, 0.35899999737739563, 0.10166666656732559, 0.10166666656732559, 0.17800000309944153, 0.3553333282470703, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 0, 2, 6, 1, 1, 5, 2, 5, 2, 2, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 2, 1, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [6, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3305714428424835, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.411609709459667, 2.35289758654035, 2.3065583875953655, 2.3021208644779274, 2.1454886325110123, 2.3131384308217555, 2.236369446394324, 2.257383235677705, 2.3052680364547546, 2.3031401444325406, 2.3042462063251374], "accuracy": [0.2215031087398529, 0.12296922504901886, 0.1636507660150528, 0.10645885765552521, 0.20842689275741577, 0.13261127471923828, 0.15149913728237152, 0.16800950467586517, 0.09853387624025345, 0.10011887550354004, 0.10210011899471283], "val_loss": [1.9621079989842005, 1.9695544242858887, 1.9751035145350866, 1.9498828479221888, 1.9035313470023019, 1.5761606012071883, 1.962792260306222, 1.9745984758649553, 1.9738988876342773, 1.9737879889351981, 1.9736762728009904], "val_accuracy": [0.12399999797344208, 0.10100000351667404, 0.10066666454076767, 0.26899999380111694, 0.2006666660308838, 0.32466667890548706, 0.2553333342075348, 0.09833333641290665, 0.09799999743700027, 0.10100000351667404, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 8, 1, 9, 1, 1, 0, 2, 5, 2, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 2, 1, 1, 0, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [97, 15, 73, 33, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2931428551673889, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.41192333226852, 2.310628526073169, 2.4562225932253665, 2.3060316740954794, 2.303647606805205, 2.3032423555575434, 2.291228064330593], "accuracy": [0.22097477316856384, 0.13129045069217682, 0.16682076454162598, 0.10051512718200684, 0.10408136248588562, 0.09879804402589798, 0.1398758441209793], "val_loss": [1.9735802922930037, 1.9115986824035645, 1.9787563596452986, 1.9738858767918177, 1.9736787932259696, 1.9731670107160295, 1.7751165117536272], "val_accuracy": [0.10333333164453506, 0.21533332765102386, 0.10066666454076767, 0.10066666454076767, 0.10166666656732559, 0.10166666656732559, 0.20399999618530273]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 8, 1, 9, 1, 1, 0, 2, 5, 3, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [97, 12, 73, 33, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.21057142317295074, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.412322797165602, 2.6047126397543643, 2.3037061944786963, 2.250573147336773, 2.256625441732723, 2.3039966608318814, 2.2806698459722994, 2.3760248567009046, 2.3045023760507766], "accuracy": [0.2222955971956253, 0.1356491893529892, 0.10553427785634995, 0.1834632158279419, 0.15176330506801605, 0.10157178342342377, 0.14159291982650757, 0.15440496802330017, 0.1002509593963623], "val_loss": [1.9929262569972448, 1.9759527615138464, 1.9685654640197754, 1.933274269104004, 1.9743621689932687, 1.9728336334228516, 1.9147522790091378, 1.97629485811506, 1.9736086981637138], "val_accuracy": [0.10166666656732559, 0.10066666454076767, 0.1066666692495346, 0.27433332800865173, 0.10066666454076767, 0.0989999994635582, 0.2409999966621399, 0.0976666659116745, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 5, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [5, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 15, 15, 8, 7, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(grad, tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 1, 8, 2, 9, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(grad, tf.math.subtract(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023357340027046, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 5, 1, 2, 2, 1, 1, 0, 2, 5, 2, 8, 3, 5, 8, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 1, 1, 0, 2, 1, 2, 2, 2, 1, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 0, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [4, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 0, 1, 5, 3, 4], [32], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 15, 11, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023357340027046, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 4, 5, 8, 2, 4, 1, 1, 0, 2, 5, 2, 5, 4, 3, 8, 3, 8, 9, 8, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [20, 93, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [4, 0, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, grad)))), tf.math.multiply(alpha, grad)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.328129216270865, 2.436250372931879, 4.820855806910241, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.049531105905771255, 0.017038701102137566, 0.03803988918662071, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0371640069144115, 2.2145610536847795, 61.36795261928013, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.005333333276212215, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 9, 8, 2, 9, 2, 1, 6, 2, 5, 2, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 1, 2, 2, 2, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [1, 0, 1, 5, 3, 4], [32], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 16, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023357340027046, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 2, 2, 2, 1, 1, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 9, 8, 6, 2, 2, 1, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 1, 2, 1, 2, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [97, 12, 73, 33, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 4, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.060857143253088, "mapping_values": [1, 31, 31, 19, 12, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301694782324093, 2.301480410483535, 2.302300472741964, 2.3001038119336634, 2.3017306862537494, 2.300473401858554, 2.30072866514642, 2.3003996073876896, 2.299055467995324, 2.2988810556250763, 2.29978387687405, 2.299750758987203, 2.301107572007094, 2.3003629616553583], "accuracy": [0.08994849026203156, 0.09351472556591034, 0.08889182657003403, 0.09959053993225098, 0.08677849918603897, 0.09747721254825592, 0.09602430462837219, 0.09642054885625839, 0.09866596013307571, 0.10011887550354004, 0.1014397069811821, 0.10170386731624603, 0.09800554811954498, 0.09589222073554993], "val_loss": [1.97048704964774, 1.9699763570513045, 1.9696433203560966, 1.9696388925824846, 1.9695743833269392, 1.969541345323835, 1.9693611689976283, 1.9692388943263464, 1.9692420278276717, 1.969339370727539, 1.9694521086556571, 1.969759736742292, 1.9699598721095495, 1.9701391628810339], "val_accuracy": [0.04699999839067459, 0.05433333292603493, 0.05700000002980232, 0.05966666713356972, 0.059333331882953644, 0.06700000166893005, 0.07100000232458115, 0.07766667008399963, 0.08166666328907013, 0.07999999821186066, 0.07900000363588333, 0.07999999821186066, 0.07866666465997696, 0.07533333450555801]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 5, 3, 2, 9, 1, 1, 9, 0, 5, 6, 8, 2, 3, 5, 3, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 0, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [3, 94, 73, 70, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [1, 0, 1, 5, 3, 4], [71], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019792108393426, 2.3024980807112287, 2.3040063236651247, 2.301853076609575, 2.3038598071818717, 2.302531414311623], "accuracy": [0.08942015469074249, 0.09126931428909302, 0.08558975160121918, 0.09642054885625839, 0.08149518072605133, 0.09008057415485382], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 5, 8, 2, 2, 1, 3, 0, 2, 5, 2, 8, 3, 3, 8, 3, 8, 8, 9, 9, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 0, 2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1], [97, 12, 73, 33, 77, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [35, 80, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4, 0, 7, 6], [2, 2, 1, 5, 3, 4], [32], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.029428571462631226, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302369302148281, 2.3044788676198795, 2.30823051121729, 2.3082992931666264, 2.313740710918662, 2.3158464931840235], "accuracy": [0.0882314071059227, 0.08836349099874496, 0.08189142495393753, 0.0878351628780365, 0.07132479548454285, 0.08070268481969833], "val_loss": [1.9719041415623255, 1.9736141477312361, 1.9755071231297083, 1.9776972361973353, 1.9804715429033553, 1.9835015024457658], "val_accuracy": [0.03266666829586029, 0.028999999165534973, 0.023333333432674408, 0.020999999716877937, 0.020999999716877937, 0.03166666626930237]}}]