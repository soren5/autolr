[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.75342857837677, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.29560032877798, 2.2732984667614136, 2.248496579928657, 2.2218210054442173, 2.189227961341325, 2.1452839793372918, 2.0896623670275436, 2.0159728959126006, 1.9341625046374193, 1.83457332962083, 1.7315061611663773, 1.6336021888304884, 1.5306718575090008, 1.4462546218482337, 1.371250828479842, 1.3145261718108592, 1.266371961456201, 1.2182811676408825, 1.1813323656959367, 1.1304422414628759, 1.115912177386049, 1.0860137506294023, 1.060826822609524, 1.036887429629996, 1.0195672936710967, 0.9927240156179501, 0.9934088389367444, 0.9640577395814773, 0.9575507453309546, 0.9430307061003657, 0.9204251336194835, 0.9142773847113259, 0.8960533032737246, 0.9006675158934492, 0.8939991980464372, 0.881504549578338, 0.8717668233861257, 0.8627010773453557, 0.8594939246185231, 0.8402262062853857, 0.8350554628064211, 0.8321516865106889, 0.8340305532399517, 0.8206337720427326, 0.8197035939938137, 0.8094195738098231, 0.7995597519627053, 0.7971135902052086, 0.7944916697100185], "accuracy": [0.10606260597705841, 0.16814158856868744, 0.22942808270454407, 0.2793554365634918, 0.32241448760032654, 0.35028398036956787, 0.3789459764957428, 0.4142121374607086, 0.43230748176574707, 0.4585919976234436, 0.4651961326599121, 0.4877823293209076, 0.5115572810173035, 0.520142674446106, 0.5411438345909119, 0.5575221180915833, 0.566239595413208, 0.5778629183769226, 0.5954299569129944, 0.6071853041648865, 0.6086382269859314, 0.6215823292732239, 0.6284506916999817, 0.6333377361297607, 0.6391493678092957, 0.6532822847366333, 0.64667809009552, 0.6565843224525452, 0.6581693291664124, 0.6666226387023926, 0.6701889038085938, 0.6770572066307068, 0.6798309087753296, 0.6716417670249939, 0.6794346570968628, 0.6833971738815308, 0.6870955228805542, 0.693831741809845, 0.6909258961677551, 0.7000396251678467, 0.6922467350959778, 0.6964733600616455, 0.6984546184539795, 0.7062475085258484, 0.7066437602043152, 0.7040021419525146, 0.7088891863822937, 0.7099458575248718, 0.7177387475967407], "val_loss": [1.9508472851344518, 1.930321148463658, 1.9066893713814872, 1.877913270677839, 1.8414421081542969, 1.7941596848624093, 1.7331010954720634, 1.6555859361376082, 1.5646298272269112, 1.4621504034314836, 1.3555481433868408, 1.2524898392813546, 1.157536608832223, 1.0751573698861259, 1.006817034312657, 0.9503858770642962, 0.9036618982042585, 0.8662080424172538, 0.8321774176188877, 0.802295446395874, 0.7791661875588554, 0.7575274535587856, 0.7374387638909476, 0.7220250538417271, 0.7095557110650199, 0.6956660577229091, 0.6855124916349139, 0.6762774331229073, 0.6668024403708321, 0.6571133988244193, 0.649908150945391, 0.6423726422446114, 0.634601320539202, 0.6292950425829206, 0.6236304215022496, 0.618005769593375, 0.6131666217531476, 0.6075400795255389, 0.6025040660585675, 0.596967203276498, 0.5928912162780762, 0.5894925934927804, 0.5870146410805839, 0.5820180688585553, 0.5782452310834613, 0.5756475414548602, 0.5722615207944598, 0.5684329611914498, 0.5650871992111206], "val_accuracy": [0.21433334052562714, 0.3499999940395355, 0.4020000100135803, 0.43700000643730164, 0.4573333263397217, 0.4963333308696747, 0.5213333368301392, 0.5513333082199097, 0.5716666579246521, 0.5816666483879089, 0.5963333249092102, 0.6113333106040955, 0.6320000290870667, 0.6456666588783264, 0.6663333177566528, 0.675000011920929, 0.6866666674613953, 0.6909999847412109, 0.6970000267028809, 0.7020000219345093, 0.7020000219345093, 0.7066666483879089, 0.7096666693687439, 0.7179999947547913, 0.718666672706604, 0.718666672706604, 0.7239999771118164, 0.7269999980926514, 0.7263333201408386, 0.7310000061988831, 0.7310000061988831, 0.7293333411216736, 0.734333336353302, 0.734666645526886, 0.7409999966621399, 0.7403333187103271, 0.7393333315849304, 0.746666669845581, 0.7480000257492065, 0.7483333349227905, 0.7509999871253967, 0.7506666779518127, 0.7506666779518127, 0.7559999823570251, 0.7536666393280029, 0.7549999952316284, 0.7553333044052124, 0.7523333430290222, 0.7549999952316284]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7422857284545898, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011999755660857, 2.2922671172187754, 2.282712153628864, 2.275619718392669, 2.267690542713841, 2.2584404695019855, 2.2497292370481925, 2.239433127434624, 2.2306477707359122, 2.218764427646339, 2.207329093158174, 2.195393307176579, 2.180656138412421, 2.1643405204057977, 2.1460247818253153, 2.127674460395326, 2.1076705614494813, 2.0844319809571137, 2.0594497481514797, 2.0286353376673483, 2.005783765008342, 1.9708611498324942, 1.941395098160696, 1.9023151414237869, 1.8676405984649034, 1.82455532827303, 1.7968489886148966, 1.7488862239862588, 1.7189932242360617, 1.6764037914563321, 1.635266925617531, 1.5986020842941289, 1.5591438116414467, 1.527028876257264, 1.49676117021898, 1.467009868383754, 1.4393698927937655, 1.4107710652268872, 1.3938863703194013, 1.3585952067686944, 1.3334508978884376, 1.3149061854394861, 1.3045233597986576, 1.275200804352776, 1.259067543588058, 1.2466178849514653, 1.2184085859960774, 1.2060931706393887, 1.1950568300527336, 1.1779319402831752, 1.1707850520983347, 1.165569442216951, 1.1500340600952796, 1.1262810715059515, 1.1269154852218537, 1.1160860118171905, 1.095300031171231, 1.0834960191320073, 1.067921083254695, 1.0686859277576077, 1.0546097053497097, 1.0466341488491417, 1.0367957718258032, 1.0283104108860306, 1.0186885579261231, 1.0122202777780671, 1.0112293865135584, 1.0044178686216287, 1.0074167310396411, 0.9936783244470957, 0.9847948138488046, 0.9732291572491696, 0.9698788349449894, 0.9684809821314264, 0.9595488548798411, 0.9608461772524811, 0.9450142100313635, 0.9510033955395797, 0.9372466218359734, 0.9365509933783567, 0.9345070837810291, 0.9346395333319324, 0.9264689903721566, 0.9170143524606261, 0.9156567373091219, 0.9082665648741918, 0.9016190180846524, 0.8989136316804303, 0.8964112385105636, 0.8910495620188916, 0.8915228374630091, 0.8842739767449455, 0.8863900384378943, 0.8726062175698835, 0.8880862835659374, 0.8798835305190751, 0.8741153763380064, 0.8728221067899191, 0.8612410748529239, 0.8685287711107342], "accuracy": [0.09113723784685135, 0.1162329912185669, 0.14449875056743622, 0.16563200950622559, 0.18795403838157654, 0.2082948088645935, 0.22639016807079315, 0.2541275918483734, 0.2709021270275116, 0.28318583965301514, 0.29401662945747375, 0.3109232485294342, 0.3237352967262268, 0.337339848279953, 0.35068023204803467, 0.3637564480304718, 0.37762513756752014, 0.3809272348880768, 0.39783385396003723, 0.40906089544296265, 0.4089288115501404, 0.41923126578330994, 0.4225333631038666, 0.443798691034317, 0.4469687044620514, 0.46070531010627747, 0.45291242003440857, 0.4706115424633026, 0.4678378105163574, 0.48144233226776123, 0.48487651348114014, 0.4994056224822998, 0.5031039714813232, 0.5103685259819031, 0.5144630670547485, 0.5280676484107971, 0.5263505578041077, 0.5322942733764648, 0.5340113639831543, 0.5477479696273804, 0.5539559125900269, 0.5539559125900269, 0.5569937825202942, 0.5659754276275635, 0.5721833109855652, 0.5699379444122314, 0.5765420794487, 0.581429123878479, 0.5892220139503479, 0.5910711884498596, 0.5898824334144592, 0.5892220139503479, 0.5951657891273499, 0.6058644652366638, 0.6013736724853516, 0.6069211363792419, 0.6193369626998901, 0.6156386137008667, 0.624620258808136, 0.62660151720047, 0.6239598393440247, 0.633469820022583, 0.6386210322380066, 0.6369040012359619, 0.637432336807251, 0.6379606127738953, 0.6436402201652527, 0.6373002529144287, 0.6453573107719421, 0.6507726907730103, 0.6472064256668091, 0.651168942451477, 0.6568484902381897, 0.6568484902381897, 0.6606789231300354, 0.6530181169509888, 0.6631884574890137, 0.658961832523346, 0.6634526252746582, 0.6672830581665039, 0.6641130447387695, 0.6647734642028809, 0.6693964004516602, 0.6709813475608826, 0.6752080321311951, 0.6753401160240173, 0.683529257774353, 0.6800950765609741, 0.6806234121322632, 0.6861709356307983, 0.683000922203064, 0.6876237988471985, 0.6757363677024841, 0.6865671873092651, 0.6823405027389526, 0.6836613416671753, 0.683000922203064, 0.687887966632843, 0.6894729733467102, 0.6907938122749329], "val_loss": [1.9634750911167689, 1.956145899636405, 1.9487590108598982, 1.9411772319248743, 1.9334490639822823, 1.9253653117588587, 1.916785444532122, 1.9073989731924874, 1.8974060331072127, 1.886542865208217, 1.8746114458356584, 1.8615031923566545, 1.8469586372375488, 1.831150804247175, 1.8136635507856096, 1.794562544141497, 1.7736331394740514, 1.7506869179861886, 1.725707735334124, 1.6981235572269984, 1.6690287249428886, 1.637510095323835, 1.6043624877929688, 1.5690057277679443, 1.5321982928684779, 1.4939244474683488, 1.4553825855255127, 1.415870121547154, 1.376584870474679, 1.337346111025129, 1.298147133418492, 1.2599656922476632, 1.223036255155291, 1.188143014907837, 1.1547070911952428, 1.1231465339660645, 1.0932846750531877, 1.0656988280160087, 1.040278741291591, 1.0156590597970145, 0.9927717276981899, 0.9714366367885044, 0.9523910454341343, 0.9338776384081159, 0.9164496149335589, 0.9005391938345773, 0.885488476072039, 0.8711264303752354, 0.8578583683286395, 0.8452917337417603, 0.8335745504924229, 0.8235275404793876, 0.8132828303745815, 0.803161450794765, 0.7939338854381016, 0.7853509017399379, 0.7765288352966309, 0.7680436372756958, 0.7602690798895699, 0.7537319319588798, 0.7461426428386143, 0.7394505228315081, 0.7331288542066302, 0.7270579167774746, 0.7212184497288295, 0.7156928437096732, 0.7108803136008126, 0.7056355135781425, 0.7015704427446637, 0.6970035008021763, 0.6928819417953491, 0.6885733945029122, 0.6842893362045288, 0.6807702098573957, 0.6766539641789028, 0.6730884654181344, 0.6690889256341117, 0.666251710483006, 0.6628319876534599, 0.659663336617606, 0.6565101827893939, 0.6540628841945103, 0.6512915747506278, 0.6485091277531215, 0.645331859588623, 0.6427431106567383, 0.6398047719682965, 0.6373318774359567, 0.6351719754082816, 0.6318414211273193, 0.6294046640396118, 0.6270960909979684, 0.6249047006879535, 0.6228087799889701, 0.62092467716762, 0.6191844599587577, 0.6170991148267474, 0.615308438028608, 0.6132981777191162, 0.611885632787432], "val_accuracy": [0.08966666460037231, 0.15833333134651184, 0.23233333230018616, 0.2913333475589752, 0.3323333263397217, 0.36399999260902405, 0.38499999046325684, 0.4013333320617676, 0.41333332657814026, 0.4259999990463257, 0.4403333365917206, 0.44866666197776794, 0.4596666693687439, 0.4690000116825104, 0.4846666753292084, 0.4950000047683716, 0.5049999952316284, 0.5199999809265137, 0.5286666750907898, 0.5376666784286499, 0.5483333468437195, 0.5559999942779541, 0.5603333115577698, 0.5653333067893982, 0.5753333568572998, 0.581333339214325, 0.5843333601951599, 0.5886666774749756, 0.5926666855812073, 0.5953333377838135, 0.6033333539962769, 0.6073333621025085, 0.612333357334137, 0.6190000176429749, 0.6313333511352539, 0.640333354473114, 0.6503333449363708, 0.6543333530426025, 0.6656666398048401, 0.6706666946411133, 0.6729999780654907, 0.6773333549499512, 0.6769999861717224, 0.6803333163261414, 0.6840000152587891, 0.6826666593551636, 0.6893333196640015, 0.6913333535194397, 0.6936666369438171, 0.6953333616256714, 0.6963333487510681, 0.6993333101272583, 0.7006666660308838, 0.7006666660308838, 0.7023333311080933, 0.703000009059906, 0.7053333520889282, 0.7049999833106995, 0.7073333263397217, 0.7070000171661377, 0.7080000042915344, 0.7110000252723694, 0.7143333554267883, 0.7129999995231628, 0.7143333554267883, 0.7163333296775818, 0.7163333296775818, 0.7183333039283752, 0.7200000286102295, 0.7223333120346069, 0.7239999771118164, 0.7250000238418579, 0.7260000109672546, 0.7266666889190674, 0.7279999852180481, 0.7279999852180481, 0.7286666631698608, 0.7289999723434448, 0.7286666631698608, 0.7300000190734863, 0.7303333282470703, 0.731333315372467, 0.7319999933242798, 0.7329999804496765, 0.7319999933242798, 0.7326666712760925, 0.7363333106040955, 0.7369999885559082, 0.7369999885559082, 0.7386666536331177, 0.7366666793823242, 0.7379999756813049, 0.737333357334137, 0.7416666746139526, 0.7400000095367432, 0.7386666536331177, 0.7419999837875366, 0.7413333058357239, 0.7433333396911621, 0.7423333525657654]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3368571400642395, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.239220778483284, 2.320499261104829, 2.3608031307528314, 2.4293774649955497, 2.304788495350854, 2.3034961693763356], "accuracy": [0.20578522980213165, 0.21423853933811188, 0.11517632752656937, 0.1340641975402832, 0.09774138033390045, 0.09774138033390045], "val_loss": [1.8639673505510603, 1.9839330400739397, 1.9483042444501604, 1.9763990129743303, 1.9741435732160295, 1.9737221172877721], "val_accuracy": [0.3400000035762787, 0.10400000214576721, 0.15966667234897614, 0.10066666454076767, 0.0989999994635582, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [2, 5, 9, 4, 0], [3, 1, 1, 1], [6, 97, 79], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 2, 9, 4, 0, 4, 5, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 1, 1, 1, 3, 0, 0, 3], [35, 19], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 1, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 18, 18, 11, 7, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.pow(tf.math.square(grad), tf.math.multiply(tf.math.add(tf.math.square(beta), grad), tf.math.add(beta, alpha)))), tf.math.add(beta, alpha)))), tf.math.add(beta, alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304423690330335, 65.49891006072687, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736992291041784, 1420949080356.5715, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [7, 5, 9, 4, 3, 8, 3, 9], [3, 0, 2, 1], [33, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 2, 5, 3, 1, 1, 1, 4], [42], [0, 1, 0, 1, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08096684515476227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 5], [0, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 3, 1, 1, 5], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, grad), tf.math.add(beta, alpha)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [6, 28, 79], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 3, 2, 2, 2, 5, 1], [42, 13], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 24, 24, 14, 10, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta)))))), tf.math.add(beta, beta))), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 5, 9, 4, 3], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 3, 3, 1, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [5, 4, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3779849306372856, 35.297274988970784, 65760269230242.85, 88895.21810042018, 22498055.33516048, 5676883621.093119], "accuracy": [0.08770307898521423, 0.09826971590518951, 0.10289261490106583, 0.09602430462837219, 0.1010434553027153, 0.09853387624025345], "val_loss": [1.97396605355399, 13.556037902832031, 3344.841727120536, 855963.4285714285, 219126139.42857143, 56096291693.71429], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08096684515476227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 9, 4, 4], [3, 0, 2, 1], [9, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 1, 0, 0, 3], [42, 32, 50], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06199999898672104, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, alpha), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039962030153043, 2.3018765064073734, 2.3000416609872807, 2.3005487639528335, 2.3003863573798635, 2.299557527641122, 2.299381548277281, 2.2988279311727178, 2.2994495247175917, 2.2992656769423108, 2.2992136165403245, 2.3004274725079488, 2.3006260216810825, 2.299727179481054], "accuracy": [0.08334434032440186, 0.09272222965955734, 0.09919429570436478, 0.09800554811954498, 0.09430722147226334, 0.10289261490106583, 0.0956280529499054, 0.1022322028875351, 0.10236428678035736, 0.09589222073554993, 0.10236428678035736, 0.09893012791872025, 0.09668471664190292, 0.09298639744520187], "val_loss": [1.9700612340654646, 1.969524587903704, 1.9694400514875139, 1.9692375319344657, 1.9692697525024414, 1.969365188053676, 1.9692824227469308, 1.969270978655134, 1.96922390801566, 1.969461168561663, 1.9696974754333496, 1.9699488367353166, 1.9701464516775948, 1.9703429767063685], "val_accuracy": [0.05133333429694176, 0.0573333315551281, 0.061666667461395264, 0.06366666406393051, 0.0676666647195816, 0.0676666647195816, 0.07066666334867477, 0.07400000095367432, 0.07466666400432587, 0.07133333384990692, 0.07000000029802322, 0.0689999982714653, 0.07233333587646484, 0.07266666740179062]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [7, 8, 9, 4, 1, 3, 4, 4, 5, 7, 8, 6, 8], [3, 0, 3, 1, 1, 0, 3, 0], [66, 28, 79, 59], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [35, 81], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 21, 21, 13, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 5, 1, 5], [42, 82], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 9, 4, 6], [3, 0, 3, 1], [66, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 3, 0, 1, 1, 5], [42], [1, 1, 0, 0, 1], [0, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [58, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 6, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 6, 9, 4, 6], [3, 2, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 8, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 3, 0, 1, 1, 5], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 1], [3, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 3, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [1, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 5, 2, 9, 4, 0, 4, 1, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 1, 3, 1], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [5, 4], [1, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [7, 5, 9, 4, 2, 1, 0, 9], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [8, 4], [3, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3045281415066903, 2.303486199064687, 2.3018300775145777, 2.3029637041030195, 2.3028200296221346, 2.301720419139154], "accuracy": [0.08281600475311279, 0.08730682730674744, 0.09351472556591034, 0.09351472556591034, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034285712987184525, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304525618036079, 2.3034782323067637, 2.3018212155926703, 2.302949853466801, 2.3027996959278156, 2.301692966740318, 2.3016167383593276, 2.301157260977156, 2.3021617926122837, 2.3014713370993687, 2.3018644710400196, 2.30266308299523, 2.3033179100620087, 2.302124566594765, 2.3014711214488037], "accuracy": [0.08268392831087112, 0.0874389111995697, 0.0936468094587326, 0.09391097724437714, 0.09232597798109055, 0.09826971590518951, 0.0878351628780365, 0.09100515395402908, 0.09681680053472519, 0.09325055778026581, 0.0956280529499054, 0.09457138925790787, 0.08981640636920929, 0.08915598690509796, 0.0874389111995697], "val_loss": [1.9710047585623605, 1.9710027149745397, 1.9710007395063127, 1.970998764038086, 1.970996720450265, 1.970994540623256, 1.9709925651550293, 1.9709905215672083, 1.9709883417401994, 1.9709862981523787, 1.9709841864449638, 1.970982210976737, 1.970980099269322, 1.9709779194423132, 1.9709758758544922], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03733333200216293, 0.03766666725277901, 0.03766666725277901, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [2, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.013142856769263744, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3079164119176796, 2.3152421772550866, 2.3226142608887956, 2.3337256207426447, 2.343896076144197, 2.354289350350929], "accuracy": [0.07396645098924637, 0.06339981406927109, 0.05534275621175766, 0.045568618923425674, 0.030907409265637398, 0.03288865461945534], "val_loss": [1.9787472997392928, 1.9867476735796248, 1.9953387805393763, 2.004619598388672, 2.014674186706543, 2.025862557547433], "val_accuracy": [0.014333332888782024, 0.00800000037997961, 0.0063333334401249886, 0.004999999888241291, 0.004000000189989805, 0.004333333112299442]}}]