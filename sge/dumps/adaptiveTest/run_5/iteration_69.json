[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7582857012748718, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2953549526024646, 2.2715518418209917, 2.250606256374641, 2.220989739968871, 2.188578204015274, 2.1434961418985234, 2.087904329139952, 2.0178276889784903, 1.927971439622318, 1.8340484987333734, 1.727907438367003, 1.6339472615093744, 1.5296006889989457, 1.447241046047324, 1.3756283174148718, 1.322814431267329, 1.2595596469986976, 1.2242727341228048, 1.1829630415815293, 1.1497734268154718, 1.1083042283083988, 1.0799069115356952, 1.0560562989935662, 1.0274300983852447, 1.0121420101640153, 0.9983503315521505, 0.9785916320699128, 0.9582559205065188, 0.9487118294934681, 0.9411062643418081, 0.9298975726223231, 0.9188739277305321, 0.9022693213864151, 0.8913402697035759, 0.889939397884445, 0.8770842908899688, 0.8629206992127814, 0.8713764237485242, 0.8480745068929766, 0.8444215611160676, 0.8401480322941624, 0.8384241597243997, 0.83069567639578, 0.8288632421492901, 0.8230503439635586, 0.8162239441514535, 0.7944088173485735, 0.796046135455799, 0.7833474030615616, 0.7871671383407027, 0.7788985179809296, 0.7803390387530812], "accuracy": [0.10857218503952026, 0.16959451138973236, 0.21754062175750732, 0.2847708463668823, 0.31581032276153564, 0.3649451732635498, 0.38885220885276794, 0.4023246467113495, 0.4259675145149231, 0.448949933052063, 0.46387532353401184, 0.4810461103916168, 0.5075947642326355, 0.520671010017395, 0.5359926223754883, 0.5502575635910034, 0.5650508403778076, 0.5749570727348328, 0.5905428528785706, 0.5935807824134827, 0.6128648519515991, 0.624620258808136, 0.6347906589508057, 0.6336019039154053, 0.646149754524231, 0.6474705934524536, 0.648659348487854, 0.6637167930603027, 0.6655659675598145, 0.6666226387023926, 0.6704530715942383, 0.6679434776306152, 0.6775855422019958, 0.6754721999168396, 0.6822084188461304, 0.6876237988471985, 0.6947563290596008, 0.6865671873092651, 0.6914542317390442, 0.6934354901313782, 0.6960771083831787, 0.6930392384529114, 0.7003037929534912, 0.7051908373832703, 0.7018887996673584, 0.7078325152397156, 0.7148329019546509, 0.7106062769889832, 0.7180029153823853, 0.7157574892044067, 0.7181349992752075, 0.7199841737747192], "val_loss": [1.9508916309901647, 1.9300766672406877, 1.9062703677586146, 1.8772942679268974, 1.840000901903425, 1.791445187159947, 1.7295522008623396, 1.652771064213344, 1.5605333873203822, 1.458606209073748, 1.3506748676300049, 1.248772076198033, 1.15447279385158, 1.0746832575116838, 1.0070295674460275, 0.9514963967459542, 0.9035187789372036, 0.8647516965866089, 0.8317538670131138, 0.8041555370603289, 0.7789030415671212, 0.7573484863553729, 0.7397207702909198, 0.7223224810191563, 0.7071782691138131, 0.6959620032991681, 0.6848187446594238, 0.6743236780166626, 0.664973429271153, 0.657109124319894, 0.649033955165318, 0.6420079980577741, 0.6357618400028774, 0.6275589636393956, 0.6226956503731864, 0.61852308682033, 0.6132867506572178, 0.6078948634011405, 0.6026601791381836, 0.5978159734180996, 0.59409613268716, 0.5889226198196411, 0.5864021267209735, 0.5834089687892369, 0.5783389466149467, 0.5751943758555821, 0.5728740181241717, 0.5689128296715873, 0.5650322266987392, 0.5614649908883231, 0.5596487351826259, 0.5564997707094465], "val_accuracy": [0.21433334052562714, 0.34433332085609436, 0.39899998903274536, 0.437666654586792, 0.4650000035762787, 0.49266666173934937, 0.5323333144187927, 0.5486666560173035, 0.5649999976158142, 0.5816666483879089, 0.5960000157356262, 0.6136666536331177, 0.6290000081062317, 0.652999997138977, 0.6639999747276306, 0.6766666769981384, 0.687333345413208, 0.6936666369438171, 0.6993333101272583, 0.7026666402816772, 0.7043333053588867, 0.7053333520889282, 0.7059999704360962, 0.7113333344459534, 0.7183333039283752, 0.7269999980926514, 0.721666693687439, 0.7289999723434448, 0.7296666502952576, 0.7316666841506958, 0.7333333492279053, 0.7316666841506958, 0.7363333106040955, 0.737666666507721, 0.7400000095367432, 0.7443333268165588, 0.7480000257492065, 0.7473333477973938, 0.7459999918937683, 0.7490000128746033, 0.7459999918937683, 0.7506666779518127, 0.753333330154419, 0.7483333349227905, 0.7553333044052124, 0.7549999952316284, 0.7606666684150696, 0.7526666522026062, 0.7583333253860474, 0.7590000033378601, 0.7599999904632568, 0.7606666684150696]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [1, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7434285879135132, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30088484610045, 2.2907007104606363, 2.284699073667303, 2.2743639985662583, 2.268173338478551, 2.2589388953349876, 2.2506605406730813, 2.241545022675516, 2.2294075432360336, 2.221108811012805, 2.207795802014237, 2.197783782922707, 2.1800568631579926, 2.1648800874414573, 2.1469263204131948, 2.1302086191564076, 2.106889659922908, 2.086509957399823, 2.0596640628988023, 2.035147370033733, 2.0038489676139073, 1.970832238470039, 1.9383281506504506, 1.898561659820989, 1.8651095360277383, 1.832940613620427, 1.7896148779325796, 1.7489356340087872, 1.7149795098878515, 1.6742582165758766, 1.641742331791768, 1.5985016227949407, 1.56707438830891, 1.5283061288304065, 1.4959968832017503, 1.4664484394728752, 1.4370877418724648, 1.420771870866916, 1.3816448278462394, 1.3585912635250492, 1.3391472701902922, 1.3193253625291073, 1.296086253554294, 1.2822077597735375, 1.268749523565927, 1.2443009800898983, 1.2113563806594025, 1.21026897784694, 1.1853144416373247, 1.17685091253033, 1.1622333080540905, 1.1521413509856127, 1.1341978843894538, 1.1305630196039909, 1.1189565124324032, 1.1033560553750876, 1.1006373679082093, 1.0862341740537298, 1.0783201614469822, 1.06697439339655, 1.055326727780967, 1.045843272917086, 1.0428972166007489, 1.032625084610789, 1.027791495415135, 1.0180198838839583, 1.0115801305535321, 1.011514544014634, 1.002599826641307, 0.9866176363168816, 0.9814649839694741, 0.9669513997148608, 0.9776325813925041, 0.9649518550410641, 0.9671430083597183, 0.9534749429790556, 0.9574716480542577, 0.9437542830192497, 0.9493375857744581, 0.9374806868039606, 0.9307134342688013, 0.9293524271477294, 0.9260515407202125, 0.9271641447559529, 0.9108358506103942, 0.9160881592707469, 0.9021437444927481, 0.9109783140644028, 0.9009570281393162, 0.9043724776148844, 0.8939214129772924, 0.8894479923937315, 0.8875804678512964, 0.8984672927884787, 0.8786577082124322, 0.8776297692404825, 0.8748618194991099, 0.8781025807508908, 0.8589188628082719, 0.857199311862611], "accuracy": [0.09774138033390045, 0.11874257028102875, 0.13419628143310547, 0.1690661758184433, 0.17923656105995178, 0.20961563289165497, 0.22665433585643768, 0.244485542178154, 0.2690529525279999, 0.27618545293807983, 0.29124289751052856, 0.30458328127861023, 0.33681151270866394, 0.34103816747665405, 0.35266146063804626, 0.3646810054779053, 0.372209757566452, 0.3759080767631531, 0.39162594079971313, 0.4015321731567383, 0.41645753383636475, 0.4241183400154114, 0.4336283206939697, 0.43587371706962585, 0.44485536217689514, 0.44485536217689514, 0.460969477891922, 0.46664905548095703, 0.4733852744102478, 0.4784044325351715, 0.48910316824913025, 0.49465063214302063, 0.5045568346977234, 0.5123497843742371, 0.522520124912262, 0.5229163765907288, 0.5271430611610413, 0.5258222222328186, 0.5435213446617126, 0.5451063513755798, 0.5511821508407593, 0.5523709058761597, 0.5571258664131165, 0.5641262531280518, 0.5675604343414307, 0.5720512270927429, 0.5868445634841919, 0.5789195895195007, 0.5962224006652832, 0.5912032723426819, 0.5987319946289062, 0.6029586791992188, 0.6037511825561523, 0.6036190986633301, 0.6057323813438416, 0.6116761565208435, 0.6176198720932007, 0.6196011304855347, 0.6198652982711792, 0.618280291557312, 0.6304318904876709, 0.6292431354522705, 0.63096022605896, 0.6328094005584717, 0.6369040012359619, 0.6390172839164734, 0.6431118845939636, 0.6428477168083191, 0.643772304058075, 0.6474705934524536, 0.6535464525222778, 0.6546030640602112, 0.6489235162734985, 0.6605468392372131, 0.6514331102371216, 0.6592260003089905, 0.6608110070228577, 0.6704530715942383, 0.6598864197731018, 0.6671509742736816, 0.6684718132019043, 0.6701889038085938, 0.6733588576316833, 0.668339729309082, 0.6750759482383728, 0.6711134314537048, 0.6802271604537964, 0.6753401160240173, 0.6753401160240173, 0.6789063811302185, 0.68101966381073, 0.6818121671676636, 0.6827367544174194, 0.677189290523529, 0.6827367544174194, 0.6890767216682434, 0.6870955228805542, 0.6831330060958862, 0.6926429867744446, 0.695813000202179], "val_loss": [1.9635026795523507, 1.9561077526637487, 1.9487745421273368, 1.941335814339774, 1.9335320336478097, 1.9252972602844238, 1.9166718210492815, 1.9074551718575614, 1.8973418644496374, 1.886460508619036, 1.874626704624721, 1.8616791452680315, 1.8472381319318498, 1.8312938553946358, 1.8137356894356864, 1.7946652684892928, 1.773571150643485, 1.750835350581578, 1.7258549417768205, 1.6989175592150008, 1.6696593080248152, 1.6381256920950753, 1.604790244783674, 1.5690207821982247, 1.5320991447993688, 1.4942398752485002, 1.4550907952444894, 1.4154346670423235, 1.3760552406311035, 1.3368691035679408, 1.2980893339429582, 1.2602147034236364, 1.2236522265842982, 1.1880389962877547, 1.1544348171779089, 1.1228812762669154, 1.0933860370091029, 1.0663011755262102, 1.0399401869092668, 1.0155605588640486, 0.9930126667022705, 0.9720127923148019, 0.9523013319287982, 0.9341579845973423, 0.9175465106964111, 0.9017008713313511, 0.8866439206259591, 0.8719330174582345, 0.8580032416752407, 0.8454322133745465, 0.8334435565131051, 0.8220997537885394, 0.8112736940383911, 0.801717826298305, 0.7925089257104057, 0.7833727598190308, 0.775348254612514, 0.7670861482620239, 0.7593882594789777, 0.7521404368536813, 0.7455070529665265, 0.7386243854250226, 0.7325832162584577, 0.7265434435435704, 0.7210995980671474, 0.7155097212110247, 0.710457410131182, 0.7059403657913208, 0.70150773865836, 0.6969600064413888, 0.6927456004279, 0.6879454169954572, 0.6841116803033012, 0.6800179651805333, 0.6765175717217582, 0.6727277551378522, 0.6693168708256313, 0.6660334723336356, 0.6629778827939715, 0.6595557757786342, 0.6565041371754238, 0.6536276681082589, 0.6509987797055926, 0.6480474642344883, 0.6463280405317035, 0.6433077539716449, 0.6401931047439575, 0.63787271295275, 0.6355808632714408, 0.6336230720792498, 0.6307542324066162, 0.6285194669451032, 0.6263073342187064, 0.624460050037929, 0.6219190018517631, 0.6201596089771816, 0.6174197367259434, 0.6155399254390171, 0.6133250168391636, 0.6110444920403617], "val_accuracy": [0.09133332967758179, 0.1586666703224182, 0.23266667127609253, 0.28966665267944336, 0.3356666564941406, 0.3606666624546051, 0.3786666691303253, 0.39399999380111694, 0.40833333134651184, 0.42500001192092896, 0.43966665863990784, 0.44866666197776794, 0.4586666524410248, 0.47200000286102295, 0.4856666624546051, 0.4963333308696747, 0.5090000033378601, 0.5203333497047424, 0.528333306312561, 0.5400000214576721, 0.5460000038146973, 0.5543333292007446, 0.5600000023841858, 0.5696666836738586, 0.5766666531562805, 0.5830000042915344, 0.5839999914169312, 0.5903333425521851, 0.5920000076293945, 0.5913333296775818, 0.5996666550636292, 0.6076666712760925, 0.6143333315849304, 0.6196666955947876, 0.6340000033378601, 0.6439999938011169, 0.6483333110809326, 0.653333306312561, 0.659333348274231, 0.6660000085830688, 0.6673333048820496, 0.675000011920929, 0.6763333082199097, 0.6783333420753479, 0.6833333373069763, 0.6869999766349792, 0.6886666417121887, 0.690666675567627, 0.6926666498184204, 0.6949999928474426, 0.6973333358764648, 0.699999988079071, 0.7009999752044678, 0.7006666660308838, 0.7023333311080933, 0.7043333053588867, 0.7053333520889282, 0.706333339214325, 0.7093333601951599, 0.7099999785423279, 0.7133333086967468, 0.7153333425521851, 0.715666651725769, 0.7153333425521851, 0.7160000205039978, 0.7160000205039978, 0.7203333377838135, 0.7206666469573975, 0.718666672706604, 0.721666693687439, 0.7229999899864197, 0.7229999899864197, 0.7263333201408386, 0.7266666889190674, 0.7266666889190674, 0.7273333072662354, 0.7279999852180481, 0.7276666760444641, 0.7306666374206543, 0.7296666502952576, 0.7303333282470703, 0.7303333282470703, 0.7306666374206543, 0.731333315372467, 0.7326666712760925, 0.7336666584014893, 0.7336666584014893, 0.7329999804496765, 0.7336666584014893, 0.7350000143051147, 0.7363333106040955, 0.737333357334137, 0.7366666793823242, 0.7369999885559082, 0.7396666407585144, 0.7383333444595337, 0.7419999837875366, 0.7400000095367432, 0.7443333268165588, 0.7433333396911621]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [1, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [58], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.19371429085731506, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.316236295121898, 2.298198750557255, 2.4683895199258865, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22678641974925995, 0.12019548565149307, 0.1442345827817917, 0.13974376022815704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9779022080557687, 1.8932891573224748, 1.677384376525879, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.18533332645893097, 0.3149999976158142, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [9, 5, 9, 4], [0, 0, 2, 1], [6, 97, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 4], [4, 1, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.1120000034570694, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031178733471473, 2.3003918734429423, 2.301106926661441, 2.3013308143036286, 2.3020980408509426, 2.3022882124341915, 2.302497889560684, 2.3025517431563234, 2.3025803833337837, 2.30258270891477], "accuracy": [0.09034473448991776, 0.0952318087220192, 0.10091137140989304, 0.10447761416435242, 0.09919429570436478, 0.10408136248588562, 0.10249637067317963, 0.10276053100824356, 0.10130762308835983, 0.09998679161071777], "val_loss": [1.9705088479178292, 1.971508298601423, 1.97261871610369, 1.9732451438903809, 1.9735408510480608, 1.9736272266932897, 1.9736408506120955, 1.973644529070173, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.07233333587646484, 0.09933333098888397, 0.10266666859388351, 0.09099999815225601, 0.1146666631102562, 0.10999999940395355, 0.10333333164453506, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 4], [0, 0, 2, 1], [17, 28, 79], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 3, 2, 2, 2, 5, 1], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [2, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10114285349845886, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [14255.172383796773, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14542332291603088, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14659087213.714285, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [6, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08506141602993011, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 5, 9, 4, 3], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 5, 2, 8, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 3, 3, 1, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [5, 4, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 6, 4, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), beta))), tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3775351220086707, 6.3504814610993305, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.09681680053472519, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737298148018974, 37.101353236607146, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10166666656732559, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 9, 4, 4], [3, 0, 2, 1], [9, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 2, 9, 4, 5, 4, 5, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 1, 0, 0, 3], [42, 32, 50], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 5], [3, 1, 1, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 2, 9, 4, 0, 4, 5, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [35, 19], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 1, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11293092370033264, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 9, 4, 6], [0, 0, 2, 1], [66, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3, 3, 0, 1, 1, 5], [42], [0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0], [3, 4, 1], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 4, 0], [3, 1, 1, 1], [6, 97, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 2, 5, 3, 1, 1, 1, 4], [42], [0, 1, 1, 1, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [71, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 0, 5, 1, 5], [42, 23], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 5, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 3, 0, 0, 3], [42, 63, 79], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [4, 1, 2, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 3, 3, 1, 2, 1, 12, 7, 5, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.subtract(sigma, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [2, 5, 9, 4, 0], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 4, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 0, 4, 3, 3, 2, 3, 2, 3, 5, 1, 5, 4, 5, 3], [35, 19], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 1, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 40, 40, 22, 18, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.pow(tf.math.pow(grad, tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(beta, beta)), grad), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), grad)), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.pow(tf.math.subtract(beta, tf.math.add(beta, grad)), beta))))), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))))), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030658314303953, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0440942900521413, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007666666526347399, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06971428543329239, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303690434289473, 2.3005417218974804, 2.3015391831668204, 2.2990110109447883, 2.3006247762108933, 2.300008822929716, 2.3001759971814653, 2.300051886061352, 2.2987138371914133, 2.3006872525225854, 2.299392169414022, 2.300249298187909, 2.299302046750247, 2.300192151449423, 2.299848715264831, 2.3004429965774382, 2.3006558178312284], "accuracy": [0.09140139818191528, 0.09496764093637466, 0.09232597798109055, 0.10289261490106583, 0.09642054885625839, 0.09668471664190292, 0.09893012791872025, 0.1018359512090683, 0.10170386731624603, 0.09100515395402908, 0.09615638852119446, 0.09893012791872025, 0.09919429570436478, 0.09021265059709549, 0.09311848133802414, 0.09932637959718704, 0.09879804402589798], "val_loss": [1.970207895551409, 1.9696029254368372, 1.9694171633039201, 1.9693987710135323, 1.9693994522094727, 1.9694607598440987, 1.9694321496146066, 1.9692809241158622, 1.9692448207310267, 1.969214575631278, 1.9694443430219377, 1.9696437290736608, 1.9699722017560686, 1.970203195299421, 1.9704782622201102, 1.9706286702837263, 1.9708382061549596], "val_accuracy": [0.050333332270383835, 0.05666666850447655, 0.05966666713356972, 0.0663333311676979, 0.06866666674613953, 0.070333331823349, 0.07566666603088379, 0.07766667008399963, 0.08100000023841858, 0.08233333379030228, 0.0820000022649765, 0.08266666531562805, 0.0793333351612091, 0.07733333110809326, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 3, 0, 1, 1, 5], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [1, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06771428883075714, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(beta), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303690434289473, 2.300542288735999, 2.3015386748386333, 2.2990102822738727, 2.3006240023503515, 2.300008953365557, 2.3001763166579523, 2.3000503790581686, 2.29871356252666, 2.3006866807399757, 2.299387248059022, 2.3002415297919763, 2.299292748236716, 2.3001807706231028, 2.299840231235269], "accuracy": [0.09140139818191528, 0.0948355570435524, 0.09206181764602661, 0.10276053100824356, 0.09655263274908066, 0.09655263274908066, 0.09879804402589798, 0.1018359512090683, 0.10170386731624603, 0.09100515395402908, 0.09628847241401672, 0.09893012791872025, 0.09906221181154251, 0.09034473448991776, 0.09325055778026581], "val_loss": [1.9702080999101912, 1.969602448599679, 1.969416686466762, 1.969397749219622, 1.9694005421229772, 1.9694608279636927, 1.9694299697875977, 1.9692766325814384, 1.9692418234688895, 1.9692105565752303, 1.9694383484976632, 1.96963255746024, 1.969959054674421, 1.97019134249006, 1.9704714502607072], "val_accuracy": [0.050333332270383835, 0.05666666850447655, 0.05966666713356972, 0.0663333311676979, 0.06866666674613953, 0.070333331823349, 0.07566666603088379, 0.07766667008399963, 0.08133333176374435, 0.08299999684095383, 0.08166666328907013, 0.08233333379030228, 0.0793333351612091, 0.07766667008399963, 0.07633333653211594]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 5], [3, 0, 3, 1, 1, 0, 3, 0], [66, 28, 79, 59], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 3, 3, 0, 0, 1, 1, 5], [42, 65], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, alpha), alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3041716452996495, 2.301926173522661, 2.3035411514453035, 2.300986813610854, 2.303069399363959, 2.302500951307451], "accuracy": [0.09113723784685135, 0.09100515395402908, 0.08638224750757217, 0.09721305221319199, 0.09021265059709549, 0.09153348207473755], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [6, 28, 79], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 3, 2, 2, 2, 5, 1], [42, 13], [1, 1, 0, 0, 1], [1, 1, 1, 0], [0, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), beta)))), tf.math.add(beta, beta))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3041716452996495, 2.301926173522661, 2.3035411514453035, 2.300986813610854, 2.303069399363959, 2.302500951307451], "accuracy": [0.09113723784685135, 0.09100515395402908, 0.08638224750757217, 0.09721305221319199, 0.09021265059709549, 0.09153348207473755], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [2, 5, 9, 4, 0], [3, 1, 1, 1], [6, 97, 79], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 2, 9, 4, 0, 4, 5, 3, 5, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 3, 1, 1, 3, 0, 0, 3], [35, 19], [1, 1, 0, 0, 1], [0, 0, 1, 0], [3, 4], [2, 1, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.pow(beta, tf.math.square(tf.math.multiply(tf.math.square(grad), grad)))))))), tf.math.add(beta, alpha)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3041716452996495, 2.301926173522661, 2.3035411514453035, 2.300986813610854, 2.303069399363959, 2.302500951307451], "accuracy": [0.09113723784685135, 0.09100515395402908, 0.08638224750757217, 0.09721305221319199, 0.09021265059709549, 0.09153348207473755], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [6, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.012857142835855484, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3075198560673655, 2.3136750663575434, 2.323868259950919, 2.3306771596944595, 2.3433365035507387, 2.354982258542622], "accuracy": [0.08374059200286865, 0.06815480440855026, 0.05045568570494652, 0.04649319872260094, 0.03486989811062813, 0.02919033169746399], "val_loss": [1.9787137848990304, 1.9867243085588728, 1.9951128278459822, 2.0041704177856445, 2.0141283443995883, 2.025324957711356], "val_accuracy": [0.014666666276752949, 0.00800000037997961, 0.006666666828095913, 0.004999999888241291, 0.004000000189989805, 0.003666666569188237]}}]