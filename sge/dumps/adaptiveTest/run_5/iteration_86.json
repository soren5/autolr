[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 2, 2, 5, 4, 3, 2, 7, 1, 6, 1, 2, 8, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 55, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7645714282989502, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), alpha))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2955601187335533, 2.2723635187112516, 2.250045392334091, 2.2225762243047917, 2.189838163226965, 2.146519963672967, 2.0909370191345094, 2.023992307245015, 1.9371784334059294, 1.8383334842041232, 1.7302134645581955, 1.6277014195659236, 1.532715348283518, 1.4452629120374132, 1.3783635996934556, 1.315423773421808, 1.2565187448366302, 1.2155211885859387, 1.168117731475024, 1.1509814531166067, 1.1217779114639692, 1.085131681968413, 1.0627398547432159, 1.0294521454696595, 1.0249337966904082, 1.0002545620771275, 0.9805952653341983, 0.9652936336087544, 0.952660807725886, 0.9292173708560617, 0.928292153486565, 0.9126117338892995, 0.9051516753350897, 0.8986548869176201, 0.8890029089467526, 0.8757704027560975, 0.8782344698402088, 0.8577279838210697, 0.8493016917613267, 0.8472723204068315, 0.8341646646354272, 0.8412359987724223, 0.824707596647804, 0.8278215472503913, 0.8210187112855212, 0.8048632632094194, 0.8077952870918287, 0.8000936370248005, 0.8043373792540868, 0.7849220885435005, 0.7884843214596456, 0.7826432725536415, 0.7737148998514568, 0.7698262446765273, 0.7719226467957382, 0.7698843707623908, 0.7642934127348981, 0.7543560222407311, 0.7605860291565288, 0.7517895853404497, 0.7520835006068552, 0.7530062441828386, 0.7393401085960394, 0.7329822514570778, 0.7359630385362839], "accuracy": [0.10936468094587326, 0.1686699241399765, 0.22995641827583313, 0.27961960434913635, 0.3167349100112915, 0.351340651512146, 0.37987056374549866, 0.3967771828174591, 0.42187294363975525, 0.4505349397659302, 0.4699511229991913, 0.4884427487850189, 0.5069343447685242, 0.5287280678749084, 0.5418042540550232, 0.5543521046638489, 0.5758816599845886, 0.5802403688430786, 0.5972790718078613, 0.5938449501991272, 0.6065248847007751, 0.6264694333076477, 0.6308281421661377, 0.6388852000236511, 0.6412627100944519, 0.6441685557365417, 0.6546030640602112, 0.6535464525222778, 0.661471426486969, 0.667811393737793, 0.6668868064880371, 0.6781138777732849, 0.6778497099876404, 0.6763967871665955, 0.6843217611312866, 0.6866992712020874, 0.6877558827400208, 0.6851142644882202, 0.6952846646308899, 0.6936996579170227, 0.6963412761688232, 0.7004358768463135, 0.7043983340263367, 0.7016246318817139, 0.7025492191314697, 0.7132478952407837, 0.7112666964530945, 0.7086250185966492, 0.7080966830253601, 0.713908314704895, 0.7131158113479614, 0.7152291536331177, 0.7239466309547424, 0.7190595865249634, 0.7217012047767639, 0.720380425453186, 0.7210407853126526, 0.7251353859901428, 0.7271166443824768, 0.7281733155250549, 0.7253995537757874, 0.7220974564552307, 0.7281733155250549, 0.7354378700256348, 0.7327961921691895], "val_loss": [1.9512654032026018, 1.9308806828090124, 1.9073264939444405, 1.8782713072640556, 1.841306209564209, 1.7934515135628837, 1.7328105654035295, 1.6571359634399414, 1.5662433419908797, 1.4628919873918806, 1.355248553412301, 1.250682762690953, 1.1559807913643974, 1.0738379274095808, 1.00665055002485, 0.9506355694362095, 0.9025213377816337, 0.864226222038269, 0.8300912039620536, 0.8032896859305245, 0.7798742737088885, 0.758642145565578, 0.7391601460320609, 0.7242484092712402, 0.7092446769986834, 0.6969142130443028, 0.6847258125032697, 0.674782225063869, 0.6651344299316406, 0.6565054825374058, 0.6490019900458199, 0.6410583257675171, 0.6369970185416085, 0.6308038234710693, 0.6244146823883057, 0.6177477496010917, 0.6131822722298759, 0.6082046372549874, 0.6035010474068778, 0.5980277402060372, 0.5930314064025879, 0.5911638907023838, 0.5858690227781024, 0.5837739876338414, 0.5801232542310443, 0.5763791799545288, 0.5722289766584124, 0.5692694016865322, 0.5669325590133667, 0.5622948067528861, 0.5606657096317836, 0.5567038229533604, 0.5554401874542236, 0.5520379202706474, 0.5493968725204468, 0.547105039869036, 0.5450895343508039, 0.5439922979899815, 0.5413497856685093, 0.5387205226080758, 0.5365095479147775, 0.5366016115461077, 0.5321073021207537, 0.5320143359048026, 0.532382709639413], "val_accuracy": [0.2136666625738144, 0.34333333373069763, 0.3919999897480011, 0.429666668176651, 0.46000000834465027, 0.49900001287460327, 0.5260000228881836, 0.5416666865348816, 0.5669999718666077, 0.5870000123977661, 0.5923333168029785, 0.609333336353302, 0.6230000257492065, 0.6620000004768372, 0.6683333516120911, 0.6733333468437195, 0.6846666932106018, 0.6933333277702332, 0.6949999928474426, 0.7020000219345093, 0.7046666741371155, 0.7056666612625122, 0.7120000123977661, 0.7139999866485596, 0.7196666598320007, 0.7179999947547913, 0.7263333201408386, 0.7263333201408386, 0.7296666502952576, 0.7269999980926514, 0.7326666712760925, 0.7383333444595337, 0.7303333282470703, 0.7336666584014893, 0.7396666407585144, 0.7360000014305115, 0.7426666617393494, 0.7446666955947876, 0.7450000047683716, 0.7436666488647461, 0.7459999918937683, 0.7519999742507935, 0.7516666650772095, 0.7516666650772095, 0.750333309173584, 0.7570000290870667, 0.7526666522026062, 0.7620000243186951, 0.762666642665863, 0.7609999775886536, 0.7643333077430725, 0.7603333592414856, 0.7606666684150696, 0.7570000290870667, 0.7670000195503235, 0.7649999856948853, 0.7696666717529297, 0.7723333239555359, 0.7706666588783264, 0.7736666798591614, 0.7720000147819519, 0.7646666765213013, 0.7723333239555359, 0.7703333497047424, 0.7670000195503235]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 6, 0, 5, 9, 7, 5, 5, 6, 5, 8, 2, 5], [2, 0, 2, 1, 0, 3, 1, 3, 2, 1, 0, 2, 0, 3, 2, 0, 1], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7645714282989502, "mapping_values": [1, 40, 40, 25, 15, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, alpha)), grad)))), tf.math.square(grad))))), tf.math.add(alpha, alpha))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(grad))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.295560136714931, 2.2723635187112516, 2.250045266369976, 2.222576197285489, 2.1898405697713863, 2.1465255732644017, 2.0909440142367384, 2.024001007523472, 1.9371856986067126, 1.838346502469468, 1.73022336373161, 1.6277051640539404, 1.5327234462803034, 1.4452689843422795, 1.3783623428077683, 1.3154125247003536, 1.2564997518728627, 1.2155107159923806, 1.1681064538762964, 1.150990439113168, 1.121737590287702, 1.0850999819651381, 1.0627508099682814, 1.0294546710659154, 1.0249351273438305, 1.0002641756741473, 0.9805837666684485, 0.9652739638870323, 0.9526383113615454, 0.9292078474178573, 0.9282547411366288, 0.9125895685665265, 0.9051106467522241, 0.898640618733978, 0.8890119244740261, 0.8757684651052223, 0.8782112491743329, 0.8576931254880429, 0.8492797273828085, 0.8472615940506905, 0.8341121868434725, 0.8412532190746871, 0.8246508599382586, 0.8277829386901074, 0.8210615278109111, 0.8048420514192532, 0.8077645954234237, 0.8001188690541773, 0.8043465581489451, 0.7848898900608581, 0.7884178878750547, 0.7826186207543432, 0.7737132808819203, 0.7697995011801134, 0.7719088818938458, 0.7698924729553558, 0.7641859730520363, 0.7543392272799195, 0.7604907420663755, 0.7517259086852124, 0.7520808936928903, 0.7530801222545124, 0.7393146623883029, 0.7329537174516209, 0.7359391083539107], "accuracy": [0.10936468094587326, 0.1686699241399765, 0.22995641827583313, 0.27961960434913635, 0.31660282611846924, 0.351340651512146, 0.3800026476383209, 0.39664509892463684, 0.421740859746933, 0.4504028558731079, 0.4699511229991913, 0.48870691657066345, 0.5069343447685242, 0.5288601517677307, 0.5419363379478455, 0.5543521046638489, 0.5758816599845886, 0.5799762010574341, 0.5972790718078613, 0.5941091179847717, 0.6063928008079529, 0.6264694333076477, 0.6308281421661377, 0.6386210322380066, 0.6409985423088074, 0.644300639629364, 0.6540747880935669, 0.6532822847366333, 0.6613393425941467, 0.6680755615234375, 0.6668868064880371, 0.6781138777732849, 0.6779817938804626, 0.6765288710594177, 0.6843217611312866, 0.6868313550949097, 0.6873596906661987, 0.6852463483810425, 0.6951525807380676, 0.693831741809845, 0.6964733600616455, 0.700171709060669, 0.7041342258453369, 0.7017567157745361, 0.7029454708099365, 0.713379979133606, 0.7113987803459167, 0.7088891863822937, 0.7078325152397156, 0.7137762308120728, 0.7132478952407837, 0.7154933214187622, 0.7240787148475647, 0.7191916704177856, 0.7219653725624084, 0.7206445932388306, 0.7209087014198303, 0.7256637215614319, 0.7269845604896545, 0.7281733155250549, 0.7253995537757874, 0.7220974564552307, 0.7283053994178772, 0.7359662055969238, 0.7333245277404785], "val_loss": [1.9512653350830078, 1.9308806828090124, 1.9073264939444405, 1.8782718522208077, 1.841310637337821, 1.7934575080871582, 1.7328203746250697, 1.657142230442592, 1.5662519250597273, 1.462902035032, 1.355257408959525, 1.2506914479391915, 1.1559948921203613, 1.0738467488970076, 1.0066494601113456, 0.9506433010101318, 0.9025358472551618, 0.8642283167157855, 0.8300900459289551, 0.8032662868499756, 0.7798481498445783, 0.7586044754300799, 0.7391497918537685, 0.7242780753544399, 0.7092510632106236, 0.6969454629080636, 0.684733544077192, 0.674750668661935, 0.6650945629392352, 0.6564532007489886, 0.6489443097795758, 0.6410261222294399, 0.63689238684518, 0.6307607548577445, 0.6243691784994942, 0.6177620036261422, 0.6131630625043597, 0.6082334177834647, 0.6035294703074864, 0.5980219841003418, 0.5930676800864083, 0.5911578791482108, 0.5858840772083828, 0.5837344952992031, 0.5800663232803345, 0.5763516426086426, 0.5721709387642997, 0.5692608186176845, 0.5669076783316476, 0.5623068979808262, 0.5606505359922137, 0.5567400285175869, 0.5554532834461757, 0.5520031111580985, 0.5493345090321132, 0.5469932215554374, 0.5450290441513062, 0.5440235819135394, 0.5413907255445208, 0.5387179170336042, 0.5364767823900495, 0.5365506410598755, 0.5320524999073574, 0.5319893189838955, 0.5323032992226737], "val_accuracy": [0.2136666625738144, 0.34333333373069763, 0.3919999897480011, 0.429666668176651, 0.46000000834465027, 0.4986666738986969, 0.5260000228881836, 0.5419999957084656, 0.5673333406448364, 0.5866666436195374, 0.5923333168029785, 0.609000027179718, 0.6230000257492065, 0.6620000004768372, 0.6683333516120911, 0.6733333468437195, 0.6850000023841858, 0.6933333277702332, 0.6949999928474426, 0.7020000219345093, 0.7046666741371155, 0.7056666612625122, 0.7120000123977661, 0.7139999866485596, 0.7200000286102295, 0.7183333039283752, 0.7260000109672546, 0.7260000109672546, 0.7293333411216736, 0.7273333072662354, 0.7333333492279053, 0.7383333444595337, 0.7303333282470703, 0.734000027179718, 0.7396666407585144, 0.7356666922569275, 0.7426666617393494, 0.7446666955947876, 0.7450000047683716, 0.7433333396911621, 0.7456666827201843, 0.753333330154419, 0.7516666650772095, 0.7526666522026062, 0.750333309173584, 0.7570000290870667, 0.753000020980835, 0.7616666555404663, 0.7630000114440918, 0.7606666684150696, 0.7643333077430725, 0.7606666684150696, 0.7606666684150696, 0.7570000290870667, 0.7673333287239075, 0.765333354473114, 0.7699999809265137, 0.7720000147819519, 0.7706666588783264, 0.7736666798591614, 0.7720000147819519, 0.7649999856948853, 0.7720000147819519, 0.7703333497047424, 0.7680000066757202]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7642857432365417, "mapping_values": [1, 44, 44, 27, 17, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.295560136714931, 2.2723635187112516, 2.2500451674251636, 2.2225755539552616, 2.189840205388692, 2.1465228290731693, 2.0909450802710454, 2.023998692980091, 1.9371860065732287, 1.8383490659966681, 1.73021455836759, 1.62769237074476, 1.5326784154159865, 1.4452342090510957, 1.3783404950247842, 1.3154101350351237, 1.2564884127091738, 1.2155175124491997, 1.1681011006060908, 1.1509699461529708, 1.1217215027334888, 1.085082371662227, 1.062730658654256, 1.0294156070272638, 1.0249107920214988, 1.0002477504888687, 0.9805600135522574, 0.9652912356692566, 0.9526702766452467, 0.9292173309805465, 0.928295657375249, 0.9125982557210971, 0.905131154473841, 0.8986790270034458, 0.8889802259350843, 0.8757497595285837, 0.8782332802902139, 0.8577355916914828, 0.8492944984388169, 0.8472455299021845, 0.8341129312677753, 0.8412616826035895, 0.82461643589801, 0.8278438123761073, 0.8210290744477543, 0.8048220236524064, 0.8077702269719781, 0.8000838454798496, 0.804303373635138, 0.7848212324302305, 0.7883673909632852, 0.7826527001961363, 0.7737556652952856, 0.7697945024831467, 0.7719135317253225, 0.7698531970529351, 0.7641107444797194, 0.7544197482502834, 0.7605545302943278, 0.7518453281380166, 0.7521461467575388, 0.752918033914134, 0.7392405779795357, 0.7329415980032201, 0.735880288308118], "accuracy": [0.10936468094587326, 0.1686699241399765, 0.22995641827583313, 0.27961960434913635, 0.3163386583328247, 0.35147273540496826, 0.3800026476383209, 0.39690926671028137, 0.42187294363975525, 0.4504028558731079, 0.4702152907848358, 0.4888390004634857, 0.5070664286613464, 0.5287280678749084, 0.5419363379478455, 0.5543521046638489, 0.5760137438774109, 0.5803724527359009, 0.5972790718078613, 0.5941091179847717, 0.6066569685935974, 0.6269977688789368, 0.6310923099517822, 0.6384889483451843, 0.6409985423088074, 0.6440364718437195, 0.6542068123817444, 0.6530181169509888, 0.6612072587013245, 0.6682076454162598, 0.6667547225952148, 0.6782459616661072, 0.6774534583091736, 0.6763967871665955, 0.6844538450241089, 0.6863030195236206, 0.6870955228805542, 0.685510516166687, 0.6947563290596008, 0.693831741809845, 0.6971337795257568, 0.6996433734893799, 0.7042662501335144, 0.7020208835601807, 0.7025492191314697, 0.7135120630264282, 0.711530864238739, 0.7084929347038269, 0.7078325152397156, 0.7137762308120728, 0.7131158113479614, 0.7157574892044067, 0.7248712182044983, 0.7186633348464966, 0.7215691208839417, 0.720380425453186, 0.7209087014198303, 0.7255316376686096, 0.7269845604896545, 0.7280412316322327, 0.7255316376686096, 0.722229540348053, 0.7277770638465881, 0.7359662055969238, 0.7333245277404785], "val_loss": [1.9512653350830078, 1.9308805465698242, 1.9073262214660645, 1.878272465297154, 1.8413091387067522, 1.7934545108250208, 1.7328195571899414, 1.6571430478777205, 1.5662499836512975, 1.462893349783761, 1.3552424907684326, 1.250661747796195, 1.1559446879795618, 1.0737997463771276, 1.00661986214774, 0.950625113078526, 0.9025092124938965, 0.8641833066940308, 0.8300637858254569, 0.8032481500080654, 0.7798224176679339, 0.7585713011877877, 0.7391360657555717, 0.7242585250309536, 0.7092524766921997, 0.6969597680228097, 0.6847443410328456, 0.6748158420835223, 0.6652300528117588, 0.6565185104097638, 0.6490022795540946, 0.6410936968667167, 0.6370302268436977, 0.630866391318185, 0.6244739804949079, 0.6178415673119682, 0.6132381984165737, 0.6082292795181274, 0.6035668679646083, 0.5980136394500732, 0.5930577516555786, 0.5912054777145386, 0.5859125171388898, 0.5837745496204921, 0.5800823143550328, 0.5763522045952933, 0.5721802711486816, 0.5692205088479179, 0.5668631281171527, 0.5622082267488752, 0.5605968747820173, 0.556772095816476, 0.5555002008165631, 0.5519911902291434, 0.5493722472872052, 0.5470505441938128, 0.5450677701405117, 0.5440719468252999, 0.5413571085248675, 0.5387400729315621, 0.5364684207098824, 0.5365842069898333, 0.532004816191537, 0.5319914477212089, 0.5323504890714373], "val_accuracy": [0.2136666625738144, 0.34333333373069763, 0.3919999897480011, 0.42933332920074463, 0.46033334732055664, 0.4986666738986969, 0.5263333320617676, 0.5416666865348816, 0.5669999718666077, 0.5870000123977661, 0.5923333168029785, 0.609666645526886, 0.6233333349227905, 0.6620000004768372, 0.6683333516120911, 0.6733333468437195, 0.6846666932106018, 0.6930000185966492, 0.6953333616256714, 0.7023333311080933, 0.7049999833106995, 0.7059999704360962, 0.7120000123977661, 0.7139999866485596, 0.7200000286102295, 0.7183333039283752, 0.7263333201408386, 0.7263333201408386, 0.7293333411216736, 0.7276666760444641, 0.7323333621025085, 0.7386666536331177, 0.7306666374206543, 0.734000027179718, 0.7400000095367432, 0.7356666922569275, 0.7419999837875366, 0.7450000047683716, 0.7446666955947876, 0.7436666488647461, 0.7453333139419556, 0.7526666522026062, 0.7513333559036255, 0.753000020980835, 0.750333309173584, 0.7570000290870667, 0.7526666522026062, 0.7613333463668823, 0.7620000243186951, 0.7609999775886536, 0.7643333077430725, 0.7606666684150696, 0.7609999775886536, 0.7573333382606506, 0.7670000195503235, 0.7646666765213013, 0.7696666717529297, 0.7716666460037231, 0.7706666588783264, 0.7739999890327454, 0.7720000147819519, 0.7649999856948853, 0.7720000147819519, 0.7706666588783264, 0.7673333287239075]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 2, 6, 8, 6, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [0, 0, 0, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [70, 28, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2508571445941925, "mapping_values": [1, 10, 10, 5, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.455903614674262, 2.3644825193498114, 2.303114451374502, 2.227931326626944, 2.9870254179395626, 2.3046129004609837], "accuracy": [0.21423853933811188, 0.12230881303548813, 0.10302469879388809, 0.19376568496227264, 0.11755382269620895, 0.09602430462837219], "val_loss": [2.0024424961635043, 1.9747870309012276, 1.9696175030299596, 5.0976265498570035, 1.9752495629446847, 1.9738821302141463], "val_accuracy": [0.2633333206176758, 0.10066666454076767, 0.10166666656732559, 0.25433334708213806, 0.10433333367109299, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [0, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10942856967449188, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.373816629489651, 2.5438557146342204, 2.3936646282869702, 2.414806674704843, 2.423235727008371, 2.3960152671888535, 2.432229185620823, 2.472367667125248], "accuracy": [0.22454100847244263, 0.12059172987937927, 0.11306300014257431, 0.12402588874101639, 0.09800554811954498, 0.10249637067317963, 0.09602430462837219, 0.09509972482919693], "val_loss": [2.482780797140939, 2.035966191973005, 1.8334418024335588, 2.099177156175886, 2.097996779850551, 2.0676841054643904, 2.040984630584717, 2.023828778948103], "val_accuracy": [0.09733333438634872, 0.10466666519641876, 0.18266665935516357, 0.10133333504199982, 0.09866666793823242, 0.10100000351667404, 0.10633333027362823, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 9, 4, 6, 8, 2, 6, 0, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [3, 7, 8, 3, 0], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 7, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [0, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2, 3], [40, 28, 79, 39, 41, 36, 44], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0], [8, 4, 7, 8], [7, 0, 1, 5, 3, 4], [27], [0, 1, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 1, 2, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303288809989563, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [8, 5, 5, 1, 1, 0, 3, 9, 7, 4, 3, 0, 7, 0, 6, 1, 2, 3, 2, 7, 2, 5, 4, 6, 8, 5, 5, 9], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36, 44], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1], [3, 4, 2, 2, 4], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303288809989563, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303288809989563, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 4, 2, 5, 9, 7, 5, 5, 4, 5, 8, 5, 5, 1], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [70, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0], [3, 4, 1, 2], [1, 3, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.math.add(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12878087162971497, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1], [3, 4, 1, 7, 8], [5, 0, 1, 5, 3, 4], [21], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, alpha))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [2, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30184368217437, 2.3007109563868076, 2.3024094147594645, 2.302922348477947, 2.304707274319174, 2.322700550244107, 2.616070676079799, 4.502616493535977], "accuracy": [0.09549596905708313, 0.09008057415485382, 0.09113723784685135, 0.08453308790922165, 0.08083476126194, 0.09932637959718704, 0.09826971590518951, 0.09655263274908066], "val_loss": [1.9699529239109583, 1.9731129918779646, 1.9737347194126673, 1.9748623711722237, 1.9792889867510115, 2.0481283324105397, 2.870438848223005, 5.996006011962891], "val_accuracy": [0.09300000220537186, 0.09433333575725555, 0.10199999809265137, 0.08100000023841858, 0.09666666388511658, 0.09733333438634872, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [3, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 6, 1, 5, 3, 4], [62], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06771428883075714, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3037716738063865, 2.300615353843146, 2.300864060730305, 2.3001259380658508, 2.3006454716426603, 2.300525771156042, 2.2996985383273714, 2.300616798934967, 2.2994023800022205, 2.3000898912928878, 2.299466264655703, 2.2990086916305166, 2.2998438919414035, 2.2995258340620173, 2.299849435968516, 2.300330595049986], "accuracy": [0.08902391046285629, 0.09800554811954498, 0.09893012791872025, 0.09642054885625839, 0.09536388516426086, 0.09628847241401672, 0.09945846349000931, 0.09893012791872025, 0.09813763201236725, 0.10236428678035736, 0.10038304328918457, 0.10698718577623367, 0.10091137140989304, 0.09985470771789551, 0.10196803510189056, 0.09721305221319199], "val_loss": [1.9702158655439104, 1.969684055873326, 1.969320637839181, 1.969263689858573, 1.9692557879856654, 1.9693620545523507, 1.96927581514631, 1.969205038888114, 1.9691898482186454, 1.9692542212350028, 1.9693499973842077, 1.969625677381243, 1.9698944772992815, 1.970099721636091, 1.9703038760593958, 1.9704741750444685], "val_accuracy": [0.047333333641290665, 0.05400000140070915, 0.060333333909511566, 0.06233333423733711, 0.06733333319425583, 0.07233333587646484, 0.07966666668653488, 0.0820000022649765, 0.08266666531562805, 0.0860000029206276, 0.08766666799783707, 0.08566666394472122, 0.08133333176374435, 0.07900000363588333, 0.08033332973718643, 0.0806666687130928]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304238941061372, 2.3018683739436567, 2.302938975111337, 2.3023054941124714, 2.303268151181863, 2.302766505013273], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414, 0.09179764986038208], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 5, 7, 1, 4, 5, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 5, 4, 7, 8, 9, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [62, 28, 79, 4, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1], [3, 4, 4], [2, 4, 1, 5, 3, 4], [21], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 36, 36, 22, 14, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(alpha, grad), alpha))))), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304238941061372, 2.3018683739436567, 2.302938975111337, 2.3023054941124714, 2.303268151181863, 2.302766505013273], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414, 0.09179764986038208], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 6, 2, 4, 6, 8, 2, 6, 0, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 0, 2, 0, 3, 1, 0, 1, 2, 0, 0, 0, 3, 2, 0, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 1, 0, 1], [0, 1, 1, 0], [6, 4, 4, 6, 2, 2, 6, 1], [2, 2, 1, 5, 3, 4], [21], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304238941061372, 2.3018683739436567, 2.302938975111337, 2.3023054941124714, 2.303268151181863, 2.302766505013273], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414, 0.09179764986038208], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304238941061372, 2.3018683739436567, 2.302938975111337, 2.3023054941124714, 2.303268151181863, 2.302766505013273], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414, 0.09179764986038208], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [21], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304238941061372, 2.3018683739436567, 2.302938975111337, 2.3023054941124714, 2.303268151181863, 2.302766505013273], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414, 0.09179764986038208], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [3, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [62], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304238941061372, 2.3018683739436567, 2.302938975111337, 2.3023054941124714, 2.303268151181863, 2.302766505013273], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414, 0.09179764986038208], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0], [3, 4, 1, 4, 3, 5], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 6, 6, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, tf.math.square(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304238941061372, 2.3018683739436567, 2.302938975111337, 2.3023054941124714, 2.303268151181863, 2.302766505013273], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414, 0.09179764986038208], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]