[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 2, 1, 3, 2, 1, 5, 5, 4, 2, 0, 8, 3, 0, 6, 0, 5, 3, 2, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 2, 2, 2, 3, 3, 3, 1, 3, 2, 3, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [78, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [87, 18, 10, 42]], "fitness": -0.8460000157356262, "mapping_values": [1, 4, 4, 2, 2, 1, 62, 62, 36, 26, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), tf.math.sqrt(beta)))))))), tf.math.multiply(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))))), grad))))), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, beta)), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad))), grad)), tf.math.add(beta, beta)))), tf.math.add(beta, beta)))), tf.math.subtract(grad, tf.math.add(grad, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1.9380250787061077, 1.0458197390965467, 0.7701904191049398, 0.6904512003365288, 0.6302640348960222, 0.5858309259110469, 0.5495079731220078, 0.5181080536394543, 0.4815048519111092, 0.46106402399816754, 0.4572776325658139, 0.43638297316341856, 0.43031290373104975, 0.41143792488193626, 0.3974060057656892, 0.3834033311436819, 0.37412419342456193, 0.3552667422340908, 0.35455146063084236, 0.3421570183326697, 0.33264049078337726, 0.3333433243490213, 0.33812647416701547, 0.3121327459536618, 0.30390678827772993, 0.29137398929423375, 0.28845392293335503, 0.2939313964765967, 0.2927670209139503, 0.27512203712174294, 0.2687680650506872, 0.25874672588608, 0.25086631574028945, 0.24457043883877974, 0.24181258428476238, 0.22697062283585084, 0.221561818445017, 0.2163040365080524, 0.20519824698813413, 0.20532501098927317, 0.20093949551257034], "accuracy": [0.3329811096191406, 0.6242240071296692, 0.7119271159172058, 0.7368907928466797, 0.7600052952766418, 0.7763835787773132, 0.7897239327430725, 0.8067626357078552, 0.8201030492782593, 0.826310932636261, 0.8277638554573059, 0.8335754871368408, 0.8358209133148193, 0.8426892161369324, 0.8492933511734009, 0.8544445633888245, 0.8590674996376038, 0.8643507957458496, 0.8656716346740723, 0.873860776424408, 0.8739928603172302, 0.8705587387084961, 0.8679170608520508, 0.8792761564254761, 0.8811253309249878, 0.8882578015327454, 0.886672854423523, 0.8907673954963684, 0.8848236799240112, 0.8943336606025696, 0.8976356983184814, 0.9015982151031494, 0.9000132083892822, 0.9045040011405945, 0.9070135951042175, 0.9099194407463074, 0.91124027967453, 0.9144102334976196, 0.9208822846412659, 0.9216747879981995, 0.9199577569961548], "val_loss": [0.9184409890856061, 0.6025958912713187, 0.5396099431174142, 0.5077223266874041, 0.46517743383135113, 0.4455141680581229, 0.4181396705763681, 0.40144448620932444, 0.38769212790897917, 0.38274713924952913, 0.3691075699669974, 0.37192394052233013, 0.3556821516581944, 0.34985517604010447, 0.3588541660990034, 0.337409428187779, 0.32546224764415194, 0.32782707044056486, 0.3271682688168117, 0.3274501476969038, 0.3288273130144392, 0.3280202661241804, 0.31701782771519255, 0.3177174670355661, 0.31729016985212055, 0.3149719067982265, 0.33004747118268696, 0.31751432589122225, 0.3229488134384155, 0.31840918745313374, 0.3094049947602408, 0.3134178944996425, 0.3228171638080052, 0.31479547704969135, 0.314545886857169, 0.3190252440316336, 0.3159720386777605, 0.31027173144476755, 0.3162499836512974, 0.3182856355394636, 0.3242486800466265], "val_accuracy": [0.6113333106040955, 0.7350000143051147, 0.7546666860580444, 0.7749999761581421, 0.7870000004768372, 0.7993333339691162, 0.8180000185966492, 0.8263333439826965, 0.8326666951179504, 0.8303333520889282, 0.8413333296775818, 0.8366666436195374, 0.8483333587646484, 0.8516666889190674, 0.8506666421890259, 0.8613333106040955, 0.859333336353302, 0.8606666922569275, 0.8656666874885559, 0.8656666874885559, 0.8650000095367432, 0.859333336353302, 0.8646666407585144, 0.8696666955947876, 0.8679999709129333, 0.8696666955947876, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8673333525657654, 0.8756666779518127, 0.8730000257492065, 0.8756666779518127, 0.878000020980835, 0.8786666393280029, 0.8830000162124634, 0.8736666440963745, 0.8823333382606506, 0.8790000081062317, 0.8809999823570251, 0.8813333511352539]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 1, 5, 5, 4, 2, 0, 8, 2, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 0, 2, 2, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [91, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [1, 1, 0, 0, 1, 0, 1, 0, 1], [6, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [33, 18, 10, 42]], "fitness": -0.8434285521507263, "mapping_values": [1, 4, 4, 2, 2, 1, 76, 76, 44, 32, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 70, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(grad))))), tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(beta))))), tf.math.multiply(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))))))), grad))), grad)), tf.math.add(beta, tf.math.pow(beta, tf.math.divide_no_nan(tf.math.negative(beta), grad)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.math.add(beta, tf.math.divide_no_nan(grad, beta))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))), tf.math.add(beta, beta))))), tf.math.add(beta, beta))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9379739715533093, 1.0457981868804862, 0.7693356859480873, 0.6902111460346635, 0.6334518112479388, 0.5870973421535031, 0.5432341156571439, 0.5106123884151546, 0.4808075040433196, 0.46200036161753005, 0.45629793223672144, 0.433526379348674, 0.4292686186871587, 0.41361916624181827, 0.3964004603005073, 0.3876703272894342, 0.37615486757472805, 0.35874348591504834, 0.35872494746523603, 0.3524662278993113, 0.3353982533501313, 0.33373414481304986, 0.3408644829428097, 0.31059320604623253, 0.30309968582155083, 0.2967563281284741, 0.2847451466721094, 0.2931418679944906, 0.28967880540992513, 0.2748923972928056, 0.2639270500342576, 0.25213306546683606, 0.2519082331114977, 0.24533319339036092, 0.23629380235102324, 0.22762686595578535, 0.22508976608613196, 0.21517060147560252, 0.20863721616248318, 0.20824964215388278], "accuracy": [0.33284902572631836, 0.6258090138435364, 0.7136441469192505, 0.735569953918457, 0.7606657147407532, 0.7770439982414246, 0.7918372750282288, 0.8087438941001892, 0.8211596608161926, 0.8274996876716614, 0.8274996876716614, 0.8388587832450867, 0.8412362933158875, 0.8424250483512878, 0.8512746095657349, 0.852859616279602, 0.8569541573524475, 0.8647470474243164, 0.8673887252807617, 0.8688416481018066, 0.8704266548156738, 0.8717474341392517, 0.8639545440673828, 0.8809932470321655, 0.8854840993881226, 0.8854840993881226, 0.8916919827461243, 0.8881257176399231, 0.8907673954963684, 0.8960506916046143, 0.8988244533538818, 0.9015982151031494, 0.9006736278533936, 0.9034473896026611, 0.9091269373893738, 0.9108440279960632, 0.9097873568534851, 0.9166556596755981, 0.9158631563186646, 0.9178444147109985], "val_loss": [0.9188853331974575, 0.6016407353537423, 0.5388096060071673, 0.5109677485057286, 0.46454124791281565, 0.4449856962476458, 0.4135073849133083, 0.4044397132737296, 0.3946975725037711, 0.37839137656348093, 0.37047639914921354, 0.36391171387263704, 0.3555498038019453, 0.34984324659620014, 0.35033499343054636, 0.3383519649505615, 0.32955039399010794, 0.33163148164749146, 0.3248690962791443, 0.32216901438576834, 0.3291986584663391, 0.329196103981563, 0.31453576258250643, 0.32116384165627615, 0.3159301621573312, 0.30979050057274954, 0.31429318870816914, 0.31850673471178326, 0.32133800642830984, 0.3183320334979466, 0.31333476305007935, 0.31163517917905537, 0.3146568366459438, 0.313471930367606, 0.3058549165725708, 0.3239138807569231, 0.3100387879780361, 0.3103971907070705, 0.31287174565451487, 0.3253453714506967], "val_accuracy": [0.612666666507721, 0.7383333444595337, 0.7556666731834412, 0.7730000019073486, 0.7883333563804626, 0.8026666641235352, 0.8209999799728394, 0.8253333568572998, 0.8286666870117188, 0.8373333215713501, 0.8396666646003723, 0.8403333425521851, 0.8513333201408386, 0.8483333587646484, 0.8560000061988831, 0.8576666712760925, 0.859333336353302, 0.8606666922569275, 0.8629999756813049, 0.871999979019165, 0.8646666407585144, 0.8526666760444641, 0.8686666488647461, 0.8709999918937683, 0.8726666569709778, 0.8723333477973938, 0.875, 0.8700000047683716, 0.8703333139419556, 0.8686666488647461, 0.874666690826416, 0.8763333559036255, 0.8796666860580444, 0.8809999823570251, 0.8826666474342346, 0.8809999823570251, 0.8793333172798157, 0.878333330154419, 0.8806666731834412, 0.8816666603088379]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [8, 2, 2, 7, 3, 6, 5, 1, 4, 3, 0, 2, 2, 5, 6, 0, 5, 5, 4, 2, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 2, 2, 9, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 3, 3, 1, 3, 3, 0, 1, 3, 2, 3, 0, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 4, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [28, 0, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [55, 18, 10, 42]], "fitness": -0.8417142629623413, "mapping_values": [1, 4, 4, 2, 2, 1, 60, 60, 36, 24, 4, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 70, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.square(alpha)))))), tf.math.add(beta, grad))))), grad)), tf.math.pow(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))), grad))))), tf.math.add(beta, grad)))))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1.9588150198055596, 1.068192952258035, 0.7823148431590268, 0.6934360421612404, 0.6442054803612965, 0.5939561878181546, 0.5510381795411821, 0.5271979588574863, 0.4927323043795152, 0.46951666772719847, 0.4664545572901509, 0.4453059891825575, 0.44004732183004963, 0.4234754883019585, 0.40385941899904504, 0.39197446223436455, 0.3814998167365093, 0.36475437523713755, 0.366348332067475, 0.3569154970209124, 0.348237333631062, 0.34824155969170056, 0.33936249997243906, 0.32614532771631394, 0.3118671523841333, 0.30100143180940886, 0.30068821926567896, 0.29482624299254445, 0.2972561585597705, 0.2812363592632978, 0.2741478043831634, 0.2609632189688571, 0.2604785307586437, 0.2608175647296548, 0.24969893286508765, 0.24295274371074851], "accuracy": [0.3269053101539612, 0.6199973821640015, 0.7034738063812256, 0.7367587089538574, 0.7560427784919739, 0.7734777331352234, 0.7868181467056274, 0.7998943328857422, 0.8144234418869019, 0.8253863453865051, 0.8245938420295715, 0.8335754871368408, 0.8345000743865967, 0.8354246616363525, 0.8475762605667114, 0.8553691506385803, 0.8558974862098694, 0.8607845902442932, 0.8626337051391602, 0.863029956817627, 0.86553955078125, 0.8691058158874512, 0.8693699836730957, 0.871879518032074, 0.8805969953536987, 0.8840311765670776, 0.8856161832809448, 0.8877294659614563, 0.8848236799240112, 0.8943336606025696, 0.895918607711792, 0.9034473896026611, 0.9017302989959717, 0.8989565372467041, 0.9033153057098389, 0.9063531756401062], "val_loss": [0.8681847878864833, 0.6042272022792271, 0.5555875471660069, 0.5110909598214286, 0.47595681462969097, 0.448148284639631, 0.4213008029120309, 0.414811304637364, 0.3921813028199332, 0.3840267062187195, 0.3769728030477251, 0.3725939563342503, 0.36004395144326345, 0.3556763529777527, 0.3525983010019575, 0.34320928369249615, 0.32902837651116507, 0.3285221116883414, 0.3339866740362985, 0.33108735936028616, 0.33884222166878836, 0.3205001013619559, 0.3161005292619978, 0.31863329240253996, 0.3140493631362915, 0.3120907885687692, 0.3218086617333548, 0.31605511052267893, 0.3171557869229998, 0.32373294660023283, 0.310944812638419, 0.31528614248548237, 0.31626488481249126, 0.3155701160430908, 0.3116865498679025, 0.31656305279050556], "val_accuracy": [0.6133333444595337, 0.731333315372467, 0.7413333058357239, 0.765999972820282, 0.778333306312561, 0.8033333420753479, 0.8206666707992554, 0.8169999718666077, 0.8246666789054871, 0.8326666951179504, 0.8366666436195374, 0.8363333344459534, 0.8463333249092102, 0.8500000238418579, 0.8550000190734863, 0.8533333539962769, 0.8619999885559082, 0.8633333444595337, 0.8629999756813049, 0.8676666617393494, 0.8579999804496765, 0.8669999837875366, 0.8669999837875366, 0.8679999709129333, 0.8696666955947876, 0.8766666650772095, 0.8713333606719971, 0.8679999709129333, 0.8703333139419556, 0.862333357334137, 0.8803333044052124, 0.8730000257492065, 0.875333309173584, 0.874666690826416, 0.8730000257492065, 0.878000020980835]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 1, 5, 5, 4, 2, 0, 8, 2, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 0, 2, 0, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [28, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [55, 18, 10, 42]], "fitness": -0.8382856845855713, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(alpha, grad)), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9808431674838618, 1.08395729415594, 0.7861779808541488, 0.7045173541414046, 0.6495871125447232, 0.5999356009594564, 0.5622840541748402, 0.5309396560291935, 0.4991765848444973, 0.4794226369412505, 0.475132556048839, 0.45159900227022554, 0.4490019423441093, 0.4343407382708121, 0.41482756471967713, 0.40025833980864883, 0.3944721585763302, 0.3772284431999795, 0.38198941649226714, 0.369217289110547, 0.3546904962745561, 0.35572326266770316, 0.3515563206571267, 0.32826106922816384, 0.315167165758304, 0.30576459017364876, 0.3000947219064884, 0.2987351164944089, 0.2956264984369939], "accuracy": [0.31924447417259216, 0.6210539937019348, 0.6997754573822021, 0.7302865982055664, 0.7540615797042847, 0.7677981853485107, 0.7829877138137817, 0.8006868362426758, 0.8124422430992126, 0.8215559124946594, 0.8216879963874817, 0.8285563588142395, 0.8313300609588623, 0.8337075710296631, 0.842028796672821, 0.8514066934585571, 0.8485008478164673, 0.8573504090309143, 0.8529917001724243, 0.8634262084960938, 0.8669924736022949, 0.8598600029945374, 0.8618412613868713, 0.8722757697105408, 0.8776912093162537, 0.883238673210144, 0.8842953443527222, 0.8854840993881226, 0.8856161832809448], "val_loss": [0.8438610349382673, 0.6105455500738961, 0.5608409472874233, 0.5200828654425484, 0.47624528408050537, 0.4554436377116612, 0.4250122904777527, 0.4166899493762425, 0.39446938037872314, 0.3916966233934675, 0.3806874752044678, 0.37354419912610737, 0.35990541321890696, 0.35994099719183786, 0.36342086110796246, 0.34960538148880005, 0.3380792396409171, 0.3378563608442034, 0.3387794494628906, 0.33287552424839567, 0.3347792369978769, 0.33512026923043386, 0.3308737107685634, 0.31636580399104525, 0.3173704147338867, 0.31116790430886404, 0.32067947728293283, 0.3191853335925511, 0.3212493062019348], "val_accuracy": [0.6196666955947876, 0.7239999771118164, 0.7456666827201843, 0.7606666684150696, 0.7839999794960022, 0.7950000166893005, 0.8106666803359985, 0.8106666803359985, 0.824999988079071, 0.8259999752044678, 0.8306666612625122, 0.8366666436195374, 0.8479999899864197, 0.847000002861023, 0.8433333039283752, 0.8539999723434448, 0.856333315372467, 0.859333336353302, 0.8573333621025085, 0.8700000047683716, 0.8606666922569275, 0.8546666502952576, 0.8613333106040955, 0.8726666569709778, 0.8673333525657654, 0.8679999709129333, 0.8706666827201843, 0.8676666617393494, 0.8686666488647461]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 8, 2, 2, 2, 1, 5, 5, 4, 2, 8, 8, 8, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 0, 2, 3, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [57, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [55, 18, 10, 42]], "fitness": -0.8351428508758545, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1.95883471947525, 1.0694025027800733, 0.7815990394935663, 0.6967106051511768, 0.6440605121029839, 0.5959535754824422, 0.5524346077006018, 0.527815614220898, 0.49249909575494716, 0.47013390922763676, 0.4687945455718176, 0.4468995711240062, 0.44383225647560154, 0.42491715869741703, 0.40683816982502824, 0.4008776271670738, 0.38384941541098366, 0.3646706007947507, 0.3717166353029393, 0.35435721082552596, 0.347165900108254, 0.34549645952592045, 0.3386429410805209, 0.31856215696104323, 0.3136565318952824, 0.3010607425051122, 0.3004707686495803, 0.30068186178986483, 0.3035654902237754], "accuracy": [0.3269053101539612, 0.6199973821640015, 0.7014925479888916, 0.7312111854553223, 0.7569673657417297, 0.7711002230644226, 0.787082314491272, 0.7971205711364746, 0.8158763647079468, 0.8247259259223938, 0.8231409192085266, 0.8315942287445068, 0.8334434032440186, 0.8372738361358643, 0.8471800088882446, 0.848368763923645, 0.8555012345314026, 0.8623695969581604, 0.8615770936012268, 0.8692378997802734, 0.8661999702453613, 0.8684453964233398, 0.8688416481018066, 0.8749174475669861, 0.8776912093162537, 0.8857482671737671, 0.8850878477096558, 0.8850878477096558, 0.883238673210144], "val_loss": [0.8691550663539341, 0.6042101212910244, 0.5565193891525269, 0.5099896192550659, 0.4776912587029593, 0.449789149420602, 0.42237826756068636, 0.41482904979160856, 0.3940870761871338, 0.3856612188475473, 0.3751946602548872, 0.3732407178197588, 0.3612722158432007, 0.3567877241543361, 0.3538919857570103, 0.3446955255099705, 0.3307949389730181, 0.33025358404432026, 0.3333196299416678, 0.3326894981520517, 0.3290444186755589, 0.3260929925101144, 0.3234093870435442, 0.31592964274542673, 0.31553661823272705, 0.3140462807246617, 0.32628425530024935, 0.325921220438821, 0.33081389325005667], "val_accuracy": [0.6113333106040955, 0.7306666374206543, 0.7403333187103271, 0.7703333497047424, 0.7773333191871643, 0.8013333082199097, 0.8203333616256714, 0.8143333196640015, 0.8236666917800903, 0.8316666483879089, 0.8353333473205566, 0.8346666693687439, 0.8429999947547913, 0.8503333330154419, 0.8523333072662354, 0.8553333282470703, 0.862666666507721, 0.8600000143051147, 0.8616666793823242, 0.8703333139419556, 0.8663333058357239, 0.8666666746139526, 0.8643333315849304, 0.8723333477973938, 0.8709999918937683, 0.8679999709129333, 0.8686666488647461, 0.8659999966621399, 0.8636666536331177]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 1, 5, 5, 4, 2, 0, 8, 2, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 0, 2, 0, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [79, 92, 78, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [33, 18, 10, 42]], "fitness": -0.8305714130401611, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2531831378178464, 1.8382773565153294, 1.2095879574241482, 0.9284379234513618, 0.812489865368163, 0.7570000622392472, 0.7090516240605274, 0.6776570331749584, 0.6513940837279035, 0.6329870592365333, 0.6290409379174854, 0.6096024370275358, 0.6029896277793095, 0.5955067847493365, 0.5821438326008678, 0.5781274788478236, 0.5636472263907429, 0.5466532274763802, 0.5450723953235104, 0.5372248416752501, 0.5320425717633209, 0.527286822879949, 0.5216096260166282, 0.5159724377102588, 0.5021952104102414, 0.500772198154123, 0.49589855877431377, 0.483775546648058, 0.48594706931748427, 0.48086336138163105, 0.47286535940228863, 0.47113460857775924, 0.46501191542794473, 0.469352022409754, 0.4585727615174427, 0.45201954296740243, 0.44833677802827804, 0.4409916915748381, 0.44054011670495413, 0.43979044287526897, 0.42994559706713875, 0.42431373739318134, 0.41925740545499185, 0.41966791990458013, 0.4068790241168585, 0.41250903434237596, 0.4030283707173241, 0.406812882946152, 0.40014510974829237, 0.39419484002290067, 0.4007210097473846, 0.38645037914216795, 0.38566214637025126, 0.383848275510532, 0.3799615272276154, 0.3754628998941009, 0.37298164788002286, 0.37265807733858863, 0.3723832014379815, 0.3618669028389865, 0.35940639776812566, 0.36183465252211067, 0.3608116256113711, 0.3501240452400934, 0.3543541099275376, 0.3496373783304486, 0.34535234625691263, 0.3442800764583436, 0.34147247145787174, 0.3312381567924786, 0.3372216334574101, 0.32324083261816744, 0.3269433913772857, 0.33005332270113863, 0.31725173970144877, 0.32335235820690783], "accuracy": [0.19852067530155182, 0.4283449947834015, 0.5678246021270752, 0.6687359809875488, 0.7005679607391357, 0.7120591998100281, 0.7337207794189453, 0.7467969655990601, 0.7524765729904175, 0.7651565074920654, 0.7601373791694641, 0.7693831920623779, 0.7730814814567566, 0.7788931727409363, 0.7763835787773132, 0.7778365015983582, 0.7902522683143616, 0.7975168228149414, 0.8024039268493652, 0.8001585006713867, 0.8010830879211426, 0.8058380484580994, 0.8029322624206543, 0.8083476424217224, 0.8074230551719666, 0.811649739742279, 0.8104609847068787, 0.8220842480659485, 0.821820080280304, 0.8183859586715698, 0.8227446675300598, 0.822348415851593, 0.8267071843147278, 0.8204993009567261, 0.8251221776008606, 0.8355567455291748, 0.8318583965301514, 0.8318583965301514, 0.8368775844573975, 0.8355567455291748, 0.8389908671379089, 0.8416325449943542, 0.8412362933158875, 0.842028796672821, 0.8515387773513794, 0.8498216867446899, 0.8477083444595337, 0.8465195894241333, 0.8512746095657349, 0.8502179384231567, 0.8496896028518677, 0.8613129258155823, 0.8581429123878479, 0.8565579056739807, 0.8598600029945374, 0.8601241707801819, 0.8599920868873596, 0.8628978729248047, 0.8644828796386719, 0.8628978729248047, 0.8631620407104492, 0.86553955078125, 0.8647470474243164, 0.8689737319946289, 0.8663320541381836, 0.8671245574951172, 0.8689737319946289, 0.8706908226013184, 0.8704266548156738, 0.8750495314598083, 0.8749174475669861, 0.8772949576377869, 0.8767666220664978, 0.8749174475669861, 0.8794082403182983, 0.878351628780365], "val_loss": [1.8048676763262068, 1.0237183570861816, 0.7038334948675973, 0.6214126518794468, 0.5676800523485456, 0.5421030180794852, 0.5158161435808454, 0.5020890746797834, 0.49339732101985384, 0.48047917229788645, 0.4778991256441389, 0.4629594939095633, 0.46258323533194406, 0.44743951729365755, 0.451778701373509, 0.443438572543008, 0.43360922166279386, 0.42913882221494404, 0.4210797207696097, 0.4268292018345424, 0.41512276445116314, 0.41936613832201275, 0.4063777242388044, 0.4045232193810599, 0.40324972357068745, 0.4014559473310198, 0.3995708738054548, 0.39403490509305683, 0.38943412474223543, 0.39657347542898996, 0.385757429259164, 0.3820154666900635, 0.3848081912313189, 0.37870403698512484, 0.38210961648396086, 0.37313043219702585, 0.3758556161608015, 0.36910510063171387, 0.36248181547437397, 0.3640858701297215, 0.3620176145008632, 0.35888831104551044, 0.3634490370750427, 0.35652555738176617, 0.35654314926692415, 0.3547260676111494, 0.3569196547780718, 0.34765545810971943, 0.3491335426058088, 0.3475714496203831, 0.34429811579840525, 0.3437018649918692, 0.3473521215575082, 0.3392286556107657, 0.34194216557911467, 0.3385628121239798, 0.3386943170002529, 0.3351914456912449, 0.3339248555047171, 0.33313007014138357, 0.3315549237387521, 0.33347552163260324, 0.3309576426233564, 0.33986023494175505, 0.3287162610462734, 0.32398389066968647, 0.3306547999382019, 0.32412345920290264, 0.3228303790092468, 0.31813650471823557, 0.3198395201138088, 0.32314067227499826, 0.3216726269040789, 0.32046295063836233, 0.3241155743598938, 0.31835825954164776], "val_accuracy": [0.42933332920074463, 0.621999979019165, 0.6996666789054871, 0.7353333234786987, 0.7426666617393494, 0.7543333172798157, 0.765666663646698, 0.7706666588783264, 0.7826666831970215, 0.7760000228881836, 0.7773333191871643, 0.7910000085830688, 0.7956666946411133, 0.7993333339691162, 0.7983333468437195, 0.8036666512489319, 0.7976666688919067, 0.8056666851043701, 0.8169999718666077, 0.812666654586792, 0.8176666498184204, 0.8173333406448364, 0.8169999718666077, 0.8253333568572998, 0.8220000267028809, 0.8213333487510681, 0.8196666836738586, 0.8253333568572998, 0.82833331823349, 0.8243333101272583, 0.831333339214325, 0.8336666822433472, 0.8393333554267883, 0.8379999995231628, 0.8320000171661377, 0.8403333425521851, 0.8353333473205566, 0.8433333039283752, 0.8450000286102295, 0.8403333425521851, 0.8433333039283752, 0.8460000157356262, 0.843999981880188, 0.8493333458900452, 0.8473333120346069, 0.8473333120346069, 0.8420000076293945, 0.8536666631698608, 0.8539999723434448, 0.8523333072662354, 0.8566666841506958, 0.8546666502952576, 0.8543333411216736, 0.8573333621025085, 0.8573333621025085, 0.8610000014305115, 0.856333315372467, 0.862333357334137, 0.8656666874885559, 0.859000027179718, 0.8606666922569275, 0.8636666536331177, 0.8663333058357239, 0.8566666841506958, 0.8673333525657654, 0.8666666746139526, 0.8633333444595337, 0.8669999837875366, 0.8706666827201843, 0.8683333396911621, 0.8726666569709778, 0.8679999709129333, 0.8686666488647461, 0.8679999709129333, 0.8686666488647461, 0.871999979019165]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 1, 5, 5, 4, 2, 3, 8, 8, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 3, 0, 2, 2, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [28, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [55, 18, 10, 42]], "fitness": -0.8291428685188293, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), beta))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.980842738261139, 1.0840245463970615, 0.7867846018870304, 0.7037304916386244, 0.6502599525823254, 0.6020332091693251, 0.5649869414510161, 0.5350526752111037, 0.5013508680726181, 0.4795369865745995, 0.4778514726601886, 0.45431429856662126, 0.4532190710247122, 0.4353326814459016, 0.4150685032699496, 0.40181584610379745, 0.3917998795566967, 0.3791914871379511, 0.3812918100595128, 0.3642479967502571, 0.3540207728686476, 0.3517108147430256, 0.34925344057323093, 0.328428475635714, 0.31667309227935736, 0.30650148366452085, 0.3057467217702655, 0.3071967269356823, 0.30319305504506777, 0.2879722069842137, 0.2780002949575092, 0.2675335971773135, 0.2654691146601303, 0.26597357244027714, 0.2546889229323713, 0.24590822860250194, 0.24522020846601364, 0.24040128851587178], "accuracy": [0.31937655806541443, 0.6206578016281128, 0.698190450668335, 0.7300224304199219, 0.7528728246688843, 0.7647602558135986, 0.7827235460281372, 0.7987055778503418, 0.8123101592063904, 0.8204993009567261, 0.8206313848495483, 0.8297450542449951, 0.8281601071357727, 0.833179235458374, 0.841500461101532, 0.8498216867446899, 0.8506141901016235, 0.8560295701026917, 0.8556333184242249, 0.8654074668884277, 0.8691058158874512, 0.8643507957458496, 0.8621054291725159, 0.8698983192443848, 0.8802007436752319, 0.8798044919967651, 0.8850878477096558, 0.8804649114608765, 0.8828424215316772, 0.889578640460968, 0.8945978283882141, 0.89988112449646, 0.9000132083892822, 0.8975036144256592, 0.9038436412811279, 0.9035794734954834, 0.9055606722831726, 0.9060890078544617], "val_loss": [0.8438946349280221, 0.6110110623495919, 0.5613603591918945, 0.520141465323312, 0.4801017556871687, 0.45904994010925293, 0.42784298317773, 0.4181277411324637, 0.3963066850389753, 0.3951851384980338, 0.3823599474770682, 0.3788187503814697, 0.36496675865990774, 0.35881684507642475, 0.35942405462265015, 0.34627074003219604, 0.3344815799168178, 0.33203715085983276, 0.34083167144230436, 0.33467492035457064, 0.3313291072845459, 0.3298365729195731, 0.3249535049710955, 0.31601661443710327, 0.31626467193875996, 0.3120623912130083, 0.3309131520135062, 0.31278135095323834, 0.318534186908177, 0.3216985378946577, 0.31071356364658903, 0.306231575352805, 0.31768326248441425, 0.3089019571031843, 0.3091212681361607, 0.3229302934237889, 0.3107125759124756, 0.31056783880506245], "val_accuracy": [0.6193333268165588, 0.7233333587646484, 0.7443333268165588, 0.7603333592414856, 0.7820000052452087, 0.7933333516120911, 0.8096666932106018, 0.812333345413208, 0.8216666579246521, 0.824999988079071, 0.8286666870117188, 0.8366666436195374, 0.843666672706604, 0.8500000238418579, 0.8473333120346069, 0.8533333539962769, 0.8569999933242798, 0.859333336353302, 0.8606666922569275, 0.8653333187103271, 0.8640000224113464, 0.8650000095367432, 0.8653333187103271, 0.8669999837875366, 0.8679999709129333, 0.8669999837875366, 0.8706666827201843, 0.8673333525657654, 0.8666666746139526, 0.8619999885559082, 0.8726666569709778, 0.8736666440963745, 0.8796666860580444, 0.874666690826416, 0.8733333349227905, 0.871666669845581, 0.8723333477973938, 0.8763333559036255]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 2, 2, 2, 2, 1, 5, 5, 4, 2, 2, 8, 3, 5, 6, 0, 5, 9, 2, 6, 2, 6, 1, 2, 0, 3, 0, 0, 5, 2, 2, 5, 2, 1, 2, 8, 5, 4, 6, 0, 6, 8, 6, 6, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [0, 5, 0, 2, 0, 2, 2, 3, 3, 3, 1, 3, 2, 3, 3, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [57, 21, 86, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [30, 18, 10, 42]], "fitness": -0.8202857375144958, "mapping_values": [1, 4, 4, 2, 2, 1, 78, 78, 48, 30, 4, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.square(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.negative(alpha)), tf.math.negative(tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))))), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)))), tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))), tf.math.negative(tf.math.divide_no_nan(beta, beta)))))))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, grad))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))))), grad)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.1934101581573486, 1.3927469924928773, 0.9158270549402576, 0.7836108442704439, 0.7146046462863301, 0.675004614602463, 0.6379757814435061, 0.6103891735347098, 0.5837471723918666, 0.5667490200863506, 0.5666607276969157, 0.5467633263168239, 0.539306059828083, 0.5297565924264751, 0.5166227182440077, 0.5053275299503692, 0.49023160858791043, 0.4764819810056982, 0.4689300818458099, 0.4628706740318997, 0.45214771504068985, 0.44745489375119857, 0.44201622142248215, 0.42803291310219793, 0.41511962139737163, 0.4146219264790209, 0.4065966850116882, 0.39637190965991437, 0.40066381232015147, 0.38774630861149456, 0.38492401059372017, 0.3782581656781548, 0.3692747433510565, 0.37443339334991016, 0.36184774011889187, 0.3582620347897138, 0.34472139745561, 0.33901692502738906, 0.3389317546113135, 0.33289002040515503, 0.3336722298407552, 0.32509781810916444, 0.31605551580490926, 0.31547553952438423, 0.3064431914752894, 0.3126839282584779, 0.30038294380351366], "accuracy": [0.2514859437942505, 0.518161416053772, 0.665830135345459, 0.7120591998100281, 0.7302865982055664, 0.7396644949913025, 0.7580240368843079, 0.770439863204956, 0.7799497842788696, 0.7890635132789612, 0.7854973077774048, 0.7921014428138733, 0.7961959838867188, 0.7997622489929199, 0.8030643463134766, 0.806630551815033, 0.816008448600769, 0.8231409192085266, 0.8276317715644836, 0.8290846943855286, 0.8327829837799072, 0.8358209133148193, 0.8362171649932861, 0.8378021121025085, 0.8392550349235535, 0.8421608805656433, 0.8465195894241333, 0.8520671129226685, 0.8486329317092896, 0.8568220734596252, 0.8539162874221802, 0.8578787446022034, 0.8614450097084045, 0.857218325138092, 0.8656716346740723, 0.8652753829956055, 0.8685774803161621, 0.8755778670310974, 0.8697662353515625, 0.8702945709228516, 0.8725399374961853, 0.8753136992454529, 0.8800686597824097, 0.8804649114608765, 0.8824461698532104, 0.8819178342819214, 0.8865407705307007], "val_loss": [1.4861500263214111, 0.7022292954581124, 0.6041593381336757, 0.5695245606558663, 0.5263082299913678, 0.5101344585418701, 0.4815938472747803, 0.4664205312728882, 0.4594858033316476, 0.4473722151347569, 0.4388361317770822, 0.4283440964562552, 0.42149445840290617, 0.41716725485665457, 0.4131331614085606, 0.40646250758852276, 0.3919192467417036, 0.38486901351383757, 0.37856920276369366, 0.38378376620156424, 0.36910381487437655, 0.37170201539993286, 0.36078893286841257, 0.35929765020098003, 0.3576418587139675, 0.3557992322104318, 0.350259074143001, 0.3552902511187962, 0.34513414757592337, 0.3523549607821873, 0.3425613215991429, 0.3377496174403599, 0.33716590063912527, 0.33288560594831196, 0.33652801173073904, 0.32442965677806307, 0.32805998836244854, 0.3214374269757952, 0.3200222168649946, 0.3224214996610369, 0.32393183026994976, 0.3218835932867868, 0.32359141962868826, 0.3170056087630136, 0.31765586137771606, 0.3142671585083008, 0.3123227868761335], "val_accuracy": [0.5230000019073486, 0.70333331823349, 0.7273333072662354, 0.7483333349227905, 0.762333333492279, 0.7680000066757202, 0.781333327293396, 0.7889999747276306, 0.7963333129882812, 0.7963333129882812, 0.7993333339691162, 0.8083333373069763, 0.8173333406448364, 0.8180000185966492, 0.8199999928474426, 0.8299999833106995, 0.8253333568572998, 0.8336666822433472, 0.8346666693687439, 0.8343333601951599, 0.8399999737739563, 0.840666651725769, 0.8456666469573975, 0.8489999771118164, 0.8473333120346069, 0.8473333120346069, 0.8473333120346069, 0.8426666855812073, 0.8493333458900452, 0.8456666469573975, 0.8543333411216736, 0.8519999980926514, 0.8566666841506958, 0.8583333492279053, 0.8560000061988831, 0.8650000095367432, 0.8683333396911621, 0.8673333525657654, 0.8640000224113464, 0.8686666488647461, 0.8643333315849304, 0.8713333606719971, 0.8673333525657654, 0.8650000095367432, 0.8696666955947876, 0.8709999918937683, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 7, 5, 6, 5, 1, 4, 3, 0, 2, 2, 5, 6, 0, 5, 5, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 9, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 2, 0, 2, 0, 2, 1, 3, 3, 2, 1, 3, 2, 3, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 4, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [20, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 5, 8, 1, 1, 5, 2, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [51, 18, 10, 42]], "fitness": -0.7857142686843872, "mapping_values": [1, 4, 4, 2, 2, 1, 36, 36, 21, 15, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.pow(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(alpha, tf.math.add(beta, grad)))), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.square(beta))))), tf.math.square(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))))))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1616112432774615, 1.562260731997633, 1.2040173280760282, 1.011707866180842, 0.9559964350170196, 0.8873750767640434, 0.8045343582294148, 0.8134429593600176, 0.7429781984486175, 0.7239168543447797, 0.7045811672236516, 0.715681513098048, 0.6851807569846533, 0.679858249782524, 0.6673226742901271, 0.6568257964565896, 0.6561949974856656, 0.6433425493259881, 0.6241309669244213, 0.63184741375201, 0.6076865620333458, 0.6097100658848805], "accuracy": [0.2875445783138275, 0.46612071990966797, 0.5724474787712097, 0.6365077495574951, 0.6450931429862976, 0.669792652130127, 0.6996433734893799, 0.6952846646308899, 0.7234182953834534, 0.7276449799537659, 0.7390040755271912, 0.7323999404907227, 0.7432307600975037, 0.7467969655990601, 0.7429665923118591, 0.7516840696334839, 0.7530049085617065, 0.7572315335273743, 0.7652885913848877, 0.7617223858833313, 0.7736098170280457, 0.7701756954193115], "val_loss": [1.4421587671552385, 0.9586308343069894, 0.769263471875872, 0.7571333646774292, 0.6884101799556187, 0.6596956763948713, 0.6371485846383231, 0.590038367680141, 0.5371422937938145, 0.5401602983474731, 0.518602728843689, 0.5719704117093768, 0.5114855255399432, 0.4998810461589268, 0.4946035487311227, 0.5200808559145246, 0.48110055923461914, 0.5033993891307286, 0.5095006738390241, 0.48416205814906527, 0.4838911124638149, 0.4890510014125279], "val_accuracy": [0.5926666855812073, 0.6380000114440918, 0.690666675567627, 0.6629999876022339, 0.6669999957084656, 0.6893333196640015, 0.699999988079071, 0.7456666827201843, 0.7630000114440918, 0.7633333206176758, 0.7583333253860474, 0.7210000157356262, 0.765666663646698, 0.7803333401679993, 0.7646666765213013, 0.7556666731834412, 0.7916666865348816, 0.7606666684150696, 0.7519999742507935, 0.7799999713897705, 0.7846666574478149, 0.7846666574478149]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 7, 5, 6, 5, 1, 4, 3, 0, 2, 2, 0, 6, 0, 5, 5, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 9, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 2, 0, 1, 0, 2, 2, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 3, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [20, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 5, 8, 1, 1, 5, 2, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [55, 18, 10, 42]], "fitness": -0.7811428308486938, "mapping_values": [1, 4, 4, 2, 2, 1, 74, 74, 44, 30, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 73, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(beta)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))), tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))))), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, alpha))))))), grad))))))))))), grad)), tf.math.add(beta, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.negative(beta), grad))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.161608462745582, 1.5624219812910398, 1.2028661297926766, 1.0100715368368118, 0.9588529955851104, 0.8887457312562635, 0.8047861288945122, 0.8089093494298767, 0.7416704966407552, 0.7187375696091809, 0.7202891114365549, 0.7102098681545371, 0.6895471324364523, 0.6872350819012304, 0.6592318382103839, 0.6651893045136705, 0.6394507899543849, 0.6505248561873491, 0.6309881707885404, 0.6194738939595402, 0.6106150325861558, 0.6086988614188398, 0.6038102574824594], "accuracy": [0.28741249442100525, 0.4659886360168457, 0.5717870593070984, 0.637432336807251, 0.6425835490226746, 0.6686038970947266, 0.700700044631958, 0.6995112895965576, 0.7243428826332092, 0.7320036888122559, 0.7292299270629883, 0.7323999404907227, 0.7436270117759705, 0.7382115721702576, 0.7514199018478394, 0.7474573850631714, 0.7594769597053528, 0.7557786107063293, 0.7559106945991516, 0.7668735980987549, 0.7714964747428894, 0.7730814814567566, 0.7732135653495789], "val_loss": [1.4420477662767683, 0.9611807891300747, 0.7706014428819928, 0.7574837718691144, 0.6929446458816528, 0.6568511383874076, 0.6346957853862217, 0.5886337075914655, 0.5335436889103481, 0.5986868994576591, 0.5243610995156425, 0.5275365795407977, 0.542816128049578, 0.49422621726989746, 0.4974715028490339, 0.5154636246817452, 0.4856668370110648, 0.48329200063432964, 0.4982832499912807, 0.48361609663282124, 0.4830270154135568, 0.4971383810043335, 0.4859848363058908], "val_accuracy": [0.5926666855812073, 0.6366666555404663, 0.6883333325386047, 0.6646666526794434, 0.6650000214576721, 0.690666675567627, 0.6963333487510681, 0.7450000047683716, 0.7586666941642761, 0.7163333296775818, 0.7636666893959045, 0.7536666393280029, 0.7426666617393494, 0.7836666703224182, 0.7793333530426025, 0.7696666717529297, 0.7720000147819519, 0.7879999876022339, 0.7573333382606506, 0.7806666493415833, 0.7826666831970215, 0.7826666831970215, 0.7693333625793457]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 1, 5, 5, 4, 2, 0, 2, 8, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [2, 0, 0, 2, 3, 2, 3, 3, 3, 2, 1, 1, 2, 3, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 4, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [57, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [30, 18, 10, 42]], "fitness": -0.4302857220172882, "mapping_values": [1, 4, 4, 2, 2, 1, 79, 79, 46, 33, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.square(tf.math.square(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(beta)))))), tf.math.add(grad, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), tf.math.multiply(alpha, tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)))))), grad)), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.divide_no_nan(beta, beta)))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, tf.math.pow(grad, grad)))))))))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034378692474284, 2.302235928603356, 2.3013004030707083, 2.3012980379369896, 2.2998721804270543, 2.2981992091296166, 2.297495226141421, 2.2972298134524256, 2.296836368222955, 2.296645360049035, 2.296290029230497, 2.2959901068141635, 2.2943226173490565, 2.292949494180615, 2.29228176265707, 2.291230902963421, 2.2917625907862176, 2.2905754875497513, 2.289662715954441, 2.2884199216208043, 2.2886271815274166, 2.287169823100491, 2.286894959575858, 2.2868176478404947, 2.284405481672054, 2.2843451752811927, 2.283532764398033, 2.2830350642442987, 2.280539688574655, 2.2804365749167665, 2.2802818105866676, 2.278305898048402, 2.2799653032625575, 2.278786467964214, 2.275695986735775, 2.27674721575621, 2.275927496812977, 2.2740702730805378, 2.2727960662567197, 2.274150107436255, 2.274403457549648, 2.2739268927258616, 2.2719895821111455, 2.2702857878040943, 2.2710763095250583, 2.268545445764794, 2.267707072260389, 2.269388900819062, 2.266717963262147, 2.265786739655962, 2.2654431553060794, 2.2654173679639005, 2.263562462254601, 2.2614286012968225, 2.2633129445994142, 2.261968488848173, 2.260242446979527, 2.2603391706353055, 2.258502605584603, 2.25786503588503, 2.25579610782261, 2.255547028805964, 2.257181678953865, 2.2524151360558764, 2.2539346179375164, 2.2538388312343183, 2.2516666371919034, 2.2511870105898595, 2.2520086291979142, 2.2502224510529447, 2.2477091016266812, 2.2469852514207767, 2.2481978616977742, 2.2461872329140036, 2.244708376411969, 2.243331510534754, 2.2435429915303584, 2.2421034816517222, 2.2414001826486727, 2.243059144815544, 2.2396719007601655, 2.2402832987380616, 2.236342776547554, 2.2352184510234165, 2.2348478769094022, 2.2338000973847723, 2.2341946103175743, 2.2332055140417078, 2.230838282012889, 2.2296787720346307, 2.2294599858761273, 2.2302735690758166, 2.2280444442603913, 2.22791529857503, 2.22659801224424, 2.2233618179316754, 2.223039443923372, 2.220772854923777, 2.2221797902302862, 2.2197495170037005], "accuracy": [0.09087307006120682, 0.09391097724437714, 0.09126931428909302, 0.08994849026203156, 0.09615638852119446, 0.10051512718200684, 0.1022322028875351, 0.10170386731624603, 0.10619468986988068, 0.10249637067317963, 0.10619468986988068, 0.10751552134752274, 0.10830801725387573, 0.11557257920503616, 0.11293092370033264, 0.12112006545066833, 0.1146479994058609, 0.11874257028102875, 0.12376172095537186, 0.12442214041948318, 0.12468630075454712, 0.1258750557899475, 0.1336679458618164, 0.1320829540491104, 0.13736626505851746, 0.13300752639770508, 0.13630960881710052, 0.14080041646957397, 0.14819706976413727, 0.14542332291603088, 0.146479994058609, 0.1570466309785843, 0.14330999553203583, 0.15598995983600616, 0.1640470176935196, 0.15110288560390472, 0.15638621151447296, 0.16259410977363586, 0.16431118547916412, 0.16576409339904785, 0.16219785809516907, 0.16800950467586517, 0.17012283205986023, 0.17699114978313446, 0.17619864642620087, 0.17659489810466766, 0.1830669641494751, 0.1748778223991394, 0.17778365314006805, 0.1810857206583023, 0.18333113193511963, 0.18953903019428253, 0.19442610442638397, 0.2008981704711914, 0.1974640041589737, 0.2008981704711914, 0.2036719024181366, 0.2082948088645935, 0.20657773315906525, 0.20221899449825287, 0.21093647181987762, 0.2118610441684723, 0.2052568942308426, 0.22440892457962036, 0.21212521195411682, 0.21397437155246735, 0.22282393276691437, 0.22956016659736633, 0.21793685853481293, 0.22005018591880798, 0.23365473747253418, 0.22903183102607727, 0.22639016807079315, 0.23273015022277832, 0.24237221479415894, 0.2374851405620575, 0.2417117953300476, 0.240919291973114, 0.24197596311569214, 0.23418307304382324, 0.2475234419107437, 0.24778760969638824, 0.2546559274196625, 0.25676923990249634, 0.2583542466163635, 0.2565050721168518, 0.2591467499732971, 0.261260062456131, 0.2642979919910431, 0.26720380783081055, 0.27182671427726746, 0.26403382420539856, 0.27261921763420105, 0.27077004313468933, 0.266939640045166, 0.282129168510437, 0.2794875204563141, 0.2813366651535034, 0.27843084931373596, 0.28582748770713806], "val_loss": [1.9706940650939941, 1.9701125281197684, 1.9694397790091378, 1.9687363760811942, 1.968027114868164, 1.9673195566449846, 1.9666124071393694, 1.965902396610805, 1.9652019228254045, 1.9644930703299386, 1.9637863976614816, 1.9630800655909948, 1.9623746871948242, 1.961675030844552, 1.9609732627868652, 1.9602740151541573, 1.9595699991498674, 1.9588607379368372, 1.9581569262913294, 1.9574541364397322, 1.9567531858171736, 1.956049578530448, 1.9553526469639368, 1.9546538080487932, 1.9539521762302943, 1.9532551765441895, 1.9525536128452845, 1.9518495287214006, 1.95114380972726, 1.9504382269723075, 1.9497344834463937, 1.9490270614624023, 1.948317187173026, 1.947610786982945, 1.9469002996172224, 1.946188245500837, 1.9454716954912459, 1.9447575296674455, 1.9440420695713587, 1.9433276993887765, 1.9426088333129883, 1.9418922833033971, 1.9411752564566476, 1.9404535974775041, 1.9397276469639368, 1.938995429447719, 1.9382592609950475, 1.9375239780970983, 1.9367859704153878, 1.9360429900033134, 1.9353033474513464, 1.9345613888331823, 1.933812209538051, 1.93305880682809, 1.9323010444641113, 1.9315340859549386, 1.9307661737714494, 1.9299975803920202, 1.9292218344552177, 1.928445884159633, 1.9276622363499232, 1.926868234361921, 1.9260735511779785, 1.9252739633832658, 1.924468926021031, 1.9236602783203125, 1.92285190309797, 1.9220356260027205, 1.9212154660906111, 1.9203942843845911, 1.9195613861083984, 1.9187242644173759, 1.9178821018763952, 1.917039462498256, 1.9161878994532995, 1.9153336797441756, 1.9144641331263952, 1.9135917936052596, 1.9127118928091866, 1.911834648677281, 1.9109514100211007, 1.9100588389805384, 1.9091596603393555, 1.9082440648760115, 1.907331943511963, 1.9064027922494071, 1.9054678508213587, 1.9045322963169642, 1.9035887037004744, 1.9026333263942175, 1.9016742706298828, 1.9007161004202706, 1.8997465542384557, 1.8987719672066825, 1.8978001730782645, 1.8968146869114466, 1.8958116258893694, 1.8948004586356026, 1.8937830924987793, 1.8927597318376814], "val_accuracy": [0.03933333232998848, 0.04399999976158142, 0.047333333641290665, 0.05233333259820938, 0.054999999701976776, 0.05966666713356972, 0.06433333456516266, 0.07066666334867477, 0.07433333247900009, 0.07966666668653488, 0.08766666799783707, 0.09399999678134918, 0.09700000286102295, 0.10333333164453506, 0.10733333230018616, 0.11433333158493042, 0.12099999934434891, 0.12700000405311584, 0.1353333294391632, 0.1420000046491623, 0.15000000596046448, 0.15966667234897614, 0.16699999570846558, 0.17533333599567413, 0.18199999630451202, 0.19099999964237213, 0.1993333399295807, 0.20466665923595428, 0.2123333364725113, 0.21699999272823334, 0.2199999988079071, 0.2280000001192093, 0.23533333837985992, 0.24066667258739471, 0.2460000067949295, 0.2523333430290222, 0.2563333213329315, 0.2653333246707916, 0.2709999978542328, 0.2773333191871643, 0.28166666626930237, 0.28600001335144043, 0.29100000858306885, 0.2956666648387909, 0.30300000309944153, 0.3076666593551636, 0.31200000643730164, 0.3179999887943268, 0.3216666579246521, 0.32499998807907104, 0.328000009059906, 0.33000001311302185, 0.3336666524410248, 0.3370000123977661, 0.34066668152809143, 0.3440000116825104, 0.3476666808128357, 0.3499999940395355, 0.35100001096725464, 0.35499998927116394, 0.3569999933242798, 0.3606666624546051, 0.3636666536331177, 0.3659999966621399, 0.36766666173934937, 0.3696666657924652, 0.3720000088214874, 0.37299999594688416, 0.37533333897590637, 0.3773333430290222, 0.3776666522026062, 0.37933334708213806, 0.38100001215934753, 0.38233333826065063, 0.38333332538604736, 0.3856666684150696, 0.38733333349227905, 0.3883333206176758, 0.38866665959358215, 0.38999998569488525, 0.39266666769981384, 0.3946666717529297, 0.3959999978542328, 0.39666667580604553, 0.398333340883255, 0.40033334493637085, 0.4023333191871643, 0.40299999713897705, 0.4033333361148834, 0.40533334016799927, 0.4076666533946991, 0.40833333134651184, 0.4099999964237213, 0.4113333225250244, 0.41233333945274353, 0.4143333435058594, 0.4153333306312561, 0.4180000126361847, 0.4189999997615814, 0.41999998688697815]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 1, 5, 5, 4, 2, 0, 8, 0, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 1, 0, 2, 3, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [28, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 1, 2, 3, 0, 0, 0], [55, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 7, 5, 6, 5, 1, 4, 3, 0, 2, 2, 5, 6, 0, 5, 5, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 9, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [2, 0, 0, 2, 0, 2, 1, 3, 3, 2, 1, 1, 2, 3, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 4, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [57, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [30, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3087711309035694, 2.3349977214464563, 2.3821351005101734, 2.463130145072307, 2.6363914985351906, 3.4727609290769306, 82.21163889993656, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.044511955231428146, 0.017038701102137566, 0.013076212257146835, 0.011491216719150543, 0.021133271977305412, 0.09509972482919693, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9877948079790388, 2.0225556237357005, 2.0762010301862444, 2.1752477373395647, 2.4451320511954173, 5.370139530726841, 2565.8955078125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.004666666500270367, 0.004666666500270367, 0.005333333276212215, 0.006000000052154064, 0.08366666734218597, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [63, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 7, 6, 6, 8, 5, 5, 3, 0, 2, 2, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 1, 0, 3, 0, 2, 5, 2, 2, 1, 0, 1, 2, 8, 5, 6, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 3, 0, 2, 0, 2, 2, 3, 2, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 0, 2, 4, 0, 3, 0, 5], [93, 92, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 0, 1, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 3, 2, 3, 0, 0, 0], [33, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(alpha), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 2, 7, 5, 0, 8, 5, 4, 9, 6, 5, 2, 5, 2, 0, 5, 3, 4, 8, 2, 6, 4, 2, 0, 3, 0, 2, 4, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 0, 2, 0, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [28, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [3, 2, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 0, 3, 0, 0, 0], [55, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11213842034339905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 8, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 7, 5, 6, 5, 1, 4, 3, 0, 2, 2, 5, 6, 0, 5, 5, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 9, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 2, 0, 2, 0, 2, 1, 3, 3, 2, 1, 3, 2, 3, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 4, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [20, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 5, 8, 1, 1, 5, 2, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [51, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [16.43889990899667, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04147404432296753, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1709340.1785714286, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [39, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 2, 2, 2, 2, 1, 5, 5, 4, 2, 0, 8, 3, 5, 6, 0, 5, 3, 2, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 2, 0, 2, 0, 2, 2, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [28, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [4, 2, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [30, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 10, 5, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), beta), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.subtract(sigma, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [40, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 7, 6, 6, 8, 5, 4, 3, 0, 2, 2, 5, 6, 0, 5, 3, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 2, 0, 6, 3, 6, 9, 4, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 0, 2, 2, 2, 3, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 3, 3, 1, 3, 3, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [28, 30, 78, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 1, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [33, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 78, 78, 46, 32, 3, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 70, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.square(beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, grad))))))))), tf.math.add(tf.math.add(grad, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(beta)))))), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(alpha, grad))))))))), tf.math.add(beta, tf.math.add(grad, tf.math.negative(beta)))))), beta)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))))))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), grad))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3131083484496484, 2.3654387822287855, 2.4944809014377434, 3.1917367451982317, 43926.73400766345, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07158895581960678, 0.025624092668294907, 0.011227050796151161, 0.015453704632818699, 0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0019589832850864, 2.0763417652675082, 2.2763171195983887, 5.429424558367048, 99474025910.85715, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.005333333276212215, 0.005333333276212215, 0.07433333247900009, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [44, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 2, 2, 2, 2, 1, 5, 0, 4, 2, 0, 8, 3, 5, 6, 0, 5, 3, 2, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 1, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 5, 3, 2, 0, 2, 3, 3, 3, 3, 1, 3, 2, 0, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 1, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [57, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [30, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 55, 55, 32, 23, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.square(grad)), tf.math.negative(tf.math.pow(beta, tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))))), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), alpha))))))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), beta)))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035366095257097, 2.3028097068943825, 2.302554401503011, 2.3032928186715664, 2.3025942157366965, 2.301661835779934], "accuracy": [0.09047681838274002, 0.09272222965955734, 0.08928807079792023, 0.08479725569486618, 0.08942015469074249, 0.09153348207473755], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 5, 8, 7, 9, 4, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [44, 33, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 7, 5, 6, 5, 1, 4, 3, 0, 2, 2, 5, 6, 0, 5, 5, 4, 6, 2, 6, 4, 2, 0, 3, 0, 2, 5, 2, 2, 1, 2, 9, 2, 8, 5, 4, 6, 0, 6, 3, 6, 4, 6, 0, 3, 5, 3, 2, 8, 2, 1, 4, 1, 7, 2, 2, 5, 8, 9, 0, 3, 1, 1, 6, 6, 8, 4, 5, 3, 4, 0, 7, 9, 1, 8, 2, 4, 5, 4, 0], [1, 2, 0, 2, 0, 2, 1, 3, 3, 2, 1, 3, 2, 3, 2, 3, 1, 3, 1, 3, 3, 2, 2, 4, 3, 4, 3, 2, 3, 3, 2, 2, 3, 2, 4, 0, 3, 0, 5], [20, 21, 78, 62, 37, 47, 1, 35, 47, 32, 7], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 5, 2, 3, 8, 8, 8, 4, 0, 7, 6], [1, 1, 1, 4, 3, 4], [44], [0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 8, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [51, 18, 10, 42]], "fitness": -0.03371428698301315, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3036139923678163, 2.3031225292957562, 2.303125752276591, 2.304147475053291, 2.3036526564546564, 2.302952566355951], "accuracy": [0.08981640636920929, 0.09113723784685135, 0.08691058307886124, 0.08492933213710785, 0.0878351628780365, 0.08889182657003403], "val_loss": [1.9711766924176897, 1.9713872500828333, 1.9715933118547713, 1.9718234879629952, 1.972041470663888, 1.9722518239702498], "val_accuracy": [0.036666665226221085, 0.035999998450279236, 0.03500000014901161, 0.033666666597127914, 0.03233333304524422, 0.03166666626930237]}}]