[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7722856998443604, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2936578887785273, 2.271841899609569, 2.2483173174361166, 2.219271945726634, 2.1848269054335754, 2.1431665956824446, 2.084597045120987, 2.010737320687462, 1.9260965951476918, 1.8249581203075242, 1.7238195955225852, 1.6203925683120175, 1.5259783385593846, 1.4352693466100364, 1.3658765302814782, 1.311426065428193, 1.25680078996911, 1.2108137015385667, 1.1679679702663812, 1.1351134053877616, 1.1156892256729827, 1.0818279171191534, 1.0582819802020094, 1.028476413356598, 1.0133502835595076, 1.0014167019184381, 0.9862534673206715, 0.9584145884645487, 0.9470202401093425, 0.9383953400512239, 0.9259558330909876, 0.9173481946828548, 0.9120203072541992, 0.8850655572572798, 0.884852911628957, 0.8653863743390421, 0.867962073616899, 0.8570908624592742, 0.8587298778620976, 0.8467142130358344, 0.8464104696240298, 0.828673132469531, 0.8229149073626087, 0.8231194580015395, 0.8094648339288298, 0.8025003754152613, 0.8027911754867515, 0.7959724666341389, 0.7907072335202161, 0.7846455774712225, 0.7875691727482805, 0.7849709759251694, 0.7701464871200729, 0.7720681481341864, 0.7651383558977329, 0.7733191707823586, 0.7543245387461522, 0.7571314072974243, 0.7486359585687201, 0.7532884959751951, 0.7511600221011144, 0.7434197136707404, 0.7466657201076432, 0.7518840849108275, 0.7342497185158015, 0.7355570614046629, 0.7265989205636022, 0.7308514460580791, 0.7175186602997821, 0.7139123513194406, 0.7205530362295484, 0.7232622348983542, 0.7200195776425836, 0.7167702096800652, 0.7068508742523546, 0.7188470690493822, 0.7006764506399356], "accuracy": [0.11491216719150543, 0.17434948682785034, 0.2308809906244278, 0.2860916554927826, 0.32518821954727173, 0.35041606426239014, 0.38105931878089905, 0.41104212403297424, 0.4283449947834015, 0.4543653428554535, 0.4644036591053009, 0.4908202290534973, 0.5085193514823914, 0.5264826416969299, 0.5399550795555115, 0.553031325340271, 0.5635979175567627, 0.5815612077713013, 0.5980715751647949, 0.6028265953063965, 0.6102232336997986, 0.6209219098091125, 0.627129852771759, 0.6376964449882507, 0.6408664584159851, 0.6424514651298523, 0.6516972780227661, 0.659490168094635, 0.6602826714515686, 0.6639809608459473, 0.6668868064880371, 0.6761326193809509, 0.6734909415245056, 0.6852463483810425, 0.6781138777732849, 0.6866992712020874, 0.6807554960250854, 0.6903975605964661, 0.691850483417511, 0.6864351034164429, 0.6951525807380676, 0.7028133869171143, 0.700171709060669, 0.7119271159172058, 0.7047945857048035, 0.7079645991325378, 0.7077004313468933, 0.7107383608818054, 0.7145687341690063, 0.7148329019546509, 0.7127195596694946, 0.7164179086685181, 0.7215691208839417, 0.726192057132721, 0.720380425453186, 0.7193237543106079, 0.7284374833106995, 0.7194558382034302, 0.7246070504188538, 0.7279091477394104, 0.7230220437049866, 0.7283053994178772, 0.7277770638465881, 0.7255316376686096, 0.7301545143127441, 0.7280412316322327, 0.735041618347168, 0.7375511527061462, 0.7301545143127441, 0.7388719916343689, 0.7382115721702576, 0.735569953918457, 0.739928662776947, 0.7360982894897461, 0.7434949278831482, 0.7388719916343689, 0.7473253011703491], "val_loss": [1.9508052553449358, 1.9298537799290247, 1.90581328528268, 1.8765244483947754, 1.8383795874459403, 1.7895605904715401, 1.7267468316214425, 1.6484819139753069, 1.5560971668788366, 1.4520531722477503, 1.345132487160819, 1.2407325335911341, 1.1480185644967216, 1.066945961543492, 1.000253507069179, 0.9451514312199184, 0.8995836462293353, 0.8616775955472674, 0.8279467650822231, 0.8014044080461774, 0.7776388100215367, 0.7573563371385846, 0.7376899889537266, 0.7215132543018886, 0.7076030799320766, 0.6965386697224208, 0.6856903689248222, 0.6757318122046334, 0.6651876653943744, 0.6571912595203945, 0.6486980744770595, 0.6412544761385236, 0.6350221463612148, 0.6288395268576485, 0.6244613102504185, 0.6164309637887138, 0.6120319877352033, 0.6065134661538261, 0.6015735183443341, 0.5986152035849435, 0.5938389471599034, 0.588970558983939, 0.5854889835630145, 0.5827560935701642, 0.5782698903764997, 0.5742488758904594, 0.5717139925275531, 0.5691183635166713, 0.5678867271968296, 0.5628599098750523, 0.5608636651720319, 0.5593305485589164, 0.5545434100287301, 0.5527752978461129, 0.5501136098589215, 0.5488258600234985, 0.5465586866651263, 0.5430633510862078, 0.5409186737877982, 0.5385521990912301, 0.5365205492292132, 0.5333593572889056, 0.5338468211037772, 0.5321123770305088, 0.5281843968800136, 0.5263104098183768, 0.5264006171907697, 0.5253694908959525, 0.5211289269583566, 0.5192640849522182, 0.5188819510596139, 0.5181822095598493, 0.5160896948405674, 0.5135477270398822, 0.5112567969730922, 0.5120068447930473, 0.5094407967158726], "val_accuracy": [0.21466666460037231, 0.34833332896232605, 0.39399999380111694, 0.4359999895095825, 0.4586666524410248, 0.4959999918937683, 0.5239999890327454, 0.5516666769981384, 0.5703333616256714, 0.5793333053588867, 0.590666651725769, 0.6140000224113464, 0.6303333044052124, 0.6573333144187927, 0.6613333225250244, 0.6729999780654907, 0.6840000152587891, 0.6913333535194397, 0.6959999799728394, 0.7023333311080933, 0.7053333520889282, 0.7099999785423279, 0.7113333344459534, 0.7133333086967468, 0.7239999771118164, 0.7243333458900452, 0.7229999899864197, 0.7269999980926514, 0.7310000061988831, 0.7293333411216736, 0.7310000061988831, 0.7336666584014893, 0.7329999804496765, 0.737333357334137, 0.7386666536331177, 0.7369999885559082, 0.7403333187103271, 0.7403333187103271, 0.7440000176429749, 0.7490000128746033, 0.7546666860580444, 0.750333309173584, 0.7516666650772095, 0.7509999871253967, 0.7563333511352539, 0.7566666603088379, 0.7566666603088379, 0.753333330154419, 0.7566666603088379, 0.7576666474342346, 0.7609999775886536, 0.7590000033378601, 0.7613333463668823, 0.7616666555404663, 0.7630000114440918, 0.765666663646698, 0.7636666893959045, 0.7670000195503235, 0.7643333077430725, 0.768666684627533, 0.7723333239555359, 0.7696666717529297, 0.7716666460037231, 0.7736666798591614, 0.7720000147819519, 0.7713333368301392, 0.768666684627533, 0.7733333110809326, 0.7753333449363708, 0.7730000019073486, 0.7743333578109741, 0.7766666412353516, 0.7710000276565552, 0.7760000228881836, 0.7746666669845581, 0.7753333449363708, 0.7763333320617676]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.771142840385437, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2936578887785273, 2.271841742154425, 2.2483175513829696, 2.21927195019836, 2.1848285159477703, 2.143168318651104, 2.0846027174110597, 2.0107450014123702, 1.9261142986797937, 1.82498063236227, 1.723835914441387, 1.620405336884995, 1.5259850368744126, 1.435273129202198, 1.3658608328066388, 1.3114300560343457, 1.2568162972696264, 1.2108055489520828, 1.167963435684197, 1.135137978876744, 1.1157060891976367, 1.0818288304849528, 1.0582573754896718, 1.0284435876120257, 1.0133211677887846, 1.0014460267895926, 0.9863032715006622, 0.9584456513098375, 0.9470138724028805, 0.938270551606318, 0.9260835396284598, 0.91732728650557, 0.9119864283315321, 0.8851355569647005, 0.8848897332780475, 0.8654269720931426, 0.8680154409989264, 0.8571142889741327, 0.8587388410119176, 0.8467303474486985, 0.8464927375355984, 0.8286547018253194, 0.8229761216162124, 0.8230191882433531, 0.8093306727696561, 0.8024536641817744, 0.8025246728066487, 0.7958613461696115, 0.7905883657981092, 0.7846857933336167, 0.7874844055748288, 0.7847379597737695, 0.7699654011473821, 0.7719001300960657, 0.7649697204622469, 0.7731507649873274, 0.753989741912749, 0.7570369807311241, 0.7485782645791356, 0.7530951507103174, 0.7511053428264453, 0.7433714346878754, 0.7464859261331368, 0.7519821847245647, 0.7342382229597908, 0.735553286858459, 0.726450499857201, 0.7306741910792612, 0.717392009908434, 0.7137651437025785, 0.7203760212989704, 0.723159331529683, 0.719916432399193, 0.7166583135914982, 0.7067450680957573, 0.71879280795983, 0.700639916503938], "accuracy": [0.11491216719150543, 0.17434948682785034, 0.2308809906244278, 0.2860916554927826, 0.32518821954727173, 0.35041606426239014, 0.38105931878089905, 0.41104212403297424, 0.4283449947834015, 0.4543653428554535, 0.46427157521247864, 0.4908202290534973, 0.5085193514823914, 0.5264826416969299, 0.5399550795555115, 0.553031325340271, 0.5635979175567627, 0.5815612077713013, 0.5979394912719727, 0.6029586791992188, 0.6104874014854431, 0.6209219098091125, 0.6268656849861145, 0.637828528881073, 0.6407343745231628, 0.6424514651298523, 0.6513010263442993, 0.659490168094635, 0.6600185036659241, 0.6646413803100586, 0.6668868064880371, 0.6760005354881287, 0.672698438167572, 0.6847180128097534, 0.6782459616661072, 0.6865671873092651, 0.6799629926681519, 0.6905296444892883, 0.691850483417511, 0.6869634389877319, 0.6948884129524231, 0.7029454708099365, 0.7005679607391357, 0.7120591998100281, 0.7040021419525146, 0.707040011882782, 0.7077004313468933, 0.7102100253105164, 0.7149649858474731, 0.7153612375259399, 0.7131158113479614, 0.7166820764541626, 0.7206445932388306, 0.7259278893470764, 0.7202483415603638, 0.7197200059890747, 0.7283053994178772, 0.719852089881897, 0.7244749665260315, 0.7281733155250549, 0.7231541275978088, 0.728701651096344, 0.7280412316322327, 0.7251353859901428, 0.7302865982055664, 0.7284374833106995, 0.7349095344543457, 0.7375511527061462, 0.7305507659912109, 0.7392682433128357, 0.7387399077415466, 0.735041618347168, 0.739928662776947, 0.7358341217041016, 0.7429665923118591, 0.7382115721702576, 0.7481178045272827], "val_loss": [1.9508052553449358, 1.929853916168213, 1.9058129446847099, 1.876525810786656, 1.8383794512067522, 1.7895622934613908, 1.7267511231558663, 1.648493698665074, 1.556114946092878, 1.4520738806043352, 1.3451482227870397, 1.2407349177769251, 1.14803113256182, 1.0669411250523158, 1.0002562318529402, 0.9451491151537214, 0.8995739732469831, 0.8616689102990287, 0.8279546839850289, 0.8013993331364223, 0.7776431526456561, 0.7573566436767578, 0.7377069507326398, 0.7214955261775425, 0.7076359987258911, 0.6965537922722953, 0.68573112147195, 0.6757489272526332, 0.6651978833334786, 0.6572525330952236, 0.6487146956580025, 0.6412743330001831, 0.6350454432623727, 0.6288363422666278, 0.6244243553706578, 0.6165151425770351, 0.6120066131864276, 0.6065391813005719, 0.6016314710889544, 0.5986960785729545, 0.5938032184328351, 0.5889912503106254, 0.5854017734527588, 0.5826206888471331, 0.5782315560749599, 0.574192864554269, 0.5717179094042096, 0.5691639525549752, 0.5679729155131749, 0.5628346885953631, 0.5608083861214774, 0.5593595845358712, 0.5546649694442749, 0.5527801173073905, 0.5499789374215263, 0.5487374237605503, 0.5464667081832886, 0.5429836341312954, 0.5408013718468803, 0.5385173899786813, 0.5363902875355312, 0.5332223176956177, 0.5337806940078735, 0.5320977142878941, 0.5282669748578753, 0.5263177667345319, 0.5262392248426165, 0.5253505536488124, 0.5210378851209369, 0.5191997800554548, 0.5187399557658604, 0.5179658276694161, 0.5159692253385272, 0.5134926864079067, 0.5111652442387172, 0.511960472379412, 0.5094013554709298], "val_accuracy": [0.21466666460037231, 0.34833332896232605, 0.39399999380111694, 0.4359999895095825, 0.4586666524410248, 0.4959999918937683, 0.5239999890327454, 0.5516666769981384, 0.5703333616256714, 0.5789999961853027, 0.5910000205039978, 0.6140000224113464, 0.6303333044052124, 0.6573333144187927, 0.6613333225250244, 0.6729999780654907, 0.6840000152587891, 0.6913333535194397, 0.6959999799728394, 0.7023333311080933, 0.7053333520889282, 0.7099999785423279, 0.7113333344459534, 0.7129999995231628, 0.7239999771118164, 0.7246666550636292, 0.7233333587646484, 0.7273333072662354, 0.7306666374206543, 0.7303333282470703, 0.7310000061988831, 0.7336666584014893, 0.7333333492279053, 0.737333357334137, 0.7379999756813049, 0.737333357334137, 0.7409999966621399, 0.7403333187103271, 0.7436666488647461, 0.7486666440963745, 0.7549999952316284, 0.749666690826416, 0.7519999742507935, 0.7506666779518127, 0.7559999823570251, 0.7566666603088379, 0.7566666603088379, 0.753000020980835, 0.7573333382606506, 0.7570000290870667, 0.7613333463668823, 0.7596666812896729, 0.7599999904632568, 0.7616666555404663, 0.762666642665863, 0.765333354473114, 0.7639999985694885, 0.7663333415985107, 0.7643333077430725, 0.7683333158493042, 0.7720000147819519, 0.7699999809265137, 0.7710000276565552, 0.7743333578109741, 0.7713333368301392, 0.7703333497047424, 0.7683333158493042, 0.7733333110809326, 0.7753333449363708, 0.7726666927337646, 0.7746666669845581, 0.7776666879653931, 0.7720000147819519, 0.7760000228881836, 0.7743333578109741, 0.7749999761581421, 0.7766666412353516]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [71, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.24771428108215332, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.165849702674101, 2.3214342258452363, 2.368024219595572, 2.1622176557058954, 2.2920285049383557, 2.4248727313626035], "accuracy": [0.230484738945961, 0.21542729437351227, 0.19852067530155182, 0.19310526549816132, 0.1534803807735443, 0.16232994198799133], "val_loss": [2.2435791151864186, 1.9340735844203405, 1.9621695109776087, 1.954256193978446, 1.9632806777954102, 1.9791788373674666], "val_accuracy": [0.23233333230018616, 0.20000000298023224, 0.09966666996479034, 0.16633333265781403, 0.17233332991600037, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 4], [0, 0, 2, 1], [84, 28, 79], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 1, 0, 0, 1], [1, 1, 1, 0], [2, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.20999999344348907, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.601801085166644, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1830669641494751, 0.11940298229455948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.589887891496931, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.21833333373069763, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1], [1, 5, 9, 4, 0], [3, 1, 1, 1], [6, 97, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 0, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 3, 3, 2, 5, 3, 1, 0, 1, 4], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [94], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 8, 6, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(beta))))))), tf.math.negative(tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 0, 9, 4, 6], [1, 0, 2, 1], [98, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 2, 9, 4, 0, 4, 5, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 3, 5, 4], [35, 19], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [6, 0, 1, 5, 3, 4], [49], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(beta)))), tf.math.add(beta, tf.math.pow(grad, tf.math.square(tf.math.multiply(grad, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.405957023702783e+25, 7.882911708455406, 15.056942203749976, 22.255752446078006, 29.455618041963973, 36.6619424438275], "accuracy": [0.09140139818191528, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.275159563337054, 10.362943376813616, 16.535497392926896, 22.708717891148158, 28.888391767229354, 35.058394295828684], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1], [7, 5, 9, 4, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 5, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 0, 3, 2, 2, 2, 5, 1], [42, 63, 79], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 1, 2, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.142640257303694, 30145060.955498453, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09668471664190292, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 2184299812.571429, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10166666656732559, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 4], [0, 0, 2, 1], [52, 28, 79], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 0, 3, 2, 2, 2, 5, 1], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033071062773005, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10249637067317963, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 53, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 4], [4, 1, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [2, 5, 9, 4, 0], [0, 0, 2, 1], [6, 97, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 0, 4, 3, 3, 2, 3, 2, 3, 5, 1, 5, 4, 5, 3], [42], [0, 0, 1, 0, 1], [1, 1, 1, 0], [3, 4], [4, 1, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.405957023702783e+25, 7.882911015652772, 15.056940278514439, 22.255750682580395, 29.455619841235393, 36.66194575466831], "accuracy": [0.09140139818191528, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.2751584734235495, 10.362942831856865, 16.535494668143137, 22.70872061593192, 28.88839394705636, 35.05839647565569], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 9, 4], [3, 0, 2, 1], [6, 97, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 9, 0, 5, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 4], [4, 1, 1, 5, 3, 4], [22], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [4, 1, 2, 5, 3, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), beta)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 3], [3, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 1, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 3, 1, 5, 3, 0], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [4, 4, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.subtract(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.pow(tf.math.pow(alpha, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.405965064153905e+25, 7.882911834419522, 15.056942455678206, 22.255752446078006, 29.455618041963973, 36.66194273152954], "accuracy": [0.09140139818191528, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.275159563337054, 10.362943376813616, 16.535496847970144, 22.708717891148158, 28.888391767229354, 35.058394295828684], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [0, 0, 2, 1], [17, 28, 79], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [0, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [114.50534226812186, 1583.1127549820037, 6855.372068764653, 18510.443259538864, 39743.02507821787, 72676.32944789328], "accuracy": [0.09893012791872025, 0.10130762308835983, 0.09681680053472519, 0.09642054885625839, 0.09800554811954498, 0.10091137140989304], "val_loss": [355.0387224469866, 2413.810477120536, 7819.387834821428, 18207.692522321428, 35208.62611607143, 60454.747767857145], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [3, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [58], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [5.358151268067849, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2082948088645935, 0.10540219396352768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [65973606.85714286, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 1], [0, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [58], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [5, 4], [2, 0, 1, 5, 3, 4], [58], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.362187859908449, 3.043640035947458, 4.902931363213221, 7.993352145818656, 12.419385205013027, 18.132864721950963, 25.06314570187987], "accuracy": [0.09179764986038208, 0.09708096832036972, 0.09642054885625839, 0.0936468094587326, 0.09787346422672272, 0.1010434553027153, 0.09774138033390045], "val_loss": [2.096665450504848, 2.791003840310233, 4.325421742030552, 6.660703659057617, 9.771140507289342, 13.701074055262975, 18.51035145350865], "val_accuracy": [0.09933333098888397, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 8], [0, 0, 2, 1], [7, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [97], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.07914285361766815, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010945388779835, 2.2982635308785793, 2.301574599835788, 2.30192136355143, 2.3024521854024256, 2.302941462965595], "accuracy": [0.0952318087220192, 0.11028926074504852, 0.08413683623075485, 0.08968432247638702, 0.09893012791872025, 0.09826971590518951], "val_loss": [1.9670722143990653, 1.971067292349679, 1.9728990963527135, 1.9733234814235143, 1.9738176890781947, 1.974492413657052], "val_accuracy": [0.11433333158493042, 0.08866667002439499, 0.0806666687130928, 0.08133333176374435, 0.09733333438634872, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1], [9, 5, 9, 4], [0, 0, 2, 1], [6, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [85, 18, 10, 42]], "fitness": -0.07285714149475098, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022002273184703, 2.3012029106874254, 2.300498743571185, 2.2984016968542322, 2.2992064383807453, 2.30068339068325, 2.3010734999420746, 2.2993267840555616, 2.3003962399260147, 2.299328040925503, 2.300527695289393, 2.299982342721921, 2.3003232926582977, 2.299550059197239, 2.3001205461404077, 2.3009624188334605, 2.300103007778752, 2.3005857257606204, 2.3002936184414153, 2.3001376574207306, 2.3017485226150107, 2.3005935261199473, 2.3009917535770525], "accuracy": [0.09259014576673508, 0.09338264167308807, 0.09272222965955734, 0.09919429570436478, 0.09800554811954498, 0.09351472556591034, 0.09681680053472519, 0.10434553027153015, 0.09893012791872025, 0.10434553027153015, 0.09589222073554993, 0.09879804402589798, 0.1022322028875351, 0.10117553919553757, 0.09708096832036972, 0.0948355570435524, 0.10011887550354004, 0.0956280529499054, 0.10249637067317963, 0.1002509593963623, 0.09866596013307571, 0.09681680053472519, 0.09457138925790787], "val_loss": [1.9701892989022392, 1.9697625977652413, 1.9695212500435966, 1.9695425033569336, 1.969543729509626, 1.9696220670427596, 1.9695568084716797, 1.9695395060947962, 1.9695104190281458, 1.969555173601423, 1.9696608952113561, 1.9698404584612166, 1.9699809210641044, 1.9701788766043526, 1.9704059192112513, 1.970618384225028, 1.97076872416905, 1.9709739685058594, 1.9711459704807825, 1.9712646348135812, 1.9713489668709892, 1.971444538661412, 1.9715276445661272], "val_accuracy": [0.047333333641290665, 0.05233333259820938, 0.057999998331069946, 0.060333333909511566, 0.06666667014360428, 0.06933332979679108, 0.07699999958276749, 0.07800000160932541, 0.08033332973718643, 0.08033332973718643, 0.08533333241939545, 0.08399999886751175, 0.08366666734218597, 0.08633333444595337, 0.08799999952316284, 0.08699999749660492, 0.09000000357627869, 0.09066666662693024, 0.08900000154972076, 0.08799999952316284, 0.08733333647251129, 0.08699999749660492, 0.08533333241939545]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4, 6], [2, 1, 1, 1], [6, 97, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 8, 1, 4, 0, 4, 4, 4, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 5, 2, 1, 1, 1, 4], [42], [0, 1, 1, 1, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [13], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.pow(beta, tf.math.add(beta, grad)), tf.math.add(beta, beta)))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302682430359036, 2.3024063725056445, 2.3022301200516013, 2.2999836449704354, 2.301099494589696, 2.302793620898975], "accuracy": [0.08928807079792023, 0.0886276587843895, 0.08875974267721176, 0.09245806187391281, 0.08889182657003403, 0.0870426595211029], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [1, 0, 2, 1], [6, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [1, 0, 0, 0, 1], [0, 0, 1, 0], [1, 4], [2, 0, 1, 5, 3, 4], [60], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302682430359036, 2.3024063725056445, 2.3022301200516013, 2.2999836449704354, 2.301099494589696, 2.302793620898975], "accuracy": [0.08928807079792023, 0.0886276587843895, 0.08875974267721176, 0.09245806187391281, 0.08889182657003403, 0.0870426595211029], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]