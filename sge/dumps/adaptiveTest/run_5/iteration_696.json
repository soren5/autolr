[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 17, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8031428456306458, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2473330000183442, 1.731796353894013, 1.1650868420823848, 0.8752343239974446, 0.7919956974428344, 0.7353689059794241, 0.7120846694864539, 0.6707719545779431, 0.6411824885014262, 0.6162162328503309, 0.5884916174995932, 0.5635967027037261, 0.5416434278868886, 0.5212205189519223, 0.5033264876340973, 0.47989815106686035, 0.4646624483413165, 0.4685153932800351, 0.452451188432668, 0.4404289726615188, 0.4253403593237059, 0.41593667338112045, 0.4046694314191685, 0.3921244351138938, 0.3785309643439015, 0.37671977460282025, 0.3645705375468585, 0.3602894831130439, 0.35456332221889003, 0.34681360961471047, 0.33463035684692516, 0.3392762371404469, 0.32671158415073603, 0.3210677681479708, 0.3113712575480985, 0.30640292968126165, 0.3012430617767098, 0.2869201044734947, 0.2903257087315897, 0.2773552653953589, 0.2780595676002407, 0.27891634161194256, 0.265379718285762, 0.2602313481553702, 0.2530113369592539], "accuracy": [0.201294407248497, 0.4379870593547821, 0.5933166146278381, 0.670320987701416, 0.6935675740242004, 0.7154933214187622, 0.7292299270629883, 0.7413815855979919, 0.7561748623847961, 0.7647602558135986, 0.7744023203849792, 0.7808743715286255, 0.7893276810646057, 0.7976489067077637, 0.8075551390647888, 0.813498854637146, 0.8274996876716614, 0.822348415851593, 0.82683926820755, 0.8354246616363525, 0.8381983637809753, 0.8475762605667114, 0.8455950617790222, 0.8556333184242249, 0.8576145768165588, 0.8595958352088928, 0.863558292388916, 0.8627657890319824, 0.8602562546730042, 0.8582749962806702, 0.868049144744873, 0.8691058158874512, 0.8768987059593201, 0.8745211958885193, 0.8753136992454529, 0.883238673210144, 0.8860124349594116, 0.8870691061019897, 0.8912957310676575, 0.8949940800666809, 0.89552241563797, 0.8951261639595032, 0.8948619961738586, 0.8982961177825928, 0.9027869701385498], "val_loss": [1.7623231070382255, 0.8422614336013794, 0.6763115780694144, 0.606548377445766, 0.5825037445340838, 0.5543872458594186, 0.52253600529262, 0.5064014536993844, 0.48278013297489714, 0.4685653107506888, 0.44244985921042307, 0.4316501532282148, 0.4215845380510603, 0.40737348794937134, 0.39609895433698383, 0.39057685647692, 0.3775285482406616, 0.3730349711009434, 0.3638423000063215, 0.3580338273729597, 0.35986690861838205, 0.3516883168901716, 0.3459110345159258, 0.3454397235597883, 0.34101306540625437, 0.336660555430821, 0.340719929763249, 0.3356821026120867, 0.3211578811917986, 0.3268572858401707, 0.3224309427397592, 0.32477255378450665, 0.3170039142881121, 0.31571604524339947, 0.3116456610815866, 0.30824163981846403, 0.3100236824580601, 0.31716307571956087, 0.3159691095352173, 0.3073546886444092, 0.3104155489376613, 0.3119614209447588, 0.316097480910165, 0.31311075176511494, 0.31266547100884573], "val_accuracy": [0.4399999976158142, 0.6693333387374878, 0.7080000042915344, 0.734000027179718, 0.7463333606719971, 0.75, 0.7590000033378601, 0.7666666507720947, 0.7723333239555359, 0.7823333144187927, 0.7990000247955322, 0.8100000023841858, 0.8083333373069763, 0.8186666369438171, 0.8286666870117188, 0.8363333344459534, 0.8389999866485596, 0.8403333425521851, 0.8416666388511658, 0.8513333201408386, 0.8516666889190674, 0.856333315372467, 0.8579999804496765, 0.859333336353302, 0.8566666841506958, 0.8583333492279053, 0.8556666374206543, 0.859333336353302, 0.8693333268165588, 0.8686666488647461, 0.8676666617393494, 0.8673333525657654, 0.8730000257492065, 0.8706666827201843, 0.8723333477973938, 0.871999979019165, 0.8723333477973938, 0.8733333349227905, 0.8736666440963745, 0.878333330154419, 0.8776666522026062, 0.8763333559036255, 0.8743333220481873, 0.8769999742507935, 0.8763333559036255]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8022857308387756, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.247333031509373, 1.7318077421049793, 1.1650596061528808, 0.8754097843025307, 0.7919192824617526, 0.735477356319619, 0.7109854045309143, 0.672020393371456, 0.6407406217606942, 0.6156900824415308, 0.5892504086946028, 0.5622209771009185, 0.5419304989245841, 0.5219427809943896, 0.5041084173112702, 0.4783969480505457, 0.46368750081149235, 0.4658818718598519, 0.4512745956183582, 0.44041469419999224, 0.42574536356754655, 0.41512105983671277, 0.40268241845857605, 0.3937344447480941, 0.3758088634581283, 0.3745183028706848, 0.3606208011010036, 0.35612411648448367, 0.3514723467859909, 0.34749254003696595, 0.33347830925052663, 0.33878519002157764, 0.32813716204001714, 0.3211995500496995, 0.31482636980518547, 0.3078272100200963, 0.3020791336333101, 0.29465694239173884, 0.29137074493099085, 0.28061688950096125, 0.2822882064447553, 0.2817559243350721, 0.26687023485294187, 0.26063550744373504, 0.25569386274240524, 0.25872773288294876, 0.2560391168371719, 0.2369043254923937, 0.2366369233852081, 0.2362255306449218, 0.22620216402489796, 0.21774072232436606, 0.22157185281532285, 0.21627268200072755, 0.21991515812848964, 0.21362519559055948, 0.21114598589172737, 0.19872823592977532, 0.2003826787344705, 0.1882506346937971, 0.19752821065077078], "accuracy": [0.201294407248497, 0.4379870593547821, 0.5935807824134827, 0.6705851554870605, 0.6936996579170227, 0.715889573097229, 0.7306828498840332, 0.7417778372764587, 0.7580240368843079, 0.7660810947418213, 0.7728173136711121, 0.7795535326004028, 0.7897239327430725, 0.7980451583862305, 0.8075551390647888, 0.8146876096725464, 0.8265751004219055, 0.8239334225654602, 0.8261788487434387, 0.8352925777435303, 0.837537944316864, 0.847840428352356, 0.8481045961380005, 0.8558974862098694, 0.8549728989601135, 0.8595958352088928, 0.8639545440673828, 0.8623695969581604, 0.8615770936012268, 0.8634262084960938, 0.8704266548156738, 0.8722757697105408, 0.8774270415306091, 0.8735966086387634, 0.8741249442100525, 0.8811253309249878, 0.8853520154953003, 0.8849557638168335, 0.8889182209968567, 0.893541157245636, 0.8893144726753235, 0.8901069760322571, 0.894069492816925, 0.9005415439605713, 0.8994848728179932, 0.8976356983184814, 0.9038436412811279, 0.9084665179252625, 0.9066173434257507, 0.9064852595329285, 0.9095231890678406, 0.9137498140335083, 0.9137498140335083, 0.9128252267837524, 0.910711944103241, 0.9178444147109985, 0.9133535623550415, 0.9207502603530884, 0.920089840888977, 0.927882730960846, 0.9186369180679321], "val_loss": [1.7623237882341658, 0.8422676495143345, 0.6763437475476947, 0.6063474246433803, 0.5821891171591622, 0.5534607682909284, 0.5217217717851911, 0.5073290893009731, 0.481494528906686, 0.46821813923971994, 0.44111628191811697, 0.43238881656101774, 0.4215887018612453, 0.40691621814455303, 0.39513845103127615, 0.38932391575404574, 0.37728514841624666, 0.3725488952228001, 0.3632929836000715, 0.3549057926450457, 0.35849492038999287, 0.3487767662320818, 0.34354054076331003, 0.34444524560655865, 0.33767493282045635, 0.33203251021248953, 0.3371021406991141, 0.3335322482245309, 0.3214507613863264, 0.32502967970711844, 0.3223885808672224, 0.32351050206593107, 0.31610662596566336, 0.3137496794973101, 0.3094977651323591, 0.30957777159554617, 0.31095644405909945, 0.3174217513629368, 0.314055723803384, 0.3124200701713562, 0.3090493849345616, 0.30985372407095774, 0.3111568178449358, 0.3179669805935451, 0.31479029996054514, 0.3169901030404227, 0.30368573325020926, 0.3082824775150844, 0.31527142013822285, 0.31741260630743845, 0.32118760687964304, 0.31402845893587383, 0.3204139300755092, 0.31470155715942383, 0.30705922842025757, 0.31271097489765715, 0.32318200383867535, 0.33027431794575285, 0.3256421514919826, 0.3286706975528172, 0.3147314786911011], "val_accuracy": [0.4399999976158142, 0.6690000295639038, 0.7083333134651184, 0.7329999804496765, 0.7453333139419556, 0.753000020980835, 0.7573333382606506, 0.765666663646698, 0.7726666927337646, 0.7796666622161865, 0.8003333210945129, 0.8100000023841858, 0.8069999814033508, 0.8183333277702332, 0.824999988079071, 0.8366666436195374, 0.8386666774749756, 0.8416666388511658, 0.8416666388511658, 0.8510000109672546, 0.8516666889190674, 0.8576666712760925, 0.8579999804496765, 0.8603333234786987, 0.8646666407585144, 0.8633333444595337, 0.8560000061988831, 0.8610000014305115, 0.8686666488647461, 0.8673333525657654, 0.8673333525657654, 0.8673333525657654, 0.8726666569709778, 0.8723333477973938, 0.8740000128746033, 0.874666690826416, 0.8736666440963745, 0.8756666779518127, 0.8736666440963745, 0.8756666779518127, 0.8736666440963745, 0.8766666650772095, 0.8756666779518127, 0.8763333559036255, 0.875333309173584, 0.8773333430290222, 0.8830000162124634, 0.8820000290870667, 0.8786666393280029, 0.8786666393280029, 0.8836666941642761, 0.8820000290870667, 0.8766666650772095, 0.8799999952316284, 0.8820000290870667, 0.8859999775886536, 0.8790000081062317, 0.8840000033378601, 0.8823333382606506, 0.8806666731834412, 0.8813333511352539]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [13, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 5, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 0, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [3, 15, 96, 3, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7525714039802551, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302328564471667, 2.2896014875062565, 2.2700855659534747, 2.241428083448268, 2.20083946524169, 2.1393832706929574, 2.047798625387772, 1.8990122818786235, 1.7070382856154376, 1.5366862376037607, 1.450025968579348, 1.430828558124839, 1.305669691143507, 1.2162002917719146, 1.0906577897881158, 0.97981222300025, 0.9477320332033381, 0.9250308520065528, 0.9112914772380722, 0.9023919804551898, 0.8629193158906133, 0.8519034786247038, 0.8477689967084917, 0.829662554378381, 0.8537557644693528, 0.8294524174828681, 0.8124765753037485, 0.8005730887571614, 0.7874060334577977, 0.7791338207746588, 0.7676088420816652, 0.7548875948535988, 0.7381071525794042, 0.7318293221748547, 0.7332090018306032, 0.7140201770901885, 0.7128921796097464, 0.7065989406133104, 0.6944234350637406, 0.6983443326827888, 0.6893530966520404, 0.6828353125909536, 0.6727075002385862, 0.666597681400751, 0.6682935896535135], "accuracy": [0.09060890227556229, 0.12296922504901886, 0.17976489663124084, 0.2509576082229614, 0.31079116463661194, 0.35702019929885864, 0.3839651346206665, 0.41408005356788635, 0.43706247210502625, 0.46849822998046875, 0.4900277256965637, 0.50785893201828, 0.5555408596992493, 0.5836745500564575, 0.6168273687362671, 0.6324131488800049, 0.6343944072723389, 0.6411306262016296, 0.6633205413818359, 0.6674151420593262, 0.6761326193809509, 0.6793025732040405, 0.6873596906661987, 0.683000922203064, 0.6798309087753296, 0.6934354901313782, 0.7000396251678467, 0.696209192276001, 0.705058753490448, 0.7010962963104248, 0.6995112895965576, 0.7058512568473816, 0.7193237543106079, 0.7150970697402954, 0.7213049530982971, 0.7312111854553223, 0.7306828498840332, 0.7310791015625, 0.7256637215614319, 0.7333245277404785, 0.7368907928466797, 0.7461365461349487, 0.7511557340621948, 0.7556465268135071, 0.7493065595626831], "val_loss": [1.9653867312840052, 1.9504705837794714, 1.92703492300851, 1.8948074749537878, 1.8491767474583216, 1.7767434120178223, 1.6563832078661238, 1.4643563543047224, 1.2198397772652763, 1.0002056530543737, 0.8592736380440849, 0.8124598094395229, 0.7556442703519549, 0.7526841844831195, 0.6893297944750104, 0.6773827586855207, 0.6834785257066999, 0.6848391124180385, 0.6690859964915684, 0.6438977037157331, 0.6278057268687657, 0.6170962027141026, 0.6098554985863822, 0.6071975401469639, 0.6009333985192435, 0.590555020741054, 0.5876437595912388, 0.5855075461523873, 0.5722095625741142, 0.5648301328931536, 0.560965861592974, 0.55310777255467, 0.5456680059432983, 0.5444977453776768, 0.5414152996880668, 0.5324198348181588, 0.5232090098517281, 0.5172508444104876, 0.5131228481020246, 0.5072545153754098, 0.5017329113824027, 0.501372218132019, 0.5028983865465436, 0.500610215323312, 0.49490623814719065], "val_accuracy": [0.0729999989271164, 0.21666666865348816, 0.3526666760444641, 0.39666667580604553, 0.4286666810512543, 0.4566666781902313, 0.4909999966621399, 0.5336666703224182, 0.5879999995231628, 0.640666663646698, 0.6703333258628845, 0.6439999938011169, 0.6936666369438171, 0.6949999928474426, 0.7059999704360962, 0.7053333520889282, 0.7006666660308838, 0.7123333215713501, 0.7136666774749756, 0.7176666855812073, 0.7223333120346069, 0.7243333458900452, 0.7243333458900452, 0.7246666550636292, 0.734333336353302, 0.7416666746139526, 0.7436666488647461, 0.7433333396911621, 0.7483333349227905, 0.7463333606719971, 0.7516666650772095, 0.7563333511352539, 0.7596666812896729, 0.7586666941642761, 0.765333354473114, 0.7716666460037231, 0.7726666927337646, 0.7766666412353516, 0.7786666750907898, 0.7796666622161865, 0.7786666750907898, 0.7760000228881836, 0.7733333110809326, 0.7723333239555359, 0.7756666541099548]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 6, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 5, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 1, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 25, 25, 15, 10, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, beta)))))), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, alpha), alpha)))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 3, 4, 9, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 56, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [4, 4, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), beta)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(sigma, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.math.subtract(sigma, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3024547700915967, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 1, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [90, 21, 96, 57, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 17, 17, 11, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(beta)))), tf.math.sqrt(alpha)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3744385008798723, 79668720186741.03, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03737947344779968, 0.05772024765610695, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.327229840414865, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0026666666381061077, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 4, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [92, 56, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), grad)), alpha)))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.9884357624648508, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2133139669895172, 0.08981640636920929, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [35.44418116978237, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [13, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 1, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 7, 7, 3, 4, 3, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024547700915967, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 7, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 56, 34, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024547700915967, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [21, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 1, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.09200000017881393, "mapping_values": [1, 4, 4, 3, 1, 1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30387476831773, 2.3013384191351576, 2.301645748524886, 2.3020893569793115, 2.301601357416564, 2.3001087169448193, 2.3019482534260183, 2.3011406260301346, 2.3016488213879858, 2.3015211626460226, 2.3008833449231068, 2.3022781379502195, 2.2996398966467657, 2.30042843122083, 2.3005853359646657, 2.2988546963428322, 2.3001638876842296, 2.2989100497302095, 2.30133408433206, 2.300627177590786, 2.2992670681844722, 2.3007645295233443, 2.2993855221931883, 2.2993709948462517, 2.299305990875641, 2.2989458472201885, 2.3000240265464957, 2.3016226919272698, 2.299341780461372, 2.2989345990655727, 2.298331118215738, 2.2985713565354304, 2.298542989038788, 2.298360369665559, 2.299054476626246, 2.29953881277463, 2.2993438415177163, 2.2991313661928774, 2.2989677947352605, 2.2994201123486135, 2.2991718228120592, 2.2999191504301977, 2.2987373499050903, 2.2996873706953163, 2.299774247641734], "accuracy": [0.08757099509239197, 0.09126931428909302, 0.09721305221319199, 0.08875974267721176, 0.10117553919553757, 0.09430722147226334, 0.09113723784685135, 0.08836349099874496, 0.09681680053472519, 0.09470347315073013, 0.09576013684272766, 0.09325055778026581, 0.10011887550354004, 0.1014397069811821, 0.09721305221319199, 0.09826971590518951, 0.09774138033390045, 0.1018359512090683, 0.0944393053650856, 0.09628847241401672, 0.1002509593963623, 0.1002509593963623, 0.09945846349000931, 0.09681680053472519, 0.10091137140989304, 0.10460969805717468, 0.09721305221319199, 0.09998679161071777, 0.10381719470024109, 0.10830801725387573, 0.11015717685222626, 0.10685510188341141, 0.10606260597705841, 0.10698718577623367, 0.10632677376270294, 0.10157178342342377, 0.11253467202186584, 0.11253467202186584, 0.109232597053051, 0.10632677376270294, 0.11055342853069305, 0.10751552134752274, 0.11266675591468811, 0.10236428678035736, 0.10540219396352768], "val_loss": [1.9709937913077218, 1.97096129826137, 1.9709101404462541, 1.9708402497427804, 1.970752784184047, 1.9706475394112724, 1.9705282620021276, 1.970402717590332, 1.9702750614711217, 1.9701427050999232, 1.9700025830950056, 1.9698657308306013, 1.9697285379682268, 1.9695912769862585, 1.969461441040039, 1.9693521090916224, 1.9692525182451521, 1.9691658020019531, 1.9690945489065987, 1.9690307208469935, 1.9689878055027552, 1.9689606257847376, 1.9689406667436873, 1.968921184539795, 1.9688903944832938, 1.9688679831368583, 1.9688471385410853, 1.9688201631818498, 1.968804223196847, 1.9688051087515694, 1.9688112395150321, 1.9688354219709123, 1.968872138432094, 1.9689271109444755, 1.968996184212821, 1.9690759522574288, 1.9691696848188127, 1.969278063092913, 1.9693969317844935, 1.9695158685956682, 1.9696333748953683, 1.9697555133274622, 1.9698825563703264, 1.9700048991612025, 1.9701202937534876], "val_accuracy": [0.03766666725277901, 0.03700000047683716, 0.038333334028720856, 0.03933333232998848, 0.0403333343565464, 0.04066666588187218, 0.04233333468437195, 0.04500000178813934, 0.046666666865348816, 0.04766666516661644, 0.05000000074505806, 0.05299999937415123, 0.05533333495259285, 0.05700000002980232, 0.05766666680574417, 0.061666667461395264, 0.06333333253860474, 0.06700000166893005, 0.06966666877269745, 0.07400000095367432, 0.07833333313465118, 0.08033332973718643, 0.0820000022649765, 0.08799999952316284, 0.09200000017881393, 0.09666666388511658, 0.09966666996479034, 0.10300000011920929, 0.10366666316986084, 0.10599999874830246, 0.1066666692495346, 0.10833333432674408, 0.1106666699051857, 0.11166666448116302, 0.11133333295583725, 0.11033333092927933, 0.1133333370089531, 0.11633333563804626, 0.11633333563804626, 0.11699999868869781, 0.11400000005960464, 0.11233333498239517, 0.10966666787862778, 0.10766666382551193, 0.10766666382551193]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 3, 4, 0, 6, 4, 2, 9, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 1, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.081142857670784, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010714075836476, 2.300513622798877, 2.301698997681718, 2.3020137433032035, 2.3021366845945783, 2.302239209275755, 2.3024209234393616, 2.302310598524822, 2.302557731521852], "accuracy": [0.09338264167308807, 0.09457138925790787, 0.09972262382507324, 0.09642054885625839, 0.09272222965955734, 0.09536388516426086, 0.09496764093637466, 0.09972262382507324, 0.09100515395402908], "val_loss": [1.9706252643040247, 1.9724902425493513, 1.9729692595345634, 1.9731482778276717, 1.9732757295880998, 1.9733930315290178, 1.9734649658203125, 1.973503793988909, 1.973538603101458], "val_accuracy": [0.10766666382551193, 0.0976666659116745, 0.09799999743700027, 0.1133333370089531, 0.11233333498239517, 0.10533333569765091, 0.0989999994635582, 0.10466666519641876, 0.10833333432674408]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 1, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 5, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [28, 15, 96, 3, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.07742857187986374, "mapping_values": [1, 4, 4, 3, 1, 1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), beta)))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))), grad)), alpha))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303847582584926, 2.301179613750278, 2.3012258601210704, 2.301308352603038, 2.300523206936039, 2.2989749794449743, 2.300413949000538, 2.2996102781375134, 2.3001836727103537, 2.3002966289837694, 2.299571339133992, 2.3007194723167816, 2.2985103055706837, 2.2993959689011207, 2.299260029939534, 2.2982194522242456, 2.299164113682243, 2.2987567391204733, 2.300490602132525, 2.3003291907390473, 2.2995189169315755, 2.300620401981028, 2.300426399860526], "accuracy": [0.08770307898521423, 0.09153348207473755, 0.09747721254825592, 0.09074098616838455, 0.10434553027153015, 0.09998679161071777, 0.09813763201236725, 0.0940430611371994, 0.09959053993225098, 0.10117553919553757, 0.10394927859306335, 0.09681680053472519, 0.11002509295940399, 0.10500594228506088, 0.10817593336105347, 0.11332716792821884, 0.10619468986988068, 0.10553427785634995, 0.10077928751707077, 0.1022322028875351, 0.10751552134752274, 0.10170386731624603, 0.10421344637870789], "val_loss": [1.9709141595023019, 1.9707072802952357, 1.9704171589442663, 1.9700871195111955, 1.9697538784572057, 1.9694727488926478, 1.969299588884626, 1.9692106928144182, 1.9691901888166154, 1.9692128045218331, 1.9692236355372839, 1.9692365782601493, 1.9692471367972237, 1.9692784718104772, 1.9693265642438615, 1.9694136892046248, 1.9695478166852678, 1.9697243145533971, 1.9699160712105888, 1.9701148441859655, 1.9703218596322196, 1.9705334390912737, 1.97073119027274], "val_accuracy": [0.03799999877810478, 0.04066666588187218, 0.04466666653752327, 0.04833333194255829, 0.054666668176651, 0.05900000035762787, 0.06266666948795319, 0.0676666647195816, 0.07566666603088379, 0.08033332973718643, 0.08666666597127914, 0.09233333170413971, 0.09833333641290665, 0.10366666316986084, 0.10566666722297668, 0.10566666722297668, 0.10733333230018616, 0.10866666585206985, 0.10833333432674408, 0.1066666692495346, 0.10400000214576721, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 58, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.0771428570151329, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303847564603548, 2.301179339368944, 2.301224825483319, 2.301306193420648, 2.3005195047877107, 2.2989715829800623, 2.300411020240386, 2.299609810054861, 2.3001877793924383, 2.300304861085101, 2.2995797826345994, 2.300728280105611, 2.2985199501076394, 2.299405527719496, 2.2992701828991495, 2.2982299382644733, 2.299173848315032, 2.298768754333569, 2.300501510971305, 2.3003385834422456, 2.299529519897993, 2.3006284180224106, 2.3004327290849504], "accuracy": [0.08770307898521423, 0.09153348207473755, 0.09747721254825592, 0.09087307006120682, 0.10434553027153015, 0.09998679161071777, 0.09813763201236725, 0.09417514503002167, 0.09959053993225098, 0.10130762308835983, 0.10394927859306335, 0.09655263274908066, 0.11002509295940399, 0.10500594228506088, 0.10817593336105347, 0.11319508403539658, 0.10593052208423615, 0.10527011007070541, 0.10077928751707077, 0.10249637067317963, 0.10672302544116974, 0.10157178342342377, 0.10408136248588562], "val_loss": [1.970914091382708, 1.9707067353384835, 1.9704160690307617, 1.9700843266078405, 1.969749859401158, 1.9694694110325404, 1.9692976815359933, 1.969212872641427, 1.9691969326564245, 1.9692224775041853, 1.9692342621939523, 1.9692482267107283, 1.9692587171282088, 1.969289984021868, 1.9693378039768763, 1.9694239752633231, 1.9695595332554408, 1.9697354180472237, 1.9699274471827917, 1.970125470842634, 1.9703302383422852, 1.970541204724993, 1.9707369123186385], "val_accuracy": [0.03799999877810478, 0.04066666588187218, 0.04466666653752327, 0.04833333194255829, 0.054666668176651, 0.058666665107011795, 0.06266666948795319, 0.0676666647195816, 0.07599999755620956, 0.0806666687130928, 0.08633333444595337, 0.09200000017881393, 0.0976666659116745, 0.10333333164453506, 0.10566666722297668, 0.10599999874830246, 0.10700000077486038, 0.10833333432674408, 0.10833333432674408, 0.10700000077486038, 0.10366666316986084, 0.10133333504199982, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [78, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 3, 4, 7, 6, 4, 2, 9, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 1, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06342857331037521, "mapping_values": [1, 3, 3, 1, 2, 0, 26, 26, 14, 12, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, alpha)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, alpha))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303410435837683, 2.300317728949292, 2.3001495333175144, 2.300258279366343, 2.3000122693708906, 2.299145470804243, 2.3004885414540728, 2.2997431727983635, 2.300225441340269, 2.300363315677504, 2.2997852148333906, 2.3009910499415045, 2.299288750608064, 2.3002865801020036, 2.3002061040850834, 2.299388474477139], "accuracy": [0.08770307898521423, 0.09338264167308807, 0.09787346422672272, 0.09351472556591034, 0.10421344637870789, 0.10315678268671036, 0.09959053993225098, 0.09879804402589798, 0.10117553919553757, 0.10011887550354004, 0.10434553027153015, 0.09932637959718704, 0.10830801725387573, 0.1022322028875351, 0.10487385839223862, 0.10659094154834747], "val_loss": [1.970163140978132, 1.9698983601161413, 1.9697187287466866, 1.9696709087916784, 1.9697368485586983, 1.969817774636405, 1.969789777483259, 1.9697091920035226, 1.9696311269487654, 1.9696405274527413, 1.9697977474757604, 1.97001736504691, 1.9703074863978796, 1.9705335072108678, 1.9707202230181013, 1.9709009443010603], "val_accuracy": [0.047333333641290665, 0.0533333346247673, 0.054666668176651, 0.05900000035762787, 0.06199999898672104, 0.06666667014360428, 0.07533333450555801, 0.07900000363588333, 0.08533333241939545, 0.08500000089406967, 0.08900000154972076, 0.08766666799783707, 0.08399999886751175, 0.08299999684095383, 0.08233333379030228, 0.0833333358168602]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [4, 2, 1, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06314285844564438, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.negative(alpha), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303431752524466, 2.3004021327477626, 2.3002816333022524, 2.3004334503239834, 2.300191155230727, 2.2993290194462412, 2.3006987492044004, 2.2999617122561467, 2.3004446026199075, 2.3005664940633634, 2.299995522567735, 2.301218560059718, 2.2995259892498074, 2.300494530008548, 2.3004081439442876, 2.299578284574868], "accuracy": [0.08757099509239197, 0.09311848133802414, 0.09774138033390045, 0.09325055778026581, 0.10289261490106583, 0.10236428678035736, 0.09866596013307571, 0.09826971590518951, 0.1006472036242485, 0.09972262382507324, 0.10342095047235489, 0.09853387624025345, 0.10738343745470047, 0.1014397069811821, 0.10434553027153015, 0.10579843819141388], "val_loss": [1.9702210426330566, 1.9700095994131905, 1.9698775155203683, 1.9698387554713659, 1.9699106216430664, 1.970008441380092, 1.9700010163443429, 1.9699113709586007, 1.969824995313372, 1.9698379380362374, 1.9699973378862654, 1.9702457700456892, 1.9705078261239188, 1.970733642578125, 1.970900535583496, 1.9710679054260254], "val_accuracy": [0.04699999839067459, 0.05299999937415123, 0.0533333346247673, 0.0573333315551281, 0.061666667461395264, 0.0663333311676979, 0.07266666740179062, 0.07633333653211594, 0.08266666531562805, 0.0833333358168602, 0.08699999749660492, 0.08566666394472122, 0.08133333176374435, 0.08166666328907013, 0.08266666531562805, 0.08166666328907013]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 1, 1, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [3, 15, 96, 3, 93, 42, 17], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303879126833572, 2.3013655118119716, 2.3017232278240134, 2.302250287284342, 2.3018531363795476, 2.3004290175522955], "accuracy": [0.08757099509239197, 0.09126931428909302, 0.09694888442754745, 0.08796724677085876, 0.10077928751707077, 0.09391097724437714], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 0, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.negative(beta), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(beta), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303879126833572, 2.3013655118119716, 2.3017232278240134, 2.302250287284342, 2.3018531363795476, 2.3004290175522955], "accuracy": [0.08757099509239197, 0.09126931428909302, 0.09694888442754745, 0.08796724677085876, 0.10077928751707077, 0.09391097724437714], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 5, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 1, 3, 3, 0, 3, 3, 3, 0, 1, 3, 2, 0, 4, 5, 2, 0, 1, 2, 2, 3, 0, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303879126833572, 2.3013655118119716, 2.3017232278240134, 2.302250287284342, 2.3018531363795476, 2.3004290175522955], "accuracy": [0.08757099509239197, 0.09126931428909302, 0.09694888442754745, 0.08796724677085876, 0.10077928751707077, 0.09391097724437714], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 1, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 3, 4, 0, 6, 4, 2, 9, 1, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 1, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303879126833572, 2.3013655118119716, 2.3017232278240134, 2.302250287284342, 2.3018531363795476, 2.3004290175522955], "accuracy": [0.08757099509239197, 0.09126931428909302, 0.09694888442754745, 0.08796724677085876, 0.10077928751707077, 0.09391097724437714], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 3, 4, 0, 8, 4, 2, 9, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 5, 3, 5, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [5, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303879126833572, 2.3013655118119716, 2.3017232278240134, 2.302250287284342, 2.3018531363795476, 2.3004290175522955], "accuracy": [0.08757099509239197, 0.09126931428909302, 0.09694888442754745, 0.08796724677085876, 0.10077928751707077, 0.09391097724437714], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]