[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7742857336997986, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.294508201634139, 2.2730138996856373, 2.2491160830990387, 2.2217655272893837, 2.1884652968363723, 2.1462558308738555, 2.089010783095858, 2.0210016534438995, 1.9335864932545581, 1.8312021834644674, 1.7278975363436502, 1.6196797716934068, 1.5220914970000405, 1.4391289361479607, 1.3687404382655555, 1.3172941984454511, 1.2576574575096435, 1.2108735410749258, 1.1838018604793001, 1.1490560435914974, 1.108460789437874, 1.0837413742715152, 1.0640796705905269, 1.0300194229258994, 1.0227724472293291, 0.9939729772727598, 0.9770146724633285, 0.9639826640161966, 0.9522862976032902, 0.9293765431271725, 0.9176595374861131, 0.9100945758514117, 0.906730265373945, 0.8897995294329197, 0.8687046862250039, 0.8806834602321317, 0.8747216139991034, 0.8521051549672167, 0.8619192921962594, 0.8473916462604254, 0.8381270267046705, 0.8333276031417555, 0.8297497929913918, 0.8101118286256509, 0.8154945952497721, 0.8162222241980603, 0.8077931362388157, 0.7989252417425454, 0.8041031237968663, 0.7865595178298033, 0.7912021669272686, 0.7825189913504821, 0.7776601045532564, 0.781612598003256, 0.7669721313235215, 0.768614098482821, 0.7572775255844908, 0.7575055825286743, 0.7703583015348178, 0.749752945329031, 0.7480873411530911, 0.7454765343851874, 0.7443545479516879, 0.7377349178174767, 0.7372928666810254, 0.7378184292152998, 0.733501322588129, 0.7255075266096397, 0.7243734543916492, 0.7296959786619162, 0.7217290871147435, 0.7188481306119633, 0.7123217433907526, 0.7152411338518072, 0.7031004877689413, 0.7138884244672438, 0.7089366560614639, 0.6962707380671559, 0.702042789176439, 0.7073088891360392, 0.6942976339618213, 0.693079192853166], "accuracy": [0.11795007437467575, 0.17434948682785034, 0.22374852001667023, 0.27261921763420105, 0.3123761713504791, 0.35622772574424744, 0.38422930240631104, 0.4085325598716736, 0.42491084337234497, 0.45344075560569763, 0.4687623679637909, 0.49531105160713196, 0.5156518220901489, 0.5309734344482422, 0.5449742674827576, 0.5562012791633606, 0.5674283504486084, 0.5806366205215454, 0.5852595567703247, 0.5999207496643066, 0.6190727949142456, 0.6164311170578003, 0.6192048788070679, 0.6343944072723389, 0.6325452327728271, 0.6470743417739868, 0.6540747880935669, 0.6551313996315002, 0.658961832523346, 0.6728305220603943, 0.669792652130127, 0.6820763349533081, 0.6753401160240173, 0.6804913282394409, 0.687491774559021, 0.6851142644882202, 0.6897371411323547, 0.6946242451667786, 0.6890767216682434, 0.7016246318817139, 0.6985867023468018, 0.7046625018119812, 0.6993792057037354, 0.7059833407402039, 0.7059833407402039, 0.7005679607391357, 0.7045304179191589, 0.7120591998100281, 0.7111346125602722, 0.7094175219535828, 0.7136441469192505, 0.7164179086685181, 0.7143045663833618, 0.7132478952407837, 0.7230220437049866, 0.7213049530982971, 0.724739134311676, 0.7263241410255432, 0.719852089881897, 0.7296261787414551, 0.7288337349891663, 0.718399167060852, 0.7306828498840332, 0.735569953918457, 0.7321357727050781, 0.7312111854553223, 0.7308149337768555, 0.7374191284179688, 0.735569953918457, 0.7359662055969238, 0.7339849472045898, 0.7371549606323242, 0.7363624572753906, 0.7386078238487244, 0.7404569983482361, 0.7368907928466797, 0.7429665923118591, 0.744419515132904, 0.7397965788841248, 0.7392682433128357, 0.7441553473472595, 0.7473253011703491], "val_loss": [1.95072569165911, 1.9299304825919015, 1.9060568128313338, 1.8773714474269323, 1.8404739924839564, 1.792475359780448, 1.7315667697361536, 1.655376366206578, 1.5638110978262765, 1.460773297718593, 1.3530736650739397, 1.2474777698516846, 1.1517961025238037, 1.0695691789899553, 1.0018201896122523, 0.9476356846945626, 0.9001758098602295, 0.8620596783501762, 0.8298268829073224, 0.8027012348175049, 0.7779677936008998, 0.7568005153111049, 0.7396874257496425, 0.72213043485369, 0.710404634475708, 0.6961383649281093, 0.6845013414110456, 0.6751529148646763, 0.6675010408673968, 0.6570350442613874, 0.6483032703399658, 0.640670895576477, 0.6351739338466099, 0.6286489452634539, 0.6228820766721453, 0.6171352182115827, 0.6137964384896415, 0.6067436763218471, 0.601472156388419, 0.5976874147142682, 0.5944329670497349, 0.5893933262143817, 0.585399968283517, 0.5822187832423619, 0.5792540822710309, 0.5746721880776542, 0.5725571087428502, 0.568214876311166, 0.5653443506785801, 0.562584366117205, 0.5624686990465436, 0.5569032771246774, 0.5549298524856567, 0.553039414542062, 0.5507740293230329, 0.5490625245230538, 0.5463145630700248, 0.5433931521006993, 0.5425435985837664, 0.5385555880410331, 0.537440470286778, 0.5362326587949481, 0.5348705223628453, 0.5326157638004848, 0.5300346612930298, 0.5278020415987287, 0.5257678713117327, 0.5261471441813877, 0.5247045244489398, 0.5210242441722325, 0.5194293771471296, 0.5173927034650531, 0.515293938773019, 0.5130482912063599, 0.5133744989122663, 0.512479134968349, 0.5086577960423061, 0.5092231375830514, 0.5061441149030413, 0.50513642174857, 0.5043694972991943, 0.5026789733341762], "val_accuracy": [0.21699999272823334, 0.3426666557788849, 0.39533331990242004, 0.437666654586792, 0.46399998664855957, 0.49799999594688416, 0.531333327293396, 0.5496666431427002, 0.5673333406448364, 0.5763333439826965, 0.5893333554267883, 0.6086666584014893, 0.6393333077430725, 0.6570000052452087, 0.67166668176651, 0.6766666769981384, 0.6816666722297668, 0.6926666498184204, 0.6973333358764648, 0.7013333439826965, 0.7076666951179504, 0.7036666870117188, 0.7103333473205566, 0.7160000205039978, 0.7146666646003723, 0.7250000238418579, 0.7250000238418579, 0.7266666889190674, 0.7193333506584167, 0.7289999723434448, 0.7336666584014893, 0.7336666584014893, 0.7383333444595337, 0.737333357334137, 0.7369999885559082, 0.7400000095367432, 0.7406666874885559, 0.7443333268165588, 0.746666669845581, 0.7480000257492065, 0.7490000128746033, 0.7483333349227905, 0.7463333606719971, 0.7573333382606506, 0.7556666731834412, 0.749666690826416, 0.7546666860580444, 0.7553333044052124, 0.7590000033378601, 0.7590000033378601, 0.7553333044052124, 0.7609999775886536, 0.762666642665863, 0.765333354473114, 0.7666666507720947, 0.762666642665863, 0.7670000195503235, 0.7696666717529297, 0.7646666765213013, 0.7703333497047424, 0.7696666717529297, 0.7696666717529297, 0.7683333158493042, 0.7720000147819519, 0.7736666798591614, 0.7713333368301392, 0.7726666927337646, 0.7746666669845581, 0.7733333110809326, 0.7749999761581421, 0.7756666541099548, 0.7743333578109741, 0.777999997138977, 0.7770000100135803, 0.7773333191871643, 0.7760000228881836, 0.778333306312561, 0.7730000019073486, 0.7746666669845581, 0.7763333320617676, 0.7773333191871643, 0.7753333449363708]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 5, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 6, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 0, 0, 2, 2, 3, 2, 0, 2], [16, 63, 79, 92, 41, 36, 91, 33], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2777142822742462, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.8367646077777953, 2.2870983574541883, 2.3018598013613216, 2.3418918417397903, 2.3033788574212704, 2.3031316592693014, 2.3027561982514726, 2.302553636365484], "accuracy": [0.18636904656887054, 0.12561088800430298, 0.11147800832986832, 0.12534672021865845, 0.09509972482919693, 0.09655263274908066, 0.09800554811954498, 0.10210011899471283], "val_loss": [1.9869585037231445, 2.0101613317217146, 1.9287036487034388, 1.9742798124040877, 1.9736854008265905, 1.973668098449707, 1.9734768186296736, 1.9733810424804688], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.19300000369548798, 0.10400000214576721, 0.10066666454076767, 0.09833333641290665, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [2, 0, 0, 2, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [62], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.24742856621742249, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.833421167082176, 2.3059062381792756, 2.526120877080133, 2.3061871549094657, 2.303704457591002, 2.3034500194940555, 2.3028945910570062], "accuracy": [0.18636904656887054, 0.1072513535618782, 0.11174217611551285, 0.09866596013307571, 0.09919429570436478, 0.0956280529499054, 0.09417514503002167], "val_loss": [1.987339700971331, 1.9206722123282296, 1.9767819132123674, 1.9744888033185686, 1.9735183034624373, 1.973743166242327, 1.9734247752598353], "val_accuracy": [0.10100000351667404, 0.2303333282470703, 0.10433333367109299, 0.09799999743700027, 0.10066666454076767, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 8, 7, 1, 2, 8, 4, 2, 9, 6, 2, 2, 6, 5, 6, 1, 2, 8, 9, 5, 5, 5, 0, 5, 8, 4, 5], [1, 0, 1, 0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 3, 0, 0, 2, 3, 1], [40, 28, 79, 92, 41, 36, 82, 10], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 4, 5, 5, 1, 4], [42, 88], [0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0], [3, 2, 5, 2, 2], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.19771428406238556, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.623176994199026, 2.337684471593667, 5.1798530014168085, 2.3581264306840453, 2.3684530402407624, 2.3430813652507663, 2.2971072239158428, 2.3249669798046226, 2.2774099383796953, 2.303154075213427, 2.3318299704601957, 2.3296401855605797, 2.3306503312903595, 2.3350925472324016], "accuracy": [0.17659489810466766, 0.09959053993225098, 0.1142517477273941, 0.10276053100824356, 0.10315678268671036, 0.09774138033390045, 0.13115836679935455, 0.11319508403539658, 0.13155461847782135, 0.1162329912185669, 0.09734513610601425, 0.10157178342342377, 0.10077928751707077, 0.10011887550354004], "val_loss": [2.0250661032540456, 1.9372598784310477, 2.05208158493042, 2.0109474318368092, 2.007336344037737, 1.9483084678649902, 1.943448202950614, 1.9359841346740723, 1.9327660969325475, 1.9996066093444824, 1.9883930342538017, 1.9866869109017509, 2.0046808379037038, 2.0109305381774902], "val_accuracy": [0.10066666454076767, 0.11133333295583725, 0.09833333641290665, 0.10433333367109299, 0.10166666656732559, 0.12466666847467422, 0.13766667246818542, 0.14166666567325592, 0.14433333277702332, 0.10333333164453506, 0.09833333641290665, 0.10433333367109299, 0.10166666656732559, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 6, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [73, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.18314285576343536, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.8310020814844488, 2.2981225604063735, 2.317552138848658, 2.3042320611533267, 2.270970465909882, 2.313467681305583, 2.3038416604450305, 2.302769341630675, 2.3026972113347184, 2.3032559115322053], "accuracy": [0.18636904656887054, 0.12389380484819412, 0.10791176557540894, 0.09906221181154251, 0.1336679458618164, 0.10447761416435242, 0.10091137140989304, 0.09721305221319199, 0.10196803510189056, 0.09747721254825592], "val_loss": [1.9873149054391044, 1.9328046526227678, 1.975445134299142, 1.9719157900129045, 1.8424450329371862, 1.9749394825526647, 1.9738260677882604, 1.973762035369873, 1.973680087498256, 1.9737377166748047], "val_accuracy": [0.10100000351667404, 0.15133333206176758, 0.10433333367109299, 0.0976666659116745, 0.1836666613817215, 0.09833333641290665, 0.0989999994635582, 0.09833333641290665, 0.10166666656732559, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 8, 7, 1, 1, 8, 5, 5, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 8, 2, 5, 5, 0, 5, 8, 4, 5], [1, 2, 1, 2, 0, 3, 0, 0, 1, 1, 2, 1, 2, 3, 0, 0, 2, 3, 1], [40, 63, 79, 92, 41, 36, 91, 33], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.14657142758369446, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(alpha)))), tf.math.add(alpha, grad))))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.6231449761993426, 2.3371193826222196, 6.330442324416544, 2.385349867602444, 2.378168341600506, 2.435335726612642, 2.350513679381957], "accuracy": [0.17672698199748993, 0.1002509593963623, 0.11345925182104111, 0.10091137140989304, 0.1010434553027153, 0.10711926966905594, 0.1006472036242485], "val_loss": [2.0251736640930176, 1.9262375831604004, 2.083035809653146, 2.005826336996896, 2.202646255493164, 2.0480713844299316, 2.0531411170959473], "val_accuracy": [0.10066666454076767, 0.12133333086967468, 0.09833333641290665, 0.10433333367109299, 0.10700000077486038, 0.10233332961797714, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 5, 4, 4, 2, 4, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 1, 2, 2, 3, 2, 0, 2, 3, 0], [40, 28, 79, 92, 41, 36, 82, 10], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.14628571271896362, "mapping_values": [1, 32, 32, 19, 13, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, alpha))))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.6231444166352516, 2.3372380529743033, 7.3521074836500695, 2.390681889929146, 2.394697623718306, 2.365098554822574, 2.356804230115228], "accuracy": [0.17672698199748993, 0.1002509593963623, 0.11266675591468811, 0.1014397069811821, 0.10038304328918457, 0.10540219396352768, 0.10328886657953262], "val_loss": [2.0251826558794295, 1.926469189780099, 2.085531234741211, 2.0065720421927318, 1.9968738555908203, 2.0569355147225514, 2.050368172781808], "val_accuracy": [0.10066666454076767, 0.11633333563804626, 0.09833333641290665, 0.10433333367109299, 0.10166666656732559, 0.1003333330154419, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 2, 3, 1, 9, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 9, 2, 3, 9, 5, 5, 6, 3, 9, 8, 4, 5, 1, 0, 0], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0], [0, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.14428570866584778, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.623141410722079, 2.3371451066044484, 5.649350453046618, 2.379822083845933, 2.3759039207267536, 2.385009159076294, 2.350234025095621], "accuracy": [0.17712323367595673, 0.09985470771789551, 0.1138555034995079, 0.10091137140989304, 0.09932637959718704, 0.10210011899471283, 0.09893012791872025], "val_loss": [2.0252246175493513, 1.922163827078683, 2.0786655970982144, 2.0106423241751537, 2.0380212920052663, 2.047837597983224, 2.054884569985526], "val_accuracy": [0.10066666454076767, 0.12333333492279053, 0.09833333641290665, 0.10433333367109299, 0.10466666519641876, 0.10066666454076767, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 8, 6, 1, 1, 8, 4, 2, 6, 4, 3, 5, 7, 0, 6, 1, 2, 3, 9, 5, 6, 5, 1, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 40, 24, 16, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.divide_no_nan(alpha, tf.math.subtract(grad, tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 8, 6, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 1, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020412613923256, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [3, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020412613923256, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 8, 3, 1, 1, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 1, 5, 8], [2, 2, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1], [1, 0, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 45, 28, 17, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))))), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5, 1, 0, 9], [2, 0, 1, 2, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0], [40, 28, 79, 92, 41, 36, 82, 10], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 5, 0, 4, 6, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 2, 5, 2, 2], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [71, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 20, 15, 3, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.square(grad))))), grad)))))))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.square(grad), tf.math.negative(beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [8, 1, 4, 2, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 2, 1, 2, 3, 9, 5, 8, 5, 0, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0], [4, 4, 8, 9], [2, 0, 1, 5, 3, 4], [60, 35], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020412613923256, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 8, 7, 1, 1, 8, 5, 2, 6, 4, 3, 6, 7, 0, 6, 1, 2, 3, 9, 4, 8, 5, 0, 5, 8, 4, 5], [3, 1, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [77, 99, 79, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 5, 7], [2, 7, 7, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.09628571569919586, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302248504955094, 2.2978532530643907, 2.29750301585678, 2.298955913327547, 2.3003574731469296, 2.3006147934917793, 2.300616465004097], "accuracy": [0.09747721254825592, 0.1072513535618782, 0.10989301651716232, 0.10434553027153015, 0.09576013684272766, 0.08519349992275238, 0.08611807972192764], "val_loss": [1.9676459857395716, 1.966766016823905, 1.9694035393851144, 1.97073119027274, 1.9714338438851493, 1.9719626562935966, 1.97237913949149], "val_accuracy": [0.07999999821186066, 0.12333333492279053, 0.1066666692495346, 0.09533333033323288, 0.08666666597127914, 0.08033332973718643, 0.08399999886751175]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 3, 1, 2, 2, 5, 9, 4, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 2, 5, 8, 3, 9, 8], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [45, 28, 27, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06885714083909988, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.8343438386696675, 2.2998514359637556, 2.5760132651429184, 2.3076480714762453, 2.3039433351203575, 2.3032767208985145, 2.302951131782134, 2.3028646018668533], "accuracy": [0.186104878783226, 0.11900673806667328, 0.10434553027153015, 0.10011887550354004, 0.09721305221319199, 0.09602430462837219, 0.0952318087220192, 0.09311848133802414], "val_loss": [1.987400804247175, 3.418163095201765, 1.9800793102809362, 1.975041730063302, 1.9738949366978236, 1.973806653703962, 1.9736697333199638, 1.9737230028424944], "val_accuracy": [0.10100000351667404, 0.10000000149011612, 0.10433333367109299, 0.09799999743700027, 0.10066666454076767, 0.09833333641290665, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [3, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3035144280637843, 2.303693937823883, 2.3030227855873333, 2.302480235280551, 2.303518685524915, 2.303641096003508], "accuracy": [0.0952318087220192, 0.09074098616838455, 0.09126931428909302, 0.08928807079792023, 0.09259014576673508, 0.09655263274908066], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 2, 5, 1, 2, 3, 9, 5, 2, 6, 3, 5, 0, 4, 5, 1, 0, 1, 9, 2, 4, 0, 1, 0], [2, 0, 1, 2, 0, 2, 2, 1, 1, 1, 2, 2, 2, 3, 2, 0, 2, 3, 0, 3, 1, 1, 3, 1], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 2, 2], [42, 88], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 60, 60, 36, 24, 6, 17, 17, 9, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(tf.math.add(alpha, grad), alpha)))), tf.math.add(alpha, alpha)))), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), grad))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3035144280637843, 2.303693937823883, 2.3030227855873333, 2.302480235280551, 2.303518685524915, 2.303641096003508], "accuracy": [0.0952318087220192, 0.09074098616838455, 0.09126931428909302, 0.08928807079792023, 0.09259014576673508, 0.09655263274908066], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 1, 1, 2, 0, 2, 1, 2, 1, 1, 0, 0, 2, 3, 2, 0, 2], [73, 36, 69, 92, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 1, 5, 0, 2, 2], [42], [0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1], [3, 4, 5], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 35, 35, 20, 15, 4, 1, 1, 0, 1, 0, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))))), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3035144280637843, 2.303693937823883, 2.3030227855873333, 2.302480235280551, 2.303518685524915, 2.303641096003508], "accuracy": [0.0952318087220192, 0.09074098616838455, 0.09126931428909302, 0.08928807079792023, 0.09259014576673508, 0.09655263274908066], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 8, 7, 1, 2, 8, 4, 2, 9, 6, 2, 2, 6, 5, 6, 1, 2, 8, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36, 82, 10], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0], [3, 2, 5, 2, 2], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.square(sigma)))), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3035144280637843, 2.303693937823883, 2.3030227855873333, 2.302480235280551, 2.303518685524915, 2.303641096003508], "accuracy": [0.0952318087220192, 0.09074098616838455, 0.09126931428909302, 0.08928807079792023, 0.09259014576673508, 0.09655263274908066], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]