[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.771142840385437, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293723111832225, 2.272528622175929, 2.2492731458963484, 2.2218600635783012, 2.1854966593424816, 2.1390521335815946, 2.08530503723206, 2.0154722263595417, 1.9267972088792242, 1.8297463760179473, 1.7276134345163334, 1.6206176811756632, 1.5251752754889616, 1.4425168449947028, 1.3548955982229918, 1.309440175146396, 1.250584009206684, 1.2147492552162586, 1.169963841818705, 1.1492270570405327, 1.1088349199124992, 1.0814851323107466, 1.0580103383355877, 1.0228483013788061, 1.0134033659555972, 0.9983579631589266, 0.9799885787055036, 0.9529924546612598, 0.954806763199043, 0.9347014103929648, 0.9213514532458434, 0.9115639263533991, 0.8984496166142081, 0.8971406779646983, 0.8838431381310108, 0.8726359873777839, 0.868423880571545, 0.8623510098665177, 0.8478697727794393, 0.8541944609767237, 0.8374121391132382, 0.8302561716869004, 0.8242305013497649, 0.8258590610067307, 0.8071308394212764, 0.8098641524713557, 0.8068807412132281, 0.7980007193170723, 0.7904106035617994, 0.7869570242683129, 0.779799309940134, 0.7794116577767047, 0.7758112743057989, 0.7714310496112595, 0.7629989421819542, 0.770606478979055, 0.7604055442531048, 0.7668041444300283, 0.7528358317558335, 0.7533665909081906, 0.7548783481506829, 0.7308175362269671, 0.7360255534481048, 0.7411077246847343, 0.7327272534496386, 0.731251819998817, 0.7404547594777975, 0.7169463378626357, 0.7256859012834778, 0.7229889808014761, 0.7195564922230229, 0.716576316250849, 0.7019237089292516, 0.7074437026397474, 0.703914592216012], "accuracy": [0.11662924289703369, 0.1698586642742157, 0.22361643612384796, 0.2805441915988922, 0.3175274133682251, 0.3590014576911926, 0.37868180871009827, 0.40562674403190613, 0.43349623680114746, 0.4492141008377075, 0.4721965491771698, 0.48566898703575134, 0.5086514353752136, 0.520671010017395, 0.553031325340271, 0.5575221180915833, 0.574560821056366, 0.5806366205215454, 0.5905428528785706, 0.6040153503417969, 0.6045436263084412, 0.6211860775947571, 0.6254127621650696, 0.6369040012359619, 0.6373002529144287, 0.6444327235221863, 0.6519614458084106, 0.6630563735961914, 0.6623960137367249, 0.661471426486969, 0.6699247360229492, 0.6757363677024841, 0.6775855422019958, 0.6781138777732849, 0.6841896772384644, 0.6852463483810425, 0.6863030195236206, 0.6856426000595093, 0.6948884129524231, 0.6927750706672668, 0.698718786239624, 0.703209638595581, 0.702681303024292, 0.7013604640960693, 0.705058753490448, 0.7088891863822937, 0.7038700580596924, 0.7041342258453369, 0.7131158113479614, 0.7116629481315613, 0.720380425453186, 0.7187954187393188, 0.7199841737747192, 0.7213049530982971, 0.7224937081336975, 0.7218332886695862, 0.7256637215614319, 0.7218332886695862, 0.7275128960609436, 0.726192057132721, 0.7235503792762756, 0.7339849472045898, 0.7331924438476562, 0.7302865982055664, 0.7305507659912109, 0.7325320243835449, 0.7289658188819885, 0.7347774505615234, 0.7326641082763672, 0.7378153204917908, 0.7395324110984802, 0.733060359954834, 0.7449478507041931, 0.7430986762046814, 0.7407211661338806], "val_loss": [1.9508555957249232, 1.9300553458077567, 1.9062396458217077, 1.8772401809692383, 1.8395950453622, 1.7901503699166434, 1.7281082698277064, 1.6506224359784807, 1.557783944266183, 1.455350433077131, 1.3488578796386719, 1.2441428729466029, 1.1509119442531042, 1.0693456445421492, 1.0004136221749442, 0.9464153221675328, 0.8987886224474225, 0.8605234112058368, 0.827997088432312, 0.8008318798882621, 0.7756131717136928, 0.7543163299560547, 0.7374856131417411, 0.7210887159620013, 0.7066151755196708, 0.6946863446916852, 0.6828983170645577, 0.6729695115770612, 0.6639258520943778, 0.6558703865323748, 0.6469342708587646, 0.640326738357544, 0.6328744377408709, 0.627418075289045, 0.6224221672330584, 0.6166664702551705, 0.6109778029578072, 0.6061357770647321, 0.6014257839747837, 0.596632582800729, 0.5927671364375523, 0.5898035424096244, 0.584118093763079, 0.580145171710423, 0.5775474820818219, 0.5734136274882725, 0.571036798613412, 0.5666618687765939, 0.5636134828839984, 0.5602543694632394, 0.5595981223242623, 0.555711201259068, 0.5548865624836513, 0.5513944114957537, 0.5478798832212176, 0.5464533056531634, 0.544844559260777, 0.5428324086325509, 0.5391869034085955, 0.5376254149845668, 0.5383301292146955, 0.5353309086390904, 0.5321342434201922, 0.5314253568649292, 0.5277552945273263, 0.5275337525776455, 0.5265671355383736, 0.5233834981918335, 0.5210469109671456, 0.5200166021074567, 0.5176449503217425, 0.5176118271691459, 0.5138417312077114, 0.5122224603380475, 0.5126187290464129], "val_accuracy": [0.21533332765102386, 0.3463333249092102, 0.39266666769981384, 0.43166667222976685, 0.45766666531562805, 0.48899999260902405, 0.5270000100135803, 0.5506666898727417, 0.5663333535194397, 0.581333339214325, 0.5960000157356262, 0.606333315372467, 0.6346666812896729, 0.6573333144187927, 0.6729999780654907, 0.6840000152587891, 0.6836666464805603, 0.6966666579246521, 0.6980000138282776, 0.7013333439826965, 0.7043333053588867, 0.7083333134651184, 0.7086666822433472, 0.7173333168029785, 0.7263333201408386, 0.7213333249092102, 0.7250000238418579, 0.7266666889190674, 0.7279999852180481, 0.7306666374206543, 0.7300000190734863, 0.7319999933242798, 0.7366666793823242, 0.737333357334137, 0.7353333234786987, 0.7379999756813049, 0.7446666955947876, 0.7476666569709778, 0.7453333139419556, 0.7436666488647461, 0.7483333349227905, 0.746999979019165, 0.7513333559036255, 0.7526666522026062, 0.7473333477973938, 0.7519999742507935, 0.7526666522026062, 0.7526666522026062, 0.7573333382606506, 0.7596666812896729, 0.7536666393280029, 0.7616666555404663, 0.7616666555404663, 0.765999972820282, 0.7689999938011169, 0.7689999938011169, 0.7710000276565552, 0.7703333497047424, 0.7730000019073486, 0.7713333368301392, 0.7689999938011169, 0.7723333239555359, 0.7703333497047424, 0.7739999890327454, 0.7730000019073486, 0.7710000276565552, 0.7743333578109741, 0.7703333497047424, 0.7749999761581421, 0.7773333191871643, 0.7753333449363708, 0.7746666669845581, 0.7760000228881836, 0.7760000228881836, 0.7736666798591614]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 2, 4, 3, 2, 7, 2, 0, 6, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7708571553230286, "mapping_values": [1, 37, 37, 22, 15, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293723111832225, 2.272528739102119, 2.2492747652595226, 2.221864076165192, 2.185504841876934, 2.139066262881927, 2.085331451844042, 2.015504699861211, 1.926840013154604, 1.829801329784169, 1.7276773923392215, 1.6206683537680098, 1.5252081605626324, 1.442550855557743, 1.354915562354342, 1.3094557459013352, 1.2505973465076416, 1.2147587978954817, 1.1699849414535721, 1.1492582889454097, 1.1088490671469724, 1.08153865452629, 1.0580421797493271, 1.0228452037637574, 1.0133938647343135, 0.9983646732358539, 0.9800211803756605, 0.9529707394633798, 0.9548547037950581, 0.9346930411718211, 0.9213581448454096, 0.911561730759507, 0.8984337440098848, 0.8971453908884515, 0.8838584937707323, 0.8726798610648837, 0.868429513041212, 0.8623874115512482, 0.8478886491712908, 0.8542456173027637, 0.8374092428360822, 0.8303316521953205, 0.8242976020954194, 0.8258927265068229, 0.8071228940615076, 0.8099084397143912, 0.8068845963213563, 0.7979996022043164, 0.7904487851667146, 0.7870131324562871, 0.7798220333705379, 0.7795165308619912, 0.7758246969710629, 0.7714345338337961, 0.7630460957541773, 0.7706925655321407, 0.7603471842046428, 0.7667730462203141, 0.7528399892408204, 0.7533309439768203, 0.7548922632962737, 0.7307413898879794, 0.7360899679538927, 0.7411672925086242, 0.7327004451604331, 0.7313693878027457, 0.7405065683766819, 0.7169500807367375, 0.725628007530552, 0.7230709066653627, 0.719639054992967, 0.7165698969778274, 0.7019572422142593, 0.7074773995049043, 0.7038965259387493], "accuracy": [0.11662924289703369, 0.1698586642742157, 0.22361643612384796, 0.2805441915988922, 0.3175274133682251, 0.3587372899055481, 0.37881389260292053, 0.4057588279247284, 0.4333641529083252, 0.44947826862335205, 0.4721965491771698, 0.4854048490524292, 0.5085193514823914, 0.5205389261245728, 0.5528992414474487, 0.557390034198761, 0.5746929049491882, 0.5805045366287231, 0.5908070206642151, 0.6036190986633301, 0.6045436263084412, 0.6213181614875793, 0.6250165104866028, 0.6367719173431396, 0.6371681690216064, 0.644300639629364, 0.6516972780227661, 0.6625280380249023, 0.6626601219177246, 0.661471426486969, 0.6704530715942383, 0.6756042838096619, 0.6777176260948181, 0.6782459616661072, 0.6843217611312866, 0.6851142644882202, 0.6866992712020874, 0.685510516166687, 0.6950204968452454, 0.6926429867744446, 0.6985867023468018, 0.702681303024292, 0.702681303024292, 0.7016246318817139, 0.7047945857048035, 0.7084929347038269, 0.7046625018119812, 0.7040021419525146, 0.7129837274551392, 0.7116629481315613, 0.7201162576675415, 0.7186633348464966, 0.7202483415603638, 0.7215691208839417, 0.722757875919342, 0.7215691208839417, 0.7259278893470764, 0.7213049530982971, 0.7280412316322327, 0.7263241410255432, 0.7239466309547424, 0.7345132827758789, 0.7334566116333008, 0.7296261787414551, 0.7304186820983887, 0.7320036888122559, 0.7290979027748108, 0.7347774505615234, 0.7326641082763672, 0.7375511527061462, 0.7387399077415466, 0.7342491149902344, 0.7448157668113708, 0.7432307600975037, 0.7403249144554138], "val_loss": [1.9508555957249232, 1.930056027003697, 1.9062425749642509, 1.8772456986563546, 1.839601789202009, 1.7901692390441895, 1.7281336103166853, 1.650658709662301, 1.557845217841012, 1.4554195404052734, 1.3489280768803187, 1.2441844599587577, 1.1509318011147636, 1.0693786484854562, 1.000441653387887, 0.9464219638279506, 0.898794276373727, 0.860527617590768, 0.8280131987162999, 0.800850680896214, 0.7756546054567609, 0.7543746743883405, 0.7374795164380755, 0.7210894312177386, 0.7066540718078613, 0.6947059290749686, 0.6828633035932269, 0.6729626996176583, 0.6639290196555001, 0.6558482136045184, 0.6469649757657733, 0.6403090783527919, 0.6328437158039638, 0.6274538210460118, 0.6224239724023002, 0.6166813032967704, 0.6109682491847447, 0.6061550889696393, 0.6014009032930646, 0.5966558797018868, 0.59280036176954, 0.589843579701015, 0.5841986451830182, 0.5802431106567383, 0.5776635748999459, 0.5735165051051548, 0.5711575065340314, 0.5667831216539655, 0.5637332882199969, 0.5604121514729091, 0.5597669397081647, 0.5558264766420636, 0.5549497434071132, 0.5514470509120396, 0.5479462146759033, 0.5465482984270368, 0.5449637174606323, 0.5428564889090401, 0.5392310278756278, 0.5376510279519218, 0.5383226360593524, 0.5353918416159493, 0.5321224246706281, 0.531502400125776, 0.527849623135158, 0.5276225634983608, 0.5266582454953875, 0.5234181029456002, 0.5210137367248535, 0.5199815545763288, 0.5176254510879517, 0.5176546233040946, 0.5139130694525582, 0.5122633150645665, 0.5126541342054095], "val_accuracy": [0.21533332765102386, 0.3463333249092102, 0.39266666769981384, 0.43166667222976685, 0.45766666531562805, 0.48899999260902405, 0.5276666879653931, 0.5503333210945129, 0.5663333535194397, 0.581333339214325, 0.5960000157356262, 0.6060000061988831, 0.6346666812896729, 0.6573333144187927, 0.6726666688919067, 0.6840000152587891, 0.6836666464805603, 0.6966666579246521, 0.6980000138282776, 0.7020000219345093, 0.7039999961853027, 0.7083333134651184, 0.7089999914169312, 0.7173333168029785, 0.7263333201408386, 0.7213333249092102, 0.7250000238418579, 0.7260000109672546, 0.7279999852180481, 0.7306666374206543, 0.7296666502952576, 0.7319999933242798, 0.7366666793823242, 0.737333357334137, 0.7353333234786987, 0.7383333444595337, 0.7443333268165588, 0.7476666569709778, 0.7450000047683716, 0.7433333396911621, 0.7476666569709778, 0.7459999918937683, 0.7519999742507935, 0.7526666522026062, 0.7476666569709778, 0.7536666393280029, 0.7526666522026062, 0.7526666522026062, 0.7580000162124634, 0.7596666812896729, 0.7540000081062317, 0.7613333463668823, 0.7613333463668823, 0.7649999856948853, 0.7676666378974915, 0.7703333497047424, 0.7710000276565552, 0.7703333497047424, 0.7720000147819519, 0.7699999809265137, 0.768666684627533, 0.7720000147819519, 0.7699999809265137, 0.7739999890327454, 0.7730000019073486, 0.7710000276565552, 0.7746666669845581, 0.7689999938011169, 0.7746666669845581, 0.7773333191871643, 0.7753333449363708, 0.7743333578109741, 0.7760000228881836, 0.7756666541099548, 0.7739999890327454]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 8, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [76, 28, 79, 99, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.765999972820282, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.293723111832225, 2.272528622175929, 2.249273361767351, 2.2218604640182233, 2.1854963714514963, 2.1390522955084648, 2.0853041960122076, 2.015471383140009, 1.9267940261439247, 1.8297423205717664, 1.7276143478034054, 1.6206209829785427, 1.5251845130201156, 1.4425292762987618, 1.3549024090397201, 1.3094504957485036, 1.2505957737669355, 1.2147585383149313, 1.1699716744720818, 1.1492415747827054, 1.1088956658551408, 1.081542292495902, 1.0580329438714524, 1.0228547724466974, 1.0134092352850372, 0.9983923278543313, 0.9800283381841627, 0.9530008672927869, 0.9548644612509702, 0.934734157614657, 0.921377604829007, 0.9115973377523798, 0.8984891965625119, 0.8971321259774961, 0.8838553709864789, 0.8727000852412772, 0.8684091900380974, 0.8623908904439281, 0.8478730786446614, 0.8542484462442274, 0.8373943862346941, 0.830317080296451, 0.8242789792850773, 0.825894979626952, 0.8071347390341013, 0.80985334837961, 0.8068737651000893, 0.7979369082187602, 0.7904338606234319, 0.7869203599247839, 0.7798157546341049, 0.7794167432786924, 0.7758082009545879, 0.7714410344796363, 0.7629855461423549, 0.7706902588221533, 0.760375452961164, 0.7667703921091696, 0.7528424448797558, 0.7533438227054167, 0.7549197208438929, 0.7307754970654962, 0.7360201797795853, 0.7412025209478399, 0.7327018056673507, 0.7312963580442788, 0.7404979543049165, 0.7169444537701277, 0.7257241528850773], "accuracy": [0.11662924289703369, 0.1698586642742157, 0.22361643612384796, 0.2805441915988922, 0.31739532947540283, 0.3590014576911926, 0.37881389260292053, 0.40562674403190613, 0.43349623680114746, 0.4492141008377075, 0.4721965491771698, 0.4855369031429291, 0.5086514353752136, 0.520671010017395, 0.553031325340271, 0.5575221180915833, 0.5746929049491882, 0.5806366205215454, 0.590278685092926, 0.6033549308776855, 0.6046757102012634, 0.6217144131660461, 0.625148594379425, 0.6370360851287842, 0.637432336807251, 0.6441685557365417, 0.6515651941299438, 0.6627922058105469, 0.6626601219177246, 0.6617355942726135, 0.670320987701416, 0.6761326193809509, 0.6777176260948181, 0.6789063811302185, 0.6841896772384644, 0.6853784322738647, 0.6866992712020874, 0.6859067678451538, 0.6952846646308899, 0.6927750706672668, 0.6983225345611572, 0.7030775547027588, 0.7028133869171143, 0.7016246318817139, 0.7053229212760925, 0.7086250185966492, 0.7042662501335144, 0.7038700580596924, 0.7129837274551392, 0.7119271159172058, 0.720380425453186, 0.7186633348464966, 0.720380425453186, 0.7215691208839417, 0.7228899598121643, 0.7219653725624084, 0.7259278893470764, 0.7215691208839417, 0.7272487282752991, 0.7259278893470764, 0.7236824631690979, 0.7342491149902344, 0.733588695526123, 0.7289658188819885, 0.7308149337768555, 0.7322678565979004, 0.7288337349891663, 0.7343811988830566, 0.7327961921691895], "val_loss": [1.9508555957249232, 1.9300553458077567, 1.9062401226588659, 1.8772411346435547, 1.839594909123012, 1.790149416242327, 1.7281086785452706, 1.6506224019186837, 1.5577845914023263, 1.455353021621704, 1.3488658836909704, 1.244162150791713, 1.150919028690883, 1.0693700313568115, 1.000441006251744, 0.946422951562064, 0.8987930502210345, 0.8605294227600098, 0.8280039344515119, 0.8008803810392108, 0.7757015909467425, 0.7543901545660836, 0.737499611718314, 0.7211343731198993, 0.7066716296332223, 0.6947379963738578, 0.6829016889844622, 0.6730117457253593, 0.6640089069093976, 0.6559046336582729, 0.64695862361363, 0.6403271981648037, 0.6328717810767037, 0.6274370465959821, 0.6224664619990757, 0.6166977201189313, 0.610967585018703, 0.6061688491276332, 0.6014559439250401, 0.5966474499021258, 0.5927779163633075, 0.5898510047367641, 0.5841561044965472, 0.580201370375497, 0.577613353729248, 0.573444298335484, 0.5710891314915248, 0.5666628735406058, 0.5636206865310669, 0.5602926526750837, 0.5596730879374913, 0.5557694605418614, 0.5549444130488804, 0.5514342444283622, 0.5478995357240949, 0.5465457439422607, 0.544900928224836, 0.5429010561534336, 0.5392313855034965, 0.5376406056540353, 0.5382813385554722, 0.5353515829358783, 0.5320649147033691, 0.5315031494413104, 0.5278227840151105, 0.5275424207959857, 0.5266607829502651, 0.5234031506947109, 0.5210329294204712], "val_accuracy": [0.21533332765102386, 0.3463333249092102, 0.39266666769981384, 0.43166667222976685, 0.45766666531562805, 0.48899999260902405, 0.5266666412353516, 0.5506666898727417, 0.5659999847412109, 0.581333339214325, 0.5960000157356262, 0.606333315372467, 0.6346666812896729, 0.6573333144187927, 0.6726666688919067, 0.6840000152587891, 0.6836666464805603, 0.6966666579246521, 0.6980000138282776, 0.7020000219345093, 0.7039999961853027, 0.7083333134651184, 0.7086666822433472, 0.7173333168029785, 0.7263333201408386, 0.7213333249092102, 0.7250000238418579, 0.7260000109672546, 0.7279999852180481, 0.7310000061988831, 0.7293333411216736, 0.7319999933242798, 0.7363333106040955, 0.737333357334137, 0.7356666922569275, 0.7383333444595337, 0.7443333268165588, 0.7480000257492065, 0.7443333268165588, 0.7436666488647461, 0.7483333349227905, 0.746666669845581, 0.7513333559036255, 0.753000020980835, 0.7476666569709778, 0.7540000081062317, 0.753333330154419, 0.753000020980835, 0.7583333253860474, 0.7599999904632568, 0.7536666393280029, 0.7620000243186951, 0.7616666555404663, 0.765666663646698, 0.7683333158493042, 0.7703333497047424, 0.7710000276565552, 0.7703333497047424, 0.7720000147819519, 0.7706666588783264, 0.768666684627533, 0.7723333239555359, 0.7693333625793457, 0.7739999890327454, 0.7730000019073486, 0.7710000276565552, 0.7739999890327454, 0.7693333625793457, 0.7739999890327454]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 7, 1, 1, 8, 4, 3, 2, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 3, 2, 0, 2, 3, 1], [75, 28, 5, 39, 41, 79, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.1997142881155014, "mapping_values": [1, 37, 37, 22, 15, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8841593562178938, 2.3017535930800324, 2.365200183395035, 2.306094258893766, 2.3030052874082303, 2.2922115435201604, 2.260237223436615], "accuracy": [0.16272619366645813, 0.10659094154834747, 0.18702945113182068, 0.09879804402589798, 0.1014397069811821, 0.12917712330818176, 0.12059172987937927], "val_loss": [1.975024904523577, 1.9637619427272253, 1.984959329877581, 1.9744433675493513, 1.9726856095450265, 1.8568063463483537, 1.974203314099993], "val_accuracy": [0.10066666454076767, 0.18833333253860474, 0.0989999994635582, 0.10400000214576721, 0.10100000351667404, 0.1860000044107437, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [3, 0, 2, 1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 3, 2, 0, 2, 3, 1], [7, 28, 5, 39, 41, 79, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.19142857193946838, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.884156833503067, 2.301727311391683, 2.687943826750238, 2.3178663270474424, 2.3041640812490027, 2.303437931221773, 2.3029857963823512], "accuracy": [0.16272619366645813, 0.10500594228506088, 0.20552106201648712, 0.10302469879388809, 0.09879804402589798, 0.09509972482919693, 0.1002509593963623], "val_loss": [1.975038732801165, 1.9642278807503837, 2.0002662113734653, 1.9745806966509138, 1.9737976619175501, 1.9737535204206194, 1.9736429623195104], "val_accuracy": [0.10066666454076767, 0.18766666948795319, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 3, 2, 0, 1, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [75, 28, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.18114285171031952, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.884164266802962, 2.301585253786181, 2.5037923277077847, 2.3065856264535354, 2.3034664331851085, 2.3016972264058206, 2.282945977918791], "accuracy": [0.1624620258808136, 0.10659094154834747, 0.1896711140871048, 0.09959053993225098, 0.10011887550354004, 0.10751552134752274, 0.15572579205036163], "val_loss": [1.975067411150251, 1.963406699044364, 1.979823180607387, 1.9749068532671248, 1.9733070646013533, 1.9689136913844518, 1.9345636367797852], "val_accuracy": [0.10066666454076767, 0.18766666948795319, 0.10066666454076767, 0.09933333098888397, 0.10400000214576721, 0.1433333307504654, 0.17399999499320984]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 8, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.17885714769363403, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.884164815282211, 2.301610508111206, 2.7944909562650153, 2.3200279415212743, 2.3047192546717006, 2.3031604630741476, 2.3029178537319144], "accuracy": [0.1624620258808136, 0.10659094154834747, 0.19033153355121613, 0.10249637067317963, 0.1018359512090683, 0.09760929644107819, 0.10011887550354004], "val_loss": [1.9750608716692244, 1.9632668495178223, 1.997257913861956, 1.97609772000994, 1.9739470481872559, 1.9737489564078194, 1.9737210273742676], "val_accuracy": [0.10066666454076767, 0.1863333284854889, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10300000011920929]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 5, 39, 41, 79, 33, 47, 99, 9], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.17257143557071686, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8843288852743045, 2.3020217363561355, 2.2070861938465476, 2.861721774259846, 2.3096296749787637, 2.304360385552657, 2.3030550802986873], "accuracy": [0.1612732857465744, 0.10249637067317963, 0.21503104269504547, 0.17263241112232208, 0.09998679161071777, 0.09906221181154251, 0.09919429570436478], "val_loss": [1.975036348615374, 1.965811116354806, 1.9740705490112305, 1.9829739843096053, 1.9754840305873327, 1.9737910543169295, 1.9735595839364188], "val_accuracy": [0.10066666454076767, 0.18966667354106903, 0.10100000351667404, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 2, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 0, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 86, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [74], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10114285349845886, "mapping_values": [1, 37, 37, 22, 15, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [219680.5527424775, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15149913728237152, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.552895275005341e+20, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11800000071525574, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 9, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 6, 0, 6, 1, 1, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 1, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [75, 28, 74, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [50225203473.42508, 7249314268419.28, 126468649360465.56, 880960392933622.1, 3878253339357811.0, 1.2990586922051138e+16], "accuracy": [0.09470347315073013, 0.10038304328918457, 0.10077928751707077, 0.10527011007070541, 0.09959053993225098, 0.10091137140989304], "val_loss": [410332205641.1429, 22120800639853.715, 237441936598162.28, 1294364246839881.2, 4848724485490981.0, 1.430169348734976e+16], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 6, 5, 2, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 1, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [1, 28, 67, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 5, 4, 5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [14], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 4, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 1, 2, 3, 0, 0, 0], [16, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 3, 17, 17, 9, 8, 0, 3, 3, 1, 2, 1, 5, 3, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, beta)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 5, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [36, 28, 79, 99, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [4, 4], [4, 0, 1, 5, 3, 4], [33], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 3, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 1, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [27, 28, 79, 92, 41, 36], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 2, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 1, 1, 1, 0, 4, 3], [42, 68], [0, 1, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 7, 1, 5, 3, 4], [49], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [70, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 24, 24, 14, 10, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, alpha), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 0, 5, 0, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 1, 0, 2, 2, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [9, 28, 55, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 4, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 3, 0, 4, 0], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [6, 4], [2, 0, 1, 5, 3, 4], [14], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [4, 4, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 3, 2, 3, 0, 0, 0], [14, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 10, 5, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(beta, tf.math.square(sigma)), tf.math.subtract(beta, tf.math.subtract(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 9, 0, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [51, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [23], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06285714358091354, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021973242864884, 2.301700270801031, 2.300803234454049, 2.3006158117227047, 2.298913554744698, 2.2990456454710735, 2.3001798703260805, 2.2998516096997617, 2.2996240157524293, 2.2992069241928466, 2.300091393698381, 2.2995177994409275, 2.2999601304932606, 2.3003555380547005], "accuracy": [0.0944393053650856, 0.09126931428909302, 0.09509972482919693, 0.09694888442754745, 0.09285431355237961, 0.10196803510189056, 0.09430722147226334, 0.09615638852119446, 0.09932637959718704, 0.09959053993225098, 0.10394927859306335, 0.09945846349000931, 0.09774138033390045, 0.10051512718200684], "val_loss": [1.9702452250889368, 1.9698076248168945, 1.9694840567452567, 1.9692986352103097, 1.9694826262337821, 1.9695422308785575, 1.9694932528904505, 1.9693898473467146, 1.9694310597011022, 1.969482421875, 1.9695890290396554, 1.9698200907026018, 1.9699159349714006, 1.970144203730992], "val_accuracy": [0.04699999839067459, 0.05533333495259285, 0.059333331882953644, 0.06300000101327896, 0.06566666811704636, 0.06966666877269745, 0.07466666400432587, 0.07733333110809326, 0.07866666465997696, 0.07733333110809326, 0.07633333653211594, 0.07666666805744171, 0.07599999755620956, 0.07699999958276749]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 5, 4, 8, 1, 8, 4, 1, 6, 4, 3, 2, 1, 0, 4, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 3, 3, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [50, 28, 79, 99, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 6, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06257142871618271, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021972927954595, 2.301700972547117, 2.3008035178733084, 2.300614142887124, 2.2989112336354376, 2.2990464193316154, 2.300180301973612, 2.2998462207344748, 2.299617357824646, 2.299191742084439, 2.3000652344471524, 2.2995031385090465, 2.299949069143428, 2.3003529605454838], "accuracy": [0.0944393053650856, 0.09126931428909302, 0.09509972482919693, 0.09681680053472519, 0.09272222965955734, 0.1018359512090683, 0.09430722147226334, 0.09615638852119446, 0.09945846349000931, 0.09959053993225098, 0.10408136248588562, 0.09959053993225098, 0.09747721254825592, 0.10091137140989304], "val_loss": [1.970245633806501, 1.9698081016540527, 1.9694826262337821, 1.9692957060677665, 1.9694811276027135, 1.9695423671177454, 1.9694909368242537, 1.9693820135934013, 1.9694172995431083, 1.9694619859967912, 1.9695700917925154, 1.969810622079032, 1.9699104854038783, 1.9701415470668249], "val_accuracy": [0.04699999839067459, 0.05533333495259285, 0.059333331882953644, 0.06300000101327896, 0.06599999964237213, 0.07000000029802322, 0.07466666400432587, 0.07800000160932541, 0.07833333313465118, 0.07733333110809326, 0.07733333110809326, 0.07699999958276749, 0.07633333653211594, 0.07699999958276749]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 4, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025682740569855, 2.302864598119421, 2.302715218597793, 2.3031189233525207, 2.300731955455074, 2.3009568626193198], "accuracy": [0.09285431355237961, 0.08902391046285629, 0.08955223858356476, 0.09192973375320435, 0.08968432247638702, 0.09245806187391281], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 0, 0, 0, 2, 1, 3, 0, 1, 0, 2, 2, 3, 2, 0, 2], [76, 47, 54, 99, 41, 36, 4], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 5, 2, 0, 0], [42, 42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 37, 37, 22, 15, 7, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.square(tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025682740569855, 2.302864598119421, 2.302715218597793, 2.3031189233525207, 2.300731955455074, 2.3009568626193198], "accuracy": [0.09285431355237961, 0.08902391046285629, 0.08955223858356476, 0.09192973375320435, 0.08968432247638702, 0.09245806187391281], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [0, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [4, 28, 79, 99, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1], [3, 4, 5, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 8, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025682740569855, 2.302864598119421, 2.302715218597793, 2.3031189233525207, 2.300731955455074, 2.3009568626193198], "accuracy": [0.09285431355237961, 0.08902391046285629, 0.08955223858356476, 0.09192973375320435, 0.08968432247638702, 0.09245806187391281], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 6, 7, 1, 1, 8, 4, 2, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 5, 5, 5, 0, 5, 8, 4, 5], [2, 0, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [85, 28, 79, 92, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025682740569855, 2.302864598119421, 2.302715218597793, 2.3031189233525207, 2.300731955455074, 2.3009568626193198], "accuracy": [0.09285431355237961, 0.08902391046285629, 0.08955223858356476, 0.09192973375320435, 0.08968432247638702, 0.09245806187391281], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]