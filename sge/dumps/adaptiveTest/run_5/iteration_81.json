[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7754285931587219, "mapping_values": [1, 44, 44, 27, 17, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.292921561732536, 2.272179000240039, 2.248755045129859, 2.221838259158464, 2.186459024206617, 2.146491908945223, 2.0888520656654217, 2.0196722100329296, 1.9302264618725589, 1.8329018614059427, 1.7257798892506016, 1.6229810351157752, 1.5391561786622387, 1.4478523605110118, 1.3803353397176408, 1.310045820784024, 1.255441381962481, 1.2170778612623818, 1.1760713996321628, 1.1411055622005097, 1.1200595899516912, 1.0763086195965768, 1.0597906969069426, 1.0342784045851383, 1.0186498279600504, 0.9984855472986425, 0.9767030551212811, 0.9633638113796152, 0.9448070432358509, 0.9278693007613532, 0.9204164038732965, 0.9143960824684775, 0.9004570700237071, 0.9121817654039819, 0.8893597854315849, 0.8699529927483229, 0.8747449095663913, 0.8654735778159375, 0.8597656182719416, 0.8382383262980426, 0.8362841114014083, 0.8371260574528129, 0.8286745250815524, 0.8252960241245572, 0.8117844391539899, 0.8045886387961684, 0.801278906648878, 0.8028480936948413, 0.7989716012527316, 0.7850662782254897, 0.7846497626919331, 0.7758905082850519, 0.7735360637002098, 0.7788083980804925, 0.7668469850539279, 0.7648976344426767, 0.7638948935921387, 0.763916361372878, 0.7521104955433886, 0.7493451081246842, 0.7507495248102005, 0.7431469596199088, 0.739494105922768, 0.7416567861159968, 0.7391228905648067, 0.7327757486262892, 0.729118346317711, 0.7375277385751349, 0.7220672740282525, 0.7145245802038775, 0.7159012218807131, 0.712836531379739, 0.7154804100497146, 0.7142234555939012, 0.7070467824146118, 0.7082609235728657, 0.7014583771365146, 0.7096482637284092, 0.6994190026724643, 0.7056342841155179, 0.6912092415569417, 0.6918719626846032, 0.6843496335968287, 0.6927771720163827, 0.6909221853042843, 0.6925660041045866], "accuracy": [0.11821424216032028, 0.17395325005054474, 0.23286223411560059, 0.278959184885025, 0.32399946451187134, 0.35068023204803467, 0.3827763795852661, 0.4069475531578064, 0.43072250485420227, 0.44591203331947327, 0.46651697158813477, 0.4880464971065521, 0.5036323070526123, 0.5239730477333069, 0.5396909117698669, 0.5581825375556946, 0.5721833109855652, 0.5799762010574341, 0.5890899300575256, 0.6108836531639099, 0.6108836531639099, 0.6196011304855347, 0.6255448460578918, 0.6384889483451843, 0.639809787273407, 0.6468101739883423, 0.6518293619155884, 0.6605468392372131, 0.666358470916748, 0.6671509742736816, 0.6754721999168396, 0.6716417670249939, 0.6762647032737732, 0.6754721999168396, 0.6785101294517517, 0.687491774559021, 0.6860388517379761, 0.6890767216682434, 0.6930392384529114, 0.7003037929534912, 0.7062475085258484, 0.6979262828826904, 0.7016246318817139, 0.700171709060669, 0.7047945857048035, 0.7137762308120728, 0.7028133869171143, 0.7119271159172058, 0.707568347454071, 0.7156254053115845, 0.7145687341690063, 0.7190595865249634, 0.7215691208839417, 0.7195879220962524, 0.7234182953834534, 0.7143045663833618, 0.7194558382034302, 0.7223616242408752, 0.7268524765968323, 0.7259278893470764, 0.7220974564552307, 0.7316074371337891, 0.7317395210266113, 0.7317395210266113, 0.7293620109558105, 0.7289658188819885, 0.7321357727050781, 0.7305507659912109, 0.7306828498840332, 0.7411174178123474, 0.7416457533836365, 0.7427024245262146, 0.7376832365989685, 0.7407211661338806, 0.7386078238487244, 0.7395324110984802, 0.739400327205658, 0.7388719916343689, 0.7458723783493042, 0.7413815855979919, 0.7512878179550171, 0.7494386434555054, 0.746268630027771, 0.7518161535263062, 0.750231146812439, 0.7450799345970154], "val_loss": [1.9508844103131975, 1.9301996231079102, 1.9063217299325126, 1.8773070744105749, 1.8399410928998674, 1.7918686866760254, 1.7303344181605749, 1.6531060763767786, 1.5609314441680908, 1.4584041322980608, 1.352105004446847, 1.2480245317731584, 1.1551729610988073, 1.0739784581320626, 1.0059599876403809, 0.9489448411124093, 0.901261534009661, 0.8632376704897199, 0.8290193591799054, 0.8013206550053188, 0.7790740217481341, 0.7572051627295358, 0.73826493535723, 0.7231809582029071, 0.7086068051201957, 0.6970892463411603, 0.6849152360643659, 0.6746752773012433, 0.6643615279878888, 0.6551896503993443, 0.6473784446716309, 0.6430737801960537, 0.6347218070711408, 0.6283305542809623, 0.6232999392918178, 0.6164383207048688, 0.611360856464931, 0.6063686268670219, 0.6003832987376622, 0.597997750554766, 0.5920335394995553, 0.5891022341591972, 0.5855307749339512, 0.5820892197745187, 0.5797050850731986, 0.5769666092736381, 0.5726254156657627, 0.5703666039875576, 0.566955736705235, 0.5623410258974347, 0.5605473348072597, 0.5568841866084507, 0.5544694832393101, 0.5520565169198173, 0.5500573260443551, 0.5471459967749459, 0.5457315615245274, 0.5429376874651227, 0.5404704979487828, 0.5396928787231445, 0.5381874186652047, 0.535722153527396, 0.5342394965035575, 0.5316414833068848, 0.5296368428639003, 0.527731043951852, 0.5262182099478585, 0.5234032528741019, 0.522129910332816, 0.5199159894670758, 0.5173497710909162, 0.5172018153326852, 0.5174241065979004, 0.5138616561889648, 0.5125072513307843, 0.5109792947769165, 0.5089904240199498, 0.5078451974051339, 0.5073690755026681, 0.5064007214137486, 0.5030003104891095, 0.5018903357642037, 0.4999288150242397, 0.4993818146841867, 0.4984276975904192, 0.49739941528865267], "val_accuracy": [0.2123333364725113, 0.35066667199134827, 0.3933333456516266, 0.43933331966400146, 0.47099998593330383, 0.5006666779518127, 0.531333327293396, 0.550000011920929, 0.5686666369438171, 0.5873333215713501, 0.5953333377838135, 0.6050000190734863, 0.6349999904632568, 0.6553333401679993, 0.6653333306312561, 0.6800000071525574, 0.6893333196640015, 0.6933333277702332, 0.6990000009536743, 0.703000009059906, 0.7053333520889282, 0.7046666741371155, 0.7129999995231628, 0.7176666855812073, 0.7193333506584167, 0.718999981880188, 0.7269999980926514, 0.7293333411216736, 0.7266666889190674, 0.7296666502952576, 0.7329999804496765, 0.7306666374206543, 0.7406666874885559, 0.7393333315849304, 0.7379999756813049, 0.737333357334137, 0.7413333058357239, 0.7406666874885559, 0.7463333606719971, 0.7459999918937683, 0.753000020980835, 0.7506666779518127, 0.749666690826416, 0.7556666731834412, 0.7480000257492065, 0.75, 0.7583333253860474, 0.7549999952316284, 0.7543333172798157, 0.7583333253860474, 0.7603333592414856, 0.7599999904632568, 0.7583333253860474, 0.7599999904632568, 0.7676666378974915, 0.7663333415985107, 0.7630000114440918, 0.7693333625793457, 0.7673333287239075, 0.7689999938011169, 0.7670000195503235, 0.7670000195503235, 0.7696666717529297, 0.768666684627533, 0.7683333158493042, 0.7689999938011169, 0.7720000147819519, 0.7749999761581421, 0.7746666669845581, 0.7756666541099548, 0.7749999761581421, 0.7743333578109741, 0.7746666669845581, 0.7766666412353516, 0.7773333191871643, 0.7756666541099548, 0.7789999842643738, 0.7753333449363708, 0.7733333110809326, 0.7760000228881836, 0.7803333401679993, 0.7796666622161865, 0.777999997138977, 0.7776666879653931, 0.7803333401679993, 0.7803333401679993]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 4, 2, 5, 6, 5, 8, 5, 4, 1, 7, 5, 0, 5, 9], [2, 1, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [83, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.696571409702301, "mapping_values": [1, 25, 25, 17, 8, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))))))))))))))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2772549209876884, 2.091823223165911, 1.5737414150316136, 1.3301548968059291, 1.039713943552552, 0.9810254647353573, 0.8526058324323968, 0.8769584173035738, 0.8030951517747141, 0.8190487197219829, 0.7469541697595979, 0.7293724758261939, 0.7220872921982083, 0.6830695460516905, 0.665200086821497, 0.6514608295381723, 0.6319928729003526, 0.606136124919135, 0.5942562213899468, 0.5830851380835435, 0.5724820673678294, 0.565131625140647, 0.5585746582016387, 0.5236953466977142, 0.5272935729347373, 0.5110645272381915, 0.5020882571653652, 0.4879331797924276, 0.4898704102664119, 0.48104275356997367, 0.46858029594006967, 0.46863162409690834, 0.45443885372204945, 0.4638194590944734, 0.4426610732138385, 0.42941322937271204, 0.4310416503628688, 0.4188773306274868, 0.434382700637473, 0.417706601017612], "accuracy": [0.1612732857465744, 0.36547350883483887, 0.4772156774997711, 0.5556729435920715, 0.637432336807251, 0.6519614458084106, 0.6870955228805542, 0.6832650899887085, 0.6984546184539795, 0.7038700580596924, 0.7113987803459167, 0.7215691208839417, 0.7294940948486328, 0.7448157668113708, 0.7528728246688843, 0.757099449634552, 0.7606657147407532, 0.7728173136711121, 0.7791573405265808, 0.7827235460281372, 0.7796856164932251, 0.7839123010635376, 0.7864218950271606, 0.8004226684570312, 0.8017435073852539, 0.8115176558494568, 0.8138951063156128, 0.8141592741012573, 0.8121780753135681, 0.8187822103500366, 0.8248580098152161, 0.8281601071357727, 0.8302733898162842, 0.8244617581367493, 0.8352925777435303, 0.8396512866020203, 0.8405758738517761, 0.8399154543876648, 0.8391229510307312, 0.843481719493866], "val_loss": [1.8873491287231445, 1.4983422756195068, 0.8720271927969796, 0.7314816883632115, 0.7668554612568447, 0.6287326642445156, 0.633097665650504, 0.6023500476564679, 0.6191283123833793, 0.5755930457796369, 0.5172982897077288, 0.5100645167487008, 0.5094880717141288, 0.49601972103118896, 0.48302059514181955, 0.4550367423466274, 0.464570369039263, 0.4506368466785976, 0.46223836285727365, 0.4488745246614729, 0.43814267430986675, 0.42722454241343905, 0.4182742748941694, 0.42210248538425993, 0.4297892025538853, 0.4253836359296526, 0.4174881492342268, 0.4120998638016837, 0.40951398440769743, 0.4071029509816851, 0.4071385604994638, 0.38174259662628174, 0.37871151311056955, 0.36672695193971905, 0.37927756139210295, 0.3934974159513201, 0.38399946689605713, 0.38173856905528475, 0.3740360992295401, 0.3780300532068525], "val_accuracy": [0.3973333239555359, 0.5366666913032532, 0.6776666641235352, 0.6926666498184204, 0.6790000200271606, 0.7269999980926514, 0.7206666469573975, 0.731333315372467, 0.7333333492279053, 0.7423333525657654, 0.7633333206176758, 0.7733333110809326, 0.7760000228881836, 0.7770000100135803, 0.7900000214576721, 0.7953333258628845, 0.7993333339691162, 0.8133333325386047, 0.8103333115577698, 0.8136666417121887, 0.8100000023841858, 0.8143333196640015, 0.8173333406448364, 0.8206666707992554, 0.8206666707992554, 0.8253333568572998, 0.8286666870117188, 0.8333333134651184, 0.8336666822433472, 0.8349999785423279, 0.8356666564941406, 0.8426666855812073, 0.8420000076293945, 0.8496666550636292, 0.8533333539962769, 0.8526666760444641, 0.8460000157356262, 0.8473333120346069, 0.8513333201408386, 0.8526666760444641]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 0, 4, 2, 7, 4, 3, 9, 7, 0, 6, 1, 2, 3, 2, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 1], [36, 28, 79, 74, 30, 41], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [0, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.36971428990364075, "mapping_values": [1, 44, 44, 27, 17, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.multiply(alpha, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))))), grad)), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300341868775317, 2.688635442770546, 2.3038594332259046, 2.3028765657180807, 2.2984354836105307, 2.3118084766892806], "accuracy": [0.22440892457962036, 0.12270505726337433, 0.09813763201236725, 0.09192973375320435, 0.10632677376270294, 0.12521463632583618], "val_loss": [3.467752524784633, 1.9744960239955358, 1.9735969815935408, 1.9731494358607702, 1.9096245084490096, 1.9759046009608678], "val_accuracy": [0.35366666316986084, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.109333336353302, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1], [7, 5, 9, 9, 4], [2, 0, 2, 1], [77, 28, 63], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [26, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7521961.662252702, 141231019.92761853, 644787446.3801347, 1802253182.224805, 3909016323.144631, 7077411255.436798], "accuracy": [0.09853387624025345, 0.09840179979801178, 0.1022322028875351, 0.10487385839223862, 0.0956280529499054, 0.09932637959718704], "val_loss": [27952700.57142857, 223245737.14285713, 753036763.4285715, 1784482925.7142856, 3484744557.714286, 6020970349.714286], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [92, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3111013064940593, 2.3367793195676874, 2.3684392449972638, 2.4140950527488436, 2.4891016177214085, 2.6549933213347443, 3.8923050086606277, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.041209880262613297, 0.021397437900304794, 0.018359528854489326, 0.012019548565149307, 0.011623299680650234, 0.05600316822528839, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9925743511744909, 2.0186075483049666, 2.0525621686662947, 2.103381020682199, 2.1945150920322964, 2.4590725898742676, 8.833868026733398, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007666666526347399, 0.004000000189989805, 0.0033333334140479565, 0.004999999888241291, 0.005333333276212215, 0.012666666880249977, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [7, 5, 4, 4, 4, 5, 8, 6, 4, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 81, 69], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.pow(grad, tf.math.pow(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.pow(tf.math.add(alpha, alpha), grad))))))))), tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3111012435120015, 2.3367792565856296, 2.368439182015206, 2.4140946973096016, 2.489101221942158, 2.654990064627018, 3.892386121237204, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.041209880262613297, 0.021397437900304794, 0.018359528854489326, 0.012019548565149307, 0.011623299680650234, 0.05600316822528839, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9925742830548967, 2.0186074120657787, 2.0525620324271068, 2.1033805438450406, 2.1945107323782787, 2.459059919629778, 8.834226880754743, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007666666526347399, 0.004000000189989805, 0.0033333334140479565, 0.004999999888241291, 0.005333333276212215, 0.012666666880249977, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [7, 5, 7, 1, 4, 8, 4, 2, 7, 2, 3, 2, 7, 0, 6, 1, 2, 0, 9, 7, 5, 5, 4, 5, 8, 5, 3], [2, 0, 2, 1, 2, 3, 0, 1, 1, 1, 0, 2, 0, 3, 1, 0, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 4, 1, 4, 5, 0], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [5], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 16, 14, 4, 17, 17, 9, 8, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha)))), tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(beta, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [2, 0, 2, 1, 0], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 2, 5, 5, 2, 4], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [6, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303346942428742, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1], [7, 0, 9, 4, 6], [0, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [72.92148970046048, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19719983637332916, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [75083.06919642857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1], [7, 5, 1, 5, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1], [0, 5, 9, 4, 7], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [77, 68, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1], [3, 4, 7], [2, 0, 0, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 7, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12191256135702133, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [6, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3111012750030304, 2.3367792250946007, 2.368439101051771, 2.4140943959089647, 2.4890995802203535, 2.6549589017977127, 3.891495886102187, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.041209880262613297, 0.021397437900304794, 0.018359528854489326, 0.012019548565149307, 0.011623299680650234, 0.05600316822528839, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9925742830548967, 2.0186073439461842, 2.0525617599487305, 2.1033802032470703, 2.1945020811898366, 2.4589763368879045, 8.828949792044503, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007666666526347399, 0.004000000189989805, 0.0033333334140479565, 0.004999999888241291, 0.005333333276212215, 0.012666666880249977, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0], [7, 9, 7, 3, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [0, 0, 2, 1], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [80.13717712132276, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19614318013191223, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [381253.4285714286, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 4], [0, 0, 2, 1], [77, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1], [0, 1, 0, 0], [6, 4, 8], [2, 0, 1, 5, 3, 4], [8], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12191256135702133, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1], [7, 5, 9, 8, 6], [2, 2, 2, 1], [40, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [80.10210577315186, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19614318013191223, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [378277.16964285716, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1], [7, 6, 9, 4, 6], [0, 0, 2, 1], [77, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [9, 4], [2, 2, 1, 5, 3, 4], [36], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [80.05570366561783, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19653943181037903, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [391993.54464285716, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1], [7, 5, 9, 4, 6], [2, 0, 0, 1], [40, 28, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.07199999690055847, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301440851106746, 2.3012876256802426, 2.300777655425026, 2.300571590602957, 2.299746038513476, 2.300905036479097, 2.299787543343043, 2.3009113337086364, 2.2989457118402554, 2.2997666849137106, 2.299085552823731, 2.299346944864132, 2.2995258801648832, 2.300420111574438, 2.3003086409847797, 2.300514151848161, 2.299945844399096, 2.300400745001105, 2.3004501526618064, 2.300941544658614, 2.3006309451774727, 2.3003723178919455, 2.301709200302686], "accuracy": [0.09615638852119446, 0.09945846349000931, 0.09813763201236725, 0.09866596013307571, 0.10157178342342377, 0.09655263274908066, 0.09945846349000931, 0.09576013684272766, 0.09800554811954498, 0.09879804402589798, 0.09840179979801178, 0.10408136248588562, 0.1010434553027153, 0.09919429570436478, 0.10051512718200684, 0.09602430462837219, 0.09853387624025345, 0.10077928751707077, 0.09893012791872025, 0.09589222073554993, 0.09470347315073013, 0.09985470771789551, 0.09245806187391281], "val_loss": [1.9703338486807687, 1.9698409352983748, 1.9697058541434151, 1.9695378031049455, 1.969555105481829, 1.9694999286106654, 1.969407081604004, 1.9692091260637556, 1.9692581040518624, 1.9692154611860002, 1.969339030129569, 1.9695399829319544, 1.9697965213230677, 1.9700289453778947, 1.970243317740304, 1.9704358918326241, 1.9706708363124303, 1.9708025114876884, 1.9709350722176688, 1.971095017024449, 1.9712437902178084, 1.9714010783604212, 1.9714814594813757], "val_accuracy": [0.04533333331346512, 0.050999999046325684, 0.05533333495259285, 0.05966666713356972, 0.06133333221077919, 0.06866666674613953, 0.07233333587646484, 0.07733333110809326, 0.07833333313465118, 0.08166666328907013, 0.08299999684095383, 0.08433333039283752, 0.08233333379030228, 0.08233333379030228, 0.08399999886751175, 0.0846666693687439, 0.0860000029206276, 0.08666666597127914, 0.08633333444595337, 0.08500000089406967, 0.08533333241939545, 0.08666666597127914, 0.08433333039283752]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 8, 1, 4, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5, 6, 3, 2], [1, 0, 2, 1, 0, 3, 0, 3, 2, 1, 0, 2, 0, 3, 2, 0, 2, 2, 3], [40, 28, 79, 39, 8, 88, 74], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0], [3, 4, 4], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 49, 49, 30, 19, 7, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.math.add(alpha, alpha)))))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(grad))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))))))))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018035485271797, 2.302415494291522, 2.30211466282366, 2.302453311679071, 2.3016572143454925, 2.30356602441397], "accuracy": [0.09549596905708313, 0.09853387624025345, 0.09813763201236725, 0.09245806187391281, 0.09615638852119446, 0.0886276587843895], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [77, 28, 79, 83, 90], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 34, 34, 18, 16, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))))), alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), grad)))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018035485271797, 2.302415494291522, 2.30211466282366, 2.302453311679071, 2.3016572143454925, 2.30356602441397], "accuracy": [0.09549596905708313, 0.09853387624025345, 0.09813763201236725, 0.09245806187391281, 0.09615638852119446, 0.0886276587843895], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 7, 9, 4, 7, 5], [3, 0, 2, 1], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0], [5, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.02971428632736206, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(alpha, tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302272798614794, 2.304367202667591, 2.3057316020967593, 2.308379005526098, 2.3104742221104204, 2.3167319435091414], "accuracy": [0.0952318087220192, 0.09232597798109055, 0.08955223858356476, 0.08651433140039444, 0.0866464152932167, 0.07409853488206863], "val_loss": [1.9720820699419295, 1.9736015456063407, 1.975079127720424, 1.9771552767072404, 1.9796323095049178, 1.9826372691563197], "val_accuracy": [0.03233333304524422, 0.025333333760499954, 0.020999999716877937, 0.019333332777023315, 0.023666666820645332, 0.03099999949336052]}}]