[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7671428322792053, "mapping_values": [1, 44, 44, 27, 17, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.294312436141988, 2.270988652451384, 2.247802789893684, 2.220818005784659, 2.1855295586815884, 2.1431977536621316, 2.0879329423925834, 2.015917869701267, 1.9307519116846956, 1.8292220524194738, 1.7232429219148793, 1.6220002982594697, 1.5320918238032306, 1.451436084826168, 1.3688051089666082, 1.3135239541837647, 1.2596287955665917, 1.2173477995271271, 1.168670438803765, 1.1404995480863536, 1.1205299375803872, 1.0835913255655252, 1.0568762348470058, 1.0275907825485213, 1.014517278010583, 0.9962490146753101, 0.9854165802164447, 0.9667647103544681, 0.9575891175746855, 0.9365142402852358, 0.9341203101228304, 0.9210072525535451, 0.8973771730323966, 0.893808507246978, 0.880610437630001, 0.876027375054224, 0.8689265769265819, 0.8531479827243859, 0.8529560231041395, 0.8554394837179047, 0.8506971292051074, 0.8382408498552545, 0.8255393423928309, 0.8283199571489327, 0.8097107526790259, 0.8115971570615802, 0.8082591434117746, 0.8053952034170665, 0.7985480418845788, 0.7919737805685332, 0.7884232083552266, 0.7662130562762511, 0.7773303933399323, 0.7776263834478802, 0.7693128505749489, 0.7637154642522548, 0.7609687807411645, 0.755179241057542, 0.7527060725071395, 0.7514392511955799, 0.7422519580106441, 0.7478517039797451, 0.7389644099941438, 0.7529579683412037, 0.7357359601364569, 0.7329421043710906, 0.7285007975435591, 0.723164718282725, 0.7257778136217835, 0.7229510802225021], "accuracy": [0.108440101146698, 0.1732928305864334, 0.23259806632995605, 0.27658170461654663, 0.3283582031726837, 0.35543522238731384, 0.3821159601211548, 0.40628713369369507, 0.4291374981403351, 0.4554220139980316, 0.4744419455528259, 0.49266940355300903, 0.5041606426239014, 0.5175009965896606, 0.5443138480186462, 0.5509179830551147, 0.5690133571624756, 0.5807687044143677, 0.5945053696632385, 0.6026945114135742, 0.6092986464500427, 0.6214502453804016, 0.629507303237915, 0.6395456194877625, 0.6487914323806763, 0.6487914323806763, 0.6469422578811646, 0.6548672318458557, 0.6585655808448792, 0.6690001487731934, 0.6651697158813477, 0.6730946898460388, 0.6763967871665955, 0.6806234121322632, 0.6832650899887085, 0.6816800832748413, 0.6864351034164429, 0.6946242451667786, 0.6963412761688232, 0.6910579800605774, 0.6944921612739563, 0.6983225345611572, 0.7010962963104248, 0.7025492191314697, 0.7034738063812256, 0.7045304179191589, 0.711530864238739, 0.7099458575248718, 0.7094175219535828, 0.7173424959182739, 0.7135120630264282, 0.719852089881897, 0.715889573097229, 0.7154933214187622, 0.7211728692054749, 0.7209087014198303, 0.7224937081336975, 0.724739134311676, 0.7238145470619202, 0.7285695672035217, 0.7312111854553223, 0.726192057132721, 0.7325320243835449, 0.7273808121681213, 0.7375511527061462, 0.7255316376686096, 0.7349095344543457, 0.737947404384613, 0.7342491149902344, 0.7294940948486328], "val_loss": [1.9509122031075614, 1.9300099100385393, 1.9059131486075265, 1.8766229493277413, 1.8393799236842565, 1.790581430707659, 1.7284891945975167, 1.6508549281529017, 1.5587694644927979, 1.4554127284458704, 1.3487330504826136, 1.2461051940917969, 1.1539381231580461, 1.0734898022242956, 1.0052834578922816, 0.9504062107631138, 0.9044970784868512, 0.8644649982452393, 0.8298894507544381, 0.8018426554543632, 0.7785483258111137, 0.7567319359098162, 0.7387197528566632, 0.7228250503540039, 0.7095466000693185, 0.6977304901395526, 0.6858229126249041, 0.67409804889134, 0.6668326003210885, 0.6592317138399396, 0.6500783818108695, 0.6427551337650844, 0.6349755355290004, 0.6275656393596104, 0.624133859361921, 0.6177242653710502, 0.6129553828920636, 0.6078287703650338, 0.6025296790259225, 0.5976970706667218, 0.5957006556647164, 0.5904179300580706, 0.5854422535215106, 0.5831472533089774, 0.5795771735055106, 0.5754345144544329, 0.5715814828872681, 0.5684560026441302, 0.566239629473005, 0.5658936330250331, 0.5619150740759713, 0.5572173254830497, 0.5542282717568534, 0.5524158818381173, 0.5519522939409528, 0.5480118819645473, 0.5461745943341937, 0.5431510210037231, 0.5410043341772897, 0.5400721005031041, 0.5363729000091553, 0.5346604074750628, 0.5326899119785854, 0.530281833239964, 0.528512784412929, 0.5271220547812325, 0.5262089116232735, 0.5241908856800624, 0.521535975592477, 0.5203667197908673], "val_accuracy": [0.21433334052562714, 0.3526666760444641, 0.4009999930858612, 0.4390000104904175, 0.46166667342185974, 0.4959999918937683, 0.531000018119812, 0.5606666803359985, 0.5713333487510681, 0.5896666646003723, 0.5993333458900452, 0.609666645526886, 0.628333330154419, 0.6576666831970215, 0.6636666655540466, 0.6786666512489319, 0.6853333115577698, 0.6926666498184204, 0.6949999928474426, 0.7009999752044678, 0.7039999961853027, 0.7083333134651184, 0.7153333425521851, 0.7146666646003723, 0.7139999866485596, 0.7153333425521851, 0.7236666679382324, 0.7273333072662354, 0.7260000109672546, 0.7323333621025085, 0.7323333621025085, 0.7323333621025085, 0.7363333106040955, 0.734666645526886, 0.7390000224113464, 0.7409999966621399, 0.7440000176429749, 0.7429999709129333, 0.7493333220481873, 0.746999979019165, 0.750333309173584, 0.75, 0.7526666522026062, 0.7516666650772095, 0.7473333477973938, 0.7463333606719971, 0.753333330154419, 0.7553333044052124, 0.7563333511352539, 0.7519999742507935, 0.7603333592414856, 0.7609999775886536, 0.7616666555404663, 0.7663333415985107, 0.762666642665863, 0.7649999856948853, 0.7706666588783264, 0.765333354473114, 0.7693333625793457, 0.7710000276565552, 0.7666666507720947, 0.7726666927337646, 0.7663333415985107, 0.7710000276565552, 0.7760000228881836, 0.7753333449363708, 0.7736666798591614, 0.7683333158493042, 0.7753333449363708, 0.7753333449363708]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7671428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.294312467633017, 2.2709885894693262, 2.247802807875061, 2.220817074657919, 2.185528946936863, 2.143200826084357, 2.0879412330042464, 2.0159298828674457, 1.9307679351074285, 1.8292425876248861, 1.7232639572135744, 1.6220201901346543, 1.5321153211177947, 1.4514671672431312, 1.3688308257373916, 1.3135391364811182, 1.2596423038795812, 1.2173526747950063, 1.1686846701350304, 1.1405043665601624, 1.1205186698855882, 1.0835918006864222, 1.0568943883386728, 1.0276083164305783, 1.0145432479377468, 0.9962409298890114, 0.9854388775023739, 0.9667622538337839, 0.9576028638496343, 0.9365159700323389, 0.9341428835535912, 0.921002640763231, 0.8973948377832965, 0.8938530302476008, 0.8806282729914223, 0.8760422174925219, 0.8689303073381089, 0.8531783527591682, 0.8529400379666248, 0.8554669292438236, 0.8507264561861608, 0.8381970811986086, 0.8255516303969632, 0.828303419713882, 0.8097208138895293, 0.8116278625466742, 0.808255219086365, 0.8054109218728037, 0.7985401240322237, 0.7919394923176007, 0.7883964260539925, 0.7661370591653761, 0.7772948442826796, 0.7775555687998705, 0.7693112188987823, 0.7637294648566251, 0.7609780977320567, 0.7551438559898217, 0.752773531353028, 0.7513928511564396, 0.7422754134736309, 0.7478496464267776, 0.738969379428072, 0.7529354165054158, 0.7358350817789696, 0.7328952031522269, 0.7285390430516445, 0.7232056673428701, 0.7257962410460373, 0.7229669287834248], "accuracy": [0.108440101146698, 0.1732928305864334, 0.23259806632995605, 0.27658170461654663, 0.3283582031726837, 0.3555673062801361, 0.3821159601211548, 0.4061550796031952, 0.4290054142475128, 0.45528993010520935, 0.4744419455528259, 0.4928014874458313, 0.5040285587310791, 0.5172368288040161, 0.5440496802330017, 0.5509179830551147, 0.5690133571624756, 0.5809007883071899, 0.5946374535560608, 0.6026945114135742, 0.6090344786643982, 0.6214502453804016, 0.6293752193450928, 0.6394135355949402, 0.6487914323806763, 0.6485272645950317, 0.6469422578811646, 0.6551313996315002, 0.6583014130592346, 0.6690001487731934, 0.6653017997741699, 0.6729626059532166, 0.6761326193809509, 0.6803592443466187, 0.683000922203064, 0.6814159154891968, 0.6863030195236206, 0.6942279934883118, 0.6966054439544678, 0.6913221478462219, 0.694360077381134, 0.6983225345611572, 0.7009642124176025, 0.7033417224884033, 0.7033417224884033, 0.705058753490448, 0.7116629481315613, 0.709021270275116, 0.7094175219535828, 0.7176066637039185, 0.7137762308120728, 0.719852089881897, 0.715889573097229, 0.7154933214187622, 0.7209087014198303, 0.7211728692054749, 0.7223616242408752, 0.7248712182044983, 0.7240787148475647, 0.7279091477394104, 0.7317395210266113, 0.726192057132721, 0.7323999404907227, 0.7272487282752991, 0.7375511527061462, 0.7256637215614319, 0.7351737022399902, 0.7378153204917908, 0.7341170310974121, 0.7300224304199219], "val_loss": [1.9509122031075614, 1.9300097737993513, 1.9059134210859026, 1.8766216550554549, 1.839381558554513, 1.7905864715576172, 1.7285000937325614, 1.6508684498923165, 1.5587884017399378, 1.455430064882551, 1.3487484114510673, 1.2461176259177071, 1.1539646557399206, 1.0735162666865758, 1.0053112506866455, 0.9504450389317104, 0.9045021533966064, 0.8644788946424212, 0.8299261501857212, 0.8018520559583392, 0.7785663604736328, 0.7567452192306519, 0.738716857773917, 0.722826395715986, 0.7095250572477069, 0.6976950679506574, 0.6858119794300624, 0.6741018465587071, 0.6668285301753453, 0.6592232840401786, 0.6500651325498309, 0.6427623544420514, 0.635025075503758, 0.6275877782276699, 0.6241095066070557, 0.6177413974489484, 0.6129263469151088, 0.6078595774514335, 0.6025236334119525, 0.5976939712251935, 0.5956899097987584, 0.5904224600110736, 0.585438575063433, 0.5831636020115444, 0.5795668193272182, 0.5754208394459316, 0.571541428565979, 0.5684835910797119, 0.5663187503814697, 0.565916929926191, 0.5618797200066703, 0.5572151456560407, 0.554181524685451, 0.5523965358734131, 0.5519671610423497, 0.5480713163103376, 0.5461808443069458, 0.5432129417146955, 0.5410804578236171, 0.5401483603886196, 0.5363576752798898, 0.5346842152731759, 0.5326847178595406, 0.5303158760070801, 0.5285038607461112, 0.5271561316081456, 0.5262633732386998, 0.5242831366402763, 0.5215656416756767, 0.5204416002546038], "val_accuracy": [0.21433334052562714, 0.3526666760444641, 0.4009999930858612, 0.4390000104904175, 0.46166667342185974, 0.4959999918937683, 0.531000018119812, 0.5606666803359985, 0.5713333487510681, 0.5893333554267883, 0.5993333458900452, 0.609666645526886, 0.628333330154419, 0.6576666831970215, 0.6636666655540466, 0.6793333292007446, 0.6853333115577698, 0.6923333406448364, 0.6946666836738586, 0.7009999752044678, 0.7039999961853027, 0.7086666822433472, 0.7153333425521851, 0.7146666646003723, 0.7143333554267883, 0.7153333425521851, 0.7239999771118164, 0.7276666760444641, 0.7263333201408386, 0.7323333621025085, 0.7326666712760925, 0.7326666712760925, 0.7363333106040955, 0.734666645526886, 0.7390000224113464, 0.7406666874885559, 0.7436666488647461, 0.7419999837875366, 0.7493333220481873, 0.746999979019165, 0.7509999871253967, 0.75, 0.753333330154419, 0.7519999742507935, 0.746999979019165, 0.7463333606719971, 0.7536666393280029, 0.7553333044052124, 0.7570000290870667, 0.7519999742507935, 0.7603333592414856, 0.7603333592414856, 0.762333333492279, 0.7666666507720947, 0.762666642665863, 0.7646666765213013, 0.7706666588783264, 0.765999972820282, 0.7693333625793457, 0.7710000276565552, 0.7676666378974915, 0.7723333239555359, 0.7663333415985107, 0.7703333497047424, 0.7760000228881836, 0.7753333449363708, 0.7736666798591614, 0.7683333158493042, 0.7756666541099548, 0.7756666541099548]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [1, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [21], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.728857159614563, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3004373239724547, 2.2922381057305943, 2.285977324695005, 2.280312278314494, 2.271877559357788, 2.2677985121624076, 2.261406118843644, 2.254050227424582, 2.2457910519328967, 2.2375527478763377, 2.2280732894759403, 2.219959892790158, 2.2113371834448223, 2.2016993417338044, 2.187420831490596, 2.1754435456235255, 2.162443082031242, 2.1498901095797813, 2.1310655720843896, 2.1184060513744924, 2.100735623208901, 2.078821196957287, 2.058523976587112, 2.0356417082682134, 2.011481106320644, 1.9883075743744387, 1.9639231320684611, 1.9333646324379663, 1.9070192054908006, 1.8758463875775986, 1.8494688340339362, 1.8196859120251936, 1.7821504349847748, 1.7501791129731357, 1.7153563166590509, 1.6900625898538564, 1.6549400666197451, 1.620055740677276, 1.5948004072462925, 1.572828739169031, 1.5403029617773873, 1.5118509530391298, 1.485995570650631, 1.4630088446524794, 1.4317869623780266, 1.4206144163369534, 1.39453160109348, 1.3736220146639473, 1.3529239486882778, 1.3354444477961536, 1.31472751552938, 1.2890900560200662, 1.2834950595279302, 1.264918997885765, 1.2600398134357027, 1.2351223370497018, 1.2298528508833921, 1.2014441663688908, 1.2037867639893318, 1.193813045877334, 1.1658936679764762, 1.1715152011083307, 1.1583634203986533, 1.1497050290566866, 1.1396890019602102, 1.1279215739781374, 1.125760468462313, 1.1076062441879906, 1.097813016608438, 1.0953538009062609, 1.0858720217902411, 1.0845066295434078, 1.076967184223346, 1.0709899844053856, 1.054690029674344, 1.042148275649968, 1.0552988829881664, 1.028146205262076, 1.0204157242921712, 1.0199084712246296, 1.0134913586212928, 1.0105201387685665, 1.0135261027127398, 0.992087280131476, 0.9854779924777647, 0.9859389418765869, 0.9725849535549951, 0.9771046175570646, 0.9758741090546793, 0.9781447138768681, 0.9693056506141302, 0.9544484780653829, 0.9601318558618739, 0.944972315925444, 0.9435612612459654, 0.9401969815194883, 0.9454666336513923, 0.9357985929884789, 0.9279422194430889, 0.9312519637852801], "accuracy": [0.09311848133802414, 0.11279883980751038, 0.13432836532592773, 0.14780081808567047, 0.17117950320243835, 0.1830669641494751, 0.19812442362308502, 0.22203142940998077, 0.23523972928524017, 0.25703340768814087, 0.26403382420539856, 0.287280410528183, 0.2965262234210968, 0.29784706234931946, 0.3230748772621155, 0.33258485794067383, 0.3427552580833435, 0.34460440278053284, 0.366530179977417, 0.3711530864238739, 0.37762513756752014, 0.38845595717430115, 0.3951921761035919, 0.40523049235343933, 0.4099854826927185, 0.41408005356788635, 0.41725003719329834, 0.42768457531929016, 0.4395720660686493, 0.44327038526535034, 0.4485536813735962, 0.4575353264808655, 0.46347907185554504, 0.4653282165527344, 0.47325319051742554, 0.471800297498703, 0.48249900341033936, 0.4943864643573761, 0.4966318905353546, 0.4954431354999542, 0.505877673625946, 0.507330596446991, 0.5193501710891724, 0.5235767960548401, 0.529388427734375, 0.5280676484107971, 0.5381059050559998, 0.5453705191612244, 0.5464271306991577, 0.5546162724494934, 0.55791836977005, 0.564258337020874, 0.561880886554718, 0.5704662799835205, 0.5638620853424072, 0.5721833109855652, 0.579051673412323, 0.5908070206642151, 0.5838066339492798, 0.5816932916641235, 0.5949016213417053, 0.594241201877594, 0.5976753234863281, 0.5980715751647949, 0.6004490852355957, 0.5997886657714844, 0.6037511825561523, 0.6110157370567322, 0.6181482076644897, 0.6081098914146423, 0.6148461103439331, 0.6172236204147339, 0.6229031682014465, 0.6170915365219116, 0.6330735683441162, 0.6325452327728271, 0.6231673359870911, 0.6324131488800049, 0.6391493678092957, 0.6380926966667175, 0.6440364718437195, 0.6427156329154968, 0.6365077495574951, 0.6509047746658325, 0.6501122713088989, 0.6485272645950317, 0.6536785364151001, 0.6538106203079224, 0.6565843224525452, 0.653150200843811, 0.6580372452735901, 0.6642451286315918, 0.6601505875587463, 0.6656980514526367, 0.6659622192382812, 0.6696605682373047, 0.6592260003089905, 0.6635847091674805, 0.6701889038085938, 0.669792652130127], "val_loss": [1.9648897307259696, 1.958773476736886, 1.9527016367231096, 1.946530818939209, 1.9403581619262695, 1.9338910239083427, 1.9272231374468123, 1.9202654021126884, 1.912959439413888, 1.9051384925842285, 1.8967656408037459, 1.8878521238054549, 1.8783375876290458, 1.8680709430149622, 1.856865542275565, 1.8447105543954032, 1.8316401072910853, 1.817617416381836, 1.8021314484732491, 1.785623005458287, 1.7678703580583846, 1.7488084520612444, 1.7283460753304618, 1.7063241004943848, 1.6828935486929757, 1.6581361634390694, 1.6320395810263497, 1.6046130997794015, 1.5759918689727783, 1.5461785452706474, 1.5158923694065638, 1.484470980507987, 1.4520652294158936, 1.4195408139910017, 1.3867483139038086, 1.3544182777404785, 1.3219660009656633, 1.2899043219430106, 1.2590066364833288, 1.2293835026877267, 1.2007348878043038, 1.1728904587881905, 1.146101679120745, 1.1209330558776855, 1.0963524069104875, 1.073655332837786, 1.0519566535949707, 1.031174625669207, 1.0114118712288993, 0.993058579308646, 0.9752427509852818, 0.9582406793321881, 0.9426969460078648, 0.9282305240631104, 0.9145818097250802, 0.900942189352853, 0.8886470794677734, 0.8765037400381905, 0.8654630695070539, 0.8553551776068551, 0.8446645906993321, 0.83524637562888, 0.8259586606706891, 0.8173771926334926, 0.8091652563640049, 0.8011584111622402, 0.7940666334969657, 0.7864220823560443, 0.7792930943625314, 0.7726458821977887, 0.7661791699273246, 0.7604012659617833, 0.7546778747013637, 0.7490123510360718, 0.7432173490524292, 0.7378235714776176, 0.7333597626004901, 0.7279531955718994, 0.7232660566057477, 0.7186306374413627, 0.7140837567193168, 0.7099320037024361, 0.7061693668365479, 0.701776385307312, 0.6976369619369507, 0.6941092184611729, 0.6901780196598598, 0.6869786296572004, 0.6837678977421352, 0.6807843957628522, 0.6777851411274501, 0.6745596272604806, 0.6717098440442767, 0.6688769374574933, 0.6659782954624721, 0.662998012134007, 0.6609061786106655, 0.6580442360469273, 0.6553179706845965, 0.6527796302522931], "val_accuracy": [0.07699999958276749, 0.12999999523162842, 0.195333331823349, 0.24933333694934845, 0.2939999997615814, 0.3310000002384186, 0.35733333230018616, 0.37599998712539673, 0.39100000262260437, 0.40566667914390564, 0.41466665267944336, 0.42933332920074463, 0.4399999976158142, 0.4476666748523712, 0.45366665720939636, 0.46166667342185974, 0.4699999988079071, 0.47999998927116394, 0.4869999885559082, 0.49799999594688416, 0.5043333172798157, 0.5136666893959045, 0.5256666541099548, 0.5326666831970215, 0.5396666526794434, 0.5453333258628845, 0.5540000200271606, 0.559333324432373, 0.5649999976158142, 0.5706666707992554, 0.5759999752044678, 0.581333339214325, 0.5836666822433472, 0.5876666903495789, 0.5920000076293945, 0.593666672706604, 0.5960000157356262, 0.6003333330154419, 0.6043333411216736, 0.6086666584014893, 0.612333357334137, 0.6153333187103271, 0.6316666603088379, 0.6399999856948853, 0.6470000147819519, 0.6543333530426025, 0.659333348274231, 0.6613333225250244, 0.6656666398048401, 0.6703333258628845, 0.6759999990463257, 0.6766666769981384, 0.6769999861717224, 0.6793333292007446, 0.6826666593551636, 0.6866666674613953, 0.6899999976158142, 0.6893333196640015, 0.6919999718666077, 0.6940000057220459, 0.6949999928474426, 0.6976666450500488, 0.6973333358764648, 0.699999988079071, 0.6996666789054871, 0.7020000219345093, 0.703000009059906, 0.7023333311080933, 0.70333331823349, 0.706333339214325, 0.7089999914169312, 0.7083333134651184, 0.7093333601951599, 0.7103333473205566, 0.7113333344459534, 0.7103333473205566, 0.7103333473205566, 0.7153333425521851, 0.7160000205039978, 0.7179999947547913, 0.7176666855812073, 0.7193333506584167, 0.7203333377838135, 0.7200000286102295, 0.7223333120346069, 0.7233333587646484, 0.722000002861023, 0.7243333458900452, 0.7253333330154419, 0.7236666679382324, 0.7260000109672546, 0.7283333539962769, 0.7283333539962769, 0.7300000190734863, 0.7300000190734863, 0.7293333411216736, 0.7316666841506958, 0.7303333282470703, 0.7276666760444641, 0.7293333411216736]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [2, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10914285480976105, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.381885128502423, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21001188457012177, 0.108440101146698, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.768623079572405, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11566666513681412, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 4, 6, 8, 2, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [70, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [1, 4, 4, 6, 2, 2, 6, 1], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 21, 14, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(alpha)))), tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), grad))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304320722979766, 2.3060162441841663, 2.3082813127024173, 2.3098286152074934, 2.3061768260724542, 2.3079066073433157, 2.3116356118511705], "accuracy": [0.09377889335155487, 0.0956280529499054, 0.09536388516426086, 0.09760929644107819, 0.10249637067317963, 0.09668471664190292, 0.09747721254825592], "val_loss": [1.973539079938616, 1.9743219103131975, 1.974917207445417, 1.9780947140284948, 1.9808808054242815, 1.9792465482439314, 1.9755499703543526], "val_accuracy": [0.09600000083446503, 0.10166666656732559, 0.10100000351667404, 0.0989999994635582, 0.10066666454076767, 0.0989999994635582, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 5, 7, 1, 1, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 4, 2, 5, 9, 7, 0, 5, 4, 5, 8, 2, 5, 1], [2, 0, 2, 1, 0, 3, 1, 0, 1, 1, 1, 0, 0, 2, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1], [0, 1, 1, 0], [3, 4, 5], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 20, 15, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 9, 4, 6, 8, 2, 6, 0, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 0, 2, 0, 3, 1, 0, 1, 2, 0, 0, 0, 3, 2, 0, 2], [40, 91, 87, 22, 69, 98, 73, 99], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 4, 4, 6, 2, 2, 6, 1], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 11, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0706336780269687e+19, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0627318716034565e+22, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 7, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [0, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2, 3], [40, 28, 79, 39, 41, 36, 44], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0], [9, 4, 7, 8], [7, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303018333543136, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 4, 2, 5, 9, 7, 5, 5, 4, 5, 8, 5, 5, 1], [2, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 91, 87, 22, 69, 98, 73, 99], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [1, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303018333543136, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 8, 7, 1, 4, 8, 4, 4, 7, 4, 3, 5, 7, 0, 6, 5, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 2, 0, 2, 2, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 4, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1], [3, 4, 4], [4, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 28, 16, 12, 3, 1, 1, 0, 1, 0, 7, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), grad)))), tf.math.add(alpha, grad))))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha))), tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [8, 5, 5, 1, 1, 0, 3, 9, 7, 4, 3, 0, 7, 0, 6, 1, 2, 3, 2, 7, 2, 5, 4, 6, 8, 5, 5, 9], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 1, 0, 2], [40, 28, 79, 39, 41, 36, 44], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0], [3, 4, 2, 3, 4], [2, 4, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303018333543136, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 5, 4, 4, 4, 6, 8, 2, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 0, 2, 2, 0, 1, 3, 2, 1, 0, 0, 0, 3, 2, 0, 2], [40, 91, 79, 22, 69, 98], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [4, 4, 7, 3], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303018333543136, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [7, 5, 7, 1, 2, 8, 4, 2, 7, 4, 3, 3, 7, 0, 6, 1, 2, 3, 9, 7, 2, 5, 4, 5, 8, 5, 4], [2, 2, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303018333543136, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [3, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [62], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.8296813913828283, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20420023798942566, 0.10500594228506088, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [63.91898890904018, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 3, 2, 3, 4, 4], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [7, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, beta), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3122722090447914, 2.3357247672360004, 2.3679330461706387, 2.416257303750841, 2.485310231532403, 2.655985825097383, 3.758864380916222, 4.188309598751532e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.039228636771440506, 0.02285034954547882, 0.01624620333313942, 0.01373662706464529, 0.011623299680650234, 0.04305903986096382, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9924418585641044, 2.0182578223092213, 2.0524475233895436, 2.1042112622942244, 2.1939401626586914, 2.451918397630964, 7.970665522984096, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.004666666500270367, 0.004999999888241291, 0.005333333276212215, 0.00566666666418314, 0.009999999776482582, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [2, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [42], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0], [3, 4, 6], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031111565626308, 2.3015066195220806, 2.3016473487730056, 2.3026998222244255, 2.300371562138745, 2.3033176011979983], "accuracy": [0.0874389111995697, 0.08981640636920929, 0.0936468094587326, 0.09060890227556229, 0.09615638852119446, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [24, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 3, 6, 2, 2], [2, 0, 3, 5, 3, 4], [2], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [79, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 44, 44, 27, 17, 6, 1, 1, 0, 1, 0, 13, 9, 6, 3, 1, 5, 3, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha)))), tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031111565626308, 2.3015066195220806, 2.3016473487730056, 2.3026998222244255, 2.300371562138745, 2.3033176011979983], "accuracy": [0.0874389111995697, 0.08981640636920929, 0.0936468094587326, 0.09060890227556229, 0.09615638852119446, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [2, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [7, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031111565626308, 2.3015066195220806, 2.3016473487730056, 2.3026998222244255, 2.300371562138745, 2.3033176011979983], "accuracy": [0.0874389111995697, 0.08981640636920929, 0.0936468094587326, 0.09060890227556229, 0.09615638852119446, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 8, 3, 9, 7, 5, 5, 4, 5, 4, 5, 5], [2, 0, 2, 1, 0, 1, 1, 0, 1, 2, 0, 2, 0, 3, 2, 0, 2], [40, 99, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [8, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 37, 37, 22, 15, 6, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), alpha), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(grad)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031111565626308, 2.3015066195220806, 2.3016473487730056, 2.3026998222244255, 2.300371562138745, 2.3033176011979983], "accuracy": [0.0874389111995697, 0.08981640636920929, 0.0936468094587326, 0.09060890227556229, 0.09615638852119446, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 7, 1, 4, 8, 5, 2, 0, 4, 3, 2, 7, 2, 6, 1, 2, 3, 3, 6, 8, 9, 4, 5, 8, 4, 5, 4, 5, 5, 2, 9, 9], [0, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 0, 1, 0, 2], [40, 28, 7, 39, 41, 36, 48, 89], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 5, 4, 0, 4, 4, 9, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 1, 5, 5, 0, 5, 4], [42, 53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [21], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 12, 12, 7, 5, 3, 16, 16, 10, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.pow(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031111565626308, 2.3015066195220806, 2.3016473487730056, 2.3026998222244255, 2.300371562138745, 2.3033176011979983], "accuracy": [0.0874389111995697, 0.08981640636920929, 0.0936468094587326, 0.09060890227556229, 0.09615638852119446, 0.09100515395402908], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]