[{"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8122857213020325, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.248720613216853, 1.7216407441192252, 1.1933259475720857, 0.8926618676836843, 0.8098302745327832, 0.7388052305037146, 0.7043342919255827, 0.6739912252022432, 0.6424150033444934, 0.6092763381186351, 0.5856152672840699, 0.5677556916864682, 0.5325528048584096, 0.5172177205279739, 0.5012727855549607, 0.4842440152031288, 0.4719560190301136, 0.46623637563343673, 0.4485667341688542, 0.4373809839945113, 0.41813845492987, 0.41135110019881727, 0.4056852350121933, 0.3934145788978891, 0.38723938039753336, 0.38134876888709346, 0.36857374154770334, 0.3631549608304343, 0.358226609145803, 0.3455348389889696, 0.33836659337582764, 0.32495530149436286, 0.3182290119777471, 0.32237728342183625, 0.30907930864980426, 0.31225287224228954, 0.30337352628532166, 0.2964474940895168, 0.2887272388549954, 0.2771820690236339, 0.2767525478408258, 0.2715677128861908, 0.26391491382082044, 0.2557647624280018], "accuracy": [0.20499274134635925, 0.4497424364089966, 0.5827499628067017, 0.6696605682373047, 0.689869225025177, 0.7157574892044067, 0.7292299270629883, 0.7425703406333923, 0.7478536367416382, 0.7692511081695557, 0.7755910754203796, 0.7825914621353149, 0.7922335267066956, 0.8053097128868103, 0.8070268034934998, 0.8181217908859253, 0.8222163319587708, 0.8257825970649719, 0.834632158279419, 0.8372738361358643, 0.8389908671379089, 0.8418967127799988, 0.8459912538528442, 0.8529917001724243, 0.8540483713150024, 0.8492933511734009, 0.8623695969581604, 0.8598600029945374, 0.8646149635314941, 0.8721436858177185, 0.8729361891746521, 0.8774270415306091, 0.8795403242111206, 0.873860776424408, 0.8862766027450562, 0.8766345381736755, 0.8848236799240112, 0.8861445188522339, 0.8861445188522339, 0.8967111110687256, 0.8899748921394348, 0.8943336606025696, 0.8960506916046143, 0.9022586345672607], "val_loss": [1.7667784690856934, 0.8472802298409599, 0.668066143989563, 0.6216882978166852, 0.5827690873827253, 0.5526244980948312, 0.5370768478938511, 0.5037332092012677, 0.4884367159434727, 0.4676321744918823, 0.45075266701834543, 0.42869209391730173, 0.41231768471854074, 0.4060884714126587, 0.39162170035498484, 0.3906768815858023, 0.37736670460019794, 0.36966625281742643, 0.3712670888219561, 0.35986986330577303, 0.361682048865727, 0.35505597080503193, 0.3504127264022827, 0.3418997015271868, 0.33902376890182495, 0.34063364778246197, 0.3290244085448129, 0.323580128805978, 0.32244488171168734, 0.3223901561328343, 0.3156088760920933, 0.31612673827580046, 0.31848392316273283, 0.3139753597123282, 0.3168600457055228, 0.3155169401850019, 0.31104546785354614, 0.3089831641742161, 0.3121471915926252, 0.3041363273348127, 0.30721990551267353, 0.3088172333581107, 0.3112868070602417, 0.310736928667341], "val_accuracy": [0.42533332109451294, 0.6703333258628845, 0.7133333086967468, 0.7176666855812073, 0.7406666874885559, 0.7400000095367432, 0.7566666603088379, 0.7683333158493042, 0.7796666622161865, 0.7803333401679993, 0.79666668176651, 0.8056666851043701, 0.8146666884422302, 0.8163333535194397, 0.8296666741371155, 0.8303333520889282, 0.8373333215713501, 0.8420000076293945, 0.8389999866485596, 0.8473333120346069, 0.8433333039283752, 0.8446666598320007, 0.8453333377838135, 0.8550000190734863, 0.8556666374206543, 0.8576666712760925, 0.862666666507721, 0.8666666746139526, 0.8666666746139526, 0.8653333187103271, 0.8669999837875366, 0.8690000176429749, 0.8683333396911621, 0.8690000176429749, 0.8700000047683716, 0.8683333396911621, 0.8756666779518127, 0.8769999742507935, 0.8790000081062317, 0.8763333559036255, 0.8759999871253967, 0.8766666650772095, 0.8786666393280029, 0.878333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 99, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8019999861717224, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, beta), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2487205817258245, 1.721647894157316, 1.1930198998514845, 0.8925660496469124, 0.8089098832343059, 0.738892294357261, 0.7047603634275764, 0.6735040952327654, 0.6426122682111264, 0.6104042888427722, 0.5859901367429226, 0.5669825677905714, 0.5339807300850417, 0.516696282098196, 0.5042911738476119, 0.48481217301076096, 0.47490876470621723, 0.46732298147094214, 0.4467698294315608, 0.4364865276957106, 0.4166566629167939, 0.41213673431529124, 0.40055768432523975, 0.39164358502239865, 0.3861159723409021, 0.37883305845637255, 0.36603008708414103, 0.36061029990965493, 0.3527066070311389, 0.3415980380421632, 0.3338116472344656, 0.3235974227196473, 0.3157295489733198, 0.3208606746399549, 0.30704120504164883, 0.30832853989672937, 0.3006465310382648, 0.2947406491795866, 0.28406517975413176, 0.2746393876446709, 0.27186937944496375, 0.2614199198736192, 0.26237447124273233, 0.25183638668157926, 0.24592082924169556, 0.2438198588193132, 0.23668441800724135, 0.23700222349587274, 0.2311331556339652, 0.22810097950804803, 0.22400796070366236, 0.2229240091938022, 0.22152656847184218, 0.21354611386058983, 0.20637860732614843], "accuracy": [0.20499274134635925, 0.4497424364089966, 0.5822216272354126, 0.6707172393798828, 0.6892088055610657, 0.7164179086685181, 0.7301545143127441, 0.7456082701683044, 0.7470611333847046, 0.7687227725982666, 0.7750627398490906, 0.7854973077774048, 0.791969358921051, 0.8045172095298767, 0.8067626357078552, 0.8195747137069702, 0.8206313848495483, 0.8239334225654602, 0.8338396549224854, 0.8355567455291748, 0.8408400416374207, 0.8428213000297546, 0.8498216867446899, 0.8543124794960022, 0.8557654023170471, 0.8536521196365356, 0.8610487580299377, 0.8619733452796936, 0.8714832663536072, 0.8702945709228516, 0.8775591254234314, 0.8753136992454529, 0.8815215826034546, 0.878879964351654, 0.887201189994812, 0.880729079246521, 0.8873332738876343, 0.8845595121383667, 0.8882578015327454, 0.8981640338897705, 0.8928807377815247, 0.8985602855682373, 0.8963148593902588, 0.9027869701385498, 0.902390718460083, 0.9037115573883057, 0.9066173434257507, 0.910711944103241, 0.9051644206047058, 0.9096552729606628, 0.9097873568534851, 0.9105798602104187, 0.9145423173904419, 0.9128252267837524, 0.919561505317688], "val_loss": [1.7667784009660994, 0.8472812686647687, 0.6677508865083966, 0.6222986493791852, 0.5819692781993321, 0.5531584024429321, 0.5374675137656075, 0.5037850141525269, 0.48993754386901855, 0.4695734296526228, 0.4507582868848528, 0.4280646187918527, 0.41102975606918335, 0.4046904870441982, 0.39003136328288485, 0.38945200613566805, 0.3781504545892988, 0.369639984198979, 0.3705588664327349, 0.35986171449933735, 0.3593995145389012, 0.3515807219914028, 0.35305048738207134, 0.34646105766296387, 0.3429170846939087, 0.34096934114183697, 0.33424573285239084, 0.3263563598905291, 0.3224645597594125, 0.3225127288273403, 0.31614785534994944, 0.31294270924159456, 0.3131176744188581, 0.3139052816799709, 0.318315327167511, 0.3167870896203177, 0.3096926382609776, 0.30744012764522005, 0.3133386969566345, 0.30748082058770315, 0.3032663038798741, 0.3053544248853411, 0.31028356722423006, 0.30845944370542255, 0.30987153734479633, 0.31290199926921297, 0.30829758303506033, 0.31157166617257254, 0.3068234920501709, 0.31639476333345684, 0.3161303400993347, 0.3154390794890268, 0.31126471928187777, 0.3226965240069798, 0.32433762720652987], "val_accuracy": [0.42533332109451294, 0.6703333258628845, 0.7123333215713501, 0.7173333168029785, 0.7409999966621399, 0.7429999709129333, 0.7570000290870667, 0.768666684627533, 0.7786666750907898, 0.7770000100135803, 0.7973333597183228, 0.8066666722297668, 0.8166666626930237, 0.8166666626930237, 0.8286666870117188, 0.8293333053588867, 0.8373333215713501, 0.8426666855812073, 0.8389999866485596, 0.8479999899864197, 0.8476666808128357, 0.8503333330154419, 0.8463333249092102, 0.8510000109672546, 0.8513333201408386, 0.8603333234786987, 0.8613333106040955, 0.8646666407585144, 0.8663333058357239, 0.8616666793823242, 0.8663333058357239, 0.8669999837875366, 0.8693333268165588, 0.8679999709129333, 0.8676666617393494, 0.871999979019165, 0.8733333349227905, 0.8743333220481873, 0.8756666779518127, 0.8776666522026062, 0.8769999742507935, 0.878333330154419, 0.8743333220481873, 0.8793333172798157, 0.878333330154419, 0.8809999823570251, 0.8756666779518127, 0.8816666603088379, 0.8816666603088379, 0.8833333253860474, 0.8799999952316284, 0.8790000081062317, 0.8806666731834412, 0.8813333511352539, 0.8803333044052124]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 5, 0, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 1, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [30, 66, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.75, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2974656615133187, 2.287876255271961, 2.2798220301663257, 2.2699707647466454, 2.2601771509296245, 2.247753949323429, 2.237769216767486, 2.2242043564080594, 2.208958373518825, 2.192969679848204, 2.17291229707438, 2.1550026970957687, 2.134320269612242, 2.1085951935424623, 2.0796760340030436, 2.0457822752823964, 2.011245790395156, 1.9747073968104587, 1.934007056857522, 1.893379222809788, 1.8387212685590186, 1.793395009495563, 1.7421106934909572, 1.6986031429154478, 1.6537174846927298, 1.607182452392427, 1.5598005583226138, 1.513475833725164, 1.4730915201338544, 1.4514254422440362, 1.4018263590412998, 1.3755552337437635, 1.3419149685151637, 1.3158231115202625, 1.2906827951198745, 1.2715056691077156, 1.2558605926163744, 1.2367819316981412, 1.208118620014556, 1.1865686177105212, 1.1720345609018974, 1.1530261020996724, 1.1366559843644806, 1.1273682121241082, 1.1177215092942039, 1.0980920633698468, 1.088111920284951, 1.0803382320489707, 1.071859907039546, 1.0552200355298011, 1.046287722056017, 1.0250612115815898, 1.0229382407254295, 1.0148029266142526, 1.0153834848922902, 0.9973436140853494, 0.9817391904495364, 0.9737360294090994, 0.9840136335321531, 0.9718381867054793, 0.9553794418863254, 0.9550939783554319, 0.9462229283793475, 0.9354425888602539, 0.9402225226805494, 0.9328937157427615, 0.9374190565853575, 0.9181776151854238, 0.9104915990600843, 0.9147652103569939, 0.901141081204614, 0.8964887184788759, 0.8966950393387544, 0.8912409020216552, 0.8896677234956633, 0.8873256322588383, 0.8780009717501039, 0.8794626837566528, 0.8763306123264683, 0.8593192975818048, 0.8701313778929282, 0.8758658532453266, 0.8639847897755834, 0.8639152653150239, 0.8571554624944583, 0.845922210252422, 0.8496089932657488, 0.844761662235381, 0.8375100543816737, 0.836074726653373, 0.8319428727028786, 0.8268006108991537, 0.8322154340443594, 0.8274978153253071], "accuracy": [0.10038304328918457, 0.13115836679935455, 0.15255580842494965, 0.17514199018478394, 0.20221899449825287, 0.23180557787418365, 0.24778760969638824, 0.2715625464916229, 0.29362040758132935, 0.31726324558258057, 0.33747193217277527, 0.35001981258392334, 0.3541143834590912, 0.3789459764957428, 0.38304054737091064, 0.39823007583618164, 0.41143837571144104, 0.4150046110153198, 0.43323206901550293, 0.4348170757293701, 0.4504028558731079, 0.4637432396411896, 0.4721965491771698, 0.4753665328025818, 0.4854048490524292, 0.4885748326778412, 0.5062739253044128, 0.5139347314834595, 0.5284639000892639, 0.5209351181983948, 0.5386342406272888, 0.5437855124473572, 0.5453705191612244, 0.5547483563423157, 0.5605600476264954, 0.566239595413208, 0.5721833109855652, 0.5744287371635437, 0.5801082849502563, 0.5900145173072815, 0.594241201877594, 0.6037511825561523, 0.6036190986633301, 0.607449471950531, 0.613789439201355, 0.6140536069869995, 0.6127327680587769, 0.6225069165229797, 0.6248844265937805, 0.6272619366645813, 0.6371681690216064, 0.6380926966667175, 0.6341302394866943, 0.6431118845939636, 0.635451078414917, 0.6510368585586548, 0.6522256135940552, 0.6606789231300354, 0.6518293619155884, 0.6556597352027893, 0.6606789231300354, 0.6602826714515686, 0.6606789231300354, 0.6635847091674805, 0.6670188903808594, 0.666358470916748, 0.6627922058105469, 0.6709813475608826, 0.6745476126670837, 0.6741513609886169, 0.6741513609886169, 0.6748117804527283, 0.6774534583091736, 0.6800950765609741, 0.6795667409896851, 0.689869225025177, 0.6876237988471985, 0.6888125538825989, 0.6866992712020874, 0.6860388517379761, 0.6910579800605774, 0.6863030195236206, 0.6866992712020874, 0.6907938122749329, 0.6929071545600891, 0.6955488324165344, 0.6935675740242004, 0.6934354901313782, 0.7018887996673584, 0.7003037929534912, 0.700700044631958, 0.7036058902740479, 0.6988508701324463, 0.703209638595581], "val_loss": [1.961855139051165, 1.952770505632673, 1.9435996328081404, 1.9341456549508231, 1.9241952214922224, 1.9133785792759486, 1.9017212050301688, 1.8888611793518066, 1.8744501386369978, 1.8583034106663294, 1.8398333958217077, 1.8191980634416853, 1.796130793435233, 1.7703563145228796, 1.7414830071585519, 1.7092622007642473, 1.674081529889788, 1.6356046540396554, 1.59401307787214, 1.5499084336417062, 1.5029762131827218, 1.4544501985822404, 1.4049723488943917, 1.355912242616926, 1.3075811181749617, 1.2600937570844377, 1.214930636542184, 1.1714252403804235, 1.1307288919176375, 1.0942724432264055, 1.060032946722848, 1.027745008468628, 0.9984963280814034, 0.9714967863900321, 0.9480011463165283, 0.9252312523978097, 0.9058957099914551, 0.8871317250388009, 0.8693824665887016, 0.8526787757873535, 0.8378948995045253, 0.8235253265925816, 0.8106426341193063, 0.7985694408416748, 0.7875415938241142, 0.7774466446467808, 0.7674079963139125, 0.7582677262169975, 0.7504774672644479, 0.7427499123982021, 0.7347618852342878, 0.7271416868482318, 0.7198748418263027, 0.7135593550545829, 0.7079667704445975, 0.7021980455943516, 0.6961513757705688, 0.6904525416237968, 0.6858071940285819, 0.6814258950097221, 0.6768565859113421, 0.6721231937408447, 0.6679855755397252, 0.6631944349833897, 0.6599922691072736, 0.6557269947869437, 0.6526924542018345, 0.6485268899372646, 0.6448560101645333, 0.6423518317086356, 0.6387029205049787, 0.6354805060795375, 0.6322075469153268, 0.6297866787229266, 0.6273869105747768, 0.6240320035389492, 0.6214588539940971, 0.6192589827946254, 0.6169097764151437, 0.6141642842973981, 0.6112616743360247, 0.6095652069364276, 0.6075019495827811, 0.604974525315421, 0.603415880884443, 0.6015108142580304, 0.5994095121111188, 0.5971620593752179, 0.5951685905456543, 0.5926552500043597, 0.5904220683234078, 0.5892057589122227, 0.5875310727528164, 0.5858199085508075], "val_accuracy": [0.10233332961797714, 0.19566667079925537, 0.27133333683013916, 0.3310000002384186, 0.36666667461395264, 0.3856666684150696, 0.4036666750907898, 0.4206666648387909, 0.43700000643730164, 0.4476666748523712, 0.4606666564941406, 0.4753333330154419, 0.4886666536331177, 0.5026666522026062, 0.518666684627533, 0.5299999713897705, 0.5393333435058594, 0.5523333549499512, 0.5580000281333923, 0.5666666626930237, 0.5756666660308838, 0.5823333263397217, 0.5883333086967468, 0.5950000286102295, 0.5979999899864197, 0.609666645526886, 0.6159999966621399, 0.6269999742507935, 0.640999972820282, 0.6543333530426025, 0.6596666574478149, 0.6653333306312561, 0.6713333129882812, 0.6746666431427002, 0.6766666769981384, 0.6809999942779541, 0.6836666464805603, 0.6880000233650208, 0.690666675567627, 0.6949999928474426, 0.6970000267028809, 0.6986666917800903, 0.7003333568572998, 0.7020000219345093, 0.7023333311080933, 0.70333331823349, 0.706333339214325, 0.7089999914169312, 0.7110000252723694, 0.7123333215713501, 0.7149999737739563, 0.7179999947547913, 0.7183333039283752, 0.7166666388511658, 0.7200000286102295, 0.7229999899864197, 0.7206666469573975, 0.7260000109672546, 0.7256666421890259, 0.7263333201408386, 0.7293333411216736, 0.7276666760444641, 0.7296666502952576, 0.7296666502952576, 0.7319999933242798, 0.7319999933242798, 0.7323333621025085, 0.7310000061988831, 0.731333315372467, 0.7310000061988831, 0.734333336353302, 0.7356666922569275, 0.7360000014305115, 0.737666666507721, 0.7360000014305115, 0.7360000014305115, 0.7383333444595337, 0.7390000224113464, 0.7393333315849304, 0.7429999709129333, 0.7436666488647461, 0.7433333396911621, 0.7443333268165588, 0.7446666955947876, 0.7436666488647461, 0.7446666955947876, 0.7453333139419556, 0.7486666440963745, 0.7523333430290222, 0.7480000257492065, 0.750333309173584, 0.7516666650772095, 0.7513333559036255, 0.750333309173584]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 2, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [47637239476.77371, 6821476754389.3955, 119853598278501.95, 832120002830962.5, 3665768897075247.5, 1.179202817642874e+16], "accuracy": [0.09985470771789551, 0.0956280529499054, 0.09919429570436478, 0.09602430462837219, 0.09853387624025345, 0.10381719470024109], "val_loss": [381854744576.0, 20585091582244.57, 220950685848137.16, 1204525763994770.2, 4513470382566839.0, 1.3314979972101852e+16], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [4, 5, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024764359194165, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [88, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 5, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [5, 7, 1, 4, 3, 4], [44], [1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [21, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [7, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309367321454271, 2.3669983455454906, 2.558372916231822, 4.017481071349731, 1164.6086662049622, 7.527916488792596e+28, 2.309474100730895, 2.3167668774206374, 2.330586953075602, 2.3521788871645724], "accuracy": [0.07370228320360184, 0.026680756360292435, 0.008189142681658268, 0.00977413821965456, 0.046625278890132904, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9993738446916853, 2.092184543609619, 2.43443386895316, 8.198654992239815, 888784073.1428572, 1.9773599079677038, 1.9827941485813685, 1.9920943123953683, 2.007388114929199, 2.0335865020751953], "val_accuracy": [0.00566666666418314, 0.004333333112299442, 0.00566666666418314, 0.01366666704416275, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [6, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 5, 3, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [96, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025554334955163, 2.32005791427311, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.08426892012357712, 0.08796724677085876, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9755612782069616, 2.0084421975272044, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.015666667371988297, 0.07999999821186066, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [65, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 73, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 3, 4, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.1856819817166775, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15281997621059418, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.002765723637172, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 7, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 4, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.09399999678134918, "mapping_values": [1, 5, 5, 2, 3, 0, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), grad)), alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3009827111485675, 2.3003895207166893, 2.302694672590958, 2.3026799670992717, 2.30296308243862, 2.303656122168341, 2.3047072799245774, 2.3084405151576792], "accuracy": [0.09298639744520187, 0.09272222965955734, 0.10711926966905594, 0.10157178342342377, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970583711351667, 1.9726730755397253, 1.9737657138279505, 1.9741676875523158, 1.9747799464634486, 1.9756471770150321, 1.977837153843471, 1.9837861061096191], "val_accuracy": [0.08366666734218597, 0.09333333373069763, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 1, 3, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [48, 15, 37, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30145062661489, 2.3015951803567907, 2.303271061015907, 2.303154722637488, 2.303500605895456, 2.3023303511781683], "accuracy": [0.09113723784685135, 0.09615638852119446, 0.09113723784685135, 0.09087307006120682, 0.08545766770839691, 0.09021265059709549], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [96, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 11, 8, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), grad)), alpha))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30145062661489, 2.3015951803567907, 2.303271061015907, 2.303154722637488, 2.303500605895456, 2.3023303511781683], "accuracy": [0.09113723784685135, 0.09615638852119446, 0.09113723784685135, 0.09087307006120682, 0.08545766770839691, 0.09021265059709549], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30145062661489, 2.3015951803567907, 2.303271061015907, 2.303154722637488, 2.303500605895456, 2.3023303511781683], "accuracy": [0.09113723784685135, 0.09615638852119446, 0.09113723784685135, 0.09087307006120682, 0.08545766770839691, 0.09021265059709549], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 7, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [3, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30145062661489, 2.3015951803567907, 2.303271061015907, 2.303154722637488, 2.303500605895456, 2.3023303511781683], "accuracy": [0.09113723784685135, 0.09615638852119446, 0.09113723784685135, 0.09087307006120682, 0.08545766770839691, 0.09021265059709549], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 5, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 0, 26, 26, 15, 11, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), grad)))), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30145062661489, 2.3015951803567907, 2.303271061015907, 2.303154722637488, 2.303937977457154, 2.304324606768349], "accuracy": [0.09113723784685135, 0.09615638852119446, 0.09113723784685135, 0.09087307006120682, 0.08466517180204391, 0.08809932321310043], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9728520938328333, 1.9728520938328333], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 6, 2, 5, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 0, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301448814022763, 2.3015886219406583, 2.3032564235763338, 2.3031347899499304, 2.3034711141061033, 2.302299572728361, 2.3032122902220835, 2.3028290078089206, 2.302040521919987], "accuracy": [0.09100515395402908, 0.09615638852119446, 0.09100515395402908, 0.09087307006120682, 0.08532558381557465, 0.09008057415485382, 0.0886276587843895, 0.09245806187391281, 0.08836349099874496], "val_loss": [1.971003191811698, 1.9709991727556502, 1.970993995666504, 1.97098970413208, 1.970984731401716, 1.9709807804652624, 1.9709758758544922, 1.9709713799612862, 1.9709665434701102], "val_accuracy": [0.03700000047683716, 0.03733333200216293, 0.03733333200216293, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 3, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 5, 3, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30145062661489, 2.3015951803567907, 2.303271061015907, 2.303154722637488, 2.303500605895456, 2.3023303511781683], "accuracy": [0.09113723784685135, 0.09615638852119446, 0.09113723784685135, 0.09087307006120682, 0.08545766770839691, 0.09021265059709549], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 2, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [23, 15, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.03457142785191536, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014505951238613, 2.301596511923453, 2.3032773864299174, 2.3031774123646187, 2.303555345711628, 2.3024397455328067, 2.303434645416336, 2.303246228828123, 2.302632960912936, 2.3025943752387574, 2.3029994929014745, 2.3045845681083295], "accuracy": [0.09113723784685135, 0.09615638852119446, 0.09087307006120682, 0.09074098616838455, 0.08545766770839691, 0.09021265059709549, 0.08770307898521423, 0.09219389408826828, 0.0882314071059227, 0.0886276587843895, 0.09140139818191528, 0.09259014576673508], "val_loss": [1.9710070746285575, 1.971010616847447, 1.971020085471017, 1.9710403169904436, 1.9710837772914342, 1.9711562565394811, 1.9712803704398019, 1.9714691298348563, 1.9717470577784948, 1.9721296855381556, 1.9726336342947823, 1.9732283183506556], "val_accuracy": [0.03700000047683716, 0.03733333200216293, 0.03733333200216293, 0.03700000047683716, 0.03733333200216293, 0.03799999877810478, 0.039000000804662704, 0.03866666555404663, 0.03799999877810478, 0.036666665226221085, 0.033666666597127914, 0.030666666105389595]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [23, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 5, 3, 0, 1, 4, 2, 8, 3, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [65, 15, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.011714286170899868, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.305508412799626, 2.316044263332086, 2.3291942296703936, 2.3412908784402533, 2.355870877621023, 2.37057485062102], "accuracy": [0.08347642421722412, 0.06551314145326614, 0.04860652610659599, 0.03988904878497124, 0.029058247804641724, 0.023114515468478203], "val_loss": [1.9804237910679408, 1.9904583522251673, 2.0014525822230746, 2.013493742261614, 2.0271476336887906, 2.042787415640695], "val_accuracy": [0.013000000268220901, 0.007666666526347399, 0.005333333276212215, 0.004333333112299442, 0.004000000189989805, 0.004000000189989805]}}]