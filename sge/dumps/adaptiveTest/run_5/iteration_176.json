[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 3, 2, 9, 3, 4, 7, 0, 2, 1, 2, 3, 9, 5, 6, 2, 3, 5, 8, 4, 5, 4, 6, 4], [2, 0, 2, 0, 0, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 1, 1], [70, 83, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7911428809165955, "mapping_values": [1, 50, 50, 30, 20, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(grad, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), alpha), tf.math.square(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(grad))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.pow(alpha, grad)), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, alpha))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2822964594836845, 2.23207906973817, 2.149896756674651, 2.0154423085595514, 1.8158413322452762, 1.5985211158992276, 1.4246350951466216, 1.2834814435628585, 1.1938138208243163, 1.1126328004963757, 1.0585846638304761, 1.0099896448100358, 0.9696539635702981, 0.9462544146608824, 0.9203337750194284, 0.8990753886249669, 0.8809431930889527, 0.8646127651191549, 0.8541179108046553, 0.8363469238325967, 0.8213944126901185, 0.8093617495182341, 0.7897908820719877, 0.7940191210945915, 0.7824646317884828, 0.7662775918335537, 0.7706243884231215, 0.7597798488442735, 0.7406823943555946, 0.7348982274351245, 0.7320225853977297, 0.7373905149527733, 0.7234807598230278, 0.7215514128250043, 0.7179392368691772, 0.7034347756758279, 0.7001630879112947, 0.6998089848571151, 0.6878146771914797, 0.6916004566389887, 0.6881971954984467, 0.6838851094545075, 0.6863534862984756, 0.6727229074291219, 0.668463885917986, 0.6635245098933537, 0.6665063770125019, 0.6612617132009029, 0.6587775971013731, 0.6580563826158519, 0.645769486715765, 0.6429444792846631, 0.6440756172473169, 0.6456813386418422, 0.6428532250458774, 0.6369490899414261, 0.6273749278300569, 0.6306953201708367, 0.6275172600452028, 0.6246020222903715, 0.6160722512768055, 0.6282246135733209, 0.6207720982856786, 0.6118044010982884, 0.6146455463669036, 0.6099768457096549, 0.6057432675956814, 0.6069943970141867], "accuracy": [0.14119666814804077, 0.2608638107776642, 0.3407739996910095, 0.40549466013908386, 0.4551578462123871, 0.49266940355300903, 0.528992235660553, 0.5650508403778076, 0.5880332589149475, 0.6136573553085327, 0.6248844265937805, 0.6435081362724304, 0.6571126580238342, 0.6583014130592346, 0.6682076454162598, 0.6760005354881287, 0.6872276067733765, 0.6847180128097534, 0.6951525807380676, 0.6973979473114014, 0.7077004313468933, 0.7098137736320496, 0.7111346125602722, 0.7083608508110046, 0.7147008180618286, 0.720380425453186, 0.722757875919342, 0.7213049530982971, 0.7297582626342773, 0.7372870445251465, 0.7289658188819885, 0.7351737022399902, 0.7351737022399902, 0.7364945411682129, 0.7339849472045898, 0.7400607466697693, 0.7423061728477478, 0.7461365461349487, 0.7432307600975037, 0.7456082701683044, 0.746268630027771, 0.7478536367416382, 0.748778223991394, 0.7486461400985718, 0.7534011602401733, 0.7535332441329956, 0.7574957013130188, 0.7555144429206848, 0.7621186375617981, 0.7609298825263977, 0.76106196641922, 0.7604015469551086, 0.7626469135284424, 0.7651565074920654, 0.7648923397064209, 0.7668735980987549, 0.7648923397064209, 0.770439863204956, 0.7663452625274658, 0.7663452625274658, 0.7758552432060242, 0.7670056819915771, 0.7729493975639343, 0.7753269076347351, 0.7753269076347351, 0.7803460359573364, 0.7799497842788696, 0.778232753276825], "val_loss": [1.9263555662972587, 1.8662498337881905, 1.7624267169407435, 1.5936218329838343, 1.367811816079276, 1.1520915712629045, 0.9940341540745327, 0.8871527739933559, 0.8167325258255005, 0.7629801034927368, 0.7253646509987968, 0.7001566886901855, 0.676424333027431, 0.6534710781914848, 0.6410352672849383, 0.6299968957901001, 0.6151242596762521, 0.6053870916366577, 0.6008724655423846, 0.5926316635949271, 0.5785916362489972, 0.5755094289779663, 0.5690645490373883, 0.559744153703962, 0.5566466195242745, 0.5494334357125419, 0.5433785234178815, 0.5393630947385516, 0.5360968283244542, 0.5306982823780605, 0.5375182117734637, 0.5214084386825562, 0.519423246383667, 0.5164417028427124, 0.5130234786442348, 0.5104925462177822, 0.5063191822596959, 0.5033041919980731, 0.5022564956120082, 0.5006899152483258, 0.503383823803493, 0.4954324449811663, 0.4926447187151228, 0.48989113739558626, 0.4856541667665754, 0.4845437152045114, 0.4830157927104405, 0.48096862861088346, 0.48005623476845877, 0.48107162543705534, 0.48001398359026226, 0.46990019934517996, 0.4726212535585676, 0.47671094962528776, 0.4674566984176636, 0.4660786730902536, 0.46467411518096924, 0.46321747984204975, 0.4636634077344622, 0.4588595799037388, 0.45880729811532156, 0.4608222927365984, 0.4595440455845424, 0.4573952981403896, 0.45470731598990305, 0.45378502777644564, 0.4502667358943394, 0.45095598697662354], "val_accuracy": [0.3606666624546051, 0.44200000166893005, 0.5063333511352539, 0.5563333630561829, 0.5856666564941406, 0.6456666588783264, 0.6589999794960022, 0.6909999847412109, 0.6986666917800903, 0.70333331823349, 0.7133333086967468, 0.7236666679382324, 0.7163333296775818, 0.7279999852180481, 0.7293333411216736, 0.7263333201408386, 0.7413333058357239, 0.7419999837875366, 0.7326666712760925, 0.7369999885559082, 0.7523333430290222, 0.7546666860580444, 0.7583333253860474, 0.762666642665863, 0.7570000290870667, 0.7639999985694885, 0.7673333287239075, 0.7639999985694885, 0.7649999856948853, 0.7683333158493042, 0.753333330154419, 0.777999997138977, 0.7770000100135803, 0.7713333368301392, 0.7743333578109741, 0.7746666669845581, 0.778333306312561, 0.7806666493415833, 0.7863333225250244, 0.7796666622161865, 0.7749999761581421, 0.7803333401679993, 0.7903333306312561, 0.7846666574478149, 0.7906666398048401, 0.7913333177566528, 0.7879999876022339, 0.7956666946411133, 0.7816666960716248, 0.7886666655540466, 0.7956666946411133, 0.7940000295639038, 0.7996666431427002, 0.7866666913032532, 0.793666660785675, 0.7973333597183228, 0.8036666512489319, 0.7933333516120911, 0.7973333597183228, 0.8040000200271606, 0.7990000247955322, 0.8059999942779541, 0.8086666464805603, 0.7933333516120911, 0.793666660785675, 0.7990000247955322, 0.8059999942779541, 0.8023333549499512]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 4, 3, 1, 2, 9, 5, 8, 2, 4, 3, 9, 7, 0, 3, 6, 8, 3, 2, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 0, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 21, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7722856998443604, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2822964415023073, 2.2320782150086664, 2.1498946197564184, 2.0154372189007477, 1.8158428254081524, 1.5985128613447925, 1.4246497807202323, 1.2834801137754395, 1.1938527875714346, 1.1126415977042192, 1.0586633455515568, 1.010002865468223, 0.9697018253049043, 0.9462465124753141, 0.920355907638768, 0.8992190100749596, 0.8808592851088582, 0.8647427410733636, 0.8543539856403196, 0.8359703742250113, 0.8216858661217287, 0.809485243981021, 0.789677330830692, 0.7938110077889714, 0.782642031500069, 0.7661973118010513, 0.7706688664624278, 0.7594633757430391, 0.7408246506065064, 0.7352048431357939, 0.7319747931795696, 0.7375131616455736, 0.7232875063466264, 0.7212946311342024, 0.7180383504736048, 0.7035401540031806, 0.7002923530027646], "accuracy": [0.14119666814804077, 0.2608638107776642, 0.340509831905365, 0.40562674403190613, 0.45528993010520935, 0.49266940355300903, 0.528992235660553, 0.5651829242706299, 0.5884295105934143, 0.6136573553085327, 0.6244881749153137, 0.6436402201652527, 0.656980574131012, 0.658961832523346, 0.668339729309082, 0.6753401160240173, 0.6870955228805542, 0.6851142644882202, 0.694360077381134, 0.6975300312042236, 0.7083608508110046, 0.7100779414176941, 0.709549605846405, 0.7087571024894714, 0.7135120630264282, 0.720380425453186, 0.7224937081336975, 0.7206445932388306, 0.7288337349891663, 0.7367587089538574, 0.7297582626342773, 0.7349095344543457, 0.7354378700256348, 0.7367587089538574, 0.7346453666687012, 0.7401928305625916, 0.7416457533836365], "val_loss": [1.9263556344168526, 1.8662479264395577, 1.7624306678771973, 1.5936188357216972, 1.3678185939788818, 1.1521098613739014, 0.9940624577658517, 0.8872208595275879, 0.8167340585163662, 0.7629783494131905, 0.7254109723227364, 0.7001336812973022, 0.6763840913772583, 0.6535884482519967, 0.6410878385816302, 0.629913296018328, 0.6154687745230538, 0.6057744877679008, 0.6007865837642125, 0.5928182601928711, 0.5786501169204712, 0.5758433512278965, 0.569003803389413, 0.5598341056278774, 0.5564759288515363, 0.5491719756807599, 0.5433233465467181, 0.5393283196857998, 0.5364224399839129, 0.5307750020708356, 0.5377663714545113, 0.5213368109294346, 0.5195162125996181, 0.5166798319135394, 0.512585963521685, 0.5111649887902396, 0.5067487103598458], "val_accuracy": [0.3606666624546051, 0.44200000166893005, 0.5059999823570251, 0.5563333630561829, 0.5856666564941406, 0.6449999809265137, 0.6586666703224182, 0.6909999847412109, 0.6983333230018616, 0.70333331823349, 0.7129999995231628, 0.7229999899864197, 0.715666651725769, 0.7283333539962769, 0.7300000190734863, 0.7273333072662354, 0.7413333058357239, 0.7419999837875366, 0.7333333492279053, 0.7363333106040955, 0.7519999742507935, 0.7546666860580444, 0.7596666812896729, 0.762666642665863, 0.7580000162124634, 0.7643333077430725, 0.7676666378974915, 0.7643333077430725, 0.7643333077430725, 0.768666684627533, 0.753333330154419, 0.7793333530426025, 0.7773333191871643, 0.7716666460037231, 0.7743333578109741, 0.7739999890327454, 0.778333306312561]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [8, 4, 3, 1, 2, 9, 5, 8, 2, 4, 3, 9, 7, 0, 3, 6, 8, 3, 2, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 0, 2, 2, 1, 0, 2, 1, 2, 3, 1], [71, 83, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7720000147819519, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2822964909747134, 2.2320824880893473, 2.1499037471162077, 2.015480981715808, 1.8159847581832165, 1.5986051874673441, 1.4246673131773202, 1.2835123777987856, 1.1938856283844643, 1.112622424737731, 1.0586373948811572, 1.0100437046876594, 0.9697570042792186, 0.9462991220965881, 0.9203772213260306, 0.8991060626583959, 0.8808207284221717, 0.8647350495627779, 0.8543393086637598, 0.8363588275910684, 0.821586230348807, 0.8094734736342928, 0.7899093945989079, 0.7941857449461394, 0.7826273097117752, 0.7663138648695588, 0.7705796046531621, 0.7597916096570926, 0.7408783999825859, 0.7351176507437407, 0.7322518483538433, 0.7375803501960891, 0.7234942075157871, 0.7216105727455981, 0.7180339416587168, 0.703593587595096, 0.7005255930789978], "accuracy": [0.14119666814804077, 0.2607317268848419, 0.340509831905365, 0.40549466013908386, 0.454629510641098, 0.4924052357673645, 0.529388427734375, 0.5653150081634521, 0.588297426700592, 0.6136573553085327, 0.624620258808136, 0.6440364718437195, 0.6572447419166565, 0.6579051613807678, 0.6687359809875488, 0.6762647032737732, 0.6869634389877319, 0.6851142644882202, 0.6952846646308899, 0.6980583667755127, 0.7092854380607605, 0.7096816897392273, 0.7108704447746277, 0.7074362635612488, 0.7145687341690063, 0.7197200059890747, 0.7219653725624084, 0.7211728692054749, 0.7298903465270996, 0.7366266250610352, 0.7277770638465881, 0.7346453666687012, 0.7353057861328125, 0.7366266250610352, 0.7341170310974121, 0.739928662776947, 0.7425703406333923], "val_loss": [1.9263567243303572, 1.8662536484854562, 1.7624492645263672, 1.5937283039093018, 1.367929424558367, 1.152118103844779, 0.994103125163487, 0.8872007301875523, 0.816714985030038, 0.7629338332584926, 0.7253689936229161, 0.7001412766320365, 0.6765199559075492, 0.6534569944654193, 0.6410538979939052, 0.6299161740711757, 0.6153573138373238, 0.6054104907172067, 0.601016640663147, 0.5929040908813477, 0.5788172313145229, 0.5757472685405186, 0.5691247837884086, 0.5601531948362078, 0.5567444903509957, 0.5494187218802316, 0.5434850454330444, 0.5393225295203072, 0.5361828633717128, 0.5305295842034476, 0.5374729292733329, 0.5214500256947109, 0.5194988250732422, 0.5166230882917132, 0.512982896396092, 0.5106658935546875, 0.5065063238143921], "val_accuracy": [0.3606666624546051, 0.44200000166893005, 0.5056666731834412, 0.5563333630561829, 0.5856666564941406, 0.6449999809265137, 0.6589999794960022, 0.690666675567627, 0.6983333230018616, 0.70333331823349, 0.7126666903495789, 0.7229999899864197, 0.7160000205039978, 0.7276666760444641, 0.7293333411216736, 0.7269999980926514, 0.7419999837875366, 0.7419999837875366, 0.7329999804496765, 0.7366666793823242, 0.7526666522026062, 0.7540000081062317, 0.7586666941642761, 0.7616666555404663, 0.7570000290870667, 0.7643333077430725, 0.7673333287239075, 0.765333354473114, 0.7643333077430725, 0.768666684627533, 0.7540000081062317, 0.7793333530426025, 0.7770000100135803, 0.7713333368301392, 0.7730000019073486, 0.7749999761581421, 0.778333306312561]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 2, 2, 6, 1, 3, 2, 4, 3, 4, 7, 2, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 21, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5445713996887207, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0360493551644003, 1.1370077772997689, 0.8508280412616385, 0.7794133291945498, 0.6972227503028071, 0.657214559308605, 0.6178311917996284, 0.5905640936719743, 0.5753215260635419, 0.5474801478116992, 0.5170385820510413, 0.5027561729704746, 0.48877760607726095, 0.47545724531694444, 0.46685411261372234, 0.45050519142310225, 0.44956957816038434, 0.44126692965376757, 0.4259075536082024, 0.4174510823768663, 0.42941043125702927, 0.44973108474336926, 0.4328073337526527, 0.44164064826509974, 0.447368857697914, 0.44692860687208874, 0.4980026637211987, 0.5543017112788365], "accuracy": [0.3039228618144989, 0.5996565818786621, 0.6808875799179077, 0.7009642124176025, 0.7309470176696777, 0.7578919529914856, 0.7724210619926453, 0.7734777331352234, 0.7835160493850708, 0.7967243194580078, 0.8029322624206543, 0.8146876096725464, 0.8115176558494568, 0.8210275769233704, 0.8198388814926147, 0.8252542614936829, 0.8256505131721497, 0.8302733898162842, 0.8339717388153076, 0.8342359066009521, 0.833179235458374, 0.8358209133148193, 0.8304054737091064, 0.8297450542449951, 0.8290846943855286, 0.8253863453865051, 0.8182538747787476, 0.8148196935653687], "val_loss": [0.9262784208570208, 0.6713320527757917, 0.5944398811885289, 0.5198696511132377, 0.4867838280541556, 0.4542377165385655, 0.4370123658861433, 0.4339141164507185, 0.4271301456860134, 0.41522579533713205, 0.4128236174583435, 0.40102275780269075, 0.39537109647478375, 0.3992713349206107, 0.3829871841839382, 0.3922186408724104, 0.3807166814804077, 0.4178960493632725, 0.393122204712459, 0.448091949735369, 0.4143607531275068, 0.40401339530944824, 0.4243031655039106, 0.4361988050597055, 0.4417906829289028, 0.41189071110316683, 0.5043007475989205, 0.5748869350978306], "val_accuracy": [0.6086666584014893, 0.7139999866485596, 0.7360000014305115, 0.7596666812896729, 0.7829999923706055, 0.8059999942779541, 0.8069999814033508, 0.8076666593551636, 0.8136666417121887, 0.8306666612625122, 0.8293333053588867, 0.8343333601951599, 0.8429999947547913, 0.8413333296775818, 0.8453333377838135, 0.8493333458900452, 0.8486666679382324, 0.8399999737739563, 0.8443333506584167, 0.8513333201408386, 0.8510000109672546, 0.8483333587646484, 0.856333315372467, 0.8503333330154419, 0.840666651725769, 0.8399999737739563, 0.8026666641235352, 0.8316666483879089]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [4, 8, 9, 2, 2, 6, 2, 9, 2, 1, 2, 2, 7, 0, 3, 4, 3, 4, 5, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [2, 2, 1, 2, 2, 1, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [40, 28, 77, 92, 41, 36, 71, 33], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [1, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.33142855763435364, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3567993114369656, 2.2451022148699162, 2.325518508896521, 2.2834063527323014, 2.303816633674179, 2.8150909633180485, 2.3114836481127363], "accuracy": [0.17355699837207794, 0.16114120185375214, 0.12851670384407043, 0.15532954037189484, 0.10566636174917221, 0.1608770340681076, 0.10342095047235489], "val_loss": [1.9730525697980608, 2.1322176115853444, 1.8956142834254675, 1.9828387669154577, 1.9489332607814245, 1.9868617738996233, 1.976090771811349], "val_accuracy": [0.09966666996479034, 0.2163333296775818, 0.16200000047683716, 0.0989999994635582, 0.12566666305065155, 0.0989999994635582, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [6, 2, 2, 5, 2, 9, 2, 3, 9, 1, 2, 2, 7, 4, 2, 4, 1, 2, 5, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [2, 0, 2, 0, 2, 2, 1, 3, 2, 0, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 30, 41, 36, 99, 11], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [99], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.13285714387893677, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.831050378204636, 3.0015753591222816, 2.825909853013058, 2.356060884285754, 2.3641518636732965, 2.378601992465659, 2.370072570443547], "accuracy": [0.2164839506149292, 0.15281997621059418, 0.16972659528255463, 0.10857218503952026, 0.09734513610601425, 0.09509972482919693, 0.09866596013307571], "val_loss": [2.368597984313965, 1.943467480795724, 2.0388503074645996, 2.0443245342799594, 2.0397941725594655, 1.9982459204537528, 2.0152369907924106], "val_accuracy": [0.10566666722297668, 0.19099999964237213, 0.10266666859388351, 0.10433333367109299, 0.10166666656732559, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 2, 2, 6, 1, 3, 2, 4, 3, 4, 7, 2, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [2, 1, 1, 0, 2, 2, 1, 3, 1, 1, 2, 2, 1, 0, 2, 2, 2, 3, 2], [3, 10, 18, 21, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [38], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10828571766614914, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2993149788561373, 2.3008919213788386, 2.30236053255807, 2.3029701290286813, 2.307201064006134, 2.3780182442408764], "accuracy": [0.09774138033390045, 0.08770307898521423, 0.07872143387794495, 0.09100515395402908, 0.09853387624025345, 0.10011887550354004], "val_loss": [1.9692113058907645, 1.973379271371024, 1.973792348589216, 1.975114209311349, 1.9876491001674108, 2.233327184404646], "val_accuracy": [0.10833333432674408, 0.07566666603088379, 0.10333333164453506, 0.10466666519641876, 0.09799999743700027, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 4, 3, 1, 2, 9, 5, 8, 2, 4, 3, 9, 7, 0, 3, 6, 8, 3, 2, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 0, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 21, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [6, 2, 3, 1, 2, 3, 6, 8, 2, 4, 5, 2, 7, 3, 3, 1, 8, 4, 3, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 2, 2, 1, 3, 2, 2, 0, 2, 2, 0, 2, 1, 0, 3, 1, 2], [71, 83, 18, 92, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 44, 25, 19, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.multiply(grad, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [6, 3, 3, 1, 8, 6, 6, 8, 2, 4, 5, 2, 7, 3, 3, 1, 8, 3, 3, 5, 5, 6, 6, 5, 8, 4, 5], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 1, 2, 3, 2, 1], [3, 10, 35, 21, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 45, 26, 19, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.multiply(grad, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))))))), tf.math.add(alpha, tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad)))))), tf.math.square(tf.math.add(alpha, tf.math.sqrt(alpha))))))))))), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023455592036925, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 2, 2, 6, 1, 3, 2, 4, 3, 4, 7, 2, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [3, 1, 1, 0, 2, 2, 1, 3, 1, 1, 2, 2, 1, 0, 2, 2, 2, 3, 2], [3, 10, 18, 21, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07158895581960678, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [6, 2, 3, 1, 2, 6, 6, 8, 2, 4, 5, 2, 2, 3, 3, 3, 8, 3, 3, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 0, 2, 2, 1, 0, 2, 1, 2, 3, 1, 1], [71, 83, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 47, 47, 27, 20, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.square(grad)), grad)))), alpha)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07158895581960678, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 2, 2, 6, 1, 3, 2, 4, 3, 4, 7, 2, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [2, 1, 1, 0, 2, 2, 1, 3, 1, 1, 2, 2, 1, 0, 2, 2, 2, 3, 2], [3, 10, 18, 21, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 0, 1, 0], [4, 4], [2, 0, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 4, 7, 0, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 21, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023455592036925, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [6, 2, 3, 2, 2, 6, 6, 9, 2, 4, 5, 2, 7, 3, 3, 1, 8, 3, 3, 5, 5, 6, 3, 5, 8, 4, 5, 4, 8], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 1, 2, 2, 1, 1], [71, 83, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06342857331037521, "mapping_values": [1, 49, 49, 29, 20, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))), tf.math.multiply(tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.square(tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.sqrt(grad))), tf.math.add(alpha, alpha)))), grad))), grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301142160462004, 2.302375221391002, 2.2997418369489213, 2.3000630088816734, 2.300183176663668, 2.3007890855033146, 2.300860684293687, 2.300357002419031, 2.3013235962449157, 2.298577268944598, 2.2992302462598353, 2.299114043481787, 2.2992779281491758, 2.300196124105689, 2.3006309132455693], "accuracy": [0.09417514503002167, 0.08915598690509796, 0.09734513610601425, 0.09430722147226334, 0.09509972482919693, 0.09787346422672272, 0.09377889335155487, 0.09694888442754745, 0.09338264167308807, 0.10381719470024109, 0.09787346422672272, 0.10210011899471283, 0.10130762308835983, 0.10077928751707077, 0.09496764093637466], "val_loss": [1.9701826231820243, 1.9695677757263184, 1.9694207055228097, 1.9693272454398019, 1.9694172995431083, 1.9694350787571497, 1.969461372920445, 1.9694502694266183, 1.9692747933523995, 1.9693848746163505, 1.9695756775992257, 1.9698137555803572, 1.970010757446289, 1.970189435141427, 1.9702745165143694], "val_accuracy": [0.04333333298563957, 0.05166666582226753, 0.0560000017285347, 0.06066666543483734, 0.06266666948795319, 0.06733333319425583, 0.07199999690055847, 0.07199999690055847, 0.07533333450555801, 0.07633333653211594, 0.07599999755620956, 0.0729999989271164, 0.0729999989271164, 0.07466666400432587, 0.07433333247900009]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 2, 2, 6, 1, 3, 2, 4, 3, 4, 7, 2, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 21, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301536712191754, 2.3037108101817707, 2.301387795147375, 2.3022776789684745, 2.302647995265436, 2.3030226895396955], "accuracy": [0.0936468094587326, 0.08360850811004639, 0.09338264167308807, 0.08849557489156723, 0.09047681838274002, 0.09140139818191528], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 4, 7, 0, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 21, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301536712191754, 2.3037108101817707, 2.301387795147375, 2.3022776789684745, 2.302647995265436, 2.3030226895396955], "accuracy": [0.0936468094587326, 0.08360850811004639, 0.09338264167308807, 0.08849557489156723, 0.09047681838274002, 0.09140139818191528], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 4, 3, 1, 2, 9, 5, 8, 2, 4, 3, 9, 7, 0, 3, 6, 8, 3, 2, 5, 5, 6, 3, 5, 8, 4, 5], [2, 0, 2, 0, 2, 2, 1, 3, 2, 0, 2, 2, 1, 0, 2, 1, 2, 3, 1], [3, 10, 18, 21, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 0, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301536712191754, 2.3037108101817707, 2.301387795147375, 2.3022776789684745, 2.302647995265436, 2.3030226895396955], "accuracy": [0.0936468094587326, 0.08360850811004639, 0.09338264167308807, 0.08849557489156723, 0.09047681838274002, 0.09140139818191528], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 2, 2, 6, 1, 3, 2, 4, 3, 4, 7, 2, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5], [2, 1, 1, 0, 2, 2, 1, 3, 1, 1, 2, 2, 1, 0, 2, 2, 2, 3, 2], [3, 10, 18, 21, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301536712191754, 2.3037108101817707, 2.301387795147375, 2.3022776789684745, 2.302647995265436, 2.3030226895396955], "accuracy": [0.0936468094587326, 0.08360850811004639, 0.09338264167308807, 0.08849557489156723, 0.09047681838274002, 0.09140139818191528], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 2, 2, 1, 2, 6, 5, 3, 2, 4, 3, 4, 7, 0, 2, 1, 2, 3, 9, 5, 6, 6, 3, 5, 8, 4, 5, 7, 0, 5, 4, 5, 8, 6, 3, 4, 4], [0, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 0, 2, 0, 2, 1, 2, 3, 0, 1, 3], [3, 10, 18, 16, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [0, 0, 1, 5, 3, 4], [38], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 62, 62, 37, 25, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.square(tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad)))))))))), tf.math.square(grad)))), grad))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.square(tf.math.sqrt(alpha)), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.pow(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301536712191754, 2.3037108101817707, 2.301387795147375, 2.3022776789684745, 2.302647995265436, 2.3030226895396955], "accuracy": [0.0936468094587326, 0.08360850811004639, 0.09338264167308807, 0.08849557489156723, 0.09047681838274002, 0.09140139818191528], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]