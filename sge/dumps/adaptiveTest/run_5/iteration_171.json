[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7620000243186951, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.297424607099937, 2.2850490189845676, 2.273843908417006, 2.261056331138979, 2.2493841089136044, 2.231532952851938, 2.2168079337360775, 2.1992020603530618, 2.1742270461414877, 2.1536644477854314, 2.124661175676577, 2.095076154298975, 2.0552924357668565, 2.0088710351595553, 1.9644946346445453, 1.9148275926522198, 1.861159044013693, 1.8008039437422363, 1.748666564801964, 1.6855237459415269, 1.6347381109417296, 1.580638320911137, 1.5249501647352148, 1.4830947222884117, 1.4362726992053, 1.3952430478333955, 1.3606996692450386, 1.332578379684955, 1.2985672463263502, 1.267473132445623, 1.2511262264643457, 1.2235485801071995, 1.1916383126345387, 1.1680401481452825, 1.1625272101729915, 1.1357234342931803, 1.1210736231387584, 1.1048546588463382, 1.0851760405779924, 1.0744236998034664, 1.062054570970471, 1.0484074837244135, 1.040018543984833, 1.019396623356184, 1.0111911112307053, 1.0012063672750098, 0.9937860565162874, 0.975115071292787, 0.9821241098372314, 0.9722931584693406, 0.9574006093790691, 0.9522169388878883, 0.9466415395463982, 0.9407906688089462, 0.9314980294332528, 0.9159819874245776, 0.9200022899164515, 0.9043586140437259, 0.9076457328453764, 0.9073029951790399, 0.8894941121076061, 0.8905559843636114, 0.8865473920784732, 0.8848489468060843, 0.8799989050751932, 0.8656867639247877, 0.8597617313893653, 0.8631498224432002, 0.8593604250858646, 0.8599531143931287, 0.851610880801234, 0.837283605440276, 0.8298714126121602, 0.828579458578183, 0.843034320928795, 0.841779481780496, 0.821988519770736, 0.8221079362555108, 0.819540042155108, 0.8139241467755406, 0.8145717979107299, 0.8076980525964539, 0.808131189032033, 0.8078223797765154, 0.7998051326650559, 0.8008204985682077, 0.7977965744951571, 0.7980410808884567, 0.7948909489596131, 0.7903637305982613, 0.7839638232995868, 0.7866801831700531, 0.7753116858003949, 0.7744462092901186, 0.7777451909276488, 0.7883855600745026, 0.7738516882126909, 0.777350268257198, 0.7650873287793841, 0.759527925557905], "accuracy": [0.10170386731624603, 0.13036586344242096, 0.16629242897033691, 0.2040681540966034, 0.22691850364208221, 0.2666754722595215, 0.2847708463668823, 0.30960243940353394, 0.3387927711009979, 0.34526482224464417, 0.37181350588798523, 0.37405890226364136, 0.3991546630859375, 0.40747588872909546, 0.4270241856575012, 0.4353454113006592, 0.44168537855148315, 0.452119916677475, 0.4620261490345001, 0.4807819426059723, 0.4896314740180969, 0.5057455897331238, 0.5085193514823914, 0.5188218355178833, 0.5305771827697754, 0.5359926223754883, 0.5472196340560913, 0.5482763051986694, 0.5669000148773193, 0.5666358470916748, 0.5698058605194092, 0.5838066339492798, 0.5905428528785706, 0.5956941246986389, 0.5893540978431702, 0.6091665625572205, 0.6038832664489746, 0.6133931875228882, 0.6252806782722473, 0.6242240071296692, 0.6305639743804932, 0.6343944072723389, 0.6288469433784485, 0.6396777033805847, 0.6421872973442078, 0.64667809009552, 0.6457535624504089, 0.6559239029884338, 0.6482630968093872, 0.6565843224525452, 0.6613393425941467, 0.6604147553443909, 0.6623960137367249, 0.659490168094635, 0.6670188903808594, 0.6740192770957947, 0.6734909415245056, 0.6787742972373962, 0.6800950765609741, 0.6745476126670837, 0.6824725866317749, 0.6819442510604858, 0.6820763349533081, 0.6847180128097534, 0.6803592443466187, 0.6921146512031555, 0.6970016956329346, 0.6959450244903564, 0.6917183995246887, 0.6884163022041321, 0.6903975605964661, 0.6940959095954895, 0.7067758440971375, 0.6988508701324463, 0.6980583667755127, 0.7012283802032471, 0.7062475085258484, 0.7059833407402039, 0.6977941989898682, 0.709021270275116, 0.7079645991325378, 0.7084929347038269, 0.7034738063812256, 0.7083608508110046, 0.7096816897392273, 0.7077004313468933, 0.7063795924186707, 0.7180029153823853, 0.7116629481315613, 0.7153612375259399, 0.7121912837028503, 0.7143045663833618, 0.7250033020973206, 0.7187954187393188, 0.7141724824905396, 0.7154933214187622, 0.7164179086685181, 0.7197200059890747, 0.7220974564552307, 0.7243428826332092], "val_loss": [1.9597254480634416, 1.9486908231462752, 1.9373277936662947, 1.9250839778355189, 1.9119394847324915, 1.897108486720494, 1.8804070608956474, 1.8614262853349959, 1.8392197063991003, 1.8137390272957938, 1.78439119883946, 1.751391819545201, 1.7132197788783483, 1.6697818211146764, 1.6220710618155343, 1.5703339236123222, 1.5151570183890206, 1.457007782799857, 1.398719344820295, 1.3395894254956926, 1.2823882102966309, 1.2269107273646764, 1.1750097955976213, 1.1276587758745467, 1.0837298801967077, 1.0434629917144775, 1.00755660874503, 0.975297212600708, 0.9463161059788295, 0.9197744301387242, 0.8957047121865409, 0.8743124519075666, 0.8541450159890311, 0.8357296160289219, 0.8197545324053083, 0.8044997453689575, 0.7908253158841815, 0.7785292863845825, 0.7668811253138951, 0.7556854145867484, 0.7452247313090733, 0.7360563618796212, 0.7268998622894287, 0.7193488734109061, 0.710861257144383, 0.70367659841265, 0.6970858573913574, 0.6903434651238578, 0.6850036552974156, 0.6783984729221889, 0.672257832118443, 0.666582533291408, 0.6617797783442906, 0.6576724052429199, 0.6533184051513672, 0.6492911917822701, 0.6449525015694755, 0.6407802275248936, 0.6370042392185756, 0.633480327469962, 0.6294534206390381, 0.6268366575241089, 0.622915438243321, 0.6206138815198626, 0.6178441558565412, 0.6146949529647827, 0.6112830298287528, 0.6080593892506191, 0.6054314885820661, 0.602794715336391, 0.6012760060174125, 0.5983266319547381, 0.5946072680609567, 0.5925649915422712, 0.591033799307687, 0.5905994517462594, 0.5871883290154594, 0.5849136795316424, 0.5824248279844012, 0.5799339669091361, 0.5786819628306797, 0.5764874049595424, 0.5747112206050328, 0.5733787502561297, 0.5718357903616769, 0.5706337349755424, 0.5687231847218105, 0.5672660725457328, 0.5651272194726127, 0.5635279927934919, 0.561531833239964, 0.5608669689723423, 0.5593521765300206, 0.5575150932584491, 0.5562651327678135, 0.5551220689501081, 0.5530768803187779, 0.5511844158172607, 0.5491244282041278, 0.5481693914958409], "val_accuracy": [0.11999999731779099, 0.23233333230018616, 0.312666654586792, 0.3683333396911621, 0.39100000262260437, 0.4163333475589752, 0.43533334136009216, 0.4503333270549774, 0.468666672706604, 0.4860000014305115, 0.5063333511352539, 0.5233333110809326, 0.5379999876022339, 0.5503333210945129, 0.5590000152587891, 0.5693333148956299, 0.5753333568572998, 0.5830000042915344, 0.590666651725769, 0.5956666469573975, 0.6069999933242798, 0.6116666793823242, 0.6200000047683716, 0.6393333077430725, 0.6486666798591614, 0.6576666831970215, 0.6653333306312561, 0.6756666898727417, 0.6786666512489319, 0.6816666722297668, 0.6859999895095825, 0.6919999718666077, 0.6943333148956299, 0.6976666450500488, 0.6983333230018616, 0.6990000009536743, 0.703000009059906, 0.7036666870117188, 0.7059999704360962, 0.7099999785423279, 0.7106666564941406, 0.7129999995231628, 0.7143333554267883, 0.715666651725769, 0.7166666388511658, 0.7173333168029785, 0.722000002861023, 0.7256666421890259, 0.7263333201408386, 0.7276666760444641, 0.7286666631698608, 0.7276666760444641, 0.7283333539962769, 0.7293333411216736, 0.7323333621025085, 0.731333315372467, 0.734666645526886, 0.7350000143051147, 0.7360000014305115, 0.7369999885559082, 0.7379999756813049, 0.7379999756813049, 0.7379999756813049, 0.7369999885559082, 0.7416666746139526, 0.7426666617393494, 0.7440000176429749, 0.7459999918937683, 0.7423333525657654, 0.7483333349227905, 0.7456666827201843, 0.75, 0.7486666440963745, 0.7483333349227905, 0.7519999742507935, 0.7509999871253967, 0.749666690826416, 0.7480000257492065, 0.753333330154419, 0.75, 0.7540000081062317, 0.7516666650772095, 0.7543333172798157, 0.7549999952316284, 0.7549999952316284, 0.7549999952316284, 0.753333330154419, 0.7553333044052124, 0.7590000033378601, 0.7593333125114441, 0.7590000033378601, 0.7616666555404663, 0.762333333492279, 0.7633333206176758, 0.7633333206176758, 0.762666642665863, 0.765999972820282, 0.7673333287239075, 0.7683333158493042, 0.7689999938011169]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7620000243186951, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.297424607099937, 2.2850490010031903, 2.2738437014894557, 2.2610551480840084, 2.249382291566332, 2.2315308700667837, 2.2168057880633385, 2.1991997121300253, 2.174225057923893, 2.153660336064782, 2.1246551521355688, 2.0950692897270606, 2.0552841450607207, 2.0088644833093023, 1.9644913937768065, 1.9148249969726792, 1.8611555375191262, 1.800801242126875, 1.7486629952781032, 1.6855211974040565, 1.6347333453256125, 1.5806275563957417, 1.524925729161193, 1.4830686409932243, 1.4362482361868467, 1.3952241628208748, 1.360678654447003, 1.3325613567842043, 1.298540980273297, 1.2674613646417954, 1.2511100668429131, 1.2235359322708266, 1.1916329175285014, 1.1680247081568402, 1.1625165977907566, 1.135719716147409, 1.121068627575149, 1.1048436341205718, 1.0851662641723536, 1.074406262984633, 1.0620439895911538, 1.0484004607368784, 1.0400051420013021, 1.019373185181772, 1.0111640590119906, 1.0011940883717847, 0.9937591907165905, 0.9751056175127384, 0.9821104679471703, 0.9722763560057914, 0.9573948958987305, 0.952203763049308, 0.946645941779661, 0.9407671416251415, 0.9314961665420799, 0.9159822485718068, 0.9200000160201162, 0.9043357419284296, 0.9076189068109761, 0.9073119821124592, 0.8894742290656549, 0.8905534945647825, 0.886546462297975, 0.8848165099993358, 0.8799670218571128, 0.8657105445090286, 0.8597527387875608, 0.8631539122067297, 0.8593499802831394, 0.8599374293021365, 0.8516215299492451, 0.8373053480904604, 0.8298732965235949, 0.8285800057899179, 0.8430115815796762, 0.8417876239591948, 0.8220115178501475, 0.8221309429477187, 0.8195423176259948, 0.813937545531241, 0.8145839172016754, 0.8077125302033102, 0.808139980941511, 0.8077984927840882, 0.7998074422879635, 0.8008309466381272, 0.7977818876619053, 0.7980575635527355, 0.794855801011467, 0.7903777501602309, 0.7839891793563807, 0.7867044350096672, 0.7753381306673826, 0.7744457101022028, 0.777736135398896, 0.7883865210941013, 0.7738528901386601, 0.777362576604535, 0.7650894970311906, 0.7595367160896505], "accuracy": [0.10170386731624603, 0.13036586344242096, 0.16629242897033691, 0.20420023798942566, 0.22705058753490448, 0.2666754722595215, 0.2847708463668823, 0.30960243940353394, 0.3385286033153534, 0.34526482224464417, 0.3719455897808075, 0.37405890226364136, 0.39902257919311523, 0.40747588872909546, 0.4271562397480011, 0.4353454113006592, 0.4418174624443054, 0.4519878625869751, 0.4620261490345001, 0.4807819426059723, 0.4896314740180969, 0.5056135058403015, 0.5085193514823914, 0.5188218355178833, 0.5305771827697754, 0.535860538482666, 0.5476158857345581, 0.5481442213058472, 0.5669000148773193, 0.5667679309844971, 0.5698058605194092, 0.583938717842102, 0.5906749367713928, 0.5959582328796387, 0.5893540978431702, 0.6091665625572205, 0.6040153503417969, 0.6132611036300659, 0.625148594379425, 0.6243560910224915, 0.6304318904876709, 0.6342623233795166, 0.6289790272712708, 0.6396777033805847, 0.64231938123703, 0.6464139223098755, 0.6453573107719421, 0.6559239029884338, 0.6482630968093872, 0.6567164063453674, 0.6612072587013245, 0.6606789231300354, 0.6625280380249023, 0.6592260003089905, 0.6671509742736816, 0.6742834448814392, 0.6734909415245056, 0.678642213344574, 0.6800950765609741, 0.6745476126670837, 0.6824725866317749, 0.6819442510604858, 0.6819442510604858, 0.6845859289169312, 0.6803592443466187, 0.6919825673103333, 0.6970016956329346, 0.6952846646308899, 0.6915863156318665, 0.6885483860969543, 0.6903975605964661, 0.6939638257026672, 0.7066437602043152, 0.6988508701324463, 0.698190450668335, 0.7012283802032471, 0.7059833407402039, 0.7058512568473816, 0.6979262828826904, 0.7088891863822937, 0.7077004313468933, 0.7091533541679382, 0.7036058902740479, 0.7083608508110046, 0.7102100253105164, 0.7080966830253601, 0.7065116763114929, 0.718399167060852, 0.7120591998100281, 0.7154933214187622, 0.7120591998100281, 0.7143045663833618, 0.7251353859901428, 0.7187954187393188, 0.7141724824905396, 0.7152291536331177, 0.7165499925613403, 0.7205125093460083, 0.7226257920265198, 0.7239466309547424], "val_loss": [1.9597254480634416, 1.9486908231462752, 1.9373271805899483, 1.9250818661281042, 1.9119374411446708, 1.897106375013079, 1.880404267992292, 1.8614239692687988, 1.839214869907924, 1.813732079097203, 1.7843829563685827, 1.751382827758789, 1.7132113320486886, 1.6697802543640137, 1.6220684392111642, 1.5703327315194267, 1.5151518072400774, 1.4570042405809676, 1.3987138611929757, 1.3395790713174003, 1.2823687962123327, 1.2268819127764021, 1.1749720573425293, 1.1276280198778426, 1.083702564239502, 1.043435914175851, 1.0075347423553467, 0.975273881639753, 0.9462966918945312, 0.9197554247719901, 0.8956875119890485, 0.8742912667138236, 0.8541227408817836, 0.8357145445687431, 0.8197485549109322, 0.8044917924063546, 0.7908169031143188, 0.7785168034689767, 0.7668514932904925, 0.7556598356791905, 0.7452052320752826, 0.7360308851514544, 0.7268682377679008, 0.7193358285086495, 0.7108397483825684, 0.7036794594355992, 0.6971163409096854, 0.6903494085584369, 0.6850055626460484, 0.6783818687711444, 0.6722550051552909, 0.6665779863085065, 0.6617773771286011, 0.6576743807111468, 0.6533442905970982, 0.6492942571640015, 0.6449559926986694, 0.6407763957977295, 0.6369963203157697, 0.6334713016237531, 0.6294500998088292, 0.6268136501312256, 0.6229034151349749, 0.6206036635807582, 0.6178370884486607, 0.6146871703011649, 0.6112739528928485, 0.6080616882869175, 0.6054300240107945, 0.6027998583657401, 0.6012834310531616, 0.5983335631234306, 0.5946108443396432, 0.5925654683794294, 0.5910480703626361, 0.5906145742961338, 0.5871764591761998, 0.5849089963095528, 0.5824488231113979, 0.5799700702939715, 0.5787422997610909, 0.5765430416379657, 0.5747754744121006, 0.5734400749206543, 0.5718996184212821, 0.5706745045525687, 0.5688000406537738, 0.5672876494271415, 0.5651468890053886, 0.5635438135692051, 0.5615625722067696, 0.5608948980058942, 0.5593477828162057, 0.5575135775974819, 0.5562595299312046, 0.555135692868914, 0.553083062171936, 0.5511666366032192, 0.549088614327567, 0.5481586115700858], "val_accuracy": [0.11999999731779099, 0.23233333230018616, 0.312666654586792, 0.3683333396911621, 0.39100000262260437, 0.4163333475589752, 0.4350000023841858, 0.4503333270549774, 0.468666672706604, 0.48633334040641785, 0.5063333511352539, 0.5233333110809326, 0.5379999876022339, 0.5503333210945129, 0.5590000152587891, 0.5693333148956299, 0.5753333568572998, 0.5830000042915344, 0.590666651725769, 0.5953333377838135, 0.6069999933242798, 0.6116666793823242, 0.6203333139419556, 0.6393333077430725, 0.6486666798591614, 0.6576666831970215, 0.6656666398048401, 0.6756666898727417, 0.6786666512489319, 0.6813333630561829, 0.6859999895095825, 0.6919999718666077, 0.6943333148956299, 0.6976666450500488, 0.6983333230018616, 0.6990000009536743, 0.703000009059906, 0.7036666870117188, 0.7059999704360962, 0.7099999785423279, 0.7110000252723694, 0.7129999995231628, 0.7143333554267883, 0.715666651725769, 0.7166666388511658, 0.7176666855812073, 0.722000002861023, 0.7256666421890259, 0.7260000109672546, 0.7276666760444641, 0.7289999723434448, 0.7276666760444641, 0.7283333539962769, 0.7293333411216736, 0.7323333621025085, 0.7310000061988831, 0.734666645526886, 0.7350000143051147, 0.7360000014305115, 0.7369999885559082, 0.7383333444595337, 0.737666666507721, 0.7379999756813049, 0.7369999885559082, 0.7416666746139526, 0.7426666617393494, 0.7436666488647461, 0.7459999918937683, 0.7423333525657654, 0.7483333349227905, 0.7450000047683716, 0.75, 0.7486666440963745, 0.7483333349227905, 0.7519999742507935, 0.7509999871253967, 0.75, 0.7480000257492065, 0.753000020980835, 0.75, 0.7540000081062317, 0.7516666650772095, 0.7546666860580444, 0.7549999952316284, 0.7556666731834412, 0.7549999952316284, 0.7536666393280029, 0.7553333044052124, 0.7586666941642761, 0.7596666812896729, 0.7590000033378601, 0.7616666555404663, 0.762333333492279, 0.7630000114440918, 0.7633333206176758, 0.762666642665863, 0.7663333415985107, 0.7670000195503235, 0.7683333158493042, 0.768666684627533]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.36000001430511475, "mapping_values": [1, 34, 34, 19, 15, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3502754460645785, 5.85365778416407, 2.3048706781815356, 2.290409862908547, 2.3309332277985484, 2.303809606891975], "accuracy": [0.19363360106945038, 0.13921542465686798, 0.09668471664190292, 0.13472460210323334, 0.10157178342342377, 0.1002509593963623], "val_loss": [1.6971652167184013, 1.9766219684055872, 1.969127859388079, 1.8678796631949288, 1.9743076733180456, 1.973837171282087], "val_accuracy": [0.3633333444595337, 0.09833333641290665, 0.09833333641290665, 0.11800000071525574, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 2, 6, 2, 3, 2, 1, 2, 2, 7, 0, 3, 1, 3, 0, 9, 5, 2, 6, 3, 5, 0, 6, 9, 8, 8, 3], [0, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 1, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.3580000102519989, "mapping_values": [1, 44, 44, 25, 19, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(grad), alpha), grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))), tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), tf.math.add(grad, tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad))))), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3503682151714322, 6.2209068075887215, 2.306233744091598, 2.3039506438102517, 2.3030972478254643, 2.3033183755938875], "accuracy": [0.1935015171766281, 0.13802668452262878, 0.09298639744520187, 0.09893012791872025, 0.1006472036242485, 0.09840179979801178], "val_loss": [1.696568182536534, 1.9763315064566476, 1.9745304243905204, 1.9739351953778947, 1.973503930228097, 1.973259108407157], "val_accuracy": [0.36399999260902405, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [5, 4, 3, 1, 2, 6, 5, 3, 3, 4, 3, 2, 3, 0, 5, 1, 2, 3, 9, 5, 2, 6, 3, 2, 8, 4, 5, 4, 4], [1, 2, 2, 0, 2, 2, 2, 3, 1, 1, 2, 0, 2, 3, 2, 0, 2, 1, 3, 2, 1], [56, 28, 24, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.35771429538726807, "mapping_values": [1, 50, 50, 29, 21, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))), tf.math.add(alpha, alpha))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.350364767218688, 6.254510833665663, 2.884142521964151, 2.306303432762127, 2.3010525838526688, 2.3416987890738064], "accuracy": [0.1935015171766281, 0.1422533392906189, 0.11887465417385101, 0.09694888442754745, 0.11517632752656937, 0.1220446452498436], "val_loss": [1.6965725081307548, 1.9746853964669364, 1.9795235225132533, 1.9737285205296107, 1.9640398706708635, 1.9750774247305733], "val_accuracy": [0.3646666705608368, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.12999999523162842, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 2, 6, 1, 3, 2, 1, 9, 5, 7, 0, 3, 2, 2, 3, 9, 5, 2, 6, 3, 5, 8, 4, 9, 8, 8, 3], [0, 2, 1, 2, 2, 1, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [40, 28, 79, 92, 25, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.35685715079307556, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3503657340247632, 6.298233075778655, 2.2997464756089556, 2.348106854406913, 2.2773324135760307, 2.305257285984358], "accuracy": [0.1935015171766281, 0.14212125539779663, 0.10936468094587326, 0.11174217611551285, 0.1344604343175888, 0.11649715900421143], "val_loss": [1.6960617474147253, 1.976846626826695, 1.879117148263114, 1.973064967564174, 1.6425492082323347, 1.9742238180977958], "val_accuracy": [0.3646666705608368, 0.10100000351667404, 0.22433333098888397, 0.09833333641290665, 0.3153333365917206, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 9, 9, 8, 3, 2, 1, 9, 3, 7, 0, 3, 1, 2, 3, 9, 5, 2, 6, 3, 5, 8, 4, 9, 8, 8, 3], [2, 2, 2, 1, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.35600000619888306, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(grad, grad), tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3503497655223846, 6.738713282667146, 2.3063300816043806, 2.303692351683744, 2.3031845813603087, 2.30336877563138], "accuracy": [0.19336943328380585, 0.14317791163921356, 0.0940430611371994, 0.09694888442754745, 0.10289261490106583, 0.09840179979801178], "val_loss": [1.6946207455226354, 1.9779535021100725, 1.974525042942592, 1.9739137377057756, 1.9737581525530135, 1.9737063816615514], "val_accuracy": [0.367000013589859, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [9, 2, 8, 0, 2, 6, 1, 3, 2, 5, 9, 2, 7, 0, 3, 1, 2, 2, 9, 5, 2, 6, 3, 5, 8, 4, 9, 8, 8, 3], [0, 2, 2, 0, 2, 2, 2, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [40, 28, 79, 72, 22, 19], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [91], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1225225895.1200593, 23859121092.894466, 111144742679.90596, 310439580256.63824, 669527456435.1426, 1217613314778.0955], "accuracy": [0.09945846349000931, 0.09800554811954498, 0.09919429570436478, 0.10196803510189056, 0.0952318087220192, 0.1014397069811821], "val_loss": [4762543981.714286, 38089074980.57143, 128537905444.57143, 304667773220.5714, 595031097344.0, 1028204490166.8572], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [56, 28, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [0, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [16145.540208067294, 305947.6350630696, 1415050.3208955224, 3939966.268260468, 8483172.56359794, 15410788.391758025], "accuracy": [0.09959053993225098, 0.09800554811954498, 0.09932637959718704, 0.10196803510189056, 0.0952318087220192, 0.1014397069811821], "val_loss": [61677.39955357143, 486162.78571428574, 1633209.392857143, 3862564.4285714286, 7533974.571428572, 13007166.857142856], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 3, 1, 2, 6, 4, 3, 2, 4, 1, 2, 7, 0, 5, 1, 3, 5, 9, 2, 2, 6, 0, 5, 8, 4, 9, 8, 8, 3], [1, 2, 2, 2, 2, 2, 1, 3, 2, 1, 2, 2, 2, 2, 0, 2, 2, 3, 0], [56, 43, 20, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [0, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 49, 49, 30, 19, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), grad)))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(alpha))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad)))))))), tf.math.multiply(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad))), grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [16145.540208067294, 305947.6350630696, 1415050.3208955224, 3939966.268260468, 8483172.56359794, 15410788.391758025], "accuracy": [0.09959053993225098, 0.09800554811954498, 0.09932637959718704, 0.10196803510189056, 0.0952318087220192, 0.1014397069811821], "val_loss": [61677.39955357143, 486162.78571428574, 1633209.392857143, 3862564.4285714286, 7533974.571428572, 13007166.857142856], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 1, 2, 6, 9, 3, 2, 1, 3, 2, 7, 0, 3, 1, 2, 3, 9, 5, 2, 6, 3, 5, 8, 4, 9, 8, 8, 3], [0, 2, 2, 0, 2, 2, 1, 2, 1, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [3, 10, 18, 92, 57, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 1, 3, 2, 7, 0, 5, 6, 2, 3, 9, 5, 5, 6, 3, 5, 8, 0, 5, 4, 2], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2, 0], [40, 28, 79, 92, 41, 36, 98], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 6, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 3, 3, 5, 1, 3, 1, 3], [53], [0, 1, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [35], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 47, 47, 29, 18, 7, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.square(alpha))))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), grad)))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, grad), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [162976.78485142012, 3139942.0776647734, 14583012.031171575, 40677032.16166953, 87665115.43521331, 159352868.88812575], "accuracy": [0.09945846349000931, 0.09800554811954498, 0.09919429570436478, 0.10196803510189056, 0.0952318087220192, 0.1014397069811821], "val_loss": [629309.3928571428, 5002907.714285715, 16850546.285714287, 39901997.71428572, 77886928.0, 134535072.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 0, 0], [8, 4], [2, 0, 1, 5, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303032158104782, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0], [3, 4, 2, 5, 6], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12415797263383865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 4, 3, 1, 2, 6, 5, 3, 3, 0, 3, 2, 4, 0, 3, 4, 2, 3, 9, 5, 5, 4, 8, 5, 8, 4, 5, 0, 8], [1, 1, 2, 0, 0, 2, 2, 3, 1, 1, 2, 2, 2, 3, 2, 0, 2, 1], [56, 28, 24, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [4, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 45, 29, 16, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha))), tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad)), grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), alpha)), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)))))), tf.math.pow(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.sqrt(grad)))))))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3642157706704243e+24, 7.826878315768521, 15.007860493335615, 22.204578254295615, 29.405346899268146, 36.61197639679975], "accuracy": [0.08757099509239197, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.23055226462228, 10.321063995361328, 16.491683959960938, 22.66552189418248, 28.84521266392299, 35.02039010184152], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [89, 28, 79, 92, 41, 36], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0], [6, 4, 7, 5], [7, 0, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 8, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30241049757849, 2.3018485149451062, 2.30256752183078, 2.3024065945488887, 2.303724056662601, 2.300967268892771], "accuracy": [0.09113723784685135, 0.08849557489156723, 0.09192973375320435, 0.09245806187391281, 0.09034473448991776, 0.09338264167308807], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 2, 2, 2, 2, 6, 6, 3, 2, 4, 4, 2, 7, 0, 5, 1, 3, 2, 9, 2, 2, 6, 1, 5, 8, 4, 9, 8, 1, 3, 8, 7], [1, 2, 2, 0, 0, 2, 1, 3, 2, 1, 0, 2, 2, 2, 2, 0, 2, 3, 2, 2, 2, 1, 0], [56, 28, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 0, 0], [9, 4], [3, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 55, 55, 32, 23, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad))))), grad), grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30241049757849, 2.3018485149451062, 2.30256752183078, 2.3024065945488887, 2.303724056662601, 2.300967268892771], "accuracy": [0.09113723784685135, 0.08849557489156723, 0.09192973375320435, 0.09245806187391281, 0.09034473448991776, 0.09338264167308807], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 2, 3, 1, 2, 6, 5, 3, 2, 4, 3, 2, 7, 0, 5, 1, 2, 3, 9, 5, 5, 6, 3, 5, 8, 4, 5], [0, 2, 2, 0, 0, 2, 1, 3, 1, 1, 0, 2, 2, 3, 2, 0, 2], [40, 28, 79, 92, 41, 36], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1], [3, 4, 8], [4, 0, 1, 5, 3, 4], [57], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30241049757849, 2.3018485149451062, 2.30256752183078, 2.3024065945488887, 2.303724056662601, 2.300967268892771], "accuracy": [0.09113723784685135, 0.08849557489156723, 0.09192973375320435, 0.09245806187391281, 0.09034473448991776, 0.09338264167308807], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 2, 2, 6, 9, 3, 2, 6, 9, 2, 7, 0, 5, 1, 2, 3, 9, 0, 2, 6, 3, 5, 8, 4, 9, 8, 8, 3], [2, 2, 1, 0, 0, 2, 0, 3, 2, 0, 0, 2, 0, 3, 2, 0, 2, 3, 1], [56, 28, 18, 92, 16, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [89], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 24, 24, 14, 10, 6, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(grad, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30241049757849, 2.3018485149451062, 2.30256752183078, 2.3024065945488887, 2.303724056662601, 2.300967268892771], "accuracy": [0.09113723784685135, 0.08849557489156723, 0.09192973375320435, 0.09245806187391281, 0.09034473448991776, 0.09338264167308807], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [3, 2, 2, 1, 2, 6, 1, 3, 2, 1, 9, 2, 7, 0, 3, 1, 2, 3, 9, 5, 2, 6, 3, 5, 8, 4, 9, 8, 8, 3], [1, 2, 2, 0, 2, 2, 1, 3, 2, 1, 0, 2, 2, 0, 2, 0, 2, 3, 1], [3, 10, 18, 92, 41, 36, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [9, 5, 2, 0, 4, 0, 4, 1, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [1, 1, 0, 0], [3, 4], [4, 1, 1, 5, 3, 4], [24], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30241049757849, 2.3018485149451062, 2.30256752183078, 2.3024065945488887, 2.303724056662601, 2.300967268892771], "accuracy": [0.09113723784685135, 0.08849557489156723, 0.09192973375320435, 0.09245806187391281, 0.09034473448991776, 0.09338264167308807], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]