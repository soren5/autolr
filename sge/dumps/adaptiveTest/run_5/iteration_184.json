[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7937142848968506, "mapping_values": [1, 38, 38, 23, 15, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad))))))))), grad))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2829881833607666, 2.231084064800568, 2.1509297778026664, 2.0140652197730886, 1.8142807783625146, 1.5905650821202593, 1.410852462261927, 1.2803992588663964, 1.1888662591948564, 1.1076879336802148, 1.0619596095526649, 1.0171795683435525, 0.9734768711690811, 0.9361188715128709, 0.9075592412704238, 0.8965773681104143, 0.8729725380331818, 0.8569451802363564, 0.8455295500706814, 0.8225807993797153, 0.8243123282767116, 0.8125182238504981, 0.8095202207045705, 0.7880680918095213, 0.7730637997243194, 0.7691117048798898, 0.7662333519294072, 0.7536888183100097, 0.7403633591836202, 0.7334629382439702, 0.7386937633465782, 0.7346385481760345, 0.7165554536174648, 0.7072104310095034, 0.7137424715946789, 0.7098389632823744, 0.6982904789848036, 0.7037798146671859, 0.6907138537422163, 0.6800986446441204, 0.6755933176650819, 0.6818044493384506, 0.6708748758099004, 0.6782107478544744, 0.6659280371750981, 0.6676823036970795, 0.6656479383535263, 0.6618443666558146, 0.6543870622597476, 0.6532201887499686, 0.6491998468706904, 0.6352910919038925, 0.6415149608796472, 0.6398390617116788, 0.6404829524480089, 0.6340135220192711, 0.6374594658562032, 0.6373381500844989, 0.6311842062768998, 0.6235900561823081, 0.6255516402631026, 0.6126683269430696, 0.6190251410912844], "accuracy": [0.14238542318344116, 0.2619204819202423, 0.34460440278053284, 0.41526877880096436, 0.4579315781593323, 0.49332982301712036, 0.535332202911377, 0.5671641826629639, 0.5884295105934143, 0.611411988735199, 0.6230352520942688, 0.6351869106292725, 0.6535464525222778, 0.6738871932029724, 0.6705851554870605, 0.68101966381073, 0.68101966381073, 0.6900013089179993, 0.6942279934883118, 0.7077004313468933, 0.6980583667755127, 0.6979262828826904, 0.7079645991325378, 0.7092854380607605, 0.7177387475967407, 0.719852089881897, 0.7239466309547424, 0.7275128960609436, 0.7296261787414551, 0.7292299270629883, 0.7297582626342773, 0.7327961921691895, 0.7380794882774353, 0.7424382567405701, 0.7428345084190369, 0.7374191284179688, 0.7464007139205933, 0.7396644949913025, 0.7491744756698608, 0.7500990629196167, 0.748778223991394, 0.7464007139205933, 0.7540615797042847, 0.7514199018478394, 0.7512878179550171, 0.7519482374191284, 0.7577598690986633, 0.7598732113838196, 0.7593448758125305, 0.759080708026886, 0.7580240368843079, 0.7630431652069092, 0.7647602558135986, 0.7631752490997314, 0.7650244235992432, 0.76542067527771, 0.7662131786346436, 0.7637035846710205, 0.7658169269561768, 0.7708360552787781, 0.7676661014556885, 0.7744023203849792, 0.7708360552787781], "val_loss": [1.9265351295471191, 1.8663253784179688, 1.7629921776907784, 1.5935043607439314, 1.3669130461556571, 1.1508150441305978, 0.9930213519505092, 0.8866836684090751, 0.8157962730952671, 0.7639631884438651, 0.7288121836526054, 0.6954554659979684, 0.6771452086312431, 0.6519896984100342, 0.6388661009924752, 0.6261086634227208, 0.6126041752951485, 0.6013401406151908, 0.5949150834764753, 0.5877712283815656, 0.5799690655299595, 0.5692455087389264, 0.5689253636768886, 0.5598377500261579, 0.5550189188548497, 0.5508853197097778, 0.5469640323093959, 0.5386713913508824, 0.5330918686730521, 0.5293188946587699, 0.5256587777818952, 0.523405773299081, 0.5190004110336304, 0.5144462074552264, 0.5245238542556763, 0.5088624954223633, 0.5104077543531146, 0.5047623940876552, 0.502713714327131, 0.4964418581553868, 0.4970144714627947, 0.49305641651153564, 0.494549070085798, 0.4885141508919852, 0.48810369627816336, 0.48810907772609163, 0.48026888711111887, 0.4809762750353132, 0.4788934162684849, 0.4762953690120152, 0.47549305643354145, 0.4731715406690325, 0.4727623973573957, 0.4713625226702009, 0.4665530579430716, 0.4651029109954834, 0.4654560259410313, 0.46513657910483225, 0.4634213447570801, 0.4607230084283011, 0.45932131154196604, 0.45910256249564035, 0.4555835042681013], "val_accuracy": [0.33933332562446594, 0.43933331966400146, 0.5053333044052124, 0.5699999928474426, 0.5866666436195374, 0.6290000081062317, 0.6606666445732117, 0.6769999861717224, 0.7043333053588867, 0.7103333473205566, 0.7163333296775818, 0.7200000286102295, 0.7276666760444641, 0.7316666841506958, 0.7310000061988831, 0.7413333058357239, 0.7513333559036255, 0.7409999966621399, 0.7476666569709778, 0.7509999871253967, 0.7440000176429749, 0.7586666941642761, 0.750333309173584, 0.7580000162124634, 0.7633333206176758, 0.7620000243186951, 0.7639999985694885, 0.7670000195503235, 0.7649999856948853, 0.7683333158493042, 0.7680000066757202, 0.7689999938011169, 0.7756666541099548, 0.7760000228881836, 0.7580000162124634, 0.778333306312561, 0.7826666831970215, 0.7763333320617676, 0.7823333144187927, 0.7793333530426025, 0.7836666703224182, 0.7850000262260437, 0.7846666574478149, 0.7863333225250244, 0.7796666622161865, 0.7833333611488342, 0.7863333225250244, 0.7866666913032532, 0.7846666574478149, 0.7906666398048401, 0.7976666688919067, 0.7860000133514404, 0.7873333096504211, 0.7933333516120911, 0.793666660785675, 0.7993333339691162, 0.7913333177566528, 0.8059999942779541, 0.7933333516120911, 0.7976666688919067, 0.7946666479110718, 0.7963333129882812, 0.8046666383743286]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 6, 1, 2, 6, 5, 8, 2, 5, 3, 5, 7, 8, 2, 6, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 2, 2, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 4, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7928571701049805, "mapping_values": [1, 26, 26, 15, 11, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)), alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2829882148517955, 2.2310830971442352, 2.1509327871483612, 2.0140668897108553, 1.8142802342605189, 1.590583174566567, 1.410848885936004, 1.2803781319130618, 1.1888526710521088, 1.1076880996694276, 1.0618971957034282, 1.0171445916593664, 0.9734575840948501, 0.93616683182227, 0.9075402439136578, 0.8967086882276967, 0.8730105650250182, 0.8568450601471571, 0.845624765495126, 0.8223218058062866, 0.8242681099832837, 0.8124816564206103, 0.809357323493499, 0.7880993455849178, 0.7731780499089994, 0.7690143733212913, 0.7661838707292808, 0.7536846985040386, 0.740179683979177, 0.7335303155123487, 0.7384170342382895, 0.7345770160519861, 0.7162254583078242, 0.7068489833262933, 0.7136350927918484, 0.7098018278645455, 0.6981321832900979, 0.7040305630468878, 0.6909564480632288, 0.6800215691938187, 0.6751472188764795, 0.6817003879108134, 0.6707456598680537, 0.6783377340189171, 0.6655896494354255, 0.6677427788483642, 0.6656124760146942, 0.6615074214571897, 0.6547516340577072, 0.6531675219094953, 0.6488389157033347, 0.6350233509807917, 0.6417301803248638, 0.6397724220734137, 0.6404769025411368, 0.6338532920589757, 0.637174048262848, 0.6371525189880021, 0.6310235039511723, 0.6233275069253257, 0.6254730880173868, 0.6127039193083598, 0.6191836179932426], "accuracy": [0.14238542318344116, 0.26178839802742004, 0.34460440278053284, 0.41487252712249756, 0.45806366205215454, 0.49385812878608704, 0.5352001190185547, 0.5675604343414307, 0.5884295105934143, 0.6111478209495544, 0.6230352520942688, 0.6350548267364502, 0.6543388962745667, 0.6733588576316833, 0.6716417670249939, 0.681547999382019, 0.68101966381073, 0.689869225025177, 0.6944921612739563, 0.7074362635612488, 0.6977941989898682, 0.698190450668335, 0.7084929347038269, 0.7091533541679382, 0.7177387475967407, 0.7202483415603638, 0.7223616242408752, 0.7268524765968323, 0.7297582626342773, 0.7290979027748108, 0.7285695672035217, 0.7327961921691895, 0.7375511527061462, 0.7433628439903259, 0.7423061728477478, 0.7384757399559021, 0.7454761862754822, 0.739400327205658, 0.7491744756698608, 0.7500990629196167, 0.7503632307052612, 0.7461365461349487, 0.7552502751350403, 0.7508915662765503, 0.7520803213119507, 0.7516840696334839, 0.7577598690986633, 0.7588165402412415, 0.7594769597053528, 0.7598732113838196, 0.7572315335273743, 0.7630431652069092, 0.7635715007781982, 0.7627789974212646, 0.7660810947418213, 0.7663452625274658, 0.7662131786346436, 0.7652885913848877, 0.7666094303131104, 0.772288978099823, 0.7668735980987549, 0.7740060687065125, 0.7701756954193115], "val_loss": [1.926534993307931, 1.866330896105085, 1.7629899978637695, 1.5935057231358118, 1.3669202668326241, 1.1508200849805559, 0.992992469242641, 0.8866745403834752, 0.815754771232605, 0.7639113324029105, 0.7287442002977643, 0.6953779118401664, 0.6771209750856672, 0.6520097085407802, 0.6389108725956508, 0.6262535537992205, 0.6126704726900373, 0.6013132844652448, 0.5950054781777518, 0.5878541128976005, 0.5802334887640817, 0.569473317691258, 0.5687848159245082, 0.5597649642399379, 0.5549873113632202, 0.5509077821459089, 0.5467185292925153, 0.5387000526700702, 0.5331374406814575, 0.5293313435145787, 0.52556197983878, 0.5231879608971732, 0.5189952850341797, 0.5146235397883824, 0.5241404090608869, 0.5088114227567401, 0.5104928527559552, 0.5049715553011213, 0.5025965145656041, 0.4963019915989467, 0.4968149662017822, 0.49327400752476286, 0.49459665162222727, 0.4883201633180891, 0.48787481444222586, 0.4879031181335449, 0.4805918591363089, 0.4810880592891148, 0.4790745462690081, 0.47640284470149447, 0.4755580254963466, 0.4731572014944894, 0.4726663827896118, 0.4713397877556937, 0.46642701966421946, 0.46505718571799143, 0.4649679831096104, 0.464932952608381, 0.4632704598563058, 0.4607221228735788, 0.45936131477355957, 0.4592296566282, 0.4554286514009748], "val_accuracy": [0.33933332562446594, 0.43933331966400146, 0.5053333044052124, 0.5699999928474426, 0.5863333344459534, 0.6290000081062317, 0.6606666445732117, 0.6769999861717224, 0.7043333053588867, 0.7099999785423279, 0.7163333296775818, 0.7203333377838135, 0.7269999980926514, 0.731333315372467, 0.7310000061988831, 0.7423333525657654, 0.7513333559036255, 0.7400000095367432, 0.7480000257492065, 0.7506666779518127, 0.7446666955947876, 0.7580000162124634, 0.749666690826416, 0.7590000033378601, 0.7630000114440918, 0.762333333492279, 0.7649999856948853, 0.7666666507720947, 0.765666663646698, 0.7676666378974915, 0.7680000066757202, 0.7706666588783264, 0.7756666541099548, 0.7749999761581421, 0.7580000162124634, 0.7776666879653931, 0.7823333144187927, 0.7753333449363708, 0.7833333611488342, 0.7793333530426025, 0.7846666574478149, 0.7856666445732117, 0.7850000262260437, 0.7860000133514404, 0.7799999713897705, 0.7823333144187927, 0.7846666574478149, 0.7870000004768372, 0.7853333353996277, 0.7913333177566528, 0.796999990940094, 0.7860000133514404, 0.7876666784286499, 0.7943333387374878, 0.7960000038146973, 0.7993333339691162, 0.7913333177566528, 0.8063333630561829, 0.793666660785675, 0.79666668176651, 0.7946666479110718, 0.79666668176651, 0.8053333163261414]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 5, 6, 5, 2, 2, 5, 5, 5, 7, 8, 4, 6, 2, 3, 6, 9, 2, 2, 3, 5, 8, 4, 5, 4, 1, 4], [0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7891428470611572, "mapping_values": [1, 47, 47, 29, 18, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), grad))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(alpha))))), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.subtract(grad, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2829881833607666, 2.231083821910263, 2.1509289590359173, 2.014060349795702, 1.8142890516698573, 1.5906170443332175, 1.4108762085130737, 1.2804053584424937, 1.1888464366786626, 1.1077017152251158, 1.0619043171791558, 1.0171347474692882, 0.9734010200821067, 0.9361077455355743, 0.9075107115244962, 0.8966032965009113, 0.8730315584721362, 0.8568752500138909, 0.845631322565017, 0.822468698890753, 0.8244073087072266, 0.8125516059392038, 0.8093808747364498, 0.7881191467344485, 0.7732509383750928, 0.7690620086275276, 0.7660820299938859, 0.7535407494843643, 0.7402479334703258, 0.7336932915612109, 0.7386346939941832, 0.734514712689024, 0.7162673480443635, 0.7071173040385984, 0.7137066000299274, 0.7099048182271838, 0.6984519386461555, 0.7038554704861634, 0.6905270727193115, 0.6802520658267315, 0.6756741216217034, 0.6821856584216405, 0.6707496314378794, 0.6784321337391153, 0.6657067490543561, 0.6678932592176318, 0.6655331351233984, 0.6618957357431179, 0.6545565828844352, 0.653204796179143, 0.6489729455527912, 0.6351811245384942, 0.6416200286818375, 0.6397272931539056, 0.6404581415481603, 0.6338625814086174], "accuracy": [0.14238542318344116, 0.2620525658130646, 0.34460440278053284, 0.41526877880096436, 0.4579315781593323, 0.4934619069099426, 0.5354642868041992, 0.5674283504486084, 0.5880332589149475, 0.6112799048423767, 0.6231673359870911, 0.6358473300933838, 0.6543388962745667, 0.6737551093101501, 0.6712455153465271, 0.6802271604537964, 0.6808875799179077, 0.6892088055610657, 0.6940959095954895, 0.707568347454071, 0.6979262828826904, 0.6973979473114014, 0.7082287669181824, 0.7091533541679382, 0.7177387475967407, 0.7205125093460083, 0.7234182953834534, 0.7272487282752991, 0.7297582626342773, 0.7292299270629883, 0.7294940948486328, 0.7327961921691895, 0.7371549606323242, 0.741909921169281, 0.7429665923118591, 0.7371549606323242, 0.7466648817062378, 0.7407211661338806, 0.7494386434555054, 0.7499669790267944, 0.7486461400985718, 0.746268630027771, 0.7540615797042847, 0.7503632307052612, 0.7508915662765503, 0.7520803213119507, 0.7576277852058411, 0.759609043598175, 0.7598732113838196, 0.7592127919197083, 0.759080708026886, 0.7627789974212646, 0.763967752456665, 0.7642319202423096, 0.76542067527771, 0.7667415142059326], "val_loss": [1.9265351295471191, 1.8663277626037598, 1.7629848207746233, 1.5935033048902238, 1.3669607979910714, 1.1508690289088659, 0.9930105890546527, 0.8866961342947823, 0.8158305542809623, 0.7639509439468384, 0.7287682976041522, 0.6953127895082746, 0.6770837817873273, 0.6519859858921596, 0.6387974534715924, 0.6262426716940743, 0.6126311336244855, 0.6013825961521694, 0.5949144533702305, 0.5878930773053851, 0.5800699676786151, 0.5694011960710798, 0.5690596955163139, 0.5597804614475795, 0.5550359487533569, 0.5509521109717233, 0.5469091790063041, 0.5386336190359933, 0.5332546404429844, 0.5293540954589844, 0.5256055423191616, 0.5232294287000384, 0.5191725322178432, 0.5146636281694684, 0.5241656644003732, 0.5089460951941354, 0.510542733328683, 0.5046737704958234, 0.5026038544518607, 0.4963344505855015, 0.4975529568535941, 0.4931310585566929, 0.4949573448726109, 0.48844153540475027, 0.4880037307739258, 0.4878441265651158, 0.48031107016972135, 0.4809016500200544, 0.4788414410182408, 0.47621182032993864, 0.47547199044908794, 0.4730167899812971, 0.4724867343902588, 0.4712736095700945, 0.46653703280857634, 0.46531336648123606], "val_accuracy": [0.33933332562446594, 0.4390000104904175, 0.5053333044052124, 0.5699999928474426, 0.5863333344459534, 0.6290000081062317, 0.6606666445732117, 0.6766666769981384, 0.7043333053588867, 0.7099999785423279, 0.7160000205039978, 0.7206666469573975, 0.7273333072662354, 0.731333315372467, 0.7310000061988831, 0.7419999837875366, 0.7509999871253967, 0.7406666874885559, 0.7473333477973938, 0.750333309173584, 0.7446666955947876, 0.7576666474342346, 0.7509999871253967, 0.7583333253860474, 0.7609999775886536, 0.7616666555404663, 0.7643333077430725, 0.7670000195503235, 0.7643333077430725, 0.7673333287239075, 0.7676666378974915, 0.7703333497047424, 0.7760000228881836, 0.7756666541099548, 0.7590000033378601, 0.7770000100135803, 0.781333327293396, 0.7749999761581421, 0.7820000052452087, 0.7793333530426025, 0.7829999923706055, 0.7850000262260437, 0.784333348274231, 0.7863333225250244, 0.7796666622161865, 0.7833333611488342, 0.7860000133514404, 0.7873333096504211, 0.7853333353996277, 0.7903333306312561, 0.7973333597183228, 0.7870000004768372, 0.7879999876022339, 0.7950000166893005, 0.7946666479110718, 0.7960000038146973]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 3, 0, 1, 2, 6, 4, 9, 2, 1, 5, 2, 1, 8, 2, 1, 2, 3, 6, 9, 6, 2, 9, 5, 0, 4, 5, 4, 1, 4], [1, 2, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7794285416603088, "mapping_values": [1, 38, 38, 23, 15, 7, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), grad))))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2829882463428244, 2.2310827599697896, 2.1509271776514, 2.014051193794822, 1.8142615130328388, 1.590583188863494, 1.4108697910350405, 1.2804057392792505, 1.188900326851132, 1.1077535341066564, 1.0619685613972054, 1.0171678438162712, 0.9734799757593926, 0.9361757982707751, 0.9074860210935783, 0.8965831639083023, 0.872939751109175, 0.8567893746711354, 0.8455060308226159, 0.8223752728731657, 0.8243052338990143, 0.8124248401096169, 0.8092421435913028, 0.7879751692390115, 0.772962540738445, 0.7690477138969483, 0.765993327229109, 0.753614562967938, 0.740193825773575, 0.7335029053666006, 0.7385880319969198, 0.7344316099660272, 0.7163912138257438, 0.7069447296422471, 0.7137288129592632, 0.709956747720963, 0.6982093755091343, 0.7038761445670128, 0.6906686463077008, 0.6800472660465263, 0.675490675829405, 0.6818332813750043, 0.6708600381346206, 0.6783414775779486, 0.6658005161119128, 0.6676782212867052, 0.6654931437133121], "accuracy": [0.14238542318344116, 0.26178839802742004, 0.34460440278053284, 0.4151366949081421, 0.4579315781593323, 0.49332982301712036, 0.535332202911377, 0.5675604343414307, 0.5884295105934143, 0.6111478209495544, 0.6229031682014465, 0.6353189945220947, 0.6542068123817444, 0.6744155287742615, 0.6704530715942383, 0.6819442510604858, 0.68101966381073, 0.6901333928108215, 0.6942279934883118, 0.7073041796684265, 0.6985867023468018, 0.6977941989898682, 0.7082287669181824, 0.7099458575248718, 0.7176066637039185, 0.7201162576675415, 0.7228899598121643, 0.7273808121681213, 0.7310791015625, 0.7297582626342773, 0.7296261787414551, 0.7321357727050781, 0.7374191284179688, 0.7432307600975037, 0.7432307600975037, 0.7368907928466797, 0.7458723783493042, 0.739400327205658, 0.7493065595626831, 0.7506273984909058, 0.748778223991394, 0.7471932172775269, 0.755118191242218, 0.7508915662765503, 0.7514199018478394, 0.7523444890975952, 0.7586844563484192], "val_loss": [1.9265350614275252, 1.8663268770490373, 1.7629849570138114, 1.5934866155896867, 1.3669276918683733, 1.1508593559265137, 0.9930692400251117, 0.8867126873561314, 0.8158684798649379, 0.7640350375856672, 0.728794983455113, 0.6953933749880109, 0.6771140950066703, 0.6520814214433942, 0.6387742757797241, 0.626094000680106, 0.6126174926757812, 0.6013046332768032, 0.5948500462940761, 0.5878225224358695, 0.5801101752689907, 0.5693634407860892, 0.5687783786228725, 0.5596628018787929, 0.5548688684191022, 0.5510232278278896, 0.5467886413846698, 0.5388449089867728, 0.5331729480198452, 0.5294564110892159, 0.5257846457617623, 0.5232261930193219, 0.5189737592424665, 0.5144049780709403, 0.5240964889526367, 0.5086890118462699, 0.5102472475596836, 0.5045008659362793, 0.5026529686791557, 0.49649269240243094, 0.49707155568259104, 0.492885913167681, 0.49446891035352436, 0.4882925237928118, 0.4881475142070225, 0.48795184067317415, 0.4803962026323591], "val_accuracy": [0.33933332562446594, 0.4390000104904175, 0.5053333044052124, 0.5703333616256714, 0.5863333344459534, 0.6290000081062317, 0.6606666445732117, 0.6769999861717224, 0.7043333053588867, 0.7096666693687439, 0.7163333296775818, 0.7203333377838135, 0.7276666760444641, 0.7323333621025085, 0.731333315372467, 0.7423333525657654, 0.7509999871253967, 0.7413333058357239, 0.7483333349227905, 0.7509999871253967, 0.7446666955947876, 0.7590000033378601, 0.7506666779518127, 0.7580000162124634, 0.762666642665863, 0.7613333463668823, 0.7649999856948853, 0.7676666378974915, 0.765666663646698, 0.7673333287239075, 0.768666684627533, 0.7713333368301392, 0.7763333320617676, 0.7756666541099548, 0.7583333253860474, 0.7773333191871643, 0.7833333611488342, 0.7763333320617676, 0.7829999923706055, 0.7793333530426025, 0.7833333611488342, 0.7866666913032532, 0.7853333353996277, 0.7860000133514404, 0.7803333401679993, 0.7826666831970215, 0.7860000133514404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [5, 2, 1, 1, 2, 9, 5, 3, 2, 9, 9, 6, 7, 8, 1, 3, 5, 3, 9, 5, 3, 2, 3, 5, 8, 4, 6, 4, 2, 4, 1, 2], [2, 0, 2, 0, 2, 0, 2, 1, 0, 1, 2, 1, 2, 0, 2, 0, 2, 1, 2, 1], [70, 47, 18, 27, 41, 71, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7791428565979004, "mapping_values": [1, 32, 32, 22, 10, 8, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.square(grad))))), tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.282988147398012, 2.2310832056938112, 2.150935693644356, 2.0140839610448085, 1.8143457886313308, 1.5906286118068653, 1.4108632107956252, 1.2803809926211007, 1.1888577415958577, 1.10773560484686, 1.0619327155212606, 1.017185444144399, 0.9735508145846395, 0.936141831472392, 0.9075317994053369, 0.8966333945870415, 0.8730740531355934, 0.8568209167075368, 0.8455004286866824, 0.8224283761005706, 0.8244070311059348, 0.81237468441889, 0.8092912320904271, 0.7882330318987409, 0.7731983878546073, 0.7690417852384098, 0.7660194004783384, 0.7536608313981962, 0.7403756361658925, 0.73354988198286, 0.7384755535290115, 0.73456870935628, 0.7163506536955501, 0.7073293846233913, 0.713640960680574, 0.7098313155128279, 0.6982300539987277, 0.7039792938806189, 0.6907315471578253, 0.6801541712085379, 0.6756385932304383, 0.6815806001783, 0.6709800810389405, 0.6779441694620657, 0.6658743689120359, 0.6676911251293969, 0.6655221064612535], "accuracy": [0.14238542318344116, 0.2620525658130646, 0.3447364866733551, 0.4151366949081421, 0.4581957459449768, 0.4934619069099426, 0.535332202911377, 0.5671641826629639, 0.5886936783790588, 0.6112799048423767, 0.6230352520942688, 0.6358473300933838, 0.6543388962745667, 0.6736230254173279, 0.6711134314537048, 0.6816800832748413, 0.6811517477035522, 0.6901333928108215, 0.6947563290596008, 0.7071720957756042, 0.6979262828826904, 0.698190450668335, 0.7082287669181824, 0.7092854380607605, 0.7169462442398071, 0.7206445932388306, 0.7243428826332092, 0.7271166443824768, 0.7301545143127441, 0.7294940948486328, 0.7289658188819885, 0.7320036888122559, 0.7372870445251465, 0.7434949278831482, 0.7434949278831482, 0.7376832365989685, 0.7465327978134155, 0.7396644949913025, 0.7490423917770386, 0.750231146812439, 0.7500990629196167, 0.746268630027771, 0.7541936039924622, 0.7510236501693726, 0.7518161535263062, 0.7520803213119507, 0.7581561207771301], "val_loss": [1.9265350614275252, 1.866328171321324, 1.762995379311698, 1.5935426098959786, 1.3669915880475725, 1.1508470603397913, 0.993030173437936, 0.8867125170571464, 0.8158128431865147, 0.7640248366764614, 0.7287541968481881, 0.6954391343252999, 0.6772112505776542, 0.6520467145102364, 0.638920818056379, 0.6262661218643188, 0.612452609198434, 0.6012750523430961, 0.5948633466448102, 0.5878127813339233, 0.5801050662994385, 0.5693461213793073, 0.5688965661185128, 0.5597473723547799, 0.5551060778754098, 0.5509083781923566, 0.5468487228666034, 0.5387534243719918, 0.5332319055284772, 0.5293474197387695, 0.5258113316127232, 0.5233338049479893, 0.519036957195827, 0.5144730125154767, 0.5244451761245728, 0.5089994668960571, 0.5104664223534721, 0.5047097546713692, 0.5027382884706769, 0.49672692162649973, 0.49688989775521414, 0.49342148644583567, 0.49447875363486155, 0.4884204864501953, 0.48810839653015137, 0.48767389569963726, 0.48032636301858084], "val_accuracy": [0.33933332562446594, 0.4390000104904175, 0.5053333044052124, 0.5703333616256714, 0.5860000252723694, 0.6293333172798157, 0.6606666445732117, 0.6773333549499512, 0.7043333053588867, 0.7093333601951599, 0.7160000205039978, 0.7200000286102295, 0.7276666760444641, 0.7316666841506958, 0.7306666374206543, 0.7416666746139526, 0.7513333559036255, 0.7406666874885559, 0.7480000257492065, 0.75, 0.7446666955947876, 0.7580000162124634, 0.7506666779518127, 0.7593333125114441, 0.7620000243186951, 0.762333333492279, 0.765333354473114, 0.7663333415985107, 0.765333354473114, 0.7676666378974915, 0.7683333158493042, 0.7706666588783264, 0.7753333449363708, 0.7756666541099548, 0.7593333125114441, 0.7773333191871643, 0.7816666960716248, 0.7756666541099548, 0.7823333144187927, 0.7786666750907898, 0.7833333611488342, 0.7863333225250244, 0.7850000262260437, 0.7856666445732117, 0.7796666622161865, 0.7823333144187927, 0.7853333353996277]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 8, 5, 8, 2, 5, 3, 5, 5, 8, 2, 6, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 0, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [78, 83, 18, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [22], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.74314284324646, "mapping_values": [1, 20, 20, 13, 7, 4, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.square(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2987807651694108, 2.2906656599378605, 2.2832353362286364, 2.2750396723791972, 2.2668923530533265, 2.2578276690396306, 2.2501632245839343, 2.240232106732686, 2.23207042935565, 2.219664067671583, 2.2082121824748984, 2.1941122559036135, 2.1790917140145454, 2.165115782298495, 2.1445483190508536, 2.126864077125038, 2.105185646186368, 2.0846586450373477, 2.0590645905420244, 2.027168496236699, 2.0057097594058746, 1.9724193135934058, 1.9405998484239035, 1.9007824063064904, 1.8638548171909148, 1.8258351751558533, 1.7947512347668926, 1.7526384803046167, 1.7126720923285332, 1.6765340391702466, 1.6371750519527908, 1.598177974549393, 1.5604792476377436, 1.5300337482421404, 1.4974793092433913, 1.4718829503605442, 1.4336715160564362, 1.4173617748741176, 1.3828723275225319, 1.346799432152786, 1.3357333679713153, 1.31188459653644, 1.2880649842984169, 1.2761886191642076, 1.2563310672956263, 1.2441204478160943, 1.2254836941281835, 1.2175442916275314, 1.191958994094517, 1.1829632123731242, 1.1734862114538873, 1.1443291689190394, 1.1349875501685092, 1.1259866526035223, 1.1211579680804957, 1.0986753070611113, 1.0994228573523146, 1.0818700189084078, 1.0768616862379565, 1.0670599737943298, 1.05156735989081, 1.0418285123975348, 1.042122968530233, 1.035448005540795, 1.0203350396078212, 1.0143278232733681, 1.0084459558454062, 1.004663228484791, 0.9962717001983881, 0.98619145943016, 0.98141267775639, 0.9837540576581107, 0.9700363201944504, 0.9643868931595361, 0.9593460728951796, 0.9701780434911907, 0.9472867369321138, 0.9441349278461852, 0.9421208669654036, 0.943474776307747, 0.9325741717466164, 0.9332447925799275, 0.930226955667636, 0.9238598484719639, 0.9145292955351197, 0.9180080745324419, 0.9001498386970427, 0.9091184492108687, 0.8954788572390506, 0.8907699041898146, 0.8905710249119715, 0.8782966014510999, 0.8771239251996611, 0.8832198961961066, 0.8836035660985061, 0.8712295723424344, 0.8806327112504221, 0.8694510419985023, 0.8585061592165159, 0.8600552589854608], "accuracy": [0.09893012791872025, 0.12296922504901886, 0.1434420794248581, 0.16431118547916412, 0.18676528334617615, 0.20882314443588257, 0.22942808270454407, 0.2456742823123932, 0.2583542466163635, 0.27882710099220276, 0.2922995686531067, 0.30920618772506714, 0.3339056968688965, 0.3349623680114746, 0.36362436413764954, 0.361378937959671, 0.37921014428138733, 0.3789459764957428, 0.39387133717536926, 0.4089288115501404, 0.40562674403190613, 0.4155329465866089, 0.4216087758541107, 0.43323206901550293, 0.4443270266056061, 0.45132744312286377, 0.459780752658844, 0.46691322326660156, 0.4810461103916168, 0.476951539516449, 0.49570730328559875, 0.4979526996612549, 0.4991414546966553, 0.5115572810173035, 0.5223880410194397, 0.5200105905532837, 0.5280676484107971, 0.5254259705543518, 0.5418042540550232, 0.5455026030540466, 0.5581825375556946, 0.5629374980926514, 0.5589750409126282, 0.5641262531280518, 0.5667679309844971, 0.5711266398429871, 0.5775987505912781, 0.579447865486145, 0.5871087312698364, 0.5963544845581055, 0.5971469879150391, 0.6042794585227966, 0.5988640785217285, 0.6063928008079529, 0.6098269820213318, 0.6124686598777771, 0.6115440726280212, 0.6203936338424683, 0.6196011304855347, 0.6221106648445129, 0.6259410977363586, 0.6349227428436279, 0.6330735683441162, 0.6347906589508057, 0.6406022906303406, 0.6412627100944519, 0.6419231295585632, 0.6454893946647644, 0.6481310129165649, 0.6534143686294556, 0.6498481035232544, 0.6493197679519653, 0.6487914323806763, 0.6655659675598145, 0.6514331102371216, 0.6532822847366333, 0.6606789231300354, 0.6601505875587463, 0.6649055480957031, 0.6651697158813477, 0.6705851554870605, 0.6662263870239258, 0.6649055480957031, 0.6705851554870605, 0.6742834448814392, 0.6700568199157715, 0.6789063811302185, 0.6794346570968628, 0.678642213344574, 0.681547999382019, 0.6782459616661072, 0.6832650899887085, 0.6803592443466187, 0.6837934255599976, 0.6741513609886169, 0.6968696117401123, 0.6903975605964661, 0.6896050572395325, 0.6929071545600891, 0.6882842183113098], "val_loss": [1.9635391916547502, 1.956141539982387, 1.9486771992274694, 1.9411369051252092, 1.9333123479570662, 1.9251316615513392, 1.9164885112217493, 1.9072162764413017, 1.8971435001918249, 1.8862674576895577, 1.8743927138192313, 1.8612439973013741, 1.846620695931571, 1.8305985586983817, 1.8127871922084264, 1.793429170336042, 1.7722700663975306, 1.7493096079145158, 1.724343708583287, 1.6967075552259172, 1.6677069323403495, 1.6364879948752267, 1.6033119814736503, 1.567845378603254, 1.5308048384530204, 1.4923742158072335, 1.4537532670157296, 1.414318663733346, 1.374624831335885, 1.3355342320033483, 1.2966909408569336, 1.2588074207305908, 1.2218184130532401, 1.1866907732827323, 1.1534980365208216, 1.1220486845288957, 1.092017718723842, 1.0642635141100203, 1.0385118212018694, 1.013768025806972, 0.9911498001643589, 0.9698268686022077, 0.9499292033059257, 0.9319451195853097, 0.9148529938289097, 0.8992348739079067, 0.88420683997018, 0.8705330576215472, 0.8573925495147705, 0.8447654247283936, 0.8333084583282471, 0.8219449179513114, 0.8114510263715472, 0.8011749812534877, 0.7917958327702114, 0.7828507082802909, 0.774579644203186, 0.7668273448944092, 0.7593170915331159, 0.7521397726876395, 0.7448958839688983, 0.7381734848022461, 0.7320362159184047, 0.7260927302496774, 0.7205622707094465, 0.715357746396746, 0.7102642059326172, 0.7052928549902779, 0.7004386697496686, 0.695746660232544, 0.6916277068001884, 0.6877309765134539, 0.6838448388235909, 0.6796666043145316, 0.6760382652282715, 0.6729672636304583, 0.6696560042245048, 0.6658716031483242, 0.6629014526094709, 0.6598618200847081, 0.6563095194952828, 0.6536763906478882, 0.6512321744646344, 0.6481668438230243, 0.6455077443804059, 0.6429847989763532, 0.6400962897709438, 0.6377026012965611, 0.63499002797263, 0.6321420499256679, 0.6299676554543632, 0.6274718386786324, 0.6253447532653809, 0.6235983542033604, 0.6212879249027797, 0.6186972686222622, 0.6172736542565482, 0.6158639873777118, 0.6128787994384766, 0.6111950704029628], "val_accuracy": [0.09166666865348816, 0.1586666703224182, 0.23233333230018616, 0.2879999876022339, 0.33000001311302185, 0.36000001430511475, 0.37466666102409363, 0.3893333375453949, 0.40433332324028015, 0.4230000078678131, 0.43700000643730164, 0.4476666748523712, 0.4556666612625122, 0.4650000035762787, 0.47833332419395447, 0.4909999966621399, 0.5040000081062317, 0.5163333415985107, 0.5289999842643738, 0.5360000133514404, 0.5450000166893005, 0.5519999861717224, 0.5566666722297668, 0.5659999847412109, 0.5730000138282776, 0.5796666741371155, 0.5843333601951599, 0.5883333086967468, 0.5946666598320007, 0.6006666421890259, 0.6056666374206543, 0.6100000143051147, 0.6166666746139526, 0.6233333349227905, 0.6353333592414856, 0.6449999809265137, 0.6526666879653931, 0.6556666493415833, 0.6610000133514404, 0.6669999957084656, 0.6713333129882812, 0.6759999990463257, 0.6763333082199097, 0.6809999942779541, 0.6856666803359985, 0.6866666674613953, 0.6883333325386047, 0.6930000185966492, 0.6926666498184204, 0.6959999799728394, 0.6976666450500488, 0.6986666917800903, 0.6996666789054871, 0.7003333568572998, 0.7020000219345093, 0.7026666402816772, 0.70333331823349, 0.7053333520889282, 0.7070000171661377, 0.7086666822433472, 0.7110000252723694, 0.7133333086967468, 0.7146666646003723, 0.7139999866485596, 0.7153333425521851, 0.7153333425521851, 0.7183333039283752, 0.7223333120346069, 0.721666693687439, 0.721666693687439, 0.7210000157356262, 0.7239999771118164, 0.7256666421890259, 0.7250000238418579, 0.7266666889190674, 0.7283333539962769, 0.7276666760444641, 0.7286666631698608, 0.7283333539962769, 0.7300000190734863, 0.7296666502952576, 0.7319999933242798, 0.7306666374206543, 0.7316666841506958, 0.7319999933242798, 0.7336666584014893, 0.734333336353302, 0.7350000143051147, 0.7360000014305115, 0.737333357334137, 0.7356666922569275, 0.7369999885559082, 0.7369999885559082, 0.7369999885559082, 0.737666666507721, 0.7393333315849304, 0.7390000224113464, 0.7396666407585144, 0.7443333268165588, 0.7419999837875366]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 2, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.5362856984138489, "mapping_values": [1, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(grad, alpha))))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.332766331811985, 2.1971089452438193, 1.9358634338591785, 1.8294244419865526, 1.976400940441232, 1.8155549934369823, 1.9871650400603877, 1.972892133409573, 2.1457468582544315, 2.322355028660605, 2.3007336404455527], "accuracy": [0.20763438940048218, 0.21542729437351227, 0.37168142199516296, 0.41368380188941956, 0.3490952253341675, 0.3899088501930237, 0.35609564185142517, 0.35266146063804626, 0.27460044622421265, 0.09932637959718704, 0.11002509295940399], "val_loss": [1.6543729986463274, 1.6443362917218889, 1.5430916377476283, 1.6780946595328194, 1.5196144921439034, 1.2794996329716273, 1.9049107687813895, 1.9159204619271415, 2.0024194717407227, 1.9756086894444056, 1.8047434943062919], "val_accuracy": [0.4183333218097687, 0.3893333375453949, 0.37299999594688416, 0.4103333353996277, 0.37299999594688416, 0.54666668176651, 0.15833333134651184, 0.3050000071525574, 0.0989999994635582, 0.10433333367109299, 0.3160000145435333]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 0, 9, 2, 6, 5, 4, 2, 5, 5, 2, 7, 8, 2, 1, 2, 3, 4, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [6, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [4, 1, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.11742857098579407, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019528853784634, 2.301065434365303, 2.2981195114134736, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.09642054885625839, 0.11055342853069305, 0.10566636174917221, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9706791469029017, 1.9693058558872767, 1.963310922895159, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03999999910593033, 0.052000001072883606, 0.12266666442155838, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [5, 4, 1, 2, 2, 6, 5, 3, 2, 9, 2, 5, 7, 8, 1, 6, 5, 3, 9, 4, 5, 2, 3, 5, 8, 4, 6, 4, 2, 4, 1, 2], [2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 2, 1, 2, 0, 2, 0, 2, 1, 2, 1], [70, 6, 18, 3, 41, 92, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.11171428859233856, "mapping_values": [1, 33, 33, 21, 12, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), alpha))))), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.12984076885893, 2.8070762756714465, 2.320030678186151, 2.3058022136118876, 2.303577185684837, 2.3031366531796316], "accuracy": [0.19336943328380585, 0.22572976350784302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09430722147226334], "val_loss": [1.9375205721173967, 2.0126861844744, 1.9772438321794783, 1.9743218421936035, 1.9736888749258858, 1.973606722695487], "val_accuracy": [0.31033334136009216, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 3, 1, 1, 6, 5, 6, 2, 5, 5, 6, 7, 2, 2, 3, 8, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 2, 1, 1, 1], [70, 91, 28, 91, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [9, 4], [2, 0, 1, 5, 3, 4], [70], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 22, 16, 7, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.square(grad), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), grad)), grad)), grad), tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1204003821.843796, 23052076174.962357, 105974340936.25888, 296884527838.694, 629960385032.4534, 1162763160193.9104], "accuracy": [0.10077928751707077, 0.10355303436517715, 0.107647605240345, 0.10236428678035736, 0.09853387624025345, 0.09708096832036972], "val_loss": [4545552822.857142, 36353342317.71429, 122680496713.14285, 290783587766.8571, 567923497837.7142, 981348122624.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 1, 1, 2, 6, 5, 0, 2, 5, 9, 5, 7, 8, 2, 1, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 6, 18, 3, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1204003821.843796, 23052076174.962357, 105974340936.25888, 296884527838.694, 629960385032.4534, 1162763160193.9104], "accuracy": [0.10077928751707077, 0.10355303436517715, 0.107647605240345, 0.10236428678035736, 0.09853387624025345, 0.09708096832036972], "val_loss": [4545552822.857142, 36353342317.71429, 122680496713.14285, 290783587766.8571, 567923497837.7142, 981348122624.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 1, 1, 2, 6, 5, 0, 2, 5, 9, 5, 7, 8, 2, 1, 2, 3, 6, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 19, 75, 51, 83, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1], [3, 4, 2], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 7, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [5, 2, 1, 1, 2, 9, 5, 3, 5, 4, 9, 5, 7, 3, 1, 1, 5, 3, 2, 5, 5, 2, 3, 5, 8, 4, 6, 4, 2, 4, 1, 2], [2, 0, 2, 0, 0, 0, 2, 2, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [11], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 21, 11, 6, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad)), grad)))))))))), tf.math.square(tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 3, 6, 1, 2, 6, 5, 8, 2, 5, 3, 5, 1, 8, 0, 6, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 16, 92, 41, 36, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 3, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 5, 15, 15, 8, 7, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), alpha)), tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 9, 6, 1, 2, 9, 5, 5, 2, 5, 2, 5, 2, 3, 2, 1, 2, 3, 9, 2, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 15, 51, 83, 99, 44], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1], [3, 4, 0], [2, 0, 1, 5, 3, 4], [31], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.06485714018344879, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3009156284866363, 2.300489877586934, 2.302717027568452, 2.3022607451086077, 2.303947657075115, 2.3150363210610836, 2.5054163392414237, 3.705524030913924], "accuracy": [0.09694888442754745, 0.09417514503002167, 0.09047681838274002, 0.11187426000833511, 0.1026284471154213, 0.11306300014257431, 0.08387266844511032, 0.09747721254825592], "val_loss": [1.969399860927037, 1.9734083584376745, 1.9734982081821986, 1.9744856698172433, 1.977494716644287, 2.019702570778983, 2.5567823818751743, 4.648336546761649], "val_accuracy": [0.10999999940395355, 0.06300000101327896, 0.12133333086967468, 0.12133333086967468, 0.10999999940395355, 0.09799999743700027, 0.10166666656732559, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [5, 2, 6, 1, 2, 6, 2, 8, 2, 5, 3, 5, 4, 8, 2, 6, 2, 3, 2, 8, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4, 0, 2, 1, 6, 9, 7, 0, 5, 6, 6, 0, 9], [0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1, 1, 3, 3, 0, 0, 2], [20, 83, 18, 92, 41, 48, 99, 44, 30, 5], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [81], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 68, 68, 42, 26, 10, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 67, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.subtract(grad, tf.math.pow(alpha, grad)), alpha))))))), tf.math.add(alpha, grad))))))))))), alpha)), alpha)))))), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.square(grad)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302039474969243, 2.301838851293096, 2.3024317271295964, 2.302171143810306, 2.301991114448232, 2.3015372212757255], "accuracy": [0.09126931428909302, 0.09536388516426086, 0.09206181764602661, 0.09470347315073013, 0.08955223858356476, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 1, 2, 6, 5, 4, 2, 5, 5, 5, 7, 8, 4, 0, 2, 3, 6, 9, 6, 0, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 2, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [83, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302039474969243, 2.301838851293096, 2.3024317271295964, 2.302171143810306, 2.301991114448232, 2.3015372212757255], "accuracy": [0.09126931428909302, 0.09536388516426086, 0.09206181764602661, 0.09470347315073013, 0.08955223858356476, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 3, 1, 6, 2, 5, 4, 2, 5, 2, 5, 7, 8, 2, 1, 2, 4, 2, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 1, 0, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 4, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 47, 47, 28, 19, 4, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), tf.math.pow(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(alpha))))))), tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.math.pow(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302039474969243, 2.301838851293096, 2.3024317271295964, 2.302171143810306, 2.301991114448232, 2.3015372212757255], "accuracy": [0.09126931428909302, 0.09536388516426086, 0.09206181764602661, 0.09470347315073013, 0.08955223858356476, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 6, 1, 2, 6, 5, 8, 2, 1, 3, 5, 7, 8, 2, 6, 2, 3, 9, 9, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 0, 2, 0, 0, 0, 1, 1, 1, 1, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1], [70, 83, 42, 75, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 26, 26, 15, 11, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha))))), alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302039474969243, 2.301838851293096, 2.3024317271295964, 2.302171143810306, 2.301991114448232, 2.3015372212757255], "accuracy": [0.09126931428909302, 0.09536388516426086, 0.09206181764602661, 0.09470347315073013, 0.08955223858356476, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 9, 6, 1, 2, 9, 5, 5, 2, 5, 2, 5, 2, 3, 2, 1, 2, 3, 9, 2, 6, 2, 3, 5, 8, 4, 5, 4, 1, 4], [2, 2, 2, 0, 0, 0, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 2, 1, 1, 1], [70, 32, 28, 91, 51, 83, 99, 44], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [41], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 2, 2, 2, 0, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302039474969243, 2.301838851293096, 2.3024317271295964, 2.302171143810306, 2.301991114448232, 2.3015372212757255], "accuracy": [0.09126931428909302, 0.09536388516426086, 0.09206181764602661, 0.09470347315073013, 0.08955223858356476, 0.0948355570435524], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]