[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 3, 5, 3, 6, 4, 1, 8, 2, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.8028571605682373, "mapping_values": [1, 30, 30, 18, 12, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.065765856484129, 1.5611899278545267, 1.2997172626569176, 1.0181366526423947, 0.9588346247423626, 0.8300584525464312, 0.7887294998951182, 0.7698337919109643, 0.7175225555825904, 0.725627327347948, 0.6754069797839345, 0.6429050960135797, 0.6271048462024029, 0.6156290781622344, 0.6150056385187788, 0.614229912408953, 0.5684296920976272, 0.5624860323509914, 0.5730230207330499, 0.537956161553188, 0.545761136008197, 0.5587221345235769, 0.5268593002477295, 0.5154377944347267, 0.5048234107283049], "accuracy": [0.3019416332244873, 0.4768194556236267, 0.5569937825202942, 0.6111478209495544, 0.6289790272712708, 0.6760005354881287, 0.6959450244903564, 0.7038700580596924, 0.7170783281326294, 0.724739134311676, 0.7294940948486328, 0.7549861073493958, 0.7531369924545288, 0.7629110813140869, 0.7656848430633545, 0.7557786107063293, 0.7791573405265808, 0.7778365015983582, 0.776251494884491, 0.7930260300636292, 0.7903843522071838, 0.7796856164932251, 0.7903843522071838, 0.7993659973144531, 0.8031964302062988], "val_loss": [1.272244896207537, 1.4326335021427699, 0.765885557447161, 0.6989720378603254, 0.6739630017961774, 0.651553852217538, 0.6426847491945539, 0.5789673498698643, 0.5528072459357125, 0.5677681820733207, 0.5223054545266288, 0.514988797051566, 0.48690073830740793, 0.4955462557928903, 0.49814658505576, 0.46036323479243685, 0.4624029057366507, 0.47496157033102854, 0.4911799601146153, 0.4265834518841335, 0.4444176469530378, 0.450019325528826, 0.45509001186915804, 0.46097612380981445, 0.43584585189819336], "val_accuracy": [0.5113333463668823, 0.3736666738986969, 0.6823333501815796, 0.690666675567627, 0.6796666383743286, 0.6813333630561829, 0.7236666679382324, 0.7126666903495789, 0.7523333430290222, 0.7236666679382324, 0.7450000047683716, 0.7693333625793457, 0.7703333497047424, 0.777999997138977, 0.750333309173584, 0.7836666703224182, 0.7699999809265137, 0.7766666412353516, 0.762333333492279, 0.8213333487510681, 0.8053333163261414, 0.7960000038146973, 0.7990000247955322, 0.7770000100135803, 0.8080000281333923]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7954285740852356, "mapping_values": [1, 16, 16, 11, 5, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0658928215889456, 1.5581606703191275, 1.371017842937722, 1.0195400137801165, 0.9498698946711976, 0.8447456642416538, 0.789139023499167, 0.7534242815518534, 0.7519388398033297, 0.7272438987717573, 0.6660151851490551, 0.6626378738758917, 0.6350836993019578, 0.6088698398498512, 0.6279738684844316, 0.5703583810433672, 0.5844119015213616, 0.5726210702726823, 0.5660428834109494, 0.5626480098586938, 0.5232806803527966, 0.5255739263705038, 0.5129383780134038, 0.5080167233959685, 0.5094593840110823], "accuracy": [0.3016774654388428, 0.4772156774997711, 0.5363888740539551, 0.6108836531639099, 0.6259410977363586, 0.681547999382019, 0.6881521344184875, 0.7162858247756958, 0.7091533541679382, 0.7257958054542542, 0.7372870445251465, 0.7442874312400818, 0.7526086568832397, 0.7689869403839111, 0.763439416885376, 0.7841764688491821, 0.7718927264213562, 0.7753269076347351, 0.7829877138137817, 0.7836481332778931, 0.8020076751708984, 0.793422281742096, 0.8029322624206543, 0.8034605979919434, 0.7984414100646973], "val_loss": [1.2717107364109583, 1.4947547231401717, 0.740030016217913, 0.7466887405940464, 0.7351272106170654, 0.6229514394487653, 0.6175975288663592, 0.6100019557135445, 0.5790860993521554, 0.5768475021634784, 0.5199893031801496, 0.5266304527010236, 0.4906040259769985, 0.5024905034473964, 0.4759388140269688, 0.49334384713854107, 0.4619170257023403, 0.48879083565303255, 0.4703717402049473, 0.4443050112043108, 0.45833138057163786, 0.4207014356340681, 0.42593986647469656, 0.4562854426247733, 0.4406632270131792], "val_accuracy": [0.5099999904632568, 0.36666667461395264, 0.6693333387374878, 0.6470000147819519, 0.6806666851043701, 0.7143333554267883, 0.718999981880188, 0.7059999704360962, 0.7369999885559082, 0.7260000109672546, 0.7446666955947876, 0.7693333625793457, 0.7723333239555359, 0.7596666812896729, 0.7793333530426025, 0.7743333578109741, 0.7879999876022339, 0.7733333110809326, 0.7703333497047424, 0.8103333115577698, 0.7860000133514404, 0.8086666464805603, 0.8016666769981384, 0.7753333449363708, 0.7956666946411133]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 1, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7902857065200806, "mapping_values": [1, 15, 15, 10, 5, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), grad))))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.1355503045052995, 1.6437449468172551, 1.2642696971481409, 1.0867290146645932, 0.991960774189477, 0.8378055912077529, 0.8132666138184935, 0.749931105060852, 0.723258493890096, 0.6728596916099219, 0.6701517513777365, 0.6846917111718376, 0.644118634378433, 0.6319760529277914, 0.6130688985136317, 0.5927018334270074, 0.5821030510493778, 0.5756870379868028, 0.5631681527947832, 0.5705562213534424, 0.5445923337122673], "accuracy": [0.28239333629608154, 0.44551578164100647, 0.54655921459198, 0.5963544845581055, 0.6272619366645813, 0.6900013089179993, 0.6922467350959778, 0.7150970697402954, 0.7292299270629883, 0.7366266250610352, 0.7407211661338806, 0.7320036888122559, 0.755118191242218, 0.7656848430633545, 0.7647602558135986, 0.7688548564910889, 0.7732135653495789, 0.7823272943496704, 0.7886672616004944, 0.7878747582435608, 0.7868181467056274], "val_loss": [1.5025017942701067, 1.1549490179334367, 0.9386113371167865, 0.8667399883270264, 0.6835600989205497, 0.6548649753843035, 0.6377278225762504, 0.624596221106393, 0.5305734872817993, 0.5335292816162109, 0.5300968033926827, 0.5758856705256871, 0.5160421643938337, 0.5084517513002668, 0.49382191044943674, 0.46083315781184603, 0.4994382517678397, 0.47092132908957346, 0.4762539863586426, 0.5084634508405413, 0.4621581860951015], "val_accuracy": [0.429666668176651, 0.48633334040641785, 0.5730000138282776, 0.6169999837875366, 0.6773333549499512, 0.7003333568572998, 0.7210000157356262, 0.7129999995231628, 0.7576666474342346, 0.7570000290870667, 0.7606666684150696, 0.734000027179718, 0.7713333368301392, 0.7676666378974915, 0.7636666893959045, 0.7923333048820496, 0.7773333191871643, 0.7879999876022339, 0.7856666445732117, 0.7570000290870667, 0.7883333563804626]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 8, 0, 3, 9, 4, 6, 8, 6, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [31], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7825714349746704, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2826341410606545, 2.230463724945042, 2.151487304046091, 2.011736407649673, 1.8145170571734452, 1.595859330532778, 1.41619588931664, 1.27532397044286, 1.182166113420138, 1.1184130962010561, 1.0699171299758667, 1.0099099822851172, 0.9745842044096203, 0.9381473540724418, 0.914573597830867, 0.8936317599822722, 0.8688117850725882, 0.8513218297336111, 0.8409334746617619, 0.8494413060172674, 0.8205505401356629, 0.8022712189854254, 0.8008083113747313, 0.7827751687599321, 0.7781400843193156, 0.7785568732501116, 0.7570795891008136, 0.7480284680606604, 0.7583727802756031, 0.7384598717918139, 0.7382214065115166, 0.7273658217770974, 0.7183770224355578, 0.7243526831294851, 0.7170115928010005, 0.7033726655733096, 0.6995866630512253, 0.6922068885839878, 0.697885711360617, 0.6848740909062104, 0.6978414442246034, 0.687691171313195, 0.6765129846384056, 0.6770893060504454, 0.6757013891682003, 0.6634163925392973, 0.6681148362134536, 0.6563528108401557, 0.6535050836631005, 0.6558224317215343, 0.6492265759284674], "accuracy": [0.14449875056743622, 0.25716549158096313, 0.35543522238731384, 0.4072117209434509, 0.44630828499794006, 0.4924052357673645, 0.5334830284118652, 0.5672962665557861, 0.5869766473770142, 0.6066569685935974, 0.6229031682014465, 0.6485272645950317, 0.653150200843811, 0.6674151420593262, 0.6730946898460388, 0.6840575933456421, 0.6893408894538879, 0.6929071545600891, 0.6934354901313782, 0.6952846646308899, 0.709021270275116, 0.7104741930961609, 0.7113987803459167, 0.713908314704895, 0.7174745798110962, 0.7228899598121643, 0.7189275026321411, 0.7304186820983887, 0.7230220437049866, 0.7283053994178772, 0.7305507659912109, 0.7326641082763672, 0.7423061728477478, 0.7339849472045898, 0.7364945411682129, 0.7392682433128357, 0.7457403540611267, 0.7449478507041931, 0.7442874312400818, 0.7528728246688843, 0.7412495017051697, 0.7445515990257263, 0.7494386434555054, 0.7511557340621948, 0.7534011602401733, 0.7534011602401733, 0.7535332441329956, 0.7567031979560852, 0.7585523724555969, 0.7580240368843079, 0.7604015469551086], "val_loss": [1.9266841752188546, 1.8660618237086706, 1.761988912309919, 1.5914020878928048, 1.3667981624603271, 1.150730984551566, 0.9934413433074951, 0.8865583624158587, 0.8144383600779942, 0.7656776053564889, 0.7306804997580392, 0.696068252835955, 0.6756401062011719, 0.6574493135724749, 0.6418243987219674, 0.6276024750300816, 0.616052338055202, 0.606304577418736, 0.5939316238675799, 0.5883965151650565, 0.577965497970581, 0.5700618539537702, 0.5639681645802089, 0.5630251680101667, 0.5539748838969639, 0.548892753464835, 0.5444556985582624, 0.540026102747236, 0.5392592464174543, 0.5345957960401263, 0.5354460988725934, 0.5227562018803188, 0.5181890385491508, 0.5154043095452445, 0.5137469257627215, 0.5089177233832223, 0.5079144239425659, 0.5068480287279401, 0.5044254064559937, 0.4988000733511789, 0.502618500164577, 0.49497759342193604, 0.49715079580034527, 0.49254655838012695, 0.48671410764966694, 0.48547821385519846, 0.48733350208827425, 0.48155367374420166, 0.4786501782281058, 0.47591895716530935, 0.4780479499271938], "val_accuracy": [0.3633333444595337, 0.44699999690055847, 0.5036666393280029, 0.5583333373069763, 0.5866666436195374, 0.6173333525657654, 0.6626666784286499, 0.6819999814033508, 0.6943333148956299, 0.699999988079071, 0.7113333344459534, 0.7223333120346069, 0.721666693687439, 0.7300000190734863, 0.734666645526886, 0.7390000224113464, 0.7406666874885559, 0.7423333525657654, 0.7446666955947876, 0.7553333044052124, 0.7459999918937683, 0.7563333511352539, 0.7570000290870667, 0.7613333463668823, 0.7620000243186951, 0.7706666588783264, 0.7596666812896729, 0.7706666588783264, 0.7716666460037231, 0.7720000147819519, 0.7743333578109741, 0.7743333578109741, 0.7773333191871643, 0.7760000228881836, 0.7789999842643738, 0.778333306312561, 0.7803333401679993, 0.7746666669845581, 0.7743333578109741, 0.7816666960716248, 0.7776666879653931, 0.7833333611488342, 0.7829999923706055, 0.7833333611488342, 0.7853333353996277, 0.7923333048820496, 0.7893333435058594, 0.7873333096504211, 0.7886666655540466, 0.7913333177566528, 0.7829999923706055]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 2, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7565714120864868, "mapping_values": [1, 16, 16, 11, 5, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.0284369121594845, 1.6664846450928856, 1.3265462249828415, 1.0672582380366347, 0.9405669587210516, 0.8465041898308082, 0.8090852260778546, 0.7767635631901383, 0.7369114118103558, 0.7032942750340266, 0.6891702751064062], "accuracy": [0.30207371711730957, 0.4445911943912506, 0.5362567901611328, 0.6026945114135742, 0.637828528881073, 0.6826046705245972, 0.7013604640960693, 0.7073041796684265, 0.7263241410255432, 0.726192057132721, 0.7296261787414551], "val_loss": [1.4855802399771554, 1.0701250348772322, 0.8232065950121198, 0.7923827171325684, 0.6743791614259992, 0.6191640070506504, 0.6461999756949288, 0.5968014853341239, 0.5735064234052386, 0.5741840260369437, 0.5506870916911534], "val_accuracy": [0.4046666622161865, 0.5180000066757202, 0.637666642665863, 0.609000027179718, 0.687333345413208, 0.7463333606719971, 0.6899999976158142, 0.7333333492279053, 0.7246666550636292, 0.7213333249092102, 0.7329999804496765]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 0, 4, 9, 4, 1, 5, 3, 5, 8, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [45, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7382857203483582, "mapping_values": [1, 25, 25, 15, 10, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.pow(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.089263410742068, 1.5841232984766056, 1.3147342768894479, 1.0418374697451327, 0.923211197331282, 0.8857168854424479, 0.7941323236593434, 0.8088532791256101, 0.75575729214583, 0.6960121715356961, 0.7120274132300425], "accuracy": [0.3008849620819092, 0.4570069909095764, 0.5341434478759766, 0.6012415885925293, 0.6513010263442993, 0.6686038970947266, 0.6925109028816223, 0.7033417224884033, 0.7124554514884949, 0.7251353859901428, 0.7264562249183655], "val_loss": [1.4862802369253976, 1.3806064469473702, 0.9575880595615932, 0.6926139082227435, 0.6582000766481672, 0.5711583069392613, 0.6253695487976074, 0.6045817307063511, 0.5750667708260673, 0.6343841212136405, 0.5487996680395943], "val_accuracy": [0.3426666557788849, 0.40033334493637085, 0.531333327293396, 0.6600000262260437, 0.7076666951179504, 0.7443333268165588, 0.7326666712760925, 0.7356666922569275, 0.7166666388511658, 0.687333345413208, 0.7419999837875366]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 3, 2, 5, 3, 9, 4, 1, 2, 3, 2, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 79, 77, 34, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [67], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [28, 18, 10, 42]], "fitness": -0.15199999511241913, "mapping_values": [1, 30, 30, 18, 12, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.4398004564359095, 2.3118124082497538, 2.2576043380486133, 2.5033512712863333, 2.299906147563966, 2.8354987948877053, 2.3054723292136505, 2.303484000298073, 2.3030716395097843, 2.302939317292856], "accuracy": [0.19152027368545532, 0.10170386731624603, 0.1682736724615097, 0.160084530711174, 0.11913882195949554, 0.13617752492427826, 0.09813763201236725, 0.09259014576673508, 0.09285431355237961, 0.09840179979801178], "val_loss": [2.0036570685250417, 1.9689510209219796, 2.0336804389953613, 1.9768729891095842, 1.8720630237034388, 1.9775691032409668, 1.9739857401166643, 1.9737064497811454, 1.9737263407026018, 1.973656449999128], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.0989999994635582, 0.0989999994635582, 0.23266667127609253, 0.09799999743700027, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 0, 2, 9, 4, 1, 5, 3, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 0, 2, 1, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [1, 4, 4, 2, 8, 8, 8, 4], [2, 1, 1, 5, 3, 4], [20], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 5, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(alpha, alpha))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302525152540982, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 0, 2, 5, 3, 9, 4, 1, 8, 3, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 2, 8, 5, 3, 9, 8, 2, 9, 0, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 1, 1, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [56, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302525152540982, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 0, 2, 5, 3, 9, 4, 1, 8, 3, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [3, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 79, 77, 34, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302525152540982, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 89, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302525152540982, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 8, 5, 3, 9, 4, 2, 8, 6, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 2, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [64, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302525152540982, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 3, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 35, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [0, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [93], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 11, 5, 6, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [16037432224.996714, 2376866836115.899, 40060347603229.38, 276172083117666.66, 1249596031015351.0, 4116054785468364.5], "accuracy": [0.09800554811954498, 0.10038304328918457, 0.0948355570435524, 0.10447761416435242, 0.09932637959718704, 0.10130762308835983], "val_loss": [130421260288.0, 7030622238427.429, 75462225465929.14, 411410957860864.0, 1540956189435026.2, 4545569741003630.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 1, 5, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 41, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [2, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1], [3, 4, 4, 2, 8, 8, 8, 4], [2, 4, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 5, 1, 1, 0, 1, 0, 7, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 8, 5, 3, 9, 4, 2, 8, 6, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 90, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [0, 0, 1, 5, 3, 4], [46, 84], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [7828950.594654727, 122423301.52846387, 540858247.7094175, 1430018807.1747458, 3102161503.0490026, 5662331951.270902], "accuracy": [0.09787346422672272, 0.10038304328918457, 0.09470347315073013, 0.10460969805717468, 0.09932637959718704, 0.10130762308835983], "val_loss": [21477454.285714287, 171301074.2857143, 577275830.8571428, 1367011072.0, 2668045970.285714, 4607918518.857142], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 0, 4, 9, 4, 1, 5, 3, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [0, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 16, 85, 75, 90, 85, 89, 98, 7, 56], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [28, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.pow(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 2, 5, 3, 9, 4, 1, 8, 9, 5, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 1, 0, 1, 2, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 75, 81, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [5, 4, 4, 2, 8, 8, 8, 4], [4, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302001038090176, 2.302846223104112, 2.3059242476467223, 2.3052619018763787, 2.309773671109017, 2.3137269254373822, 2.3190551328148903, 2.3203606166544843, 2.3249451367452934, 2.3345969309660077, 2.3604863313494295, 2.4799621505445066, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09377889335155487, 0.0878351628780365, 0.08506141602993011, 0.08492933213710785, 0.07911768555641174, 0.07713644206523895, 0.07700435817241669, 0.07806102186441422, 0.07700435817241669, 0.06973979622125626, 0.08955223858356476, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716956956045968, 1.9726409912109375, 1.9740371704101562, 1.9756779670715332, 1.9779295921325684, 1.9805685452052526, 1.9833592006138392, 1.9865916797092982, 1.9909443855285645, 1.9989754131862096, 2.0222667966570174, 18.81323296683175, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.030666666105389595, 0.027000000700354576, 0.02800000086426735, 0.03233333304524422, 0.03733333200216293, 0.049666665494441986, 0.06066666543483734, 0.07500000298023224, 0.08966666460037231, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 1, 8, 6, 8, 9, 4, 2, 8, 6, 5, 2, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [2, 0, 0, 1, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 85, 65, 90, 97, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [4, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 16, 16, 10, 6, 5, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301681207549287, 2.3016250393315394, 2.303029419770881, 2.3007755253088553, 2.3023428958814223, 2.30296310753697], "accuracy": [0.09708096832036972, 0.0952318087220192, 0.09325055778026581, 0.09351472556591034, 0.0952318087220192, 0.09272222965955734], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [6, 1, 2, 5, 3, 9, 4, 9, 9, 2, 4, 9, 1, 3, 2, 8, 6, 8, 9, 9, 6, 2, 2, 5, 8, 4, 5, 4, 1, 4], [1, 1, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 2, 1, 2, 1], [23, 82, 40, 75, 76, 52, 89, 98, 7, 56], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 0, 3, 1, 3], [53], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0], [3, 4, 4, 2, 8, 8, 8, 4], [2, 0, 1, 5, 3, 4], [46], [1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301681207549287, 2.3016250393315394, 2.303029419770881, 2.3007755253088553, 2.3023428958814223, 2.30296310753697], "accuracy": [0.09708096832036972, 0.0952318087220192, 0.09325055778026581, 0.09351472556591034, 0.0952318087220192, 0.09272222965955734], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]