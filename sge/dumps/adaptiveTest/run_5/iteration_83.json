[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7642857432365417, "mapping_values": [1, 44, 44, 27, 17, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2929842832963607, 2.271495130666416, 2.2496427072273852, 2.2223279762419224, 2.188215150116394, 2.1415904093223275, 2.0846557077746177, 2.013823309311258, 1.9286527603435604, 1.825753738552336, 1.7259547542728972, 1.630191367851225, 1.5234635826965381, 1.448049810521276, 1.3711900430002137, 1.3107488551522133, 1.2596236619935486, 1.2140436325374298, 1.1824425374197214, 1.1354128554229173, 1.1117161124405404, 1.0826612565149296, 1.063033268499242, 1.04094216019297, 1.0200957156380233, 0.9962818661952897, 0.9741268956886385, 0.9552928405100282, 0.9434171817195949, 0.9357870240504983, 0.9353923585908981, 0.9111161955186106, 0.9073015658406062, 0.8881354590354106, 0.8829264732210816, 0.8708157078890107, 0.85869361729654, 0.854395019545169, 0.8532025195100226, 0.8392125417323019, 0.846203040996358, 0.8297285232026232, 0.8412440084289992, 0.8257684645840457, 0.8160220552602417, 0.8102401535839469, 0.8033591995401752, 0.7997475534523987, 0.794174062317672, 0.7846940526353243, 0.7895650735478974, 0.7850599365542357, 0.7777356004607896, 0.7756614647111904, 0.7673624725688828, 0.7669440403417306, 0.7772488973364617, 0.7578459671538472, 0.7579030074920196, 0.7464545968265077, 0.7439878769302569, 0.7511615812613145, 0.7523831655919009, 0.7385696973609823], "accuracy": [0.11398758739233017, 0.17316074669361115, 0.22678641974925995, 0.2739400267601013, 0.32320696115493774, 0.35543522238731384, 0.3883238732814789, 0.40641921758651733, 0.42689210176467896, 0.45330867171287537, 0.46770572662353516, 0.48606523871421814, 0.5074626803398132, 0.527010977268219, 0.5411438345909119, 0.5536917448043823, 0.5646545886993408, 0.5838066339492798, 0.5933166146278381, 0.6008453369140625, 0.6118082404136658, 0.6168273687362671, 0.627129852771759, 0.6357152462005615, 0.6400739550590515, 0.646149754524231, 0.6583014130592346, 0.6635847091674805, 0.6682076454162598, 0.6679434776306152, 0.6654338836669922, 0.6732267737388611, 0.6775855422019958, 0.6819442510604858, 0.6808875799179077, 0.6839255094528198, 0.6935675740242004, 0.6911900639533997, 0.6915863156318665, 0.698718786239624, 0.7003037929534912, 0.7042662501335144, 0.6936996579170227, 0.6992471218109131, 0.7065116763114929, 0.7041342258453369, 0.7080966830253601, 0.7079645991325378, 0.7098137736320496, 0.7147008180618286, 0.7153612375259399, 0.7143045663833618, 0.718399167060852, 0.7195879220962524, 0.7209087014198303, 0.7197200059890747, 0.7195879220962524, 0.7234182953834534, 0.7235503792762756, 0.7314753532409668, 0.7268524765968323, 0.7253995537757874, 0.7217012047767639, 0.7312111854553223], "val_loss": [1.950815064566476, 1.9300832067217146, 1.9060314723423548, 1.8768113000052316, 1.8395393235342843, 1.7906006404331751, 1.727447509765625, 1.6500838143484933, 1.5578767572130476, 1.454427650996617, 1.3477213382720947, 1.246168613433838, 1.1511516230446952, 1.0722996507372176, 1.0038650717054094, 0.9483610561915806, 0.9018439224788121, 0.862912484577724, 0.8301981176648822, 0.8019164630344936, 0.7771240983690534, 0.7567087922777448, 0.7387416192463466, 0.7221845388412476, 0.7107960326331002, 0.6975642613002232, 0.6838490111487252, 0.6735477277210781, 0.6633319343839373, 0.6556886264256069, 0.6488244363239833, 0.641740219933646, 0.6334865774427142, 0.6283973966326032, 0.6217995371137347, 0.6151767117636544, 0.6092823232923236, 0.6056903089795794, 0.6035420724323818, 0.5970816271645683, 0.5933321373803275, 0.5886849335261753, 0.5864080360957554, 0.5824915851865496, 0.5782881293978009, 0.5750058208193097, 0.571530648640224, 0.5689425979341779, 0.566180774143764, 0.5618453536714826, 0.5621408905301776, 0.5588751690728324, 0.5568996667861938, 0.5524007422583443, 0.5506966965539115, 0.5487468072346279, 0.5458965982709613, 0.5445526838302612, 0.5405070952006749, 0.5376850536891392, 0.5364003522055489, 0.5354466267994472, 0.5347099474498204, 0.5303350687026978], "val_accuracy": [0.20866666734218597, 0.3423333466053009, 0.39533331990242004, 0.43533334136009216, 0.4646666646003723, 0.49300000071525574, 0.5266666412353516, 0.5476666688919067, 0.5659999847412109, 0.5803333520889282, 0.5946666598320007, 0.609666645526886, 0.621999979019165, 0.6496666669845581, 0.6693333387374878, 0.6710000038146973, 0.6896666884422302, 0.6913333535194397, 0.6959999799728394, 0.6990000009536743, 0.70333331823349, 0.7103333473205566, 0.7106666564941406, 0.7153333425521851, 0.7203333377838135, 0.7253333330154419, 0.7233333587646484, 0.7239999771118164, 0.7303333282470703, 0.731333315372467, 0.7336666584014893, 0.7353333234786987, 0.7383333444595337, 0.7390000224113464, 0.7379999756813049, 0.7433333396911621, 0.7433333396911621, 0.7483333349227905, 0.7413333058357239, 0.7419999837875366, 0.7509999871253967, 0.749666690826416, 0.7549999952316284, 0.7536666393280029, 0.753333330154419, 0.7596666812896729, 0.7546666860580444, 0.7556666731834412, 0.7546666860580444, 0.7599999904632568, 0.7580000162124634, 0.7583333253860474, 0.7590000033378601, 0.7620000243186951, 0.768666684627533, 0.7666666507720947, 0.7703333497047424, 0.765666663646698, 0.7720000147819519, 0.7696666717529297, 0.7706666588783264, 0.7713333368301392, 0.7713333368301392, 0.7710000276565552]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 4, 4, 4, 6, 8, 2, 6, 5, 7, 4, 6, 4, 4, 0, 8, 7, 7, 9, 5], [2, 0, 0, 1, 0, 3, 1, 3, 2, 1, 0, 0, 0, 3, 2, 0, 2], [40, 91, 79, 22, 69, 98], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7642857432365417, "mapping_values": [1, 30, 30, 17, 13, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, alpha)), tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2929842832963607, 2.2714944605058323, 2.249640350060897, 2.2223227763172817, 2.1882056180339022, 2.1415745973933435, 2.0846399814697416, 2.0138127467320848, 1.9286480006320113, 1.825755137431072, 1.725961086740898, 1.6301992156832776, 1.523448570938851, 1.4480383193818822, 1.3711837781749427, 1.3107798187377793, 1.2596492530206538, 1.2140364845462557, 1.1824515463889882, 1.1354157753340903, 1.1117136024480891, 1.0826445020279627, 1.063011206844936, 1.0408968973499892, 1.019993483571486, 0.9962010881636577, 0.9741026111298454, 0.9552960461235601, 0.9433372961279738, 0.9357258929961928, 0.9353083044215751, 0.9111233447772983, 0.9072830947697863, 0.8880932595294937, 0.8828699541224181, 0.8707866219875284, 0.8586776478336849, 0.8544190257547586, 0.8531853981683157, 0.8392360545719431, 0.8461999990495755, 0.829665330100006, 0.8411834256886145, 0.8258543779837095, 0.8160586967570292, 0.8102693419257458, 0.8033609673205683, 0.7996978723472215, 0.7943018850964042, 0.784772958517421, 0.7895598170811143, 0.7850133926955669, 0.7778364178952036, 0.7757038907635686, 0.7673089820254417, 0.7670107878131511, 0.7772773343574227, 0.7579041553478923, 0.7579480199970668, 0.7464550538006995, 0.7440428077867554, 0.7512341815844944, 0.75231008819538, 0.7385938224255874], "accuracy": [0.11398758739233017, 0.17302866280078888, 0.22678641974925995, 0.27380794286727905, 0.32333904504776, 0.3556993901729584, 0.3883238732814789, 0.4060229957103729, 0.42689210176467896, 0.45344075560569763, 0.4678378105163574, 0.48606523871421814, 0.5074626803398132, 0.5268788933753967, 0.5411438345909119, 0.5535596609115601, 0.5645225048065186, 0.5844670534133911, 0.5930524468421936, 0.6008453369140625, 0.6118082404136658, 0.6169594526290894, 0.6273940205574036, 0.6365077495574951, 0.6399418711662292, 0.6462818384170532, 0.6581693291664124, 0.663848876953125, 0.6682076454162598, 0.6676793098449707, 0.6650376319885254, 0.6737551093101501, 0.6775855422019958, 0.6822084188461304, 0.6814159154891968, 0.6840575933456421, 0.6939638257026672, 0.6911900639533997, 0.6907938122749329, 0.698718786239624, 0.7000396251678467, 0.7042662501335144, 0.694360077381134, 0.6988508701324463, 0.7062475085258484, 0.7045304179191589, 0.7077004313468933, 0.7078325152397156, 0.711530864238739, 0.7154933214187622, 0.7148329019546509, 0.7144366502761841, 0.7185312509536743, 0.7195879220962524, 0.7213049530982971, 0.7189275026321411, 0.7202483415603638, 0.7230220437049866, 0.7235503792762756, 0.7312111854553223, 0.7271166443824768, 0.7253995537757874, 0.7217012047767639, 0.7312111854553223], "val_loss": [1.9508153370448522, 1.9300800732203893, 1.9060285431998116, 1.8768024444580078, 1.8395248821803503, 1.7905821800231934, 1.7274336133684431, 1.6500835078103202, 1.5578808443886893, 1.4544401509421212, 1.3477301256997245, 1.2461636407034737, 1.1511405195508684, 1.0723000253949846, 1.003899097442627, 0.9484316962105888, 0.9019035271235875, 0.8629591805594308, 0.8302557809012276, 0.8019706351416451, 0.7771380628858294, 0.7566928352628436, 0.7387236697333199, 0.7221172707421439, 0.7107359341212681, 0.6975621836526054, 0.6838531834738595, 0.673546280179705, 0.6633469547544207, 0.6557582446507045, 0.6488635880606515, 0.6417611496789115, 0.633505037852696, 0.6283841984612601, 0.6217689343861171, 0.6152024098805019, 0.6092986209051949, 0.6056939874376569, 0.6035825865609306, 0.597075172833034, 0.5933831248964582, 0.5886846269880023, 0.5864015136446271, 0.5824904271534511, 0.5782855238233294, 0.5749894039971488, 0.5715166500636509, 0.5689372164862496, 0.5661793947219849, 0.5618500709533691, 0.5620683431625366, 0.5589120558329991, 0.557057227407183, 0.5524223702294486, 0.5507262604577201, 0.5487637860434396, 0.5459043979644775, 0.5445811407906669, 0.5405224221093314, 0.5376709869929722, 0.5364417348589215, 0.5354557037353516, 0.5346547535487584, 0.530356798853193], "val_accuracy": [0.20866666734218597, 0.3423333466053009, 0.39500001072883606, 0.43533334136009216, 0.4650000035762787, 0.49300000071525574, 0.5273333191871643, 0.5476666688919067, 0.5659999847412109, 0.5799999833106995, 0.5946666598320007, 0.609666645526886, 0.621999979019165, 0.6496666669845581, 0.6690000295639038, 0.6713333129882812, 0.6896666884422302, 0.6909999847412109, 0.6966666579246521, 0.6986666917800903, 0.7036666870117188, 0.7103333473205566, 0.7103333473205566, 0.7153333425521851, 0.7203333377838135, 0.7253333330154419, 0.7229999899864197, 0.7239999771118164, 0.7306666374206543, 0.731333315372467, 0.734000027179718, 0.7356666922569275, 0.7379999756813049, 0.7393333315849304, 0.7383333444595337, 0.7433333396911621, 0.7436666488647461, 0.7483333349227905, 0.7413333058357239, 0.7423333525657654, 0.7513333559036255, 0.75, 0.7559999823570251, 0.7540000081062317, 0.7526666522026062, 0.7586666941642761, 0.7536666393280029, 0.7559999823570251, 0.7546666860580444, 0.7599999904632568, 0.7580000162124634, 0.7583333253860474, 0.7590000033378601, 0.7613333463668823, 0.7683333158493042, 0.7666666507720947, 0.7699999809265137, 0.765999972820282, 0.7720000147819519, 0.7696666717529297, 0.7710000276565552, 0.7716666460037231, 0.7713333368301392, 0.7710000276565552]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 5, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 8, 9, 4, 5, 8, 5, 5], [2, 0, 2, 2, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 2, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7642857432365417, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2929842832963607, 2.2714944605058323, 2.2496404130429544, 2.222322677372469, 2.188204794795427, 2.141573738192114, 2.084638959963749, 2.0138127756565947, 1.9286507084825963, 1.8257545326773548, 1.72595219603619, 1.6301920494745437, 1.5234477201142347, 1.4480267723931486, 1.3711730108096096, 1.3107760904833876, 1.2596481633838206, 1.2140465785546657, 1.1824555115976259, 1.1354105941466117, 1.1117185577976547, 1.0826640196952522, 1.0630690520701864, 1.0409642932374386, 1.0200950953119923, 0.9963442790368136, 0.9741950669639445, 0.9554433951587599, 0.9434490371783333, 0.9357637062899079, 0.9354188423650518, 0.9111942686204504, 0.9072898686396652, 0.888141612532022, 0.8829024279389982, 0.8707789047015357, 0.8587574152473477, 0.8544828882857934, 0.8532887432616479, 0.8392875536069768, 0.8462640080768765, 0.8297137184354686, 0.841261585312056, 0.8259358651854375, 0.8160793850324598, 0.8103233822789316, 0.803431579796173, 0.7997206989107446, 0.79440502667109, 0.7848281612910804, 0.7896455286390289, 0.7850753677173171, 0.7779131040770254, 0.7757739707809854, 0.7673821712229876, 0.7670207952605955, 0.7773205017479828, 0.7579031819365737, 0.7579649264912296, 0.7464482335130442, 0.7440618991599879, 0.7512075961021905, 0.7524429722831171, 0.7386411156526504], "accuracy": [0.11398758739233017, 0.17302866280078888, 0.22678641974925995, 0.27380794286727905, 0.3234711289405823, 0.3555673062801361, 0.3881917893886566, 0.4060229957103729, 0.42689210176467896, 0.45344075560569763, 0.46770572662353516, 0.4861973226070404, 0.5069343447685242, 0.5268788933753967, 0.5411438345909119, 0.5535596609115601, 0.5645225048065186, 0.5842028856277466, 0.5931845307350159, 0.6008453369140625, 0.611940324306488, 0.6169594526290894, 0.627129852771759, 0.6361114978790283, 0.6400739550590515, 0.6464139223098755, 0.6581693291664124, 0.663848876953125, 0.668339729309082, 0.6679434776306152, 0.6651697158813477, 0.6733588576316833, 0.6775855422019958, 0.6818121671676636, 0.681547999382019, 0.6837934255599976, 0.6939638257026672, 0.6913221478462219, 0.691850483417511, 0.698718786239624, 0.700171709060669, 0.7045304179191589, 0.693831741809845, 0.6985867023468018, 0.7062475085258484, 0.7045304179191589, 0.7074362635612488, 0.7080966830253601, 0.7111346125602722, 0.7153612375259399, 0.7148329019546509, 0.7141724824905396, 0.7177387475967407, 0.7193237543106079, 0.7214370369911194, 0.7193237543106079, 0.7199841737747192, 0.722229540348053, 0.7238145470619202, 0.7314753532409668, 0.7269845604896545, 0.7257958054542542, 0.7217012047767639, 0.7312111854553223], "val_loss": [1.9508153370448522, 1.9300800732203893, 1.9060286113194056, 1.8768025125776018, 1.8395250184195382, 1.7905822481427873, 1.7274330002920968, 1.6500835759299142, 1.5578837735312325, 1.4544309207371302, 1.3477227006639754, 1.246171270098005, 1.1511320727212089, 1.072284460067749, 1.003890037536621, 0.9484246798924038, 0.9018908228193011, 0.8629443645477295, 0.8302438599722726, 0.8019621542521885, 0.7771357468196324, 0.7567246811730521, 0.7387464557375226, 0.7221535103661674, 0.7107693978718349, 0.6976476907730103, 0.6839639799935477, 0.6736562762941632, 0.663423878805978, 0.6558034590312413, 0.648917385510036, 0.6417862347194127, 0.6336359977722168, 0.6284078359603882, 0.6218350785119193, 0.6152027504784721, 0.6093430008207049, 0.6057571853910174, 0.6037039075578962, 0.5971674408231463, 0.5934205225535801, 0.5887481144496373, 0.5864673342023577, 0.582568883895874, 0.5783183063779559, 0.5750818763460431, 0.571608134678432, 0.5690477405275617, 0.5662858997072492, 0.5618984188352313, 0.5621371098927089, 0.5588788645608085, 0.5569855315344674, 0.5524025644574847, 0.5507089410509381, 0.5486706324986049, 0.545923147882734, 0.5445416825158256, 0.5405525650296893, 0.5377155031476702, 0.5364841903959002, 0.5354713542120797, 0.5347285270690918, 0.5303848470960345], "val_accuracy": [0.20866666734218597, 0.3423333466053009, 0.39500001072883606, 0.43533334136009216, 0.4646666646003723, 0.49300000071525574, 0.5270000100135803, 0.5476666688919067, 0.5659999847412109, 0.5799999833106995, 0.5946666598320007, 0.6100000143051147, 0.621999979019165, 0.6496666669845581, 0.6690000295639038, 0.6713333129882812, 0.6893333196640015, 0.6909999847412109, 0.6966666579246521, 0.6986666917800903, 0.70333331823349, 0.7106666564941406, 0.7103333473205566, 0.7153333425521851, 0.7203333377838135, 0.7253333330154419, 0.7226666808128357, 0.7236666679382324, 0.7300000190734863, 0.731333315372467, 0.734333336353302, 0.7356666922569275, 0.7379999756813049, 0.7393333315849304, 0.737666666507721, 0.7440000176429749, 0.7436666488647461, 0.7480000257492065, 0.7409999966621399, 0.7423333525657654, 0.7513333559036255, 0.75, 0.7556666731834412, 0.753333330154419, 0.7526666522026062, 0.7593333125114441, 0.7543333172798157, 0.7563333511352539, 0.7546666860580444, 0.7599999904632568, 0.7576666474342346, 0.7580000162124634, 0.7599999904632568, 0.7620000243186951, 0.768666684627533, 0.7663333415985107, 0.7699999809265137, 0.7663333415985107, 0.7720000147819519, 0.7696666717529297, 0.7710000276565552, 0.7716666460037231, 0.7710000276565552, 0.7710000276565552]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 4, 1, 5, 6, 5, 8, 5, 4, 1, 7, 5, 0, 5, 9], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7642857432365417, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.292984220314303, 2.2714944919968607, 2.2496404130429544, 2.2223227763172817, 2.188205438125655, 2.1415761402648092, 2.0846430403823155, 2.0138182708411216, 1.9286553983627892, 1.8257607176728678, 1.725969690263169, 1.630208893758179, 1.5234757257789557, 1.4480565209603502, 1.3711943501226969, 1.3107917857696005, 1.2596607721240813, 1.2140479580821646, 1.182463593880388, 1.1354295155627616, 1.1117265675093408, 1.0826693788385346, 1.063037095320554, 1.040957111062753, 1.0200639932603726, 0.9962794624850608, 0.9741177478281892, 0.9553197424614261, 0.9433913222393419, 0.9357399494341572, 0.9353966374974193, 0.9111335073259323, 0.9073116740908338, 0.8881019837017686, 0.8828957195704592, 0.8708113232749785, 0.8586921054358653, 0.8544799863245068, 0.8532666579733247, 0.8392592304654487, 0.8462314186724752, 0.8297216062768733, 0.8412144391638429, 0.825872442095964, 0.8161103385094056, 0.810313787804839, 0.8033753538238784, 0.7997655906555691, 0.794379167253819, 0.7848336114749271, 0.7896166463979026, 0.7850891720932142, 0.7778614139308105, 0.7757298252554523, 0.7673510768630517, 0.7670221687654353, 0.7773559704322573, 0.7579160835591479, 0.7580180611939179, 0.7464617482187127, 0.7439606587538204, 0.7512285686943746, 0.7522997898731754, 0.7386551782077472], "accuracy": [0.11398758739233017, 0.17302866280078888, 0.22678641974925995, 0.27380794286727905, 0.32333904504776, 0.3556993901729584, 0.38845595717430115, 0.40641921758651733, 0.42689210176467896, 0.45344075560569763, 0.4678378105163574, 0.4859331548213959, 0.5070664286613464, 0.527010977268219, 0.5411438345909119, 0.5535596609115601, 0.5643904209136963, 0.5843349695205688, 0.5930524468421936, 0.6007132530212402, 0.6118082404136658, 0.6174877882003784, 0.6272619366645813, 0.6361114978790283, 0.6400739550590515, 0.6460176706314087, 0.6585655808448792, 0.6637167930603027, 0.6682076454162598, 0.6676793098449707, 0.6654338836669922, 0.6732267737388611, 0.677189290523529, 0.6823405027389526, 0.6816800832748413, 0.6841896772384644, 0.6936996579170227, 0.6910579800605774, 0.6909258961677551, 0.6985867023468018, 0.7000396251678467, 0.7041342258453369, 0.693831741809845, 0.6988508701324463, 0.7059833407402039, 0.7037379741668701, 0.7082287669181824, 0.707568347454071, 0.7111346125602722, 0.715889573097229, 0.7150970697402954, 0.7140403985977173, 0.7182670831680298, 0.7191916704177856, 0.7215691208839417, 0.7193237543106079, 0.7202483415603638, 0.722757875919342, 0.7235503792762756, 0.7312111854553223, 0.7272487282752991, 0.7255316376686096, 0.7214370369911194, 0.7316074371337891], "val_loss": [1.9508153370448522, 1.9300800732203893, 1.9060285431998116, 1.8768023763384138, 1.8395255633762904, 1.790586335318429, 1.7274384498596191, 1.6500909669058663, 1.557887383869716, 1.454444374356951, 1.3477437496185303, 1.2461938176836287, 1.1511695384979248, 1.0723146029881068, 1.0039160932813371, 0.9484415054321289, 0.9019141878400531, 0.8629767894744873, 0.8302752801350185, 0.8019922460828509, 0.7771544967378888, 0.7567192145756313, 0.7387411764689854, 0.7221838576453072, 0.710779104913984, 0.6975835050855365, 0.6838322707584926, 0.6735712971006121, 0.6633871623447963, 0.6557917424610683, 0.6488811799458095, 0.6417906965528216, 0.6335256610597882, 0.6283625704901559, 0.6218005078179496, 0.6152014051164899, 0.6093441077641079, 0.6057628563472203, 0.6036655902862549, 0.5971413169588361, 0.5933910267693656, 0.588735716683524, 0.5864744867597308, 0.5825331892286029, 0.5783904790878296, 0.5750493151800973, 0.5716300010681152, 0.5690176657267979, 0.5663025379180908, 0.5618924583707537, 0.5621840613228934, 0.5589128392083305, 0.5569511311394828, 0.5524357897894723, 0.5507031338555473, 0.5487586430140904, 0.5459316968917847, 0.5446048293794904, 0.540513174874442, 0.5377028158732823, 0.5364618982587542, 0.535530652318682, 0.5347690411976406, 0.5303604262215751], "val_accuracy": [0.20866666734218597, 0.3423333466053009, 0.39500001072883606, 0.43533334136009216, 0.4646666646003723, 0.49300000071525574, 0.5273333191871643, 0.5473333597183228, 0.5659999847412109, 0.5799999833106995, 0.5946666598320007, 0.6103333234786987, 0.621999979019165, 0.6496666669845581, 0.6690000295639038, 0.6713333129882812, 0.6896666884422302, 0.6909999847412109, 0.6963333487510681, 0.6986666917800903, 0.7036666870117188, 0.7103333473205566, 0.7103333473205566, 0.7153333425521851, 0.7203333377838135, 0.7253333330154419, 0.7226666808128357, 0.7239999771118164, 0.7306666374206543, 0.731333315372467, 0.7336666584014893, 0.7350000143051147, 0.7383333444595337, 0.7393333315849304, 0.7379999756813049, 0.7436666488647461, 0.7440000176429749, 0.7483333349227905, 0.7409999966621399, 0.7423333525657654, 0.7513333559036255, 0.750333309173584, 0.7563333511352539, 0.753000020980835, 0.753000020980835, 0.7593333125114441, 0.7540000081062317, 0.7556666731834412, 0.7546666860580444, 0.7599999904632568, 0.7576666474342346, 0.7576666474342346, 0.7599999904632568, 0.762333333492279, 0.768666684627533, 0.7663333415985107, 0.7699999809265137, 0.7666666507720947, 0.7726666927337646, 0.7696666717529297, 0.7706666588783264, 0.7716666460037231, 0.7713333368301392, 0.7706666588783264]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [7, 5, 7, 3, 6, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5, 2, 2, 6, 9], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2, 1, 2], [40, 28, 79, 39, 41, 36, 98], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [45], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.7580000162124634, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.083161267149702, 1.6322655954444099, 1.2864662083998772, 1.0591085668820053, 0.8878780183712127, 0.8341315238624752, 0.7842167491028573, 0.7921588760183755, 0.7370454504694276, 0.6928143130159964, 0.6846538856438579, 0.6647389425798068, 0.6253928409008822, 0.6479384026444268], "accuracy": [0.2985074520111084, 0.4663848876953125, 0.531898021697998, 0.6009774208068848, 0.6693964004516602, 0.6939638257026672, 0.7071720957756042, 0.696209192276001, 0.7250033020973206, 0.7491744756698608, 0.7368907928466797, 0.748249888420105, 0.7648923397064209, 0.7486461400985718], "val_loss": [1.6320888655526298, 1.2113565376826696, 0.8818743739809308, 0.7487718888691494, 0.6750252076557705, 0.6649274826049805, 0.631587096623012, 0.6376652036394391, 0.5526126793452671, 0.5652599505015782, 0.5495984043393817, 0.5201640810285296, 0.5699172701154437, 0.5081356082643781], "val_accuracy": [0.4183333218097687, 0.45399999618530273, 0.6290000081062317, 0.6520000100135803, 0.690666675567627, 0.6946666836738586, 0.7013333439826965, 0.6993333101272583, 0.7586666941642761, 0.7336666584014893, 0.731333315372467, 0.7586666941642761, 0.737333357334137, 0.7536666393280029]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [7, 5, 5, 8, 4, 8, 4, 6, 7, 2, 3, 4, 7, 5, 6, 1, 2, 0, 9, 7, 5, 5, 4, 5, 8, 5, 3], [2, 0, 2, 1, 2, 3, 1, 3, 1, 0, 0, 1, 2, 3, 2, 0, 2], [40, 28, 79, 39, 27, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.2808571457862854, "mapping_values": [1, 30, 30, 17, 13, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.square(grad)), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), alpha)))))), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2958822449704424, 2.593394402294993, 2.1588560654392426, 2.1897645770692553, 2.3055756828961607, 2.303122008371158, 2.254518326483603, 2.303928993318563], "accuracy": [0.20182274281978607, 0.14397041499614716, 0.21965394914150238, 0.21278563141822815, 0.09298639744520187, 0.10130762308835983, 0.1698586642742157, 0.10210011899471283], "val_loss": [1.95825229372297, 1.829591955457415, 1.8323208263942175, 1.9773148127964564, 1.9742615563528878, 1.9715673582894462, 1.9766342299325126, 1.9716277122497559], "val_accuracy": [0.11666666716337204, 0.24933333694934845, 0.3063333332538605, 0.0989999994635582, 0.09833333641290665, 0.09966666996479034, 0.0989999994635582, 0.10733333230018616]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 8, 5, 5, 6, 5, 8, 5, 5, 1, 7, 5, 4, 5, 9], [2, 0, 2, 1, 2, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [83, 28, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 1, 5, 0, 4, 1], [42], [0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1], [4, 4, 5], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 17, 17, 9, 8, 1, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(alpha, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.square(sigma)))), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [83, 20, 79], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [5, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [7, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302183852770766, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1], [7, 5, 1, 5, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [1, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1], [7, 5, 1, 5, 4, 8, 4, 2, 7, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 6, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 5, 3, 3, 5, 2], [42], [1, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302183852770766, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [7, 5, 7, 1, 4, 8, 4, 6, 7, 2, 3, 2, 0, 9, 6, 1, 0, 0, 9, 7, 5, 5, 4, 5, 8, 5, 3], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 1], [40, 28, 79, 30, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3, 0, 4, 1, 3, 5], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [2, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 17, 12, 4, 17, 17, 9, 8, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), alpha)))))), tf.math.negative(alpha)))))))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [5, 5, 7, 1, 4, 8, 4, 9, 6, 4, 3, 2, 7, 0, 6, 1, 2, 3, 9, 7, 5, 5, 4, 5, 8, 5, 0], [2, 0, 2, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 3, 2, 3], [40, 9, 79, 39, 41, 36, 66], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [0, 2, 3], [93], [0, 0, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302183852770766, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 5, 7, 1, 4, 0, 3, 2, 7, 4, 3, 9, 7, 0, 6, 1, 2, 3, 2, 7, 1, 5, 4, 5, 8, 5, 5, 9], [2, 0, 2, 1, 0, 0, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2, 1], [40, 28, 88, 39, 41, 21, 47], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [3, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08757099509239197, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [7, 5, 7, 1, 4, 8, 4, 2, 7, 4, 0, 9, 7, 0, 0, 1, 2, 8, 2, 7, 1, 2, 6, 5, 8, 5, 5, 9], [2, 0, 2, 1, 0, 2, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [83, 20, 79, 12, 17, 75], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 3, 3, 4, 3, 2, 2, 3], [42], [0, 0, 0, 0, 1], [0, 1, 1, 0], [0, 4], [3, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 4, 8, 4, 6, 7, 2, 3, 2, 7, 6, 6, 1, 2, 0, 9, 7, 5, 5, 4, 5, 8, 5, 3], [2, 0, 2, 1, 2, 3, 1, 3, 1, 0, 2, 2, 2, 3, 2, 0, 2], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018712475000354, 2.3018064499846096, 2.3031591249573515, 2.3028846316727445, 2.3029004230695773, 2.3018362860023984], "accuracy": [0.09047681838274002, 0.09694888442754745, 0.08730682730674744, 0.08506141602993011, 0.09140139818191528, 0.09126931428909302], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1], [7, 5, 7, 1, 4, 8, 4, 6, 7, 2, 3, 2, 7, 9, 6, 1, 2, 0, 9, 7, 5, 5, 4, 5, 8, 5, 3], [2, 0, 2, 1], [40, 28, 79, 39, 41, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [4, 2, 3], [93], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018712475000354, 2.3018064499846096, 2.3031591249573515, 2.3028846316727445, 2.3029004230695773, 2.3018362860023984], "accuracy": [0.09047681838274002, 0.09694888442754745, 0.08730682730674744, 0.08506141602993011, 0.09140139818191528, 0.09126931428909302], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 1, 0, 8, 4, 2, 5, 4, 3, 5, 7, 0, 6, 1, 2, 3, 9, 0, 6, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [40, 91, 79, 81, 69, 80], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0], [3, 4, 0], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.negative(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018712475000354, 2.3018064499846096, 2.3031591249573515, 2.3028846316727445, 2.3029004230695773, 2.3018362860023984], "accuracy": [0.09047681838274002, 0.09694888442754745, 0.08730682730674744, 0.08506141602993011, 0.09140139818191528, 0.09126931428909302], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 4, 1, 5, 6, 5, 8, 5, 4, 1, 7, 5, 0, 5, 9], [3, 1, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [83, 20, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 1, 0, 0, 1], [0, 1, 1, 0], [3, 4], [2, 5, 1, 5, 3, 4], [27], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3018712475000354, 2.3018064499846096, 2.3031591249573515, 2.3028846316727445, 2.3029004230695773, 2.3018362860023984], "accuracy": [0.09047681838274002, 0.09694888442754745, 0.08730682730674744, 0.08506141602993011, 0.09140139818191528, 0.09126931428909302], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [7, 5, 7, 4, 1, 5, 6, 5, 8, 5, 4, 1, 7, 5, 0, 5, 9], [2, 1, 2, 1, 0, 3, 1, 3, 1, 1, 0, 2, 0, 3, 2, 0, 2], [83, 20, 79], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018712475000354, 2.3018064499846096, 2.3031591249573515, 2.3028846316727445, 2.3029004230695773, 2.3018362860023984], "accuracy": [0.09047681838274002, 0.09694888442754745, 0.08730682730674744, 0.08506141602993011, 0.09140139818191528, 0.09126931428909302], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [7, 5, 8, 1, 4, 8, 4, 2, 7, 5, 5, 0, 7, 0, 6, 1, 9, 5, 1, 0, 5, 5, 4, 5, 8, 5, 5], [2, 0, 2, 1, 0, 3, 1, 3, 1, 1, 0, 1, 0, 3, 2, 0, 2], [40, 28, 79, 39, 51, 36], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 1, 4, 0, 4, 4, 3, 2, 5, 1, 8, 5, 1, 3, 6, 2, 7, 1, 5, 6, 2, 8], [3, 2, 3], [42], [0, 0, 0, 0, 1], [1, 1, 1, 0], [3, 4], [2, 0, 1, 5, 3, 4], [27], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 5, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [83, 18, 10, 42]], "fitness": -0.007428571581840515, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2985651706266776, 2.338404119983089, 2.304362309906445, 2.2699235277310685, 2.3043878595228477, 2.3033141188885415], "accuracy": [0.20195482671260834, 0.13881917297840118, 0.09602430462837219, 0.12970545887947083, 0.0956280529499054, 0.09615638852119446], "val_loss": [1.960859707423619, 1.9754789897373743, 1.9712004661560059, 1.9756272179739816, 1.9741217749459403, 1.973693915775844], "val_accuracy": [0.12266666442155838, 0.0716666653752327, 0.09866666793823242, 0.0989999994635582, 0.09833333641290665, 0.0989999994635582]}}]