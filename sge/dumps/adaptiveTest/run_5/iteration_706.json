[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 1, 0, 1, 4, 2, 8, 9, 1, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 1, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [99, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8159999847412109, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, alpha))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2483239136729747, 1.7245667159612452, 1.2014207340045737, 0.9155885749300315, 0.820854643741855, 0.7483004903780739, 0.7208973629410713, 0.6707138103689925, 0.6387779251175975, 0.6119737549386146, 0.5866368328969177, 0.5636152235461169, 0.5373820516970558, 0.5310420369223329, 0.5170295637879846, 0.49159597016092554, 0.46776274940939533, 0.4552434491734888, 0.4594003341972962, 0.4345475259222107, 0.42090556669496604, 0.40718519154666927, 0.3982243686107486, 0.39624964364247944, 0.38088833735823996, 0.3800367648063665, 0.3678360037902217, 0.3491962856273956, 0.3554560467551618, 0.3406574471421041, 0.34043285089272235, 0.3231315831813074, 0.3222149863667917, 0.31383573723554203, 0.3062716022797107, 0.3031084372847387, 0.2977649003027169, 0.2864381588799622, 0.2827614904465598, 0.28157991113018416, 0.2734216698613291, 0.26795403219847047, 0.2565043237522341, 0.2468691267995251], "accuracy": [0.20631356537342072, 0.4422137141227722, 0.5830141305923462, 0.6625280380249023, 0.6823405027389526, 0.7073041796684265, 0.7211728692054749, 0.7432307600975037, 0.7526086568832397, 0.761590301990509, 0.776251494884491, 0.780610203742981, 0.7915731072425842, 0.7948752045631409, 0.7972526550292969, 0.8105930685997009, 0.8219521641731262, 0.8277638554573059, 0.8277638554573059, 0.8396512866020203, 0.8416325449943542, 0.8481045961380005, 0.8494254350662231, 0.8510104417800903, 0.8584070801734924, 0.8543124794960022, 0.859199583530426, 0.8679170608520508, 0.863558292388916, 0.8687095642089844, 0.8739928603172302, 0.8735966086387634, 0.8754457831382751, 0.8786157965660095, 0.8828424215316772, 0.8815215826034546, 0.8868049383163452, 0.886672854423523, 0.8901069760322571, 0.8903711438179016, 0.8924844861030579, 0.8963148593902588, 0.8997490406036377, 0.9041078090667725], "val_loss": [1.7648395129612513, 0.861901981489999, 0.6796253408704486, 0.6302425691059658, 0.5930885757718768, 0.5634650843484061, 0.5298010451453072, 0.5066416263580322, 0.48194866521017893, 0.4648162978036063, 0.44353932993752615, 0.42940705163138254, 0.4275448833193098, 0.40868067741394043, 0.4021053910255432, 0.3968271017074585, 0.38166922330856323, 0.37309774330684115, 0.36752000025340487, 0.35898877893175396, 0.35377494777951923, 0.3484931332724435, 0.34887305327824186, 0.33926085914884296, 0.3403836829321725, 0.33042934111186434, 0.327921416078295, 0.3305391158376421, 0.32636949845722746, 0.3242303303309849, 0.3197386520249503, 0.3252687794821603, 0.3200638209070478, 0.31554360900606426, 0.3134180647986276, 0.31695888723645893, 0.31722716774259296, 0.31159296206065584, 0.3068917393684387, 0.30707896607262747, 0.31370699405670166, 0.31223522765295847, 0.31586790084838867, 0.314667889050075], "val_accuracy": [0.42800000309944153, 0.6700000166893005, 0.7023333311080933, 0.7269999980926514, 0.7316666841506958, 0.7279999852180481, 0.7559999823570251, 0.7689999938011169, 0.781333327293396, 0.7916666865348816, 0.8003333210945129, 0.8096666932106018, 0.8090000152587891, 0.8216666579246521, 0.8116666674613953, 0.8323333263397217, 0.8346666693687439, 0.8410000205039978, 0.840666651725769, 0.8506666421890259, 0.8529999852180481, 0.8576666712760925, 0.8566666841506958, 0.8583333492279053, 0.8606666922569275, 0.8579999804496765, 0.8643333315849304, 0.862333357334137, 0.8646666407585144, 0.8676666617393494, 0.8683333396911621, 0.8633333444595337, 0.875333309173584, 0.8726666569709778, 0.8766666650772095, 0.8693333268165588, 0.8723333477973938, 0.878000020980835, 0.878333330154419, 0.878333330154419, 0.875333309173584, 0.874666690826416, 0.878000020980835, 0.878000020980835]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 1, 0, 1, 4, 1, 8, 9, 9, 2, 5, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [4, 2, 1, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 48, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.8159999847412109, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2483239496357297, 1.7245721466993817, 1.2013620376555423, 0.9154632512714727, 0.8208833284161393, 0.7486124673634157, 0.7204974961633522, 0.6709474092540079, 0.6397305938860901, 0.6127022316647621, 0.5870292184296506, 0.5642236913625103, 0.53801296194153, 0.5320284558821033, 0.5177332296654564, 0.49163815282701484, 0.4686812021476938, 0.4544010049654996, 0.462234579462653, 0.4355827705294244, 0.4239124087271138, 0.40747633078441237, 0.40026020669130963, 0.39584226215268326, 0.38043875515799497, 0.37805655869069654, 0.36545126858309923, 0.35303502578572227, 0.3546864578965129, 0.3397227447770763, 0.34145326248926494, 0.32180715283508615, 0.3244229918930115, 0.3164694646188627, 0.3041089070258974, 0.302521989019146, 0.2936821198891718, 0.2860702164751616, 0.2843764275489561, 0.28383193183663247, 0.27613307423658373, 0.2733943359356798, 0.25949498324928943, 0.2508072186935028, 0.2495938134431965, 0.2526322036465917, 0.24794985568282502, 0.24280682521064156, 0.2349685121028966, 0.23385785153206265, 0.22775465567090555, 0.22386329385779552, 0.21191656319866123, 0.21985844359059675, 0.20767930842834678, 0.20741591817982177, 0.20143683329116335, 0.2017438266991687, 0.19888491319029197, 0.19511040267163673, 0.18813126611868625], "accuracy": [0.20631356537342072, 0.4422137141227722, 0.5831462144851685, 0.6630563735961914, 0.6826046705245972, 0.7067758440971375, 0.7201162576675415, 0.7450799345970154, 0.7535332441329956, 0.7625148296356201, 0.77677983045578, 0.7819310426712036, 0.7917051911354065, 0.7942147850990295, 0.7973847389221191, 0.81112140417099, 0.8232730031013489, 0.8290846943855286, 0.8276317715644836, 0.8363492488861084, 0.8396512866020203, 0.8455950617790222, 0.8496896028518677, 0.8511425256729126, 0.8594637513160706, 0.8543124794960022, 0.8632941246032715, 0.8696341514587402, 0.8601241707801819, 0.867520809173584, 0.8732003569602966, 0.8757099509239197, 0.8761062026023865, 0.8787478804588318, 0.8841632604598999, 0.8819178342819214, 0.8885219693183899, 0.8885219693183899, 0.8906353116035461, 0.889578640460968, 0.8948619961738586, 0.8939374089241028, 0.8972394466400146, 0.9017302989959717, 0.9019944667816162, 0.8986923694610596, 0.9021265506744385, 0.9038436412811279, 0.90423983335495, 0.9063531756401062, 0.9072777628898621, 0.9120327830314636, 0.9189010858535767, 0.9125610589981079, 0.9177123308181763, 0.9181085824966431, 0.920089840888977, 0.9157310724258423, 0.9194294214248657, 0.9204860925674438, 0.9235239624977112], "val_loss": [1.7648397854396276, 0.8619261128561837, 0.6794655663626534, 0.6304760660443988, 0.5931481122970581, 0.5635216236114502, 0.5298856667109898, 0.5070334162030902, 0.4825843572616577, 0.46452391147613525, 0.4437816483633859, 0.42925593682697843, 0.4269621968269348, 0.4079132761274065, 0.4018840023449489, 0.39777263573237825, 0.3801374520574297, 0.37184830222811016, 0.3687962804521833, 0.3613172769546509, 0.35346531867980957, 0.34963975633893696, 0.3463648387363979, 0.3407045177050999, 0.3405851721763611, 0.3322361877986363, 0.3294018677302769, 0.32871672085353304, 0.325783908367157, 0.3243495225906372, 0.31946111576897757, 0.3258290546280997, 0.3158808095114572, 0.3165187750543867, 0.3133082219532558, 0.3139410274369376, 0.31588986941746305, 0.31458609444754465, 0.30776430879320416, 0.3097490668296814, 0.3109197701726641, 0.30650719574519564, 0.3104184184755598, 0.31403523683547974, 0.3100559711456299, 0.3138155852045332, 0.31058663981301443, 0.31019737890788485, 0.31775792155947, 0.31976594243730816, 0.31792181730270386, 0.3054402300289699, 0.31402839933122906, 0.3142768314906529, 0.3178459405899048, 0.31232846634728567, 0.33077406883239746, 0.3398572972842625, 0.33471890006746563, 0.3270305395126343, 0.33014449051448275], "val_accuracy": [0.42800000309944153, 0.6700000166893005, 0.7026666402816772, 0.7276666760444641, 0.7316666841506958, 0.7273333072662354, 0.7549999952316284, 0.7676666378974915, 0.7796666622161865, 0.7906666398048401, 0.7986666560173035, 0.8090000152587891, 0.8113333582878113, 0.824999988079071, 0.8130000233650208, 0.831333339214325, 0.8339999914169312, 0.8426666855812073, 0.8423333168029785, 0.8489999771118164, 0.856333315372467, 0.8573333621025085, 0.859000027179718, 0.8586666584014893, 0.8603333234786987, 0.8610000014305115, 0.8666666746139526, 0.8640000224113464, 0.8613333106040955, 0.8636666536331177, 0.8683333396911621, 0.8650000095367432, 0.8730000257492065, 0.8723333477973938, 0.875, 0.8736666440963745, 0.874666690826416, 0.871666669845581, 0.8736666440963745, 0.878000020980835, 0.875333309173584, 0.8763333559036255, 0.8769999742507935, 0.878000020980835, 0.8786666393280029, 0.8769999742507935, 0.8773333430290222, 0.8769999742507935, 0.8786666393280029, 0.8816666603088379, 0.8796666860580444, 0.8793333172798157, 0.8786666393280029, 0.8813333511352539, 0.8823333382606506, 0.8830000162124634, 0.8813333511352539, 0.8799999952316284, 0.8796666860580444, 0.8793333172798157, 0.8806666731834412]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 1, 0, 0, 6, 4, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 3, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 11, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [4, 18, 10, 42]], "fitness": -0.8145714402198792, "mapping_values": [1, 3, 3, 2, 1, 1, 16, 16, 11, 5, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, beta)), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2483239496357297, 1.724574403834617, 1.201452198549426, 0.9155820137190702, 0.8209557436429247, 0.7482404993147568, 0.7208511797727737, 0.6721091973956361, 0.6391943656946327, 0.6135804542712942, 0.587233108158487, 0.5630927670979781, 0.5383119515857172, 0.5299117480011161, 0.5202005393375039, 0.4932662238927959, 0.46930441264667844, 0.4568937523269603, 0.46137521931319236, 0.43774185206565436, 0.4236079006265293, 0.4081545374562255, 0.39936241114679627, 0.39717628408369526, 0.38010008479421165, 0.38100802691747104, 0.364625434188354, 0.35090291422544895, 0.35371791689371657, 0.341036457734227, 0.3419625395442737, 0.323780975908163, 0.32456165612759513, 0.3122101353813298, 0.30140805802230647, 0.300960787637532, 0.2982401679677262, 0.28662401332264453], "accuracy": [0.20631356537342072, 0.4422137141227722, 0.5832782983779907, 0.6626601219177246, 0.6828688383102417, 0.7071720957756042, 0.7211728692054749, 0.7433628439903259, 0.752212405204773, 0.7607977986335754, 0.7741381525993347, 0.7819310426712036, 0.7902522683143616, 0.7965922355651855, 0.7965922355651855, 0.8113855719566345, 0.8231409192085266, 0.8256505131721497, 0.8260467648506165, 0.8383304476737976, 0.8416325449943542, 0.8467837572097778, 0.8504821062088013, 0.8494254350662231, 0.8578787446022034, 0.8536521196365356, 0.8631620407104492, 0.8644828796386719, 0.8644828796386719, 0.8673887252807617, 0.8733324408531189, 0.8751816153526306, 0.8726720213890076, 0.8779553771018982, 0.8864086866378784, 0.8825782537460327, 0.8849557638168335, 0.8889182209968567], "val_loss": [1.7648397854396276, 0.8619288716997419, 0.6794689893722534, 0.6302610635757446, 0.5930430718830654, 0.5631489753723145, 0.5302032402583531, 0.5075318813323975, 0.4823804071971348, 0.4643951654434204, 0.4435676506587437, 0.4301250832421439, 0.42792266607284546, 0.4093384231839861, 0.4030778408050537, 0.3986784645489284, 0.3829212614468166, 0.37334480455943514, 0.3672971725463867, 0.36094058411461966, 0.3563230463436672, 0.34896855694907053, 0.34575637749263216, 0.34136033058166504, 0.3432942714009966, 0.3331085188048227, 0.3283633419445583, 0.3299268824713571, 0.32726092849458965, 0.3230853421347482, 0.31746184825897217, 0.32488858699798584, 0.3175987686429705, 0.3170492393629892, 0.3132514613015311, 0.3171475614820208, 0.3162777509008135, 0.3120202251843044], "val_accuracy": [0.42800000309944153, 0.6700000166893005, 0.7026666402816772, 0.7256666421890259, 0.7310000061988831, 0.7283333539962769, 0.7540000081062317, 0.7673333287239075, 0.781000018119812, 0.7916666865348816, 0.7993333339691162, 0.8106666803359985, 0.8096666932106018, 0.824999988079071, 0.8109999895095825, 0.8320000171661377, 0.8330000042915344, 0.8416666388511658, 0.8429999947547913, 0.8476666808128357, 0.8529999852180481, 0.8569999933242798, 0.8566666841506958, 0.8603333234786987, 0.8576666712760925, 0.8583333492279053, 0.8683333396911621, 0.8643333315849304, 0.8633333444595337, 0.8633333444595337, 0.8713333606719971, 0.8673333525657654, 0.8769999742507935, 0.8756666779518127, 0.871999979019165, 0.8703333139419556, 0.8726666569709778, 0.871999979019165]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 7, 1, 0, 0, 6, 2, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 11, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [4, 18, 10, 42]], "fitness": -0.8122857213020325, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.248323981126758, 1.7245743236269666, 1.2014062551380762, 0.9155216374968526, 0.8211566063753445, 0.7487137029908195, 0.7204397843970819, 0.6710867575839558, 0.6393604633310893, 0.6134768662404202, 0.5870342811557516, 0.5631190624849246, 0.5387453963696414, 0.5309065158427619, 0.5189088375191128, 0.49175626532339606, 0.4689729115934955, 0.4574664857102234, 0.4619149434221671, 0.4364401614779353, 0.42368436192697806, 0.4090360053038128, 0.4010547447938331, 0.39704979454064965, 0.38370642319111037, 0.38151988672888937, 0.3664539078317692, 0.35529420316699567, 0.3563023860097766, 0.3395838871088483, 0.3444111051694545, 0.32417206931674736, 0.3266773241354474, 0.3157115967290087, 0.305928680186164, 0.30148374796968647, 0.2985954273606745, 0.28806383412401704], "accuracy": [0.20631356537342072, 0.4422137141227722, 0.5832782983779907, 0.6631884574890137, 0.6822084188461304, 0.7067758440971375, 0.720380425453186, 0.744419515132904, 0.7515519857406616, 0.7623828053474426, 0.77677983045578, 0.78113853931427, 0.7922335267066956, 0.7960638999938965, 0.7967243194580078, 0.8101968169212341, 0.8236692547798157, 0.8273676037788391, 0.8238013386726379, 0.8378021121025085, 0.8388587832450867, 0.8462554216384888, 0.8492933511734009, 0.8508783578872681, 0.8570862412452698, 0.854708731174469, 0.8636903762817383, 0.8654074668884277, 0.8634262084960938, 0.8689737319946289, 0.8721436858177185, 0.8742570281028748, 0.8734645247459412, 0.8780874609947205, 0.8838990926742554, 0.8862766027450562, 0.8844274282455444, 0.8879936337471008], "val_loss": [1.7648401260375977, 0.861944419997079, 0.6795053652354649, 0.6308540276118687, 0.5931862933295113, 0.5634155103138515, 0.5300108534949166, 0.5070710182189941, 0.48205528940473286, 0.4647655657359532, 0.4435171229498727, 0.42968236548560007, 0.4276490977832249, 0.4083505528313773, 0.40078754084450857, 0.3976949027606419, 0.3818938561848232, 0.37419378757476807, 0.3684146744864328, 0.3615023749215262, 0.3553724118641445, 0.3499403936522348, 0.3466359462056841, 0.340059118611472, 0.3417258858680725, 0.33483498437064035, 0.3312318665640695, 0.3324373534747532, 0.3293986916542053, 0.32412792103631155, 0.3150532841682434, 0.31950303486415316, 0.3141518405505589, 0.31299164465495516, 0.3143899611064366, 0.3184135726519993, 0.31827427659715923, 0.31238783257348196], "val_accuracy": [0.42800000309944153, 0.6700000166893005, 0.7026666402816772, 0.7273333072662354, 0.7310000061988831, 0.7283333539962769, 0.7556666731834412, 0.765333354473114, 0.7799999713897705, 0.7919999957084656, 0.8003333210945129, 0.8096666932106018, 0.809333324432373, 0.8246666789054871, 0.8146666884422302, 0.831333339214325, 0.8336666822433472, 0.8413333296775818, 0.8410000205039978, 0.8506666421890259, 0.8543333411216736, 0.8573333621025085, 0.8583333492279053, 0.8566666841506958, 0.8576666712760925, 0.859666645526886, 0.8629999756813049, 0.8650000095367432, 0.8619999885559082, 0.8643333315849304, 0.8709999918937683, 0.8683333396911621, 0.8733333349227905, 0.8730000257492065, 0.871666669845581, 0.8683333396911621, 0.8733333349227905, 0.8700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 6, 7, 8, 8, 4, 2, 0, 3, 2, 2, 5, 4, 6, 8, 1, 6, 2, 7, 2, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 3, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.7860000133514404, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.282687963070792, 2.231428870781931, 2.150759449850346, 2.0151518967015916, 1.8154659690385828, 1.5841927079476732, 1.399142928284708, 1.2778283659304295, 1.1747362886862653, 1.1037998803303368, 1.0487508216884867, 1.0224673121344885, 0.9759984623801675, 0.9423618450644718, 0.918887636491793, 0.8964742209618165, 0.8731704785634561, 0.8509207831838616, 0.8477084192428543, 0.8289618524326042, 0.8165935393668373, 0.8157434662051913, 0.800140084851577, 0.7838222383586817, 0.7707581686589381, 0.7737498807869315, 0.7713284487060473, 0.7510705522699851, 0.7560327415767992, 0.7434719673725341, 0.7330248443961631, 0.7416444107793688, 0.7258221018567864, 0.714411189850248, 0.7126775839939377, 0.7117480742791231, 0.703485858619898, 0.6989137967186141, 0.6816026969293577, 0.6830854748438819, 0.6872884101005451, 0.6792938605023728, 0.6756064261049879, 0.6662178943815673, 0.6778886539116354, 0.6673930419938376, 0.6624120567232594, 0.6690125990348517, 0.6592203726574509, 0.6465274511059403, 0.6477677305660164, 0.6391924848771917, 0.6457943238870043, 0.6482779698176013, 0.6473265001251398, 0.6386144096510301, 0.6372409467258788], "accuracy": [0.14581957459449768, 0.2591467499732971, 0.34420815110206604, 0.40509840846061707, 0.4500066041946411, 0.49768856167793274, 0.5406154990196228, 0.5606921315193176, 0.5852595567703247, 0.6083740592002869, 0.6379606127738953, 0.6342623233795166, 0.6520935297012329, 0.6667547225952148, 0.6679434776306152, 0.6848500967025757, 0.6831330060958862, 0.6985867023468018, 0.6927750706672668, 0.7055870890617371, 0.7084929347038269, 0.7024171352386475, 0.709021270275116, 0.7140403985977173, 0.7213049530982971, 0.7201162576675415, 0.719852089881897, 0.7281733155250549, 0.7224937081336975, 0.7327961921691895, 0.7327961921691895, 0.7388719916343689, 0.7346453666687012, 0.7375511527061462, 0.7371549606323242, 0.7387399077415466, 0.7421740889549255, 0.7428345084190369, 0.744419515132904, 0.7485140562057495, 0.7467969655990601, 0.7500990629196167, 0.7534011602401733, 0.7557786107063293, 0.7506273984909058, 0.7536653280258179, 0.7564390301704407, 0.7543256878852844, 0.7564390301704407, 0.7626469135284424, 0.7670056819915771, 0.7625148296356201, 0.7642319202423096, 0.757099449634552, 0.7635715007781982, 0.7656848430633545, 0.767401933670044], "val_loss": [1.9258971895490373, 1.8655635288783483, 1.762019225529262, 1.5923242568969727, 1.363208259854998, 1.1414703301021032, 0.9855613367898124, 0.8813230310167585, 0.8115739311490741, 0.7604950666427612, 0.725697534424918, 0.6992826802389962, 0.6733579124723162, 0.6614155428750175, 0.6430236952645438, 0.6274759428841727, 0.6143595491136823, 0.6050933258874076, 0.5933249337332589, 0.5899828161512103, 0.5827051401138306, 0.5773913179125104, 0.5638641459601266, 0.5608572108404977, 0.5561178411756244, 0.5503147499901908, 0.5468214069093976, 0.539151838847569, 0.5332121508462089, 0.5296919686453683, 0.5258775097983224, 0.5268605606896537, 0.5194682393755231, 0.5173605339867728, 0.5137872866221836, 0.5090954644339425, 0.5095907960619245, 0.5020526306969779, 0.502664293561663, 0.4988229955945696, 0.5050713845661708, 0.49129908425467356, 0.4929168905530657, 0.48776841163635254, 0.4860155923025949, 0.48413714340754915, 0.4812109981264387, 0.48199449266706196, 0.4807385376521519, 0.47738053117479595, 0.475092921938215, 0.4728011063167027, 0.46950587204524447, 0.4732640300478254, 0.4681982823780605, 0.4646294116973877, 0.46328634875161306], "val_accuracy": [0.3453333377838135, 0.4436666667461395, 0.5256666541099548, 0.5766666531562805, 0.6023333072662354, 0.6433333158493042, 0.6629999876022339, 0.6880000233650208, 0.6923333406448364, 0.7073333263397217, 0.7193333506584167, 0.718999981880188, 0.7269999980926514, 0.734666645526886, 0.7379999756813049, 0.7416666746139526, 0.7450000047683716, 0.7443333268165588, 0.7509999871253967, 0.746666669845581, 0.7586666941642761, 0.7586666941642761, 0.762333333492279, 0.7549999952316284, 0.7616666555404663, 0.7649999856948853, 0.7723333239555359, 0.7680000066757202, 0.7710000276565552, 0.7776666879653931, 0.7793333530426025, 0.7730000019073486, 0.7753333449363708, 0.7699999809265137, 0.7826666831970215, 0.7786666750907898, 0.7766666412353516, 0.7803333401679993, 0.7836666703224182, 0.7820000052452087, 0.7793333530426025, 0.7876666784286499, 0.7820000052452087, 0.7893333435058594, 0.7873333096504211, 0.7889999747276306, 0.7839999794960022, 0.7956666946411133, 0.7960000038146973, 0.7973333597183228, 0.7919999957084656, 0.8026666641235352, 0.796999990940094, 0.7929999828338623, 0.7993333339691162, 0.8013333082199097, 0.793666660785675]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 6, 7, 6, 1, 4, 2, 8, 3, 9, 9, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 0, 0, 0, 2, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 90, 57, 8, 99], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [4, 18, 10, 42]], "fitness": -0.10285714268684387, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3014610709924868, 2.302599376895881, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09457138925790787, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736363547188895, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10566666722297668, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [0, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 7, 8, 1, 1, 2, 8, 3, 9, 2, 6, 6, 6, 2, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 1, 2, 0, 3, 1, 3, 1, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 7, 7, 4, 3, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [10364.010813449178, 191145.08229593185, 876610.7586349227, 2445656.4445581827, 5196342.7835820895, 9525668.768458592], "accuracy": [0.09721305221319199, 0.09813763201236725, 0.10447761416435242, 0.1026284471154213, 0.10368511080741882, 0.1022322028875351], "val_loss": [38708.56919642857, 302939.53571428574, 1015366.3571428572, 2398652.714285714, 4675465.428571428, 8068477.428571428], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [50, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 1, 0, 0, 6, 2, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 3, 1, 2, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 11, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [7405219156.968387, 1127831717253.1228, 19216392639897.14, 136823768062468.94, 599292063034447.9, 1963313577078614.8], "accuracy": [0.09721305221319199, 0.09826971590518951, 0.10447761416435242, 0.1026284471154213, 0.10368511080741882, 0.1022322028875351], "val_loss": [62903578038.85714, 3390866269330.2856, 36394203498788.57, 198412394374290.28, 743172495001892.6, 2192179531949202.2], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 8, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 0, 1, 4, 2, 2, 9, 1, 9, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 1, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 90, 57, 8, 99], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [37, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 18, 18, 11, 7, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, beta))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), beta)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027259393406583, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 1, 0, 1, 4, 2, 8, 9, 1, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 1, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [99, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 46, 46, 27, 19, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, beta)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))))))))))))), grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))), tf.math.multiply(alpha, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 6, 7, 0, 1, 4, 2, 0, 9, 2, 2, 5, 6, 2, 8, 1, 6, 2, 4, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 0, 2, 0, 3, 2, 3, 1, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 12, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 11, 8, 3, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, beta), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3231683890297745, 2.3990817343664363, 2.638167248016587, 7.880915786659955e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05534275621175766, 0.019019944593310356, 0.012019548565149307, 0.0866464152932167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0227411815098355, 2.1248156683785573, 2.871810163770403, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.004333333112299442, 0.028999999165534973, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 2, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 9, 0, 1, 1, 2, 8, 3, 5, 2, 6, 6, 6, 8, 8, 6, 2, 7, 5, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 0, 3, 0, 3, 1, 3, 0, 3, 3, 2, 4, 3, 5, 0, 3, 1, 1, 2], [40, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [4, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [0, 0, 2, 3, 0, 0, 0], [36, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027259393406583, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 1, 1, 0, 1, 4, 2, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [2, 2, 3, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [99, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, grad))), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300593211776498, 2.302617100676714, 2.30327326589178, 2.317372941385092, 2.530033815869125, 3.4785658916100033, 5.545505696630371, 8.964375696823408, 13.729011738194828, 20.245012453376752], "accuracy": [0.0952318087220192, 0.0870426595211029, 0.10130762308835983, 0.09998679161071777, 0.10500594228506088, 0.10394927859306335, 0.09866596013307571, 0.09932637959718704, 0.10315678268671036, 0.09734513610601425], "val_loss": [1.9734667369297572, 1.9737891469682967, 1.9758390017918177, 2.0235627038138255, 2.5023041452680315, 3.821507317679269, 6.155006408691406, 9.660237176077706, 14.521681649344307, 20.83983830043248], "val_accuracy": [0.07433333247900009, 0.0989999994635582, 0.10066666454076767, 0.10066666454076767, 0.10433333367109299, 0.10100000351667404, 0.09966666996479034, 0.10433333367109299, 0.0989999994635582, 0.10433333367109299]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 8, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 3, 1, 0, 0, 6, 2, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 1, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 11, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06942857056856155, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301286849142963, 2.3001101866311338, 2.300085643184593, 2.3015989743329595, 2.3022641325041038, 2.302783030277041, 2.3032914489377774, 2.304102380813278, 2.3056795997642303], "accuracy": [0.08836349099874496, 0.09959053993225098, 0.09866596013307571, 0.08492933213710785, 0.09417514503002167, 0.10196803510189056, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9696271078927177, 1.970266478402274, 1.9719914708818709, 1.9730857440403529, 1.973724297114781, 1.9741919381277901, 1.974778720310756, 1.9758094378880091, 1.977954523903983], "val_accuracy": [0.05900000035762787, 0.09466666728258133, 0.061000000685453415, 0.10499999672174454, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 6, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 1, 0, 9, 4, 2, 8, 9, 2, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [1, 2, 3, 2, 0, 3, 3, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 31, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06542856991291046, "mapping_values": [1, 5, 5, 2, 3, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), tf.math.add(beta, beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4021797533820033, 3.395748729419872, 2.5292509971057355, 2.4466185418921156, 2.4517787934420303, 2.466416691367054, 2.4598615783285296, 2.4551715738092197, 2.449491284290687, 2.465694723411432], "accuracy": [0.19402985274791718, 0.11742173880338669, 0.09840179979801178, 0.09813763201236725, 0.1018359512090683, 0.10289261490106583, 0.1014397069811821, 0.10091137140989304, 0.09708096832036972, 0.09800554811954498], "val_loss": [2.0735861914498463, 2.1480142729622975, 2.037073407854353, 2.119469574519566, 2.1415207045418874, 2.113838332039969, 2.0999673434666226, 2.125798906598772, 2.0861327988760814, 2.0850234712873186], "val_accuracy": [0.09833333641290665, 0.10166666656732559, 0.10066666454076767, 0.0989999994635582, 0.10433333367109299, 0.09833333641290665, 0.09833333641290665, 0.10433333367109299, 0.09833333641290665, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 0, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 1, 0, 1, 4, 2, 8, 9, 1, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 3, 1, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.06257142871618271, "mapping_values": [1, 3, 3, 1, 2, 0, 26, 26, 15, 11, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(beta, tf.math.subtract(grad, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), grad)))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3013715762283353, 2.3008553343772764, 2.300634245909657, 2.3019576327455296, 2.3024697455558734, 2.303219063973871, 2.3047653814080746, 2.3098441632731466, 2.3465037503971193], "accuracy": [0.08836349099874496, 0.09721305221319199, 0.09496764093637466, 0.08321225643157959, 0.09985470771789551, 0.10249637067317963, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970083509172712, 1.9710466521126884, 1.9723823411124093, 1.9733939170837402, 1.973985058920724, 1.9749971798488073, 1.977414880480085, 1.988027913229806, 2.1330478531973704], "val_accuracy": [0.0560000017285347, 0.08399999886751175, 0.055666666477918625, 0.1003333330154419, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 6, 1, 0, 1, 4, 2, 8, 2, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [5, 2, 3, 2, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [99, 18, 51, 57, 8], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, grad)))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302055513539161, 2.30329343983211, 2.3026111225772605, 2.3025478868594087, 2.303145870855692, 2.3025844438815115], "accuracy": [0.0882314071059227, 0.08994849026203156, 0.0886276587843895, 0.09140139818191528, 0.09377889335155487, 0.09219389408826828], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 1, 0, 0, 6, 2, 8, 9, 9, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [0, 2, 0, 0, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 51, 57, 36], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [0, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [4, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302055513539161, 2.30329343983211, 2.3026111225772605, 2.3025478868594087, 2.303145870855692, 2.3025844438815115], "accuracy": [0.0882314071059227, 0.08994849026203156, 0.0886276587843895, 0.09140139818191528, 0.09377889335155487, 0.09219389408826828], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [31, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 6, 1, 0, 1, 4, 2, 8, 9, 1, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 2, 1, 2, 0, 3, 3, 2, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [29, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [3, 0, 2, 3, 0, 0, 0], [50, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 2, 1, 1, 19, 19, 11, 8, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, beta)))), alpha), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302055513539161, 2.30329343983211, 2.3026111225772605, 2.3025478868594087, 2.303145870855692, 2.3025844438815115], "accuracy": [0.0882314071059227, 0.08994849026203156, 0.0886276587843895, 0.09140139818191528, 0.09377889335155487, 0.09219389408826828], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 9, 5, 9, 9, 5, 1, 2, 0, 2, 1, 2, 2, 2, 3, 5, 2, 1, 8, 9, 6, 8, 2, 6, 8, 4, 5, 4, 1, 4], [1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 0, 2, 2, 2, 1, 2, 1], [22, 59, 37, 70, 77, 81, 89, 98, 7, 56], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 1, 0, 1, 4, 2, 8, 9, 1, 2, 6, 6, 6, 8, 1, 6, 2, 7, 1, 5, 6, 2, 8, 2, 3, 9, 6, 0, 0, 3, 0, 2, 9], [3, 4, 0, 3, 0, 3, 1, 3, 0, 3, 3, 2, 4, 4, 5, 2, 3, 1, 1, 2], [23, 18, 51, 57, 8], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [3, 4, 4, 3, 8, 8, 8, 4, 0, 7, 6], [1, 7, 1, 4, 3, 4], [44], [1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 5, 8, 1, 1, 5, 9, 7, 4, 8, 0, 7, 9], [1, 0, 2, 3, 0, 0, 0], [4, 18, 10, 42]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 16, 10, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302055513539161, 2.30329343983211, 2.3026111225772605, 2.3025478868594087, 2.303145870855692, 2.3025844438815115], "accuracy": [0.0882314071059227, 0.08994849026203156, 0.0886276587843895, 0.09140139818191528, 0.09377889335155487, 0.09219389408826828], "val_loss": [1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814, 1.9710068021501814], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]