[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [5, 4, 7, 6, 1, 2, 8, 6, 5, 3, 6, 6, 4, 6, 2, 3, 4, 3, 8, 2, 8, 2, 3, 6, 1, 3, 1, 7, 6, 3, 3, 0, 1, 0, 3, 5, 1, 1, 3, 6, 6, 5, 0, 2, 3, 3, 0, 5], [3, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 2, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.5220000147819519, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.352177365297623, 2.2554985723632783, 2.1858998500219093, 2.240556529610306, 2.24323126511126, 2.3072870818143034, 2.254395543466139, 2.266976431014122], "accuracy": [0.19191652536392212, 0.160084530711174, 0.2339189052581787, 0.15559370815753937, 0.1966715157032013, 0.11213842034339905, 0.17302866280078888, 0.14330999553203583], "val_loss": [1.6945067473820277, 1.9702013560703822, 1.199488878250122, 1.97135557447161, 1.9872251919337682, 1.9545282636369978, 1.9741613524300712, 1.6760222230638777], "val_accuracy": [0.2590000033378601, 0.09700000286102295, 0.47999998927116394, 0.09833333641290665, 0.0976666659116745, 0.257666677236557, 0.09833333641290665, 0.27399998903274536]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 2, 6, 1, 2, 8, 6, 3, 3, 6, 6, 4, 6, 2, 3, 4, 3, 8, 2, 8, 2, 3, 6, 1, 3, 2, 7, 6, 3, 3, 0, 1, 0, 3, 5, 1, 1, 3, 6, 6, 5, 0, 2, 3, 3, 0, 5], [3, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [60, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.22714285552501678, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3520851177766797, 2.404873890915189, 2.3261817055229717, 2.3153743156273885, 2.3045163430778373, 2.302005144268404], "accuracy": [0.19402985274791718, 0.20604939758777618, 0.10210011899471283, 0.1398758441209793, 0.1002509593963623, 0.10249637067317963], "val_loss": [1.6966793196541923, 2.021201951163156, 1.97347320829119, 1.976736273084368, 1.9740123748779297, 1.9712343897138322], "val_accuracy": [0.2383333295583725, 0.10266666859388351, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.12533333897590637]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.22599999606609344, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3519117699291696, 2.2303421688495515, 2.3021367780284607, 2.290928220799287, 2.338600524617161, 2.3039920230850868], "accuracy": [0.19257694482803345, 0.17144367098808289, 0.12772421538829803, 0.11781799048185349, 0.12930920720100403, 0.09760929644107819], "val_loss": [1.6874591623033797, 1.856527600969587, 1.97508328301566, 1.821493148803711, 1.9753111430576868, 1.973872525351388], "val_accuracy": [0.25066667795181274, 0.19466666877269745, 0.09666666388511658, 0.2460000067949295, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 3, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.22200000286102295, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3519596762865635, 2.2354066966468347, 2.3186540604897337, 2.2820044374736765, 2.277292611371918, 2.3050810747205808], "accuracy": [0.19284109771251678, 0.16655659675598145, 0.21621978282928467, 0.1200634017586708, 0.17712323367595673, 0.09906221181154251], "val_loss": [1.690330880028861, 1.9140736034938268, 1.9828692163739885, 1.9350220816476005, 1.9778139250619071, 1.9741016115461076], "val_accuracy": [0.2540000081062317, 0.1236666664481163, 0.1003333330154419, 0.20100000500679016, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 2, 1, 3, 0, 2, 2, 0, 0, 2, 2, 1, 2, 2, 3, 2, 2, 0, 2, 2, 2], [40, 35, 15, 69, 50, 69, 22, 98, 46, 11, 16, 46], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.21885713934898376, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.351924380889548, 2.2379672707127005, 2.2358068211550064, 3.4724076081733064, 2.3168475130026005, 2.305268330706928], "accuracy": [0.19297318160533905, 0.16431118547916412, 0.17434948682785034, 0.1554616242647171, 0.09853387624025345, 0.10196803510189056], "val_loss": [1.6890849385942732, 1.938061305454799, 1.9727178301130022, 1.9954395975385393, 1.978299958365304, 1.9731766836983817], "val_accuracy": [0.2553333342075348, 0.17233332991600037, 0.10133333504199982, 0.10100000351667404, 0.10066666454076767, 0.10466666519641876]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 1, 6, 3, 2, 2, 2, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2, 2, 0, 2], [3, 0, 2, 0, 2, 2, 2, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 0, 3, 3, 1], [8, 89, 92, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.13571429252624512, "mapping_values": [1, 54, 54, 30, 24, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))))))), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3266279745599485, 2.1788900502212076, 2.2986728287234426, 2.400255426896357, 2.304431164316639, 2.3033028733791725], "accuracy": [0.18636904656887054, 0.18755778670310974, 0.12230881303548813, 0.14251750707626343, 0.09959053993225098, 0.09826971590518951], "val_loss": [1.9542046274457658, 1.9753358023507255, 1.8856960705348425, 1.9769114766802107, 1.9743225915091378, 1.973860808781215], "val_accuracy": [0.1913333386182785, 0.10199999809265137, 0.18266665935516357, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 7, 6, 1, 2, 8, 6, 3, 3, 6, 6, 4, 6, 2, 3, 4, 3, 8, 2, 8, 2, 3, 6, 1, 3, 2, 7, 6, 3, 3, 0, 1, 0, 3, 5, 1, 1, 3, 6, 6, 5, 0, 2, 3, 3, 0, 5], [3, 0, 1, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [61, 37, 89, 69, 50, 69, 22, 98, 46, 11, 64, 46], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 2, 5, 2, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 6, 7, 2, 9, 5, 8, 1], [3, 2, 2, 1, 2], [20, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 11, 7, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.math.sqrt(beta))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [1, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 0, 2, 2, 0, 0, 1, 2, 1, 2, 2, 3, 2, 1, 0, 2, 2, 2], [40, 37, 89, 69, 50, 69, 22, 98, 46, 11, 64, 46], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [3, 5, 2], [63], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [5, 6, 7, 2, 1, 5, 5, 1, 3, 4, 1, 9], [3, 0, 3, 1, 2, 3, 1, 0], [31, 92, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 20, 12, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.subtract(tf.math.square(sigma), tf.math.square(tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.multiply(beta, tf.math.pow(sigma, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302007125117098, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 87, 4, 22, 75], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.454315773673329, 2.66074586531836, 2.4213317761316024, 2.4224474855213116, 2.398160553816177, 2.4089761927867563, 2.3913271585554416], "accuracy": [0.18174614012241364, 0.12072381377220154, 0.1344604343175888, 0.10196803510189056, 0.10949676483869553, 0.10210011899471283, 0.09840179979801178], "val_loss": [2.171647003718785, 1.7181708812713623, 2.066359656197684, 2.02772399357387, 2.0587756974356517, 2.0232041222708568, 2.05746214730399], "val_accuracy": [0.10100000351667404, 0.34599998593330383, 0.10066666454076767, 0.10533333569765091, 0.1003333330154419, 0.10066666454076767, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [8, 37, 30, 46, 87, 4, 22, 75], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1], [3, 7, 4, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 8, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 1, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [1, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036221641953185, 2.320402355997743, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.08017434924840927, 0.08915598690509796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9749949319022042, 2.000367913927351, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01600000075995922, 0.08833333104848862, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 1, 6, 3, 2, 8, 3, 3, 8, 6, 6, 4, 5, 2, 8, 4, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 2, 2, 2, 2, 0, 0], [8, 37, 30, 59, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1026748941.7795038, 19255805240.840046, 91986611066.77585, 254507618778.46732, 539876109893.9934, 999822802288.2937], "accuracy": [0.1014397069811821, 0.10381719470024109, 0.10011887550354004, 0.09985470771789551, 0.09787346422672272, 0.09787346422672272], "val_loss": [3758008612.571429, 30054551552.0, 101423094637.71428, 240398307913.14285, 469511840914.2857, 811293119049.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [3, 4, 7, 6, 1, 2, 8, 6, 3, 3, 6, 6, 4, 6, 2, 3, 4, 3, 8, 2, 8, 2, 3, 6, 1, 3, 2, 7, 6, 3, 3, 0, 1, 0, 3, 5, 1, 1, 3, 6, 6, 5, 0, 2, 3, 3, 0, 5], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 19, 18, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), grad))), grad), tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, alpha)), tf.math.pow(grad, grad)))))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 3, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [44, 37, 30, 46, 87, 4, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 7, 6, 1, 2, 8, 6, 3, 3, 6, 6, 4, 6, 2, 3, 4, 3, 8, 2, 8, 2, 3, 6, 1, 3, 2, 7, 6, 3, 3, 0, 1, 0, 3, 5, 1, 1, 3, 6, 6, 5, 0, 2, 3, 3, 0, 5], [3, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 2, 1, 3, 0, 2, 2, 0, 0, 2, 2, 1, 2, 2, 3, 2, 2, 0, 2, 2, 2], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [2, 0, 3, 1, 2], [31, 92]], "fitness": -0.06971428543329239, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3017685216856574, 2.301584964226171, 2.302269821515913, 2.300027783709652, 2.3005540720176674, 2.2996939646018384, 2.3003215213824006, 2.29981706832394, 2.299273004400858, 2.299558610145237, 2.300633745107826, 2.29982626427119, 2.299844366731645, 2.300772659089886, 2.3006188394591605, 2.301338403106224], "accuracy": [0.09272222965955734, 0.09681680053472519, 0.09628847241401672, 0.09972262382507324, 0.09206181764602661, 0.09787346422672272, 0.09906221181154251, 0.09576013684272766, 0.09576013684272766, 0.10196803510189056, 0.09787346422672272, 0.09628847241401672, 0.0948355570435524, 0.10289261490106583, 0.09668471664190292, 0.09245806187391281], "val_loss": [1.9701172964913505, 1.9698288100106376, 1.9694648470197404, 1.969527244567871, 1.9696899141584123, 1.9698942048209054, 1.9699747221810477, 1.969851357596261, 1.969914368220738, 1.9700066702706474, 1.9700624602181571, 1.9702653884887695, 1.9705651828220911, 1.9708241053989954, 1.97104093006679, 1.971183913094657], "val_accuracy": [0.043666668236255646, 0.052000001072883606, 0.05966666713356972, 0.060333333909511566, 0.061000000685453415, 0.06066666543483734, 0.06333333253860474, 0.06733333319425583, 0.0716666653752327, 0.07233333587646484, 0.07400000095367432, 0.0716666653752327, 0.07100000232458115, 0.06800000369548798, 0.06866666674613953, 0.07000000029802322]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 7, 6, 1, 2, 8, 6, 3, 3, 6, 6, 4, 6, 2, 3, 4, 3, 8, 2, 8, 2, 3, 6, 1, 3, 2, 7, 6, 3, 3, 0, 1, 0, 3, 5, 1, 1, 3, 6, 6, 5, 0, 2, 3, 3, 0, 5], [3, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0, 3, 3, 1], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 49, 49, 26, 23, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), grad))), grad), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021436485521796, 2.302663805430922, 2.304175236788503, 2.302050816904143, 2.302796635566654, 2.3016208538589003], "accuracy": [0.09192973375320435, 0.09166556596755981, 0.09259014576673508, 0.09285431355237961, 0.0874389111995697, 0.08915598690509796], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 4, 0, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 3, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [38, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021436485521796, 2.302663805430922, 2.304175236788503, 2.302050816904143, 2.302796635566654, 2.3016208538589003], "accuracy": [0.09192973375320435, 0.09166556596755981, 0.09259014576673508, 0.09285431355237961, 0.0874389111995697, 0.08915598690509796], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 1, 7, 6, 1, 2, 8, 6, 3, 3, 6, 6, 4, 6, 2, 3, 4, 3, 8, 2, 8, 2, 3, 6, 1, 3, 2, 7, 6, 3, 3, 0, 1, 0, 3, 5, 1, 1, 3, 6, 6, 5, 0, 2, 3, 3, 0, 5], [3, 0, 3, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [8, 37, 30, 46, 87, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 39, 39, 21, 18, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))), grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.multiply(alpha, tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021436485521796, 2.302663805430922, 2.304175236788503, 2.302050816904143, 2.302796635566654, 2.3016208538589003], "accuracy": [0.09192973375320435, 0.09166556596755981, 0.09259014576673508, 0.09285431355237961, 0.0874389111995697, 0.08915598690509796], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]