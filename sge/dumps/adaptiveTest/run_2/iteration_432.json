[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 6, 4, 4, 0, 0, 2, 1, 3, 2, 2, 3, 4, 6, 0, 8, 8, 2, 1, 6, 5, 2, 5, 2, 2, 5, 2, 0, 4, 6, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [43, 51, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0], [3, 7, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.11857143044471741, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1920508967414585, 4.6188759103726404, 2.33027640256301, 2.304544496781885, 2.3034126621274553, 2.3029359999648995, 2.3030669818606597, 2.303020997621191, 2.30290811862676, 2.3030139855452973, 2.3029348482435026, 2.3029822987682547, 2.303022262458363], "accuracy": [0.15149913728237152, 0.1504424810409546, 0.09945846349000931, 0.09998679161071777, 0.09615638852119446, 0.09787346422672272, 0.09351472556591034, 0.0948355570435524, 0.09628847241401672, 0.09206181764602661, 0.10011887550354004, 0.09602430462837219, 0.09272222965955734], "val_loss": [1.96940735408238, 2.0883287702287947, 1.975867543901716, 1.9743123054504395, 1.9738497052873885, 1.9736808368137904, 1.9737238202776228, 1.9736388070242745, 1.973714760371617, 1.9736851964678084, 1.973719801221575, 1.973661150251116, 1.9737871715000697], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.0976666659116745, 0.10266666859388351, 0.0976666659116745, 0.09700000286102295, 0.0976666659116745, 0.10233332961797714, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 2, 0, 4, 9, 2, 2, 9, 6, 6, 5, 3, 6, 3, 2, 3, 3, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 2, 2, 1, 1, 2, 1, 1, 0, 1, 2, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [31, 38, 73, 36, 10, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [3, 7, 2, 9, 1, 8, 3, 0], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.11457142978906631, "mapping_values": [1, 21, 21, 13, 8, 3, 2, 2, 1, 1, 0, 7, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(alpha)), alpha))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.192062418773552, 4.409476007909476, 2.315614154924255, 2.3042130060577595, 2.3033386219950747, 2.302968997618998, 2.303306375087103, 2.3032489827815743, 2.3029044920569004, 2.3030017520678814, 2.3030082619878294, 2.3030397447030055, 2.303233332999898], "accuracy": [0.15149913728237152, 0.15149913728237152, 0.09919429570436478, 0.09972262382507324, 0.09826971590518951, 0.10249637067317963, 0.09509972482919693, 0.0952318087220192, 0.09774138033390045, 0.09245806187391281, 0.09576013684272766, 0.09311848133802414, 0.09113723784685135], "val_loss": [1.96951505116054, 2.0148305211748396, 1.9748308999197823, 1.9742012023925781, 1.9739038603646415, 1.9736739567347936, 1.9738271577017648, 1.9736975942339217, 1.9737093108040946, 1.9736665316990443, 1.9737503187997, 1.9736499786376953, 1.973794392177037], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.0976666659116745, 0.10266666859388351, 0.0976666659116745, 0.0976666659116745, 0.10066666454076767, 0.10233332961797714, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 2, 4, 4, 9, 2, 2, 9, 6, 6, 5, 3, 6, 0, 2, 6, 3, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [31, 85, 73, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [3, 7, 6, 9, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.11342857033014297, "mapping_values": [1, 11, 11, 6, 5, 2, 2, 2, 1, 1, 0, 7, 4, 4, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))), tf.math.pow(alpha, tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1920853922663426, 4.528088309115832, 2.3122545089452116, 2.303821448746957, 2.3032096405039373, 2.302906449570742, 2.3030706071393867], "accuracy": [0.15149913728237152, 0.15110288560390472, 0.09879804402589798, 0.09998679161071777, 0.09721305221319199, 0.09734513610601425, 0.09351472556591034], "val_loss": [1.9693574905395508, 2.0003887585231235, 1.9749080113002233, 1.9740321295601981, 1.9738049507141113, 1.9736921446663993, 1.9737277030944824], "val_accuracy": [0.10066666454076767, 0.10199999809265137, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 6, 9, 1, 8, 1, 2, 2, 0, 5, 5, 5, 6, 5, 0, 2, 8, 3, 4, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 0, 2, 0, 2, 0, 0, 1, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [75, 78, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1], [8, 7, 4, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.11085714399814606, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1920860220869187, 4.616146290480201, 2.321624885948815, 2.303826033462859, 2.303152793024698, 2.302949157892957, 2.303208199379986, 2.3031232529910897, 2.3029552944552676, 2.3030247936442763, 2.302937027013313, 2.3029834319729265, 2.3030225772741777], "accuracy": [0.15149913728237152, 0.149649977684021, 0.09893012791872025, 0.10091137140989304, 0.09681680053472519, 0.09853387624025345, 0.09126931428909302, 0.09628847241401672, 0.09760929644107819, 0.09113723784685135, 0.10011887550354004, 0.09602430462837219, 0.09272222965955734], "val_loss": [1.969358035496303, 2.051249163491385, 1.9745972497122628, 1.974012783595494, 1.973804269518171, 1.973679542541504, 1.9737768854413713, 1.9736926215035575, 1.9737426212855749, 1.9736956187656947, 1.9737245695931571, 1.9736625126429967, 1.973787716456822], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.0976666659116745, 0.10266666859388351, 0.0976666659116745, 0.09700000286102295, 0.0976666659116745, 0.10233332961797714, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 1, 2, 4, 4, 9, 2, 2, 9, 6, 6, 5, 3, 6, 0, 2, 6, 3, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 2, 0, 2, 0, 0, 1, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [31, 85, 73, 36, 44, 74, 22, 61], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [3, 7, 4, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10971428453922272, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9598121161202.078, 3.8913879086978717e+33, 68239.34504890165, 17215648.851736892, 4482575041.513143, 1138053892274.8044], "accuracy": [0.15717871487140656, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.6712443181095916e+34, 2206.4607979910716, 563174.1785714285, 144169334.85714287, 36907343872.0, 9448280031232.0], "val_accuracy": [0.10100000351667404, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 6, 0, 1, 8, 1, 2, 2, 9, 2, 5, 5, 6, 5, 0, 2, 8, 3, 4, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 0, 2, 0, 2, 0, 0, 1, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [64, 71, 43, 78, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1], [8, 7, 4, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 2, 4, 4, 9, 2, 2, 9, 6, 6, 5, 3, 6, 0, 2, 6, 3, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [31, 85, 73, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [7, 7, 6, 9, 1, 8, 3, 0], [6, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 16, 11, 3, 2, 2, 1, 1, 0, 7, 5, 4, 1, 1, 11, 7, 4, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), alpha)))))))))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(sigma), sigma)))", "other_info": {"loss": [2.301707007298931, 2.302495082544849, 2.3025921300228767, 2.303017124791486, 2.3010584557643736, 2.3032269274412194, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09166556596755981, 0.09047681838274002, 0.08968432247638702, 0.09232597798109055, 0.08849557489156723, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9705655234200614, 1.9705655234200614, 1.9705655234200614, 1.9705655234200614, 1.9705655234200614, 1.9700679097856795, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.04266666620969772, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 6, 0, 1, 8, 1, 2, 2, 9, 2, 5, 5, 6, 5, 0, 2, 8, 3, 4, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 2, 0, 2, 0, 0, 1, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [75, 71, 43, 78, 44, 74, 22, 61], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1], [8, 7, 4, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [1, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [243032451660.98795, 2.2860932377557933e+17, 3.697120170599844e+25, 8.303549801255644e+33, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.1018359512090683, 0.10249637067317963, 0.10474177449941635, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13757846201490.285, 1.9460902812844556e+19, 4.4100296696604844e+27, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.10266666859388351, 0.10266666859388351, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 1, 5, 4, 0, 0, 2, 1, 3, 2, 2, 3, 4, 6, 0, 8, 8, 2, 1, 6, 5, 2, 5, 2, 2, 5, 2, 0, 4, 6, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 1, 2, 0, 2, 2, 2, 2, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [43, 51, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0], [8, 7, 5, 1, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))), tf.math.pow(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 5, 4, 0, 5, 2, 9, 0, 8, 2, 4, 4, 4, 0, 2, 9, 2, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 2, 2, 0, 2, 0, 2, 2, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [47, 78, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [8, 7, 2, 1, 1, 8, 3, 0], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 10, 3, 1, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 6, 9, 1, 8, 1, 2, 2, 0, 5, 5, 5, 6, 5, 0, 2, 8, 3, 4, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 0, 2, 0, 2, 0, 0, 1, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [75, 78, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1], [8, 7, 4, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [0, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022088251566104, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 8, 0, 1, 8, 1, 2, 2, 9, 2, 5, 5, 6, 5, 0, 2, 8, 3, 4, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 0, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [75, 71, 43, 78, 44, 74, 22, 61], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1], [3, 7, 6, 9, 1, 8, 3, 0], [6, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [1, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(sigma), sigma)))", "other_info": {"loss": [1486.6519299347042, 37883.4357705389, 194313.3462554484, 561870.1053939374, 1240444.1860718532, 2308485.2547880067], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8935.915457589286, 87402.19196428571, 314067.89285714284, 771999.6607142857, 1538516.357142857, 2687281.0], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [3, 1, 6, 4, 0, 5, 3, 9, 0, 2, 2, 4, 4, 4, 0, 2, 9, 2, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [31, 85, 73, 36, 44, 74, 22, 61], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [3, 7, 6, 9, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.08914285898208618, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 7, 4, 4, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.88529985594381, 4.041459406025264, 2.4810062542787996, 2.4146698576159182, 2.601177865078641, 2.43420179821418, 2.452813999984463, 2.548440669805083], "accuracy": [0.15757495164871216, 0.10117553919553757, 0.11662924289703369, 0.1302337795495987, 0.10566636174917221, 0.10011887550354004, 0.09774138033390045, 0.10276053100824356], "val_loss": [9.656587600708008, 2.5591812814985, 2.071255615779332, 2.0770739146641324, 2.150024482182094, 2.1998133659362793, 2.1321849141802107, 2.1354028838021413], "val_accuracy": [0.10266666859388351, 0.0430000014603138, 0.14499999582767487, 0.13766667246818542, 0.10266666859388351, 0.0976666659116745, 0.0976666659116745, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 1, 8, 6, 0, 0, 2, 2, 2, 2, 2, 3, 2, 6, 2, 2, 9, 9, 1, 6, 3, 2, 5, 4, 2, 5, 2, 0, 0, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 2, 0, 2, 0, 2, 1, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [75, 38, 73, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [5, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [8, 7, 5, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.08799999952316284, "mapping_values": [1, 48, 48, 29, 19, 7, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(alpha, alpha), grad)))), grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30237938970103, 2.304708099195183, 2.3069165516617653, 2.309664415724289, 2.310437911915001, 2.316149032756779, 2.319037555372868, 2.324877184049218, 2.330001680810989, 2.344545149233174, 2.374299695321424, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.08717474341392517, 0.08268392831087112, 0.08241976052522659, 0.08321225643157959, 0.0758156105875969, 0.07330603897571564, 0.07396645098924637, 0.080042265355587, 0.07251353561878204, 0.07938185334205627, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716248512268066, 1.9729318618774414, 1.974438190460205, 1.9763342993600028, 1.9784493446350098, 1.9809368678501673, 1.9835847445896693, 1.987457547869001, 1.9933979851858956, 2.006389686039516, 2.0586466789245605, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.022333333268761635, 0.02033333294093609, 0.0273333340883255, 0.02866666577756405, 0.03333333507180214, 0.047333333641290665, 0.06266666948795319, 0.08633333444595337, 0.10166666656732559, 0.10233332961797714, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 5, 2, 4, 3, 4, 2, 2, 9, 6, 6, 5, 3, 6, 0, 2, 6, 4, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [75, 78, 73, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [8, 7, 5, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.08371428400278091, "mapping_values": [1, 38, 38, 21, 17, 3, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), alpha)))), alpha)), tf.math.multiply(grad, grad))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.192525502634307, 4.510184151574275, 2.3142461213673804, 2.304263926893886, 2.3033667379728695, 2.302910126746685], "accuracy": [0.15097081661224365, 0.15215955674648285, 0.09826971590518951, 0.10038304328918457, 0.09800554811954498, 0.10355303436517715], "val_loss": [1.969376700265067, 2.005743912288121, 1.9751883915492467, 1.974210262298584, 1.9738703455243791, 1.973658834184919], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [3, 1, 5, 4, 0, 5, 2, 9, 0, 2, 2, 4, 4, 4, 0, 2, 9, 2, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 2, 0, 0, 2, 2, 1, 2, 1, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [65, 78, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [8, 7, 2, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.08028571307659149, "mapping_values": [1, 12, 12, 8, 4, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.pow(alpha, tf.math.negative(grad))), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1920742693830397, 3.6741495117960414, 2.307468334886266, 2.303756783304906, 2.303434083521909, 2.30293783960782], "accuracy": [0.15149913728237152, 0.15440496802330017, 0.10011887550354004, 0.1002509593963623, 0.09615638852119446, 0.09853387624025345], "val_loss": [1.969524724142892, 1.9880552291870117, 1.9745325360979353, 1.9741460255214147, 1.9739011355808802, 1.9737419400896346], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [3, 1, 5, 4, 0, 5, 2, 9, 0, 2, 2, 4, 4, 4, 0, 2, 9, 2, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 2, 0, 2, 2, 2, 2, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [47, 78, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1], [8, 7, 2, 1, 1, 8, 3, 0], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.07999999821186066, "mapping_values": [1, 24, 24, 15, 9, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.pow(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), grad), tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.192058329411533, 4.454568479669218, 2.3100444246764984, 2.3043039645879118, 2.3035228632822515, 2.3028672262032304], "accuracy": [0.15149913728237152, 0.14951789379119873, 0.09853387624025345, 0.1014397069811821, 0.0952318087220192, 0.1014397069811821], "val_loss": [1.9695008822849818, 1.992478575025286, 1.9746930258614677, 1.974234172276088, 1.9739585603986467, 1.9736990928649902], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [3, 0, 5, 4, 0, 5, 2, 9, 0, 2, 2, 4, 4, 4, 0, 2, 9, 2, 3, 6, 4, 2, 5, 8, 2, 5, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 0, 2, 2, 2, 2, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [47, 78, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1], [8, 7, 2, 1, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.07999999821186066, "mapping_values": [1, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1920583114301557, 4.409870773116911, 2.309927845580656, 2.3040033435116136, 2.3035573092717474, 2.302918147070848], "accuracy": [0.15149913728237152, 0.14912164211273193, 0.09840179979801178, 0.09708096832036972, 0.09509972482919693, 0.10381719470024109], "val_loss": [1.9695008141653878, 1.9921481268746513, 1.9747076715741838, 1.9741715022495814, 1.9740118980407715, 1.9736833572387695], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 1, 1, 4, 1, 0, 2, 1, 3, 2, 2, 3, 4, 6, 0, 8, 8, 2, 1, 6, 5, 2, 5, 2, 2, 5, 2, 0, 4, 6, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 0, 2, 2, 2, 2, 1, 2, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [43, 51, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0], [8, 7, 5, 1, 1, 8, 3, 0], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.07857143133878708, "mapping_values": [1, 7, 7, 3, 4, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(grad, alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1920558628137194, 4.6849166300822365, 2.3120252222920987, 2.3044500783009063, 2.303348296983855, 2.3029790887617243], "accuracy": [0.15136705338954926, 0.14859332144260406, 0.09853387624025345, 0.09668471664190292, 0.09945846349000931, 0.10302469879388809], "val_loss": [1.9694849422999792, 2.000623498644148, 1.974944795880999, 1.974245343889509, 1.9739491598946708, 1.9736604009355818], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 1, 5, 4, 0, 0, 2, 1, 3, 2, 2, 3, 4, 6, 0, 8, 8, 2, 1, 6, 5, 2, 5, 2, 2, 5, 2, 0, 4, 6, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 3, 0, 0, 2, 0, 1, 2, 1, 2, 2, 0, 3, 2, 0, 1, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [43, 51, 43, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1], [8, 7, 5, 5, 1, 8, 3, 0], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.04114285856485367, "mapping_values": [1, 5, 5, 2, 3, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301869009023235, 2.3026806316544524, 2.3027865506591514, 2.3032123056211966, 2.301245453114901, 2.3034103666833836], "accuracy": [0.09245806187391281, 0.09074098616838455, 0.08928807079792023, 0.08928807079792023, 0.09166556596755981, 0.0874389111995697], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]