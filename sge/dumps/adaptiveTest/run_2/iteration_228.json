[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 1, 3, 3, 5, 8, 3, 3, 8, 6, 6, 4, 5, 2, 8, 9, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2, 7, 0, 7, 4, 4], [2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.7825714349746704, "mapping_values": [1, 28, 28, 17, 11, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.multiply(grad, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))))))))))))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2473267691089114, 2.3040542127969257, 2.2673453192874, 2.964534873991374, 2.304784446265861, 2.291075140619637, 2.1828027377747716, 2.083028998561996, 1.839491270709866, 2.162711039226856, 2.108116820377838, 1.9087561903502475, 1.9756908332667, 1.450683706456392, 1.2248469789691683, 1.4541538635721738, 1.1426045839041137, 1.0113242967348246, 0.9919313198508304, 0.8996751401733335, 0.8463522170387034, 0.8152649056610729, 0.8157455063436199, 0.7378406187389285, 0.752212935773499, 0.6821788263642131, 0.9200586931202563, 0.7833168488200063, 0.7511512619188481, 0.7526955322472332], "accuracy": [0.15968827903270721, 0.10011887550354004, 0.15810328722000122, 0.16034869849681854, 0.10091137140989304, 0.13313961029052734, 0.22335226833820343, 0.29243165254592896, 0.3877955377101898, 0.2620525658130646, 0.27499669790267944, 0.36481308937072754, 0.3397173285484314, 0.5075947642326355, 0.5705983638763428, 0.4994056224822998, 0.6012415885925293, 0.6380926966667175, 0.6547351479530334, 0.6796988248825073, 0.6964733600616455, 0.7020208835601807, 0.7012283802032471, 0.7211728692054749, 0.7186633348464966, 0.7423061728477478, 0.6732267737388611, 0.7186633348464966, 0.7240787148475647, 0.7275128960609436], "val_loss": [1.9760167258126395, 1.9728467805044991, 1.425088848386492, 1.9772206715175085, 1.9727030481610979, 1.9098244394574846, 1.92746182850429, 1.7191686630249023, 1.3491138049534388, 1.5605347837720598, 1.5030226026262556, 1.8084728377205985, 1.2722435678754533, 0.979322978428432, 1.069972004209246, 0.934884786605835, 0.777599539075579, 0.8584089619772775, 0.6454295771462577, 0.6331831216812134, 0.6393193176814488, 0.6716327667236328, 0.5746321507862636, 0.5427261080060687, 0.5202987534659249, 0.6590979780469622, 0.6361076491219657, 0.5490225212914603, 0.5278455189296177, 0.520937613078526], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.4230000078678131, 0.11400000005960464, 0.12300000339746475, 0.18933333456516266, 0.15299999713897705, 0.437333345413208, 0.5173333287239075, 0.39633333683013916, 0.4363333284854889, 0.25866666436195374, 0.4806666672229767, 0.5983333587646484, 0.5233333110809326, 0.6156666874885559, 0.6786666512489319, 0.606333315372467, 0.7363333106040955, 0.7319999933242798, 0.7126666903495789, 0.7053333520889282, 0.7476666569709778, 0.7606666684150696, 0.778333306312561, 0.7200000286102295, 0.7260000109672546, 0.7576666474342346, 0.7710000276565552, 0.7699999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 3, 3, 3, 5, 5, 3, 3, 8, 6, 6, 4, 1, 2, 6, 9, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2, 7, 0, 7, 4, 4], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.41342857480049133, "mapping_values": [1, 26, 26, 14, 12, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.square(tf.math.square(tf.math.multiply(grad, tf.math.multiply(grad, tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.247421831581429, 2.3039657898614307, 2.412104778254525, 2.313660068408672, 2.448717613513711, 2.2889196486316257, 2.0825887603876914, 1.9810997998914415, 2.2847941508776226, 2.3125899825286966, 2.3042048164693165, 2.3386542066496756, 2.308099737351266], "accuracy": [0.15915995836257935, 0.10276053100824356, 0.15440496802330017, 0.11530841141939163, 0.1558578759431839, 0.13300752639770508, 0.2843745946884155, 0.3082816004753113, 0.2588825821876526, 0.09708096832036972, 0.10038304328918457, 0.16536785662174225, 0.10394927859306335], "val_loss": [1.9760379110063826, 1.9721147673470634, 2.022683688572475, 1.9565207617623466, 1.9740193911961146, 1.8820913859776087, 1.9459904261997767, 1.3665996279035295, 1.9845484324863978, 1.9741801534380232, 1.9683301789419991, 1.985762051173619, 1.9742750440325056], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.1003333330154419, 0.17933332920074463, 0.10066666454076767, 0.20933333039283752, 0.12433333694934845, 0.4729999899864197, 0.10133333504199982, 0.10233332961797714, 0.18533332645893097, 0.10199999809265137, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 3, 1, 3, 3, 1, 8, 1, 3, 8, 6, 2, 4, 1, 2, 8, 4, 5, 8, 2, 8, 2, 4, 3, 1, 3, 9, 0, 6, 5], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [20, 89, 92, 83, 35, 74, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.3874285817146301, "mapping_values": [1, 47, 47, 27, 20, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, alpha))))))))))))))))), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.247398505389116, 2.3040098128396256, 2.300018682078033, 2.2904437420595243, 2.308736528718571, 2.3039527700530256, 2.30324354950841, 2.303001980283367, 2.3029930954989726], "accuracy": [0.15863162279129028, 0.10342095047235489, 0.15202747285366058, 0.14621582627296448, 0.15493330359458923, 0.09998679161071777, 0.09351472556591034, 0.09800554811954498, 0.10051512718200684], "val_loss": [1.9760109356471471, 1.9726948738098145, 2.02591678074428, 1.8077399390084403, 1.9750141416277205, 1.9737425531659807, 1.9736459595816476, 1.973588534763881, 1.9736294746398926], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.10266666859388351, 0.38100001215934753, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 6, 1, 6, 2, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [3, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 3, 1], [3, 0, 3, 1, 2], [32, 92]], "fitness": -0.3757142722606659, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.247398671882185, 2.3039981585767024, 2.2632177385907872, 2.2885634681851306, 2.2691713241050113, 2.3039258575993697, 2.3032197937469725, 2.3029728624814725], "accuracy": [0.15863162279129028, 0.10315678268671036, 0.1624620258808136, 0.15453705191612244, 0.1398758441209793, 0.09919429570436478, 0.09074098616838455, 0.09668471664190292], "val_loss": [1.9760115487234933, 1.9725919451032365, 1.4381687981741769, 1.9245657920837402, 1.9748894146510534, 1.9736266136169434, 1.9736159869602747, 1.973574434007917], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.3580000102519989, 0.10233332961797714, 0.0976666659116745, 0.10133333504199982, 0.10266666859388351, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 4, 1, 6, 3, 2, 8, 3, 3, 8, 6, 6, 4, 5, 2, 8, 4, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2], [3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.22028571367263794, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.247398244517433, 2.3040070569652213, 2.2928098821999012, 2.2302210242000977, 2.4486994150371095, 2.3048761120215384, 2.303516638324623, 2.303598100294164, 2.3033285351981103], "accuracy": [0.15863162279129028, 0.1026284471154213, 0.14172500371932983, 0.16774533689022064, 0.17170783877372742, 0.09853387624025345, 0.09906221181154251, 0.0944393053650856, 0.10011887550354004], "val_loss": [1.976010731288365, 1.972637448992048, 2.001145771571568, 2.3092877524239674, 1.9747285161699568, 1.9736908503941126, 1.9736856733049666, 1.973630155835833, 1.9736442565917969], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.10266666859388351, 0.18833333253860474, 0.10199999809265137, 0.10199999809265137, 0.0976666659116745, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 2, 7, 2, 2, 2, 4, 3, 5, 4, 2, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 0, 2, 2, 1, 2], [3, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.20200000703334808, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9483083449240137, 2.58444356644363, 2.3237504437929917, 2.311371329501163, 2.3664524145508015, 2.331892496023857, 2.334946790123817], "accuracy": [0.1678774207830429, 0.14991414546966553, 0.13551710546016693, 0.11861048638820648, 0.09826971590518951, 0.12429005652666092, 0.10276053100824356], "val_loss": [2.009941782270159, 1.973118441445487, 2.00808014188494, 2.013331821986607, 1.963508469717843, 1.988943236214774, 2.0266714777265276], "val_accuracy": [0.12466666847467422, 0.15800000727176666, 0.11733333021402359, 0.10133333504199982, 0.11733333021402359, 0.10300000011920929, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 1, 3, 3, 2, 8, 3, 3, 8, 6, 6, 4, 5, 2, 8, 9, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2, 7, 0, 7, 4, 4], [2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [60, 37, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.19742856919765472, "mapping_values": [1, 30, 30, 18, 12, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.multiply(grad, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.247421682975264, 2.3040146151270453, 2.3519240709233515, 2.3020155055096847, 2.302366693620401, 2.30357288977316, 2.303010527483933, 2.3017150306147416, 2.251904761739269], "accuracy": [0.15915995836257935, 0.10157178342342377, 0.15057456493377686, 0.14317791163921356, 0.13274335861206055, 0.10289261490106583, 0.10210011899471283, 0.11834631860256195, 0.18914277851581573], "val_loss": [1.976036480494908, 1.9722277777535575, 2.0108745438711986, 1.7534616334097726, 1.974461214882987, 1.9734119006565638, 1.9731463023594447, 1.9669619968959264, 1.9874863624572754], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.1003333330154419, 0.1940000057220459, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.17733334004878998, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 3, 1, 5, 2, 1, 4, 1, 3, 8, 6, 2, 4, 5, 2, 8, 4, 0, 8, 2, 8, 2, 4, 3, 1, 3, 9, 0, 6, 5], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.18485714495182037, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.948362047236751, 2.6148747357363558, 2.357834479213942, 2.567382932732748, 2.400340909734929, 2.37275728116875, 2.3754244040284003, 2.3707785564501207], "accuracy": [0.16774533689022064, 0.14595165848731995, 0.1142517477273941, 0.1310262829065323, 0.09549596905708313, 0.09985470771789551, 0.09642054885625839, 0.09655263274908066], "val_loss": [2.0105678013392856, 1.9953906195504325, 1.9867271014622279, 2.029129777635847, 2.020263808114188, 2.02665867124285, 2.053004332951137, 2.0464713914053783], "val_accuracy": [0.12333333492279053, 0.15666666626930237, 0.16500000655651093, 0.10166666656732559, 0.09700000286102295, 0.1003333330154419, 0.10266666859388351, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 1, 3, 3, 5, 8, 3, 3, 2, 6, 6, 4, 1, 2, 8, 9, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2, 7, 0, 7, 4, 4], [2, 0, 2, 2, 2, 2, 1, 2, 2, 2, 2, 0, 2, 2, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.18285714089870453, "mapping_values": [1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.square(grad))))))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.247421831581429, 2.303994531345531, 2.372899889804274, 2.3123630631192014, 2.320635505434922, 2.3046617415350945, 2.3034971455982287, 2.3024039163943435, 2.3496126201505185], "accuracy": [0.15915995836257935, 0.10236428678035736, 0.15242372453212738, 0.11979923397302628, 0.15638621151447296, 0.09826971590518951, 0.09417514503002167, 0.10038304328918457, 0.15189538896083832], "val_loss": [1.9760381153651647, 1.9721129281180245, 2.0249740736825124, 1.9438180923461914, 1.9759673391069685, 1.9738078798566545, 1.9735180991036552, 1.9702741077968053, 1.982316153390067], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.1003333330154419, 0.20733332633972168, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09200000017881393, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [5, 5, 2, 7, 2, 2, 2, 4, 3, 5, 4, 2, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 0, 2, 2, 1, 2], [3, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.18028570711612701, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.948327326897412, 2.4567668516370427, 2.216095907718687, 2.342914550280165, 2.2042354440267107, 2.2312079719217968, 2.2534408788198586, 2.391235504797846], "accuracy": [0.16774533689022064, 0.17897239327430725, 0.17699114978313446, 0.1592920422554016, 0.16563200950622559, 0.1698586642742157, 0.1488574892282486, 0.09919429570436478], "val_loss": [2.0105158942086354, 1.8983073234558105, 1.847229276384626, 1.8511900901794434, 1.800389357975551, 1.833634921482631, 2.0486381394522533, 2.038228852408273], "val_accuracy": [0.1146666631102562, 0.179666668176651, 0.21833333373069763, 0.1860000044107437, 0.2043333351612091, 0.18799999356269836, 0.10266666859388351, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 2, 1, 5, 0, 1, 4, 1, 3, 8, 6, 2, 4, 5, 2, 8, 4, 8, 8, 2, 8, 2, 4, 3, 1, 3, 9, 0, 6, 5], [0, 0, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [20, 89, 92, 83, 35, 74, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.1022857129573822, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.247395685084067, 2.303997938454411, 2.2989999626952233, 2.3371362009729926, 2.3070970585852915, 2.3033244763194074, 2.303349984493616, 2.3030625149841875], "accuracy": [0.15889579057693481, 0.10368511080741882, 0.1438383311033249, 0.1558578759431839, 0.09853387624025345, 0.10091137140989304, 0.0952318087220192, 0.09826971590518951], "val_loss": [1.9760028975350517, 1.9726019586835588, 2.0044403757367815, 1.9816461290631975, 1.9742003168378557, 1.9736605371747697, 1.9736816542489188, 1.9735653741019112], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.10266666859388351, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0976666659116745, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 1, 3, 3, 5, 6, 3, 3, 8, 6, 6, 4, 5, 2, 8, 9, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2, 7, 0, 7, 4, 4], [2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [96, 89, 92, 83, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))), tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad))))))))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 1, 2, 2, 2, 0, 9, 0, 5, 4, 5, 4, 1, 2, 2, 4, 8, 8, 2, 8, 9, 5, 8, 2, 1, 2, 2, 2, 2, 9], [2, 0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 0, 2, 2, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 12, 30, 46, 46, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 8, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 1, 3, 3, 5, 8, 3, 3, 8, 6, 6, 4, 5, 2, 8, 2, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2, 7, 0, 7, 4, 4], [0, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 0, 2, 1, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [20, 89, 82, 83, 35, 74, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [1, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 19, 13, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.multiply(grad, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.square(alpha))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))))))))))))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 3, 1, 5, 2, 1, 4, 1, 3, 8, 6, 9, 4, 5, 2, 6, 4, 0, 8, 2, 8, 2, 4, 3, 1, 3, 9, 0, 6, 5], [0, 0, 2, 0, 2, 1, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 93, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [4, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 4, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 3, 1, 5, 3, 1, 8, 1, 3, 8, 6, 2, 4, 5, 2, 8, 4, 0, 8, 2, 8, 2, 4, 3, 1, 3, 9, 0, 6, 5], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [20, 89, 92, 83, 35, 74, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [214598857.0424805, 3372227356.9103155, 14836181131.85154, 40332837448.292694, 86148192342.29138, 157507855663.64285], "accuracy": [0.09840179979801178, 0.09879804402589798, 0.09985470771789551, 0.09813763201236725, 0.09932637959718704, 0.09853387624025345], "val_loss": [572204032.0, 4574875501.714286, 15437064192.0, 36587971730.28571, 71456555008.0, 123472138825.14285], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 4, 1, 6, 3, 2, 8, 3, 3, 8, 6, 6, 4, 5, 2, 8, 4, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2], [0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [1, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5.1764997871025065, 148.700924554033, 1801.7995926647013, 11738.621258853686, 50816.9412757149, 165457.63830529322], "accuracy": [0.0952318087220192, 0.09893012791872025, 0.09985470771789551, 0.09800554811954498, 0.09932637959718704, 0.09853387624025345], "val_loss": [16.75304685320173, 348.9819074358259, 3133.1328125, 16318.914620535714, 60019.83928571428, 175414.66517857142], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 5, 2, 7, 2, 2, 2, 4, 3, 5, 4, 2, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 0, 2, 2, 1, 2], [3, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 10, 7, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(sigma))))", "other_info": {"loss": [2.3023255624003998, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 4, 1, 6, 3, 2, 8, 3, 3, 8, 6, 6, 4, 5, 2, 8, 4, 8, 8, 2, 8, 2, 5, 6, 1, 3, 2], [0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 37, 30, 46, 46, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.0560000017285347, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2473268950730265, 2.30405300813911, 2.277516453100186, 2.391228459058043, 2.2912052407980816, 2.211604198239908, 2.3088617678158445, 2.3051654018698873, 2.3040886351681498], "accuracy": [0.15968827903270721, 0.10038304328918457, 0.1574428677558899, 0.1534803807735443, 0.17302866280078888, 0.18042530119419098, 0.09919429570436478, 0.09945846349000931, 0.09509972482919693], "val_loss": [1.9760167258126395, 1.9728097915649414, 2.0902624130249023, 1.9557135445731026, 1.9702115058898926, 1.9837425095694405, 1.9743285179138184, 1.973796776362828, 1.97371278490339], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.10266666859388351, 0.20733332633972168, 0.10199999809265137, 0.10199999809265137, 0.1003333330154419, 0.10066666454076767, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 3, 1, 5, 2, 1, 4, 1, 3, 8, 2, 2, 4, 5, 5, 8, 4, 0, 8, 2, 8, 2, 4, 3, 1, 3, 9, 0, 6, 5], [2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [20, 37, 30, 46, 46, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 32, 32, 19, 13, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(grad, tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))))))))))), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301703600662417, 2.303748144969303, 2.3027527951419535, 2.301564288129896, 2.3034888297937424, 2.3029346839233145], "accuracy": [0.09140139818191528, 0.09192973375320435, 0.09245806187391281, 0.09232597798109055, 0.0886276587843895, 0.09060890227556229], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]