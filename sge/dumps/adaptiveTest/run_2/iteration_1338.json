[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.7788571715354919, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.square(sigma)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.061803041573891, 1.8479641487947656, 1.4489209455443002, 1.0587587422304905, 0.871046570550024, 0.7805219834207654, 0.719872135346702, 0.6617230651495464, 0.6337061366463664, 0.6094491568145153, 0.591936961196244, 0.5665151734220479], "accuracy": [0.3004887104034424, 0.3673226833343506, 0.5303130149841309, 0.609430730342865, 0.6690001487731934, 0.702681303024292, 0.7218332886695862, 0.7481178045272827, 0.7604015469551086, 0.7696473598480225, 0.7777044177055359, 0.7814027070999146], "val_loss": [1.4103456224714006, 1.339679752077375, 0.9027916703905378, 0.5844661848885673, 0.589736989566258, 0.5380892413003104, 0.48353030000414166, 0.4929661921092442, 0.5213720117296491, 0.4661071811403547, 0.4781738349369594, 0.517565097127642], "val_accuracy": [0.3766666650772095, 0.5809999704360962, 0.6026666760444641, 0.7433333396911621, 0.734000027179718, 0.737333357334137, 0.7889999747276306, 0.7730000019073486, 0.7426666617393494, 0.7860000133514404, 0.7606666684150696, 0.7543333172798157]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [14, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 4, 5, 9, 0, 1, 4, 4, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 1, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 31, 74, 13, 47, 86, 30]], "fitness": -0.41600000858306885, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3858476260460724, 2.262062427594819, 2.313537696286152, 2.3030131148498416, 2.2844310999703903, 2.36531985286299, 2.304422458275324, 2.303305067894497, 2.3031437155466983, 2.3030558238648595], "accuracy": [0.20274733006954193, 0.1670849323272705, 0.14819706976413727, 0.10091137140989304, 0.15915995836257935, 0.14040417969226837, 0.09708096832036972, 0.09377889335155487, 0.09298639744520187, 0.09655263274908066], "val_loss": [1.9159529549734933, 1.8630078860691615, 1.9744227954319544, 1.9727386747087752, 1.7117060252598353, 1.9761162485395158, 1.9742396899632044, 1.9737999098641532, 1.973705223628453, 1.9738161223275321], "val_accuracy": [0.10000000149011612, 0.35899999737739563, 0.1003333330154419, 0.1003333330154419, 0.3893333375453949, 0.10133333504199982, 0.0976666659116745, 0.0976666659116745, 0.10000000149011612, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [10, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 1, 7], [99], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 4, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 91, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.14342856407165527, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7707883842774605, 2.4106418558351748, 2.182209030102745, 2.6699041237589896, 3.043994249905168, NaN, NaN, NaN], "accuracy": [0.2218993455171585, 0.11187426000833511, 0.23642848432064056, 0.15400871634483337, 0.10711926966905594, 0.09219389408826828, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.199674129486084, 1.903294290815081, 3.853057248251779, 1.9633921895708357, 55.10127585274832, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.21199999749660492, 0.25600001215934753, 0.1316666603088379, 0.02266666665673256, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [8, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [22, 48, 86, 3, 74, 47, 47, 86, 30]], "fitness": -0.10571428388357162, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3018373166092982, 2.301662670764563, 2.300656948138726, 2.3014678297230535, 2.3018043956043637, 2.3022452469562356, 2.3024893875497443, 2.302556821871994, 2.3025757468151395, 2.302581049117115], "accuracy": [0.0936468094587326, 0.09338264167308807, 0.10091137140989304, 0.09377889335155487, 0.10659094154834747, 0.10368511080741882, 0.10328886657953262, 0.10249637067317963, 0.10157178342342377, 0.1002509593963623], "val_loss": [1.9701095989772253, 1.9715071405683244, 1.9726340430123466, 1.9731359481811523, 1.9734819275992257, 1.9736204828534807, 1.973639760698591, 1.9736443247113908, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.07000000029802322, 0.0949999988079071, 0.0989999994635582, 0.09333333373069763, 0.11033333092927933, 0.10466666519641876, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [10, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 1, 7], [99], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 91, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10428571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022797744130226, 2.3030633571802617, 2.301027455680705, 2.3010593783255535, 2.300953419736631, 2.300313656434974, 2.299911613241399, 2.3006199993682244, 2.3004922407997, 2.299849851366677, 2.3006922451102927, 2.3010152544815936, 2.3010641860294303, 2.3007700819585617, 2.301323672705134, 2.3013017936515583, 2.301493052588541, 2.3016954603889253, 2.301505550905509], "accuracy": [0.09008057415485382, 0.09140139818191528, 0.09787346422672272, 0.09259014576673508, 0.08994849026203156, 0.09721305221319199, 0.09945846349000931, 0.09774138033390045, 0.09285431355237961, 0.1022322028875351, 0.09734513610601425, 0.10236428678035736, 0.09853387624025345, 0.10157178342342377, 0.10210011899471283, 0.09774138033390045, 0.1018359512090683, 0.09734513610601425, 0.09840179979801178], "val_loss": [1.969963754926409, 1.9698823520115443, 1.9698808533804757, 1.9699690682547433, 1.9701076235089983, 1.9703226770673479, 1.9705844606672014, 1.970870018005371, 1.9711897713797433, 1.9715001923697335, 1.9717766216823034, 1.972022465297154, 1.9722490310668945, 1.9724572726658411, 1.9726290021623885, 1.9727637427193778, 1.9728754588535853, 1.9729705538068498, 1.9730521610804967], "val_accuracy": [0.0416666679084301, 0.04866666719317436, 0.0573333315551281, 0.06233333423733711, 0.07000000029802322, 0.07699999958276749, 0.08399999886751175, 0.09033333510160446, 0.09933333098888397, 0.0949999988079071, 0.09933333098888397, 0.1003333330154419, 0.10066666454076767, 0.10133333504199982, 0.0989999994635582, 0.09566666930913925, 0.09533333033323288, 0.09433333575725555, 0.09333333373069763]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [10, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 1, 7], [99], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [7, 1, 4, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 91, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 4, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303147919126679, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [10, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 91, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [22, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [98, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303147919126679, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [1, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 8, 8, 2, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 9, 6, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.add(sigma, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 9, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [29, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [14, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [91, 48, 86, 3, 74, 47, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303147919126679, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [8, 1, 1, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 7, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), alpha), tf.math.square(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [1, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [8, 1, 1, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303147919126679, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 4, 1, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303147919126679, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [4, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [8, 5, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 3, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [13, 48, 86, 31, 74, 13, 47, 86, 30]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.square(alpha)), sigma), sigma), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302397367551484, 2.3036763626177232, 2.301677708612567, 2.301930561545597, 2.3021273648875846, 2.3008850464148844, 2.3002051757925366, 2.301654605723139, 2.301709791042896, 2.2999927463816174, 2.3019034854960463, 2.30142147222042, 2.301304720742686, 2.3010222956866886, 2.30133527809398, 2.301314264004493, 2.3014997398029813, 2.300714907314264, 2.3004492283371287, 2.299875972041396, 2.30058898961681, 2.3007878918043767, 2.2995413213184936, 2.300781977033382, 2.300448600311541, 2.2992771887713106, 2.3009680843214713, 2.301203630603835, 2.300626278049548, 2.3011424615792215, 2.300876405528508, 2.299771241413651, 2.2999251469204123, 2.2996445650028403, 2.3003016853093188, 2.2992264837746954, 2.300293201878086, 2.2992136154696294, 2.299325157669888, 2.299178649059392, 2.2993921975670015, 2.299785978459348, 2.2995944898268013, 2.299446550389921, 2.2993862752696512, 2.299899511742885, 2.300619531915393, 2.2995028988938087, 2.3006765132629954, 2.2998850206421224, 2.300807230571132, 2.2993752381994015, 2.2996596831214773, 2.2994447802477005, 2.3003709153759955, 2.300443507330434], "accuracy": [0.09113723784685135, 0.09060890227556229, 0.09602430462837219, 0.08981640636920929, 0.08849557489156723, 0.08928807079792023, 0.09417514503002167, 0.09470347315073013, 0.08809932321310043, 0.09774138033390045, 0.08942015469074249, 0.0952318087220192, 0.09391097724437714, 0.08915598690509796, 0.09642054885625839, 0.09232597798109055, 0.0866464152932167, 0.09642054885625839, 0.09747721254825592, 0.09747721254825592, 0.09879804402589798, 0.09311848133802414, 0.09668471664190292, 0.08955223858356476, 0.08928807079792023, 0.09760929644107819, 0.08757099509239197, 0.09166556596755981, 0.09179764986038208, 0.08902391046285629, 0.09113723784685135, 0.0940430611371994, 0.09985470771789551, 0.09998679161071777, 0.09576013684272766, 0.10276053100824356, 0.09509972482919693, 0.10672302544116974, 0.09959053993225098, 0.09576013684272766, 0.10408136248588562, 0.09919429570436478, 0.09602430462837219, 0.09959053993225098, 0.09642054885625839, 0.09945846349000931, 0.0956280529499054, 0.10315678268671036, 0.09325055778026581, 0.0940430611371994, 0.0886276587843895, 0.09879804402589798, 0.10157178342342377, 0.10210011899471283, 0.09615638852119446, 0.09774138033390045], "val_loss": [1.9700727462768555, 1.9699794905526298, 1.9699103491646903, 1.9698365075247628, 1.9697653225490026, 1.969710145677839, 1.9696677752903529, 1.9696121215820312, 1.969566822052002, 1.9695335115705217, 1.9694758823939733, 1.9694394384111678, 1.9694150515965052, 1.9693783351353236, 1.96934597832816, 1.9693241119384766, 1.9692866461617606, 1.9692718642098563, 1.9692587852478027, 1.969247681753976, 1.9692369188581194, 1.9692240442548479, 1.9692208426339286, 1.9692198208400182, 1.9692198889596122, 1.9692292213439941, 1.9692223412649972, 1.9692115783691406, 1.9692111015319824, 1.9692107609340124, 1.9692119870867049, 1.969226700919015, 1.969240733555385, 1.9692555836268835, 1.9692611694335938, 1.9692802429199219, 1.9692950929914201, 1.969325406210763, 1.969353403363909, 1.9693794250488281, 1.9694111687796456, 1.9694367817470007, 1.9694690704345703, 1.9695007460457938, 1.9695398466927665, 1.9695696149553572, 1.9695937974112374, 1.969632693699428, 1.969655922480992, 1.969691344669887, 1.9697179113115584, 1.9697610310145788, 1.9697963169642858, 1.9698335783822196, 1.9698640959603446, 1.9699022429330009], "val_accuracy": [0.03966666758060455, 0.04100000113248825, 0.04233333468437195, 0.041999999433755875, 0.04266666620969772, 0.044333335012197495, 0.04466666653752327, 0.04600000008940697, 0.046666666865348816, 0.04866666719317436, 0.050333332270383835, 0.05166666582226753, 0.052666667848825455, 0.05433333292603493, 0.054666668176651, 0.0560000017285347, 0.057999998331069946, 0.05966666713356972, 0.061000000685453415, 0.06266666948795319, 0.06366666406393051, 0.06599999964237213, 0.0663333311676979, 0.06733333319425583, 0.06833333522081375, 0.0689999982714653, 0.070333331823349, 0.07066666334867477, 0.07199999690055847, 0.0729999989271164, 0.07533333450555801, 0.07599999755620956, 0.07699999958276749, 0.07866666465997696, 0.08033332973718643, 0.08133333176374435, 0.08166666328907013, 0.0820000022649765, 0.08166666328907013, 0.08266666531562805, 0.08399999886751175, 0.08366666734218597, 0.08433333039283752, 0.08533333241939545, 0.0860000029206276, 0.0860000029206276, 0.08533333241939545, 0.08566666394472122, 0.0860000029206276, 0.08666666597127914, 0.08699999749660492, 0.08566666394472122, 0.08566666394472122, 0.08500000089406967, 0.08566666394472122, 0.0860000029206276]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [73, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 5, 7, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.07599999755620956, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 34, 22, 12, 6], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.square(sigma)), tf.math.add(tf.math.square(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.pow(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.multiply(sigma, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), beta), alpha))))))), tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(sigma)))", "other_info": {"loss": [2.392665944976766, 2.2532701311236156, 2.300598114047934, 2.2697032025744965, 2.3045164544930974, 2.3033820748911746, 2.303262382371787, 2.3029248653039516, 2.303089990214019, 2.303113378254713, 2.302950080202209, 2.3032101062562536, 2.3029749110988607, 2.303017319185607], "accuracy": [0.20380398631095886, 0.17514199018478394, 0.1364416927099228, 0.14555540680885315, 0.09721305221319199, 0.0940430611371994, 0.09509972482919693, 0.09681680053472519, 0.08796724677085876, 0.09470347315073013, 0.1006472036242485, 0.09470347315073013, 0.09430722147226334, 0.0944393053650856], "val_loss": [1.918159348624093, 1.9738574709211076, 1.9868149076189314, 1.9766730581011092, 1.9741590363638741, 1.9738593782697404, 1.9738563810076033, 1.9737943240574427, 1.9737685748508997, 1.9738266127450126, 1.973747798374721, 1.9736907822745187, 1.973625659942627, 1.9735802241734095], "val_accuracy": [0.10000000149011612, 0.1003333330154419, 0.09733333438634872, 0.10133333504199982, 0.10133333504199982, 0.09700000286102295, 0.0976666659116745, 0.09700000286102295, 0.11500000208616257, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [14, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.07000000029802322, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.302035566712131, 2.3025329061361304, 2.3001787258161293, 2.3001885941598266, 2.3004438201623145, 2.2993636092867566, 2.2989268610899742, 2.2998949104627013, 2.3002745893259466, 2.298753361014831, 2.300262386363338, 2.299695516322283, 2.2999795793841433, 2.299906088486796, 2.300519700032089, 2.3008733161326176], "accuracy": [0.09140139818191528, 0.09298639744520187, 0.10051512718200684, 0.09681680053472519, 0.09430722147226334, 0.09681680053472519, 0.10077928751707077, 0.10196803510189056, 0.09470347315073013, 0.10368511080741882, 0.09932637959718704, 0.1010434553027153, 0.09509972482919693, 0.09760929644107819, 0.09721305221319199, 0.09351472556591034], "val_loss": [1.969500950404576, 1.968963895525251, 1.9688638278416224, 1.9688617842538017, 1.9689348765781947, 1.9690149852207728, 1.9690980230058943, 1.9689987727573939, 1.9690099443708147, 1.969153540475028, 1.9693046978541784, 1.9695686612810408, 1.9698246547154017, 1.9700829642159599, 1.9702826227460588, 1.970454284123012], "val_accuracy": [0.04399999976158142, 0.04699999839067459, 0.05166666582226753, 0.05833333358168602, 0.06433333456516266, 0.06833333522081375, 0.06966666877269745, 0.07133333384990692, 0.07433333247900009, 0.07133333384990692, 0.07466666400432587, 0.070333331823349, 0.06866666674613953, 0.06733333319425583, 0.0663333311676979, 0.06733333319425583]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [14, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 8, 8, 5, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.07000000029802322, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3020355487307538, 2.3025329106078565, 2.3001792026532875, 2.3001868622477155, 2.300446037760563, 2.299360563978307, 2.298921112024773, 2.2998899712207974, 2.3002705540970063, 2.2987511927945157, 2.3002596827955326, 2.299694927030661, 2.299982962244931, 2.2999075101492914, 2.3005203300416115, 2.3008741480311254], "accuracy": [0.09140139818191528, 0.09298639744520187, 0.10051512718200684, 0.09681680053472519, 0.0944393053650856, 0.09681680053472519, 0.1006472036242485, 0.10210011899471283, 0.0948355570435524, 0.10381719470024109, 0.09919429570436478, 0.1010434553027153, 0.0952318087220192, 0.09760929644107819, 0.09747721254825592, 0.0936468094587326], "val_loss": [1.969500950404576, 1.968963895525251, 1.9688639640808105, 1.968860489981515, 1.9689374651227678, 1.9690076283046178, 1.969092914036342, 1.968994072505406, 1.9690070833478654, 1.969149453299386, 1.96930388041905, 1.96957186290196, 1.9698257446289062, 1.9700854165213448, 1.970278603690011, 1.9704575538635254], "val_accuracy": [0.04399999976158142, 0.04699999839067459, 0.052000001072883606, 0.05833333358168602, 0.06433333456516266, 0.06833333522081375, 0.06933332979679108, 0.0716666653752327, 0.07433333247900009, 0.0716666653752327, 0.07466666400432587, 0.070333331823349, 0.06866666674613953, 0.0676666647195816, 0.06599999964237213, 0.06733333319425583]}}]