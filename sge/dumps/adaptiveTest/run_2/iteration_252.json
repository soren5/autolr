[{"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 9, 4, 6, 4, 5, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 0, 1, 2, 2, 2, 2, 0, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [3, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.7820000052452087, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.211213007547663, 2.315078376133397, 2.304421030472078, 2.3005285931301156, 2.2408533458145397, 2.154242237576908, 2.0793159930083447, 2.1792827985227197, 1.8240711544608994, 1.6805146409378484, 1.5736071331279624, 2.0781532949413117, 2.006909092514034, 1.6388520064244985, 1.4082017912447113, 1.391545666490705, 1.2566964508850718, 1.228277437171412, 1.0440775330953784, 0.9615778206456308, 0.9211089039333838, 0.9063060427338707, 0.8770668869950059, 0.8085629507188768, 0.76037183811384, 0.8113347623940582, 0.7222255136846725, 0.6976029787711054, 0.6721438507929203, 0.6711936768854393, 0.6652110514151438, 0.6172425601035534, 0.6066350353990705, 0.6088326428749338, 0.6574648172155332, 0.544868036598782, 0.5601656845516265], "accuracy": [0.19323734939098358, 0.1526878923177719, 0.09985470771789551, 0.11557257920503616, 0.1814819723367691, 0.2378813922405243, 0.2875445783138275, 0.282129168510437, 0.3719455897808075, 0.44868576526641846, 0.4843481779098511, 0.2884691655635834, 0.2996962070465088, 0.43323206901550293, 0.5173689126968384, 0.5200105905532837, 0.5616167187690735, 0.5754854083061218, 0.6194690465927124, 0.6519614458084106, 0.6672830581665039, 0.6717738509178162, 0.6767930388450623, 0.7055870890617371, 0.7173424959182739, 0.698190450668335, 0.7271166443824768, 0.7423061728477478, 0.746268630027771, 0.7449478507041931, 0.7500990629196167, 0.7691190242767334, 0.7733456492424011, 0.7717606425285339, 0.7581561207771301, 0.7998943328857422, 0.7915731072425842], "val_loss": [1.9580722536359514, 1.9760250364031111, 1.9730217797415597, 1.9659419740949358, 1.514927659715925, 1.9861772400992257, 1.5630628381456648, 1.8793747765677316, 1.1700176511492049, 1.2927193301064628, 2.014493669782366, 1.530031749180385, 1.359408003943307, 1.0850260598318917, 1.2402480329786028, 1.2218760422297887, 0.9657143184116909, 0.8859273706163678, 0.6873184272221157, 0.6670423405511039, 0.6394719055720738, 0.6903984716960362, 0.6194441999707904, 0.5691895314625331, 0.5504604578018188, 0.5737026248659406, 0.5116481270108905, 0.4815306322915213, 0.49867347308567594, 0.4605811153139387, 0.4709734746388027, 0.45507651567459106, 0.4749799796513149, 0.48828096049172537, 0.45145281723567415, 0.5120488064629691, 0.4560850092342922], "val_accuracy": [0.25833332538604736, 0.10000000149011612, 0.10566666722297668, 0.13866665959358215, 0.3713333308696747, 0.13066667318344116, 0.3930000066757202, 0.17233332991600037, 0.531333327293396, 0.5299999713897705, 0.12200000137090683, 0.43833333253860474, 0.49399998784065247, 0.5516666769981384, 0.5379999876022339, 0.5569999814033508, 0.6293333172798157, 0.6236666440963745, 0.7160000205039978, 0.7146666646003723, 0.7123333215713501, 0.6883333325386047, 0.7400000095367432, 0.7390000224113464, 0.7400000095367432, 0.7223333120346069, 0.7720000147819519, 0.777999997138977, 0.7826666831970215, 0.7943333387374878, 0.7956666946411133, 0.800000011920929, 0.7866666913032532, 0.7883333563804626, 0.7923333048820496, 0.731333315372467, 0.7910000085830688]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 4, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 0, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.6582857370376587, "mapping_values": [1, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2110630065190904, 2.31433610153425, 2.304436451723358, 2.300310183982209, 2.250111148751344, 2.2506253659969246, 2.10886000790191, 1.9283179876559036, 1.9389174840768661, 1.9167726190098682, 1.505347247640801, 1.5992366861689282, 1.3983533466181908, 1.3267840687561943, 1.2225938151934836, 1.5761538338368328, 1.3573258330935043, 1.1413905054051343], "accuracy": [0.19310526549816132, 0.1530841439962387, 0.09840179979801178, 0.11042134463787079, 0.17051908373832703, 0.20195482671260834, 0.26495838165283203, 0.369700163602829, 0.35464271903038025, 0.38304054737091064, 0.5025756359100342, 0.471800297498703, 0.5221238732337952, 0.5284639000892639, 0.5719191431999207, 0.5202747583389282, 0.5198785066604614, 0.5941091179847717], "val_loss": [1.9581915310450964, 1.9760113443647112, 1.9730191230773926, 1.965670108795166, 1.7617948395865304, 1.7502643040248327, 1.4607794625418526, 1.9119208199637276, 1.534651483808245, 1.1751414367130824, 1.1180499962397985, 1.0537950992584229, 0.8940398011888776, 1.161597728729248, 1.0711722033364433, 1.2842342512948173, 0.9090324469975063, 0.8610406603131976], "val_accuracy": [0.24566666781902313, 0.10000000149011612, 0.1080000028014183, 0.12466666847467422, 0.37533333897590637, 0.28466665744781494, 0.4183333218097687, 0.17466667294502258, 0.515333354473114, 0.5419999957084656, 0.4833333194255829, 0.5929999947547913, 0.6366666555404663, 0.45633333921432495, 0.5429999828338623, 0.48766666650772095, 0.6273333430290222, 0.6343333125114441]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 4, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.4480000138282776, "mapping_values": [1, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.212058179870714, 2.3038404080153234, 2.3039406800487368, 2.3024812241618378, 2.2182249600593487, 2.2038502163182256, 2.2147262868250146, 2.1554163530156, 2.300121081172987, 2.180336720545719, 1.8362032777644923], "accuracy": [0.19310526549816132, 0.12389380484819412, 0.1002509593963623, 0.10474177449941635, 0.2122572958469391, 0.19402985274791718, 0.18121780455112457, 0.22572976350784302, 0.11478008329868317, 0.2160876989364624, 0.39149385690689087], "val_loss": [1.9559946741376604, 1.9747372354779924, 1.9733713013785226, 1.969439915248326, 1.9746174812316895, 1.2415716988699776, 1.9691955702645438, 1.977499008178711, 1.9499341419764928, 1.7512878690447127, 1.8910702977861678], "val_accuracy": [0.14133332669734955, 0.1003333330154419, 0.09799999743700027, 0.13600000739097595, 0.10133333504199982, 0.5063333511352539, 0.11500000208616257, 0.10466666519641876, 0.18566666543483734, 0.25866666436195374, 0.12099999934434891]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.4474285840988159, "mapping_values": [1, 33, 33, 19, 14, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))))))))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.280870509106706, 2.369718743668036, 2.2293992133550575, 2.0345837058109018, 2.1517651363559733, 2.2373913532045964, 2.315133275420139, 2.305868373177291], "accuracy": [0.18874652683734894, 0.17778365314006805, 0.23537181317806244, 0.31779158115386963, 0.2316734939813614, 0.22282393276691437, 0.10051512718200684, 0.09879804402589798], "val_loss": [1.938709054674421, 1.854113987513951, 1.5178514208112444, 1.9933795247759138, 1.953063692365374, 1.9984397206987654, 1.9758342334202357, 1.9740637370518275], "val_accuracy": [0.32899999618530273, 0.22433333098888397, 0.43299999833106995, 0.10066666454076767, 0.11966666579246521, 0.10066666454076767, 0.10266666859388351, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 4, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.2125714272260666, "mapping_values": [1, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.212053640627858, 2.30475271943223, 2.303989840378898, 2.3026332108887226, 2.236321883793001, 2.3223313549962796, 2.3808576617305777, 2.3037357689634903, 2.2422089021534353, 2.305103096491499, 2.3028163026588753], "accuracy": [0.19297318160533905, 0.12362963706254959, 0.10077928751707077, 0.10606260597705841, 0.18531237542629242, 0.24818386137485504, 0.13974376022815704, 0.10460969805717468, 0.17910447716712952, 0.10315678268671036, 0.09972262382507324], "val_loss": [1.9561097281319755, 1.9748187746320451, 1.973362718309675, 1.970209734780448, 1.8997157641819544, 1.708233083997454, 1.9771514620099748, 1.9642368044172014, 1.9763739449637276, 1.9742987496512276, 1.9736100605555944], "val_accuracy": [0.1326666623353958, 0.1003333330154419, 0.09866666793823242, 0.13333334028720856, 0.2383333295583725, 0.2983333468437195, 0.0976666659116745, 0.12866666913032532, 0.10066666454076767, 0.0976666659116745, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 6, 1, 6, 2, 9, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.1745714247226715, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.211730108757407, 2.3194592768694697, 2.3043809878969426, 2.2999119974319506, 2.1960096783751997, 2.6251203635617206, 2.304564917202497, 2.3032589702873243, 2.3033177533626494, 2.303239275577471], "accuracy": [0.19336943328380585, 0.15414080023765564, 0.09945846349000931, 0.11702549457550049, 0.2071060687303543, 0.12679962813854218, 0.09668471664190292, 0.10315678268671036, 0.09272222965955734, 0.09166556596755981], "val_loss": [1.9591150283813477, 1.9759932245526994, 1.972769328526088, 1.9636432102748327, 2.9941978454589844, 1.9749184335981096, 1.9739418029785156, 1.9737624440874373, 1.9736755916050501, 1.9738078798566545], "val_accuracy": [0.2566666603088379, 0.10000000149011612, 0.12099999934434891, 0.15166667103767395, 0.37299999594688416, 0.10199999809265137, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 6, 1, 4, 8, 2, 9, 1, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [3, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.1582857072353363, "mapping_values": [1, 16, 16, 9, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2117356331970996, 2.3199509554661306, 2.3043077528956952, 2.2999275182263728, 2.2276789517907134, 2.4443076917476754, 2.2388916182212544, 2.3057498635239275, 2.3037972928919985, 2.303607095234178], "accuracy": [0.19336943328380585, 0.15202747285366058, 0.1002509593963623, 0.11306300014257431, 0.19204860925674438, 0.12270505726337433, 0.1950865089893341, 0.10011887550354004, 0.09642054885625839, 0.09206181764602661], "val_loss": [1.9590907096862793, 1.9758878435407365, 1.9728104727608817, 1.964092527117048, 2.2939460618155345, 1.9729749815804618, 1.9786670548575265, 1.9743409837995256, 1.9737735475812639, 1.9738195283072335], "val_accuracy": [0.26233333349227905, 0.10000000149011612, 0.10999999940395355, 0.13500000536441803, 0.26866665482521057, 0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 8, 2, 9, 3, 3, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.sqrt(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.pow(tf.math.divide_no_nan(grad, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1045286032.1099235, 19318634959.376568, 91322620987.91705, 254032651569.8069, 544927380314.58563, 1006214250695.0923], "accuracy": [0.09694888442754745, 0.09893012791872025, 0.10236428678035736, 0.10038304328918457, 0.10249637067317963, 0.09642054885625839], "val_loss": [3758008612.571429, 30054551552.0, 101423094637.71428, 240398307913.14285, 469511840914.2857, 811293119049.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 3, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 79, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [3, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [0, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.math.add(grad, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302802399558603, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1045286032.1099235, 19318634959.376568, 91322620987.91705, 254032651569.8069, 544927380314.58563, 1006214250695.0923], "accuracy": [0.09694888442754745, 0.09893012791872025, 0.10236428678035736, 0.10038304328918457, 0.10249637067317963, 0.09642054885625839], "val_loss": [3758008612.571429, 30054551552.0, 101423094637.71428, 240398307913.14285, 469511840914.2857, 811293119049.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 6, 1, 6, 2, 9, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 53, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [1, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [0, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302802399558603, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 0, 2, 9, 6, 5, 2, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 74, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.07857143133878708, "mapping_values": [1, 47, 47, 28, 19, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad))))), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.211291812996996, 2.3289871700152336, 2.3047776868424914, 2.3024859063739647, 2.2973919759069403, 2.1408766897803897], "accuracy": [0.19376568496227264, 0.14740456640720367, 0.09972262382507324, 0.10910051316022873, 0.12178047746419907, 0.2553163468837738], "val_loss": [1.9595449992588587, 1.9762766701834542, 1.9736652374267578, 1.971954413822719, 1.9554815973554338, 2.212514196123396], "val_accuracy": [0.25966668128967285, 0.10000000149011612, 0.09366666525602341, 0.10866666585206985, 0.14300000667572021, 0.2213333398103714]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 8, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 1, 2, 1, 2, 2, 1, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [3, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.07657142728567123, "mapping_values": [1, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)))), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2149607203403847, 2.2451638545279553, 2.3041481621245574, 2.301685752680966, 2.296545681558533, 2.18068373629981], "accuracy": [0.19310526549816132, 0.14212125539779663, 0.09813763201236725, 0.10896842926740646, 0.12032756209373474, 0.228899747133255], "val_loss": [1.9580682345799036, 1.975942747933524, 1.9731478691101074, 1.9713236263820104, 1.956970282963344, 1.9748001098632812], "val_accuracy": [0.2619999945163727, 0.1003333330154419, 0.12200000137090683, 0.11666666716337204, 0.17766666412353516, 0.12866666913032532]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 1, 6, 2, 9, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.06714285910129547, "mapping_values": [1, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad), grad))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2116338699060174, 2.2756144573439414, 2.3042257871011844, 2.3019831494223157, 2.297429644278941, 2.2804673545317424], "accuracy": [0.19376568496227264, 0.14410249888896942, 0.09826971590518951, 0.10632677376270294, 0.1254788041114807, 0.18557654321193695], "val_loss": [1.959552219935826, 1.9759860719953264, 1.9732255254473006, 1.971613815852574, 1.9551478113446916, 1.9701653208051408], "val_accuracy": [0.24799999594688416, 0.10000000149011612, 0.11266666650772095, 0.11699999868869781, 0.1263333261013031, 0.11866666376590729]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 4, 1, 6, 8, 5, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 46, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.05885714292526245, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2166707454309047, 2.31881556090835, 2.30360253482935, 2.289889997731205, 2.3793210465563854, 2.309177393296675], "accuracy": [0.19284109771251678, 0.1582353711128235, 0.10051512718200684, 0.1262712925672531, 0.28358209133148193, 0.09721305221319199], "val_loss": [1.95572601045881, 1.9756105967930384, 1.9709796224321638, 1.9233875274658203, 1.985461643763951, 1.972172737121582], "val_accuracy": [0.2133333384990692, 0.10066666454076767, 0.12266666442155838, 0.17800000309944153, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 2, 9, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.05257142707705498, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.7621351009535675, 4.936829980747685, 14.412750173222829, 67.4990465955932, 2.567054188435718, NaN, NaN], "accuracy": [0.17500990629196167, 0.14991414546966553, 0.11134592443704605, 0.11940298229455948, 0.09919429570436478, 0.10936468094587326, 0.09998679161071777], "val_loss": [1.997762952532087, 2.219080924987793, 2.285548278263637, 2.1575074877057756, 2.1616691861833846, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10599999874830246, 0.1003333330154419, 0.09833333641290665, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 1, 3, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029227019017635, 2.302380807458638, 2.3018782863433036, 2.30372121456576, 2.3016629073251713, 2.303741830955045], "accuracy": [0.09457138925790787, 0.09060890227556229, 0.0874389111995697, 0.08519349992275238, 0.09747721254825592, 0.08651433140039444], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029227019017635, 2.302380807458638, 2.3018782863433036, 2.30372121456576, 2.3016629073251713, 2.303741830955045], "accuracy": [0.09457138925790787, 0.09060890227556229, 0.0874389111995697, 0.08519349992275238, 0.09747721254825592, 0.08651433140039444], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [3, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [9, 7, 4], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029227019017635, 2.302380807458638, 2.3018782863433036, 2.30372121456576, 2.3016629073251713, 2.303741830955045], "accuracy": [0.09457138925790787, 0.09060890227556229, 0.0874389111995697, 0.08519349992275238, 0.09747721254825592, 0.08651433140039444], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]