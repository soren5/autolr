[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5], [77, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.7931428551673889, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.434990450690656, 2.1425094650154177, 2.1199844407210215, 2.218024444948523, 1.9300671992221954, 1.6523190141275275, 1.5139617956451468, 1.3802604767719138, 1.1581138843841965, 1.0153335403804027, 0.8736623677091355, 0.7687904970552376, 0.7460565942389665, 0.692325958171462, 0.6486371060514242, 0.6726670225597785, 0.6143200199255429, 0.6123653600764171, 0.5731221869117501, 0.5914682087534848, 0.5490992681115074, 0.5360059400221077, 0.5270316176930313, 0.5056355215491967, 0.503618208298578, 0.5148049478541276, 0.5181720635406314, 0.4781282650811907, 0.47407636446345675, 0.4570504569453082, 0.4667162853201477, 0.45622362529659916, 0.44218412598661694, 0.4549876765812141], "accuracy": [0.17500990629196167, 0.23682472109794617, 0.2937524616718292, 0.17804782092571259, 0.3621714413166046, 0.47285696864128113, 0.5038964748382568, 0.5371813774108887, 0.6021661758422852, 0.6535464525222778, 0.6934354901313782, 0.7207766771316528, 0.7341170310974121, 0.7500990629196167, 0.7586844563484192, 0.752212405204773, 0.7721568942070007, 0.7705719470977783, 0.7910447716712952, 0.7833839654922485, 0.7952714562416077, 0.7989697456359863, 0.8020076751708984, 0.8092722296714783, 0.8100647330284119, 0.807158887386322, 0.8121780753135681, 0.8210275769233704, 0.8182538747787476, 0.8259146809577942, 0.8220842480659485, 0.83119797706604, 0.8296129703521729, 0.8329150676727295], "val_loss": [1.95364168712071, 1.5102249894823347, 1.9808391843523299, 1.5210274968828474, 1.1660620144435339, 1.3057092598506383, 0.9341286591121128, 0.7787117787769863, 0.6255842106682914, 0.6312456812177386, 0.7113910402570452, 0.5576738119125366, 0.5049694435937064, 0.45521730184555054, 0.5184257711683001, 0.45754785197121756, 0.4672038895743234, 0.46921442236219135, 0.4480977399008615, 0.4436861276626587, 0.40796773774283274, 0.3975848981312343, 0.42270744698388235, 0.38291468790599276, 0.4677684562546866, 0.4032515457698277, 0.3890156405312674, 0.39861057485852924, 0.36907027448926655, 0.41202588592256817, 0.43651566335133146, 0.37482112646102905, 0.3996302911213466, 0.382178681237357], "val_accuracy": [0.20499999821186066, 0.41466665267944336, 0.10066666454076767, 0.43933331966400146, 0.5613333582878113, 0.4983333349227905, 0.6323333382606506, 0.6859999895095825, 0.7356666922569275, 0.7286666631698608, 0.6886666417121887, 0.7369999885559082, 0.784333348274231, 0.7946666479110718, 0.7776666879653931, 0.7996666431427002, 0.7850000262260437, 0.7916666865348816, 0.7903333306312561, 0.8006666898727417, 0.8176666498184204, 0.828000009059906, 0.8149999976158142, 0.8309999704360962, 0.7850000262260437, 0.8286666870117188, 0.8259999752044678, 0.8379999995231628, 0.8426666855812073, 0.8106666803359985, 0.8166666626930237, 0.8399999737739563, 0.8413333296775818, 0.8386666774749756]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5], [77, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.7754285931587219, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.4349157321470414, 2.1528958800352007, 2.0288049658260263, 1.6876065887401541, 1.639980313516863, 1.822177029950287, 1.5411633231683635, 1.4656047107300754, 1.3223757233208417, 1.3656772542639084, 1.1610101308049212, 1.1006137849852835, 0.959393433489426, 0.9209526894886448, 0.8749728239506873, 0.9115008901154691, 0.8120075256486594, 0.8037882040299917, 0.7685036444786817, 0.7668074274721273, 0.7292909596054828, 0.6975778597472855, 0.68369469479988, 0.6446463100079768, 0.6639297079290492, 0.857728688054947], "accuracy": [0.17500990629196167, 0.23378682136535645, 0.313300758600235, 0.4476291239261627, 0.45291242003440857, 0.3619072735309601, 0.48910316824913025, 0.5071985125541687, 0.5498613119125366, 0.509840190410614, 0.5864483118057251, 0.6066569685935974, 0.6530181169509888, 0.6742834448814392, 0.6822084188461304, 0.6712455153465271, 0.7045304179191589, 0.7029454708099365, 0.7280412316322327, 0.7239466309547424, 0.7305507659912109, 0.741909921169281, 0.7433628439903259, 0.7465327978134155, 0.7368907928466797, 0.6913221478462219], "val_loss": [1.9536036082676478, 1.6835106440952845, 1.371788535799299, 1.160792521068028, 1.984109537942069, 1.1444525037493025, 1.0762825012207031, 0.9443982328687396, 1.124131713594709, 0.8011388948985508, 0.8569336788994926, 0.7168244974953788, 0.6989247458321708, 0.7358522585460118, 0.5646869455065046, 0.6097061293465751, 0.6494687625340053, 0.5564603124346051, 0.5182188919612339, 0.5463177817208427, 0.4811647960117885, 0.5072526591164725, 0.4891739913395473, 0.5267576490129743, 0.49993220397404264, 0.5485612835202899], "val_accuracy": [0.20333333313465118, 0.3086666762828827, 0.5289999842643738, 0.4873333275318146, 0.1483333259820938, 0.5613333582878113, 0.6150000095367432, 0.5893333554267883, 0.45633333921432495, 0.6556666493415833, 0.6616666913032532, 0.6653333306312561, 0.7093333601951599, 0.656000018119812, 0.7546666860580444, 0.7400000095367432, 0.7143333554267883, 0.7683333158493042, 0.7786666750907898, 0.7523333430290222, 0.7856666445732117, 0.7726666927337646, 0.7756666541099548, 0.7513333559036255, 0.7770000100135803, 0.7606666684150696]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5], [77, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.5451428294181824, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [10.639597848264406, 4.329278167968476, 2.300809917322727, 2.2996830129667503, 2.292718156201886, 2.291879963487477, 2.2589871688462866, 2.2255874502030597, 2.085201448878403, 2.1194212720725107, 1.9604393907148194, 4.463158300508361, 2.3900374207655988, 2.3004865425295282, 2.2939452390944117, 2.2798747308124185], "accuracy": [0.1574428677558899, 0.09919429570436478, 0.10672302544116974, 0.10672302544116974, 0.11108175665140152, 0.10394927859306335, 0.13129045069217682, 0.19204860925674438, 0.25756174325942993, 0.27460044622421265, 0.32082948088645935, 0.3261128067970276, 0.11068551242351532, 0.10196803510189056, 0.10896842926740646, 0.11610091477632523], "val_loss": [5.31264236995152, 1.9778929437909807, 1.9693018368312292, 1.9626306806291853, 1.9659555980137415, 1.95869779586792, 1.9319348335266113, 1.9286937032427107, 1.652981928416661, 1.8590761593409948, 1.2419178145272392, 2.5697838919503346, 1.9742038590567452, 1.969547952924456, 1.9609056881495885, 1.941512107849121], "val_accuracy": [0.09600000083446503, 0.10466666519641876, 0.11599999666213989, 0.11433333158493042, 0.11233333498239517, 0.11400000005960464, 0.20399999618530273, 0.14866666495800018, 0.3843333423137665, 0.19466666877269745, 0.5253333449363708, 0.13733333349227905, 0.1003333330154419, 0.10533333569765091, 0.10766666382551193, 0.1326666623353958]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [9, 0, 9, 7, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5], [77, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.2888571321964264, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.489440233983604, 2.317709878640105, 2.303789923172491, 2.2877788713752727, 2.252530502463691, 2.302831996748429, 2.288053479822572, 2.299969793106067, 2.3053741226453255], "accuracy": [0.15189538896083832, 0.09642054885625839, 0.0944393053650856, 0.13115836679935455, 0.13881917297840118, 0.09866596013307571, 0.13393211364746094, 0.18623696267604828, 0.09219389408826828], "val_loss": [1.9754435675484794, 1.9746208190917969, 1.971909863608224, 1.799720355442592, 1.9746593066624232, 1.9721016202654158, 1.8418049131120955, 1.9770821162632533, 1.9742564473833357], "val_accuracy": [0.10366666316986084, 0.10300000011920929, 0.09966666996479034, 0.31433331966400146, 0.09533333033323288, 0.10266666859388351, 0.16466666758060455, 0.09733333438634872, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 7, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5], [94, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.16028571128845215, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2949181052089416, 2.395057925427232, 2.3393270823272494, 2.482475381627484, 2.37154152663849, 2.368471145818829, 2.4003498033053208, 2.449958337690096], "accuracy": [0.1764628142118454, 0.1158367469906807, 0.148064985871315, 0.10659094154834747, 0.09787346422672272, 0.09932637959718704, 0.09430722147226334, 0.10236428678035736], "val_loss": [2.0546702657427107, 1.7751992089407784, 1.9816081183297294, 2.003890718732561, 2.0551862035478865, 2.0624777930123463, 2.1478448595319475, 2.0221963609967912], "val_accuracy": [0.10166666656732559, 0.18766666948795319, 0.19733333587646484, 0.10233332961797714, 0.09533333033323288, 0.10166666656732559, 0.10100000351667404, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 9, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5], [63, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.13771428167819977, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2955545196601226, 2.395889677375992, 2.415000842499648, 2.3781129116269466, 2.310811644610696, 2.3404489714849612, 2.3861420638273736], "accuracy": [0.1764628142118454, 0.11742173880338669, 0.1558578759431839, 0.11821424216032028, 0.11398758739233017, 0.10540219396352768, 0.09893012791872025], "val_loss": [2.0546984672546387, 1.8003205571855818, 2.002054827553885, 1.935080119541713, 2.037410395486014, 2.0489529200962613, 2.00044618334089], "val_accuracy": [0.10166666656732559, 0.17000000178813934, 0.10466666519641876, 0.14033333957195282, 0.09733333438634872, 0.10366666316986084, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [7, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 0, 3, 5], [77, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [5], [63], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 4, 3, 2, 4, 5, 5, 6, 4, 1, 8, 4, 0, 8, 8, 3, 2, 2, 9, 7, 7, 1, 0, 4, 0, 5, 1], [3, 0, 2, 1, 2, 1, 3, 3, 3, 1, 2, 3, 0, 0, 3, 2, 3], [67, 92, 98, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 44, 27, 17, 4], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(beta)), tf.math.divide_no_nan(tf.math.pow(alpha, beta), tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.negative(alpha), tf.math.sqrt(sigma))), tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(sigma, tf.math.add(alpha, beta))), tf.math.subtract(sigma, tf.math.negative(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.square(sigma)), tf.math.subtract(beta, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 9, 7, 1, 7, 2, 3, 2, 8, 2], [5, 0, 3, 5], [87, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.303386543184743, 2.3034160694252814, 2.3032392182008166, 2.303263812631333, 2.3031317556003583, 2.3033228851721947, 2.303265074917732, 2.303601821840967, 2.3032197469198126, 2.3033936039457674], "accuracy": [0.09166556596755981, 0.09153348207473755, 0.09325055778026581, 0.09549596905708313, 0.09536388516426086, 0.09272222965955734, 0.09694888442754745, 0.09417514503002167, 0.09734513610601425, 0.09813763201236725], "val_loss": [1.9739781788417272, 1.9737554277692522, 1.9737979343959264, 1.973550864628383, 1.973689011165074, 1.9736144883292062, 1.9737461635044642, 1.973808969770159, 1.9738034520830428, 1.9736499105181013], "val_accuracy": [0.09833333641290665, 0.09733333438634872, 0.09733333438634872, 0.09866666793823242, 0.10300000011920929, 0.10166666656732559, 0.10166666656732559, 0.09866666793823242, 0.09866666793823242, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 9, 7, 1, 7, 2, 3, 2, 8, 2, 8], [2, 2, 3, 5, 3, 1, 2, 5], [87, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 20, 20, 12, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.subtract(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [17.199676817245393, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12508255243301392, 0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [53060.658482142855, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10833333432674408, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [7, 1, 3, 0, 5], [2, 3, 0, 0], [64, 35], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [5, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [0, 0, 3, 5], [77, 14, 47, 41, 87, 41, 18], [0, 0, 0], [0, 1, 1], [3], [7, 4], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [1, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 2, 2, 1, 1, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.square(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10751552134752274, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [9, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [5, 0, 3, 5, 3, 0, 1, 1], [87, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [5], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [8, 1, 3, 0], [1, 3, 0, 0], [64, 35], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 0, 3, 5], [68, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 1, 7, 2, 3, 2, 8, 2, 1], [5, 0, 3, 5, 3, 0, 1, 1, 2, 3], [87, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.multiply(grad, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, beta)))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024407250927488, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [0, 3, 0, 0], [64, 35], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 9, 7, 1, 7, 2, 3, 2, 8, 2], [5, 0, 3, 5, 3, 0, 1, 1], [87, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3079120645181708, 2.3094991780448475, 2.306520750462466, 2.306071824432915, 2.3074660867417194, 2.3069732329628456, 2.3065164508978295, 2.3092444624174635], "accuracy": [0.10038304328918457, 0.09245806187391281, 0.09338264167308807, 0.10130762308835983, 0.09615638852119446, 0.10091137140989304, 0.10011887550354004, 0.09681680053472519], "val_loss": [1.9816370691571916, 1.9754883221217565, 1.9770231928144182, 1.9800323758806502, 1.975921290261405, 1.9775292532784599, 1.9784233229500907, 1.9771208763122559], "val_accuracy": [0.09866666793823242, 0.09733333438634872, 0.10366666316986084, 0.10233332961797714, 0.10300000011920929, 0.10166666656732559, 0.10300000011920929, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [0, 3, 0, 0], [64, 35], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 9, 7, 1, 7, 2, 3, 2, 8, 2, 8], [0, 0, 3, 5, 4, 1, 1, 5], [87, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024407250927488, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [7, 1, 3, 0, 0], [2, 3, 0, 0], [64, 35], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [8, 3, 9, 1, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5], [4, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.negative(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0], [7, 1, 3, 0, 8, 9], [2, 3, 0, 0], [64, 35], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5], [27, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3024407250927488, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 0, 3, 5], [77, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [5], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3, 0, 0], [64, 35], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 0, 9, 7, 1, 7, 2, 3, 2, 8, 2], [5, 0, 3, 5], [77, 14, 47, 41, 87, 41, 18], [1, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302112122316402, 2.302219806393266, 2.3029312666113415, 2.3015987390319923, 2.302899276512709, 2.3025081801675866], "accuracy": [0.09126931428909302, 0.0940430611371994, 0.09325055778026581, 0.0952318087220192, 0.09179764986038208, 0.08625016361474991], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [0, 3, 0, 0], [64, 35], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 9, 1, 1, 7, 2, 3, 2, 8, 2], [0, 0, 3, 5], [77, 79, 47, 41, 87, 41, 18], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [3, 3, 7, 2, 1, 1, 3, 5, 9, 5, 4], [1], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [67, 92, 9]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 3, 1, 2, 13, 6, 6, 0, 0, 9, 6, 3, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.302112122316402, 2.302219806393266, 2.3029312666113415, 2.3015987390319923, 2.302899276512709, 2.3025081801675866], "accuracy": [0.09126931428909302, 0.0940430611371994, 0.09325055778026581, 0.0952318087220192, 0.09179764986038208, 0.08625016361474991], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]