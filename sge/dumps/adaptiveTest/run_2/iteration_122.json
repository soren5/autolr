[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 4, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 1, 2, 0, 0, 2, 2, 1, 3, 2, 3], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.42742857336997986, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4704327623936417, 2.185159226324202, 2.549050228738388, 2.2968767158516865, 3.673015092704369, 2.3031911016408055, 2.3419249461484766, 2.304748415112448, 2.3034234656602353], "accuracy": [0.20274733006954193, 0.22163519263267517, 0.14463083446025848, 0.11147800832986832, 0.13551710546016693, 0.107647605240345, 0.12798838317394257, 0.09760929644107819, 0.10276053100824356], "val_loss": [1.9656452451433455, 1.928640501839774, 1.9744003840855189, 1.652423347745623, 1.9751736095973425, 1.9674333844866072, 1.9767084802900041, 1.974252496446882, 1.9736127853393555], "val_accuracy": [0.12733332812786102, 0.19200000166893005, 0.10233332961797714, 0.3970000147819519, 0.09700000286102295, 0.1106666699051857, 0.09833333641290665, 0.09833333641290665, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 8, 3, 2, 4, 4, 8, 1, 8, 4, 6, 1, 4, 2, 1, 0, 4, 3, 9, 7, 1, 2, 5, 6, 9, 3, 2], [1, 0, 2, 0, 0, 0, 2, 1, 3, 2, 3, 0, 1, 2, 0, 0, 0, 2, 0], [38, 32, 98, 69, 64, 69, 22, 34, 33, 82, 32], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.3531428575515747, "mapping_values": [1, 46, 46, 27, 19, 11, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), alpha)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.negative(grad)))))))))), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4693996967058203, 2.1673496497573317, 4.731254315127503, 2.3156657907012086, 2.3060120980753136, 2.3039536357099166, 2.3031941997597105], "accuracy": [0.20314356684684753, 0.21820102632045746, 0.17778365314006805, 0.09945846349000931, 0.09642054885625839, 0.09972262382507324, 0.09681680053472519], "val_loss": [1.9625098364693778, 1.7734767368861608, 1.9903443200247628, 1.9772645405360632, 1.9744930948529924, 1.9738029071262904, 1.9736202103751046], "val_accuracy": [0.14766666293144226, 0.3283333480358124, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.10266666859388351, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [3, 8, 3, 0, 3, 5, 8, 2, 8, 0, 6, 9, 4, 2, 2, 0], [1, 0, 2, 0, 0, 2, 2, 1, 1, 2], [80, 32, 98, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.33571428060531616, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.470417851265537, 2.2651991196091874, 2.2663435972188806, 2.0480251329575925, 2.393478291303317, 2.287148547761429, 2.301027995247993], "accuracy": [0.2020869106054306, 0.21899352967739105, 0.16299036145210266, 0.26363757252693176, 0.16272619366645813, 0.10976093262434006, 0.10791176557540894], "val_loss": [1.9664463315691267, 1.8031347819737025, 1.7653945514133997, 1.89622163772583, 1.963121005467006, 1.97544527053833, 1.9259823390415736], "val_accuracy": [0.12300000339746475, 0.3306666612625122, 0.26866665482521057, 0.125, 0.15199999511241913, 0.0976666659116745, 0.33000001311302185]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 8, 9, 5, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [80, 32, 98, 30, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.3257142901420593, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.470384344118083, 2.1764142816848664, 2.223681878955404, 2.1551872359101862, 2.31507288431841, 2.3056756735572317, 2.304195191992146], "accuracy": [0.20314356684684753, 0.22863557934761047, 0.22678641974925995, 0.2436930388212204, 0.10011887550354004, 0.09985470771789551, 0.09853387624025345], "val_loss": [1.9673810005187988, 1.686973708016532, 1.9777139254978724, 1.9960158893040247, 1.976808820452009, 1.9739529064723425, 1.9726357460021973], "val_accuracy": [0.11766666918992996, 0.2750000059604645, 0.09700000286102295, 0.10466666519641876, 0.09833333641290665, 0.09833333641290665, 0.19300000369548798]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [4, 8, 3, 5, 2, 4, 8, 2, 8, 4, 6, 2, 4, 2, 2, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [80, 32, 55, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.26171427965164185, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4704540588631843, 2.183473705033018, 5.657746804215574, 2.3115775315926266, 2.3056386242358755, 2.303585589790168, 2.297388892525837], "accuracy": [0.20274733006954193, 0.22335226833820343, 0.13393211364746094, 0.09734513610601425, 0.09087307006120682, 0.09285431355237961, 0.11332716792821884], "val_loss": [1.967902524130685, 1.7941195624215263, 1.9851130076817103, 1.9768657684326172, 1.9736426217215401, 1.971944877079555, 1.9362444196428572], "val_accuracy": [0.1236666664481163, 0.23533333837985992, 0.10266666859388351, 0.10266666859388351, 0.09700000286102295, 0.10266666859388351, 0.140666663646698]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 1, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.25057142972946167, "mapping_values": [1, 13, 13, 8, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4702043149764465, 2.192394463582329, 2.8771061848151827, 2.248096555310029, 2.305602655781101, 2.3040960485972057, 2.3031840158444132], "accuracy": [0.20274733006954193, 0.20604939758777618, 0.15321621298789978, 0.1838594675064087, 0.1026284471154213, 0.09840179979801178, 0.09787346422672272], "val_loss": [1.9652132306780135, 1.9429512023925781, 1.907071794782366, 1.9775402205330985, 1.974409784589495, 1.9736031804765974, 1.972919123513358], "val_accuracy": [0.1326666623353958, 0.19300000369548798, 0.1756666600704193, 0.09833333641290665, 0.09866666793823242, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [9, 1, 1, 0, 8, 3, 1, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 2, 2, 0, 0, 2, 1, 1, 3, 2], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.24771428108215332, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4704349880221024, 2.20278247113493, 2.434358586126299, 2.3089134618197105, 2.30777058760724, 2.303800339932455], "accuracy": [0.20261524617671967, 0.22691850364208221, 0.09866596013307571, 0.11517632752656937, 0.09879804402589798, 0.09959053993225098], "val_loss": [1.9653335298810686, 2.4849274499075755, 1.9747202736990792, 1.9813530104500907, 1.9750501087733678, 1.9739505222865514], "val_accuracy": [0.12866666913032532, 0.09833333641290665, 0.0976666659116745, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 8, 9, 5, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [1, 1, 2, 0, 0, 2, 1, 2, 1, 2, 3, 3, 0, 3], [26, 13, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.22142857313156128, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4693597259932125, 2.186671704223143, 2.2910009513772347, 2.2184032586114975, 2.0619553547525262, 1.698384731389969, 2.219872155225414, 2.312123477262135, 2.3065837085868988, 2.3049066894956, 2.3032563381411726], "accuracy": [0.2032756507396698, 0.2114647924900055, 0.20155857503414154, 0.1608770340681076, 0.2541275918483734, 0.41143837571144104, 0.25161802768707275, 0.09602430462837219, 0.09377889335155487, 0.09126931428909302, 0.10302469879388809], "val_loss": [1.9647245407104492, 1.9764652252197266, 2.016399247305734, 1.503544875553676, 1.4081880705697196, 1.25819274357387, 1.9850982938494002, 1.974823066166469, 1.9740236146109444, 1.973912034715925, 1.9737797464643205], "val_accuracy": [0.15299999713897705, 0.10066666454076767, 0.020666666328907013, 0.33399999141693115, 0.47433334589004517, 0.515999972820282, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.09700000286102295, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 1, 0, 8, 8, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [80, 32, 98, 30, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.11428571492433548, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.470482938907811, 2.202279505744161, 2.29081580443956, 3.1509859672138765, 2.2395109648024953, 2.2274900448556902, 2.3044678539159733, 2.3038163387606945, 2.303686954814209, 2.303636037221658], "accuracy": [0.2028794139623642, 0.21621978282928467, 0.15849953889846802, 0.12429005652666092, 0.17712323367595673, 0.14793290197849274, 0.10170386731624603, 0.09959053993225098, 0.09879804402589798, 0.09655263274908066], "val_loss": [1.9669901302882604, 1.8220930099487305, 1.8279531342642648, 1.9684581756591797, 1.5992964335850306, 1.9727589062282018, 1.974086080278669, 1.9737752505711146, 1.9736595153808594, 1.9737529754638672], "val_accuracy": [0.11599999666213989, 0.2290000021457672, 0.22433333098888397, 0.15066666901111603, 0.34566667675971985, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10266666859388351, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [9, 1, 1, 2, 1, 4, 2, 8, 5, 4, 6, 4, 6, 5, 7, 3, 8, 0, 3, 4, 7, 8, 0, 9, 4, 3, 1, 9, 8], [1, 0, 2, 0, 2, 2, 0, 1, 3, 2, 1, 1, 2, 0, 0, 2, 3, 0, 1, 1], [80, 28, 98, 69, 64, 69, 22, 81], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [50782718971.47746, 7631503977601.708, 131069345468154.69, 924391500611540.8, 4065504656109849.0, 1.3414386609839044e+16], "accuracy": [0.1006472036242485, 0.10355303436517715, 0.1002509593963623, 0.09985470771789551, 0.10130762308835983, 0.10038304328918457], "val_loss": [411308617142.8571, 22172679986029.715, 237996553011200.0, 1297335482206500.5, 4859562682070747.0, 1.4335550714544128e+16], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [8, 8, 3, 5, 2, 4, 8, 2, 8, 4, 6, 9, 4, 3, 2, 2], [1, 0, 2, 0, 0, 2, 2, 1, 1, 0, 2], [39, 26, 79, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [3, 8, 9, 5, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [2, 0, 2, 0, 0, 2, 2, 2, 1, 2, 3, 1, 0, 1, 3, 0, 3, 2, 1, 2, 0], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [3, 7, 4, 1], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 9, 7, 4, 3, 0, 9, 6, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 9, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3027572729143215, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 9, 1, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 2, 2, 2, 1, 1, 3, 2], [52, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 8, 9, 5, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [1, 0, 2, 0, 0, 2, 2, 2, 1, 2, 3, 1, 0, 1, 3, 0, 3, 2, 1, 2, 0], [80, 32, 98, 30, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08519349992275238, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 1, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [92, 32, 10, 69, 46, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [3, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 4, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027572729143215, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 9, 5, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [3, 1, 2, 0, 0, 2, 1, 2, 1, 2, 3, 3, 0, 3], [80, 32, 98, 30, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.0820000022649765, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.470126929961459, 2.132192961528175, 3.4796377961598743, 2.2983849646314227, 2.3016828602614607, 2.3043228255727777, 2.3034051318037005, 2.3031666357881595, 2.3029904439858377], "accuracy": [0.2024831622838974, 0.2475234419107437, 0.11530841141939163, 0.11781799048185349, 0.12600713968276978, 0.09787346422672272, 0.09681680053472519, 0.10157178342342377, 0.1010434553027153], "val_loss": [1.964630467551095, 6.950294494628906, 1.9752090999058314, 1.89849819455828, 1.9748941830226354, 1.973900658743722, 1.9736386026654924, 1.9734745025634766, 1.9719273022242956], "val_accuracy": [0.12800000607967377, 0.19433332979679108, 0.10233332961797714, 0.2633333206176758, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10300000011920929, 0.18433333933353424]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 1, 1, 0, 8, 1, 2, 0, 8, 6, 6, 2, 0, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [80, 32, 98, 30, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3012320333389384, 2.3033520985178706, 2.303176072515816, 2.302671950459559, 2.301673496215099, 2.3021406509211477], "accuracy": [0.09192973375320435, 0.08638224750757217, 0.08585391938686371, 0.0886276587843895, 0.09721305221319199, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 4, 3, 5, 2, 4, 8, 1, 8, 4, 6, 9, 4, 2, 2, 0], [1, 0, 2, 0, 0, 2, 2, 0, 1, 2], [80, 32, 98, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [1, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3012320333389384, 2.3033520985178706, 2.303176072515816, 2.302671950459559, 2.301673496215099, 2.3021406509211477], "accuracy": [0.09192973375320435, 0.08638224750757217, 0.08585391938686371, 0.0886276587843895, 0.09721305221319199, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [2, 1, 1, 4, 2, 4, 2, 3, 2, 5, 6, 9, 6, 3, 6, 3, 6, 0, 3, 2, 7, 8, 0, 9, 4, 3, 1, 9, 1, 0, 7, 5, 1, 4, 9, 4, 1, 7, 0, 4], [1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 3, 1, 1, 1, 3, 0, 3, 2, 1, 2, 1, 0, 2, 1, 3, 3, 2], [80, 32, 98, 69, 64, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [3, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 49, 49, 29, 20, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, grad))))))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(alpha))))), alpha), grad))), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3012320333389384, 2.3033520985178706, 2.303176072515816, 2.302671950459559, 2.301673496215099, 2.3021406509211477], "accuracy": [0.09192973375320435, 0.08638224750757217, 0.08585391938686371, 0.0886276587843895, 0.09721305221319199, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]