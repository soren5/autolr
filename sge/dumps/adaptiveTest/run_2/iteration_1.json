[{"genotype": [[0], [0, 0], [0, 1], [0], [2], [56], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [7, 2, 4, 1, 5, 1, 4, 2, 8, 3, 8, 0, 4, 5, 0, 2, 0, 0, 9], [2, 3, 1, 5, 4, 5, 0, 3, 0, 0, 1], [16, 56, 75, 94], [0, 0, 1], [1], [], [1], [], [1], [], [1], []], "fitness": -0.2199999988079071, "mapping_values": [1, 2, 2, 1, 1, 0, 29, 29, 19, 10, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.pow(grad, alpha), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.square(tf.math.negative(grad)), grad))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.0572621686315933, 8.244074082818596, 2.983554695355122, 2.592661576264129, 2.605971069635732, 2.8601018254783064, 2.639646823364336], "accuracy": [0.1686699241399765, 0.12798838317394257, 0.108440101146698, 0.09694888442754745, 0.09787346422672272, 0.1018359512090683, 0.09998679161071777], "val_loss": [2.134483746119908, 2.1546357699802945, 2.129465307508196, 2.345439842769078, 2.441439628601074, 2.239128521510533, 2.302305289677211], "val_accuracy": [0.12866666913032532, 0.17266666889190674, 0.09533333033323288, 0.09733333438634872, 0.10300000011920929, 0.09533333033323288, 0.09733333438634872]}}, {"genotype": [[0], [1, 1], [0, 1], [0], [2], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [7, 1, 6, 7, 9], [0, 4, 1, 5], [45], [1], [], [], [1], [], [1], [], [1], [41]], "fitness": -0.2014285773038864, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.057212995768003, 13.453932003401148, 3.732726209277978, 3.203875251213762, NaN, NaN, NaN, NaN], "accuracy": [0.16893409192562103, 0.1150442510843277, 0.10579843819141388, 0.10791176557540894, 0.09760929644107819, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9820060729980469, 8.493491853986468, 2.024099690573556, 2.639296191079276, NaN, NaN, NaN, NaN], "val_accuracy": [0.13966666162014008, 0.13766667246818542, 0.14366666972637177, 0.1316666603088379, 0.0976666659116745, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0], [7, 1, 6, 7, 9], [0, 3, 1, 5], [16, 56], [0], [1], [], [1], [], [1], [], [1], []], "fitness": -0.17028571665287018, "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.056894467097736, 12.57593271694856, 3.092034412334151, 7353525.863655276, NaN, NaN], "accuracy": [0.1686699241399765, 0.11411966383457184, 0.09853387624025345, 0.10738343745470047, 0.09800554811954498, 0.09998679161071777], "val_loss": [2.0968080248151506, 2.621652671269008, 82.90990556989398, 1.865352443795761e+21, NaN, NaN], "val_accuracy": [0.1459999978542328, 0.09733333438634872, 0.09933333098888397, 0.08266666531562805, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [1], [], [0, 0, 0], [0, 1, 1], [6], [0, 0], [28, 38], [1, 1, 0], [1, 0], [3], [7], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 6, 7, 8], [1, 0, 2, 1, 2], [93]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), beta)), tf.math.sqrt(alpha))", "other_info": {"loss": [2.302752958643375, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1], [0], [3], [], [0], [0], [9], [3], [21], [1], [0, 0], [3, 7], [], [], [0, 1, 0], [9, 0], [3], [54, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302752958643375, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [6, 6, 8, 2, 3, 3, 3, 5, 6, 0, 1, 9], [3, 2, 2, 3, 2, 3, 1, 2, 2], [17], [0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0], [7, 1, 6, 9, 9], [1, 2, 2, 1], [90], [0, 0], [0, 1], [5], [1], [], [0, 0, 1, 0, 1, 0, 0, 0, 1], [2, 0, 4, 8, 2, 9], [1, 2, 3], [61]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 9, 6, 3, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), alpha))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(alpha), tf.math.pow(beta, tf.math.sqrt(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0], [0, 1, 0, 1], [2, 5], [3, 2], [], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [7, 1, 6, 7, 9, 7, 4, 1, 9], [0, 3, 1, 5, 4, 2], [16, 8, 38], [0], [1], [], [1], [], [1], [], [1], []], "fitness": -0.10000000149011612, "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 4, 4, 2, 2, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [2, 9], [3], [31], [1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 1, 6, 2, 6], [1, 3, 1, 5, 5], [16, 56], [0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0], [3, 7, 0, 7], [1], [], [0, 1, 0, 1, 1], [3, 7], [0, 3, 1], [54, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 8, 4, 4, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, sigma)))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1], [0, 1], [0], [2], [], [1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0], [7, 6, 6, 8, 9], [0, 2, 1, 5], [16, 56], [0], [1], [], [1], [], [0, 1], [0], [0], [7]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4037507394080966, 3.547559271588097, 6.4241939914256445, 11.266179837539385, 17.840145690518913, 26.102335028597363, 37.29619085664337], "accuracy": [0.09694888442754745, 0.09800554811954498, 0.1006472036242485, 0.09734513610601425, 0.09721305221319199, 0.10077928751707077, 0.09655263274908066], "val_loss": [2.1925856045314243, 3.386312280382429, 5.832511765616281, 9.442837306431361, 14.272303444998604, 20.43190438406808, 28.046324048723495], "val_accuracy": [0.09399999678134918, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0], [1], [0], [2], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [1], [], [0], [28], [0, 1], [0], [0], [6], [], [0, 1, 1], [4], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0], [1], [0], [2], [], [1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0], [8], [0, 3, 1, 5], [66], [0], [1], [], [1], [], [1], [], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1], [0, 1], [8], [2], [56], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1], [5], [5], [], [0, 0, 1, 0], [0, 0, 1], [6, 5], [4], [], [0, 1, 0, 0, 1, 1], [6, 8, 3], [1, 3, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 4, 3, 2, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2, 2], [], [1, 1, 1], [0, 1, 1], [2], [1, 2], [86, 14], [1], [], [], [], [], [0, 1, 0], [1, 9], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [333334.8972195011, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.175670325756073, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4178461514605.7144, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06700000166893005, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [4], [0, 1], [36], [0, 1], [1], [], [3], [], [0], [1], [], [6], [], [1], [], [2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [3, 0, 2, 4, 5, 5, 5], [1, 1, 2, 2], [], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1], [7, 2, 4, 1, 6, 1, 3, 2, 8, 3, 8, 0, 4, 8, 0, 2, 0, 0, 9], [1, 5], [86, 14], [1], [0, 1], [6], [], [], [1, 0, 1, 0, 1, 1, 0, 1, 1], [7, 9], [1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.square(grad)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [1], [1, 0], [7], [0, 0, 0, 1], [1], [], [1], [], [1], [], [], [], [], [1], [], [0], [36]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302752958643375, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1], [1], [], [2], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [7, 2, 0, 2, 8, 7, 5, 6], [0, 5, 2, 0, 3, 4], [46, 63], [0], [1], [], [6], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [7, 7, 5, 2, 1, 5, 9, 0], [3, 2, 2, 0, 3], [51, 64, 76]], "fitness": -0.10000000149011612, "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, beta))))))), tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(sigma, tf.math.square(tf.math.add(tf.math.subtract(tf.math.square(beta), beta), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [151.5976671300245, 1191.8012939259645, 2385.960025269893, 3579.617910280078, 4773.370345946395, 5969.181453271013], "accuracy": [0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [596.9054827008929, 1615.79833984375, 2634.9949776785716, 3654.5888671875, 4673.935965401785, 5693.103655133928], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 11, 7, 4, 2]}, {"genotype": [[0], [1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [8], [3, 0, 1, 2, 3, 2, 1, 2, 1], [80], [1], [1], [], [1], [], [1], [], [5], [1], [], [0, 1], [5, 6, 5], [0], [66, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302752958643375, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0], [9], [0, 3, 1, 5], [45], [1], [1], [], [], [], [1, 1, 0], [1, 9], [1], [46]], "fitness": -0.055142857134342194, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1683.4985663290934, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1674811840057373, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [559409462.8571428, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [1], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0], [8, 1, 6, 5, 9], [0, 3, 1, 5], [16, 56], [0], [1], [], [1], [], [1], [], [1], []], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302770218309426, 2.3040904104434077, 2.3035327989537686, 2.3037415998423842, 2.3020229006424526, 2.302528933259427], "accuracy": [0.09391097724437714, 0.09285431355237961, 0.08360850811004639, 0.08651433140039444, 0.09219389408826828, 0.08717474341392517], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]