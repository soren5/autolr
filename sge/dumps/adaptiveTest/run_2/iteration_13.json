[{"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.19114285707473755, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.946866535727909, 2.470368862813411, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1810857206583023, 0.11570466309785843, 0.11002509295940399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0728979791913713, 7.263966151646206, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.1913333386182785, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0], [2, 3, 0, 0], [11, 37], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 3, 9, 6, 6, 0], [2, 2, 0, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 1, 0], [1], [2, 8, 6], [1, 6], [], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [5, 0, 3, 2, 4, 8, 5], [3, 0, 0, 1, 2], [53, 44]], "fitness": -0.10599999874830246, "mapping_values": [1, 3, 3, 2, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, beta))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.square(sigma)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)))", "other_info": {"loss": [2.3012916112793214, 2.2995042754296597, 2.3011380058505737, 2.3010634529497707, 2.302172461331969, 2.3026403173747205, 2.3033961709369803, 2.3092046301394187, 2.449459272242808, 4.71269391250963, 17.177744229928518, 58.98574400521257, 159.12821937674906], "accuracy": [0.09655263274908066, 0.10328886657953262, 0.0820235088467598, 0.0940430611371994, 0.10857218503952026, 0.09893012791872025, 0.09060890227556229, 0.12032756209373474, 0.09615638852119446, 0.09932637959718704, 0.09391097724437714, 0.10157178342342377, 0.09893012791872025], "val_loss": [1.9694899831499373, 1.9713773727416992, 1.9719631331307548, 1.9729862894330705, 1.9738100596836634, 1.97435120173863, 1.9761267389569963, 1.9962609836033411, 2.578580243246896, 8.127241952078682, 31.091524396623885, 92.34126281738281, 223.6216081891741], "val_accuracy": [0.05766666680574417, 0.0573333315551281, 0.054666668176651, 0.11666666716337204, 0.08633333444595337, 0.04833333194255829, 0.0846666693687439, 0.1446666717529297, 0.09733333438634872, 0.09533333033323288, 0.10166666656732559, 0.10366666316986084, 0.09733333438634872]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2, 3], [], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [6, 5, 9, 3, 3], [4, 2, 1, 5], [86, 14], [1], [0, 0, 0], [1], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 6, 6, 1, 5, 3, 6, 1, 4, 2, 0, 8], [0, 0, 0, 3, 2, 2, 1, 2, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303156043812111, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1], [4, 9, 5, 3], [0, 0, 0, 2, 2], [94, 81, 75], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1], [2, 3, 9], [3, 2, 1, 5], [35, 14], [0, 0, 0, 1], [1], [3], [2], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, grad), beta), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0], [7, 1, 3, 0], [0, 3, 0, 0], [31], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1], [2, 4, 3, 3], [0, 2, 2, 1, 3, 0, 4, 4], [86, 14], [0, 0, 1, 1], [0, 1, 1], [2, 8], [2, 5], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2, 2, 1, 1], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [48909507448.44206, 7684656074620.534, 130794276787135.22, 941456485660584.1, 4058873674836371.0, 1.3415152805682306e+16], "accuracy": [0.1014397069811821, 0.09853387624025345, 0.09959053993225098, 0.09826971590518951, 0.09893012791872025, 0.09840179979801178], "val_loss": [432975811145.1429, 23341540835328.0, 250537608254025.16, 1365736862927140.5, 5115667593747310.0, 1.5092430712714972e+16], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 3], [64, 35], [0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1], [2, 4, 1], [0, 2, 2, 5, 3, 0, 4, 4], [85, 14], [0, 0, 0, 1], [0, 1, 0], [2, 8], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 3, 1, 2], [12, 92, 0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 4, 3, 2, 1, 0, 9, 6, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1], [2, 4, 1], [4, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [35, 14], [0, 0, 0, 1], [1, 1], [3], [5], [78], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [2, 0, 0, 2, 3], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.710455621572045e+18, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12508255243301392, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [7, 1, 3, 0], [0, 2, 2, 0], [64, 35], [0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0], [6, 3, 9], [2, 2, 2, 5, 3, 0, 4, 4], [32, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), beta), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [174500131.9237759, 2871205885.2949414, 12647038992.771364, 34785527319.19588, 72685365196.33337, 132640300479.28146], "accuracy": [0.10130762308835983, 0.09853387624025345, 0.09959053993225098, 0.09826971590518951, 0.09906221181154251, 0.09826971590518951], "val_loss": [509588626.28571427, 4074144182.857143, 13747334290.285715, 32582894738.285713, 63634311460.57143, 109955668845.71428], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 3, 3, 6], [0, 0, 0, 2, 2], [60, 45, 58], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 0, 5], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1], [2, 4, 1], [0, 2, 2, 5, 3, 0, 4, 4], [85, 14], [0, 0, 0, 1], [1], [3], [5], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031626569281607, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [2, 1, 3, 9, 4, 9], [2, 3, 3, 0, 2], [31, 69], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4, 7, 2, 8], [1, 2, 1, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [2, 8], [1], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 5, 5, 9], [2, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.square(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 1, 9, 3], [3, 2, 2, 2, 1], [64, 1, 4], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1], [2, 1, 0], [2, 2, 2, 5, 3, 0, 4, 4], [35, 14], [0, 0, 0, 1], [1], [3], [2], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 0, 3, 2, 4, 8, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, beta), tf.math.negative(beta)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 8], [0, 2, 0, 0, 3, 3, 0], [67, 35], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1, 1], [8, 1], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [5, 4, 3, 1, 6, 3, 5], [2, 0, 2, 1, 2, 3], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 7, 6, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta), alpha)), tf.math.square(beta)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [3, 2, 2, 0, 1], [64, 35], [1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1], [2, 4, 3], [5, 1, 0, 5, 2], [86, 14], [1, 0, 0, 1], [0], [8, 1], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [2, 0, 0, 2, 3], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.multiply(beta, tf.math.pow(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta), sigma))", "other_info": {"loss": [2.303156043812111, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0], [7, 1, 3, 0], [2, 2, 2, 0], [64, 35], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 7, 2, 8], [0, 2, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [2, 8, 2], [1, 6], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 6, 6, 3, 5, 3, 6, 2, 4, 8, 0, 8], [3, 0, 2, 1, 2, 2, 0, 0], [12, 92, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 4, 3, 2, 1, 0, 16, 8, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(sigma, tf.math.square(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta))), alpha), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 8], [2, 3], [94, 81, 59], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 7, 2, 8], [3, 2, 1, 5], [35, 14], [1, 0, 0], [1, 1, 1], [3], [1, 6], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1], [2, 4, 1], [0, 0, 2, 5, 3, 0, 4, 4], [85, 14], [0, 0, 0, 1], [1], [3], [5], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031626569281607, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [31], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1], [2, 4, 7, 2, 8], [0, 2, 0, 5, 2], [86, 14], [0, 0, 0, 1], [1], [3], [1, 6], [], [1, 0, 0], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [31941915622.19918, 4.306074688670645e+17, 1.623813497018469e+25, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.10421344637870789, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [2, 2, 2, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1], [2, 4, 3], [0, 2, 2, 1, 3, 0, 4, 4], [35, 14], [0, 0, 0, 1, 0], [0, 0, 0, 1], [3, 5, 5], [1], [78], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 0, 2, 3], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 3, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(sigma)))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031626569281607, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [31], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1], [2, 3, 9, 6, 6, 0], [0, 1, 0, 5, 2], [86, 14], [1, 0, 0, 1], [1], [2, 8], [1, 5], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [1, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]