[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3], [2, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5, 1], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.3257142901420593, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5985605417855457, 2.308364487059632, 2.7207182099900744, 2.3061854582043244, 2.303498811788563, 2.303086745567357, 2.3029943528412797], "accuracy": [0.2164839506149292, 0.12402588874101639, 0.23286223411560059, 0.10077928751707077, 0.09417514503002167, 0.09206181764602661, 0.09298639744520187], "val_loss": [1.9951110567365373, 1.9337964057922363, 1.9774178096226283, 1.9738963672092982, 1.9734817913600378, 1.973623480115618, 1.973588330405099], "val_accuracy": [0.09733333438634872, 0.2906666696071625, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.09866666793823242, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 3, 0, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 4, 9, 1, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.31542858481407166, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.429779151899625, 2.1661007922669726, 2.183545970519961, 2.312835104855029, 2.303936393867788, 2.3038401289733175], "accuracy": [0.21212521195411682, 0.23563598096370697, 0.22137102484703064, 0.09813763201236725, 0.0956280529499054, 0.09694888442754745], "val_loss": [1.4874754633222307, 1.706956045968192, 1.9931139945983887, 1.975343908582415, 1.9738208225795202, 1.9736111504690987], "val_accuracy": [0.3713333308696747, 0.2553333342075348, 0.09533333033323288, 0.09733333438634872, 0.10300000011920929, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [2, 2, 2, 0], [64, 35], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3], [2, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [9, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.3051428496837616, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.429700749157568, 2.2571631332886706, 2.2816357601902912, 2.3483136176370185, 2.305413440422942, 2.3030909425972035], "accuracy": [0.21212521195411682, 0.2242768406867981, 0.13842293620109558, 0.15136705338954926, 0.09496764093637466, 0.1006472036242485], "val_loss": [1.523679290499006, 1.976198605128697, 1.975421564919608, 1.9789138521466936, 1.9740368979317802, 1.9725963047572546], "val_accuracy": [0.35866665840148926, 0.14033333957195282, 0.10233332961797714, 0.09733333438634872, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [0, 2, 2, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3], [2, 4, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3, 5], [1], [63], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 4, 2, 2, 9, 5, 5, 1], [2, 2, 0, 1, 2], [67, 95, 30]], "fitness": -0.24142856895923615, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.419616008179614, 2.8802569020835245, 3.4556323422290993, 4.39718916160776, 6.950439513335847, 7362241.790601289], "accuracy": [0.17250032722949982, 0.14000792801380157, 0.12481838464736938, 0.12230881303548813, 0.10553427785634995, 0.09576013684272766], "val_loss": [2.2200104849679128, 2.5780211857386996, 3.170280865260533, 4.164488792419434, 8.96432249886649, 664482846081024.0], "val_accuracy": [0.24033333361148834, 0.21899999678134918, 0.14766666293144226, 0.10899999737739563, 0.10333333164453506, 0.09533333033323288]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [0, 8], [3, 2, 2, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1], [2, 4, 3, 3, 8, 6, 8], [2, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [1, 6], [63], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [5, 5, 3, 7, 9, 5, 5], [2, 0, 0, 1, 2], [67, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, beta), beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3, 1, 3, 6, 8], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1], [3, 3], [1, 7], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [1, 0, 0, 2, 3], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, beta), beta)), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(grad), grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [5, 14], [0, 0, 0, 1], [1, 0, 0], [6], [7, 6], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [5, 8], [0, 2, 2, 0], [64, 35], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5, 1], [1, 0, 0, 2, 3], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, beta)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1068548472.3888751, 20413608895.754852, 93976456269.77045, 264069712529.05878, 568638718568.7534, 1046198845470.2966], "accuracy": [0.10408136248588562, 0.09694888442754745, 0.1014397069811821, 0.09998679161071777, 0.09694888442754745, 0.1018359512090683], "val_loss": [4074144182.857143, 32582894738.285713, 109955668845.71428, 260621196141.7143, 509012644425.1429, 879562457088.0], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [0, 8], [3, 2, 2, 0], [64, 35], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [86, 14], [1, 0, 0], [1, 0, 0], [6], [6, 6], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302794999166833, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [9, 4, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14], [0, 0, 0, 1], [1], [3], [1], [63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [5, 8, 3, 9, 9, 5, 5], [2, 1, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.302794999166833, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0, 0], [0, 2, 2, 0], [64, 35], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [4, 4, 9, 1, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 3, 0, 4, 4, 1, 1, 1], [35, 14, 47, 41, 87, 41, 18], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0], [3, 3, 4, 8], [1], [63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 4, 7, 2, 9, 5, 5], [1, 0, 2, 1, 2], [67, 92, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302794999166833, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3], [2, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5, 1], [2, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, beta))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 1, 3, 0, 2, 2, 9, 3, 3, 0, 3, 2, 8, 8, 5, 3, 8, 5, 6, 4, 3, 4, 2, 6, 5, 7, 1, 2, 8, 1, 1, 1, 2, 4, 4, 6, 0, 1, 9, 9, 0, 8, 7], [3, 2, 2, 0, 3, 3, 3, 0, 2, 3, 0, 0, 2, 0, 2, 2, 0, 2, 1, 2, 3, 0, 3, 1, 2, 0], [64, 35, 58, 38, 15, 49, 10, 50, 22, 99, 93], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [3, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [86, 14], [1, 0, 0], [1], [6], [1], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [1, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 69, 69, 43, 26, 11, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, grad))), tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(grad))))))))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 2, 4, 4, 1, 1, 1], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [0], [27], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1635.642483709857, 28883.234341463314, 130545.13298689076, 364046.8582749967, 780739.0693270374, 1432789.4691091005], "accuracy": [0.10394927859306335, 0.09694888442754745, 0.1014397069811821, 0.09985470771789551, 0.09694888442754745, 0.1018359512090683], "val_loss": [5918.519112723215, 45550.19196428572, 152001.5, 358366.91071428574, 697742.1428571428, 1203222.8214285714], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [5, 8], [3, 3, 0, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3, 3], [5], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [1, 0, 0, 2, 3], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 0, 9], [3, 3, 0, 0], [64, 35], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [9, 4, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5], [35, 14], [0, 0, 0], [1], [3], [0], [63], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 9, 6, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.302794999166833, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [0, 8], [3, 2, 2, 0], [64, 35], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 1, 8, 4, 1], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [86, 14], [1, 0, 0, 1], [1, 0, 0], [6], [7, 6], [27], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3016535127010203, 2.3025250215068107, 2.301984873556143, 2.302464030469492, 2.3034408187601687, 2.3026352824630707], "accuracy": [0.09074098616838455, 0.09311848133802414, 0.09642054885625839, 0.09087307006120682, 0.09259014576673508, 0.08955223858356476], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 0, 9], [3, 2, 2, 0], [64, 35], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1], [9, 4, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [86, 14], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1], [3, 8], [0, 2], [63], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [7, 8, 3, 9, 9, 5, 5], [3, 1, 2, 1, 2], [67, 42]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3016535127010203, 2.3025250215068107, 2.301984873556143, 2.302464030469492, 2.3034408187601687, 2.3026352824630707], "accuracy": [0.09074098616838455, 0.09311848133802414, 0.09642054885625839, 0.09087307006120682, 0.09259014576673508, 0.08955223858356476], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 0, 9], [3, 2, 2, 0], [64, 35], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1], [2, 4, 3], [0, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14], [1, 0, 0, 1], [1], [3], [4], [63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [5, 8, 3, 9, 9, 5, 5], [3, 1, 2, 1, 2], [67, 92]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3016535127010203, 2.3025250215068107, 2.301984873556143, 2.302464030469492, 2.3034408187601687, 2.3026352824630707], "accuracy": [0.09074098616838455, 0.09311848133802414, 0.09642054885625839, 0.09087307006120682, 0.09259014576673508, 0.08955223858356476], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 1, 3, 0, 0, 0], [3, 2, 2, 0], [9, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [4, 2, 1, 5], [35, 14], [0, 0, 0, 1], [1, 0, 1], [3, 0, 2, 7, 0, 3], [1, 6], [], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [5, 4, 0, 1, 6, 5, 5], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.03142857179045677, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.negative(grad))), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3017461697942845, 2.3029597228811935, 2.3027568181208835, 2.3034910292531583, 2.3044644158514123, 2.3039788484982746, 2.3049036794885938, 2.3050573077168464, 2.3045372761409078, 2.3047248155465136, 2.3045260529901688, 2.3060261005927636, 2.30466172975745], "accuracy": [0.09179764986038208, 0.09034473448991776, 0.09509972482919693, 0.0882314071059227, 0.08519349992275238, 0.09034473448991776, 0.08691058307886124, 0.08308017253875732, 0.08387266844511032, 0.08651433140039444, 0.08255184441804886, 0.07607977837324142, 0.08096684515476227], "val_loss": [1.9717951502118791, 1.972242832183838, 1.9726430347987585, 1.9730680329459054, 1.9733191898890905, 1.9735877173287528, 1.9737739562988281, 1.973846708025251, 1.9739240918840681, 1.9740560395377023, 1.974254880632673, 1.9744653701782227, 1.9746546064104353], "val_accuracy": [0.038333334028720856, 0.03500000014901161, 0.03766666725277901, 0.03966666758060455, 0.03866666555404663, 0.0403333343565464, 0.0403333343565464, 0.041333332657814026, 0.04100000113248825, 0.039000000804662704, 0.03799999877810478, 0.04066666588187218, 0.04066666588187218]}}]