[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 3, 2, 8, 3, 5, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 2, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 1, 3, 2, 1, 1, 1, 0, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [7, 88, 7, 40, 35, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.6520000100135803, "mapping_values": [1, 64, 64, 39, 25, 5, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 79, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))))))))), alpha)))), tf.math.add(alpha, alpha))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))))))))), tf.math.add(alpha, grad))))), tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9658114137335887, 2.3113550379638106, 2.304814806483315, 2.30372891950727, 2.3033275449312187, 2.302342124130779, 2.2932517603797495, 2.506995012101685, 2.3015383172265103, 2.1919553639189346, 2.1082870908590308, 2.2257682686673337, 2.054537187241733, 1.7580066877758624, 1.627090627979278, 1.4915359176743568, 1.4373575502996983, 2.33367245110066, 1.9870251153265213, 1.7055613552464344, 1.7069024771211831], "accuracy": [0.18980319797992706, 0.09840179979801178, 0.09351472556591034, 0.09351472556591034, 0.10593052208423615, 0.10157178342342377, 0.13842293620109558, 0.1644432693719864, 0.11227050423622131, 0.2133139669895172, 0.2790912687778473, 0.17263241112232208, 0.30999869108200073, 0.40470215678215027, 0.4461762011051178, 0.488971084356308, 0.5090476870536804, 0.2118610441684723, 0.29626205563545227, 0.4105137884616852, 0.40443798899650574], "val_loss": [1.9917646135602678, 1.9747028350830078, 1.973717553274972, 1.9734793390546526, 1.9733028411865234, 1.9724127905709403, 1.8436154638017928, 1.9754222461155482, 1.9516230310712541, 1.6184052399226598, 1.961212090083531, 1.7406691823686873, 1.416700805936541, 1.2362424646105086, 1.4252139840807234, 0.9097279821123395, 1.7746871539524622, 2.130566324506487, 1.141125270298549, 1.2708680289132255, 1.1215156146458216], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.10833333432674408, 0.10466666519641876, 0.335999995470047, 0.10166666656732559, 0.19300000369548798, 0.38466668128967285, 0.18933333456516266, 0.34599998593330383, 0.4833333194255829, 0.5120000243186951, 0.4983333349227905, 0.6159999966621399, 0.2280000001192093, 0.19833333790302277, 0.581333339214325, 0.4866666793823242, 0.512666642665863]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 3, 9, 8, 3, 5, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 2, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [7, 88, 7, 40, 35, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.6365714073181152, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9664544742089443, 2.31142165317291, 2.3044574122151142, 2.303558539500279, 2.302594748501922, 2.3016507036697593, 2.291229022728564, 2.1077829508843786, 2.2571347414494634, 2.1061838539977824, 1.811549052759452, 1.7255769885368886, 1.6142668989057065, 2.020866450837039, 1.622350320714009, 1.6722809892556671, 1.666526360770636, 1.4895921129166978], "accuracy": [0.18980319797992706, 0.1018359512090683, 0.09536388516426086, 0.08889182657003403, 0.10738343745470047, 0.11187426000833511, 0.1472724825143814, 0.30365869402885437, 0.17936864495277405, 0.28001585602760315, 0.39981508255004883, 0.4294016659259796, 0.43666622042655945, 0.31039494276046753, 0.4525161683559418, 0.4415532946586609, 0.45132744312286377, 0.48791441321372986], "val_loss": [1.9888691902160645, 1.975330148424421, 1.9738038608006068, 1.9733264786856515, 1.973015580858503, 1.9717074121747697, 1.8599976130894251, 1.9723809787205286, 1.6004325321742467, 1.3433666910443987, 1.5647646699632918, 1.678339651652745, 0.980808939252581, 1.492097990853446, 1.338696037020002, 1.0689911501748222, 1.0613879816872733, 1.0775625024523054], "val_accuracy": [0.1003333330154419, 0.10233332961797714, 0.10400000214576721, 0.11599999666213989, 0.109333336353302, 0.14800000190734863, 0.3449999988079071, 0.1860000044107437, 0.3616666793823242, 0.4753333330154419, 0.43533334136009216, 0.3059999942779541, 0.6346666812896729, 0.4449999928474426, 0.5370000004768372, 0.5426666736602783, 0.5386666655540466, 0.5519999861717224]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 6, 2, 8, 3, 3, 5, 6, 6, 2, 2, 1, 4, 6, 3, 3, 2, 4, 1, 8, 2, 3, 8, 1, 1, 3, 2, 2, 4, 2, 8, 2, 7, 2, 0, 5, 2, 3, 3, 8, 4, 7, 1, 6, 7, 0, 1, 3, 3, 9, 6, 5, 7, 4, 1, 1], [2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 0, 1, 0, 3, 2, 1, 1, 1, 0, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 1, 3, 3, 1, 2], [8, 25, 7, 64, 88, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.6037142872810364, "mapping_values": [1, 65, 65, 35, 30, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), grad), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), alpha)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9151698304457105, 2.3107727104567926, 2.304654926467077, 2.3037033864551484, 2.30347441612942, 2.303070374326211, 2.302914849235838, 2.302524408219025, 2.3009652873827653, 2.1847000573021846, 2.2027885974311654, 2.629193187909371, 2.1596790124018748, 2.0711729622882324, 1.9945755847267832, 1.7629837345973045, 1.6786555606360607, 1.5098106176184625, 1.3815099734356846, 1.206822813777498, 1.104813651323098, 1.1038918827723487, 1.032691206914433, 0.9919104027930756, 1.1180792831710111, 0.9180594332119604, 0.8375670608512447, 0.8137055722288783, 0.7977479381206061, 0.752289706091477, 0.7949501758458797, 0.7190907499447254, 0.7045501596687366, 0.6808983842537089, 0.6409989244603147, 0.6241701689567611, 0.6284889418372483, 0.6065747654118385, 0.6176680759384711, 0.5957803993555124, 0.5595200567307835, 0.5894634611319085, 0.541320923863936, 0.563653939585282, 0.5218345741664476, 0.5343286966084017, 0.5234734568109665, 0.5202660554624615, 0.5040930517518746, 0.4885415055370444, 0.48623808354765213, 0.4813601407180011, 0.4896435974973493, 0.5093555255273802, 0.4591118959844577], "accuracy": [0.18953903019428253, 0.09945846349000931, 0.0940430611371994, 0.09536388516426086, 0.09893012791872025, 0.09681680053472519, 0.09853387624025345, 0.10381719470024109, 0.108440101146698, 0.2141064554452896, 0.24937260150909424, 0.22163519263267517, 0.26020342111587524, 0.266939640045166, 0.32479196786880493, 0.3855501115322113, 0.42028793692588806, 0.47232863306999207, 0.5283318161964417, 0.5809007883071899, 0.5956941246986389, 0.5967507362365723, 0.6346585750579834, 0.64231938123703, 0.5946374535560608, 0.6538106203079224, 0.6985867023468018, 0.6950204968452454, 0.7040021419525146, 0.7166820764541626, 0.7099458575248718, 0.7310791015625, 0.7334566116333008, 0.7504953145980835, 0.7644960880279541, 0.7695152759552002, 0.7751948237419128, 0.7880068421363831, 0.7733456492424011, 0.7821952104568481, 0.7955356240272522, 0.7839123010635376, 0.8074230551719666, 0.7954035401344299, 0.8107251524925232, 0.8034605979919434, 0.8084797263145447, 0.8124422430992126, 0.8203672170639038, 0.8281601071357727, 0.8232730031013489, 0.8222163319587708, 0.8177255392074585, 0.8177255392074585, 0.828292191028595], "val_loss": [1.9895835603986467, 1.9747164590018136, 1.9737520217895508, 1.9735899652753557, 1.9736029079982214, 1.9735965728759766, 1.9733116967337472, 1.972679819379534, 1.9689027922494071, 1.8054568426949638, 4.015941211155483, 1.9714226041521346, 1.9207968030657088, 1.6083238124847412, 1.6197562558310372, 1.751143523624965, 0.9177956581115723, 1.0712473392486572, 0.9091183798653739, 0.829319851739066, 0.7317642314093453, 0.7359449693134853, 0.796321051461356, 0.6432925462722778, 0.7188136237008231, 0.6028189829417637, 0.5515408005033221, 0.58160970892225, 0.5190972430365426, 0.5369957174573626, 0.5517958062035697, 0.5258634601320539, 0.5049448694501605, 0.5082012925829206, 0.4454071436609541, 0.46629456111363005, 0.43284811292375835, 0.4624532290867397, 0.4239063262939453, 0.42300981283187866, 0.4123674716268267, 0.4214601687022618, 0.4065713371549334, 0.3991678697722299, 0.4249286481312343, 0.3948866128921509, 0.4425628696169172, 0.4007084625107901, 0.3745133365903582, 0.37165500436510357, 0.37218116010938374, 0.3762572407722473, 0.41523113421031405, 0.4133341908454895, 0.36211723940713064], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10100000351667404, 0.10833333432674408, 0.1003333330154419, 0.09399999678134918, 0.10499999672174454, 0.16566666960716248, 0.3216666579246521, 0.2966666519641876, 0.12533333897590637, 0.15733332931995392, 0.37066665291786194, 0.35633334517478943, 0.2826666533946991, 0.6296666860580444, 0.5519999861717224, 0.6110000014305115, 0.637666642665863, 0.6823333501815796, 0.6850000023841858, 0.6513333320617676, 0.7046666741371155, 0.6983333230018616, 0.7366666793823242, 0.7429999709129333, 0.7480000257492065, 0.7583333253860474, 0.7586666941642761, 0.7450000047683716, 0.7436666488647461, 0.7540000081062317, 0.7689999938011169, 0.8029999732971191, 0.7933333516120911, 0.8076666593551636, 0.7913333177566528, 0.8199999928474426, 0.8173333406448364, 0.8243333101272583, 0.8196666836738586, 0.8180000185966492, 0.831333339214325, 0.8103333115577698, 0.8209999799728394, 0.8193333148956299, 0.8363333344459534, 0.8423333168029785, 0.8450000286102295, 0.8433333039283752, 0.8376666903495789, 0.8166666626930237, 0.8190000057220459, 0.8429999947547913]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 6, 2, 8, 3, 3, 5, 6, 8, 2, 2, 1, 9, 6, 2, 3, 2, 4, 1, 8, 2, 3, 8, 1, 1, 3, 2, 2, 1, 2, 8, 9, 7, 2, 5, 5, 3, 0, 3, 8, 4, 7, 5, 6, 7, 3, 1, 3, 3, 9, 6, 5, 7, 4, 1, 1], [1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 35, 7, 40, 44, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.5611428618431091, "mapping_values": [1, 54, 54, 30, 24, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 67, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.add(alpha, grad), grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)))))), tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, grad)), grad))))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9513395841268735, 2.3113102306070705, 2.3046032346990746, 2.303625095285807, 2.303053521587234, 2.302414973902271, 2.3006715322324958, 2.20497961463772, 1.9582458656257122, 2.1921028741645836, 2.066077943491252, 1.8529363990601548, 2.0612062652113257, 2.294516284625449, 2.3068961558671375, 2.3050673615427035, 2.304712985658123], "accuracy": [0.19099193811416626, 0.09840179979801178, 0.09338264167308807, 0.09179764986038208, 0.10289261490106583, 0.10276053100824356, 0.11834631860256195, 0.2141064554452896, 0.3311319649219513, 0.2366926372051239, 0.29322415590286255, 0.3821159601211548, 0.31343284249305725, 0.13353586196899414, 0.09774138033390045, 0.09840179979801178, 0.09787346422672272], "val_loss": [1.9897817884172713, 1.974989891052246, 1.9737159865243095, 1.973426273890904, 1.9733051572527205, 1.9728870391845703, 1.9679993220738001, 1.3434829030718123, 1.6233044692448206, 1.7181675434112549, 1.1860943521772112, 1.170700992856707, 1.4095838410513741, 1.9752341679164342, 1.9738638060433524, 1.9737367630004883, 1.9746522903442383], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10300000011920929, 0.10466666519641876, 0.10700000077486038, 0.16333332657814026, 0.47999998927116394, 0.453000009059906, 0.25699999928474426, 0.5486666560173035, 0.5713333487510681, 0.42899999022483826, 0.10066666454076767, 0.10066666454076767, 0.10199999809265137, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 1, 2, 8, 0, 5, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 40, 44, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.5497142672538757, "mapping_values": [1, 10, 10, 7, 3, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.square(tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.957856325724688, 2.3112794898520246, 2.304606780242517, 2.303507029561476, 2.3028959678447856, 2.3021022327477514, 2.296730169987304, 2.1776013431327375, 2.1733896539290316, 2.270913103772759, 2.2912388931506693, 2.2244165898188153, 1.981546149419488, 2.3103229045678972, 2.305794313803892, 2.3040693994085504, 2.305083426250175], "accuracy": [0.1900673657655716, 0.09800554811954498, 0.0956280529499054, 0.08942015469074249, 0.10711926966905594, 0.10672302544116974, 0.13274335861206055, 0.24474970996379852, 0.23286223411560059, 0.2222955971956253, 0.14291374385356903, 0.18663319945335388, 0.3329811096191406, 0.10342095047235489, 0.09192973375320435, 0.09496764093637466, 0.1006472036242485], "val_loss": [1.9892524991716658, 1.9750961576189314, 1.9737234796796526, 1.9733776365007674, 1.9731642859322684, 1.9722234180995397, 1.9353996004377092, 1.6374689170292445, 1.9421521595546178, 1.9743016787937708, 1.970306668962751, 1.337717158453805, 1.9836559976850237, 1.9740476608276367, 1.9737887382507324, 1.9735770906720842, 1.974062715257917], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.11166666448116302, 0.10100000351667404, 0.10966666787862778, 0.26233333349227905, 0.2930000126361847, 0.18533332645893097, 0.10833333432674408, 0.19200000166893005, 0.4976666569709778, 0.0976666659116745, 0.10066666454076767, 0.0976666659116745, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 2, 8, 3, 5, 0, 2, 8, 2, 2, 1, 2, 6, 8, 2, 1, 5, 1, 6, 2, 2, 8, 1, 4, 5, 2, 6, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 0, 1, 1, 3, 2, 1, 1, 1, 0, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [21, 25, 7, 40, 44, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.5260000228881836, "mapping_values": [1, 9, 9, 5, 4, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9668690237182087, 2.311457530335192, 2.3044258681554144, 2.3033520949278934, 2.302504213368652, 2.3011424318516904, 2.270173650832775, 1.9968673735246871, 2.2097453974682373, 2.144585057209354, 2.2739070700679584, 2.304946002769999, 2.2823114409627476, 1.954916198507764, 2.309547801421476], "accuracy": [0.18980319797992706, 0.10091137140989304, 0.09496764093637466, 0.09391097724437714, 0.10434553027153015, 0.11478008329868317, 0.17223615944385529, 0.35305771231651306, 0.2374851405620575, 0.23973055183887482, 0.1666886806488037, 0.10540219396352768, 0.12996962666511536, 0.35860520601272583, 0.10368511080741882], "val_loss": [1.9887033190046037, 1.9753785814557756, 1.97369418825422, 1.9732652391706194, 1.9728455543518066, 1.9705771037510462, 1.9069726126534599, 1.931025845663888, 1.9657815524509974, 1.3861571039472307, 1.9747585569109236, 1.9733118329729353, 1.4264393193381173, 1.9814567565917969, 1.9729885373796736], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10166666656732559, 0.1146666631102562, 0.10566666722297668, 0.12666666507720947, 0.24966666102409363, 0.14233332872390747, 0.11733333021402359, 0.4779999852180481, 0.10199999809265137, 0.10333333164453506, 0.4586666524410248, 0.10066666454076767, 0.1080000028014183]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [4, 3, 2, 9, 3, 1, 4, 3, 8, 2, 2, 1, 1, 2, 2, 8, 2, 5, 1, 3, 8, 0, 8, 3, 4, 3, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 0, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 2, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 98, 7, 51, 88, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.4474285840988159, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9513352618257147, 2.3114588161768803, 2.304671515909562, 2.303701217510539, 2.303303608789168, 2.3027868217024365, 2.302573898165784, 2.3009833604305996, 2.2526761280342478, 2.189649661849156, 2.1485161177313103, 2.305432556800051, 2.136286934715425, 1.8643842868486242, 2.0902431238250267, 2.3128923377529693, 2.3068736217056895, 2.306062951898531, 2.29773049095697], "accuracy": [0.19112402200698853, 0.09747721254825592, 0.09311848133802414, 0.09100515395402908, 0.09985470771789551, 0.10011887550354004, 0.10249637067317963, 0.11345925182104111, 0.18901069462299347, 0.19997358322143555, 0.23840972781181335, 0.09602430462837219, 0.23061682283878326, 0.38581427931785583, 0.3160744905471802, 0.10394927859306335, 0.09787346422672272, 0.09311848133802414, 0.10659094154834747], "val_loss": [1.9898882593427385, 1.9750408445085799, 1.9737426894051688, 1.9735621043613978, 1.973543643951416, 1.9735054288591658, 1.972949436732701, 1.968426023210798, 1.974123477935791, 1.5343755313328333, 1.9759727205548967, 1.9722140175955636, 1.7381749153137207, 1.5164710794176375, 1.9828790937151228, 1.974437849862235, 1.9745232718331474, 1.9740053585597448, 1.8897885595049178], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.11500000208616257, 0.11299999803304672, 0.10066666454076767, 0.1003333330154419, 0.16433332860469818, 0.09399999678134918, 0.38499999046325684, 0.0976666659116745, 0.10899999737739563, 0.3386666774749756, 0.4216666519641876, 0.10066666454076767, 0.10066666454076767, 0.1003333330154419, 0.09700000286102295, 0.24133333563804626]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 9, 2, 8, 3, 3, 5, 2, 9, 2, 2, 1, 4, 6, 8, 2, 2, 5, 3, 6, 2, 2, 8, 1, 8, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 2, 0, 1, 2, 2, 2, 1, 2, 2, 2, 0, 1, 3, 2, 0, 1, 2, 0, 2, 2, 3, 0, 1, 1, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 2, 1, 3, 1, 3, 1, 2], [75, 88, 7, 40, 35, 57, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.4294285774230957, "mapping_values": [1, 2, 2, 2, 0, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9664857715364334, 2.3114712630689986, 2.3045106498147394, 2.303490141080182, 2.302774168008732, 2.3017444132246974, 2.2952876051954543, 2.110301794644911, 2.3270084440369634, 2.294892959748403, 1.9489478599661456, 2.1303846985672474, 2.3139330223173182, 2.305182745396548, 2.303744108228793, 2.3036436780789242], "accuracy": [0.1896711140871048, 0.10051512718200684, 0.09351472556591034, 0.08902391046285629, 0.10117553919553757, 0.10857218503952026, 0.14397041499614716, 0.2973187267780304, 0.10553427785634995, 0.12415797263383865, 0.3473781645298004, 0.25782591104507446, 0.09509972482919693, 0.09866596013307571, 0.10355303436517715, 0.10698718577623367], "val_loss": [1.9892200061253138, 1.9753431592668806, 1.9737441880362374, 1.9733589036124093, 1.973071915762765, 1.971998623439244, 1.9179157529558455, 1.977400439126151, 1.9743545395987374, 1.8924497876848494, 1.3028878143855505, 1.9898285865783691, 1.9757641383579798, 1.97399868283953, 1.9734715053013392, 1.9729573386056083], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.11266666650772095, 0.10199999809265137, 0.11966666579246521, 0.257999986410141, 0.10066666454076767, 0.10166666656732559, 0.20200000703334808, 0.45766666531562805, 0.09833333641290665, 0.10199999809265137, 0.09933333098888397, 0.0976666659116745, 0.1263333261013031]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 4, 2, 1, 6, 5, 5, 6, 8, 2, 2, 1, 8, 6, 9, 2, 2, 4, 3, 5, 2, 8, 8, 1, 1, 2, 2, 2, 1, 2, 6, 9, 8, 2, 0, 5, 3, 0, 3, 4, 4, 8, 1, 3, 7, 3, 1, 4, 9, 2, 6, 5, 7, 4, 1, 1], [2, 0, 2, 0, 1, 2, 2, 2, 1, 2, 2, 2, 0, 1, 3, 2, 0, 1, 2, 0, 2, 2, 3, 2, 1, 1, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 2, 1, 3, 1, 3, 1, 2], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.36085712909698486, "mapping_values": [1, 64, 64, 39, 25, 7, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 65, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), alpha)))), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(grad)))))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))))))), alpha))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9620141157967272, 2.311484402921206, 2.304588666823184, 2.303532848457666, 2.3028951498968033, 2.302440551608671, 2.301410928362664, 2.212110888200618, 2.3008276874268643, 2.2498513656190955, 2.194623698364427, 2.304206764756287, 2.3031770505641886, 2.2967080278891645, 2.2159903082534576], "accuracy": [0.1900673657655716, 0.10077928751707077, 0.0948355570435524, 0.09113723784685135, 0.10038304328918457, 0.10077928751707077, 0.11438383162021637, 0.2156914472579956, 0.1294412910938263, 0.1802932173013687, 0.23022057116031647, 0.1022322028875351, 0.10434553027153015, 0.1158367469906807, 0.2351076453924179], "val_loss": [1.989173752920968, 1.975377150944301, 1.973834787096296, 1.973452431815011, 1.9733807018824987, 1.9730586324419295, 1.969304084777832, 1.9848346710205078, 1.9677705083574568, 1.798548970903669, 1.9762628419058663, 1.9732521602085658, 1.9727531841823034, 1.927462100982666, 1.974876880645752], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10066666454076767, 0.11166666448116302, 0.09799999743700027, 0.10166666656732559, 0.14766666293144226, 0.10100000351667404, 0.11566666513681412, 0.3136666715145111, 0.10199999809265137, 0.1003333330154419, 0.11566666513681412, 0.281333327293396, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [9, 6, 2, 8, 3, 6, 5, 6, 8, 2, 2, 1, 0, 6, 2, 3, 2, 5, 1, 5, 2, 3, 8, 1, 1, 3, 2, 2, 1, 2, 8, 9, 7, 2, 0, 5, 3, 0, 3, 8, 4, 7, 1, 6, 7, 3, 1, 3, 3, 9, 6, 5, 7, 4, 1, 1], [2, 0, 0, 2, 1, 2, 1, 2, 0, 2, 2, 2, 0, 1, 3, 2, 1, 1, 2, 0, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [21, 25, 7, 40, 35, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.20742857456207275, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.949443689474041, 2.310966969638563, 2.304643025471943, 2.303635001324266, 2.3033744323333933, 2.3028603604346567, 2.3026164554885162, 2.301116928842011, 2.2495492197786735, 2.2108754311192382, 2.3107037746107983, 2.3005930148001124, 2.303433436853633, 2.303447566405893], "accuracy": [0.19072777032852173, 0.09879804402589798, 0.09351472556591034, 0.09285431355237961, 0.09945846349000931, 0.10117553919553757, 0.10276053100824356, 0.11068551242351532, 0.18042530119419098, 0.24765552580356598, 0.10474177449941635, 0.12878087162971497, 0.09945846349000931, 0.09708096832036972], "val_loss": [1.9895296777997697, 1.974811622074672, 1.9737498419625419, 1.9735566547938757, 1.9735279083251953, 1.9735289982386999, 1.972994259425572, 1.9692886897495814, 1.7219104766845703, 2.001957484654018, 1.9675676482064384, 1.9738130569458008, 1.9737392834254675, 1.9736789294651575], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09433333575725555, 0.11100000143051147, 0.10066666454076767, 0.1003333330154419, 0.1589999943971634, 0.3726666569709778, 0.09833333641290665, 0.1276666671037674, 0.1003333330154419, 0.0976666659116745, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 3, 2, 8, 3, 5, 5, 5, 8, 4, 2, 8, 0, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 4, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 0, 1, 1, 3, 2, 1, 0, 1, 1, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [7, 88, 7, 40, 35, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.19857142865657806, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.96577017087789, 2.3113964885658262, 2.304779246215256, 2.303753370433168, 2.3033688269617567, 2.302696717083021, 2.301637008977116, 2.272287420041809, 2.928012860496802, 2.3059048075733277, 2.3034119057129434, 2.300061000226401, 2.173520638123637], "accuracy": [0.18980319797992706, 0.09787346422672272, 0.09338264167308807, 0.0944393053650856, 0.09959053993225098, 0.10328886657953262, 0.11398758739233017, 0.17474573850631714, 0.15202747285366058, 0.10038304328918457, 0.09879804402589798, 0.12019548565149307, 0.2145027071237564], "val_loss": [1.9920194489615304, 1.9746952738080705, 1.973726545061384, 1.973489625113351, 1.9734001159667969, 1.9731456892830985, 1.971160616193499, 1.507819414138794, 1.9787960733686174, 1.974837098802839, 1.972893306187221, 1.9635566983904158, 1.7447152137756348], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10833333432674408, 0.10233332961797714, 0.10400000214576721, 0.11433333158493042, 0.3063333332538605, 0.09833333641290665, 0.10199999809265137, 0.11266666650772095, 0.1599999964237213, 0.29366666078567505]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 3, 2, 8, 3, 5, 5, 2, 8, 2, 2, 5, 4, 2, 8, 2, 2, 0, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 2, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 1, 3, 2, 1, 1, 1, 0, 2, 1, 1, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [7, 88, 41, 40, 35, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 64, 64, 40, 24, 5, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, alpha)))))))))), alpha)))), tf.math.add(alpha, alpha))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 0, 8, 5, 3, 8, 6, 6, 8, 2, 2, 2, 0, 6, 2, 2, 2, 5, 1, 6, 9, 2, 8, 1, 3, 3, 2, 2, 1, 2, 8, 9, 7, 2, 5, 1, 3, 5, 3, 8, 4, 7], [1, 2, 2, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 1, 1, 2, 1, 1, 1, 0, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [7, 53, 7, 40, 35, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 8, 3, 5, 8, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 2, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 1, 3, 2, 1, 1, 1, 0, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [7, 88, 7, 40, 35, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [0, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 53, 53, 32, 21, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 71, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), alpha)))), tf.math.add(alpha, alpha))))))), alpha)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))), grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026110915585973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 1, 0, 8, 3, 3, 0, 6, 8, 2, 1, 1, 6, 6, 2, 2, 2, 4, 1, 0, 8, 8, 8, 1, 1, 1, 2, 2, 1, 4, 8, 9, 7, 2, 1, 5, 3, 0, 3, 8, 4, 7, 1, 3, 5, 3, 1, 6, 2, 2, 6, 5, 7, 4, 1, 1, 6, 0, 9, 0, 0, 0, 4, 1, 1, 6, 6, 3, 2, 3, 5, 6, 1, 6, 0, 2, 2, 6, 6, 6, 4, 4, 6, 9, 6, 9, 4, 3, 0, 7, 4, 9], [2, 2, 1, 0, 1, 2, 2, 2, 0, 2, 2, 1, 1, 2, 3, 2, 0, 1, 2, 0, 2, 2, 3, 0, 2, 2, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 2, 2, 3, 2, 3, 0, 1, 0, 1, 1, 2, 1, 1, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 1], [19, 88, 7, 40, 35, 75, 89, 75, 80, 56, 14, 34, 61, 35, 29, 79, 27, 20, 49], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [5, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [4, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 54, 54, 31, 23, 4, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.subtract(alpha, tf.math.add(alpha, alpha)), grad)))))))))), tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, grad))))))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(sigma), tf.math.subtract(sigma, beta))))", "other_info": {"loss": [29247.887609837788, 34504.2477979296, 3584716933193099.5, 36345.06627777869, 37267.77882761937, 38176.95484930161], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [29135.137276785714, 29917.95870535714, 30702.97879464286, 31493.566964285714, 32275.647321428572, 33057.708705357145], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 6, 2, 8, 3, 3, 5, 6, 8, 2, 1, 1, 4, 9, 2, 2, 2, 4, 1, 6, 2, 8, 8, 1, 1, 3, 2, 2, 8, 2, 8, 9, 3, 2, 1, 5, 3, 0, 3, 8, 4, 2, 1, 3, 6, 3, 1, 4, 3, 2, 2, 5, 7, 4, 1, 1, 4, 2, 2, 5, 3, 6, 3, 4, 4, 3, 9, 4, 8, 0, 3, 1, 6, 5, 6, 3, 8, 8, 3, 0, 8, 1, 6, 9, 1, 2, 2, 3, 7, 9, 3], [2, 2, 2, 0, 2, 2, 2, 0, 0, 2, 2, 0, 1, 1, 3, 2, 2, 2, 1, 2, 2, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1, 2, 1, 0, 1, 1, 1, 2, 3, 1, 0, 1, 1, 3, 3, 3, 1, 3, 2, 3, 2, 0, 2], [21, 25, 7, 40, 44, 74, 7, 75, 85, 49, 32, 70, 81, 44], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 94, 94, 54, 40, 9, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 77, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), alpha)))), tf.math.add(alpha, tf.math.add(grad, grad)))), grad)))), tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.multiply(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(grad, tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), grad))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)))), alpha))))))))), tf.math.pow(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 4, 2, 8, 6, 3, 5, 6, 8, 2, 2, 1, 8, 6, 4, 2, 2, 4, 1, 5, 9, 8, 8, 1, 1, 2, 2, 2, 1, 2, 6, 9, 7, 2, 0, 6, 3, 0, 3, 4, 4, 8, 1, 3, 7, 3, 1, 4, 9, 2, 6, 5, 7, 4, 1, 1], [2, 0, 2, 0, 2, 1, 2, 2, 1, 2, 0, 2, 0, 1, 3, 2, 0, 2, 2, 0, 2, 2, 3, 0, 1, 1, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 2, 1, 3, 1, 3, 1, 2], [7, 88, 7, 40, 35, 65, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.06342857331037521, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.31886429359034, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18121780455112457, 0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1752231.75, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 3, 2, 8, 5, 5, 5, 2, 8, 2, 2, 6, 4, 6, 8, 2, 4, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 2, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [7, 88, 7, 40, 35, 74, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.06342857331037521, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.31914700619092, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18121780455112457, 0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1752081.5714285714, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 6, 2, 2, 3, 3, 5, 1, 8, 0, 2, 1, 4, 6, 2, 3, 2, 4, 1, 8, 2, 1, 8, 1, 1, 3, 2, 2, 1, 2, 8, 9, 7, 2, 0, 5, 3, 0, 3, 6, 4, 7, 1, 6, 7, 3, 1, 3, 3, 9, 6, 5, 7, 4, 1, 1], [1, 2, 2, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 1, 3, 2, 1, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 2, 0, 3, 3, 3, 1, 2, 0, 2], [7, 88, 7, 70, 33, 74, 22, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.05342857167124748, "mapping_values": [1, 88, 88, 50, 38, 7, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), grad), tf.math.add(alpha, grad)))))))))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))), grad), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), grad))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), grad), grad))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9522139079787113, 2.311185432100781, 2.3047071026300854, 2.3036148518839563, 2.3033462192372656, 2.3026789187314316, 2.3021599331300147, 2.2961944461168002, 2.4895567654965025, 2.370999652412605, 2.303574130204785, 2.2995140588735437, 2.758469282502212], "accuracy": [0.1900673657655716, 0.09932637959718704, 0.0940430611371994, 0.09272222965955734, 0.09893012791872025, 0.10170386731624603, 0.10711926966905594, 0.13538502156734467, 0.23273015022277832, 0.09668471664190292, 0.09972262382507324, 0.11161009222269058, 0.22572976350784302], "val_loss": [1.9894458906991142, 1.974879264831543, 1.9737403733389718, 1.9735373769487654, 1.9734492983136858, 1.973330089024135, 1.9719396999904089, 1.9273150988987513, 2.262267930167062, 1.9750350543430872, 1.9734214373997279, 1.942432471684047, 1.981785774230957], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10533333569765091, 0.10199999809265137, 0.09933333098888397, 0.10999999940395355, 0.2736666798591614, 0.14033333957195282, 0.10199999809265137, 0.10199999809265137, 0.2736666798591614, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 4, 5, 8, 6, 3, 5, 6, 8, 2, 2, 1, 8, 6, 9, 2, 2, 4, 1, 6, 2, 9, 8, 3, 1, 2, 2, 2, 1, 2, 6, 9, 8, 2, 3, 5, 3, 0, 3, 4, 4, 8, 1, 3, 7, 3, 1, 4, 9, 2, 6, 5, 7, 4, 1, 1], [2, 0, 1, 0, 1, 0, 2, 2, 1, 2, 2, 2, 0, 2, 3, 2, 0, 1, 1, 0, 0, 2, 3, 0, 2, 1, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 2, 1, 3, 1, 3, 1, 2], [7, 88, 7, 12, 35, 74, 22, 75, 16, 82, 33], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.04114285856485367, "mapping_values": [1, 64, 64, 39, 25, 11, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), grad)))))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))))), alpha)))), tf.math.add(alpha, alpha))))), tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3010494572343827, 2.3024194975885592, 2.302123933562104, 2.3016873499689288, 2.302869457153675, 2.302583947456933], "accuracy": [0.09060890227556229, 0.09272222965955734, 0.09192973375320435, 0.09430722147226334, 0.09285431355237961, 0.09351472556591034], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]