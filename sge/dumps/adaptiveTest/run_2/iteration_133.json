[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 8, 3, 2, 8, 8, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [1, 0, 2, 0, 0, 2, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [14, 32, 89, 69, 49, 69, 22, 75], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.26828572154045105, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [5.105010786706494, 2.508260631038528, 2.295241603919339, 2.339531758835822, 2.341538729054848, 2.348015809339413, 2.3578369321131576], "accuracy": [0.16536785662174225, 0.10896842926740646, 0.14449875056743622, 0.13591335713863373, 0.09893012791872025, 0.09919429570436478, 0.09747721254825592], "val_loss": [2.63484457560948, 1.932948384966169, 1.9222967965262276, 2.019953182765416, 2.0367467744009837, 2.0152368545532227, 1.996192523411342], "val_accuracy": [0.1003333330154419, 0.17299999296665192, 0.14100000262260437, 0.10199999809265137, 0.10066666454076767, 0.09833333641290665, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 3, 1, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 7, 8, 2, 5, 6, 9, 3, 2], [1, 2, 2, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.19542856514453888, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5986053484179923, 2.8440357757329533, 2.305763375285185, 2.3035399667213086, 2.303764314667865, 2.3031840541375046], "accuracy": [0.17170783877372742, 0.1426495909690857, 0.0956280529499054, 0.1006472036242485, 0.09813763201236725, 0.09826971590518951], "val_loss": [1.8219144684927804, 1.9774171284266882, 1.9745654378618513, 1.9738952091761999, 1.974168368748256, 1.973792621067592], "val_accuracy": [0.20999999344348907, 0.1003333330154419, 0.09833333641290665, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 4, 3, 1, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [1, 2, 2, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [26, 32, 89, 69, 49, 69, 22, 65], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.19514285027980804, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), grad)), grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5986016136764487, 2.872220093847156, 2.304440279930275, 2.3032351004968716, 2.3032822370560666, 2.3029095031928235], "accuracy": [0.17183992266654968, 0.15612204372882843, 0.09787346422672272, 0.10130762308835983, 0.09272222965955734, 0.09893012791872025], "val_loss": [1.8089908872331892, 1.9764572552272253, 1.9742042677743095, 1.9738848549979073, 1.973774024418422, 1.973750114440918], "val_accuracy": [0.20133332908153534, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 3, 2, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 7, 8, 0, 6, 6, 2, 3, 2], [1, 2, 2, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.19142857193946838, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5988334148882117, 2.8588291666275003, 2.3059679533528015, 2.3034733803579917, 2.3038142720044736, 2.3030699802789676], "accuracy": [0.17210407555103302, 0.1442345827817917, 0.09589222073554993, 0.09919429570436478, 0.09787346422672272, 0.09655263274908066], "val_loss": [1.821075507572719, 1.9778484616960799, 1.9746215002877372, 1.9738730021885462, 1.9740659849984306, 1.9738239560808455], "val_accuracy": [0.20133332908153534, 0.1003333330154419, 0.07000000029802322, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 2, 4, 8, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.1899999976158142, "mapping_values": [1, 40, 40, 25, 15, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), grad))), tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5988612471318375, 2.944273449442154, 2.3053721594630985, 2.3033783477074783, 2.3037046346965484, 2.3029826564433598], "accuracy": [0.17197199165821075, 0.14714039862155914, 0.09945846349000931, 0.09800554811954498, 0.09628847241401672, 0.09602430462837219], "val_loss": [1.8153386797223772, 1.977062565939767, 1.9745385987418038, 1.9739110810416085, 1.9739084924970354, 1.97378785269601], "val_accuracy": [0.20233333110809326, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 3, 2, 2, 8, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [1, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [14, 32, 89, 69, 49, 69, 22, 65], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.18857142329216003, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.598841446801073, 2.7977002356676235, 2.305872566554178, 2.3035412378881777, 2.303697475053694, 2.303033173627479], "accuracy": [0.17210407555103302, 0.14132875204086304, 0.09853387624025345, 0.10011887550354004, 0.09721305221319199, 0.09694888442754745], "val_loss": [1.8176063128880091, 1.9785981178283691, 1.9744959558759416, 1.9739131927490234, 1.9740477289472307, 1.9738170760018485], "val_accuracy": [0.19900000095367432, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 2, 4, 9, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [0, 2, 2, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [92, 32, 89, 69, 46, 69, 22, 8, 13, 15], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.18714286386966705, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), grad)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.598584856197834, 2.74453608461611, 2.3043569954489325, 2.303330646734574, 2.3033827358248873, 2.303042418039423], "accuracy": [0.17197199165821075, 0.15770703554153442, 0.10210011899471283, 0.09655263274908066, 0.09800554811954498, 0.0956280529499054], "val_loss": [1.8082282883780343, 1.9763845716203963, 1.9741709572928292, 1.9739342417035783, 1.9737566539219447, 1.9737475258963448], "val_accuracy": [0.195333331823349, 0.0976666659116745, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 4, 4, 8, 8, 4, 8, 4, 1, 6, 4, 6, 3, 0, 4, 3, 4, 2, 8, 2, 5, 6, 9, 3, 2], [3, 2, 1, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [14, 83, 89, 69, 49, 69, 22, 65], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.18714286386966705, "mapping_values": [1, 44, 44, 26, 18, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha)))))), tf.math.pow(grad, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.598584640326832, 2.7541960983732356, 2.304383081924394, 2.3032396105790354, 2.3036040099321213, 2.303025569110861], "accuracy": [0.17197199165821075, 0.1578391194343567, 0.10236428678035736, 0.09589222073554993, 0.09060890227556229, 0.09879804402589798], "val_loss": [1.8077733176095145, 1.9763972418648856, 1.9741873059953963, 1.9739161218915666, 1.9737587656293596, 1.9737437111990792], "val_accuracy": [0.19466666877269745, 0.10133333504199982, 0.0976666659116745, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 3, 1, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 7, 8, 2, 5, 6, 9, 3, 2], [1, 2, 2, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 1, 3, 2, 2], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.18685714900493622, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5985744134892625, 2.925224215079607, 2.3048605606808183, 2.303331423334835, 2.3033719369212884, 2.302931280215466], "accuracy": [0.17183992266654968, 0.15215955674648285, 0.09602430462837219, 0.09668471664190292, 0.09615638852119446, 0.09826971590518951], "val_loss": [1.8107476915631975, 1.976813520703997, 1.9743927546909876, 1.9739121028355189, 1.973832675388881, 1.9737615585327148], "val_accuracy": [0.19566667079925537, 0.0976666659116745, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 3, 2, 4, 8, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [3, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3030619351083828, 2.3025848549654016, 2.3025851340074075, 2.3025850933839807, 2.3025850889122546, 2.3025851205922296], "accuracy": [0.09813763201236725, 0.10487385839223862, 0.09998679161071777, 0.10091137140989304, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9736439159938268, 1.9736439841134208, 1.9736439159938268, 1.9736440522330148, 1.973644188472203, 1.9736439841134208], "val_accuracy": [0.10266666859388351, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 3, 1, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 7, 8, 2, 5, 6, 9, 3, 2], [1, 2, 2, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 1, 3, 2, 2], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.303079855141308, 2.302620418414054, 2.302604125680043, 2.3026091299194307, 2.30262167418181, 2.3026072395129713], "accuracy": [0.09417514503002167, 0.09655263274908066, 0.09549596905708313, 0.09932637959718704, 0.09457138925790787, 0.09391097724437714], "val_loss": [1.9736602646963937, 1.9736613546098982, 1.9736621720450265, 1.973654065813337, 1.973661286490304, 1.9736576761518205], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.0976666659116745, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 2, 2, 8, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [0, 2, 2, 3, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [56, 32, 89, 69, 49, 69, 22, 65], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 3, 1, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 7, 8, 2, 5, 6, 9, 3, 2], [1, 2, 2, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 1, 3, 2, 2], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030620430911206, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 3, 2, 4, 4, 8, 4, 8, 4, 6, 6, 3, 6, 1, 0, 4, 9, 9, 7, 8, 2, 5, 6, 8, 3, 2], [3, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3030620430911206, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 2, 2, 8, 9, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [3, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [14, 32, 89, 69, 49, 69, 22, 65], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [1, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), grad))), grad))), tf.math.add(alpha, tf.math.pow(grad, tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [2, 8, 3, 2, 4, 4, 4, 1, 8, 4, 6, 6, 4, 6, 6, 0, 4, 1, 9, 7, 4, 0, 6, 6, 2, 3, 2, 2, 5, 9], [1, 2, 2, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 1, 1, 3, 0], [14, 32, 89, 69, 49, 32, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 30, 22, 8, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad)))))), tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))), alpha)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 4, 2, 8, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [3, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [14, 32, 89, 69, 49, 69, 22, 65], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 40, 25, 15, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))))))), tf.math.pow(grad, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3030837583283645, 2.3026058366821114, 2.3026050640182283, 2.3026114721906623, 2.302620689236902, 2.3026054194574703, 2.302613303834862, 2.302607666436849, 2.302607936472421, 2.3026213439039, 2.302616388381134, 2.3026044983133866, 2.302603629538884, 2.3026148743239596], "accuracy": [0.09219389408826828, 0.09496764093637466, 0.09853387624025345, 0.09760929644107819, 0.10011887550354004, 0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.09919429570436478, 0.09655263274908066, 0.09470347315073013, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97363315309797, 1.9736390795026506, 1.9736369677952357, 1.9736416680472237, 1.9736378533499581, 1.9736404418945312, 1.9736390795026506, 1.9736454146248954, 1.9736405781337194, 1.9736388070242745, 1.9736412593296595, 1.9736378533499581, 1.9736437116350447, 1.973649365561349], "val_accuracy": [0.0976666659116745, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 8, 3, 1, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 7, 8, 2, 5, 6, 9, 3, 2], [3, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [92, 32, 89, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3007706458054327, 2.302882620750118, 2.30270634672472, 2.303103996699339, 2.3020571746279486, 2.30195248673353], "accuracy": [0.09681680053472519, 0.09589222073554993, 0.09298639744520187, 0.0870426595211029, 0.09034473448991776, 0.09008057415485382], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [6, 8, 3, 2, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 2, 6, 7, 8, 0, 6, 2, 2, 3, 2, 6, 5, 3, 3, 9, 2, 4, 2, 9], [1, 2, 1, 0, 1, 2, 2, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 3, 1, 2, 1, 0], [14, 32, 89, 69, 25, 69, 22, 65, 52, 93], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [1, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3007706458054327, 2.302882620750118, 2.30270634672472, 2.303103996699339, 2.3020571746279486, 2.30195248673353], "accuracy": [0.09681680053472519, 0.09589222073554993, 0.09298639744520187, 0.0870426595211029, 0.09034473448991776, 0.09008057415485382], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 8, 3, 6, 2, 8, 8, 4, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 2, 8, 2, 5, 6, 9, 3, 2], [3, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 1, 1, 3, 2, 2, 0], [14, 32, 89, 69, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3007706458054327, 2.302882620750118, 2.30270634672472, 2.303103996699339, 2.3020571746279486, 2.30195248673353], "accuracy": [0.09681680053472519, 0.09589222073554993, 0.09298639744520187, 0.0870426595211029, 0.09034473448991776, 0.09008057415485382], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]