[{"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 4], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.12057142704725266, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003621647748744, 2.3011744221392685, 2.3020442629912274, 2.302678934571419, 2.305248122661814, 2.3376473377818807, 2.78124819345415, 5.090776797629555, 11.132079490376439, 22.75890497644233, 41.93248031035768, 70.92633831974948], "accuracy": [0.09708096832036972, 0.08347642421722412, 0.08598599582910538, 0.1002509593963623, 0.0940430611371994, 0.09945846349000931, 0.09893012791872025, 0.09642054885625839, 0.09932637959718704, 0.09840179979801178, 0.09734513610601425, 0.10236428678035736], "val_loss": [1.9704986299787248, 1.9726860863821847, 1.9737978662763322, 1.9750768116542272, 1.9825035503932409, 2.102012498038156, 3.179719856807164, 6.834185191563198, 14.797033037458148, 28.82063184465681, 50.538802010672434, 81.52894374302456], "val_accuracy": [0.09799999743700027, 0.06833333522081375, 0.09166666865348816, 0.08966666460037231, 0.10333333164453506, 0.09733333438634872, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.09733333438634872, 0.09533333033323288, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 1], [2, 0, 5, 0], [2, 2], [70], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [3, 7, 9, 8, 5, 5], [4, 3, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [1], [1], [], [6], [], [0, 1], [5], [1], [12]], "fitness": -0.11800000071525574, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003621332838455, 2.30118086419605, 2.3020347437570754, 2.3026668152804732, 2.305250959625617, 2.337814982100217, 2.7829159023487464, 5.096397485117068, 11.143952573121988, 22.779391205243115, 41.9639446191532, 70.97138935029153], "accuracy": [0.09708096832036972, 0.08347642421722412, 0.08651433140039444, 0.09998679161071777, 0.09509972482919693, 0.09945846349000931, 0.09906221181154251, 0.09589222073554993, 0.09932637959718704, 0.09774138033390045, 0.09734513610601425, 0.10236428678035736], "val_loss": [1.970499106815883, 1.9726835659572057, 1.9737966401236398, 1.975074086870466, 1.9825359753199987, 2.1026154926845004, 3.182879856654576, 6.8419840676443915, 14.811590194702148, 28.84408896309989, 50.57329341343471, 81.57657514299665], "val_accuracy": [0.09799999743700027, 0.0676666647195816, 0.08966666460037231, 0.08933333307504654, 0.10266666859388351, 0.09733333438634872, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.09733333438634872, 0.09533333033323288, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 6, 3], [0, 2, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.11800000071525574, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003621288121194, 2.3011757981397722, 2.302040029872662, 2.3026803146657566, 2.3052506694357864, 2.33768712886966, 2.781259935734499, 5.087884166504902, 11.122851130291927, 22.74023145313638, 41.90087964792671, 70.87853194813545], "accuracy": [0.09708096832036972, 0.08360850811004639, 0.08651433140039444, 0.1002509593963623, 0.0944393053650856, 0.09972262382507324, 0.09906221181154251, 0.09681680053472519, 0.09945846349000931, 0.09853387624025345, 0.09747721254825592, 0.10236428678035736], "val_loss": [1.970496654510498, 1.97268887928554, 1.973799160548619, 1.9750843729291643, 1.9825079781668526, 2.1021582739693776, 3.1787563732692172, 6.828864233834403, 14.784528732299805, 28.797999790736608, 50.503147670200896, 81.47739955357143], "val_accuracy": [0.0976666659116745, 0.06800000369548798, 0.09366666525602341, 0.09033333510160446, 0.10300000011920929, 0.09733333438634872, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.09733333438634872, 0.09533333033323288, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1], [5, 6, 5, 3, 4, 1, 1, 6, 6, 0, 2, 3, 7, 6, 5, 7, 3, 9, 2, 1, 6, 4, 3, 5, 2, 9, 0, 0, 3, 5, 3, 8, 8, 5, 5, 4, 3, 6, 4, 0, 6, 1, 0, 3, 2, 1, 6, 0, 6, 1, 8, 5, 3, 5, 8, 7, 4, 6, 8, 7, 9, 6, 4, 4, 0, 6, 9], [3, 0, 1, 2, 3, 2, 1, 2, 1, 3, 1, 2, 3, 0, 2, 1, 2, 1, 0, 2, 3, 0, 3, 3, 3, 1, 2, 1, 2, 3, 2, 2, 2, 1, 1, 2, 0, 2, 0], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 1, 4, 0, 3, 8, 2], [0, 3, 1, 5, 2, 3], [64], [0, 1], [0], [8], [1], [], [1], [], [2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(alpha)))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [1], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1], [2, 3, 3], [0, 4, 1, 5], [86, 14], [0, 1, 1], [0], [4], [1], [], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [5, 0, 1, 6, 8, 6, 3, 8, 6, 8, 9, 4, 5, 9], [1, 0, 2, 1, 2], [12, 4, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 19, 14, 5, 3], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.square(alpha), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), beta)))", "other_info": {"loss": [2.3026599341442777, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1, 1], [0], [2, 0], [80], [1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0], [], [3, 3, 1, 2], [86, 14], [0], [1], [], [1], [], [1, 1, 0], [0, 3, 9, 4, 6, 6, 6, 6, 0], [3, 0, 2, 1, 2], [52, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1], [8, 0, 5, 6], [1, 0], [35], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 4, 1], [3, 3, 1, 0], [16, 8, 38], [0], [1], [], [6], [], [0, 1, 0, 1, 0], [9], [1], [12, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302532301004521, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0], [1], [2, 5], [2], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 2, 9, 5], [0, 3, 1, 5, 4, 2], [42, 68], [0, 1], [1], [], [6], [], [1, 1, 1], [8], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [2, 5], [2], [], [0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1], [2, 3, 9], [0, 3, 1, 5, 4, 2], [28, 68], [1], [], [], [6], [], [1, 1, 1], [5], [1, 0, 2, 1, 2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 8], [1, 1, 2, 2, 0, 3, 3, 1, 0, 1], [38, 13, 76], [0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1], [9], [3, 3, 1, 0], [86, 14], [1], [0, 1], [], [], [], [0, 1, 0, 1, 0], [2, 6, 9], [1, 0, 2, 1, 2], [12, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, alpha)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302535607562546, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [8], [0, 0, 1, 2, 3, 2, 1, 2, 1], [49], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 4, 8, 1, 5, 5], [0, 3, 3, 2, 2], [86, 14], [1], [0], [5], [1], [], [0, 1, 0], [8], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.square(beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1], [2, 4, 3, 5], [0, 4, 1, 5], [48, 14], [0, 0], [0, 1], [8], [1], [], [1, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 4], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [4, 1, 4, 2, 5, 8, 4, 7], [2, 0, 2, 1, 2, 0, 2], [12, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 15, 8, 7, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.pow(alpha, tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 5, 7, 8], [3, 4, 1, 0], [86, 14], [1], [], [], [1], [], [0, 0, 0, 1, 0, 1, 0, 1, 1], [5, 7, 2, 0, 3], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), grad)), tf.math.add(alpha, tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, alpha)))", "other_info": {"loss": [9139.522725619598, 3.781088404476249e+18, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3778202.6428571427, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2], [], [0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0], [2, 8, 1], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [3, 4, 2, 0, 4, 2, 0, 0, 1, 8, 7, 8, 1, 3, 6, 9, 2, 4, 9, 9, 7, 6, 7, 7], [1, 0, 2, 1, 2, 0, 2, 0, 1, 0, 3, 1, 2, 0], [12, 12, 99, 28, 17, 94, 83, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 38, 24, 14, 8], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.pow(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), beta))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), sigma))), tf.math.add(alpha, tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [0], [2], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [2, 3, 3], [1, 2, 1, 4], [86, 14], [1], [], [5], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), beta), tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003621647748744, 2.30117546962536, 2.302038342299919, 2.3026684980035976, 2.3052576175534005, 2.3378023350511197, 2.7822070384715225, 5.089333649434906, 11.124065273205806, 22.740702694968586], "accuracy": [0.09708096832036972, 0.08374059200286865, 0.08598599582910538, 0.10130762308835983, 0.09417514503002167, 0.09959053993225098, 0.09906221181154251, 0.0956280529499054, 0.09932637959718704, 0.09813763201236725], "val_loss": [1.9704992430550712, 1.9726871762956892, 1.9737889426095145, 1.9750750405447823, 1.9825284821646554, 2.1025780269077847, 3.179962226322719, 6.830094064985003, 14.78530992780413, 28.7977910723005], "val_accuracy": [0.09799999743700027, 0.06700000166893005, 0.08933333307504654, 0.09233333170413971, 0.10433333367109299, 0.09733333438634872, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [2, 4, 6], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [0, 0, 2, 1, 2], [12]], "fitness": -0.081142857670784, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303001951626531, 2.304578076484669, 2.30408716746577, 2.302246517934158, 2.3034728906724937, 2.3019375472005175, 2.3028234001699297, 2.3027144703079667, 2.3032871552934546, 2.3021784265515923, 2.302155723692703, 2.30275093062112, 2.301263424824604, 2.301924099869905, 2.3017332476395596, 2.3012410233348604, 2.3023868404154637, 2.3017224700553873, 2.300674184532906, 2.3025467357048504, 2.301360798612672, 2.301333435742831, 2.302352110817763, 2.3002923433696587, 2.3035584999160554, 2.3008055340234455, 2.3017447783001943, 2.3024918549663247, 2.3011831125925246, 2.3017476985577687, 2.3005465670756817, 2.302791180596171, 2.3017713899830343, 2.301283146459287, 2.3012881274268047, 2.3003770928136613, 2.3014547877449636, 2.3012293628052225, 2.3008194555144788, 2.2994150857191045, 2.301092650833352, 2.301439631301745, 2.3004478661926777, 2.3013425198024557, 2.3016827727793827, 2.301949788960074, 2.3014913504039605, 2.301243432335582, 2.3007975131954264, 2.300984757120709, 2.3018180184659705, 2.301255516010174, 2.300316756947197, 2.3004076294438587, 2.3005359235803104, 2.301333022832461, 2.3013384652380235, 2.3010767516427273, 2.3001723799329503, 2.3013981045859127, 2.3008917401164766, 2.3012926951375507, 2.30129058766343, 2.3009372348593935, 2.300493340560899, 2.3009035711385444, 2.3006964304569673, 2.300349868567329, 2.3016323514539554, 2.3002230347013746, 2.3014409492013006, 2.3001376090505103, 2.299994829639137, 2.3006050929637745, 2.300316602893084, 2.2998945520318115, 2.3020447716658157, 2.3005829521882584, 2.300281710707201, 2.301478498600194], "accuracy": [0.08889182657003403, 0.08294808864593506, 0.09100515395402908, 0.08440100401639938, 0.08994849026203156, 0.09087307006120682, 0.08625016361474991, 0.08638224750757217, 0.08875974267721176, 0.08942015469074249, 0.09087307006120682, 0.08849557489156723, 0.09219389408826828, 0.09153348207473755, 0.08717474341392517, 0.09325055778026581, 0.09047681838274002, 0.09206181764602661, 0.08677849918603897, 0.09272222965955734, 0.09034473448991776, 0.09325055778026581, 0.09179764986038208, 0.09747721254825592, 0.08558975160121918, 0.09576013684272766, 0.09034473448991776, 0.09285431355237961, 0.09192973375320435, 0.08928807079792023, 0.09285431355237961, 0.09008057415485382, 0.08928807079792023, 0.09047681838274002, 0.09945846349000931, 0.09245806187391281, 0.08928807079792023, 0.09351472556591034, 0.09338264167308807, 0.09919429570436478, 0.09047681838274002, 0.09377889335155487, 0.09417514503002167, 0.08915598690509796, 0.09192973375320435, 0.09192973375320435, 0.09549596905708313, 0.09377889335155487, 0.1002509593963623, 0.09126931428909302, 0.0940430611371994, 0.09391097724437714, 0.1006472036242485, 0.09866596013307571, 0.09576013684272766, 0.09074098616838455, 0.09642054885625839, 0.09945846349000931, 0.09853387624025345, 0.09179764986038208, 0.0944393053650856, 0.09721305221319199, 0.09470347315073013, 0.09325055778026581, 0.0956280529499054, 0.09219389408826828, 0.1018359512090683, 0.09813763201236725, 0.09351472556591034, 0.09747721254825592, 0.09219389408826828, 0.09681680053472519, 0.107647605240345, 0.0948355570435524, 0.09800554811954498, 0.09298639744520187, 0.09298639744520187, 0.09351472556591034, 0.09721305221319199, 0.09589222073554993], "val_loss": [1.9713585717337472, 1.9713352748325892, 1.9713127272469657, 1.971290179661342, 1.971268926348005, 1.9712488991873605, 1.971229076385498, 1.971209934779576, 1.9711905206952776, 1.9711711747305733, 1.9711525780814034, 1.9711337089538574, 1.9711155210222517, 1.9710982186453683, 1.9710815293448312, 1.971064499446324, 1.9710475376674108, 1.9710321426391602, 1.971017565046038, 1.971003804888044, 1.9709901809692383, 1.9709769657679967, 1.9709649767194475, 1.9709535326276506, 1.9709420885358537, 1.9709309850420271, 1.9709208352225167, 1.9709110260009766, 1.970902647290911, 1.9708946091788155, 1.9708867073059082, 1.9708794866289412, 1.9708715166364397, 1.9708642278398787, 1.9708579608372279, 1.9708519663129533, 1.9708468573434013, 1.9708424976893835, 1.9708385467529297, 1.9708353451320104, 1.9708325522286552, 1.9708303724016463, 1.970827647617885, 1.9708251953125, 1.9708236285618372, 1.9708224024091447, 1.9708226748875208, 1.9708226748875208, 1.9708232879638672, 1.9708247865949358, 1.9708266258239746, 1.9708290781293596, 1.970832415989467, 1.970837116241455, 1.9708434513636999, 1.9708501952035087, 1.970858369554792, 1.9708675656999861, 1.970876829964774, 1.9708868435450964, 1.9708975383213587, 1.9709087780543737, 1.9709205627441406, 1.97093289239066, 1.9709459713527135, 1.9709593909127372, 1.9709734235491072, 1.9709877286638533, 1.9710027149745397, 1.971017837524414, 1.9710334369114466, 1.9710499899727958, 1.9710668155125208, 1.9710844584873743, 1.971101897103446, 1.9711204256330217, 1.9711392947605677, 1.9711589132036482, 1.971179417201451, 1.9711995124816895], "val_accuracy": [0.03733333200216293, 0.03766666725277901, 0.03799999877810478, 0.03866666555404663, 0.039000000804662704, 0.03933333232998848, 0.04066666588187218, 0.04066666588187218, 0.041333332657814026, 0.041333332657814026, 0.04266666620969772, 0.04333333298563957, 0.04333333298563957, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.04600000008940697, 0.04833333194255829, 0.04833333194255829, 0.04933333396911621, 0.050333332270383835, 0.050333332270383835, 0.050999999046325684, 0.05066666752099991, 0.05066666752099991, 0.05166666582226753, 0.052000001072883606, 0.052000001072883606, 0.05400000140070915, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.05666666850447655, 0.0573333315551281, 0.05766666680574417, 0.058666665107011795, 0.05999999865889549, 0.060333333909511566, 0.061666667461395264, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06266666948795319, 0.06266666948795319, 0.06266666948795319, 0.06266666948795319, 0.06233333423733711, 0.06300000101327896, 0.06333333253860474, 0.06400000303983688, 0.06466666609048843, 0.06599999964237213, 0.0663333311676979, 0.06700000166893005, 0.0676666647195816, 0.0676666647195816, 0.06833333522081375, 0.06866666674613953, 0.0689999982714653, 0.07000000029802322, 0.07066666334867477, 0.07199999690055847, 0.0729999989271164, 0.07233333587646484, 0.07333333045244217, 0.07333333045244217, 0.07266666740179062, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07699999958276749, 0.07800000160932541, 0.07866666465997696, 0.07866666465997696, 0.0793333351612091, 0.0793333351612091, 0.07833333313465118, 0.07900000363588333, 0.0793333351612091, 0.0793333351612091]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0], [2, 4], [4, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [0, 0, 2, 1, 2], [12]], "fitness": -0.081142857670784, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303001951626531, 2.304578076484669, 2.30408716746577, 2.302246517934158, 2.3034728906724937, 2.3019375472005175, 2.3028234001699297, 2.3027144703079667, 2.3032871552934546, 2.3021784265515923, 2.302155723692703, 2.30275093062112, 2.301263424824604, 2.301924099869905, 2.3017332476395596, 2.3012410233348604, 2.3023868404154637, 2.3017224700553873, 2.300674184532906, 2.3025467357048504, 2.301360798612672, 2.301333435742831, 2.302352110817763, 2.3002923433696587, 2.3035584999160554, 2.3008055340234455, 2.3017447783001943, 2.3024918549663247, 2.3011831125925246, 2.3017476985577687, 2.3005465670756817, 2.302791180596171, 2.3017713899830343, 2.301283146459287, 2.3012881274268047, 2.3003770928136613, 2.3014547877449636, 2.3012293628052225, 2.3008194555144788, 2.2994150857191045, 2.301092650833352, 2.301439631301745, 2.3004478661926777, 2.3013425198024557, 2.3016827727793827, 2.301949788960074, 2.3014913504039605, 2.301243432335582, 2.3007975131954264, 2.300984757120709, 2.3018180184659705, 2.301255516010174, 2.300316756947197, 2.3004076294438587, 2.3005359235803104, 2.301333022832461, 2.3013384652380235, 2.3010767516427273, 2.3001723799329503, 2.3013981045859127, 2.3008917401164766, 2.3012926951375507, 2.30129058766343, 2.3009372348593935, 2.300493340560899, 2.3009035711385444, 2.3006964304569673, 2.300349868567329, 2.3016323514539554, 2.3002230347013746, 2.3014409492013006, 2.3001376090505103, 2.299994829639137, 2.3006050929637745, 2.300316602893084, 2.2998945520318115, 2.3020447716658157, 2.3005829521882584, 2.300281710707201, 2.301478498600194], "accuracy": [0.08889182657003403, 0.08294808864593506, 0.09100515395402908, 0.08440100401639938, 0.08994849026203156, 0.09087307006120682, 0.08625016361474991, 0.08638224750757217, 0.08875974267721176, 0.08942015469074249, 0.09087307006120682, 0.08849557489156723, 0.09219389408826828, 0.09153348207473755, 0.08717474341392517, 0.09325055778026581, 0.09047681838274002, 0.09206181764602661, 0.08677849918603897, 0.09272222965955734, 0.09034473448991776, 0.09325055778026581, 0.09179764986038208, 0.09747721254825592, 0.08558975160121918, 0.09576013684272766, 0.09034473448991776, 0.09285431355237961, 0.09192973375320435, 0.08928807079792023, 0.09285431355237961, 0.09008057415485382, 0.08928807079792023, 0.09047681838274002, 0.09945846349000931, 0.09245806187391281, 0.08928807079792023, 0.09351472556591034, 0.09338264167308807, 0.09919429570436478, 0.09047681838274002, 0.09377889335155487, 0.09417514503002167, 0.08915598690509796, 0.09192973375320435, 0.09192973375320435, 0.09549596905708313, 0.09377889335155487, 0.1002509593963623, 0.09126931428909302, 0.0940430611371994, 0.09391097724437714, 0.1006472036242485, 0.09866596013307571, 0.09576013684272766, 0.09074098616838455, 0.09642054885625839, 0.09945846349000931, 0.09853387624025345, 0.09179764986038208, 0.0944393053650856, 0.09721305221319199, 0.09470347315073013, 0.09325055778026581, 0.0956280529499054, 0.09219389408826828, 0.1018359512090683, 0.09813763201236725, 0.09351472556591034, 0.09747721254825592, 0.09219389408826828, 0.09681680053472519, 0.107647605240345, 0.0948355570435524, 0.09800554811954498, 0.09298639744520187, 0.09298639744520187, 0.09351472556591034, 0.09721305221319199, 0.09589222073554993], "val_loss": [1.9713585717337472, 1.9713352748325892, 1.9713127272469657, 1.971290179661342, 1.971268926348005, 1.9712488991873605, 1.971229076385498, 1.971209934779576, 1.9711905206952776, 1.9711711747305733, 1.9711525780814034, 1.9711337089538574, 1.9711155210222517, 1.9710982186453683, 1.9710815293448312, 1.971064499446324, 1.9710475376674108, 1.9710321426391602, 1.971017565046038, 1.971003804888044, 1.9709901809692383, 1.9709769657679967, 1.9709649767194475, 1.9709535326276506, 1.9709420885358537, 1.9709309850420271, 1.9709208352225167, 1.9709110260009766, 1.970902647290911, 1.9708946091788155, 1.9708867073059082, 1.9708794866289412, 1.9708715166364397, 1.9708642278398787, 1.9708579608372279, 1.9708519663129533, 1.9708468573434013, 1.9708424976893835, 1.9708385467529297, 1.9708353451320104, 1.9708325522286552, 1.9708303724016463, 1.970827647617885, 1.9708251953125, 1.9708236285618372, 1.9708224024091447, 1.9708226748875208, 1.9708226748875208, 1.9708232879638672, 1.9708247865949358, 1.9708266258239746, 1.9708290781293596, 1.970832415989467, 1.970837116241455, 1.9708434513636999, 1.9708501952035087, 1.970858369554792, 1.9708675656999861, 1.970876829964774, 1.9708868435450964, 1.9708975383213587, 1.9709087780543737, 1.9709205627441406, 1.97093289239066, 1.9709459713527135, 1.9709593909127372, 1.9709734235491072, 1.9709877286638533, 1.9710027149745397, 1.971017837524414, 1.9710334369114466, 1.9710499899727958, 1.9710668155125208, 1.9710844584873743, 1.971101897103446, 1.9711204256330217, 1.9711392947605677, 1.9711589132036482, 1.971179417201451, 1.9711995124816895], "val_accuracy": [0.03733333200216293, 0.03766666725277901, 0.03799999877810478, 0.03866666555404663, 0.039000000804662704, 0.03933333232998848, 0.04066666588187218, 0.04066666588187218, 0.041333332657814026, 0.041333332657814026, 0.04266666620969772, 0.04333333298563957, 0.04333333298563957, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.04600000008940697, 0.04833333194255829, 0.04833333194255829, 0.04933333396911621, 0.050333332270383835, 0.050333332270383835, 0.050999999046325684, 0.05066666752099991, 0.05066666752099991, 0.05166666582226753, 0.052000001072883606, 0.052000001072883606, 0.05400000140070915, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.05666666850447655, 0.0573333315551281, 0.05766666680574417, 0.058666665107011795, 0.05999999865889549, 0.060333333909511566, 0.061666667461395264, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06266666948795319, 0.06266666948795319, 0.06266666948795319, 0.06266666948795319, 0.06233333423733711, 0.06300000101327896, 0.06333333253860474, 0.06400000303983688, 0.06466666609048843, 0.06599999964237213, 0.0663333311676979, 0.06700000166893005, 0.0676666647195816, 0.0676666647195816, 0.06833333522081375, 0.06866666674613953, 0.0689999982714653, 0.07000000029802322, 0.07066666334867477, 0.07199999690055847, 0.0729999989271164, 0.07233333587646484, 0.07333333045244217, 0.07333333045244217, 0.07266666740179062, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07699999958276749, 0.07800000160932541, 0.07866666465997696, 0.07866666465997696, 0.0793333351612091, 0.0793333351612091, 0.07833333313465118, 0.07900000363588333, 0.0793333351612091, 0.0793333351612091]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [1], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 4], [0, 4, 1, 5], [86, 14], [1], [1], [], [1], [], [0, 1, 0, 1], [6, 0], [2, 1], [12]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.negative(alpha))", "other_info": {"loss": [2.3030230805952914, 2.3046710811129274, 2.304231640590637, 2.3024127978721802, 2.30369841984754, 2.302165092053336], "accuracy": [0.08889182657003403, 0.08268392831087112, 0.09087307006120682, 0.08426892012357712, 0.09021265059709549, 0.08915598690509796], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 7], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 0, 0], [5, 5, 9], [1, 0, 2, 1, 2], [12]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 3, 3, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030230805952914, 2.3046710811129274, 2.304231640590637, 2.3024127978721802, 2.30369841984754, 2.302165092053336], "accuracy": [0.08889182657003403, 0.08268392831087112, 0.09087307006120682, 0.08426892012357712, 0.09021265059709549, 0.08915598690509796], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]