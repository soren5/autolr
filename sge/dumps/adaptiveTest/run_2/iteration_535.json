[{"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [5, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.4462857246398926, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.329238225377357, 2.184541189439104, 3.908646592185671, 2.3043902676103296, 2.3030983695359106, 2.3030248301423786, 2.303026760920337], "accuracy": [0.18214239180088043, 0.1834632158279419, 0.13155461847782135, 0.09893012791872025, 0.09655263274908066, 0.09589222073554993, 0.09708096832036972], "val_loss": [1.9687318120683943, 1.547253097806658, 1.9762052127293177, 1.9741415296282088, 1.9737986837114607, 1.9736742973327637, 1.9736520222255163], "val_accuracy": [0.1003333330154419, 0.32233333587646484, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.10133333504199982, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 4, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 2, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 97, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.42800000309944153, "mapping_values": [1, 18, 18, 11, 7, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad)))), tf.math.negative(tf.math.divide_no_nan(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.3308767182810306, 2.194205223136275, 2.329761410811322, 2.3219731170204354, 2.304307624286334, 2.3032631857709136, 2.3031332170360233, 2.3031256404204563], "accuracy": [0.18174614012241364, 0.18478403985500336, 0.21344605088233948, 0.1442345827817917, 0.09708096832036972, 0.0940430611371994, 0.09972262382507324, 0.09628847241401672], "val_loss": [1.9679468018668038, 1.6345201560429163, 1.7620904786246163, 1.9750567844935827, 1.9737370354788644, 1.9736806324550085, 1.973686967577253, 1.9736604690551758], "val_accuracy": [0.1003333330154419, 0.33799999952316284, 0.38966667652130127, 0.10233332961797714, 0.09700000286102295, 0.10133333504199982, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.3725714385509491, "mapping_values": [1, 13, 13, 8, 5, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.3304762674313273, 2.2219463965801785, 2.307550848341259, 2.3053450718563404, 2.303270228141177, 2.3032940431372397, 2.3029928343438706], "accuracy": [0.18214239180088043, 0.17302866280078888, 0.19218069314956665, 0.10038304328918457, 0.09549596905708313, 0.0878351628780365, 0.09787346422672272], "val_loss": [1.9684693472726005, 1.4453589575631278, 1.9768238067626953, 1.9737533841814314, 1.973602363041469, 1.9736051559448242, 1.973628044128418], "val_accuracy": [0.1003333330154419, 0.36266666650772095, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [5, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.3662857115268707, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.3304769015346833, 2.214643387148299, 2.3446940434150663, 2.4844628770070196, 2.3040399596738683, 2.3031484186688687, 2.303001670506117], "accuracy": [0.18214239180088043, 0.17923656105995178, 0.218465194106102, 0.12323339283466339, 0.09628847241401672, 0.09655263274908066, 0.09826971590518951], "val_loss": [1.9684766360691615, 1.4183683054787772, 2.305574417114258, 1.9756229945591517, 1.974029813494001, 1.9737191200256348, 1.9736521584647042], "val_accuracy": [0.1003333330154419, 0.33533334732055664, 0.2486666738986969, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 1, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 0, 1, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.36085712909698486, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.330475484438387, 2.2189155894027426, 2.2842353243381277, 4.2001149303893275, 2.303919113386167, 2.3021816465407787, 2.288395832495336], "accuracy": [0.18214239180088043, 0.17804782092571259, 0.20261524617671967, 0.13736626505851746, 0.1010434553027153, 0.10989301651716232, 0.15281997621059418], "val_loss": [1.9684762273515974, 1.433645554951259, 1.747267723083496, 1.9759156363351005, 1.9719843864440918, 1.9725779805864607, 1.790245805467878], "val_accuracy": [0.1003333330154419, 0.33266666531562805, 0.2853333353996277, 0.10199999809265137, 0.10733333230018616, 0.0976666659116745, 0.2826666533946991]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.35828572511672974, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.330475107490772, 2.2126622216230087, 2.509883839802861, 2.3041733379109566, 2.3039003195716656, 2.3037855479349125, 2.3029022523204583], "accuracy": [0.1822744756937027, 0.1802932173013687, 0.1628582775592804, 0.10460969805717468, 0.10157178342342377, 0.10196803510189056, 0.09972262382507324], "val_loss": [1.9684314727783203, 1.4098326138087682, 1.9760524885995048, 1.9738989557538713, 1.9741040638514928, 1.9738036564418249, 1.9736815861293249], "val_accuracy": [0.1003333330154419, 0.3296666741371155, 0.09700000286102295, 0.10233332961797714, 0.09700000286102295, 0.10133333504199982, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 0, 1, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.3540000021457672, "mapping_values": [1, 14, 14, 9, 5, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.330508665968603, 2.1864304046715257, 5.358991366682304, 2.3042240525438267, 2.3030183649082003, 2.30276887285522, 2.3012399041436966], "accuracy": [0.18214239180088043, 0.18293488025665283, 0.11293092370033264, 0.1022322028875351, 0.10210011899471283, 0.10011887550354004, 0.11147800832986832], "val_loss": [1.9686416217258997, 1.8397135053362166, 1.975809097290039, 1.9740245001656669, 1.973511014665876, 1.9732637405395508, 1.961756365639823], "val_accuracy": [0.1003333330154419, 0.22300000488758087, 0.10199999809265137, 0.10199999809265137, 0.12333333492279053, 0.10133333504199982, 0.18933333456516266]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.35199999809265137, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.3309620434440217, 2.1957406017522394, 2.0709627623791707, 5.422591098342762, 2.31179573557648, 2.3066094276880182, 2.3038430523799946], "accuracy": [0.1818782240152359, 0.1838594675064087, 0.2715625464916229, 0.09615638852119446, 0.09457138925790787, 0.09972262382507324, 0.10210011899471283], "val_loss": [1.9678286824907576, 1.5436808722359794, 14.777573721749443, 1.9797461373465401, 1.9743774959019251, 1.9739924158368791, 1.9751866885593958], "val_accuracy": [0.1003333330154419, 0.3253333270549774, 0.10233332961797714, 0.1003333330154419, 0.0976666659116745, 0.10133333504199982, 0.1483333259820938]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.34599998593330383, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.330508665968603, 2.1866217241027743, 5.543438786544568, 2.304274595046733, 2.3030426293127353, 2.303024739605671, 2.303030178484238], "accuracy": [0.18214239180088043, 0.1826707124710083, 0.11081759631633759, 0.1022322028875351, 0.1002509593963623, 0.09655263274908066, 0.09721305221319199], "val_loss": [1.9686416217258997, 1.8502318518502372, 1.9757820538112096, 1.9739527021135603, 1.9737251145499093, 1.9736459595816476, 1.9736411230904716], "val_accuracy": [0.1003333330154419, 0.22499999403953552, 0.10199999809265137, 0.10199999809265137, 0.10133333504199982, 0.10133333504199982, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.18657143414020538, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8210053371794235, 2.307033277064928, 2.3044360139035844, 2.303391112312586, 2.3034460657009155, 2.302683567405613, 2.3028869110563917, 2.301065463148104, 2.193873107142027, 2.3084955860705283, 2.3041021242873576, 2.3030884188116816, 2.30290302923563], "accuracy": [0.1814819723367691, 0.1014397069811821, 0.09496764093637466, 0.09668471664190292, 0.09589222073554993, 0.1072513535618782, 0.09906221181154251, 0.10342095047235489, 0.17751948535442352, 0.09959053993225098, 0.09721305221319199, 0.09800554811954498, 0.09826971590518951], "val_loss": [1.9784287043980189, 1.9745468412126814, 1.973926612309047, 1.9737438474382674, 1.9736689840044295, 1.9736610821315221, 1.9728615624564034, 1.9635331971304757, 1.98186799458095, 1.9752043315342493, 1.9738842419215612, 1.973555360521589, 1.9735427583966936], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.10233332961797714, 0.10633333027362823, 0.18433333933353424, 0.0976666659116745, 0.10266666859388351, 0.0976666659116745, 0.10266666859388351, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 39, 19, 83, 81, 22, 61], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.13085713982582092, "mapping_values": [1, 28, 28, 17, 11, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, alpha)), tf.math.negative(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.5282961973629416, 3.2484163558714583, 2.597276409619268, 2.4999030666769517, 4.29708629170303, 4.637417890392259, NaN], "accuracy": [0.19878484308719635, 0.0952318087220192, 0.11676132678985596, 0.09760929644107819, 0.1080438494682312, 0.10117553919553757, 0.1022322028875351], "val_loss": [5.915572575160435, 2.2204978806631908, 2.0609753472464427, 2.120461940765381, 2.1545043672834123, 11042.04017857143, NaN], "val_accuracy": [0.10233332961797714, 0.16766667366027832, 0.1003333330154419, 0.10466666519641876, 0.0976666659116745, 0.16033333539962769, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 2, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 8, 6, 2, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2156.2801635267556, 3786.6624327218606, 4312.258860489192, 4849.496770949207, 3847.110859256332, 3231.60735376973, 3832.713128413003, 4323.4140456832865, 4834.204398692701, 3872.0406024788253, 3275.1497829660466], "accuracy": [0.09536388516426086, 0.09906221181154251, 0.10328886657953262, 0.10038304328918457, 0.09245806187391281, 0.10091137140989304, 0.0948355570435524, 0.09787346422672272, 0.09893012791872025, 0.09417514503002167, 0.09879804402589798], "val_loss": [5316.340122767857, 3911.4923270089284, 2307.87744140625, 884.892578125, 6580.345424107143, 5172.857421875, 3757.2795758928573, 2347.2200753348216, 881.6324811662946, 6396.159877232143, 5214.545619419643], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.09700000286102295, 0.0976666659116745, 0.10266666859388351, 0.09833333641290665, 0.09700000286102295, 0.1003333330154419, 0.0976666659116745, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 1, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 83, 19, 83, 81, 22, 61], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [5, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [7, 6, 7, 2, 2, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1, 6], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 42, 26, 16, 7], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.square(tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), beta)), sigma), tf.math.pow(tf.math.pow(tf.math.multiply(sigma, tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha)), sigma)), beta)), tf.math.divide_no_nan(sigma, alpha)), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302686040207159, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 0, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 2, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [5, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 6, 1, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 32, 20, 12, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.pow(tf.math.pow(tf.math.pow(sigma, sigma), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), beta)), tf.math.multiply(tf.math.multiply(sigma, sigma), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(sigma)))))))))", "other_info": {"loss": [2.3039286341633796, 2.304498903818449, 2.305005502014301, 2.3042066737787046, 2.304504402120588, 2.3041401650092825], "accuracy": [0.09642054885625839, 0.09285431355237961, 0.09694888442754745, 0.09681680053472519, 0.09734513610601425, 0.09774138033390045], "val_loss": [1.9747914586748396, 1.9764889989580428, 1.9750873701913017, 1.9747915949140276, 1.974221638270787, 1.9740142822265625], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.09833333641290665, 0.10233332961797714, 0.0976666659116745, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 4, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 9, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 1, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 39, 19, 83, 81, 22, 61], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.09028571099042892, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.527540909474032, 3.393469872239747, 2.5991303938065915, 2.5194562900146678, 2.5434308072532157, 2.5609636262990167, 2.5566811819496], "accuracy": [0.19852067530155182, 0.09589222073554993, 0.1336679458618164, 0.09800554811954498, 0.1018359512090683, 0.10157178342342377, 0.10236428678035736], "val_loss": [6.422594751630511, 2.2640882900782993, 2.0928597450256348, 2.1433890887669156, 2.1912082263401578, 2.032740047999791, 2.1800269399370467], "val_accuracy": [0.10233332961797714, 0.15399999916553497, 0.1003333330154419, 0.11800000071525574, 0.10066666454076767, 0.0976666659116745, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 2, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 2, 2, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 84, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [5, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [5, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.0714285746216774, "mapping_values": [1, 18, 18, 11, 7, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.divide_no_nan(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302625911236754, 2.305497993551871, 2.30518996833637, 2.3076502169600377, 2.3122809731555636, 2.3136723395808496, 2.316656353986652, 2.320852596336872, 2.3304006049126333, 2.342142916405914, 2.3662069282196674, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.08347642421722412, 0.08902391046285629, 0.08149518072605133, 0.08083476126194, 0.07819310575723648, 0.07621186226606369, 0.07634394615888596, 0.0730418711900711, 0.08241976052522659, 0.07713644206523895, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.971701008932931, 1.9730522973196847, 1.9741293362208776, 1.975792067391532, 1.9779845646449499, 1.9801553317478724, 1.9824747358049666, 1.9855446815490723, 1.9908559662955148, 2.0020751953125, 2.036929198673793, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.021666666492819786, 0.023666666820645332, 0.02666666731238365, 0.03133333474397659, 0.03866666555404663, 0.047333333641290665, 0.0663333311676979, 0.09033333510160446, 0.10166666656732559, 0.10233332961797714, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3020602668895225, 2.3032710684162985, 2.3015561819926798, 2.3019614470334115, 2.3033968986946562, 2.3020898803917014], "accuracy": [0.09417514503002167, 0.08585391938686371, 0.09708096832036972, 0.08796724677085876, 0.0886276587843895, 0.09509972482919693], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 6, 3, 2, 2, 8, 5, 9, 0, 0, 6, 3, 2, 2, 2, 0, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 0, 1, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [81, 46, 91, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [1, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [8, 2, 6, 9, 1, 8, 3, 0], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3020602668895225, 2.3032710684162985, 2.3015561819926798, 2.3019614470334115, 2.3033968986946562, 2.3020898803917014], "accuracy": [0.09417514503002167, 0.08585391938686371, 0.09708096832036972, 0.08796724677085876, 0.0886276587843895, 0.09509972482919693], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]