[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 2, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.8102856874465942, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3428185210645536, 2.1817162300790574, 1.9384691135018273, 1.6109695012905436, 1.0773781269076257, 0.8733210189782429, 0.7541007747928528, 0.708250931020678, 0.6729942990284649, 0.6604874253572175, 0.6232673054940634, 0.5903006930629008, 0.5981099531005292, 0.5791145411653762, 0.550438032685931, 0.5831738673873849, 0.5325716717084795, 0.5550593903287999, 0.5196627884524578, 0.5126975203360297, 0.5195009447265184, 0.47665047660920723, 0.4715316565186986, 0.477299615199524, 0.46241439089499853, 0.4663148188768928, 0.4783058207166697, 0.43689884745512564, 0.43401576746110004, 0.4401939355694087, 0.45513274718930674, 0.43319513279024036, 0.41384692631613673, 0.4104427781166134, 0.42682426077515584, 0.4013484040106198, 0.393263416936794, 0.42977077388067475, 0.37781386949115064, 0.380665619875446, 0.3714792409301859, 0.35780970210003077, 0.372242060910284, 0.3565666250123828], "accuracy": [0.21978603303432465, 0.22995641827583313, 0.3337736129760742, 0.445779949426651, 0.6149781942367554, 0.6767930388450623, 0.713379979133606, 0.7279091477394104, 0.7371549606323242, 0.7481178045272827, 0.7602694630622864, 0.7684586048126221, 0.7695152759552002, 0.778232753276825, 0.7881389260292053, 0.7757231593132019, 0.7968564033508301, 0.7852331399917603, 0.7981772422790527, 0.807158887386322, 0.7960638999938965, 0.8169330358505249, 0.8222163319587708, 0.8152159452438354, 0.8187822103500366, 0.8286884427070618, 0.8124422430992126, 0.833179235458374, 0.8348963260650635, 0.8358209133148193, 0.8182538747787476, 0.8319904804229736, 0.8380662798881531, 0.8421608805656433, 0.8370096683502197, 0.8428213000297546, 0.8507462739944458, 0.833179235458374, 0.8539162874221802, 0.8560295701026917, 0.8601241707801819, 0.8618412613868713, 0.8605204224586487, 0.8615770936012268], "val_loss": [1.9699719292776925, 1.8311520303998674, 1.6258525507790702, 1.3036830084664481, 0.7931567600795201, 0.5311862060001918, 0.5307942799159459, 0.5053802217755999, 0.46232710565839497, 0.4722208295549665, 0.4847921133041382, 0.4488484859466553, 0.46041738986968994, 0.43415399960109163, 0.4163260545049395, 0.38989724431719097, 0.40935033559799194, 0.4129018783569336, 0.46851909160614014, 0.4161209464073181, 0.37669938802719116, 0.3800802230834961, 0.41717290026800974, 0.42705186775752474, 0.3923613258770534, 0.3635899765150888, 0.3763872725622995, 0.3800284096172878, 0.43326311452048166, 0.3713994196483067, 0.38794267177581787, 0.3602460537637983, 0.4226272702217102, 0.35184134755815777, 0.35253420897892546, 0.37511483260563444, 0.3967669606208801, 0.3474940998213632, 0.3403835552079337, 0.3385434406144278, 0.33997642993927, 0.3611856869288853, 0.3560685430254255, 0.3711110608918326], "val_accuracy": [0.10133333504199982, 0.34933334589004517, 0.32866665720939636, 0.5963333249092102, 0.6486666798591614, 0.7590000033378601, 0.7456666827201843, 0.7543333172798157, 0.7929999828338623, 0.7746666669845581, 0.7879999876022339, 0.7846666574478149, 0.79666668176651, 0.79666668176651, 0.8103333115577698, 0.8309999704360962, 0.8256666660308838, 0.8063333630561829, 0.8009999990463257, 0.809333324432373, 0.8336666822433472, 0.8346666693687439, 0.812333345413208, 0.8063333630561829, 0.824999988079071, 0.8376666903495789, 0.840666651725769, 0.8376666903495789, 0.8036666512489319, 0.8389999866485596, 0.8180000185966492, 0.843666672706604, 0.8119999766349792, 0.8550000190734863, 0.8456666469573975, 0.8243333101272583, 0.8273333311080933, 0.8556666374206543, 0.8583333492279053, 0.8506666421890259, 0.8579999804496765, 0.8420000076293945, 0.8536666631698608, 0.8413333296775818]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 2, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.8040000200271606, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.342805697224821, 2.1833110773300435, 1.9089771566799114, 1.6957066195311248, 1.169908709199185, 0.907660836186848, 0.7403362686088324, 0.755687561025394, 0.6873062219460406, 0.6701539501049861, 0.6220725817277903, 0.6428227574203969, 0.5783828581486395, 0.5855445195387509, 0.5560287123484744, 0.5822144423288802, 0.5343369509896362, 0.583323610551668, 0.535426272156846, 0.5125362089619959, 0.5363031089061823, 0.4767765330128335, 0.4847796966276621, 0.49177526171574926, 0.4724704159359497, 0.46826151960860657, 0.48781316011667786], "accuracy": [0.21978603303432465, 0.22956016659736633, 0.34420815110206604, 0.41962751746177673, 0.5831462144851685, 0.6621318459510803, 0.72672039270401, 0.7137762308120728, 0.7358341217041016, 0.7415136694908142, 0.7589486241340637, 0.7565711140632629, 0.7777044177055359, 0.7730814814567566, 0.7905164361000061, 0.7737419009208679, 0.793950617313385, 0.7784969210624695, 0.793422281742096, 0.8080834746360779, 0.7947431206703186, 0.8161405324935913, 0.8198388814926147, 0.8104609847068787, 0.8177255392074585, 0.8249900937080383, 0.8124422430992126], "val_loss": [1.9699155943734306, 1.8405754906790597, 1.7300782203674316, 1.0735860892704554, 0.6209941932133266, 0.6235025780541557, 0.5529764039175851, 0.5448154892240252, 0.46210130623408724, 0.46364048549107145, 0.4818882942199707, 0.44081367765154156, 0.5162981237683978, 0.42469836132866995, 0.44009545019694735, 0.39904392617089407, 0.41449059758867535, 0.41144111326762606, 0.4132176807948521, 0.389240562915802, 0.3824641363961356, 0.3657511387552534, 0.3925416810171945, 0.39013454743794035, 0.38383175645555767, 0.3672231691224234, 0.3787788322993687], "val_accuracy": [0.10133333504199982, 0.33799999952316284, 0.2423333376646042, 0.6393333077430725, 0.7149999737739563, 0.7170000076293945, 0.7319999933242798, 0.7443333268165588, 0.7906666398048401, 0.7863333225250244, 0.7799999713897705, 0.793666660785675, 0.7540000081062317, 0.8103333115577698, 0.7983333468437195, 0.8209999799728394, 0.8163333535194397, 0.8040000200271606, 0.8190000057220459, 0.8213333487510681, 0.8366666436195374, 0.8453333377838135, 0.8253333568572998, 0.8246666789054871, 0.8259999752044678, 0.8326666951179504, 0.8323333263397217]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 1, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 0, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [8, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 2, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.7988571524620056, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, alpha)), grad)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.470961926777318, 2.2346640771894313, 2.8492792941292344, 2.119148854629286, 1.9844142110702652, 2.126763064737538, 1.5620577112716092, 1.3910009158112668, 1.1116566822245735, 1.080673424338841, 0.901362527394575, 0.8084857364325019, 0.7880439165482164, 0.6965619863110951, 0.677165589162844, 0.6451557322720558, 0.6688154474020854, 0.618454767082818, 0.640377980898148, 0.6051237517816516, 0.576245160882877, 0.5623181260076134, 0.552165921487671, 0.5474585938557595, 0.5139975371125856, 0.5081581058534947, 0.5153560086468727, 0.4730089226411145, 0.48976598511345554, 0.46442587358556986, 0.4466534530041067, 0.43679500566954155, 0.46342500720309415, 0.43831675754262944, 0.42697267286088786, 0.46194722745806205, 0.40348707144806145, 0.4170790644464177, 0.4123854101483596, 0.41107270640389104, 0.4174571546423689], "accuracy": [0.1916523575782776, 0.17434948682785034, 0.16232994198799133, 0.25795799493789673, 0.3661339282989502, 0.260071337223053, 0.45608243346214294, 0.5431250929832458, 0.6061286330223083, 0.6337339878082275, 0.6798309087753296, 0.7049266695976257, 0.713908314704895, 0.741909921169281, 0.7491744756698608, 0.7577598690986633, 0.7577598690986633, 0.7711002230644226, 0.7592127919197083, 0.7745344042778015, 0.7796856164932251, 0.7964601516723633, 0.7984414100646973, 0.7972526550292969, 0.8084797263145447, 0.8132346868515015, 0.8108572363853455, 0.8234050869941711, 0.8211596608161926, 0.8271034359931946, 0.8308017253875732, 0.8368775844573975, 0.83119797706604, 0.8388587832450867, 0.8408400416374207, 0.8314621448516846, 0.8498216867446899, 0.842028796672821, 0.8455950617790222, 0.8471800088882446, 0.8461233377456665], "val_loss": [1.9596866880144392, 1.91044739314488, 1.8937790053231376, 1.359928744179862, 1.2018608706338065, 1.6104584080832345, 0.906724180494036, 0.915292773927961, 0.7037419591631208, 0.5594356570925031, 0.5823464904512677, 0.5885152476174491, 0.49456119537353516, 0.537446311541966, 0.4766154800142561, 0.4743335928235735, 0.4998659576688494, 0.5503144434520176, 0.5214439289910453, 0.45478316715785433, 0.41410742487226215, 0.4220248886517116, 0.4103795034544809, 0.40763115882873535, 0.40893384388514925, 0.4266901527132307, 0.42298654999051777, 0.3915542789867946, 0.38621188913072857, 0.3770471044949123, 0.3731397134917123, 0.3785329631396702, 0.3721092939376831, 0.38359097072056364, 0.36404344865253996, 0.36780539580753874, 0.37157359293528963, 0.39828862462724957, 0.37453456435884747, 0.40882186378751484, 0.3500716430800302], "val_accuracy": [0.20933333039283752, 0.2473333328962326, 0.20000000298023224, 0.4896666705608368, 0.500333309173584, 0.32866665720939636, 0.637333333492279, 0.6476666927337646, 0.7110000252723694, 0.7543333172798157, 0.7153333425521851, 0.7463333606719971, 0.784333348274231, 0.7720000147819519, 0.7829999923706055, 0.7996666431427002, 0.7963333129882812, 0.7723333239555359, 0.7749999761581421, 0.7990000247955322, 0.824999988079071, 0.8206666707992554, 0.8296666741371155, 0.8309999704360962, 0.8223333358764648, 0.8196666836738586, 0.7979999780654907, 0.8403333425521851, 0.8366666436195374, 0.8376666903495789, 0.8443333506584167, 0.8496666550636292, 0.8493333458900452, 0.8393333554267883, 0.8513333201408386, 0.856333315372467, 0.8453333377838135, 0.8266666531562805, 0.8483333587646484, 0.8263333439826965, 0.856333315372467]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 0, 2, 4, 1, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [8, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.7785714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 0, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, alpha)), tf.math.add(beta, grad))), grad), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2935503116451974, 2.278270919199208, 2.259274977136203, 2.238023120115273, 2.213822421396508, 2.1831521872342963, 2.148174510010324, 2.1009931553939016, 2.047669371845637, 1.981263850500807, 1.9047654042264741, 1.8220542961375557, 1.7342394168240567, 1.6498996938114168, 1.5632045041647222, 1.49383811054134, 1.4190729916324043, 1.3621463044098165, 1.3092921727904396, 1.2656595189699549, 1.2280446261525737, 1.1933520498717891, 1.1552455699391857, 1.1309879049570206, 1.1099085758044467, 1.0826496114631323, 1.0594551239850074, 1.0409905240126667, 1.0253086574105004, 1.0065229163351248, 0.9768322779596631, 0.9775386489283187, 0.9611353842006966, 0.9455173816647527, 0.9280799438042994, 0.9210920450064201, 0.906588753319026, 0.9099752077211116, 0.8942121133403126, 0.889240501051676, 0.872367110116654, 0.8723436108181553, 0.8669980970182911, 0.8592712300375799, 0.8432269388138893, 0.8400969759206478, 0.8352407648846489, 0.834806348393858, 0.8318361713586782, 0.8179351891493202, 0.8241947521040421, 0.8141277688857413, 0.8049591424962422, 0.7981852349698378, 0.8008235001434912, 0.7947025481011685, 0.8002278450977344, 0.786016202220166, 0.7774572024145745, 0.7706631043835591, 0.7807826662753252, 0.7741647159434455, 0.7577392126921539, 0.7589891091030445, 0.7697659141556651, 0.7552104243166521, 0.7489055127846236, 0.7475588674542769, 0.7445399171451709, 0.7448848653400201, 0.7408908039288136, 0.7319374950948314, 0.7367755991199217, 0.7350607616569798, 0.7361016881039208, 0.7256769247814617, 0.7249119122030555, 0.7234785273059043, 0.7214366173180512, 0.7113702511270962, 0.711095888223221, 0.7183507790875362, 0.7152587887538879, 0.7134272743446038, 0.7049180457321502, 0.6981627449792814, 0.6967836206599533, 0.7014069763534908, 0.6972838369783803, 0.6997721879363548, 0.6951025827386675, 0.6942753762916063, 0.7009612310674322, 0.6923602426670892, 0.6847036806678318, 0.6901194999923701, 0.684568860566753, 0.6760524057315372, 0.6851726426125329, 0.6691766606818227], "accuracy": [0.11121384054422379, 0.15149913728237152, 0.2040681540966034, 0.24805177748203278, 0.2860916554927826, 0.3261128067970276, 0.3486989736557007, 0.3761722445487976, 0.39307886362075806, 0.41909918189048767, 0.4344208240509033, 0.4531765878200531, 0.46070531010627747, 0.4885748326778412, 0.5103685259819031, 0.5156518220901489, 0.5392946600914001, 0.5468233823776245, 0.5569937825202942, 0.5690133571624756, 0.5823537111282349, 0.5910711884498596, 0.5971469879150391, 0.6135252714157104, 0.618280291557312, 0.6219785809516907, 0.6284506916999817, 0.6376964449882507, 0.6386210322380066, 0.6476026773452759, 0.6509047746658325, 0.6572447419166565, 0.6579051613807678, 0.6662263870239258, 0.6762647032737732, 0.6716417670249939, 0.6749438643455505, 0.6760005354881287, 0.687491774559021, 0.6820763349533081, 0.6881521344184875, 0.6956809163093567, 0.6847180128097534, 0.6913221478462219, 0.7021529674530029, 0.7005679607391357, 0.6996433734893799, 0.7017567157745361, 0.7038700580596924, 0.7107383608818054, 0.7016246318817139, 0.7080966830253601, 0.713908314704895, 0.7121912837028503, 0.7088891863822937, 0.7202483415603638, 0.7149649858474731, 0.7147008180618286, 0.717870831489563, 0.7230220437049866, 0.7248712182044983, 0.7201162576675415, 0.7280412316322327, 0.7275128960609436, 0.7191916704177856, 0.724739134311676, 0.7314753532409668, 0.7288337349891663, 0.7300224304199219, 0.7302865982055664, 0.7347774505615234, 0.7305507659912109, 0.737022876739502, 0.7367587089538574, 0.7337207794189453, 0.7401928305625916, 0.7392682433128357, 0.7359662055969238, 0.7397965788841248, 0.7415136694908142, 0.7427024245262146, 0.7413815855979919, 0.737947404384613, 0.7411174178123474, 0.7430986762046814, 0.7400607466697693, 0.7474573850631714, 0.7428345084190369, 0.7475894689559937, 0.7450799345970154, 0.7473253011703491, 0.7461365461349487, 0.748249888420105, 0.7467969655990601, 0.7532690763473511, 0.7461365461349487, 0.750759482383728, 0.7528728246688843, 0.7485140562057495, 0.7568352818489075], "val_loss": [1.9534411430358887, 1.9365487098693848, 1.9180171149117606, 1.8961951392037528, 1.8701233863830566, 1.8382862636021204, 1.798478467123849, 1.7495666231427873, 1.6903457301003593, 1.620027780532837, 1.5393564019884383, 1.4521647521427699, 1.3626698085239954, 1.2753266947610038, 1.192204441343035, 1.1184615067073278, 1.0517094135284424, 0.9940006392342704, 0.9441596780504499, 0.9023192610059466, 0.8670626367841449, 0.835083178111485, 0.8075817482812064, 0.7831381899969918, 0.7624434062412807, 0.744005560874939, 0.7267317261014666, 0.7122634649276733, 0.6992314883640834, 0.6861690623419625, 0.673554812158857, 0.6642329352242606, 0.6551917791366577, 0.6461917672838483, 0.6380146060671125, 0.6311013698577881, 0.6227112838200161, 0.616783891405378, 0.6123573439461845, 0.6066630227225167, 0.599273715700422, 0.5960496153150286, 0.5905365943908691, 0.5860491480146136, 0.5804508072989327, 0.5764520508902413, 0.5720186403819493, 0.5716129541397095, 0.5674831696919033, 0.5639128855296544, 0.5609449829374041, 0.5588126863752093, 0.5537421533039638, 0.5500174590519497, 0.547939658164978, 0.5459015199116298, 0.54329400403159, 0.5405528375080654, 0.5367503847394671, 0.5342014346803937, 0.532376732145037, 0.5316481590270996, 0.5278307710375104, 0.5251143659864154, 0.5245029415403094, 0.5225334678377423, 0.5194675411496844, 0.5185999700001308, 0.5162076609475272, 0.5141893114362445, 0.5127040488379342, 0.5101879324231829, 0.5091298648289272, 0.5086627687726702, 0.5067432267325265, 0.5045647280556815, 0.5025849682944161, 0.5027062382016864, 0.5007885353905814, 0.4984006881713867, 0.4971519878932408, 0.4967648983001709, 0.49396417822156635, 0.49278550488608225, 0.4926903247833252, 0.4905767781393869, 0.4893542528152466, 0.488422019141061, 0.48829732622419086, 0.48707992689950125, 0.48535311222076416, 0.4837247814450945, 0.48284253052302767, 0.48121607303619385, 0.4797366346631731, 0.4785827909197126, 0.4778874431337629, 0.4773895059313093, 0.47619146960122244, 0.47506632123674664], "val_accuracy": [0.18000000715255737, 0.3266666531562805, 0.38999998569488525, 0.42133334279060364, 0.4503333270549774, 0.4729999899864197, 0.492000013589859, 0.5199999809265137, 0.5443333387374878, 0.5596666932106018, 0.5716666579246521, 0.5899999737739563, 0.5983333587646484, 0.6100000143051147, 0.6273333430290222, 0.6313333511352539, 0.6520000100135803, 0.6679999828338623, 0.6803333163261414, 0.6840000152587891, 0.687666654586792, 0.6980000138282776, 0.7046666741371155, 0.7089999914169312, 0.7166666388511658, 0.7193333506584167, 0.7226666808128357, 0.721666693687439, 0.7253333330154419, 0.7286666631698608, 0.734000027179718, 0.7319999933242798, 0.7356666922569275, 0.7379999756813049, 0.7419999837875366, 0.7396666407585144, 0.750333309173584, 0.7509999871253967, 0.7473333477973938, 0.749666690826416, 0.7540000081062317, 0.7543333172798157, 0.7583333253860474, 0.7583333253860474, 0.7586666941642761, 0.762666642665863, 0.7639999985694885, 0.7596666812896729, 0.7633333206176758, 0.7673333287239075, 0.7696666717529297, 0.7699999809265137, 0.7726666927337646, 0.7733333110809326, 0.7726666927337646, 0.7733333110809326, 0.7749999761581421, 0.7773333191871643, 0.7799999713897705, 0.7793333530426025, 0.7789999842643738, 0.7776666879653931, 0.7806666493415833, 0.7820000052452087, 0.7786666750907898, 0.7816666960716248, 0.7806666493415833, 0.777999997138977, 0.784333348274231, 0.7826666831970215, 0.7839999794960022, 0.7820000052452087, 0.7839999794960022, 0.7846666574478149, 0.7839999794960022, 0.7853333353996277, 0.7866666913032532, 0.7876666784286499, 0.7889999747276306, 0.7903333306312561, 0.7876666784286499, 0.7886666655540466, 0.7883333563804626, 0.7906666398048401, 0.7876666784286499, 0.7889999747276306, 0.7883333563804626, 0.7886666655540466, 0.7933333516120911, 0.7916666865348816, 0.7903333306312561, 0.7929999828338623, 0.7933333516120911, 0.7943333387374878, 0.7929999828338623, 0.7963333129882812, 0.7923333048820496, 0.7926666736602783, 0.7940000295639038, 0.7940000295639038]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [2, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [4, 2, 5, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 6, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.7671428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 6, 4, 3, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.multiply(grad, grad), grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(alpha, sigma), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2935503431362263, 2.278270919199208, 2.259274977136203, 2.2380230706428668, 2.213822133505522, 2.183152362670818, 2.1481748069392346, 2.1009940550296125, 2.047669997194487, 1.9812654609677656, 1.9047642528042423, 1.8220484438447622, 1.7342284382956297, 1.6498858787128245, 1.5631875628414817, 1.4938181578254877, 1.419051981825697, 1.3621306658704377, 1.3092765397304997, 1.2656476460805643, 1.2280388837004885, 1.1933398527980024, 1.1552416472119458, 1.130981363183897, 1.1099032627640304, 1.0826490475532795, 1.0594662165267041, 1.040968551352008, 1.025289473327679, 1.0065364257188096, 0.9767876987318085, 0.9775053034951705, 0.9611110111757308, 0.9455177586596042, 0.928049943584414, 0.9210604162988346, 0.9065707062434181, 0.9099462889425192, 0.8941962992620663, 0.889232213675716, 0.8723602991660887, 0.8723163097179671, 0.8669652761075916, 0.8592588679822932, 0.8432037598893721, 0.8401204941846188, 0.8352236779705093, 0.834798974470298, 0.8318932581697362, 0.8179547007230956, 0.8241813498213464, 0.8141357587029701, 0.8049794183336686, 0.798132226742994, 0.8008251944080776, 0.794698704377047, 0.8002748916634416, 0.7860555541104393, 0.7774547978068513, 0.7706732084612253, 0.7807501140382107, 0.7741192413469142, 0.7576925547257422, 0.7590290354447925, 0.7697923176198226, 0.7552554278388834, 0.7489001581603038, 0.7475924883866906, 0.7445106982964377, 0.7448909140817241, 0.7408878067780196, 0.7319650836451305, 0.7367685901695129, 0.7350621588115821, 0.7360998406433521, 0.7257576647483126, 0.7250801646761402, 0.7234538983139837, 0.7214169165776658, 0.7113707828531176, 0.711119684852141, 0.7183734493610834, 0.7153302267668128, 0.7134558089483903, 0.7049476728856902], "accuracy": [0.11121384054422379, 0.15149913728237152, 0.2040681540966034, 0.24805177748203278, 0.2860916554927826, 0.3261128067970276, 0.3486989736557007, 0.3761722445487976, 0.39307886362075806, 0.41909918189048767, 0.4344208240509033, 0.45330867171287537, 0.46083739399909973, 0.4885748326778412, 0.5103685259819031, 0.5157839059829712, 0.5392946600914001, 0.5466912984848022, 0.5569937825202942, 0.5691454410552979, 0.5822216272354126, 0.5912032723426819, 0.5971469879150391, 0.6136573553085327, 0.6181482076644897, 0.6221106648445129, 0.6283186078071594, 0.6379606127738953, 0.6386210322380066, 0.6474705934524536, 0.6507726907730103, 0.6571126580238342, 0.6581693291664124, 0.6659622192382812, 0.6761326193809509, 0.6716417670249939, 0.6750759482383728, 0.6758684515953064, 0.687491774559021, 0.6822084188461304, 0.6884163022041321, 0.6950204968452454, 0.684982180595398, 0.6911900639533997, 0.7021529674530029, 0.7005679607391357, 0.7000396251678467, 0.7016246318817139, 0.7041342258453369, 0.7107383608818054, 0.7021529674530029, 0.7086250185966492, 0.7136441469192505, 0.7121912837028503, 0.7086250185966492, 0.7202483415603638, 0.7147008180618286, 0.7148329019546509, 0.717870831489563, 0.722757875919342, 0.724739134311676, 0.7206445932388306, 0.7280412316322327, 0.7277770638465881, 0.7195879220962524, 0.7250033020973206, 0.7312111854553223, 0.7289658188819885, 0.7300224304199219, 0.7302865982055664, 0.7354378700256348, 0.7308149337768555, 0.7374191284179688, 0.7364945411682129, 0.7338528633117676, 0.739400327205658, 0.7391361594200134, 0.7362303733825684, 0.739928662776947, 0.7420420050621033, 0.7429665923118591, 0.7413815855979919, 0.7376832365989685, 0.7415136694908142, 0.7429665923118591], "val_loss": [1.9534412111554826, 1.9365486417497908, 1.9180170467921667, 1.8961950710841589, 1.8701233863830566, 1.838287012917655, 1.7984792845589774, 1.7495667593819755, 1.69034777368818, 1.620027780532837, 1.539351565497262, 1.4521533421107702, 1.362661600112915, 1.2753161702837263, 1.1921854700360979, 1.1184452261243547, 1.051694427217756, 0.9939872537340436, 0.944162266595023, 0.9023253917694092, 0.8670628070831299, 0.8350869417190552, 0.8075873681477138, 0.7831546068191528, 0.7624396937234061, 0.7440036535263062, 0.7267253909792218, 0.7122649465288434, 0.6992368698120117, 0.6861846957887922, 0.6735767466681344, 0.6642370734895978, 0.6551932777677264, 0.6461612326758248, 0.6380048138754708, 0.6310931614467076, 0.6227161203111921, 0.6167646987097604, 0.6123414039611816, 0.6066348041806903, 0.5992282458714077, 0.5960308143070766, 0.590525644166129, 0.5860117673873901, 0.5803755521774292, 0.5762807301112584, 0.5719691855566842, 0.5715062618255615, 0.5674889257975987, 0.5638751302446637, 0.560916543006897, 0.5587685619081769, 0.5536792278289795, 0.5500099318368095, 0.5478920425687518, 0.5459487608500889, 0.5432693106787545, 0.5405303921018328, 0.5366569927760533, 0.5341555731637138, 0.5323797804968697, 0.5316115958350045, 0.5278273480279105, 0.5251227617263794, 0.524456432887486, 0.5225344896316528, 0.5194433076041085, 0.5186142240251813, 0.5162126166479928, 0.514235428401402, 0.5127238035202026, 0.5102168321609497, 0.5091701745986938, 0.5086687803268433, 0.5067148549216134, 0.5045819452830723, 0.5026730809892926, 0.5027965818132673, 0.5009037256240845, 0.49854300703321186, 0.49718429361070904, 0.4967569964272635, 0.49403352396828787, 0.4928745542253767, 0.49276934351239887], "val_accuracy": [0.18000000715255737, 0.3266666531562805, 0.38999998569488525, 0.42133334279060364, 0.4503333270549774, 0.4729999899864197, 0.492000013589859, 0.5199999809265137, 0.5443333387374878, 0.5596666932106018, 0.5716666579246521, 0.5899999737739563, 0.5983333587646484, 0.6103333234786987, 0.6273333430290222, 0.6313333511352539, 0.6520000100135803, 0.6679999828338623, 0.6800000071525574, 0.6840000152587891, 0.687666654586792, 0.6980000138282776, 0.7043333053588867, 0.7089999914169312, 0.7166666388511658, 0.7193333506584167, 0.7229999899864197, 0.722000002861023, 0.7256666421890259, 0.7286666631698608, 0.734000027179718, 0.7319999933242798, 0.7350000143051147, 0.7379999756813049, 0.7419999837875366, 0.7396666407585144, 0.75, 0.7513333559036255, 0.746999979019165, 0.749666690826416, 0.7540000081062317, 0.7546666860580444, 0.7583333253860474, 0.7586666941642761, 0.7586666941642761, 0.7633333206176758, 0.7643333077430725, 0.7590000033378601, 0.7633333206176758, 0.7680000066757202, 0.7693333625793457, 0.7699999809265137, 0.7730000019073486, 0.7730000019073486, 0.7723333239555359, 0.7733333110809326, 0.7753333449363708, 0.7776666879653931, 0.7799999713897705, 0.7796666622161865, 0.7786666750907898, 0.7776666879653931, 0.7796666622161865, 0.7823333144187927, 0.7789999842643738, 0.7820000052452087, 0.781000018119812, 0.7776666879653931, 0.7846666574478149, 0.7826666831970215, 0.7839999794960022, 0.7823333144187927, 0.7846666574478149, 0.7853333353996277, 0.7839999794960022, 0.7856666445732117, 0.7866666913032532, 0.7876666784286499, 0.7886666655540466, 0.7903333306312561, 0.7883333563804626, 0.7883333563804626, 0.7883333563804626, 0.7903333306312561, 0.7883333563804626]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 2, 5, 9, 1, 8, 3, 0], [2, 1, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 10, 10, 5, 5, 0, 5, 3, 2, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha))), grad)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 2, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1], [4, 9, 5, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 6, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 2, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [6, 2, 5, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 8, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 1, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [110907139498.38977, 801028376865.1708, 1262456323799.5256, 1595865383295.0364, 1829434021671.3247, 2103383872341.1755], "accuracy": [0.09734513610601425, 0.10157178342342377, 0.09509972482919693, 0.09734513610601425, 0.09853387624025345, 0.0944393053650856], "val_loss": [403440084114.2857, 803511093540.5714, 1065604312502.8572, 1275532410880.0, 1436219717339.4285, 1581163516489.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 4, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 7, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 9, 1, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [8, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [19, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 4, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [7, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 0, 12, 12, 6, 6, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.add(grad, grad)), alpha))), tf.math.sqrt(tf.math.add(alpha, grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.multiply(grad, alpha), tf.math.add(beta, grad))), grad), grad)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 0, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [5, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 8, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [82, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 0, 9, 1, 3, 3, 3, 5, 0, 2, 2, 6], [2, 2, 2, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 2, 5, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), beta), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [164987326.8090176, 3155970413.4534407, 14695860790.98032, 40769656938.84982, 87104365267.87373, 161040806826.6554], "accuracy": [0.09932637959718704, 0.09840179979801178, 0.1014397069811821, 0.10289261490106583, 0.09959053993225098, 0.09853387624025345], "val_loss": [609983451.4285715, 4876987830.857142, 16456636123.428572, 39004362459.42857, 76176024722.28572, 131627099282.28572], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 0, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [1, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [8, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 6, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.divide_no_nan(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 0, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [8, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 0, 2, 1, 1, 0, 0, 8, 5, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.negative(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.multiply(sigma, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 6, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 9, 1, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [6, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [9, 1, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [4, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [2, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 2, 4, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 7, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [95, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 10, 10, 5, 5, 0, 7, 4, 3, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, alpha))), grad)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 0, 2, 2, 5, 3, 3, 5, 0, 2, 2, 6], [3, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 2, 5, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 6, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.043142858892679214, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.square(grad), tf.math.multiply(alpha, grad)), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3008770292083334, 2.3032432623417183, 2.3025186176801387, 2.302438737127082, 2.3026795739022856, 2.301387950650075], "accuracy": [0.09311848133802414, 0.08915598690509796, 0.08598599582910538, 0.09232597798109055, 0.09034473448991776, 0.09285431355237961], "val_loss": [1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [4, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 0, 5, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 6, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.043142858892679214, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3008770292083334, 2.3032432623417183, 2.3025186176801387, 2.302438737127082, 2.3026795739022856, 2.301387950650075], "accuracy": [0.09311848133802414, 0.08915598690509796, 0.08598599582910538, 0.09232597798109055, 0.09034473448991776, 0.09285431355237961], "val_loss": [1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 8, 4, 6, 2, 1, 3, 3, 5, 0, 2, 2, 6], [1, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 4, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [3, 2, 5, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 6, 9, 8, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [26, 67, 99, 3, 74, 13, 47, 86, 30]], "fitness": -0.043142858892679214, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 5, 3, 2, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), alpha)), grad), tf.math.add(beta, grad)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3008770292083334, 2.3032432623417183, 2.3025186176801387, 2.302438737127082, 2.3026795739022856, 2.301387950650075], "accuracy": [0.09311848133802414, 0.08915598690509796, 0.08598599582910538, 0.09232597798109055, 0.09034473448991776, 0.09285431355237961], "val_loss": [1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478]}}]