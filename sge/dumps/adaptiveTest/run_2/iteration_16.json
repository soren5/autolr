[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [9, 4, 9, 1, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 0, 0, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14], [0, 0, 0, 1], [1], [3], [1], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5, 1], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.3799999952316284, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.31060162423199, 2.2878870712122064, 2.305128508964471, 2.2741510053399594, 2.200829654243156, 2.1862438321822135], "accuracy": [0.1962752640247345, 0.2440892904996872, 0.11821424216032028, 0.19852067530155182, 0.23154141008853912, 0.21278563141822815], "val_loss": [1.9191417012895857, 1.983518396105085, 1.96093784059797, 1.931645052773612, 1.9674577713012695, 1.871973650796073], "val_accuracy": [0.49433332681655884, 0.10166666656732559, 0.21799999475479126, 0.25200000405311584, 0.1913333386182785, 0.2776666581630707]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.3051428496837616, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5514517123310902, 2.5770706950303444, 2.476734476066804, 2.3898577103761554, 2.388326045749147, 5284536.217529353, NaN], "accuracy": [0.2110685557126999, 0.136045441031456, 0.1340641975402832, 0.1344604343175888, 0.1484612375497818, 0.10777968913316727, 0.10421344637870789], "val_loss": [2.054837703704834, 1.7472103323255266, 2.030226843697684, 2.005418164389474, 2.1076221466064453, 4.6815579404223866e+17, NaN], "val_accuracy": [0.10233332961797714, 0.2993333339691162, 0.1120000034570694, 0.16500000655651093, 0.09866666793823242, 0.15199999511241913, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [0, 8], [2, 3, 0, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.2865714430809021, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5511956369525737, 2.473997131015615, 2.3458926433018563, 2.4862132176684035, 2.3510051367541407, 2.372736613638035, 2.37891117472454], "accuracy": [0.21120063960552216, 0.1426495909690857, 0.2176727056503296, 0.1022322028875351, 0.10077928751707077, 0.09787346422672272, 0.09760929644107819], "val_loss": [2.054763044629778, 1.8414648600987025, 2.191117559160505, 2.031507287706648, 2.005096299307687, 1.9966112545558385, 2.0150742530822754], "val_accuracy": [0.10233332961797714, 0.3173333406448364, 0.10300000011920929, 0.10233332961797714, 0.11599999666213989, 0.10266666859388351, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [2, 3, 0, 0], [64, 35], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1], [4, 4, 7, 2, 8], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 1, 1], [0, 1, 1], [5, 0], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 6, 6, 1, 5, 3, 6, 1, 4, 2, 0, 8], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.2817142903804779, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.551239931855802, 2.4746830410189586, 2.451449161255443, 2.328799468210392, 2.272741021260987, 2.288124540084861, NaN], "accuracy": [0.21120063960552216, 0.1418570876121521, 0.19535067677497864, 0.14780081808567047, 0.1402720957994461, 0.1328754425048828, 0.09496764093637466], "val_loss": [2.0549400874546597, 1.7234129905700684, 1.9813062122889928, 1.911705153329032, 1.8942429678780692, 1.9548497881208147, NaN], "val_accuracy": [0.10233332961797714, 0.3370000123977661, 0.16699999570846558, 0.14900000393390656, 0.15433333814144135, 0.12399999797344208, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [0, 8], [2, 3, 0, 0], [94, 81, 59], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 4, 3, 2, 1, 0, 3, 0, 7, 5, 7, 6, 2, 7, 0, 8, 8, 7, 7, 3, 2, 7, 5, 4, 3], [0, 1, 0, 5, 2, 4, 3, 0, 5, 3, 1, 3, 3, 0, 5, 2, 3, 3, 2], [35, 14, 47, 41, 87, 41, 18], [1, 0, 0], [1], [3], [1, 6], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [0, 0, 0, 2, 3], [35, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 44, 44, 25, 19, 4, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(grad, tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, beta))))), tf.math.multiply(tf.math.add(beta, grad), grad)))))))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028720262232962, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [0, 8], [1, 3, 0, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [5], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [2, 3, 0, 0], [94, 81, 59], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 4, 7, 2, 8, 2, 7, 3, 5, 1, 2, 7, 5, 9, 9, 1, 4, 9], [0, 2, 2, 5, 2, 1, 0, 2, 2, 0], [35, 93, 47, 41, 87, 41, 18], [1, 0, 0], [1], [3], [1, 6], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [0, 0, 0, 2, 3], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 18, 10, 6, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(beta, beta), beta), grad)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(alpha, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028372916185216, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [0, 8], [2, 3, 0, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1], [2, 4, 0], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [1, 6], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(beta)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 4, 3, 7, 1, 7, 2, 6, 2, 8, 2], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [86, 65], [0, 0, 0, 1], [1], [3], [4], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [2, 3, 0, 0], [11, 37], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 4, 7, 2, 8, 3, 6, 3, 5, 9, 5], [3, 2, 1, 3, 0, 3, 2], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [0, 1, 1], [3], [0, 6], [4], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [1, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 2, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, alpha))), tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1], [0, 8], [2, 3, 0, 0], [64, 35], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1], [2, 4, 3], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [3], [2], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [0, 8], [2, 3, 0, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 3, 7, 1, 7, 2, 3, 2, 8, 2], [0, 0, 2, 5, 3, 0, 4, 4, 1, 3, 1], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6722817.069403565, 1015388799.0701361, 17187289131.551445, 122457340978.17883, 531792580257.9654, 1743243925127.1853], "accuracy": [0.10342095047235489, 0.09813763201236725, 0.10091137140989304, 0.0952318087220192, 0.1014397069811821, 0.1002509593963623], "val_loss": [56756557.71428572, 3054094409.142857, 32769109430.857143, 178626012306.2857, 669052829696.0, 1973442801078.8572], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [2, 8], [2, 3, 0, 0], [64, 35], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1], [2, 4, 7, 2, 8], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1], [1], [3], [1], [], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [1, 0, 0, 2, 3], [53, 44, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302871009566922, 2.302584090048312, 2.3025851250639553, 2.302585372992825, 2.302584734417743, 2.3025853731817714], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09642054885625839, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736437116350447, 1.9736430304391044, 1.9736417361668177, 1.97364228112357, 1.9736436435154505, 1.973642349243164], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [2, 3, 0, 0], [64, 1, 4], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1], [2, 4, 7, 2, 8], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1], [1], [2, 8, 6], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4462247.544188325, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17831197381019592, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0036615759661554e+19, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [0, 8], [2, 3, 0, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 4, 7, 2, 8, 5, 2], [3, 3, 1, 5, 2, 5], [86, 14], [0, 0, 0], [1], [3], [1], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, alpha))), tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [2, 3, 0, 0], [11, 37], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 4, 7, 2, 8], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [2, 6], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4449738.241575474, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17831197381019592, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.95941967656776e+18, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [7, 1, 3, 0], [2, 3, 0, 0], [11, 37], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 8, 2, 2], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1, 6], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [27965612.59925471, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15110288560390472, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5158900172946976e+22, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 7, 1, 7, 2, 3, 2, 8, 2], [0, 2, 2, 5, 3, 3, 4, 4, 1, 1, 1], [86, 14], [0, 0, 0, 1], [0, 1, 1], [3], [1, 5], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 11, 11, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, alpha)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300099788891751, 2.2983621225506954, 2.29893927822307, 2.2998376477427565, 2.3004737727284006, 2.300467789999766, 2.3007822135310083], "accuracy": [0.09840179979801178, 0.10579843819141388, 0.09985470771789551, 0.08955223858356476, 0.09008057415485382, 0.09140139818191528, 0.08598599582910538], "val_loss": [1.968959059034075, 1.9684993198939733, 1.9711014883858817, 1.9717189243861608, 1.9718670845031738, 1.9721856117248535, 1.9721878596714564], "val_accuracy": [0.0663333311676979, 0.09533333033323288, 0.07633333653211594, 0.07566666603088379, 0.0833333358168602, 0.0820000022649765, 0.08166666328907013]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [1, 3, 0, 0], [64, 35], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [7, 4, 3, 7, 1, 7, 2, 3, 2, 8, 2, 4, 5, 9, 6, 9, 1, 0], [0, 2, 2, 2, 3, 0, 3, 4, 1, 3, 1], [86, 14, 20, 61], [0, 0, 0, 1], [1], [3], [1, 6], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [1, 0, 0, 2, 3], [12, 92]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, beta))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3010540160331683, 2.302730722670479, 2.302552421536066, 2.3015653439926007, 2.302292652007942, 2.3005488668655154], "accuracy": [0.09774138033390045, 0.0944393053650856, 0.08968432247638702, 0.08757099509239197, 0.09457138925790787, 0.09377889335155487], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [1, 3, 0, 0], [64, 35], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [7, 8, 3, 7, 1, 7, 2, 3, 2, 8, 2], [0, 2, 2, 5, 3, 0, 4, 4, 1, 1, 1], [86, 14], [0, 0, 0, 1], [1], [3], [1, 6], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.0357142873108387, "mapping_values": [1, 3, 3, 2, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3010540160331683, 2.302730722670479, 2.302552421536066, 2.3015653439926007, 2.302292652007942, 2.3005488668655154], "accuracy": [0.09774138033390045, 0.0944393053650856, 0.08968432247638702, 0.08757099509239197, 0.09457138925790787, 0.09377889335155487], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]