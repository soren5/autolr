[{"genotype": [[0], [1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 8], [2, 3, 0, 0], [11, 37], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 4, 7, 2, 8], [3, 2, 1, 5], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0], [1], [3], [1, 6], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.23514285683631897, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, alpha))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.668387953851831, 5.81051650785452, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19297318160533905, 0.12600713968276978, 0.1224408894777298, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12.24926049368722, 25.346426282610214, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.17933332920074463, 0.1993333399295807, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.22599999606609344, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.702613957160342, 3.1195786378135173, 2.619975795614847, NaN, NaN, NaN, NaN], "accuracy": [0.19178444147109985, 0.17131158709526062, 0.23854179680347443, 0.14529123902320862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.346427917480469, 1.5088201590946742, 5.740386009216309, NaN, NaN, NaN, NaN], "val_accuracy": [0.1613333374261856, 0.4333333373069763, 0.2709999978542328, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [7, 1, 3, 0, 2], [2, 3, 0, 0, 1], [40, 35], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [9, 3, 9, 6, 6, 0], [1, 2, 2, 5, 3, 0, 4, 4], [85, 14], [0, 0, 0, 1], [1], [2, 8, 6], [1, 6], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 5, 9, 2, 5], [3, 0, 0, 1, 2], [53, 44, 44]], "fitness": -0.11571428924798965, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.square(sigma), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3006899960525065, 2.2998410312333646, 2.2990610995989873, 2.2977713110770974, 2.2976387967334024, 2.3001129506302234, 2.303074809239289, 2.3072612809939645, 2.3125018754482207], "accuracy": [0.09642054885625839, 0.09972262382507324, 0.09787346422672272, 0.1208558976650238, 0.1310262829065323, 0.12495046854019165, 0.12376172095537186, 0.10606260597705841, 0.09800554811954498], "val_loss": [1.9705585752214705, 1.9695396423339844, 1.969447476523263, 1.9685443469456263, 1.970313889639718, 1.9734227316720145, 1.9775139263698034, 1.981592791421073, 1.9865195410592216], "val_accuracy": [0.04633333161473274, 0.07333333045244217, 0.10400000214576721, 0.1446666717529297, 0.14433333277702332, 0.12966667115688324, 0.12066666781902313, 0.10899999737739563, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1], [0, 8], [2, 3], [], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 5, 9, 3, 3], [4, 2, 1, 5], [35, 14], [1], [1, 1, 1], [3], [1, 6], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 6, 6, 1, 5, 3, 6, 1, 4, 2, 0, 8], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.11342857033014297, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.6475080048104225, 3.206721738596886, 3.3931047958295424, 2.41440010199914, NaN, NaN, NaN], "accuracy": [0.19270901381969452, 0.1702549159526825, 0.13934750854969025, 0.10210011899471283, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.812047140938895, 4.53414181300572, 1.9878030504499162, 81.17991202218192, NaN, NaN, NaN], "val_accuracy": [0.20800000429153442, 0.28033334016799927, 0.10233332961797714, 0.061666667461395264, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1], [4, 9, 5, 3], [0, 0, 0, 2, 2], [11, 37], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 5, 9, 6, 6, 0], [2, 2, 0, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14], [0, 0, 0, 1, 1, 0], [1], [3], [1, 6], [63], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [5, 4, 3, 4, 4, 8, 4, 5], [1, 0, 0, 2, 3, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 14, 8, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, beta)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.pow(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), beta), sigma), tf.math.square(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [4, 9, 5, 3], [0, 2, 2, 0], [64, 35], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1], [2, 6, 9], [3, 2, 1, 5], [35, 14], [0, 0, 0, 1], [1], [3], [1], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0], [6, 4, 1], [0, 2, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1], [3, 1, 7], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 3, 1, 2], [12, 92, 0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 7, 4, 3, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021158321485418, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1], [4, 1, 9, 3], [2, 2, 2, 0], [64, 35], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1], [2, 4, 3], [2, 2, 3, 5, 3, 0, 4, 4], [35, 14], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [3, 5, 5, 0], [2], [78], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 2, 4, 8, 5], [0, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 4, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021158321485418, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 1], [0, 1, 0, 1, 1], [7, 1, 3, 0], [3, 2, 0, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1], [4, 4, 0, 3, 3], [4, 2, 1, 5], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 6, 6, 1, 5, 3, 6, 1, 4, 2, 0, 8], [3, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(beta)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3929888508.577936, 1399679505.0578182, 99931873.284033, 3.640785325173421, 4.322454166198215, 5.099216108671064, 5.841553198615746, 6.536332122622354], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09800554811954498, 0.10196803510189056, 0.10130762308835983, 0.09602430462837219, 0.10038304328918457, 0.10355303436517715], "val_loss": [569835446.8571428, 664045842.2857143, 2.757026808602469, 3.3196850504193987, 3.9512365886143277, 4.617919921875, 5.290639332362583, 5.960495267595563], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [9, 2, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [2, 3, 0, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1], [2, 4, 3], [5, 1, 0, 5, 2], [86, 14], [0, 0, 0], [1, 1, 1], [8, 1], [1], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [2, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06947562843561172, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0], [7, 1, 3, 0, 9], [3, 2, 2, 0], [64, 35], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0], [5, 4, 3, 5], [0, 2, 2, 5, 3, 0, 4, 4], [32, 14], [0, 0, 0, 1], [1], [3], [2], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad), tf.math.negative(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0], [3, 3, 0, 0], [11, 37], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 3, 9, 6, 6, 0], [0, 2, 0, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [1, 0, 0], [1, 1, 1], [3], [1, 6], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06947562843561172, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 1, 9, 3], [3, 2, 2, 0], [64, 1, 4], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1], [2, 1, 0], [3, 2, 2, 5, 3, 0, 4, 4], [35, 14], [0, 0, 0, 1], [1], [3], [1], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30245906527898, 2.3027831145470343, 2.302700033497738, 2.302670463768089, 2.302643240907362, 2.302646037153265], "accuracy": [0.0948355570435524, 0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9736180305480957, 1.9737866265433175, 1.9738153048924036, 1.9737625803266252, 1.9737281118120467, 1.9736723899841309], "val_accuracy": [0.10366666316986084, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [0, 8], [0, 3], [94, 81, 59], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 7, 2, 8], [0, 2, 0, 5, 2], [35, 14], [0, 0, 0, 1], [1, 1, 1], [3], [1, 6], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 4, 3, 3, 4, 8, 5], [2, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6604261.058307838, 1036624448.9721305, 17165841985.394796, 121858121116.65672, 536472015939.2207, 1772558855983.7104], "accuracy": [0.1010434553027153, 0.1002509593963623, 0.1010434553027153, 0.09800554811954498, 0.10540219396352768, 0.09826971590518951], "val_loss": [56756557.71428572, 3054094409.142857, 32769109430.857143, 178626012306.2857, 669052829696.0, 1973442801078.8572], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1], [0, 0], [2, 3, 0, 0], [11, 37], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 9, 6, 6, 0], [0, 2, 2, 5, 3, 0, 4, 4], [85, 14], [1, 0, 0, 1], [0, 1, 0], [2, 8, 6], [1, 6], [], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [5, 4, 3, 7, 9, 5, 5], [0, 2, 3, 1, 2], [53, 44, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), beta), sigma))", "other_info": {"loss": [2.30218479750163, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [3, 3, 9], [2, 1, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, alpha))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [6812817.281244885, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1398758441209793, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5307194109366.857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0], [7, 1, 3, 0], [0, 2, 2, 0], [64, 35], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1], [2, 4, 3, 3], [0, 2, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2, 2, 1, 1], [12, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0], [2, 3, 0, 0], [64, 1, 4], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 0, 9, 6, 6, 0], [2, 2, 2, 5, 3, 0, 4, 4], [35, 14], [0, 0, 0, 1], [1], [2, 8, 6], [2], [63], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 0, 3, 2, 4, 8, 5], [1, 0, 2, 1, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2120170.768282112, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19138818979263306, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.513404482075268e+16, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1], [2, 4, 3], [0, 0, 2, 5, 3, 0, 4, 4], [85, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021158321485418, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [1, 1, 0, 1, 1], [0, 0], [0, 2, 2, 0], [64, 35], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0], [6, 3, 9], [2, 2, 0, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 1, 0], [1], [2, 8, 6], [1, 6], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [5, 4, 3, 3, 4, 8, 5, 9], [1, 0, 0, 2, 3], [12, 92, 20]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, beta))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.multiply(alpha, tf.math.pow(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta), tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301009489702369, 2.3018492728396964, 2.3026015259066686, 2.3027798801034653, 2.3021896133616835, 2.3036377805650132], "accuracy": [0.09496764093637466, 0.09377889335155487, 0.09087307006120682, 0.09642054885625839, 0.09219389408826828, 0.08928807079792023], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]