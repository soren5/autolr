[{"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 5, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.7871428728103638, "mapping_values": [1, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8058316895612525, 2.3039112815358114, 2.242461791836496, 2.3776115997356273, 2.303400482027333, 2.3027629991170357, 2.293890523526332, 2.205979602211864, 2.4825289360898406, 2.114654230860482, 2.0039530539824395, 1.9785563758241187, 1.5184729428197477, 1.4721835407645805, 1.159395374626358, 1.046238939507983, 0.93325409075493, 0.8242192691532282, 0.7399505082295948, 0.7203973814748644, 0.6707601640139746, 0.6532628415220088, 0.6348345531464379, 0.6131254270202401, 0.6142232489387482, 0.5787173471887271, 0.5763455481734557, 0.5933925908680338, 0.5389350231423464, 0.5252079645900237, 0.530077509230721, 0.5210843630919383, 0.4847803695752022, 0.4785458116585852, 0.47467168510991503, 0.5020143101401474, 0.4684474419498834, 0.4549642357615558, 0.46328384945767664, 0.4330161980327094, 0.4406791098003516, 0.4234136426886547], "accuracy": [0.17923656105995178, 0.09853387624025345, 0.1682736724615097, 0.11768590658903122, 0.09655263274908066, 0.10579843819141388, 0.14172500371932983, 0.21635186672210693, 0.1798969805240631, 0.28860124945640564, 0.3217540681362152, 0.316470742225647, 0.4917448163032532, 0.5012547969818115, 0.5815612077713013, 0.6103553175926208, 0.6592260003089905, 0.6935675740242004, 0.717870831489563, 0.7284374833106995, 0.7416457533836365, 0.7514199018478394, 0.759080708026886, 0.769911527633667, 0.7705719470977783, 0.7795535326004028, 0.7829877138137817, 0.7745344042778015, 0.7913089394569397, 0.8059701323509216, 0.798309326171875, 0.7971205711364746, 0.8175934553146362, 0.8185180425643921, 0.8208954930305481, 0.8128384351730347, 0.8244617581367493, 0.8248580098152161, 0.8255184292793274, 0.8355567455291748, 0.8321225643157959, 0.8450667262077332], "val_loss": [1.9763178144182478, 1.9731084959847587, 2.069220815386091, 1.9742752483912878, 1.97379698072161, 1.9728257996695382, 1.7699335643223353, 1.9391952923366003, 1.7125390257154192, 1.8654753821236747, 1.085994073322841, 1.3700412000928606, 1.0470916543688094, 0.8818892070225307, 0.8544449806213379, 0.6950482300349644, 0.658701845577785, 0.6073161704199654, 0.5308715105056763, 0.5424615485327584, 0.5102530547550747, 0.5233215263911656, 0.49255023683820454, 0.5025332825524467, 0.44509060042245047, 0.44496757643563406, 0.427765999521528, 0.48282151562826975, 0.4120195082255772, 0.4242587685585022, 0.4393470713070461, 0.41451594659260343, 0.3995362264769418, 0.39085493768964497, 0.4721301794052124, 0.40817366327558247, 0.3861870765686035, 0.4089049356324332, 0.3887084552219936, 0.39861016614096506, 0.38468662330082487, 0.42920403821127756], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.26466667652130127, 0.1003333330154419, 0.10133333504199982, 0.09600000083446503, 0.32066667079925537, 0.19900000095367432, 0.28966665267944336, 0.26600000262260437, 0.5306666493415833, 0.49966666102409363, 0.5673333406448364, 0.6456666588783264, 0.609666645526886, 0.6940000057220459, 0.6973333358764648, 0.7086666822433472, 0.7609999775886536, 0.7586666941642761, 0.7703333497047424, 0.7486666440963745, 0.7776666879653931, 0.7940000295639038, 0.8009999990463257, 0.7986666560173035, 0.8080000281333923, 0.7873333096504211, 0.8256666660308838, 0.812666654586792, 0.8056666851043701, 0.8159999847412109, 0.8339999914169312, 0.8353333473205566, 0.8016666769981384, 0.8183333277702332, 0.8399999737739563, 0.8196666836738586, 0.8376666903495789, 0.8190000057220459, 0.8349999785423279, 0.8113333582878113]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 2, 1, 0, 8, 1, 2, 8, 2, 2, 1, 4, 9, 8, 8, 2, 4, 8, 0, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 1, 0, 2, 2, 2, 2, 1, 0, 2, 2, 1, 0, 1, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [75, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.3702857196331024, "mapping_values": [1, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8056787957037916, 2.3039029341143324, 2.2845420324098575, 2.330202816846175, 2.2448604292385235, 2.3495864170637772, 2.304766909793667, 2.3035948146776737, 2.3031990293498525, 2.3021401684785863, 2.2748098923876268, 2.1473643252752272, 2.255334411865968, 2.304365125708277, 2.3036869605455763, 2.3037986710968745, 2.30283756644073], "accuracy": [0.17936864495277405, 0.09840179979801178, 0.1694624274969101, 0.09972262382507324, 0.16721701622009277, 0.18755778670310974, 0.10236428678035736, 0.0936468094587326, 0.09377889335155487, 0.108440101146698, 0.16919825971126556, 0.21080438792705536, 0.13551710546016693, 0.09840179979801178, 0.09800554811954498, 0.09576013684272766, 0.10157178342342377], "val_loss": [1.9763104575020927, 1.973309108189174, 2.103273664202009, 1.9692555836268835, 1.956073488507952, 1.9764582770211356, 1.9742783137730189, 1.973635537283761, 1.9733525684901647, 1.9719111578805106, 1.5883283615112305, 1.4562510422297887, 1.9749789237976074, 1.9737168039594377, 1.9736580848693848, 1.9736895561218262, 1.9737709590366908], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10266666859388351, 0.18566666543483734, 0.19966666400432587, 0.09600000083446503, 0.0976666659116745, 0.10266666859388351, 0.1003333330154419, 0.2253333330154419, 0.36000001430511475, 0.38066667318344116, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 1, 4, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 2, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 41, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.3142857253551483, "mapping_values": [1, 13, 13, 9, 4, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.pow(alpha, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8057827597769136, 2.303895439186494, 2.2782597533621414, 2.335112275039326, 2.217263678596823, 2.319307161312786, 2.3040866298509264, 2.3032429411962063, 2.303154926510409, 2.302802097339199], "accuracy": [0.17923656105995178, 0.09747721254825592, 0.17144367098808289, 0.09893012791872025, 0.15836745500564575, 0.15955619513988495, 0.09932637959718704, 0.09615638852119446, 0.09285431355237961, 0.10011887550354004], "val_loss": [1.9763154302324568, 1.973285334450858, 2.126500129699707, 1.9711499895368303, 1.6404341970171248, 1.9748355320521764, 1.9739046777997697, 1.9736758640834264, 1.9735965728759766, 1.973696163722447], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10266666859388351, 0.09833333641290665, 0.24666666984558105, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.1003333330154419, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 1, 0, 8, 1, 2, 8, 2, 2, 1, 4, 6, 9, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 6, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 1, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2, 2, 0, 2, 2, 2, 1, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 56, 41, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.2834285795688629, "mapping_values": [1, 64, 64, 39, 25, 8, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, alpha)), tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))))))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), grad))), tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8048176974227417, 2.300321699023294, 2.1769682091965006, 2.0154435100525188, 2.305438137104829, 2.3030201295709816, 2.2863092390364503, 2.3037994124901657], "accuracy": [0.17936864495277405, 0.10579843819141388, 0.16602826118469238, 0.26984545588493347, 0.10117553919553757, 0.10421344637870789, 0.13168670237064362, 0.09879804402589798], "val_loss": [1.97629029410226, 1.7532832281930106, 1.9425971848624093, 1.976968424660819, 1.9736546788896834, 1.9673762321472168, 1.9760914530072893, 1.9710781914847237], "val_accuracy": [0.1003333330154419, 0.2006666660308838, 0.2133333384990692, 0.10266666859388351, 0.10133333504199982, 0.11400000005960464, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 1, 2, 2, 4, 8, 5, 6, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 0, 0, 2, 2, 0, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.2817142903804779, "mapping_values": [1, 15, 15, 9, 6, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.pow(grad, tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))), alpha)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8061034880010696, 2.3039463191157745, 2.2963722714847496, 2.326782700030118, 2.250907208232706, 2.282440686348706, 2.3039516468939922, 2.30327036292278, 2.3030972820247215, 2.3028341039706213], "accuracy": [0.17936864495277405, 0.09774138033390045, 0.16563200950622559, 0.10540219396352768, 0.1884823739528656, 0.11808215826749802, 0.09813763201236725, 0.09879804402589798, 0.09589222073554993, 0.09893012791872025], "val_loss": [1.9763503755841936, 1.973356110709054, 2.0800729479108537, 1.9658116613115584, 1.7064793450491769, 1.9742796080453056, 1.9738306318010603, 1.9737143516540527, 1.9736700057983398, 1.9737597874232702], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10266666859388351, 0.14266666769981384, 0.28466665744781494, 0.10266666859388351, 0.0976666659116745, 0.0976666659116745, 0.10266666859388351, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 4, 1, 9, 8, 1, 2, 0, 9, 2, 1, 4, 6, 2, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 1, 8, 9, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 2, 0, 2, 1, 2, 2, 0, 2, 2, 0, 1, 1, 3, 2, 2, 1, 2, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [40, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.2751428484916687, "mapping_values": [1, 14, 14, 9, 5, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.805399257052513, 2.3038615734506953, 2.306728872215554, 2.131885635413514, 2.305466711434548, 2.3034107318848447, 2.3031136417716422], "accuracy": [0.17910447716712952, 0.09760929644107819, 0.1348566859960556, 0.2351076453924179, 0.09642054885625839, 0.10091137140989304, 0.09576013684272766], "val_loss": [1.9763546671186174, 1.9649827139718192, 1.9516866547720773, 1.9763571194240026, 1.9737513405936105, 1.9735312461853027, 1.973702839442662], "val_accuracy": [0.1003333330154419, 0.18566666543483734, 0.1379999965429306, 0.10266666859388351, 0.10133333504199982, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 8, 8, 5, 6, 8, 1, 5, 2, 4, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 3, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 0, 2, 2, 2, 2, 3, 2, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [90, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.26742857694625854, "mapping_values": [1, 18, 18, 11, 7, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.802480975288237, 2.2274716887664896, 2.4157263993933498, 2.305649278658634, 2.3036499377711572, 2.3030216662387146, 2.303073130704471], "accuracy": [0.17936864495277405, 0.15136705338954926, 0.16536785662174225, 0.09998679161071777, 0.09734513610601425, 0.09800554811954498, 0.09140139818191528], "val_loss": [1.9732006617954798, 1.9649605751037598, 1.9768848419189453, 1.9739724567958288, 1.973686967577253, 1.9736427579607283, 1.9738396917070662], "val_accuracy": [0.1003333330154419, 0.10499999672174454, 0.1003333330154419, 0.10266666859388351, 0.10133333504199982, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 8, 5, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.2460000067949295, "mapping_values": [1, 4, 4, 3, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8024827062556175, 2.228588565497146, 2.381294674137092, 2.3058320382614146, 2.303651498151635, 2.303043071667217, 2.3031479589943213], "accuracy": [0.17936864495277405, 0.15097081661224365, 0.17923656105995178, 0.10038304328918457, 0.09377889335155487, 0.09708096832036972, 0.09179764986038208], "val_loss": [1.9732345172337122, 1.964118208203997, 1.9778287751334054, 1.974095344543457, 1.9737087658473425, 1.973661286490304, 1.9737212317330497], "val_accuracy": [0.1003333330154419, 0.12099999934434891, 0.1003333330154419, 0.10266666859388351, 0.10133333504199982, 0.10266666859388351, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 1, 2, 8, 8, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.23428571224212646, "mapping_values": [1, 9, 9, 6, 3, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.802478902863631, 2.2276085656883695, 2.215620445742221, 2.7507147150993223, 2.3048789755637697, 2.239359122540705, 2.3048882397520796, 2.303431776772558], "accuracy": [0.17936864495277405, 0.1516312211751938, 0.20380398631095886, 0.18914277851581573, 0.11002509295940399, 0.17382116615772247, 0.1014397069811821, 0.09747721254825592], "val_loss": [1.9732068606785365, 1.9651502881731306, 1.7432495525905065, 1.983466557094029, 1.9346413612365723, 1.9763978549412318, 1.9742974553789412, 1.9737886701311385], "val_accuracy": [0.1003333330154419, 0.10199999809265137, 0.3230000138282776, 0.09833333641290665, 0.19833333790302277, 0.10266666859388351, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 8, 8, 0, 6, 2, 3, 6, 2, 2, 0, 4, 6, 8, 2, 2, 5, 3, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 2, 0, 2, 2, 2, 0, 1, 2, 2, 0, 1, 0, 2, 2, 1, 1, 2, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 41, 44, 74, 22, 61], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.16914285719394684, "mapping_values": [1, 28, 28, 16, 12, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.307329342806454, 2.3958955789522456, 2.5145788556155497, 2.7139623792117, 3.9833452877603452, 2.3599217428963937, 2.3506712464136204, 2.352817737289376], "accuracy": [0.18002906441688538, 0.1254788041114807, 0.1310262829065323, 0.1516312211751938, 0.11491216719150543, 0.09972262382507324, 0.09774138033390045, 0.1026284471154213], "val_loss": [1.9937637874058314, 1.7231876509530204, 4.113988058907645, 1.9386888231549944, 2.055315835135324, 2.020277500152588, 1.9969727652413505, 1.9996782030378069], "val_accuracy": [0.0976666659116745, 0.1626666635274887, 0.28700000047683716, 0.14933332800865173, 0.0976666659116745, 0.0976666659116745, 0.10066666454076767, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 5, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.13199999928474426, "mapping_values": [1, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8060537352931654, 2.303925886508134, 2.223621107709721, 2.307781414600836, 2.303955445562324, 2.303262086985937, 2.303176173318599, 2.3033360615225043], "accuracy": [0.17936864495277405, 0.09919429570436478, 0.17382116615772247, 0.10962884873151779, 0.09589222073554993, 0.09826971590518951, 0.09391097724437714, 0.0940430611371994], "val_loss": [1.9763330732073103, 1.9731716428484236, 1.8843895367213659, 1.9740383284432548, 1.973684583391462, 1.9736329487391882, 1.9737911224365234, 1.9737036568777901], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.15266667306423187, 0.10266666859388351, 0.10133333504199982, 0.10199999809265137, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 1, 0, 8, 1, 3, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 1, 0, 2, 2, 2, 2, 1, 0, 2, 2, 1, 0, 1, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [40, 65, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 54, 54, 31, 23, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, grad)), grad)), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.022454629275043e+25, 3091.835901520618, 802327.3232296758, 202627118.2797517, 52180895063.1367, 13428603366717.98], "accuracy": [0.080042265355587, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [94.47261265345982, 25730.507254464286, 6590126.571428572, 1687076973.7142856, 431891705270.8571, 110564276549339.42], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 1, 2, 9, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [29, 25, 7, 36, 44, 74, 22, 61], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 8, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0, 0, 8], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 29, 18, 11, 4], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(sigma), tf.math.subtract(tf.math.pow(sigma, tf.math.negative(tf.math.pow(beta, tf.math.pow(tf.math.pow(tf.math.divide_no_nan(beta, sigma), tf.math.multiply(sigma, tf.math.negative(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.sqrt(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 1, 2, 8, 2, 8, 5, 8, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 2, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [1, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 8, 9, 0, 5, 2, 1, 6, 4, 2, 1, 4, 6, 8, 2, 2, 5, 1, 9, 2, 2, 6, 1, 1, 5, 2, 2, 2, 2, 9, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 1, 1, 2, 2, 2, 2, 1, 0, 2, 2, 1, 0, 1, 2, 2, 0, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [40, 87, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [9, 6, 5, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08638224750757217, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 8, 8, 0, 1, 2, 1, 6, 2, 2, 0, 4, 6, 8, 2, 2, 5, 3, 6, 2, 2, 9, 1, 1, 5, 2, 2, 1, 1, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 1, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 2, 2, 2, 1, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 41, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [2, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.04114285856485367, "mapping_values": [1, 30, 30, 17, 13, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))))))))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30336906122352, 2.3027328241298135, 2.3023165885278845, 2.3019849693518526, 2.302335578562986, 2.301519144039585], "accuracy": [0.08968432247638702, 0.09153348207473755, 0.09338264167308807, 0.09087307006120682, 0.09259014576673508, 0.0936468094587326], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 5, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [1, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.04114285856485367, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(alpha)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30336906122352, 2.3027328241298135, 2.3023165885278845, 2.3019849693518526, 2.302335578562986, 2.301519144039585], "accuracy": [0.08968432247638702, 0.09153348207473755, 0.09338264167308807, 0.09087307006120682, 0.09259014576673508, 0.0936468094587326], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 5, 8, 0, 8, 5, 2, 8, 2, 2, 1, 4, 6, 8, 2, 2, 5, 1, 6, 2, 2, 8, 1, 1, 5, 2, 2, 1, 2, 8, 9, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 1, 0, 3, 2, 2, 1, 1, 2, 2, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [21, 25, 7, 36, 44, 74, 22, 61], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [9, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 3, 2, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1], [31, 92, 31, 3, 74]], "fitness": -0.04114285856485367, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30336906122352, 2.3027328241298135, 2.3023165885278845, 2.3019849693518526, 2.302335578562986, 2.301519144039585], "accuracy": [0.08968432247638702, 0.09153348207473755, 0.09338264167308807, 0.09087307006120682, 0.09259014576673508, 0.0936468094587326], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]