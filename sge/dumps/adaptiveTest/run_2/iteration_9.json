[{"genotype": [[0], [1, 0], [1, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [0, 2, 2, 3, 0, 3, 1, 0, 2, 1, 2, 3, 2, 2, 0, 2, 3, 3], [52], [1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1], [3, 7, 9, 8, 5, 5], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [35, 14], [0, 0, 1], [0, 0], [8, 9], [1], [63], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [61, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.302225074527475, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 0, 1, 1], [0, 7], [1, 1], [], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1], [2, 3, 9], [0, 2, 1, 5], [86, 14], [1, 0, 0, 1], [0, 0, 0], [1], [4, 2], [], [1, 0, 0], [1, 6, 6, 3, 5, 3, 6, 2, 4, 8, 0, 8], [2, 0, 2, 1, 2, 2, 1, 1], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [49827841210.78905, 7717117729146.4375, 130638988373844.5, 945302045520756.5, 4050061589570660.0, 1.3534110713715442e+16], "accuracy": [0.09945846349000931, 0.1022322028875351, 0.09998679161071777, 0.09919429570436478, 0.10157178342342377, 0.10249637067317963], "val_loss": [432975811145.1429, 23341540835328.0, 250537608254025.16, 1365736862927140.5, 5115667593747310.0, 1.5092430712714972e+16], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2, 3], [], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 6, 3, 8, 3], [0, 2, 1, 5, 1], [86, 14], [1], [0, 1], [], [1], [], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [7, 4, 3, 3, 4, 8, 5], [1, 0, 2, 1, 2], [76, 27, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, tf.math.sqrt(alpha)))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0], [0, 1, 1], [4], [0, 2], [64], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5, 3, 0, 4, 4], [86, 14], [1, 0, 0, 1], [1], [3], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 10, 6, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5], [86, 14], [1], [], [6], [1], [], [1, 0, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2, 2, 1, 1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [7, 4, 2, 7, 1, 3, 7, 1, 1, 4, 2, 5, 0, 6, 7, 3, 7], [1, 1, 3, 3, 3, 0, 1, 0, 2, 3, 0, 3, 3, 1, 3, 0], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 1, 4, 4, 3, 8, 2], [2, 2, 1, 5, 3, 0, 4, 4], [86, 14, 25, 47, 67, 74], [0, 0, 0, 1], [1], [3], [1], [], [1, 1, 0], [9, 4, 3, 2, 4, 9, 5], [3, 0, 2, 1, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 17, 16, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, grad), alpha))), grad)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [0, 1], [0], [2, 3], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [8, 1, 4, 9, 3, 8, 2], [0, 0, 1, 5], [91, 14], [1], [], [3], [1], [], [1], [2, 2, 5, 6, 7, 8], [0, 0, 1, 1, 1, 1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302225074527475, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 2, 9], [2, 3], [31], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1], [2, 3, 3, 8], [0, 2, 0, 5], [86, 14], [0, 0, 1], [0, 1], [2, 8], [1, 6], [], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [9], [1, 0, 0, 2, 3], [76, 27, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3533499329365033, 38.17795457085441, 9130.596076607593, 2331791.977785299, 588459514.3214899, 152660099116.36298, 39743920361186.89, 9748501808460650.0], "accuracy": [0.09787346422672272, 0.09655263274908066, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.8366691725594655, 297.2676478794643, 75487.88839285714, 19322932.57142857, 4946667227.428572, 1266346810221.7144, 324184783416758.9, 8.299130455469027e+16], "val_accuracy": [0.10233332961797714, 0.09733333438634872, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 1, 1, 8], [3, 3, 2, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4], [2, 2, 1, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [0, 1, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), grad)), tf.math.add(alpha, grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [3, 2, 1, 5], [86, 14], [0, 1, 0], [0, 1], [3], [1], [], [0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 9, 4, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 4, 4, 3, 7, 3, 3, 8, 1, 1, 1, 8, 5, 4, 0, 8, 2, 6, 0, 4, 8, 2, 4, 4, 9, 1, 2, 9], [3, 2, 1, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [0, 1, 0], [0, 1], [6], [1], [], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [76, 27, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 42, 42, 25, 17, 5, 3, 2, 1, 1, 0, 12, 7, 5, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, beta)), tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(grad, tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.subtract(alpha, tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.sqrt(grad))))))))), tf.math.add(tf.math.pow(tf.math.pow(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.pow(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(beta))), sigma))", "other_info": {"loss": [2.302225074527475, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [8, 4, 4, 4, 4, 7, 0, 5, 8, 8], [0, 2, 1, 5, 5, 2, 1], [86, 14], [1], [], [], [1], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 6, 6, 2, 6, 3, 2, 2, 4, 8, 2, 8, 6, 3], [2, 0, 2, 1, 3, 1, 1, 3, 3, 3, 3, 0], [41, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 26, 14, 12, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta), alpha)), tf.math.multiply(tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma)))), sigma)), tf.math.multiply(sigma, sigma)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4], [3, 2, 1, 5], [86, 14], [1], [0, 0, 1], [3], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 3, 2, 4, 9, 3, 0, 7], [1, 0, 2, 1, 2, 2], [12, 69]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 15, 9, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [2, 2, 1, 5], [86, 14], [1], [], [3], [1], [], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 2, 1, 2], [76, 27, 12]], "fitness": -0.08942857384681702, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.333124441225704, 8271.902148156449, 525826977.9159292, 33242108785310.312, 2.365031462263343e+18, 1.415153308595389e+23], "accuracy": [0.09602430462837219, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.379027366638184, 236379.94642857142, 15477900434.285715, 1014356001460809.1, 6.647683491173559e+19, 4.3566258527755034e+24], "val_accuracy": [0.10366666316986084, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2, 3], [31], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 4, 9, 5, 8, 5], [0, 2, 2, 5], [86, 14], [0, 0, 0, 1], [0, 1, 1], [2, 8], [1, 6], [], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 2, 1, 2], [76, 27, 12]], "fitness": -0.08914285898208618, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.333124436753978, 8272.192105669277, 525846748.58367455, 33243438754740.125, 2.365116986724736e+18, 1.4152100553576505e+23], "accuracy": [0.09602430462837219, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.379047121320452, 236388.6875, 15478479725.714285, 1014394004251794.2, 6.647932546264559e+19, 4.356789073519941e+24], "val_accuracy": [0.10366666316986084, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 0, 2, 3], [76, 27, 12]], "fitness": -0.08657142519950867, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.299965491872406, 2.300735112462203, 2.3024784274435692, 2.302913150200361, 2.306326628581581, 2.3635517331225255, 2.9668967221564526, 5.149534500002656], "accuracy": [0.10381719470024109, 0.08809932321310043, 0.08677849918603897, 0.10289261490106583, 0.10091137140989304, 0.10302469879388809, 0.09800554811954498, 0.09708096832036972], "val_loss": [1.9698683193751745, 1.9729554993765694, 1.973540987287249, 1.9751853942871094, 1.9864437239510673, 2.191571371895926, 3.402329649244036, 6.487191881452288], "val_accuracy": [0.10966666787862778, 0.0820000022649765, 0.11599999666213989, 0.10866666585206985, 0.10166666656732559, 0.10366666316986084, 0.09533333033323288, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1], [2, 6, 3, 8], [0, 2, 1, 5], [35, 14], [1], [], [], [1], [], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [76, 27, 12]], "fitness": -0.0860000029206276, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, alpha))), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.299965482834481, 2.3007330927535796, 2.3024732625369526, 2.3029044778859373, 2.306291287239154, 2.363040291291533, 2.963367151404731, 5.139666175073904], "accuracy": [0.10381719470024109, 0.08796724677085876, 0.08611807972192764, 0.10289261490106583, 0.09998679161071777, 0.1026284471154213, 0.09800554811954498, 0.09602430462837219], "val_loss": [1.969869954245431, 1.9729546819414412, 1.973548139844622, 1.975170339856829, 1.9863458360944475, 2.1899907929556712, 3.3964477947780063, 6.473856517246792], "val_accuracy": [0.10966666787862778, 0.08266666531562805, 0.11533333361148834, 0.10999999940395355, 0.10166666656732559, 0.10366666316986084, 0.09533333033323288, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [3, 2, 1, 5], [86, 14], [0, 1, 0], [0, 1], [3], [1], [], [0, 1, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.06685714423656464, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301545657407433, 2.301057187148278, 2.300079895504997, 2.3007310408611246, 2.301205419042343, 2.300116654227139, 2.3006693541239973, 2.2998601915404593, 2.2994626184039504, 2.2991740691301263, 2.299875267933483, 2.299272390294305, 2.299850217670324, 2.3004901415447376, 2.300504833306335, 2.3013584413202195, 2.300278060613543], "accuracy": [0.09774138033390045, 0.08849557489156723, 0.09192973375320435, 0.10011887550354004, 0.09338264167308807, 0.09906221181154251, 0.09140139818191528, 0.09760929644107819, 0.10236428678035736, 0.09919429570436478, 0.09760929644107819, 0.09734513610601425, 0.09549596905708313, 0.09747721254825592, 0.09681680053472519, 0.09140139818191528, 0.09060890227556229], "val_loss": [1.9707674980163574, 1.9704839161464147, 1.9703664779663086, 1.9702206339154924, 1.9703091893877303, 1.9701766286577498, 1.970038686479841, 1.9699625287737166, 1.9698875291006905, 1.9699290139334542, 1.970115797860282, 1.970280987875802, 1.9705427033560616, 1.970778124673026, 1.9710113661629813, 1.9711418833051408, 1.9713241032191686], "val_accuracy": [0.04399999976158142, 0.04833333194255829, 0.05366666615009308, 0.058666665107011795, 0.060333333909511566, 0.0676666647195816, 0.07100000232458115, 0.07433333247900009, 0.07599999755620956, 0.07866666465997696, 0.07900000363588333, 0.07966666668653488, 0.07766667008399963, 0.07466666400432587, 0.07433333247900009, 0.07233333587646484, 0.06966666877269745]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [2, 3], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5], [86, 14], [0, 0, 0, 1, 1], [0, 1, 0], [3, 3], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.0665714293718338, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301545625916404, 2.301057191620004, 2.30007963910504, 2.300730145508193, 2.301204132570834, 2.300116649755413, 2.300668440884162, 2.2998615771457267, 2.2994608324532337, 2.299172386879367, 2.2998754654452154, 2.2992779768657976, 2.2998592819535832, 2.300498472779828, 2.3005145273156975, 2.3013646086177744, 2.300286675078947], "accuracy": [0.09774138033390045, 0.08849557489156723, 0.09192973375320435, 0.1002509593963623, 0.09325055778026581, 0.09893012791872025, 0.09166556596755981, 0.09760929644107819, 0.10196803510189056, 0.09959053993225098, 0.09760929644107819, 0.09760929644107819, 0.09576013684272766, 0.09760929644107819, 0.09694888442754745, 0.09153348207473755, 0.09060890227556229], "val_loss": [1.9707674980163574, 1.9704841205051966, 1.9703656605311803, 1.9702194077628, 1.9703082357134138, 1.9701767648969377, 1.9700401169913155, 1.969963891165597, 1.969886234828404, 1.9699289458138602, 1.9701195444379533, 1.970292091369629, 1.9705554417201452, 1.9707882744925362, 1.97102267401559, 1.9711522374834334, 1.9713354791913713], "val_accuracy": [0.04399999976158142, 0.04833333194255829, 0.05366666615009308, 0.05833333358168602, 0.060333333909511566, 0.0676666647195816, 0.07133333384990692, 0.07500000298023224, 0.07633333653211594, 0.07866666465997696, 0.07900000363588333, 0.07966666668653488, 0.07833333313465118, 0.07466666400432587, 0.07433333247900009, 0.07233333587646484, 0.07000000029802322]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1], [2, 6, 3, 8], [0, 2, 1, 5], [35, 14], [1], [0, 1], [3], [1], [], [0, 1, 0], [5, 4, 3, 3, 4, 8, 5], [3, 0, 0, 2, 3], [76, 27, 12]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, beta), alpha)), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3018779339901823, 2.302017299018248, 2.30144576310891, 2.3027084217945726, 2.3029093602550437, 2.3024581833727185], "accuracy": [0.09787346422672272, 0.08558975160121918, 0.08757099509239197, 0.09536388516426086, 0.08360850811004639, 0.09166556596755981], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]