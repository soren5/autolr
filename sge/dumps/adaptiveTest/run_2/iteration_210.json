[{"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 0, 3, 4, 6, 5, 8, 4, 5, 4, 6, 6, 5, 8, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [1, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 2, 0, 0], [0, 16, 89, 73, 49, 69, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.3805714249610901, "mapping_values": [1, 28, 28, 17, 11, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.pow(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.261276197313806, 2.3046737846492413, 2.2947474238013137, 2.672297686570671, 2.4002819674094718, 2.3042536902940975, 2.301823523160788, 2.275186933247389, 2.313692617976922], "accuracy": [0.17461365461349487, 0.10302469879388809, 0.13776251673698425, 0.18201030790805817, 0.15295206010341644, 0.09879804402589798, 0.11174217611551285, 0.19865275919437408, 0.0944393053650856], "val_loss": [1.9762869562421526, 1.9734442574637276, 1.8225299971444267, 1.7753551346915108, 1.9752341679164342, 1.973747730255127, 1.9690630776541573, 1.9892397608075822, 1.975372655051095], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.3176666796207428, 0.34466665983200073, 0.10066666454076767, 0.10066666454076767, 0.16200000047683716, 0.10133333504199982, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [5, 4, 9, 6, 3, 2, 8, 6, 3, 8, 6, 6, 4, 6, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [0, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 0, 1, 1, 3, 2, 2, 2, 1, 1], [18, 51, 89, 78, 49, 69, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.36571428179740906, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.261250968937388, 2.3045956569183392, 2.29456814131197, 2.459253757574051, 2.2878704602298576, 2.8072995941447796, 2.321240843688618, 2.3154868534165223, 2.3045259359380146, 2.3038451262846786], "accuracy": [0.17474573850631714, 0.10460969805717468, 0.13234710693359375, 0.15559370815753937, 0.15229164063930511, 0.14951789379119873, 0.13578127324581146, 0.09906221181154251, 0.09721305221319199, 0.09206181764602661], "val_loss": [1.976320471082415, 1.9735329491751534, 1.794158594948905, 1.9759687696184431, 1.8107778004237585, 1.974642276763916, 2.005049228668213, 1.97596161706107, 1.9738988876342773, 1.9737917355128698], "val_accuracy": [0.10233332961797714, 0.10000000149011612, 0.3316666781902313, 0.16566666960716248, 0.42500001192092896, 0.10066666454076767, 0.09700000286102295, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 4, 5, 0, 9, 8, 2, 8, 4, 6, 5, 4, 6, 2, 0, 4, 3, 4, 2, 8, 2, 2, 0, 2, 3, 2], [2, 2, 1, 0, 2, 0, 0, 2, 1, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1], [18, 38, 89, 73, 49, 34, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.3417142927646637, "mapping_values": [1, 26, 26, 17, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(grad, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.261326997602274, 2.304574282130608, 2.2972996512644674, 2.4626015846235814, 2.260640781411657, 2.306303739988604, 2.3037123035493385, 2.303183235874612], "accuracy": [0.17474573850631714, 0.10342095047235489, 0.13142253458499908, 0.14370624721050262, 0.20235107839107513, 0.09721305221319199, 0.09893012791872025, 0.09906221181154251], "val_loss": [1.9762730598449707, 1.9735374450683594, 1.916818278176444, 1.9654045786176408, 1.9800596918378557, 1.9747818538120814, 1.9737292698451452, 1.973600115094866], "val_accuracy": [0.10233332961797714, 0.10000000149011612, 0.17399999499320984, 0.12733332812786102, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [0, 1, 2, 0, 2, 1, 0, 1, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 1, 1], [8, 37, 50, 46, 49, 69, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.33885714411735535, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.261310687737143, 2.304642357011875, 2.300725089497554, 3.4002611747334077, 2.443598412661237, 2.306255108518781, 2.3035478408641157, 2.3030895748788405], "accuracy": [0.1744815707206726, 0.10513802617788315, 0.11372341960668564, 0.19535067677497864, 0.14529123902320862, 0.10011887550354004, 0.09655263274908066, 0.09206181764602661], "val_loss": [1.976297446659633, 1.9735758645193917, 1.9602574620928084, 1.9698991094316756, 1.979102679661342, 1.97467041015625, 1.9736651011875697, 1.9736815861293249], "val_accuracy": [0.10166666656732559, 0.1003333330154419, 0.257999986410141, 0.13433332741260529, 0.10066666454076767, 0.10066666454076767, 0.09866666793823242, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [0, 1, 1, 0, 1, 1, 0, 1, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 1], [36, 37, 89, 69, 49, 50, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.334285706281662, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2612788017478525, 2.3046292171281766, 2.299324987334913, 2.828911665235103, 2.3030097335321145, 2.3064832897738, 2.303892590067154, 2.303348693676345], "accuracy": [0.17474573850631714, 0.10394927859306335, 0.12296922504901886, 0.177255317568779, 0.12178047746419907, 0.12534672021865845, 0.09153348207473755, 0.09760929644107819], "val_loss": [1.9762986046927316, 1.97353880746024, 1.9438926833016532, 1.9798215457371302, 1.9119629859924316, 1.974721908569336, 1.9738803591047014, 1.9738618305751257], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.33266666531562805, 0.10066666454076767, 0.1653333306312561, 0.0976666659116745, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [1, 1, 2, 0, 2, 1, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [8, 37, 50, 46, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.3142857253551483, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.261349939792982, 2.3045723645159, 2.296511447629625, 2.3911448749395614, 2.30738097376528, 2.3034986363835324, 2.303219961909066, 2.303132357614356], "accuracy": [0.1748778223991394, 0.10540219396352768, 0.12600713968276978, 0.17434948682785034, 0.09893012791872025, 0.09985470771789551, 0.09721305221319199, 0.0936468094587326], "val_loss": [1.9763137272426061, 1.9734468460083008, 1.9320438929966517, 1.9817852292742049, 1.9744809014456612, 1.973869732448033, 1.9736997059413366, 1.9738168035234724], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.23399999737739563, 0.10199999809265137, 0.10199999809265137, 0.0976666659116745, 0.10133333504199982, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 4, 4, 4, 3, 9, 8, 2, 6, 4, 6, 5, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 2, 0, 2, 3, 2], [2, 1, 0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1], [40, 37, 89, 69, 80, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.27314284443855286, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.26119252949217, 2.304744956200826, 2.297214183950972, 2.3094166416328945, 2.29588606983931, 2.2008320642358448, 2.3071746868369853, 2.3044041342439905, 2.3032482452616794, 2.303547027009967], "accuracy": [0.17434948682785034, 0.10434553027153015, 0.1254788041114807, 0.1962752640247345, 0.12323339283466339, 0.17540615797042847, 0.10381719470024109, 0.09747721254825592, 0.09945846349000931, 0.09932637959718704], "val_loss": [1.9763238770621163, 1.9734206199645996, 1.91987487248012, 1.99237060546875, 1.6569463866097587, 1.9161556788853236, 1.9742248398917062, 1.9739914621625627, 1.9737215723310197, 1.9737152372087752], "val_accuracy": [0.08900000154972076, 0.1003333330154419, 0.20866666734218597, 0.10199999809265137, 0.28200000524520874, 0.14000000059604645, 0.10133333504199982, 0.09700000286102295, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [1, 1, 2, 0, 2, 1, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [8, 37, 50, 46, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.21114285290241241, "mapping_values": [1, 28, 28, 17, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha))), grad))), tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.add(alpha, alpha), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.261339138181155, 2.3046759077114216, 2.2974645381338483, 2.653000349318898, 2.3045256802623517, 2.3004697116768167, 2.254910348098134, 2.305023090761603, 2.2611909987447505, 2.3054756276154986, 2.3036129630205573], "accuracy": [0.17500990629196167, 0.10328886657953262, 0.12917712330818176, 0.1702549159526825, 0.09985470771789551, 0.11689341068267822, 0.20618148148059845, 0.10368511080741882, 0.1562541276216507, 0.1018359512090683, 0.10328886657953262], "val_loss": [1.9763063022068568, 1.9735615594046456, 1.8962841033935547, 1.977228777749198, 1.973695959363665, 1.9575859478541784, 1.9763036455426897, 1.973228931427002, 1.9762533732822962, 1.9738627161298479, 1.9736339024135046], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.23100000619888306, 0.10199999809265137, 0.09733333438634872, 0.26866665482521057, 0.11999999731779099, 0.09700000286102295, 0.10233332961797714, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 4, 6, 2, 9, 8, 2, 8, 4, 6, 6, 4, 2, 2, 0, 4, 3, 4, 2, 8, 2, 2, 0, 2, 3, 2], [0, 1, 2, 0, 2, 1, 0, 1, 2, 2, 0, 0, 2, 1, 3, 2, 2, 2, 1, 1], [74, 37, 15, 69, 49, 69, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [0, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 3, 3, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1015209745.8378044, 19548412578.371155, 90023593565.5274, 251595885508.35345, 540246593852.4919, 993862929017.2543], "accuracy": [0.10328886657953262, 0.09681680053472519, 0.10328886657953262, 0.10408136248588562, 0.09655263274908066, 0.1026284471154213], "val_loss": [3758008612.571429, 30054551552.0, 101423094637.71428, 240398307913.14285, 469511840914.2857, 811293119049.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 4, 4, 4, 3, 4, 1, 2, 6, 4, 6, 6, 4, 9, 2, 8, 4, 4, 4, 2, 8, 2, 2, 0, 2, 3, 2], [2, 1, 1, 0, 2, 0, 0, 2, 1, 2, 0, 0, 0, 1, 3, 2, 2, 0, 2, 1], [36, 37, 14, 69, 49, 69, 22, 75], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 18, 15, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(alpha, tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [1, 1, 2, 0, 2, 1, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [8, 37, 50, 46, 49, 69, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [0, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 16, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))))), grad)))))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301981774838908, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 4, 3, 4, 3, 5, 8, 4, 3, 4, 6, 6, 4, 8, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [1, 1, 1, 0, 2, 0, 0, 1, 1, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1], [18, 32, 59, 78, 49, 69, 22, 75], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [1, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 17, 13, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.pow(alpha, tf.math.multiply(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(tf.math.add(alpha, grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 4, 6, 8, 9, 8, 2, 6, 6, 6, 6, 4, 6, 2, 0, 4, 3, 4, 2, 8, 2, 2, 0, 2, 3, 2], [0, 1, 1, 0, 1, 1, 0, 1, 2, 0, 0, 0, 0, 1, 3, 2, 2, 2, 1, 1], [18, 32, 91, 54, 49, 69, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [6, 4, 4, 4, 3, 9, 8, 2, 6, 4, 6, 6, 4, 6, 2, 0, 4, 8, 4, 2, 8, 2, 2, 0, 2, 3, 2], [2, 1, 1, 0, 2, 0, 0, 2, 1, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1], [65, 43, 89, 69, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 21, 16, 6, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))))))), tf.math.pow(grad, tf.math.add(alpha, alpha)))))))))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 3, 9, 8, 2, 8, 4, 6, 6, 4, 6, 2, 0, 4, 3, 4, 2, 8, 2, 2, 0, 2, 3, 2], [2, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1], [36, 37, 89, 69, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0], [3, 7, 4, 1, 8], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 10, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(grad, tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, grad))))), tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 3, 4, 3, 5, 8, 4, 8, 4, 6, 6, 4, 8, 2, 8, 4, 3, 8, 2, 8, 2, 5, 6, 1, 3, 2], [2, 1, 2, 0, 2, 0, 0, 2, 0, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1], [18, 32, 89, 73, 49, 69, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0, 1, 1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.07199999690055847, "mapping_values": [1, 37, 37, 22, 15, 6, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.pow(grad, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), grad))))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301981469375929, 2.3008238244853425, 2.299775841749103, 2.2990396486029665, 2.3004394222511952, 2.300377701566739, 2.299529923172108, 2.3006019854290516, 2.2993920398599292, 2.29979820507172, 2.300243611537927, 2.2996727314922456, 2.299459390479025, 2.3000276782147053, 2.300372798791446, 2.3001631288449085], "accuracy": [0.09192973375320435, 0.09285431355237961, 0.09906221181154251, 0.09906221181154251, 0.09628847241401672, 0.09826971590518951, 0.09972262382507324, 0.09734513610601425, 0.09998679161071777, 0.09774138033390045, 0.09549596905708313, 0.1002509593963623, 0.10579843819141388, 0.10447761416435242, 0.09840179979801178, 0.09879804402589798], "val_loss": [1.9699160712105888, 1.9694593293326241, 1.9693457739693778, 1.9695146424429757, 1.9696645736694336, 1.9697203636169434, 1.9697737012590681, 1.969710350036621, 1.9697564670017786, 1.9698098727634974, 1.9700395039149694, 1.9703262874058314, 1.970564297267369, 1.9708140918186732, 1.9710261481148856, 1.9712080274309431], "val_accuracy": [0.043666668236255646, 0.052666667848825455, 0.06233333423733711, 0.06533333659172058, 0.06400000303983688, 0.06466666609048843, 0.06566666811704636, 0.0716666653752327, 0.07466666400432587, 0.07400000095367432, 0.07599999755620956, 0.0729999989271164, 0.0716666653752327, 0.07000000029802322, 0.06733333319425583, 0.06866666674613953]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [2, 1, 1, 0, 2, 0, 0, 2, 1, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1], [8, 37, 50, 46, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302455259745604, 2.3023111883203007, 2.301715552956437, 2.300834576876692, 2.30256091879186, 2.3026659132829352], "accuracy": [0.09008057415485382, 0.08677849918603897, 0.09298639744520187, 0.09496764093637466, 0.09087307006120682, 0.09206181764602661], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 4, 4, 3, 9, 8, 2, 8, 4, 6, 6, 4, 6, 2, 0, 4, 3, 4, 2, 8, 2, 2, 0, 2, 3, 2, 7, 3, 8, 4, 8, 6, 1, 2], [2, 1, 1, 0, 2, 0, 0, 2, 1, 2, 0, 0, 2, 1, 3, 2, 2, 0, 2, 1, 0, 1, 3, 2, 2, 3, 3], [36, 37, 89, 69, 49, 50, 22, 75], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 62, 62, 35, 27, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, tf.math.add(grad, grad))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302455259745604, 2.3023111883203007, 2.301715552956437, 2.300834576876692, 2.30256091879186, 2.3026659132829352], "accuracy": [0.09008057415485382, 0.08677849918603897, 0.09298639744520187, 0.09496764093637466, 0.09087307006120682, 0.09206181764602661], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [1, 1, 2, 0, 2, 1, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [8, 37, 50, 46, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [1, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302455259745604, 2.3023111883203007, 2.301715552956437, 2.300834576876692, 2.30256091879186, 2.3026659132829352], "accuracy": [0.09008057415485382, 0.08677849918603897, 0.09298639744520187, 0.09496764093637466, 0.09087307006120682, 0.09206181764602661], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [4, 4, 4, 4, 3, 8, 8, 4, 8, 4, 9, 2, 4, 6, 2, 0, 4, 3, 6, 2, 8, 2, 5, 6, 1, 3, 2], [1, 1, 2, 0, 2, 1, 0, 1, 0, 2, 0, 0, 2, 1, 3, 2, 2], [8, 37, 50, 46, 49, 69, 22, 75], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 27, 27, 16, 11, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.sqrt(grad), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))))), grad)))))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302455259745604, 2.3023111883203007, 2.301715552956437, 2.300834576876692, 2.30256091879186, 2.3026659132829352], "accuracy": [0.09008057415485382, 0.08677849918603897, 0.09298639744520187, 0.09496764093637466, 0.09087307006120682, 0.09206181764602661], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]