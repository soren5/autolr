[{"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1], [2, 6, 3, 8], [0, 2, 1, 5], [35, 14], [1], [], [], [1], [], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [76, 27, 12]], "fitness": -0.11485714465379715, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, alpha))), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3013220788182016, 2.300240825180207, 2.3020950596267364, 2.3027144388484286, 2.3050548047468946, 2.3319835816203107], "accuracy": [0.09787346422672272, 0.09047681838274002, 0.08347642421722412, 0.09021265059709549, 0.09642054885625839, 0.10011887550354004], "val_loss": [1.9694393021719796, 1.9730488913399833, 1.9736723899841309, 1.974989686693464, 1.981501579284668, 2.082827568054199], "val_accuracy": [0.1146666631102562, 0.06700000166893005, 0.07400000095367432, 0.10300000011920929, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5], [86, 14], [1], [], [3], [1], [], [0, 1, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.11485714465379715, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301322209254043, 2.3002447249347413, 2.3020996205984026, 2.3027118794150625, 2.3050584512505754, 2.33208889763479], "accuracy": [0.09787346422672272, 0.09021265059709549, 0.08321225643157959, 0.09074098616838455, 0.09576013684272766, 0.10011887550354004], "val_loss": [1.9694407326834542, 1.9730520929609026, 1.9736733436584473, 1.9749913215637207, 1.981525489262172, 2.0832345145089284], "val_accuracy": [0.1146666631102562, 0.06666667014360428, 0.07266666740179062, 0.10199999809265137, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1], [8, 1, 4, 9, 3, 8, 2], [0, 0, 1, 5], [39], [1], [], [6], [1], [], [1], [], [1, 0, 2, 1, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [4], [1], [80], [1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1], [2, 6, 3, 8], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [0, 1, 0], [0, 0], [3, 9], [6], [76], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 10, 6, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.pow(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), alpha))", "other_info": {"loss": [2.3030548316455235, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [1, 1], [4], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1], [2, 6, 3, 0, 8, 9], [0, 2, 1, 5], [86, 14], [1], [], [3], [1], [], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [3, 0, 1, 1, 2, 1], [12, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 10, 6, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(sigma, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.pow(alpha, alpha))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0], [0, 1, 0, 0, 0, 1], [9, 9], [2], [70], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 3, 5, 7, 8, 8, 2, 2, 2, 4, 8], [3, 2, 1, 5, 3, 0, 4, 4], [86, 14], [0, 1, 1], [1, 0, 1], [8, 2], [1], [], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 7, 2, 0, 3, 5, 7, 0, 8], [1, 0, 1, 1, 3, 1], [12, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1183828511.3948145, 22810642200.176464, 106342432523.46269, 293479406541.55066, 626963182305.399, 1148512253136.9658], "accuracy": [0.10579843819141388, 0.09642054885625839, 0.09932637959718704, 0.09311848133802414, 0.09694888442754745, 0.09998679161071777], "val_loss": [4542502034.285714, 36329014418.28571, 122598120301.71428, 290588168777.1429, 567540711424.0, 980689729243.4286], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [0], [55], [1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1], [3, 7, 9, 8, 5, 5], [2, 4, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [0], [1], [], [6], [], [0, 0, 1, 0], [5, 4, 9], [1, 0, 2, 1, 2], [91]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [0], [31], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 4, 3, 6, 5, 1, 1, 2, 9, 5, 1, 6, 4, 6, 2, 1, 9, 9, 2, 0], [4, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14, 25, 47, 67, 74], [0, 0, 0, 1], [0, 0, 1], [2, 8], [6], [], [0, 0, 1], [5, 8], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 9, 9, 4, 5, 0, 4, 3, 2, 1, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha))), tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(alpha))", "other_info": {"loss": [2.3030548316455235, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1], [2, 3, 5, 7, 8, 8, 2, 2, 2, 4, 8], [3, 2, 1, 5, 3, 0, 4, 4], [39], [0, 1], [0], [8], [1], [], [1], [5, 7, 2, 0, 3, 5, 7, 0, 8], [0, 0, 0, 2, 3], [12, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030962738394343, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1, 0, 0, 0, 1], [0], [2], [31], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 4, 7, 6, 5, 9, 1, 2, 9, 5, 1, 6, 4, 6, 2, 1, 9, 9, 2, 0], [2, 2, 1, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [0, 0, 1], [1, 0], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [5, 7, 2, 6, 3, 4, 7, 0, 8], [1, 0, 2, 1, 2, 3, 1], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 16, 9, 7, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.negative(alpha), tf.math.sqrt(beta))), sigma)), alpha))", "other_info": {"loss": [5.074544343052759, 143177.59294104032, 9265697302.794348, 616658349307534.8, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [50.50446319580078, 4098295.714285714, 268659298889.14285, 1.7606872378301294e+16, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1], [5, 4], [0, 2, 1, 5], [39], [1], [], [6], [1], [], [1], [8, 6, 6, 3, 5, 3, 6, 2, 4, 8, 0, 8], [1, 0, 2, 1, 2, 2, 1, 1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2], [72], [0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1], [8, 1, 4, 9, 3, 8, 2], [0, 0, 1, 5], [86, 14], [1], [], [6], [1], [], [1], [], [1, 0, 2, 1, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1], [8, 1, 4, 9, 3, 8, 2], [0, 2, 1, 5], [86, 14], [1], [], [6], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [8, 6, 6, 8, 8, 2, 6, 5, 4, 8, 0, 8], [1, 0, 2, 1, 2, 2, 1, 3], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 13, 8, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(tf.math.square(alpha), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [1, 1], [0], [2], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [8, 1, 4, 9, 3, 8, 2], [0, 0, 1, 5], [39], [1], [], [3], [1], [], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 5, 6, 7, 8], [3, 0, 0, 1, 1, 1], [41, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030548316455235, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [0], [31], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 4, 7, 6, 5, 2, 1, 2, 9, 5, 1, 6, 4, 6, 2, 1, 9, 9, 2, 0], [4, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14, 25, 47, 67, 74], [0, 0, 0, 1], [0, 0, 1], [2, 8], [7], [], [0, 1], [5], [3, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 17, 17, 10, 7, 1, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(grad, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(grad, grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [1], [72], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 4, 7, 6, 5, 3, 1, 2, 9, 5, 1, 6, 4, 6, 2, 1, 9, 9, 2, 0], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [0, 1, 1, 1], [0, 0, 1], [2, 8], [6], [], [0, 1], [5, 4, 9], [3, 0, 2, 1, 2], [12]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3037990081453557, 2.3025122675456706, 2.302977960532635, 2.30421423197202, 2.3037366349667825, 2.3019814573778468], "accuracy": [0.09285431355237961, 0.08994849026203156, 0.09008057415485382, 0.08889182657003403, 0.0886276587843895, 0.0936468094587326], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 0], [0, 1, 0, 0, 0, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 3, 5, 7, 8, 8, 2, 2, 2, 4, 8], [3, 2, 1, 5, 3, 0, 4, 4], [86, 14], [1], [], [], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [8, 6, 6, 3, 5, 3, 6, 2, 0, 8, 0, 8], [1, 2, 2, 2, 2, 2, 3, 1], [12, 43]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 19, 12, 7, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.square(tf.math.multiply(beta, beta)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(beta)), beta))), tf.math.sqrt(tf.math.negative(tf.math.sqrt(sigma)))))", "other_info": {"loss": [2.3037990081453557, 2.3025122675456706, 2.302977960532635, 2.30421423197202, 2.3037366349667825, 2.3019814573778468], "accuracy": [0.09285431355237961, 0.08994849026203156, 0.09008057415485382, 0.08889182657003403, 0.0886276587843895, 0.0936468094587326], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 0], [0, 1, 1], [0], [2, 2], [], [0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1], [3, 7, 9, 8, 5, 5], [0, 2, 1, 5], [86, 14], [0, 1, 1], [0, 0, 1], [8, 2], [6], [], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 1, 8, 9, 4, 4, 3], [2, 0, 2, 1, 2, 2, 1, 1], [34]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037990081453557, 2.3025122675456706, 2.302977960532635, 2.30421423197202, 2.3037366349667825, 2.3019814573778468], "accuracy": [0.09285431355237961, 0.08994849026203156, 0.09008057415485382, 0.08889182657003403, 0.0886276587843895, 0.0936468094587326], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 0, 0], [1, 1], [0], [2], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1], [2, 6, 3], [0, 2, 1, 5], [86, 14], [1], [], [3], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [8, 6, 6, 3, 5, 3, 6, 2, 8, 3, 0, 8], [1, 0, 2, 1, 2, 1, 1, 3], [12, 27]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 20, 12, 8, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta)), tf.math.divide_no_nan(tf.math.add(alpha, beta), tf.math.sqrt(tf.math.multiply(tf.math.negative(alpha), alpha))))), tf.math.sqrt(sigma)))", "other_info": {"loss": [2.3037990081453557, 2.3025122675456706, 2.302977960532635, 2.30421423197202, 2.3037366349667825, 2.3019814573778468], "accuracy": [0.09285431355237961, 0.08994849026203156, 0.09008057415485382, 0.08889182657003403, 0.0886276587843895, 0.0936468094587326], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 0], [0, 1, 1], [0], [0], [0], [1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 7, 6, 5, 9, 1, 2, 9, 5, 1, 6, 4, 6, 2, 1, 9, 9, 2, 0], [4, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [0, 1, 1], [0, 0, 1], [8, 2], [6], [], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5], [3, 0, 2, 1, 2], [12]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3037990081453557, 2.3025122675456706, 2.302977960532635, 2.30421423197202, 2.3037366349667825, 2.3019814573778468], "accuracy": [0.09285431355237961, 0.08994849026203156, 0.09008057415485382, 0.08889182657003403, 0.0886276587843895, 0.0936468094587326], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]