[{"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 3, 0], [3, 2, 2, 0], [64, 35], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1], [2, 4, 3], [0, 2, 2, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [12, 92]], "fitness": -0.17657142877578735, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5925596096354737, 592131185160.2212, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17461365461349487, 0.10500594228506088, 0.10738343745470047, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0469626699175154, 9.429442860556104e+29, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.15466666221618652, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [0, 2, 2, 3, 0, 3, 1, 0, 2, 1, 2, 3, 2, 2, 0, 2, 3, 3], [52], [1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1], [3, 7, 9, 8, 5, 5], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [35, 14], [0, 0, 1], [0, 0], [8, 9], [1], [63], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [61, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3027121777610695, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0], [4, 2, 1, 1, 8], [3, 3, 0, 0], [31], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1], [2, 3, 3, 8, 5], [0, 2, 0, 5], [86, 14], [0, 0, 0, 1], [0, 1, 1], [2, 8], [1, 6], [], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [9], [2, 0, 2, 1, 2, 2, 1, 1], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [50998847550.2015, 7666695560132.895, 131318659165900.17, 936342748829200.1, 4134334910921726.0, 1.3656000968264852e+16], "accuracy": [0.09576013684272766, 0.10091137140989304, 0.10394927859306335, 0.10157178342342377, 0.10038304328918457, 0.10210011899471283], "val_loss": [432975811145.1429, 23341540835328.0, 250537608254025.16, 1365736862927140.5, 5115667593747310.0, 1.5092430712714972e+16], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [7, 1, 3, 0, 1, 8, 8, 1, 8, 0], [0, 2, 0, 0, 3, 3, 0], [27, 66, 5], [0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1], [2, 4, 6], [3, 2, 1, 5], [86, 14], [1, 0, 0, 1], [1], [3], [1], [], [1, 0, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [326746354.16622996, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [1, 3, 3, 1], [52], [1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1], [2, 7, 9, 8, 5, 5], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [35, 14], [0, 0, 1], [0, 1], [0], [7, 2], [28], [1, 0, 0], [5, 4, 3, 3, 4, 8, 5], [1, 0, 2, 1, 2], [79, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 4, 4, 4, 4, 7, 0, 5, 3, 8, 0, 0, 7, 2, 6, 8, 4, 5, 4], [2, 2, 1, 5, 5, 4, 0, 2, 0, 5, 3, 5], [86, 14, 85], [1], [0, 0, 0], [], [1], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 6, 6, 1, 5, 3, 6, 2, 4, 2, 0, 8], [2, 0, 2, 1, 3, 1, 0, 0, 3, 3, 3, 0], [41, 16, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 19, 12, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.pow(beta, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), beta)))))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, grad), grad)))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1233612201.288013, 23697398192.5389, 109455563366.31885, 308075464036.662, 663711573789.0455, 1218509055563.133], "accuracy": [0.09576013684272766, 0.10091137140989304, 0.10408136248588562, 0.10157178342342377, 0.10038304328918457, 0.10196803510189056], "val_loss": [4762616832.0, 38089609801.14286, 128539337874.28572, 304673699547.4286, 595049335076.5714, 1028226734957.7142], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 3, 9, 5, 3, 7], [3, 2, 3, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [86, 14], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1], [4, 4, 3, 8, 7, 0], [1], [], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 6, 6, 6, 5, 3, 6, 2, 4, 2, 0, 8], [1, 0, 0, 3, 2, 2, 1, 2, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 10, 5, 5, 0, 0, 12, 6, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad)))), tf.math.multiply(beta, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.multiply(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10711926966905594, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [0, 2, 2, 3, 0, 3, 1, 0, 2, 1, 2, 3, 2, 2, 0, 2, 3, 3], [52], [1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1], [5, 7, 9, 8, 5, 5], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [35, 14], [1, 0, 1], [1, 1], [8, 1], [1], [78], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [77, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 5, 9], [4, 2, 1, 5], [86, 14], [1], [0, 0, 0], [1], [1], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 6, 6, 1, 5, 3, 6, 1, 4, 2, 0, 8], [1, 0, 0, 3, 2, 2, 1, 2, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 9, 5, 6, 5], [1, 3, 0, 3], [31], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 1, 3, 0, 7, 4, 9, 9, 2], [3, 3, 1, 5, 3, 0, 4, 4], [86, 14, 60], [1], [], [], [1], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [2, 2, 2, 1, 3, 1, 1, 0, 3, 3, 3, 0], [41, 16, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 1, 14, 14, 9, 5, 2, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, alpha)), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(grad, alpha)))), tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(beta, tf.math.add(tf.math.pow(beta, beta), alpha)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 1, 1], [0, 2, 9], [2, 3], [31], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 7, 2, 8], [0, 2, 0, 5, 2], [86, 14], [0, 0, 0], [0, 1, 1], [2, 8], [1, 6], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 5, 9, 9], [1, 0, 2, 1, 2], [12, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 4, 4, 0, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1232922059.2946172, 23684124700.673622, 109394262932.20341, 307903246768.2684, 663340785730.0034, 1217828448821.0867], "accuracy": [0.09576013684272766, 0.10091137140989304, 0.10408136248588562, 0.10157178342342377, 0.10038304328918457, 0.10196803510189056], "val_loss": [4759936146.285714, 38068215808.0, 128466986130.28572, 304501667547.4286, 594713416265.1428, 1027647172022.8572], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 1, 1], [0, 1, 1, 0], [0, 8], [2, 3], [31], [0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0], [2, 3, 3, 8, 5], [3, 1, 1, 2], [86, 14], [0, 0, 0], [1, 1, 1], [2, 8], [1, 6], [], [1, 0, 0], [1, 6, 6, 3, 5, 3, 6, 2, 4, 8, 0, 8], [2, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, alpha)), alpha), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [2, 3], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1], [2, 3, 9], [4, 2, 1, 5], [35, 14], [0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0], [1, 3, 3, 3], [1], [63], [1, 0, 0, 0, 1, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 7, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 3, 9, 6, 6, 0], [3, 2, 1, 5, 0, 2, 1, 3, 5, 0, 4, 0, 0, 3, 1, 3, 4], [35, 14, 47, 41, 87, 41, 18], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1], [3, 8, 6], [1, 5], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [5, 4, 3, 3, 3, 1, 5, 0], [2, 3, 2, 1, 2, 2], [53, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 12, 6, 6, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(beta, tf.math.multiply(sigma, tf.math.multiply(tf.math.multiply(beta, alpha), tf.math.subtract(beta, beta)))))", "other_info": {"loss": [2.3027121777610695, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1], [4, 1, 3, 3], [0, 0, 0, 2, 2], [64, 1, 4], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1], [2, 4], [0, 2, 0, 5], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [5, 0, 3, 2, 4, 8, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1], [0, 0, 1, 1], [0, 2, 3, 1, 8], [0, 3, 0, 3], [23], [0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1], [2, 4], [4, 2, 1, 5], [86, 14], [0, 0, 1, 1], [0, 1, 0], [3, 0], [4, 2], [], [0, 0, 0, 1, 0, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0], [0, 1, 0, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [0, 2, 2, 3, 0, 3, 1, 0, 2, 1, 2, 3, 2, 2, 0, 2, 3, 3], [52], [0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1], [5, 7, 9, 8, 5, 5], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [35, 14], [0, 0, 1], [0, 0], [8, 9], [1], [28], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [5, 4, 9, 3, 4, 8, 5], [1, 0, 0, 2, 3], [61, 27, 20]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 9, 6, 3, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.sqrt(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [2, 3], [31], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4], [3, 3, 1, 5, 3, 0, 4, 4], [35, 14], [1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1], [3, 3, 3, 6], [1, 7, 7], [63], [0, 1, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 0, 2, 3], [61, 27]], "fitness": -0.0820000022649765, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.2994216024096237, 2.300629544299056, 2.3020591607041534, 2.30283261233506, 2.304075847385645, 2.313816296284335, 2.4852691865663297, 3.8084542367436613, 8.11343866722884], "accuracy": [0.09615638852119446, 0.08228767663240433, 0.08981640636920929, 0.10751552134752274, 0.09919429570436478, 0.10487385839223862, 0.09840179979801178, 0.10130762308835983, 0.09879804402589798], "val_loss": [1.9706204959324427, 1.972693852015904, 1.9738328797476632, 1.9745838982718331, 1.9773708752223425, 2.01400511605399, 2.5293312753949846, 4.960325922284808, 11.029361724853516], "val_accuracy": [0.09066666662693024, 0.061666667461395264, 0.09333333373069763, 0.10599999874830246, 0.08033332973718643, 0.09733333438634872, 0.09533333033323288, 0.09833333641290665, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0], [1, 1, 0, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [1, 3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4, 6], [3, 2, 1, 5], [35, 14], [0, 0, 0], [1, 1, 1, 1], [3, 3], [4, 2], [63], [1, 0, 0], [1, 6, 6, 3, 5, 3, 6, 2, 4, 8, 0, 8], [1, 0, 0, 2, 3], [61, 27]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.300967765002439, 2.302087011401522, 2.3010094766965743, 2.301736514613361, 2.3033668950186303, 2.303176590763677], "accuracy": [0.09113723784685135, 0.09074098616838455, 0.0952318087220192, 0.09060890227556229, 0.09087307006120682, 0.09285431355237961], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 0], [1, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [1, 3, 0, 0], [97, 44], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [2, 4, 3, 3, 0, 1, 8, 1, 1, 0, 4, 5, 3, 0, 9], [3, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [35, 14], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1], [3, 3, 3, 3], [1, 6], [63], [1, 0, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 0, 2, 3], [12]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 15, 9, 2, 9, 4, 4, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.subtract(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.negative(grad), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(beta, grad)))), grad))))))), tf.math.add(beta, tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.300967765002439, 2.302087011401522, 2.3010094766965743, 2.301736514613361, 2.3033668950186303, 2.303176590763677], "accuracy": [0.09113723784685135, 0.09074098616838455, 0.0952318087220192, 0.09060890227556229, 0.09087307006120682, 0.09285431355237961], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]