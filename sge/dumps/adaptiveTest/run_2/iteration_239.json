[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.35514286160469055, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4267650868646724, 2.2531105473434856, 2.292150732894946, 2.3185992342936697, 2.7193715989298397, 2.304496153140065], "accuracy": [0.190859854221344, 0.19323734939098358, 0.18835029006004333, 0.13049794733524323, 0.10474177449941635, 0.10091137140989304], "val_loss": [1.7579097747802734, 1.863558224269322, 1.8454704965863908, 4.736848422459194, 1.9789480481828963, 1.9701545579092843], "val_accuracy": [0.35499998927116394, 0.23499999940395355, 0.17033334076404572, 0.10066666454076767, 0.10266666859388351, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 0, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [43, 38, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.21228571236133575, "mapping_values": [1, 33, 33, 18, 15, 3, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, grad))), tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.sqrt(alpha))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.6098713805536633, 118.85335390319945, NaN, NaN, NaN, NaN], "accuracy": [0.18319904804229736, 0.149649977684021, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9768309593200684, 92177.48883928571, NaN, NaN, NaN, NaN], "val_accuracy": [0.1289999932050705, 0.10599999874830246, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [3, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 38, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [9, 7, 4], [6, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 7, 2, 9, 3, 5, 1, 5, 8], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10057143121957779, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 14, 9, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))), alpha)), beta))", "other_info": {"loss": [295.14143903402527, 4594543423567.688, 343.72640371669036, 343.73479119752926, 343.7392809012185, 343.73056246327087, 343.74397222004734, 343.73386387591347], "accuracy": [0.10236428678035736, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10011887550354004, 0.09998679161071777, 0.10011887550354004], "val_loss": [301.1207013811384, 301.17567661830356, 301.11070033482144, 301.1652047293527, 301.19293212890625, 301.145028250558, 301.2210693359375, 301.17230224609375], "val_accuracy": [0.0989999994635582, 0.09866666793823242, 0.09966666996479034, 0.0989999994635582, 0.09866666793823242, 0.09933333098888397, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [3, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 38, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [6, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [5, 6, 7, 2, 9, 3, 5, 1, 5, 8], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 15, 10, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))), alpha)), tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 6, 1, 6, 8, 2, 8, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [3, 0, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [32, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 2, 5, 5, 1, 7, 0, 6], [3, 0, 3, 1, 2, 0, 2, 3], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1010447493.1805875, 19523552476.86805, 90306866465.84705, 250618624002.97556, 536308418173.9881, 990092493808.4459], "accuracy": [0.10368511080741882, 0.10038304328918457, 0.10355303436517715, 0.10342095047235489, 0.10130762308835983, 0.10593052208423615], "val_loss": [3758008612.571429, 30054551552.0, 101423094637.71428, 240398307913.14285, 469511840914.2857, 811293119049.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 9, 1, 6, 8, 2, 8, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 2, 5, 5, 1, 7, 0, 6], [0, 0, 3, 1, 2, 0, 2, 3], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025380323717637, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [3, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [6, 38, 30, 46, 46, 4, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 6, 7, 2, 9, 6, 5, 1, 4, 0, 4, 4, 4, 6, 3, 0], [3, 0, 3, 1, 2, 0, 2, 2, 0, 3, 2], [31, 92, 5, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 27, 16, 11, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, alpha))), tf.math.negative(beta))), tf.math.pow(tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), beta), tf.math.pow(tf.math.divide_no_nan(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(sigma), beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [0, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025380323717637, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 6, 1, 6, 8, 2, 8, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [52, 38, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 7, 2, 2, 5, 5, 1, 7, 0, 6], [3, 0, 3, 1, 2, 1, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 19, 11, 8, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.square(tf.math.square(tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.add(alpha, beta))), alpha), tf.math.negative(tf.math.divide_no_nan(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [32, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 6, 1, 6, 8, 0, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [6, 38, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1010447493.1805875, 19523552476.86805, 90306866465.84705, 250618624002.97556, 536308418173.9881, 990092493808.4459], "accuracy": [0.10368511080741882, 0.10038304328918457, 0.10355303436517715, 0.10342095047235489, 0.10130762308835983, 0.10593052208423615], "val_loss": [3758008612.571429, 30054551552.0, 101423094637.71428, 240398307913.14285, 469511840914.2857, 811293119049.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [3, 0, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [52, 38, 83, 46, 46, 4, 22, 75], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 2, 5, 5, 1, 7, 0, 6], [2, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [2, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 4, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 6, 1, 6, 8, 4, 2, 8, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 3, 2, 2, 2, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [8, 38, 30, 46, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1, 7, 4, 5], [3, 0, 3, 1, 2, 0], [31, 61, 86]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 2, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 14, 9, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha))))), beta))", "other_info": {"loss": [1.4426300526309171e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 2, 6, 8, 2, 2, 6, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [1, 0, 2, 1, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [52, 38, 81, 93, 46, 4, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 2, 5, 5, 1, 7, 0, 6], [3, 0, 3, 1, 2, 0, 2, 3], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 50, 28, 22, 5, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)))))), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1010447493.1805875, 19523552476.86805, 90306866465.84705, 250618624002.97556, 536308418173.9881, 990092493808.4459], "accuracy": [0.10368511080741882, 0.10038304328918457, 0.10355303436517715, 0.10342095047235489, 0.10130762308835983, 0.10593052208423615], "val_loss": [3758008612.571429, 30054551552.0, 101423094637.71428, 240398307913.14285, 469511840914.2857, 811293119049.1428], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [23, 89, 92, 10, 35, 74, 22, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [4, 5, 2], [63], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [5, 6, 7, 7, 9, 5, 5, 1], [3, 0, 3, 1, 2], [66, 92]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(sigma, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.302150413329024, 2.3002111554350506, 2.3005382556799394, 2.301207939426834, 2.299755042806325, 2.2995957603638497, 2.3010082858003376, 2.2992327925929334, 2.299161897595564, 2.2987911726080306, 2.299537052898485, 2.299846690013786, 2.299378453464934, 2.3002438890998547, 2.2997833222540502], "accuracy": [0.09417514503002167, 0.09747721254825592, 0.09576013684272766, 0.0944393053650856, 0.09694888442754745, 0.10077928751707077, 0.09576013684272766, 0.10315678268671036, 0.09259014576673508, 0.10328886657953262, 0.1018359512090683, 0.09681680053472519, 0.10210011899471283, 0.09800554811954498, 0.10434553027153015], "val_loss": [1.9700051035199846, 1.969587734767369, 1.9694293567112513, 1.9693850789751326, 1.9694649151393346, 1.969580922807966, 1.969444683619908, 1.9694194112505232, 1.9694416182381767, 1.9695280620029993, 1.969766276223319, 1.9701110976082938, 1.9703448840550013, 1.9705321448189872, 1.9707983561924525], "val_accuracy": [0.04399999976158142, 0.052666667848825455, 0.06233333423733711, 0.06300000101327896, 0.06566666811704636, 0.06800000369548798, 0.07433333247900009, 0.07833333313465118, 0.0793333351612091, 0.08166666328907013, 0.07900000363588333, 0.07366666942834854, 0.06933332979679108, 0.07333333045244217, 0.0716666653752327]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 8, 6, 8, 2, 2, 9, 4, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [11, 89, 92, 10, 35, 74, 22, 75], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [1, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302547231342153, 2.3014796707277774, 2.302370943649649, 2.30365999758031, 2.3022566335454138, 2.301951661637084], "accuracy": [0.09351472556591034, 0.09457138925790787, 0.09113723784685135, 0.09219389408826828, 0.09192973375320435, 0.09417514503002167], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 1, 6, 8, 2, 2, 9, 3, 5, 4, 6, 4, 6, 2, 2, 4, 8, 8, 2, 8, 2, 5, 8, 1, 3, 2, 2, 1, 2], [0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 3, 2, 2, 2, 1, 0, 1, 2, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2], [32, 89, 92, 10, 35, 74, 22, 75], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 3, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [9, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [5, 6, 7, 2, 9, 5, 5, 1], [3, 0, 3, 1, 2], [31, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(sigma))))", "other_info": {"loss": [2.302547231342153, 2.3014796707277774, 2.302370943649649, 2.30365999758031, 2.3022566335454138, 2.301951661637084], "accuracy": [0.09351472556591034, 0.09457138925790787, 0.09113723784685135, 0.09219389408826828, 0.09192973375320435, 0.09417514503002167], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]