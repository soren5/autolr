[{"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 4], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.1265714317560196, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.299696128602356, 2.3004741211766344, 2.302114779623886, 2.303173356162653, 2.3079368254102657, 2.401903498678191], "accuracy": [0.09893012791872025, 0.08968432247638702, 0.07607977837324142, 0.08083476126194, 0.10196803510189056, 0.10038304328918457], "val_loss": [1.969290052141462, 1.9727956226893835, 1.973959105355399, 1.9755594389779227, 1.9928971018110002, 2.3015611512320384], "val_accuracy": [0.1106666699051857, 0.06499999761581421, 0.0806666687130928, 0.11033333092927933, 0.10266666859388351, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1], [0, 1, 0, 1], [4, 8], [2, 2], [], [0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0], [8], [3], [66], [0], [1], [], [1], [], [1], [], [1], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [1], [2, 2], [80], [1], [1], [], [1, 2], [86, 14], [1], [], [5], [1], [], [0, 1, 0], [1, 9], [1, 0, 2, 1, 2], [66, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1121437934.4212284, 21527168100.222427, 99444243672.81046, 274043014867.73846, 587213455639.1621, 1100125274938.666], "accuracy": [0.09932637959718704, 0.09800554811954498, 0.09879804402589798, 0.10381719470024109, 0.10328886657953262, 0.09774138033390045], "val_loss": [4287316699.428571, 34287886336.0, 115709547081.14285, 274260801243.42856, 535646512274.2857, 925585805897.1428], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1], [1], [], [2], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [7, 2, 0, 2, 8, 7, 5, 6], [0, 2, 2, 0, 3, 4], [46, 63], [0], [1], [], [6], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [7, 7, 5, 2, 1, 5, 9, 0], [3, 2, 2, 0, 3], [51, 64, 76]], "fitness": -0.10000000149011612, "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(sigma, tf.math.square(tf.math.add(tf.math.subtract(tf.math.square(beta), beta), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 11, 6, 5, 1]}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 2, 3, 1, 5, 8, 0, 2, 1, 8, 4, 2, 6, 8, 8, 0, 1, 9], [1, 1, 2, 2, 0, 3, 3, 1, 0, 1], [38, 13, 76], [0], [0], [9], [1, 5], [21], [1], [0, 1], [3, 7], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 0], [1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 3, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), alpha), tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.sqrt(grad)))), alpha))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302655934783619, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2], [56], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [7, 2, 4, 1, 5, 1, 4, 2, 8, 3, 8, 0, 4, 5, 0, 2, 3, 0, 2], [2, 1, 1, 5, 4, 5, 0, 3, 3, 0, 1, 3], [16, 56, 75, 94], [0, 0, 1], [1], [], [1], [], [1], [], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 30, 30, 18, 12, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.pow(alpha, alpha), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.square(tf.math.negative(grad)), grad))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), grad))))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.10673341321561, 2.5031516530557534, 3.1573043834452994, 2.334963460750174, 2.80361158169807, 2.3594464892645743, 2.341409713962783, 2.3491931955465755], "accuracy": [0.23220182955265045, 0.1080438494682312, 0.11491216719150543, 0.09985470771789551, 0.10011887550354004, 0.09813763201236725, 0.10038304328918457, 0.09668471664190292], "val_loss": [1.9832581792558943, 1.9039308003016882, 2.0227857317243303, 2.070052146911621, 1.9792348316737585, 2.0134615898132324, 2.064486707959856, 2.0281549862452914], "val_accuracy": [0.10199999809265137, 0.0963333323597908, 0.10366666316986084, 0.10300000011920929, 0.10166666656732559, 0.10233332961797714, 0.09533333033323288, 0.10300000011920929]}}, {"genotype": [[0], [0, 0], [1, 0], [8], [3, 0, 1, 2, 3, 2, 1, 2, 1], [56], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0], [1], [], [1], [1], [5], [1], [], [1], [], [2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [4, 2, 2, 9, 3, 9], [2, 3, 3], [94, 44], [0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0], [7, 1, 6, 7, 9, 9], [0, 4, 1, 5], [45, 14, 22], [1], [], [], [6], [], [1], [], [1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 9, 9, 6, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [1], [3, 0, 1, 2, 3, 2, 1, 2, 1], [7], [1], [1], [], [1], [], [1], [], [], [1], [], [1], [5, 6, 5], [0], [36]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302655934783619, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0], [0, 1, 0, 0], [2, 5, 9], [0, 1], [26, 70], [1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [3, 5, 9], [2, 3, 1, 5, 4, 2], [16, 8, 38], [0], [1], [], [6], [], [1], [], [1], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [195109061.01269597, 3106216305.984414, 13600865170.03936, 36573185504.55369, 77455772665.3726, 143821284939.133], "accuracy": [0.09932637959718704, 0.09800554811954498, 0.09879804402589798, 0.10381719470024109, 0.10328886657953262, 0.09774138033390045], "val_loss": [549355154.2857143, 4360654409.142858, 14678794532.571428, 34748908690.28571, 67816095744.0, 117124691675.42857], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 1], [0, 1], [0], [2], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [7, 2, 4, 1, 5, 1, 4, 2, 8, 3, 8, 0, 4, 5, 0, 2, 0, 0, 9], [0, 4, 1, 5], [16, 56, 75, 94], [0], [1], [], [1], [], [1], [], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08492933213710785, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1], [0, 1, 0, 0, 1], [2, 0, 5], [2, 0], [70], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [7, 1, 6, 7, 9, 1, 1, 0, 5, 6, 3, 6, 2, 2, 0, 6, 5, 0, 0], [2, 3, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [16, 56, 44, 85, 22], [0, 0, 1], [1], [], [1], [], [1], [], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 31, 31, 19, 12, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha))), tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))))), alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [9.839338814795123e+25, 51.58035580079947, 12763.094813112948, 3235345.902869502, 829406066.6670189, 214287611393.55542], "accuracy": [0.11715757846832275, 0.09813763201236725, 0.09708096832036972, 0.1018359512090683, 0.10302469879388809, 0.09615638852119446], "val_loss": [2.445269925253732, 336.6820591517857, 86003.44866071429, 22016525.14285714, 5636230436.571428, 1442874991762.2856], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0], [1], [2, 5], [2], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 2, 9, 5], [0, 3, 1, 5, 4, 2], [28, 68], [0, 1], [1], [], [6], [], [1, 1, 1], [8], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 0], [0, 9], [2], [52], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0], [7, 6, 4, 1, 5, 1, 4, 2, 8, 3, 8, 0, 4, 5, 0, 2, 0, 0, 9], [2, 3, 1, 5, 4, 5, 0, 3, 0, 0, 1], [16, 56, 75, 94], [0, 0, 1], [1], [], [1], [], [1], [], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302655934783619, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [3], [], [0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0], [7, 1, 6, 7, 9], [3, 3, 1, 2], [16, 56], [0], [1], [], [1], [], [1], [], [1], []], "fitness": -0.10000000149011612, "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, alpha), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [5, 6, 5, 3, 4, 1, 1, 6, 6, 0, 2, 3, 7, 6, 5, 7, 1, 8, 2, 7, 6, 4, 3, 5, 2, 9, 0, 0, 3, 5, 3, 8, 8, 5, 5], [2, 2, 3, 3, 2, 3, 1, 2, 3, 2, 3, 3, 3, 3, 1, 3, 0, 0, 2, 3, 1], [56, 43, 29], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0], [8, 2, 4, 1, 5, 1, 4, 2, 8, 3, 8, 0, 4, 5, 0, 2, 0, 0, 9], [0, 4, 1, 5], [16, 56, 75, 94], [0, 1], [0], [8], [1], [], [1], [], [0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 56, 56, 35, 21, 3, 4, 4, 2, 2, 1, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 64, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))))), alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), grad)))), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))))))), grad))), grad)), alpha))), tf.math.add(alpha, grad)))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.square(grad))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302655934783619, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1], [0, 1], [0], [2], [56], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [7, 1, 6, 7, 9, 2, 9, 6], [0, 4, 1, 5], [45, 63, 53, 28], [1], [1], [], [1], [], [1], [], [1], []], "fitness": -0.06942857056856155, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.102993286580237, 2.3702219275750536, 2.35218638451722, 2.327488170087676, 2.3210549096641695, 2.3272565906672287, 2.3243681179644207], "accuracy": [0.23233389854431152, 0.10210011899471283, 0.10421344637870789, 0.09694888442754745, 0.09800554811954498, 0.09972262382507324, 0.09985470771789551], "val_loss": [1.9841722079685755, 1.9969189507620675, 1.975999219076974, 1.986025265284947, 1.9881838389805384, 1.9961280822753906, 2.00234317779541], "val_accuracy": [0.10166666656732559, 0.10300000011920929, 0.09733333438634872, 0.10233332961797714, 0.10300000011920929, 0.09733333438634872, 0.09533333033323288]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2], [56], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [7, 2, 4, 1, 5, 1, 4, 2, 8, 3, 8, 0, 4, 5, 0, 2, 0, 0, 9], [2, 3, 1, 5, 4, 5, 0, 3, 0, 0, 1], [16, 56, 75, 94], [0, 0, 1], [1], [], [1], [], [1], [], [1], []], "fitness": -0.03971428424119949, "mapping_values": [1, 2, 2, 1, 1, 0, 29, 29, 19, 10, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.pow(grad, alpha), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.square(tf.math.negative(grad)), grad))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.099898212227792, 16.061361175313397, NaN, NaN, NaN, NaN], "accuracy": [0.23286223411560059, 0.09734513610601425, 0.11279883980751038, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.154694080352783, 2439.68017578125, NaN, NaN, NaN, NaN], "val_accuracy": [0.12566666305065155, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 6, 7, 3, 5, 8, 3, 6, 2, 8, 2, 0, 4], [2, 2, 1, 2, 1, 0, 0, 1, 0], [56, 26, 96], [0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0], [7, 1, 6, 0, 9], [1, 2, 2, 1], [80], [0, 0], [1], [5], [1], [], [1], [2, 0, 4, 8, 2, 9], [1], [61]], "fitness": -0.0357142873108387, "mapping_values": [1, 22, 22, 13, 9, 3, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, alpha)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302174482205761, 2.3038998863180913, 2.3023235853936113, 2.301746079792924, 2.3018984121023593, 2.303034303525593], "accuracy": [0.09034473448991776, 0.09192973375320435, 0.09047681838274002, 0.09034473448991776, 0.09245806187391281, 0.09298639744520187], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [1, 1], [0, 1], [0], [1, 2], [], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [2, 1, 6, 7, 9, 7, 2, 1, 9], [0, 3, 1, 5, 4, 2], [16, 8, 38], [0], [1], [], [1], [], [1], [], [1], []], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), alpha), tf.math.add(beta, grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302174482205761, 2.3038998863180913, 2.3023235853936113, 2.301746079792924, 2.3018984121023593, 2.303034303525593], "accuracy": [0.09034473448991776, 0.09192973375320435, 0.09047681838274002, 0.09034473448991776, 0.09245806187391281, 0.09298639744520187], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}}]