[{"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0], [7, 1, 6, 7, 9], [0, 3, 1, 5], [16, 56], [0], [1], [], [1], [], [1], [], [1], []], "fitness": -0.23514285683631897, "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.1136461031073197, 2.4625314654391977, 406.1595373890577, NaN, NaN, NaN], "accuracy": [0.19838859140872955, 0.12891295552253723, 0.10962884873151779, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1275125231061662, 2.0284701074872697, 121414523.42857143, NaN, NaN, NaN], "val_accuracy": [0.19699999690055847, 0.09733333438634872, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [6, 6, 8, 2, 2, 3, 3, 5, 6, 6, 1, 9], [3, 0, 1, 2, 3, 2, 1, 2, 1], [22, 30], [0], [1], [], [1], [], [0, 0], [0, 1], [5], [1], [], [0, 0, 1, 0, 1], [5, 6, 5], [0, 0], [38, 3]], "fitness": -0.10000000149011612, "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), alpha), grad))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3032618221778756, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 21, 21, 12, 9, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 3, 2, 2]}, {"genotype": [[0], [1, 1, 0], [0, 1, 1], [6], [0, 3], [4], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [3, 5, 3, 3, 0, 2, 6, 9, 5], [0, 3, 5, 0, 5], [28, 80, 87], [0], [0], [9], [], [0], [0, 0, 1, 0, 1, 1], [4, 4, 0], [1, 3, 1], []], "fitness": -0.10000000149011612, "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(alpha, tf.math.negative(sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 9, 5, 3, 1, 1, 1, 0, 1, 6, 3, 3, 0]}, {"genotype": [[0], [1, 1], [0, 1], [8], [0], [80], [1], [1], [], [1], [], [1], [], [], [], [], [0, 1], [0], [0], [41]], "fitness": -0.10000000149011612, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4422381.306252604, 84159251.34962356, 382057893.1269317, 1075531121.8322546, 2332184548.3069606, 4237309964.7814026], "accuracy": [0.1002509593963623, 0.09747721254825592, 0.09787346422672272, 0.09602430462837219, 0.1022322028875351, 0.10077928751707077], "val_loss": [16860057.714285713, 134611181.7142857, 454012928.0, 1075826834.2857144, 2100812873.142857, 3629734546.285714], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1]}, {"genotype": [[0], [1], [1], [], [0], [9], [1], [1], [], [4], [], [0], [1], [], [3], [], [1], [], [0], [89]], "fitness": -0.10000000149011612, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027568320399183, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]}, {"genotype": [[0], [1], [1], [], [1], [], [0, 0, 0, 1], [0, 0, 0, 1], [7, 8, 9], [2], [26], [1], [], [], [], [], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 2, 3, 5, 8, 7], [2, 2, 2, 0, 2], [31]], "fitness": -0.10000000149011612, "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.multiply(beta, tf.math.square(tf.math.sqrt(beta))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 11, 6, 5, 1]}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [1], [0, 1], [7], [0], [1], [], [1], [], [1], [], [], [], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302033514599239, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [1], [0], [9], [], [45], [1], [], [], [], [], [0, 1, 0], [1, 9], [3], [41]], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4446479.467426009, 84047858.79804517, 388907315.95403516, 1077807346.880465, 2340682805.7968564, 4283072412.859596], "accuracy": [0.10342095047235489, 0.09787346422672272, 0.10196803510189056, 0.09932637959718704, 0.09853387624025345, 0.09140139818191528], "val_loss": [16860057.714285713, 134611181.7142857, 454012928.0, 1075826834.2857144, 2100812873.142857, 3629734546.285714], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1]}, {"genotype": [[0], [0], [1], [], [1], [], [0], [1], [], [0], [28], [0, 1], [0], [0], [], [], [0, 1, 1], [4], [1, 1], []], "fitness": -0.10000000149011612, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, alpha)", "other_info": {"loss": [2.303015688296716, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 3, 1, 2, 0]}, {"genotype": [[0], [0], [1], [], [2], [], [1, 1], [0, 1], [0], [3], [], [0], [1], [], [6], [], [1], [], [0], [6]], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301915261692233, 2.3025851114598312, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]}, {"genotype": [[0], [1], [1], [], [2], [], [0], [1], [], [0], [46], [0], [1], [], [6], [], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [7, 7, 5, 2, 4, 4, 9, 0], [3, 0, 2, 0, 3], [51, 64, 76]], "fitness": -0.10000000149011612, "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(sigma, tf.math.square(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), sigma)", "other_info": {"loss": [2.3022430536375698, 2.312056565627981, 2.607736034353002, 9.989653039271444, 24.31714006251883, 38.72774249706538], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9760689054216658, 2.014920779636928, 3.793695858546666, 15.80496324811663, 28.19385746547154, 40.57875714983259], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 8, 5, 3]}, {"genotype": [[0], [1], [1], [], [0], [14], [0], [1], [], [4], [], [0, 0, 1], [0, 1], [4], [3], [], [0], [9], [], [25]], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303351382663804, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1]}, {"genotype": [[0], [0], [1], [], [3], [], [1], [1], [], [3], [], [0, 0, 1, 1, 1], [0, 0], [3, 7], [], [], [0, 1, 0], [1, 9], [0], [54, 71]], "fitness": -0.10000000149011612, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [25294912.84831281, 482344821.6785101, 2267884453.0423985, 6333158604.231937, 13633518244.5352, 24681292405.46718], "accuracy": [0.09628847241401672, 0.10210011899471283, 0.09813763201236725, 0.09576013684272766, 0.09972262382507324, 0.1010434553027153], "val_loss": [98514555.42857143, 787253686.8571428, 2656010971.428571, 6294599094.857142, 12292803437.714285, 21240432932.57143], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 3, 2, 1, 2]}, {"genotype": [[0], [1, 1], [0, 1], [8], [2], [], [1, 1], [0, 1], [5], [5], [], [0], [1], [], [1], [], [0, 1], [0], [1], []], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0]}, {"genotype": [[0], [0], [1], [], [0], [64], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 1, 4, 1, 3, 2], [3, 4, 1, 3, 3, 0, 3], [91], [0, 1, 1], [0], [3], [], [], [1], [], [0], [55]], "fitness": -0.10000000149011612, "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), grad)))), tf.math.add(grad, tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302739228554815, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 6, 7, 1, 3, 1, 1, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [1, 1, 1, 0], [0, 1, 0, 1], [3, 0], [2, 2], [], [1, 1, 1], [0, 1, 1], [2], [0, 0], [86, 14], [1], [], [], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 6, 7, 6], [1, 0, 2, 1, 2], [93]], "fitness": -0.10000000149011612, "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), beta)), tf.math.divide_no_nan(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 9, 4, 5, 1]}, {"genotype": [[0], [1], [0], [9], [], [56], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [7, 2, 4, 1, 6, 1, 3, 2, 8, 3, 8, 0, 4, 8, 0, 2, 0, 0, 9], [4, 4, 3, 0, 1, 1, 1, 1, 2, 5, 3], [92, 14], [0, 0, 1], [0, 1], [6], [4], [], [1], [], [1], []], "fitness": -0.10000000149011612, "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(grad, grad), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, alpha)))))), tf.math.negative(tf.math.negative(tf.math.add(beta, alpha)))))), beta)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [24863976415.700737, 3779938948230.306, 65212503112726.05, 448632058186904.44, 1982541318657521.8, 6563337589751843.0], "accuracy": [0.09721305221319199, 0.09325055778026581, 0.10249637067317963, 0.09932637959718704, 0.09998679161071777, 0.09800554811954498], "val_loss": [212294313106.2857, 11444457158363.428, 122840632861842.28, 669710684108507.4, 2508876845191753.0, 7398265697562039.0], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}, "mapping_values": [1, 1, 1, 1, 0, 1, 30, 30, 19, 11, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0, 0], [0, 1], [5], [3], [], [1, 0], [0, 1], [0], [5], [], [1], [], [], [], [], [1], [], [3], []], "fitness": -0.0357142873108387, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3004722922721546, 2.3028855158148693, 2.302468630238106, 2.3039359012851155, 2.3030641515414634, 2.3019938642133764], "accuracy": [0.1002509593963623, 0.08994849026203156, 0.08691058307886124, 0.08558975160121918, 0.08836349099874496, 0.09311848133802414], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1], [1], [], [3], [], [0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [4, 6, 0], [0, 0, 0], [31, 33, 90], [1], [], [], [], [], [1], [], [3], []], "fitness": -0.0357142873108387, "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027517250767944, 2.3032071391400284, 2.3025496849656624, 2.3027340859753376, 2.303856179131934, 2.3031635835831743], "accuracy": [0.09034473448991776, 0.0882314071059227, 0.09219389408826828, 0.09047681838274002, 0.09285431355237961, 0.08836349099874496], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [0], [17], [1], [1], [], [3], [], [0, 0, 0], [0, 1, 1], [3], [5, 3], [], [0, 0, 1, 1], [0, 3], [3, 3], []], "fitness": -0.0357142873108387, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.302645185604355, 2.301547860393844, 2.302999243712964, 2.302940146231207, 2.3029149686498194, 2.30195155652003], "accuracy": [0.08717474341392517, 0.09457138925790787, 0.08585391938686371, 0.09008057415485382, 0.08994849026203156, 0.09021265059709549], "val_loss": [1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717, 1.971381732395717], "val_accuracy": [0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236, 0.035999998450279236]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 4, 2, 2, 0]}]