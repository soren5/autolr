[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 1, 4, 8, 4, 2, 3, 2, 4, 6, 9, 4, 2, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 1, 2, 3, 3], [68, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.42971429228782654, "mapping_values": [1, 26, 26, 14, 12, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), alpha)))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5167560090226364, 2.305114162218585, 2.35690038271269, 2.3035813372416376, 2.303358363563579, 2.3024139215035793, 2.278945211878605, 2.254885191269334, 2.3039582071051132, 2.3031229295467326, 2.3029592666391685, 2.3031559021654635], "accuracy": [0.15414080023765564, 0.11927089840173721, 0.1566503793001175, 0.09747721254825592, 0.09576013684272766, 0.1022322028875351, 0.14330999553203583, 0.16629242897033691, 0.09721305221319199, 0.09232597798109055, 0.10077928751707077, 0.09919429570436478], "val_loss": [1.981494699205671, 1.9266283852713448, 1.974465983254569, 1.973748002733503, 1.9734868322099959, 1.972069263458252, 1.8207121576581682, 1.974571909223284, 1.9737542697361536, 1.9737356730869837, 1.973578657422747, 1.973599910736084], "val_accuracy": [0.1003333330154419, 0.3736666738986969, 0.09700000286102295, 0.09700000286102295, 0.1003333330154419, 0.1003333330154419, 0.40833333134651184, 0.0976666659116745, 0.10133333504199982, 0.10133333504199982, 0.10066666454076767, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 1, 0, 8, 4, 2, 3, 3, 4, 6, 9, 3, 4, 2, 2], [1, 0, 2, 0, 0, 2, 1], [80, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.3002857267856598, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.516192033322039, 2.305414468101176, 2.3520877991748006, 2.3030173297351015, 2.2816326993252734, 2.6622561657071317, 2.304452629200204, 2.303547914679087, 2.303411050290637, 2.302871800810512], "accuracy": [0.1542728841304779, 0.11319508403539658, 0.15334829688072205, 0.10117553919553757, 0.15361246466636658, 0.14238542318344116, 0.09893012791872025, 0.09959053993225098, 0.09259014576673508, 0.09879804402589798], "val_loss": [1.9813592093331474, 1.9561008044651575, 1.9742238862173898, 1.9723830223083496, 1.803640638078962, 1.9764094352722168, 1.9740968431745256, 1.9737472534179688, 1.9736285209655762, 1.973722049168178], "val_accuracy": [0.1003333330154419, 0.21766667068004608, 0.09700000286102295, 0.09700000286102295, 0.27300000190734863, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [2, 2, 1, 0, 0, 2, 1, 0, 1, 0, 3, 3, 1, 3, 0], [93, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.2882857024669647, "mapping_values": [1, 19, 19, 13, 6, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5167474958638727, 2.3061957619429863, 2.271146951082628, 2.303345645848613, 2.3029952494223607, 2.3026368497085925, 2.297680957710045], "accuracy": [0.1542728841304779, 0.11557257920503616, 0.1636507660150528, 0.10302469879388809, 0.09893012791872025, 0.10342095047235489, 0.1290450394153595], "val_loss": [1.9814414296831404, 1.9427496365138464, 1.9740103312901087, 1.9736038616725378, 1.9734533173697335, 1.9728074754987444, 1.9358375413077218], "val_accuracy": [0.1003333330154419, 0.31066668033599854, 0.10199999809265137, 0.1003333330154419, 0.1003333330154419, 0.12433333694934845, 0.2853333353996277]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 1, 1, 0, 8, 1, 2, 3, 9, 4, 6, 9, 4, 0, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 2, 2, 1, 1, 3, 1, 0], [68, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.2879999876022339, "mapping_values": [1, 29, 29, 18, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), alpha)), tf.math.negative(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.516737692108275, 2.3068708458974645, 2.544750840137065, 2.3050039559307507, 2.285473458093974, 2.3049825137207267, 2.3032355655878765], "accuracy": [0.15414080023765564, 0.10777968913316727, 0.19852067530155182, 0.0952318087220192, 0.14159291982650757, 0.1002509593963623, 0.09694888442754745], "val_loss": [1.9814769199916296, 1.9488958631243025, 1.9778618131365096, 1.9733728681291853, 1.9775745528084892, 1.9737836292811803, 1.9736944607325964], "val_accuracy": [0.1003333330154419, 0.2720000147819519, 0.10199999809265137, 0.10000000149011612, 0.0976666659116745, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 2, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [2, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 3, 1, 3, 0], [93, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.27971428632736206, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.516784309443387, 2.3065167373717186, 2.252524374435449, 2.562517863443546, 2.304557038524982, 2.303482389878351, 2.300591518818789], "accuracy": [0.15414080023765564, 0.1080438494682312, 0.18557654321193695, 0.14661207795143127, 0.09787346422672272, 0.1006472036242485, 0.11491216719150543], "val_loss": [1.9814944948468889, 1.9471892629350935, 1.6913371426718575, 1.9755875042506628, 1.9743237495422363, 1.9732631955827986, 1.961590153830392], "val_accuracy": [0.1003333330154419, 0.27933332324028015, 0.23633334040641785, 0.0976666659116745, 0.0976666659116745, 0.09733333438634872, 0.2006666660308838]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 1, 1, 2, 8, 4, 2, 6, 9, 4, 6, 9, 4, 2, 7, 3, 2, 0, 3, 4, 7, 8, 0, 1], [2, 2, 1, 0, 0, 2, 2, 0, 1, 0, 3, 3, 1, 3, 0, 1, 0], [66, 32, 99, 69, 64, 69, 22, 53], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.26257142424583435, "mapping_values": [1, 41, 41, 24, 17, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), grad)))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.5167290203291994, 2.306413811778254, 2.3985600541091756, 2.3068819503585156, 2.3035785075522623, 2.303007815633987, 2.30295904752459], "accuracy": [0.1542728841304779, 0.11411966383457184, 0.22335226833820343, 0.09998679161071777, 0.09826971590518951, 0.09906221181154251, 0.09787346422672272], "val_loss": [1.9814863204956055, 1.9374493190220423, 1.9824034145900182, 1.9746924127851213, 1.973984854561942, 1.9737757274082728, 1.9736975261143275], "val_accuracy": [0.1003333330154419, 0.2953333258628845, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.1003333330154419, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 8, 3, 1, 2, 4, 2, 3, 9, 4, 6, 9, 9, 2, 7, 0], [2, 2, 1, 0, 0, 2, 1, 0, 1, 0, 3, 3, 1, 3, 0], [66, 32, 99, 53, 64, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.16599999368190765, "mapping_values": [1, 25, 25, 16, 9, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.436894016589597, 2.687859268015906, 2.4456249404151946, 2.4337381205585857, 2.45194657682475, 2.4046583047805603, 2.400689134760272, 2.4326992507592453, 2.441074741325988, 2.4544489532335168, 2.448437263307129], "accuracy": [0.16338661313056946, 0.1018359512090683, 0.10011887550354004, 0.10302469879388809, 0.10011887550354004, 0.10170386731624603, 0.11768590658903122, 0.1010434553027153, 0.10210011899471283, 0.1006472036242485, 0.1022322028875351], "val_loss": [2.163538932800293, 2.1020432199750627, 2.1293296132768904, 2.082700729370117, 2.055379186357771, 1.9597081456865584, 2.0799691336495534, 2.05833523614066, 2.110906260354178, 2.1002393450055803, 2.121006284441267], "val_accuracy": [0.10233332961797714, 0.09799999743700027, 0.0976666659116745, 0.09700000286102295, 0.10233332961797714, 0.1483333259820938, 0.10266666859388351, 0.0976666659116745, 0.09700000286102295, 0.10233332961797714, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 8, 3, 5, 2, 4, 5, 3, 0, 4, 6, 9, 9], [2, 2, 1, 0, 2, 2, 1, 0, 1, 0, 3, 3, 1, 3, 0], [93, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 13, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3026363586059984, 2.3026005395131732, 2.302605622606097, 2.302605154240026, 2.3026149342513875, 2.30260404600774], "accuracy": [0.09325055778026581, 0.09893012791872025, 0.09866596013307571, 0.09708096832036972, 0.09576013684272766, 0.09760929644107819], "val_loss": [1.9736459595816476, 1.9736441203526087, 1.9736406462533134, 1.9736417361668177, 1.9736377171107702, 1.9736434391566686], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.10233332961797714, 0.10233332961797714, 0.1003333330154419, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 1, 5, 8, 4, 2, 3, 4, 3, 6, 9, 4, 2, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 1, 1, 3], [68, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha))), tf.math.add(alpha, alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11940298229455948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 1, 5, 8, 4, 2, 6, 1, 4, 6, 9, 4, 2, 7, 3, 2, 0, 3, 4, 7, 8, 0, 8, 4, 7, 7, 7, 4, 0, 2, 9], [1, 0, 2, 2, 0, 2, 2, 1, 0, 2, 1, 3, 1, 2, 1, 3, 1, 1, 0, 2, 0, 1], [66, 32, 99, 69, 64, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 54, 54, 32, 22, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad)))), alpha)), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))))))), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.4381673117796225, 2.5443976513383064, 2.3868835128892005, 2.3845864979503744, 2.4882614244134307, 2.401012113459311], "accuracy": [0.16338661313056946, 0.10249637067317963, 0.09866596013307571, 0.10038304328918457, 0.09126931428909302, 0.09813763201236725], "val_loss": [2.161616802215576, 2.072068282536098, 2.143003123147147, 2.105602877480643, 2.059577396937779, 2.1080235753740584], "val_accuracy": [0.10233332961797714, 0.09700000286102295, 0.0976666659116745, 0.09700000286102295, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [3, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2], [66, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0], [3, 7, 4, 9], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [2, 2, 1, 0, 0, 2, 1, 0, 1, 0, 3, 3, 1, 3, 0], [93, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [2, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 1, 1, 4, 8, 4, 2, 3, 1, 8, 6, 9, 4, 2, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 1, 2, 1, 1, 1, 3, 1, 3, 0, 2, 0, 2], [66, 26, 99, 69, 64, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 39, 22, 17, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), tf.math.pow(tf.math.add(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, alpha)))))), grad)))))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.438101593214586, 2.5398354380122266, 2.401541622984663, 2.388447658339543, 2.5172176855808046, 2.4172205729428504], "accuracy": [0.16338661313056946, 0.10527011007070541, 0.09972262382507324, 0.1006472036242485, 0.09126931428909302, 0.09813763201236725], "val_loss": [2.1632189069475447, 2.06483725139073, 2.1437197412763322, 2.1418421609061107, 2.0662600653512135, 2.1116504669189453], "val_accuracy": [0.10233332961797714, 0.09700000286102295, 0.0976666659116745, 0.09700000286102295, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [1, 0, 2, 0, 0, 2, 1], [74, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [7, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [3, 0, 2, 0, 0, 2, 1], [66, 32, 99, 69, 64, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [4, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3026174615953954, 2.3025848374563895, 2.302587075712753, 2.3025861377209687, 2.302587680497961, 2.302588084937244], "accuracy": [0.09536388516426086, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.9736443247113908, 1.9736439841134208, 1.973644597189767, 1.973646572657994, 1.9736488887241908], "val_accuracy": [0.10133333504199982, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [3, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2], [66, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 8, 5, 8, 2, 4, 2, 3, 9, 4, 2, 9, 9], [1, 0, 2, 0, 0, 2, 2, 1, 0, 2, 1], [93, 32, 99, 69, 64, 79, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.438124884672295, 2.53779022518229, 2.411612217657129, 2.389389244037266, 2.5237676857358915, 2.4211471431275178], "accuracy": [0.16338661313056946, 0.10342095047235489, 0.09972262382507324, 0.1006472036242485, 0.09126931428909302, 0.09813763201236725], "val_loss": [2.162999698093959, 2.0690200669424876, 2.1380008969988142, 2.151092324938093, 2.0672812461853027, 2.1111046246119907], "val_accuracy": [0.10233332961797714, 0.0976666659116745, 0.0976666659116745, 0.09700000286102295, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 8, 2, 5, 2, 4, 2, 3, 9, 4, 8, 9, 3], [2, 2, 1, 0, 0, 2, 1, 0, 1, 0, 3, 3, 1, 3, 0], [68, 32, 99, 29, 64, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.09142857044935226, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301183459844099, 2.297455846169023, 2.2983462754462325, 2.299153394765858, 2.3000544858977086, 2.3008253089724406, 2.3004062710468403], "accuracy": [0.09298639744520187, 0.09985470771789551, 0.10791176557540894, 0.1006472036242485, 0.09959053993225098, 0.08875974267721176, 0.09179764986038208], "val_loss": [1.9686645780290877, 1.9685936655317033, 1.9703595978873116, 1.971264362335205, 1.9720934459141322, 1.9723352704729353, 1.9726392882210868], "val_accuracy": [0.0676666647195816, 0.08766666799783707, 0.08766666799783707, 0.08100000023841858, 0.08033332973718643, 0.07966666668653488, 0.07633333653211594]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [1, 0, 2, 0, 0, 2, 1, 1, 1, 1, 3], [82, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.0674285739660263, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018042788356285, 2.3005725369083727, 2.3019152787603705, 2.3011064565318717, 2.3006723309394594, 2.3015097618228992, 2.299798692773283, 2.3012685310949252, 2.3008463552772502, 2.30017684857292, 2.3008261802032433, 2.3001154696920905, 2.29964694301639, 2.300801588858848, 2.3007018966382566, 2.3003814009753483], "accuracy": [0.09008057415485382, 0.08875974267721176, 0.09206181764602661, 0.09417514503002167, 0.10117553919553757, 0.09166556596755981, 0.09734513610601425, 0.09074098616838455, 0.1002509593963623, 0.09734513610601425, 0.09126931428909302, 0.09998679161071777, 0.09628847241401672, 0.09391097724437714, 0.09760929644107819, 0.09681680053472519], "val_loss": [1.970344066619873, 1.9701788766043526, 1.9701222011021204, 1.9702957698277064, 1.9706148420061385, 1.9707517623901367, 1.9707536697387695, 1.9705872535705566, 1.9705395017351424, 1.9705372537885393, 1.9706967898777552, 1.9709865706307548, 1.9712285314287459, 1.9714648383004325, 1.97160005569458, 1.9717490332467216], "val_accuracy": [0.041333332657814026, 0.04600000008940697, 0.05533333495259285, 0.05700000002980232, 0.0573333315551281, 0.0560000017285347, 0.0573333315551281, 0.06133333221077919, 0.06533333659172058, 0.0676666647195816, 0.06800000369548798, 0.05966666713356972, 0.061000000685453415, 0.05966666713356972, 0.06266666948795319, 0.06400000303983688]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 8, 3, 5, 2, 4, 2, 3, 9, 4, 6, 9, 9], [2, 2, 1, 0, 0, 2, 1, 0, 1, 0, 3, 3, 1, 3, 0], [93, 32, 99, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30206881780603, 2.301406350826716, 2.3033386479751736, 2.3023108137660038, 2.30149077799153, 2.3025647843471373], "accuracy": [0.08942015469074249, 0.08677849918603897, 0.09166556596755981, 0.09259014576673508, 0.09694888442754745, 0.09074098616838455], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]