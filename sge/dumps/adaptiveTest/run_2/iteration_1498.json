[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.7820000052452087, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2709035731703455, 2.1654892892350044, 1.933529198760165, 1.584260634647904, 1.3100959771911718, 1.1533183111821372, 1.055170551597828, 0.9752033257197867, 0.9290590327823041, 0.8912134625105227, 0.859902385841224, 0.8383963531853265, 0.8151345102857243, 0.7848234593655691, 0.7823691580195107, 0.7633547535693374, 0.7498904749261012, 0.7498567047340837, 0.7299970489813589, 0.7353423716306781, 0.715425880656597, 0.6987091498667176, 0.6979818140290527, 0.6891623768729619, 0.6762586208681594, 0.6750764073854456, 0.6610506323460559, 0.6652413135931524], "accuracy": [0.1744815707206726, 0.33800026774406433, 0.43085458874702454, 0.5020473003387451, 0.5589750409126282, 0.5993924140930176, 0.6304318904876709, 0.6586976647377014, 0.6692643165588379, 0.6800950765609741, 0.6954167485237122, 0.6999075412750244, 0.7059833407402039, 0.7170783281326294, 0.7161537408828735, 0.7293620109558105, 0.7214370369911194, 0.7292299270629883, 0.7359662055969238, 0.7318716049194336, 0.7405890822410583, 0.7433628439903259, 0.7477215528488159, 0.7494386434555054, 0.754589855670929, 0.7585523724555969, 0.7581561207771301, 0.7543256878852844], "val_loss": [1.8924240384783064, 1.736013344355992, 1.4122920036315918, 1.068683726446969, 0.8681732586451939, 0.7659619706017631, 0.698508484022958, 0.6625503812517438, 0.6214009353092739, 0.6027027538844517, 0.5871115922927856, 0.5688310010092599, 0.5611521175929478, 0.5427250010626656, 0.5404122727257865, 0.5233513287135533, 0.5238269056592669, 0.5097242253167289, 0.5326840536934989, 0.5001649005072457, 0.4951129640851702, 0.4931448016847883, 0.4885251351765224, 0.47905569417136057, 0.4753888504845755, 0.4754857335771833, 0.4715544155665806, 0.47294468539101736], "val_accuracy": [0.42133334279060364, 0.5473333597183228, 0.593999981880188, 0.6153333187103271, 0.6983333230018616, 0.70333331823349, 0.7236666679382324, 0.7253333330154419, 0.7440000176429749, 0.753000020980835, 0.753333330154419, 0.7606666684150696, 0.7590000033378601, 0.7713333368301392, 0.7646666765213013, 0.7730000019073486, 0.762333333492279, 0.7803333401679993, 0.7546666860580444, 0.7853333353996277, 0.7870000004768372, 0.7873333096504211, 0.8006666898727417, 0.7956666946411133, 0.7963333129882812, 0.79666668176651, 0.7903333306312561, 0.7903333306312561]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [9, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302944990937043, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [5, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 2, 3, 0, 2, 3, 0, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 38, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(beta, alpha), beta), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [4, 4, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [6, 9, 3, 0, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 3, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302944990937043, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [4, 2, 7], [99], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 6, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [82, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302944990937043, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 7, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [4, 4, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [7, 7, 8, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [82, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 30, 20, 10, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), beta), tf.math.multiply(sigma, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)))))), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.sqrt(sigma), sigma), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), beta)))))", "other_info": {"loss": [2.513417346145908, 5.337917886027854, 29.101052435523624, 105.92861650069125, 240.50522066639587, 432.8703190364291], "accuracy": [0.10421344637870789, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.7328236443655833, 10.309591565813337, 55.78507559640067, 150.67279924665178, 294.8489554268973, 488.24197823660717], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 6, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 0, 0, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 4, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 3, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [82, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 4, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 3, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302944990937043, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [96, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [2, 2, 7], [99], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 1, 3, 3, 0, 2, 3, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [48, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 3, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 8, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 2, 3, 0, 2, 3, 0, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [45, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [8, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 0, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 7, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [4, 4, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 7, 8, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 1, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [45, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [4, 9, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [47846545011.46391, 7598736967800.375, 128615249260690.61, 893426313699112.6, 4005423513612499.5, 1.3152988560717028e+16], "accuracy": [0.10421344637870789, 0.09945846349000931, 0.10077928751707077, 0.10236428678035736, 0.09325055778026581, 0.09734513610601425], "val_loss": [407034677540.5714, 21943069404598.855, 235511315244178.28, 1283902320073581.8, 4810122086392978.0, 1.4190219145098972e+16], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 6, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 2, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [96, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [7, 2, 7], [99], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [48, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [9, 8, 1, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 0, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [9, 8, 1, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 3, 2, 5, 9, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [0, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 1, 3, 3, 0, 2, 3, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [48, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [9, 8, 1, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [73, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 3, 2, 5, 9, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [5, 2, 7], [99], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [5, 1, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [59, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.06599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301601464360098, 2.301335646444544, 2.2995347675945244, 2.299593724059454, 2.2993252688017285, 2.30010992144518, 2.299792577215489, 2.299098196534779, 2.299988076199063, 2.299343718482267, 2.2992901273013704, 2.299782676939888, 2.2995825328406183, 2.300467154132912, 2.301075587419392], "accuracy": [0.09430722147226334, 0.09285431355237961, 0.10130762308835983, 0.09509972482919693, 0.0952318087220192, 0.09496764093637466, 0.09747721254825592, 0.10196803510189056, 0.08994849026203156, 0.09998679161071777, 0.09602430462837219, 0.09734513610601425, 0.10527011007070541, 0.09668471664190292, 0.08796724677085876], "val_loss": [1.9693824904305595, 1.968954222542899, 1.968785626547677, 1.9689788818359375, 1.9691402571541923, 1.9692888941083635, 1.9693144389561243, 1.9692279270717077, 1.9692102840968542, 1.969261646270752, 1.9694557871137346, 1.9697200911385673, 1.969996792929513, 1.97019134249006, 1.9703559875488281], "val_accuracy": [0.04533333331346512, 0.04933333396911621, 0.052666667848825455, 0.05433333292603493, 0.0573333315551281, 0.06433333456516266, 0.06466666609048843, 0.06666667014360428, 0.0676666647195816, 0.06833333522081375, 0.06666667014360428, 0.06400000303983688, 0.06466666609048843, 0.06300000101327896, 0.06333333253860474]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 0, 7, 6, 8, 4, 4, 8, 8, 1, 4, 0, 6, 6, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [1, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 2, 0, 1, 3, 3, 6, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [3, 0, 2, 5, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 1, 8, 3, 0], [4, 2, 7], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 6, 3, 9, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 1, 1, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [69, 45, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.043142858892679214, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 30, 19, 11, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(alpha, tf.math.pow(tf.math.negative(tf.math.pow(tf.math.pow(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.multiply(sigma, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), beta), alpha)))))))))", "other_info": {"loss": [2.3020662149150435, 2.30262703937137, 2.3013018615777074, 2.301204215014348, 2.3011169064833803, 2.3016583417558145], "accuracy": [0.09470347315073013, 0.08955223858356476, 0.0952318087220192, 0.09285431355237961, 0.09417514503002167, 0.09219389408826828], "val_loss": [1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478]}}]