[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.8059999942779541, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.subtract(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2302701913480667, 2.208507669442806, 1.9251167530774786, 1.4003870309918642, 0.9927603301040218, 0.8669762377568271, 0.7827318502832885, 0.7526901057997495, 0.7045830523002543, 0.6498375260015883, 0.6433717864946273, 0.6191075975160242, 0.5869491782485691, 0.6126775390294722, 0.5552419480819586, 0.5396333473501205, 0.5233959218042087, 0.5562639221255774, 0.506444304524128, 0.5159553134280771], "accuracy": [0.2583542466163635, 0.25980716943740845, 0.3611147701740265, 0.49332982301712036, 0.633469820022583, 0.6736230254173279, 0.6936996579170227, 0.7121912837028503, 0.7329282760620117, 0.7548540234565735, 0.7543256878852844, 0.7692511081695557, 0.7737419009208679, 0.7709681391716003, 0.7893276810646057, 0.7931581139564514, 0.8037247657775879, 0.7877426743507385, 0.809140145778656, 0.8035926818847656], "val_loss": [1.95753356388637, 1.836676938193185, 1.2032342297690255, 0.9398840836116246, 0.636538028717041, 0.5945716755730766, 0.5151573930467878, 0.4963871581213815, 0.4651153428213937, 0.5577061516898019, 0.4558504479272025, 0.46054296834128244, 0.49653891154697966, 0.4479788541793823, 0.4102632318224226, 0.41384410858154297, 0.5103673424039569, 0.41863410813467844, 0.4336538144520351, 0.425974326474326], "val_accuracy": [0.3226666748523712, 0.4413333237171173, 0.5606666803359985, 0.5856666564941406, 0.7126666903495789, 0.7123333215713501, 0.7646666765213013, 0.7796666622161865, 0.7860000133514404, 0.7303333282470703, 0.8033333420753479, 0.7863333225250244, 0.7883333563804626, 0.7953333258628845, 0.8220000267028809, 0.8153333067893982, 0.7789999842643738, 0.8076666593551636, 0.8100000023841858, 0.8073333501815796]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.8002856969833374, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.subtract(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.231418287434425, 2.1760695492350557, 2.0481797140886315, 1.6093351514096021, 1.0833731486009741, 0.8645465849664911, 0.8321894697698352, 0.7636166386490312, 0.7532423536586346, 0.6772818514668096, 0.6781789229892705, 0.6497767160298125, 0.5973422971966559, 0.6240525238895933, 0.5930462663735161, 0.5692599914045917, 0.5894191433740661, 0.5663646278269869, 0.5338271947395784, 0.557512188769445, 0.5118478035819749, 0.538312317751591, 0.5239072289244531, 0.5200573764047633, 0.49518117036612874, 0.504690932744939, 0.5082131588322029, 0.47062621231108076, 0.4671166513605739, 0.4591019507908409, 0.4665363824929638, 0.4581431541200705], "accuracy": [0.25822216272354126, 0.2950733006000519, 0.316470742225647, 0.46189406514167786, 0.6090344786643982, 0.6828688383102417, 0.6837934255599976, 0.7113987803459167, 0.7248712182044983, 0.7383436560630798, 0.7440232634544373, 0.7577598690986633, 0.7714964747428894, 0.7696473598480225, 0.7736098170280457, 0.787082314491272, 0.772288978099823, 0.7878747582435608, 0.7979130744934082, 0.7895918488502502, 0.8087438941001892, 0.7935543656349182, 0.8025360107421875, 0.8055738806724548, 0.8133667707443237, 0.8076872229576111, 0.8061022162437439, 0.8195747137069702, 0.8231409192085266, 0.826310932636261, 0.8208954930305481, 0.8247259259223938], "val_loss": [1.958226135798863, 1.934112208230155, 1.2621899672916956, 1.0363235814230782, 0.6677811316081456, 0.6272798776626587, 0.6025640283312116, 0.590349589075361, 0.5175047772271293, 0.5820879255022321, 0.538743427821568, 0.48445132800510954, 0.495851993560791, 0.48323592117854525, 0.461246166910444, 0.5009019204548427, 0.45569113322666716, 0.4015285202435085, 0.47060959679739817, 0.39729292903627667, 0.42226547854287283, 0.41167330741882324, 0.42421421834400724, 0.42129205805914743, 0.3875976971217564, 0.4163296478135245, 0.3757414477212088, 0.4151409183229719, 0.37495334659303936, 0.40393554312842234, 0.39502303089414326, 0.3929371578352792], "val_accuracy": [0.28833332657814026, 0.20666666328907013, 0.42766666412353516, 0.5929999947547913, 0.706333339214325, 0.6856666803359985, 0.7196666598320007, 0.7223333120346069, 0.7440000176429749, 0.7289999723434448, 0.7586666941642761, 0.768666684627533, 0.7670000195503235, 0.7649999856948853, 0.8053333163261414, 0.7793333530426025, 0.7960000038146973, 0.8256666660308838, 0.7836666703224182, 0.831333339214325, 0.8159999847412109, 0.8149999976158142, 0.8036666512489319, 0.7960000038146973, 0.8363333344459534, 0.8086666464805603, 0.843666672706604, 0.8133333325386047, 0.8410000205039978, 0.8256666660308838, 0.8286666870117188, 0.8266666531562805]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.7282857298851013, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.subtract(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [2.3022487723139284, 2.29816419223926, 2.2924545232598743, 2.283563921244043, 2.270176466792062, 2.258147124616839, 2.240886673022255, 2.221250368068404, 2.193975344310111, 2.1673536697446143, 2.129861481799709, 2.085712096159248, 2.0275190533459257, 1.9556165390231306, 1.8731938535038821, 1.778150486309987, 1.6756704609706778, 1.5838443083990488, 1.507748734256642, 1.4439924679349174, 1.4152670416770878, 1.387742240006, 1.3773818821277852, 1.3596903211672733, 1.3439183786733826, 1.346248925810776, 1.3063416830253576, 1.229269345769352, 1.1725958220600656, 1.1170892029264583, 1.0388288945333597, 0.9740720840729207, 0.9204993666816523, 0.9233011484791684, 0.9149941955858517, 0.9156283075468431, 0.9127052316985598, 0.9097867519186945, 0.9181823589546396, 0.9163092867242598, 0.9034224093598051, 0.8801562631166433, 0.8588595698538268, 0.8500948235374857], "accuracy": [0.08915598690509796, 0.10130762308835983, 0.11913882195949554, 0.1348566859960556, 0.17751948535442352, 0.20961563289165497, 0.24580636620521545, 0.2818650007247925, 0.32399946451187134, 0.34367984533309937, 0.36428478360176086, 0.3770968019962311, 0.3897767663002014, 0.4150046110153198, 0.4233258366584778, 0.43785497546195984, 0.4539690911769867, 0.46189406514167786, 0.4892352521419525, 0.5045568346977234, 0.5159159898757935, 0.5258222222328186, 0.5354642868041992, 0.5437855124473572, 0.5635979175567627, 0.5628054141998291, 0.5736362338066101, 0.5979394912719727, 0.6205257177352905, 0.6328094005584717, 0.6457535624504089, 0.6534143686294556, 0.6635847091674805, 0.6597543358802795, 0.6510368585586548, 0.6538106203079224, 0.6651697158813477, 0.6728305220603943, 0.6762647032737732, 0.6773213744163513, 0.677189290523529, 0.6831330060958862, 0.6914542317390442, 0.694360077381134], "val_loss": [1.9684877395629883, 1.9639077867780412, 1.9565299579075404, 1.9464755739484514, 1.9340010370526994, 1.919133526938302, 1.9018513134547643, 1.881486483982631, 1.856645107269287, 1.8255043710981096, 1.7861439841134208, 1.7364416122436523, 1.6740476403917586, 1.596839393888201, 1.5042762415749686, 1.398988962173462, 1.2870237146105086, 1.1775218418666296, 1.0781760556357247, 0.9922450951167515, 0.9192676884787423, 0.8565478835787091, 0.8058081354413714, 0.775745051247733, 0.7596597160611834, 0.7286701883588519, 0.6940788541521344, 0.6860564776829311, 0.6857916116714478, 0.6691827944346836, 0.6417062793459211, 0.6210817950112479, 0.6208670479910714, 0.6340281111853463, 0.6479099137442452, 0.6596000364848545, 0.6701001439775739, 0.6786149399621146, 0.6804159879684448, 0.6724319968904767, 0.6556962728500366, 0.633223124912807, 0.6104788780212402, 0.5924184492656163], "val_accuracy": [0.04933333396911621, 0.07599999755620956, 0.14766666293144226, 0.25333333015441895, 0.34466665983200073, 0.37566667795181274, 0.39766666293144226, 0.4156666696071625, 0.4300000071525574, 0.44066667556762695, 0.4560000002384186, 0.46700000762939453, 0.4883333444595337, 0.5093333125114441, 0.5263333320617676, 0.5490000247955322, 0.5773333311080933, 0.6003333330154419, 0.6259999871253967, 0.6466666460037231, 0.671999990940094, 0.6776666641235352, 0.6846666932106018, 0.6890000104904175, 0.6756666898727417, 0.6926666498184204, 0.7036666870117188, 0.7149999737739563, 0.718666672706604, 0.7233333587646484, 0.7260000109672546, 0.7303333282470703, 0.7423333525657654, 0.7353333234786987, 0.7283333539962769, 0.7223333120346069, 0.7316666841506958, 0.7486666440963745, 0.7566666603088379, 0.7559999823570251, 0.7519999742507935, 0.746666669845581, 0.7456666827201843, 0.746999979019165]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.36142855882644653, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4446086016596897, 2.280655804217027, 2.249704641924873, 2.287000486233829, 2.3052662765156278, 2.1798368548641527, 2.304539986227356], "accuracy": [0.18359529972076416, 0.14132875204086304, 0.19336943328380585, 0.15136705338954926, 0.09681680053472519, 0.21780477464199066, 0.10051512718200684], "val_loss": [1.9734843799046107, 1.6433027812412806, 1.9765031678336007, 1.9794843537466866, 1.968602180480957, 1.9767863409859794, 1.9741112164088659], "val_accuracy": [0.1433333307504654, 0.3296666741371155, 0.1003333330154419, 0.10266666859388351, 0.10300000011920929, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 5, 6, 5, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.31200000643730164, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.444608010573079, 2.281741560757231, 2.235592943818074, 2.428668576838743, 2.303485533659248, 2.3032034777095998, 2.302864593679186], "accuracy": [0.18359529972076416, 0.137630432844162, 0.18597279489040375, 0.11266675591468811, 0.09457138925790787, 0.09536388516426086, 0.09655263274908066], "val_loss": [1.973447595323835, 1.6755166734967912, 2.430823939187186, 1.974346092769078, 1.9736281803676061, 1.9735312461853027, 1.9734087671552385], "val_accuracy": [0.11633333563804626, 0.27300000190734863, 0.2240000069141388, 0.09733333438634872, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 5, 6, 5, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.21885713934898376, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4444615444754723, 2.2817325507330146, 2.3694164465132204, 2.490563477350028, 2.265633421866271, 2.3053918272796134, 2.303189286466414, 2.302971072468413], "accuracy": [0.18372738361358643, 0.13538502156734467, 0.17474573850631714, 0.1574428677558899, 0.15651829540729523, 0.09338264167308807, 0.09576013684272766, 0.09311848133802414], "val_loss": [1.9732940537588937, 1.6359789371490479, 1.613588605608259, 1.9749599865504675, 1.9780800683157784, 1.97407409123012, 1.9737838336399622, 1.9736860139029366], "val_accuracy": [0.10166666656732559, 0.3383333384990692, 0.4009999930858612, 0.09733333438634872, 0.0976666659116745, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [5, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 1, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 3, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0866464152932167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 5, 6, 9, 1, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 0, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0866464152932167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 5, 6, 5, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3027317336899586, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [4, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.subtract(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 7, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [1, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [6, 8, 2, 8, 9, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 9, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, alpha))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027317336899586, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [4, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 5, 6, 5, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 3, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 56, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.5484143920676894e+24, 45.22357441553618, 144.24008124899066, 301.2719572059955, 515.2837100852167, 787.4229014241354], "accuracy": [0.08691058307886124, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.169153485979354, 80.60383823939732, 194.34626116071428, 357.263419015067, 569.5590297154018, 831.0264195033482], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 3, 8, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(alpha)), beta), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 0, 7], [99], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 0, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.5484136306613332e+24, 45.22357441553618, 144.24008124899066, 301.2719572059955, 515.2837100852167, 787.422893362432], "accuracy": [0.08691058307886124, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.169153485979354, 80.60383823939732, 194.34626116071428, 357.263419015067, 569.5590297154018, 831.0264195033482], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 1, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [1, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [3, 2, 7], [99], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [6, 8, 2, 8, 9, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [0, 2, 3, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302377396633817, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [5, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 5, 6, 5, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0866464152932167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 7, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 1, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [43, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.math.subtract(beta, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.062475234270095825, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 5, 6, 5, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.square(alpha), beta), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302382620145238, 2.3025871904345707, 2.302586858109744, 2.3025821116244267, 2.302586864785842, 2.3025830215577043], "accuracy": [0.09615638852119446, 0.10130762308835983, 0.09430722147226334, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736448696681432, 1.9736433029174805, 1.973644460950579, 1.9736497061593192, 1.973649024963379, 1.9736524990626745], "val_accuracy": [0.10233332961797714, 0.09733333438634872, 0.10166666656732559, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [3, 1, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [7, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.043142858892679214, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.math.subtract(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027164006765415, 2.3016611328056977, 2.30202858653665, 2.3020321508172543, 2.3005795439457013, 2.3026540973135794], "accuracy": [0.0882314071059227, 0.09219389408826828, 0.09602430462837219, 0.08757099509239197, 0.0944393053650856, 0.09153348207473755], "val_loss": [1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [2, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [3, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 2, 6, 8, 3, 1, 3, 2, 0, 2, 5, 5, 3, 9, 2, 3, 3, 1, 1, 3, 6, 3, 3, 9, 5, 6, 1, 2, 3, 4, 0, 2, 1, 6, 6, 8, 4, 6, 0, 8, 2, 4, 3, 3, 6, 1, 8, 6, 9, 8, 1, 2, 9, 9], [2, 1, 3, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 0, 4, 0, 2, 0, 1, 3, 2, 0, 0, 3, 2, 3, 3, 1, 2, 3, 2, 1, 3, 3, 0, 1, 4, 3], [49, 90, 64, 6, 87, 92, 18, 17, 0, 92, 91], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [6, 2, 3, 9, 1, 8, 3, 0], [2, 0, 7], [99], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 6, 9, 5, 1, 4, 0, 4, 4, 9, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 2, 0, 0, 0, 2, 3, 3, 0, 2, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [27, 48, 86, 3, 74, 13, 47, 86, 30]], "fitness": -0.043142858892679214, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(beta), beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027164006765415, 2.3016611328056977, 2.30202858653665, 2.3020321508172543, 2.3005795439457013, 2.3026540973135794], "accuracy": [0.0882314071059227, 0.09219389408826828, 0.09602430462837219, 0.08757099509239197, 0.0944393053650856, 0.09153348207473755], "val_loss": [1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586, 1.970144271850586], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478]}}]