[{"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 4], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.12971428036689758, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003139452706898, 2.3011083427500245, 2.3024478499695076, 2.302414618903903, 2.3032787475666554, 2.306871023632831], "accuracy": [0.09721305221319199, 0.08730682730674744, 0.08440100401639938, 0.09325055778026581, 0.08017434924840927, 0.09457138925790787], "val_loss": [1.9696074213300432, 1.9733224596296037, 1.973475796835763, 1.9741718428475517, 1.9757610729762487, 1.9870437213352747], "val_accuracy": [0.11299999803304672, 0.07066666334867477, 0.08933333307504654, 0.07900000363588333, 0.08666666597127914, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 4, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.12971428036689758, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003139812334448, 2.3010954451897927, 2.302439341408434, 2.3024793997920656, 2.3032996213636094, 2.3068685591449167], "accuracy": [0.09721305221319199, 0.08677849918603897, 0.08519349992275238, 0.09021265059709549, 0.07885351777076721, 0.09430722147226334], "val_loss": [1.969607148851667, 1.9732863562447684, 1.9734959602355957, 1.9742027691432409, 1.9757581438337053, 1.9870846612112862], "val_accuracy": [0.11299999803304672, 0.07433333247900009, 0.09033333510160446, 0.07800000160932541, 0.0846666693687439, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 6, 3], [0, 2, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.12971428036689758, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003139812334448, 2.3010952831684497, 2.3024465929106195, 2.3024854646178126, 2.3033026175775455, 2.306869382855757], "accuracy": [0.09721305221319199, 0.08691058307886124, 0.08572183549404144, 0.09021265059709549, 0.0804385170340538, 0.0948355570435524], "val_loss": [1.969606944492885, 1.9732884679521834, 1.9734994343348913, 1.974205493927002, 1.9757602555411202, 1.9870914731706892], "val_accuracy": [0.11299999803304672, 0.07433333247900009, 0.08900000154972076, 0.0793333351612091, 0.08699999749660492, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0], [0, 1], [0], [2, 2], [70], [0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [3, 7, 9, 8, 5, 5], [4, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [0, 0, 0, 1], [0, 0, 1], [8, 2], [6], [], [0, 1], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.12971428036689758, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 6, 2, 1, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003140171961998, 2.30109452253414, 2.302446143848549, 2.30246918898343, 2.3032930310785558, 2.3068603977409445], "accuracy": [0.09721305221319199, 0.08691058307886124, 0.08545766770839691, 0.09140139818191528, 0.08109892904758453, 0.09496764093637466], "val_loss": [1.9696074894496374, 1.9732881954738073, 1.9734926904950822, 1.9741939817156111, 1.975754737854004, 1.9870556422642298], "val_accuracy": [0.1133333370089531, 0.07466666400432587, 0.08900000154972076, 0.07766667008399963, 0.08666666597127914, 0.09733333438634872]}}, {"genotype": [[0], [1, 0], [1, 1, 0, 0, 0, 1], [0], [2], [70], [0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [3, 7, 9, 8, 5, 5], [3, 2, 1, 5], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5], [1], [12]], "fitness": -0.12942856550216675, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.square(grad))))), tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3003143501823384, 2.3011008514751454, 2.3024386050222163, 2.302446209003487, 2.303295598983009, 2.306861020318584], "accuracy": [0.09721305221319199, 0.08691058307886124, 0.08638224750757217, 0.09232597798109055, 0.07911768555641174, 0.09430722147226334], "val_loss": [1.9696074213300432, 1.9732988221304757, 1.9734848567417689, 1.9741918018886022, 1.975757258278983, 1.9870670182364327], "val_accuracy": [0.1133333370089531, 0.07366666942834854, 0.08799999952316284, 0.07666666805744171, 0.08500000089406967, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0], [0, 1, 1], [2, 0, 5, 0], [2, 2], [], [0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 4, 5, 7, 8], [4, 3, 5, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [1], [], [], [1], [], [0, 0], [9], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(grad)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023957873946403, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1], [4], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 7, 1], [0, 4, 1, 5, 5], [86, 14], [0, 1, 1], [0], [3], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 2, 0, 3, 6, 4], [1, 0, 1, 1, 2, 1], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 1, 3, 1, 1, 0, 0, 13, 7, 6, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(alpha, tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha), tf.math.pow(alpha, beta)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 1, 4, 9, 3, 8, 2], [0, 3, 1, 1, 2, 3], [64], [0, 1, 1], [0], [6], [1], [], [1], [], [1, 0, 2, 1, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [8], [2], [49], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1], [2, 6, 3], [0, 2, 1, 5], [86, 14], [0, 0], [0, 1], [8], [1], [], [0, 1, 0], [8], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 3, 8, 8, 2, 1], [2, 2, 0, 0], [38, 13, 76], [0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 4], [3, 3, 1, 0], [86, 14], [1], [], [], [1], [], [0, 1, 0, 1, 0], [8], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0], [1], [0], [1], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1], [6, 2, 9, 5], [0, 3, 1, 5, 4, 2], [42, 68], [0, 1, 1], [0], [4], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [5, 0, 1, 6, 6, 6, 3, 8, 6, 8, 9, 4, 5, 9], [1, 0, 3, 2, 1, 2], [12, 4, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 20, 14, 6, 3], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(sigma, beta)), tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, tf.math.square(beta)))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3024798054594986, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1], [2, 0, 5, 0], [0, 0, 1, 2, 3, 2, 1, 2, 1], [70, 49], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [3, 7, 9, 8, 5, 5], [0, 3, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [1], [0], [], [1], [], [0, 1], [8], [2, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 4], [5, 4, 1, 5], [28, 14], [1], [], [], [1], [], [0, 1, 0], [5], [2, 0, 2, 1, 2, 0, 2], [12, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, grad)), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1], [2, 3, 5, 7, 8], [3, 4, 1, 0], [86, 14], [1], [], [], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [5, 7, 2, 0, 3, 5, 7, 0, 8], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 14, 9, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta))), tf.math.add(tf.math.negative(alpha), tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [2, 5], [2], [], [0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [2, 3, 1], [0, 3, 1, 5, 4, 2], [28, 68], [1], [], [], [1], [], [1, 1, 1], [5], [1, 0, 2, 1, 2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [2, 0, 5, 0], [3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1], [3, 7, 9, 8, 5, 5], [0, 4, 1, 5], [86, 14], [0], [1], [], [1], [], [0, 0, 1, 1], [5, 4], [2, 0, 2, 1, 2, 0, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1], [0], [2, 0, 1, 2, 3, 2, 1, 2, 1, 3, 1, 2, 3, 0, 2, 1, 2, 1, 0, 2, 3, 0, 3, 3, 3, 1, 2, 1, 2, 3, 2, 2, 2, 1, 1, 2, 0, 2, 0], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 4, 0, 3, 8, 2], [0, 2, 1, 2], [86, 14], [1], [0], [], [1], [], [1], [5], [1, 0, 2, 1, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(beta, tf.math.add(beta, tf.math.sqrt(alpha)))))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1], [2, 4, 5, 7, 8], [3, 4, 1, 0], [86, 14], [1], [], [], [1], [], [0, 1, 0], [5, 7, 2, 0, 3], [1, 0, 2, 1, 2], [12]], "fitness": -0.08257143199443817, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3136092998946522, 3106.7527873490576, 208483703.65309238, 13427955110634.055, 8.82404385394174e+17, 5.85572246975451e+22], "accuracy": [0.10421344637870789, 0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.8479995727539062, 91528.12053571429, 6003030893.714286, 393415696805302.9, 2.578289110583233e+19, 1.6897075515118275e+24], "val_accuracy": [0.16433332860469818, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1, 0, 0, 0, 1], [0], [2], [70], [0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 6, 3], [0, 2, 1, 5], [86, 14], [1], [], [], [6], [], [0, 1], [5], [1], [12]], "fitness": -0.06885714083909988, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.302150967571131, 2.3015477263995163, 2.301173529053692, 2.3006586518348753, 2.3001691640690884, 2.300643431748287, 2.300328335820597, 2.3005028846729636, 2.300331389915044, 2.2992823057485814, 2.2990892821173263, 2.3003221934639373, 2.299227280308778, 2.2995513189958463, 2.29963553923311], "accuracy": [0.08928807079792023, 0.09008057415485382, 0.08928807079792023, 0.09417514503002167, 0.09430722147226334, 0.09417514503002167, 0.09721305221319199, 0.09536388516426086, 0.09813763201236725, 0.10038304328918457, 0.09668471664190292, 0.0940430611371994, 0.10130762308835983, 0.09998679161071777, 0.09853387624025345], "val_loss": [1.970576558794294, 1.970262050628662, 1.9699760845729284, 1.9698532649448939, 1.9699371201651437, 1.969987460545131, 1.9699773788452148, 1.969888482775007, 1.9698341233389718, 1.9698661395481654, 1.9700546945844377, 1.9702839170183455, 1.9705470630100794, 1.9707299641200475, 1.970923832484654], "val_accuracy": [0.04600000008940697, 0.04699999839067459, 0.057999998331069946, 0.061666667461395264, 0.06433333456516266, 0.06599999964237213, 0.06933332979679108, 0.07500000298023224, 0.07900000363588333, 0.07999999821186066, 0.07733333110809326, 0.07800000160932541, 0.07533333450555801, 0.07533333450555801, 0.07233333587646484]}}, {"genotype": [[0], [1, 0], [0, 1], [5], [2], [], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 5, 7, 8], [0, 4, 1, 5], [31, 14], [1], [], [], [1], [], [0, 1, 0], [5, 7, 2, 0, 3], [1, 0, 2, 1, 2], [12]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.302680844502316, 2.3027161450008786, 2.303340367857712, 2.305095801531694, 2.3074025542524117, 2.3117743255817786], "accuracy": [0.0878351628780365, 0.08796724677085876, 0.08638224750757217, 0.0820235088467598, 0.07740060985088348, 0.068022720515728], "val_loss": [1.971379280090332, 1.9714770998273576, 1.9725514820643835, 1.9742488861083984, 1.9792135783604212, 1.9803127561296736], "val_accuracy": [0.03633333370089531, 0.03533333167433739, 0.03400000184774399, 0.027000000700354576, 0.014666666276752949, 0.014000000432133675]}}]