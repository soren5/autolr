[{"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1], [2, 6, 3, 8], [0, 2, 1, 5], [35, 14], [1], [], [], [1], [], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [76, 27, 12]], "fitness": -0.1379999965429306, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, alpha))), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3001361894664227, 2.3005889275165012, 2.302173664887599, 2.303311309038514, 2.308436192478628, 2.4022538324058047], "accuracy": [0.0956280529499054, 0.09166556596755981, 0.08809932321310043, 0.09285431355237961, 0.08360850811004639, 0.10011887550354004], "val_loss": [1.9691103526524134, 1.97283901487078, 1.9740730694362096, 1.9759135927472795, 1.9953936849321638, 2.303389140537807], "val_accuracy": [0.1276666671037674, 0.06733333319425583, 0.08399999886751175, 0.09466666728258133, 0.09600000083446503, 0.09533333033323288]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [3, 2, 1, 5], [86, 14], [0, 1, 0], [0, 1], [3], [1], [], [0, 1, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.1379999965429306, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.300136157975394, 2.3005890444426913, 2.302176386436782, 2.303308803454807, 2.308434793458182, 2.4022369285568885], "accuracy": [0.0956280529499054, 0.09166556596755981, 0.08796724677085876, 0.09272222965955734, 0.08215559273958206, 0.10011887550354004], "val_loss": [1.9691103526524134, 1.9728404453822546, 1.9740719114031111, 1.9759135927472795, 1.9953900064740862, 2.3033509254455566], "val_accuracy": [0.1276666671037674, 0.06733333319425583, 0.08399999886751175, 0.0949999988079071, 0.09600000083446503, 0.09533333033323288]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4], [2, 2, 1, 5, 3, 0, 4, 4], [86, 14], [0, 0, 0, 1], [1], [3], [1], [], [0, 1, 0], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12]], "fitness": -0.1379999965429306, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.300136081483685, 2.3005879194256873, 2.3021772143359294, 2.303311835725971, 2.308448305502859, 2.4025428436530216], "accuracy": [0.0956280529499054, 0.09166556596755981, 0.08836349099874496, 0.09272222965955734, 0.08334434032440186, 0.1002509593963623], "val_loss": [1.9691108294895716, 1.9728385380336217, 1.9740724563598633, 1.9759178842817033, 1.9954539026532854, 2.3041722433907643], "val_accuracy": [0.1276666671037674, 0.0676666647195816, 0.0820000022649765, 0.09466666728258133, 0.09600000083446503, 0.09533333033323288]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5], [86, 14], [1], [], [3], [1], [], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 4, 3, 3, 4, 8, 5], [1, 0, 2, 1, 2], [76, 27, 12]], "fitness": -0.1128571406006813, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3172030503393053, 5909.322285988863, 377561155.2065282, 24492821782626.465, 1.643396597707446e+18, 1.097049950461465e+23], "accuracy": [0.10077928751707077, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.5453768457685197, 165883.0892857143, 10871903085.714285, 712501194017060.6, 4.6694478251102085e+19, 3.060169326664226e+24], "val_accuracy": [0.11733333021402359, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2, 3], [31], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 9], [0, 2, 1, 5], [86, 14], [0, 0, 0, 1], [0, 1, 1], [2, 8], [1, 6], [], [0, 1, 0], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.1128571406006813, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.317203081830334, 5909.322157316519, 377561135.8991712, 3.8758317040607014e+21, 1.64339645009397e+18, 1.0970499485735174e+23], "accuracy": [0.10077928751707077, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.5453769820077077, 165883.08482142858, 10871902793.142857, 712501155669138.2, 4.6694475737932644e+19, 3.060169161961154e+24], "val_accuracy": [0.11733333021402359, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0], [0, 1, 0, 0, 0, 1], [0], [2], [70], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 3, 5, 7, 8, 8, 2, 2, 2, 4, 8], [4, 2, 1, 5, 3, 0, 4, 4], [86, 14], [1], [], [3], [1], [], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 1, 1, 3, 1], [12, 43]], "fitness": -0.10028571635484695, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2066.909506157011, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17316074669361115, 0.10685510188341141, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1693041481.142857, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10700000077486038, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1], [4, 4], [0, 2, 1, 5], [86, 14], [1], [], [6], [1], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [8, 6, 6, 2, 5, 3, 2, 2, 4, 8, 2, 8, 6], [1, 0, 2, 1, 3, 1, 1, 3, 3], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), beta), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), beta)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5], [86, 14], [1], [0, 0, 1], [1, 0], [1], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 4, 3, 2, 4, 9, 0, 1, 6], [1, 0, 2, 1, 2, 2], [12, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 15, 9, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), beta), tf.math.negative(tf.math.subtract(alpha, tf.math.divide_no_nan(beta, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 2, 1, 5], [86, 14], [1], [], [6], [1], [], [1, 0, 0], [1, 6, 6, 3, 5, 3, 6, 2, 4, 8, 0, 8], [1, 0, 2, 1, 2, 2, 1, 1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [0, 3], [73], [0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [9, 6, 3, 8], [0, 2, 1, 5], [35, 14], [1], [], [3], [1], [], [0, 1, 0, 1, 1], [4, 4, 3, 3, 4, 8, 5], [1, 0, 0, 2, 3], [12, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1], [5, 4], [0, 2, 1, 5], [39], [1], [], [3], [1], [], [1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2, 2, 1, 1], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [1, 1], [4], [2], [], [0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 4, 7, 6, 5, 9, 1, 2, 9, 5, 1, 6, 4, 6, 2, 1, 9, 9, 2, 0], [0, 2, 1, 5], [86, 14], [0, 1, 0, 1], [0, 0, 1], [3, 0], [0], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [5, 7, 2, 6, 4, 4, 7, 0, 8, 4, 6, 3], [3, 0, 2, 1, 2, 1, 0, 2, 3, 1], [12, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 22, 12, 10, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.negative(alpha), tf.math.sqrt(beta))), tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), beta), sigma)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2, 3], [], [1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [2, 4], [0, 0, 1, 5], [91, 14], [1], [], [3], [1], [], [1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0], [1, 1], [9, 9], [2], [70], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [8, 1, 4, 9, 3, 8, 2], [0, 0, 1, 5], [92, 14], [1], [1, 0, 1], [6], [1], [], [1], [], [1, 0, 1, 1, 3, 1], [12, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1, 0, 0, 0, 1], [0], [2, 3], [], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [2, 9, 0, 6, 5, 9, 1, 2, 9, 5, 3, 6, 0, 6, 2, 4, 9, 9, 2, 0], [1, 2, 1, 5, 4, 2, 5, 3, 1, 0], [86, 74, 57, 27, 31, 84], [1], [0, 0, 1], [3], [1], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [5, 7, 2, 6, 3, 4, 7, 0, 8], [3, 0, 1, 1, 2, 3, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 15, 8, 7, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.negative(alpha), beta)), sigma)), beta))", "other_info": {"loss": [2.3630586037341677, 83.87200512002408, 5303263.832288709, 344134682931.73425, 2.279822564863126e+16, 1.4684167925230186e+21, 9.767524417022505e+25], "accuracy": [0.09259014576673508, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.5958378655569896, 2298.1326032366073, 149784553.14285713, 9816175617170.285, 6.433128656127356e+17, 4.216015196079624e+22, 2.7630077189027425e+27], "val_accuracy": [0.09733333438634872, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1], [2, 3, 5, 7, 8, 8, 2, 2, 2, 4, 8], [4, 2, 1, 5, 3, 0, 4, 4], [39], [0, 1], [0], [8], [1], [], [1], [5, 7, 2, 0, 3, 5, 7, 0, 8], [0, 0, 0, 2, 3], [12, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30276656276782, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0], [1, 1], [0], [2, 3], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [8, 1, 4, 9, 3, 8, 2], [0, 2, 1, 5], [39], [1], [], [3], [1], [], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 5, 6, 7, 8], [0, 0, 1, 1, 1, 1], [41, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302823844949221, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [4, 0, 7, 2, 7, 8, 4, 7, 8, 5, 3, 3, 1, 7, 2, 3, 7, 6, 0, 8, 9, 1, 3, 1, 6, 0], [0, 2, 2, 3, 0, 3, 1, 0, 2, 1, 2, 3, 2, 2, 0, 2, 3, 3], [55, 9, 86, 83, 79], [1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1], [3, 7, 9, 8, 5, 5], [2, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14], [0, 0, 1], [0, 0], [3, 9], [6], [76], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [5, 4, 3, 2, 4, 9, 5], [1, 0, 2, 1, 2], [12, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 44, 26, 18, 5, 3, 3, 1, 2, 0, 3, 2, 2, 0, 1, 8, 4, 4, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(grad, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad)), grad))))))))))), tf.math.add(alpha, tf.math.negative(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0], [0, 1], [8], [2], [56, 43, 29, 69, 15, 91, 56, 94, 19, 57], [0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 1, 4, 4, 3, 8, 2], [0, 0, 1, 5], [86, 14, 25, 47, 67, 74], [0, 0, 0, 1], [1], [2, 8], [1], [], [0, 1, 1], [2], [3, 0, 2, 1, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [0], [31], [1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1], [2, 4, 7, 6, 5, 2, 1, 2, 9, 5, 1, 6, 4, 6, 2, 1, 9, 9, 2, 0], [4, 1, 1, 5, 4, 5, 3, 3, 0, 0, 1, 5, 5, 0], [86, 14, 25, 47, 67, 74], [0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1], [6, 1, 2, 9], [4], [38], [0, 1], [5], [1, 0, 2, 1, 2], [12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.302776356477779, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]