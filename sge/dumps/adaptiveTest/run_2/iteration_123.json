[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 3, 2, 4, 4, 8, 1, 8, 4, 6, 6, 4, 6, 1, 0, 4, 3, 9, 7, 8, 2, 5, 6, 9, 3, 2], [1, 2, 2, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 1, 3, 2, 2], [92, 32, 89, 69, 46, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.19200000166893005, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.4570442558578796, 2.3967016875358103, 2.2968594835828307, 2.2646800304967587, 2.292287834253388, 2.333379858536192, 2.3718791344949612, 2.379448517422871], "accuracy": [0.16840575635433197, 0.09681680053472519, 0.14291374385356903, 0.15097081661224365, 0.1352529376745224, 0.10711926966905594, 0.09985470771789551, 0.10170386731624603], "val_loss": [2.07438325881958, 1.978128296988351, 1.8734417642865862, 1.9126671382359095, 1.9251461710248674, 2.028316020965576, 2.0050351279122487, 2.0128908157348633], "val_accuracy": [0.10233332961797714, 0.1276666671037674, 0.1809999942779541, 0.15033333003520966, 0.14933332800865173, 0.10066666454076767, 0.0976666659116745, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [4, 8, 3, 5, 2, 4, 8, 2, 8, 4, 6, 2, 4, 2, 2, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [92, 32, 10, 69, 46, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.16285714507102966, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.456998108809792, 2.3968312449348823, 2.3102695279668715, 2.295119441873472, 2.2880133053944993, 2.318989754447438, 2.3342014561712214, 2.3284503309529265], "accuracy": [0.16840575635433197, 0.09681680053472519, 0.13657376170158386, 0.1418570876121521, 0.13234710693359375, 0.11279883980751038, 0.09708096832036972, 0.10421344637870789], "val_loss": [2.074408531188965, 1.9782095636640276, 1.8599416869027274, 1.9250414030892509, 1.9343387058803014, 1.9869053704398019, 2.007756914411272, 2.0078394753592357], "val_accuracy": [0.10233332961797714, 0.13099999725818634, 0.18166667222976685, 0.14499999582767487, 0.12466666847467422, 0.10133333504199982, 0.09833333641290665, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [3, 8, 3, 2, 4, 4, 8, 1, 8, 4, 6, 5, 4, 2, 1, 0, 4, 3, 9, 7, 1, 2, 5, 6, 9, 3, 2, 9, 9], [1, 0, 2, 0, 0, 2, 2, 1, 3, 2, 3, 2, 1, 2, 0, 0, 0, 2, 0], [20, 32, 98, 69, 64, 69, 22, 21, 94], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.11914286017417908, "mapping_values": [1, 45, 45, 29, 16, 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, grad), alpha))), grad)))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), grad)))))), grad)), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), grad), tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.469561727212924, 2.3102525557509312, 2.3044334075170942, 2.3027946572687332, 2.3037889385739843, 2.3027960089266717, 2.2435620200160065, 2.3037813141865264, 2.303646128931223, 2.3027752892153215, 2.2704755935245706], "accuracy": [0.177255317568779, 0.1006472036242485, 0.09747721254825592, 0.09853387624025345, 0.0944393053650856, 0.09932637959718704, 0.15559370815753937, 0.10051512718200684, 0.09655263274908066, 0.09959053993225098, 0.1562541276216507], "val_loss": [1.9857165472848075, 1.9762370245797294, 1.9743521554129464, 1.9739792687552316, 1.973829882485526, 1.9706086431230818, 1.974644729069301, 1.9738094466073173, 1.9735052245003837, 1.9703856876918249, 1.9762928145272392], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10199999809265137, 0.09700000286102295, 0.09833333641290665, 0.14800000190734863, 0.10266666859388351, 0.10133333504199982, 0.10266666859388351, 0.10133333504199982, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [4, 8, 3, 5, 2, 4, 8, 2, 8, 4, 6, 2, 4, 2, 2, 0], [1, 1, 2, 0, 0, 2, 1, 1, 3, 2], [80, 32, 55, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10371428728103638, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.470546370342407, 2.3102760085371807, 2.3044673448949835, 2.3029125831099138, 2.303750475557363, 2.303054862884624, 2.3031463334589053], "accuracy": [0.17712323367595673, 0.1006472036242485, 0.1010434553027153, 0.09959053993225098, 0.09192973375320435, 0.10249637067317963, 0.09496764093637466], "val_loss": [1.9857474054609026, 1.976285525730678, 1.974365506853376, 1.973987102508545, 1.9738315854753767, 1.9738333565848214, 1.9737012726919991], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 9, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 1, 2, 0, 0, 2, 2, 1, 3, 2, 3], [24, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10199999809265137, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.470405915504307, 2.310278159059538, 2.304468802425761, 2.302913181344988, 2.3037497693395506, 2.303054836148741, 2.3031464099506143], "accuracy": [0.177255317568779, 0.10038304328918457, 0.10130762308835983, 0.09998679161071777, 0.09206181764602661, 0.10249637067317963, 0.09457138925790787], "val_loss": [1.9857555798121862, 1.976285798209054, 1.9743658474513464, 1.973987238747733, 1.9738313811165946, 1.9738332884652274, 1.9737012726919991], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [4, 8, 3, 5, 2, 4, 8, 2, 8, 4, 6, 2, 4, 2, 2, 0], [3, 0, 2, 0, 0, 2, 1, 1, 3, 2], [80, 32, 55, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12415797263383865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 1, 0, 8, 4, 2, 0, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 1, 0, 8, 8, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [3, 8, 3, 2, 4, 4, 8, 1, 8, 4, 6, 1, 4, 2, 1, 0, 4, 3, 9, 7, 1, 2, 5, 6, 9, 3, 2], [1, 1, 2, 0, 0, 2, 2, 1, 3, 2, 3], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), alpha))), tf.math.add(alpha, tf.math.add(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302670798549216, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 4, 6, 0, 8, 5, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 1, 2, 0, 0, 2, 2, 1, 3, 2, 3], [92, 32, 10, 69, 46, 69, 22], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [6, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(alpha)), alpha)), tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 8, 9, 3, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [26, 13, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [1, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.302670798549216, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 8, 9, 9, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [1, 0, 2, 0, 0, 0, 2, 1, 3, 2, 3, 0, 1, 2, 0, 0, 0, 2, 0], [38, 32, 98, 69, 64, 69, 22, 34, 33, 82, 32], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.09971428662538528, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.470855639548019, 2.310276755567366, 2.304468919351951, 2.302913361536655, 2.3037643046852083, 2.3030681287954198, 2.3031469623347505], "accuracy": [0.17699114978313446, 0.1010434553027153, 0.10130762308835983, 0.09998679161071777, 0.09232597798109055, 0.10077928751707077, 0.09430722147226334], "val_loss": [1.98575074332101, 1.97628573008946, 1.9743657112121582, 1.973968846457345, 1.973822934286935, 1.9738401685442244, 1.973703180040632], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 8, 3, 2, 4, 4, 8, 1, 8, 4, 6, 1, 4, 4, 1, 0, 4, 3, 9, 7, 1, 2, 5, 6, 2, 3, 2], [1, 1, 2, 0, 0, 2, 2, 1, 3, 2, 3, 1, 3, 1, 3, 2, 1, 0, 2], [43, 61, 98, 69, 64, 69, 22, 34, 33, 82, 32], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.09942857176065445, "mapping_values": [1, 26, 26, 14, 12, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), grad)))), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, alpha), grad))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.470845846404898, 2.310275855837182, 2.304468842860242, 2.302913330045626, 2.303764331704511, 2.303068034322333, 2.3031469308437216], "accuracy": [0.17699114978313446, 0.1010434553027153, 0.10130762308835983, 0.09998679161071777, 0.09232597798109055, 0.10077928751707077, 0.09430722147226334], "val_loss": [1.985747950417655, 1.9762861388070243, 1.9743659155709403, 1.9739689145769392, 1.9738225936889648, 1.9738402366638184, 1.973703248160226], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 8, 3, 2, 4, 1, 8, 1, 8, 4, 6, 1, 4, 2, 1, 0, 4, 3, 8, 7, 1, 2, 5, 6, 9, 3, 2], [1, 0, 2, 0, 0, 0, 2, 1, 3, 2, 3, 1, 0, 2, 0, 0, 0, 1, 0], [92, 32, 10, 69, 46, 69, 22, 46, 31, 35, 60], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.09914285689592361, "mapping_values": [1, 16, 16, 9, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.470849710763517, 2.3102761077654126, 2.304468919351951, 2.302913406537335, 2.303764300213482, 2.303068034322333, 2.3031469623347505], "accuracy": [0.17699114978313446, 0.1006472036242485, 0.10130762308835983, 0.09998679161071777, 0.09232597798109055, 0.10077928751707077, 0.09430722147226334], "val_loss": [1.985748291015625, 1.9762859344482422, 1.9743658474513464, 1.973968846457345, 1.973822798047747, 1.9738401004246302, 1.973703248160226], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 4, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 1, 2, 0, 0, 2, 2, 1, 3, 2, 3], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.09885714203119278, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.47082431557912, 2.310276827587349, 2.304468811369213, 2.302913330045626, 2.303764331704511, 2.303067984849927, 2.3031469128623443], "accuracy": [0.17699114978313446, 0.10038304328918457, 0.10130762308835983, 0.09998679161071777, 0.09245806187391281, 0.10077928751707077, 0.09430722147226334], "val_loss": [1.9857488359723772, 1.976285798209054, 1.9743658474513464, 1.973968846457345, 1.973822729928153, 1.9738403047834123, 1.973703384399414], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [9, 1, 1, 0, 8, 3, 1, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 0, 2, 0, 0, 2, 2, 1, 1, 2], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.09885714203119278, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.470854983274979, 2.3102761212750638, 2.3044689823340083, 2.302913393027684, 2.303764300213482, 2.3030681287954198, 2.3031469623347505], "accuracy": [0.17699114978313446, 0.1006472036242485, 0.10130762308835983, 0.09998679161071777, 0.09232597798109055, 0.10077928751707077, 0.09430722147226334], "val_loss": [1.9857484272548132, 1.9762859344482422, 1.9743658474513464, 1.9739689145769392, 1.973822866167341, 1.9738401004246302, 1.973703452519008], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 4, 0, 8, 1, 2, 9, 8, 2, 6, 2, 4, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 2, 2, 0, 0, 2, 2, 1, 3, 2, 3], [92, 32, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.07285714149475098, "mapping_values": [1, 13, 13, 8, 5, 3, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301849779561841, 2.3024321042031755, 2.30134782635572, 2.300211525454639, 2.300963755155268, 2.3000273763731944, 2.301200784066759, 2.300801127074401, 2.3000639911498437, 2.3005515243934367, 2.3003317127610714, 2.300911907286235, 2.3012756318180645, 2.3007549919929047, 2.3019903551680363, 2.300770040799787, 2.302048438764629, 2.3008633660697004, 2.3021166015373575, 2.3005164362388815, 2.3008600902154286, 2.3015254184066376, 2.3015734426349526, 2.301309486909896, 2.301514168205105], "accuracy": [0.09272222965955734, 0.08717474341392517, 0.09338264167308807, 0.09866596013307571, 0.09668471664190292, 0.09496764093637466, 0.09589222073554993, 0.09576013684272766, 0.10038304328918457, 0.09179764986038208, 0.09787346422672272, 0.0956280529499054, 0.0940430611371994, 0.09140139818191528, 0.0948355570435524, 0.08770307898521423, 0.09060890227556229, 0.09853387624025345, 0.09298639744520187, 0.09826971590518951, 0.08968432247638702, 0.0878351628780365, 0.09140139818191528, 0.09060890227556229, 0.09087307006120682], "val_loss": [1.970341682434082, 1.9701136180332728, 1.9700615746634347, 1.9703726768493652, 1.970578738621303, 1.9708174977983748, 1.9708358900887626, 1.9707485607692175, 1.9707303047180176, 1.970923900604248, 1.9710988317217146, 1.9713550976344518, 1.9715374537876673, 1.9715891565595354, 1.9717627934047155, 1.971879346030099, 1.9720605441502161, 1.972193786076137, 1.972313063485282, 1.972390583583287, 1.972440447126116, 1.9724810464041573, 1.9725157192775182, 1.9725439207894462, 1.9725640160696847], "val_accuracy": [0.04266666620969772, 0.04699999839067459, 0.05299999937415123, 0.054666668176651, 0.054999999701976776, 0.055666666477918625, 0.055666666477918625, 0.059333331882953644, 0.061000000685453415, 0.06133333221077919, 0.06066666543483734, 0.06133333221077919, 0.057999998331069946, 0.06133333221077919, 0.06233333423733711, 0.06433333456516266, 0.06300000101327896, 0.06333333253860474, 0.06266666948795319, 0.06599999964237213, 0.06533333659172058, 0.06233333423733711, 0.06266666948795319, 0.06433333456516266, 0.06433333456516266]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [4, 1, 3, 5, 2, 4, 8, 2, 8, 4, 6, 2, 4, 2, 2, 0], [1, 0, 2, 0, 0, 2, 1, 1, 3, 2], [80, 32, 55, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.0722857117652893, "mapping_values": [1, 7, 7, 3, 4, 2, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018497975432184, 2.3024320592024954, 2.301349274848572, 2.300213743147361, 2.3009664496851476, 2.3000275743572924, 2.3011992366290945, 2.3007952835361136, 2.3000561907905173, 2.3005442911560476, 2.3003235885480047, 2.300905604892167, 2.3012692215357315, 2.3007489639801704, 2.3019834945954822, 2.3007661134591113, 2.3020428111918174, 2.3008611841507873, 2.30211531021623, 2.30051528467494, 2.300858857404633, 2.301522260076885, 2.3015739641893713, 2.301310521264228, 2.301513938824451], "accuracy": [0.09272222965955734, 0.08717474341392517, 0.09338264167308807, 0.09866596013307571, 0.09668471664190292, 0.09509972482919693, 0.09602430462837219, 0.09576013684272766, 0.1002509593963623, 0.09179764986038208, 0.09747721254825592, 0.09576013684272766, 0.0940430611371994, 0.09140139818191528, 0.09496764093637466, 0.08757099509239197, 0.09087307006120682, 0.09853387624025345, 0.09272222965955734, 0.09826971590518951, 0.09034473448991776, 0.08796724677085876, 0.09126931428909302, 0.09060890227556229, 0.09113723784685135], "val_loss": [1.970341682434082, 1.9701142311096191, 1.9700636863708496, 1.9703751291547502, 1.9705819402422224, 1.9708173615591866, 1.970830031803676, 1.9707413400922502, 1.9707235608782088, 1.9709150450570243, 1.971092769077846, 1.9713495799473353, 1.9715347290039062, 1.9715841157095773, 1.9717603410993303, 1.9718770299639021, 1.9720606803894043, 1.9721946716308594, 1.9723138809204102, 1.9723914691380091, 1.9724396978105818, 1.9724820000784737, 1.9725170816693987, 1.972545555659703, 1.9725653103419714], "val_accuracy": [0.04266666620969772, 0.04699999839067459, 0.05299999937415123, 0.054666668176651, 0.054666668176651, 0.055666666477918625, 0.056333333253860474, 0.059333331882953644, 0.061000000685453415, 0.06133333221077919, 0.06066666543483734, 0.06133333221077919, 0.05900000035762787, 0.061666667461395264, 0.06233333423733711, 0.06433333456516266, 0.06300000101327896, 0.06333333253860474, 0.06266666948795319, 0.06599999964237213, 0.06499999761581421, 0.06233333423733711, 0.06199999898672104, 0.06433333456516266, 0.06333333253860474]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 1, 4, 0, 8, 1, 2, 9, 8, 2, 6, 0, 5, 6, 7, 3, 2, 0, 3, 4, 7, 8, 0], [1, 1, 2, 0, 0, 2, 2, 1, 2, 2, 3], [92, 99, 10, 69, 46, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [0], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 22, 22, 14, 8, 3, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302179488995922, 2.303389483470612, 2.3027345222520506, 2.301186581581276, 2.3020276045204073, 2.3009125343041097], "accuracy": [0.09166556596755981, 0.08426892012357712, 0.09245806187391281, 0.09430722147226334, 0.09272222965955734, 0.09298639744520187], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 3, 9, 5, 2, 4, 8, 6, 5, 4, 6, 9, 2, 2, 2, 0], [1, 1, 2, 0, 0, 2, 1, 2, 1, 2, 3, 3, 0, 3], [80, 32, 98, 69, 64, 69, 22], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [4, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [3, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302179488995922, 2.303389483470612, 2.3027345222520506, 2.301186581581276, 2.3020276045204073, 2.3009125343041097], "accuracy": [0.09166556596755981, 0.08426892012357712, 0.09245806187391281, 0.09430722147226334, 0.09272222965955734, 0.09298639744520187], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]