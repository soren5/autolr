[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 1, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [66, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.33000001311302185, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.35744637618558, 2.389779275040884, 2.474856529159002, 2.3350561452721244, 2.4000467105926444, 2.4322858198428152, 2.3267410809510984], "accuracy": [0.16774533689022064, 0.1476687341928482, 0.11293092370033264, 0.0956280529499054, 0.10328886657953262, 0.1018359512090683, 0.09681680053472519], "val_loss": [2.042999063219343, 1.8669721739632743, 1.9884824752807617, 2.016085760934012, 2.1504770687648227, 1.9942268644060408, 1.9903406415666853], "val_accuracy": [0.1003333330154419, 0.2736666798591614, 0.10066666454076767, 0.10366666316986084, 0.10899999737739563, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [0, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.30399999022483826, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.357436934198922, 2.313824367938875, 2.434770179478216, 2.321386329155588, 2.3155256549931944, 2.357776061308587, 2.3435286950630485], "accuracy": [0.16774533689022064, 0.16193369030952454, 0.16800950467586517, 0.14119666814804077, 0.12812046706676483, 0.10196803510189056, 0.10315678268671036], "val_loss": [2.043082986559187, 2.287496566772461, 1.9564123153686523, 1.9263459614345007, 1.9928443091256278, 1.9927863393511092, 2.0226804869515553], "val_accuracy": [0.1003333330154419, 0.2723333239555359, 0.1809999942779541, 0.1483333259820938, 0.09833333641290665, 0.0976666659116745, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.16857142746448517, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.3574025908386895, 2.442079898372948, 2.407067885881937, 2.3401170795336377, 2.325788692980237, 2.328656202514552, 2.3265305538187566, 2.3244289550420993], "accuracy": [0.16774533689022064, 0.13908334076404572, 0.11781799048185349, 0.0940430611371994, 0.09945846349000931, 0.09668471664190292, 0.09893012791872025, 0.09747721254825592], "val_loss": [2.042787960597447, 2.013538564954485, 1.9962878227233887, 2.0023862974984303, 1.9970496722630091, 1.9931560243879045, 1.9880501202174596, 1.9892400332859583], "val_accuracy": [0.1003333330154419, 0.10466666519641876, 0.10566666722297668, 0.1003333330154419, 0.10266666859388351, 0.09833333641290665, 0.10266666859388351, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 16, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [3, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.121714286506176, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.581111763635599, 2.2748110562645607, 6.675314087862068, 2.3061284425629918, 2.3036644508211666, 2.3030768759010365], "accuracy": [0.15836745500564575, 0.14291374385356903, 0.11161009222269058, 0.09694888442754745, 0.09628847241401672, 0.09747721254825592], "val_loss": [1.979018075125558, 25.107662745884486, 1.9790258407592773, 1.9749280384608678, 1.9740681648254395, 1.9738478660583496], "val_accuracy": [0.16099999845027924, 0.1003333330154419, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.12057142704725266, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.581110239406823, 2.283467438809545, 3.8227864686350985, 2.3050006807063, 2.30336673032055, 2.3029882321504473], "accuracy": [0.1582353711128235, 0.13961167633533478, 0.10368511080741882, 0.09628847241401672, 0.09681680053472519, 0.10157178342342377], "val_loss": [1.978914737701416, 5.563855307442801, 1.976799760546003, 1.974358149937221, 1.9738476616995675, 1.9737695966448103], "val_accuracy": [0.16233333945274353, 0.11533333361148834, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [1, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.11999999731779099, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.357436812989952, 2.4751765548812874, 2.399258794218967, 2.352309006048688, 2.3346899592440282, 2.3290164426585167, 2.341076994931079], "accuracy": [0.16774533689022064, 0.13340377807617188, 0.09945846349000931, 0.09708096832036972, 0.09351472556591034, 0.09959053993225098, 0.09642054885625839], "val_loss": [2.043175288609096, 2.032048429761614, 1.9882934434073312, 1.990191868373326, 2.0164172308785573, 2.0286547797066823, 1.9953629629952567], "val_accuracy": [0.1003333330154419, 0.10266666859388351, 0.10066666454076767, 0.10233332961797714, 0.10266666859388351, 0.1003333330154419, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [2, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [1, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10971428453922272, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.357421869457579, 2.4790604105400074, 2.376437771857265, 2.3432559766128254, 2.329688212497123, 2.3279979245033813, 2.336795356972437], "accuracy": [0.16774533689022064, 0.13221503794193268, 0.10196803510189056, 0.09919429570436478, 0.09417514503002167, 0.09800554811954498, 0.09919429570436478], "val_loss": [2.0430679321289062, 2.0314214570181712, 1.9822030067443848, 1.9930466243198939, 2.012035710471017, 2.0148239135742188, 1.993426936013358], "val_accuracy": [0.1003333330154419, 0.10266666859388351, 0.10066666454076767, 0.1003333330154419, 0.10266666859388351, 0.1003333330154419, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [4, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [1, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021254054212994, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 8, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1], [3, 7, 4, 0], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [67, 92, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 0, 8, 5, 4, 1, 0, 9, 6, 3, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.multiply(grad, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [82, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0, 0, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [0, 0, 2, 1, 2], [67, 92, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3047511467387602, 2.3618029119032817, 2.6196937870591968, 3.0471362486617473, 3.7264471008100246, 6.636482539949731], "accuracy": [0.09681680053472519, 0.09760929644107819, 0.09998679161071777, 0.09615638852119446, 0.10038304328918457, 0.09998679161071777], "val_loss": [1.9838481630597795, 2.0611395154680525, 2.2978314672197615, 2.7227039337158203, 4.304209164210728, 7.900790350777762], "val_accuracy": [0.10266666859388351, 0.10199999809265137, 0.09700000286102295, 0.09700000286102295, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 4, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [1, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 0, 2, 9, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 4, 3, 5, 3], [45, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [2, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [1, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3020621156018595, 2.3025438046143623, 2.302645185415409, 2.303165898709139, 2.3524892698929625, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736347879682268, 1.9736176899501257, 1.973665509905134, 1.9756385258265905, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [0, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021254054212994, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1], [3, 7, 4], [2, 7, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.0560000017285347, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303611864959874, 2.3032645624957113, 2.302527903282348, 2.3018639329213193, 2.3028589590838746, 2.3024904014349077, 2.3015328364648746, 2.3033871790201057, 2.3017339241928223, 2.3013509468332556, 2.3026698514565247, 2.301824986674861, 2.3014821769413047, 2.3035469012977803, 2.3008185350002157, 2.3014137482583292, 2.300895542469259, 2.299534659989679, 2.301351200839894, 2.3000110077458036, 2.2998373307540607, 2.299859514766759, 2.301041434894794, 2.300028158484386, 2.301298979770679, 2.3007281361916094, 2.3011668901779805, 2.3001400481881467, 2.3019146826037042, 2.2995068714241107, 2.297708011621403, 2.3005560583458, 2.2991492196537675, 2.2991524808647106, 2.2996492152200823, 2.300409038919326, 2.3000901333329353, 2.299425751919508, 2.2996084822356315, 2.2997068132250114, 2.2986479315696657, 2.299397152869331, 2.299327402381912, 2.2989250980647262, 2.2997358313577996, 2.299141498399905, 2.2997343948945206, 2.299272057213693, 2.2988296177062564, 2.2974701715639916, 2.2971563194059756, 2.297323137462698, 2.299474815194318, 2.3013182874872795, 2.2986486120593073, 2.298788882989799, 2.2992201132655317, 2.2972136761581328, 2.2969092435021805, 2.2982442532988934, 2.298159232150294, 2.2974774563521945, 2.298363830750062, 2.298548202504571, 2.297619571271369, 2.2973963541676574, 2.2969138417277337, 2.298068302056541, 2.2990103432405045, 2.2976537276063818, 2.296975004989489, 2.2977875622114596, 2.298175669239182, 2.2975181530589803, 2.29791953708234, 2.296883982343602, 2.2981517157140834, 2.296942233063085, 2.2971521545599605, 2.2970994193682093, 2.2983869123515546, 2.297184277141351, 2.2981552349940078, 2.296582093123573, 2.295503712758538, 2.297172557691998, 2.2968921000065348, 2.2967036615950382, 2.2975998043210955, 2.2961706729408236, 2.2955525302143776, 2.2958451794312063, 2.296118791848756, 2.296791727768668, 2.2973506975923437, 2.295937832493619, 2.2973473106377225, 2.295749174967544, 2.2960667860837045, 2.2968819213187484], "accuracy": [0.08849557489156723, 0.0870426595211029, 0.08730682730674744, 0.09087307006120682, 0.08717474341392517, 0.09034473448991776, 0.08651433140039444, 0.09391097724437714, 0.10130762308835983, 0.09047681838274002, 0.08651433140039444, 0.09034473448991776, 0.0944393053650856, 0.0882314071059227, 0.09642054885625839, 0.09325055778026581, 0.0948355570435524, 0.10408136248588562, 0.0952318087220192, 0.09430722147226334, 0.09576013684272766, 0.09430722147226334, 0.09285431355237961, 0.09589222073554993, 0.09192973375320435, 0.0948355570435524, 0.0952318087220192, 0.09021265059709549, 0.09140139818191528, 0.09945846349000931, 0.10051512718200684, 0.09166556596755981, 0.0936468094587326, 0.09760929644107819, 0.09615638852119446, 0.09840179979801178, 0.09919429570436478, 0.09694888442754745, 0.0948355570435524, 0.0936468094587326, 0.10302469879388809, 0.09734513610601425, 0.09998679161071777, 0.09985470771789551, 0.09589222073554993, 0.1014397069811821, 0.09813763201236725, 0.09906221181154251, 0.10408136248588562, 0.10276053100824356, 0.10368511080741882, 0.10355303436517715, 0.09457138925790787, 0.09153348207473755, 0.09945846349000931, 0.1010434553027153, 0.10170386731624603, 0.1014397069811821, 0.10408136248588562, 0.10077928751707077, 0.10342095047235489, 0.10381719470024109, 0.10236428678035736, 0.10170386731624603, 0.10368511080741882, 0.1022322028875351, 0.10011887550354004, 0.10276053100824356, 0.10460969805717468, 0.10698718577623367, 0.1002509593963623, 0.10315678268671036, 0.1026284471154213, 0.10527011007070541, 0.10117553919553757, 0.10474177449941635, 0.10434553027153015, 0.10579843819141388, 0.10527011007070541, 0.10632677376270294, 0.1006472036242485, 0.10579843819141388, 0.10117553919553757, 0.10038304328918457, 0.10315678268671036, 0.10236428678035736, 0.10157178342342377, 0.10368511080741882, 0.10421344637870789, 0.10513802617788315, 0.10989301651716232, 0.10698718577623367, 0.11293092370033264, 0.09708096832036972, 0.10368511080741882, 0.10949676483869553, 0.10817593336105347, 0.1014397069811821, 0.10619468986988068, 0.10210011899471283], "val_loss": [1.9706134114946638, 1.9705397742135184, 1.9704546247209822, 1.9703707013811385, 1.9702976090567452, 1.9702303750174386, 1.9701623916625977, 1.970097609928676, 1.9700280598231725, 1.9699551037379675, 1.9698747907366072, 1.9698023114885603, 1.9697316033499581, 1.9696595328194755, 1.9695841244288854, 1.9695207732064384, 1.9694462503705705, 1.9693739754813058, 1.9693022455487932, 1.9692373275756836, 1.9691693442208427, 1.9691016333443778, 1.9690262930733817, 1.9689670971461706, 1.9689017704554967, 1.9688397135053362, 1.9687789508274622, 1.9687213216509138, 1.968658719744001, 1.9686014311654227, 1.9685465267726354, 1.9684933934892928, 1.968442371913365, 1.9683835847037179, 1.9683304514203752, 1.9682765688214983, 1.9682252747671944, 1.9681730270385742, 1.968113831111363, 1.968061855861119, 1.9680067471095495, 1.96795654296875, 1.9679008211408342, 1.9678451674325126, 1.9677928515842982, 1.9677375384739466, 1.9676894460405623, 1.9676332473754883, 1.9675820214407784, 1.9675334521702357, 1.967484678540911, 1.967433248247419, 1.9673842702593123, 1.9673354966299874, 1.9672886303492956, 1.9672410147530692, 1.9671882901872908, 1.967141764504569, 1.9670890399387904, 1.967038903917585, 1.9669904027666365, 1.966944694519043, 1.966895920889718, 1.966848918369838, 1.9668006896972656, 1.9667564800807409, 1.966707978929792, 1.9666564123971122, 1.9666038921901159, 1.9665573665073939, 1.9665101596287318, 1.9664654731750488, 1.9664225578308105, 1.966376713344029, 1.9663301876613073, 1.9662835257393974, 1.9662360463823592, 1.9661896569388253, 1.9661441530500139, 1.9660990578787667, 1.9660562787737166, 1.9660117285592216, 1.9659679957798548, 1.9659198352268763, 1.9658709253583635, 1.9658241953168596, 1.9657786914280482, 1.9657344136919295, 1.9656917708260673, 1.9656502178737096, 1.9656102316720145, 1.9655712672642298, 1.9655309404645647, 1.9654902049473353, 1.965454169682094, 1.965414115360805, 1.9653716087341309, 1.9653308732169015, 1.9652940886361259, 1.965254783630371], "val_accuracy": [0.03700000047683716, 0.03766666725277901, 0.038333334028720856, 0.03866666555404663, 0.039000000804662704, 0.03933333232998848, 0.03933333232998848, 0.039000000804662704, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041333332657814026, 0.041333332657814026, 0.04233333468437195, 0.0430000014603138, 0.0430000014603138, 0.0430000014603138, 0.0430000014603138, 0.04333333298563957, 0.043666668236255646, 0.04333333298563957, 0.043666668236255646, 0.04466666653752327, 0.04466666653752327, 0.04533333331346512, 0.04500000178813934, 0.045666664838790894, 0.045666664838790894, 0.046666666865348816, 0.04699999839067459, 0.04800000041723251, 0.04800000041723251, 0.04866666719317436, 0.04933333396911621, 0.050333332270383835, 0.05066666752099991, 0.050999999046325684, 0.050999999046325684, 0.05166666582226753, 0.05166666582226753, 0.05233333259820938, 0.052666667848825455, 0.0533333346247673, 0.05433333292603493, 0.054666668176651, 0.054666668176651, 0.054999999701976776, 0.055666666477918625, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.05700000002980232, 0.05700000002980232, 0.05766666680574417, 0.05833333358168602, 0.058666665107011795, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.061000000685453415, 0.061666667461395264, 0.06266666948795319, 0.06300000101327896, 0.06333333253860474, 0.06366666406393051, 0.06433333456516266, 0.06466666609048843, 0.06533333659172058, 0.06599999964237213, 0.06666667014360428, 0.06666667014360428, 0.06666667014360428, 0.06800000369548798, 0.0689999982714653, 0.06933332979679108, 0.070333331823349, 0.070333331823349, 0.07100000232458115, 0.0716666653752327, 0.0716666653752327, 0.07266666740179062, 0.0729999989271164, 0.07333333045244217, 0.07433333247900009, 0.07466666400432587, 0.07500000298023224, 0.07500000298023224, 0.07599999755620956, 0.07666666805744171, 0.07733333110809326, 0.07766667008399963, 0.07800000160932541, 0.07833333313465118, 0.07833333313465118, 0.07966666668653488, 0.07999999821186066, 0.08033332973718643, 0.0806666687130928, 0.08100000023841858, 0.08100000023841858]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 2, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 70]], "fitness": -0.04114285856485367, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303649276050169, 2.3033886237970167, 2.3027448437516527, 2.302175969117668, 2.3032549092042496, 2.302938930362585], "accuracy": [0.08796724677085876, 0.08677849918603897, 0.08757099509239197, 0.09034473448991776, 0.08651433140039444, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0], [3, 7, 4, 3, 9], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 70]], "fitness": -0.04114285856485367, "mapping_values": [1, 5, 5, 3, 2, 2, 6, 6, 4, 2, 0, 9, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303649276050169, 2.3033886237970167, 2.3027448437516527, 2.302175969117668, 2.3032549092042496, 2.302938930362585], "accuracy": [0.08796724677085876, 0.08677849918603897, 0.08757099509239197, 0.09034473448991776, 0.08651433140039444, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 9, 5, 8, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 0, 5, 8, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [1, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303649276050169, 2.3033886237970167, 2.3027448437516527, 2.302175969117668, 2.3032549092042496, 2.302938930362585], "accuracy": [0.08796724677085876, 0.08677849918603897, 0.08757099509239197, 0.09034473448991776, 0.08651433140039444, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [1, 0, 1, 0, 0, 2], [73, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [2, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [1, 0, 2, 1, 2], [67, 92]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303649276050169, 2.3033886237970167, 2.3027448437516527, 2.302175969117668, 2.3032549092042496, 2.302938930362585], "accuracy": [0.08796724677085876, 0.08677849918603897, 0.08757099509239197, 0.09034473448991776, 0.08651433140039444, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [9, 1, 9, 5, 2, 4, 2, 3, 9, 4, 6, 9], [3, 0, 1, 0, 0, 2], [21, 32, 94, 69, 98, 69], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 5, 2, 1, 7, 2, 3, 2, 8, 2], [5, 2, 3, 5, 4, 3, 5, 3], [78, 14, 47, 41, 87, 41, 18], [0, 0, 0, 1, 0], [1], [3, 7, 4], [3, 5, 2], [63], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 9, 5, 5], [3, 0, 2, 1, 2], [67, 70]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303649276050169, 2.3033886237970167, 2.3027448437516527, 2.302175969117668, 2.3032549092042496, 2.302938930362585], "accuracy": [0.08796724677085876, 0.08677849918603897, 0.08757099509239197, 0.09034473448991776, 0.08651433140039444, 0.08902391046285629], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]