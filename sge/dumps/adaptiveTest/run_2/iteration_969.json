[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.8374285697937012, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(beta, tf.math.multiply(tf.math.multiply(grad, grad), grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.132696808478804, 1.7946321787284334, 1.339283355459199, 1.0108339421391062, 0.8720407476593333, 0.7678576291056199, 0.7208100298785924, 0.6758154829920495, 0.640583500035797, 0.6093203608449015, 0.5810408747396165, 0.5839118519794231, 0.5367682815353868, 0.5701013588083419, 0.5212485023603589, 0.5304951785089727, 0.4867366413241285, 0.4905952242946171, 0.4823432790998455, 0.47987044699565845, 0.46400695938822173, 0.4280776091893241, 0.45365535259923884, 0.430431244903473, 0.4006617683240719, 0.42879354691603055, 0.40945770252083175, 0.4038472401192002, 0.40116995002268924, 0.37737127975969736, 0.38812253097218136, 0.376603590687898, 0.35812139711863705, 0.3688319248451517, 0.33285777413094003], "accuracy": [0.2903183102607727, 0.4119667112827301, 0.5439175963401794, 0.6350548267364502, 0.6737551093101501, 0.7058512568473816, 0.724210798740387, 0.7458723783493042, 0.7582882046699524, 0.7751948237419128, 0.7878747582435608, 0.7788931727409363, 0.8033285140991211, 0.7857614755630493, 0.8033285140991211, 0.8013472557067871, 0.8183859586715698, 0.8173292875289917, 0.819970965385437, 0.8212917447090149, 0.8269713521003723, 0.8445383906364441, 0.8352925777435303, 0.8397833704948425, 0.8560295701026917, 0.8445383906364441, 0.8508783578872681, 0.8511425256729126, 0.8511425256729126, 0.8652753829956055, 0.8551049828529358, 0.8632941246032715, 0.8632941246032715, 0.8632941246032715, 0.8784837126731873], "val_loss": [1.4414239610944475, 1.5462943826402937, 0.8006702150617327, 0.6936698130198887, 0.648534996168954, 0.5579978568213326, 0.5311122792107719, 0.5276941571916852, 0.4964618342263358, 0.46921793052128385, 0.49367122990744455, 0.4392191937991551, 0.4388485380581447, 0.43162080219813753, 0.4706211430685861, 0.4512673020362854, 0.436796384198325, 0.4137905069759914, 0.4835814578192575, 0.396382280758449, 0.38254661219460623, 0.4292287996837071, 0.3883885570934841, 0.36409554311207365, 0.3966319135257176, 0.36987575462886263, 0.38526445627212524, 0.37394640275410246, 0.42070313010896954, 0.34533665009907316, 0.43160693986075266, 0.3568330832890102, 0.3836832898003714, 0.33709349802562166, 0.38944813183375765], "val_accuracy": [0.4020000100135803, 0.49300000071525574, 0.6240000128746033, 0.6886666417121887, 0.7026666402816772, 0.7356666922569275, 0.7506666779518127, 0.7493333220481873, 0.7829999923706055, 0.7976666688919067, 0.7760000228881836, 0.8066666722297668, 0.7956666946411133, 0.8100000023841858, 0.7883333563804626, 0.7973333597183228, 0.7993333339691162, 0.8203333616256714, 0.781000018119812, 0.8243333101272583, 0.8403333425521851, 0.7983333468437195, 0.8316666483879089, 0.8420000076293945, 0.82833331823349, 0.8433333039283752, 0.8336666822433472, 0.8379999995231628, 0.8073333501815796, 0.8606666922569275, 0.8096666932106018, 0.8556666374206543, 0.8353333473205566, 0.8576666712760925, 0.8299999833106995]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 4, 2, 1, 3, 3, 3, 2, 0, 2, 2, 6], [0, 1, 3, 5, 0, 3, 0, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 78, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.8374285697937012, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 3, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(beta, tf.math.multiply(tf.math.multiply(grad, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad)))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.085569494987098, 1.8514443194121417, 1.2951217479142751, 1.056267254852647, 0.9118897515422775, 0.8093825057591776, 0.7393008582249703, 0.7085176264967318, 0.6663418246801929, 0.6274763967902386, 0.6222870341853821, 0.5856474037530037, 0.557146055862778, 0.5334089431056037, 0.509761636417146, 0.5396463466185022, 0.5159888046961797, 0.49165969787886615, 0.490116961372212, 0.47680385042537454, 0.4597616707801567, 0.44131454041274687, 0.4573329714555089, 0.4189649478650096, 0.47171100183264486, 0.4512746332186466, 0.4134298159052368, 0.4164438398286509, 0.39882440239746086], "accuracy": [0.30603620409965515, 0.39585259556770325, 0.5481442213058472, 0.6145819425582886, 0.6601505875587463, 0.6996433734893799, 0.7186633348464966, 0.7305507659912109, 0.7534011602401733, 0.7637035846710205, 0.7618544697761536, 0.7763835787773132, 0.793950617313385, 0.802800178527832, 0.8141592741012573, 0.7950072884559631, 0.8045172095298767, 0.8206313848495483, 0.8166688680648804, 0.8231409192085266, 0.8309338092803955, 0.8412362933158875, 0.8325188159942627, 0.8450667262077332, 0.8300092220306396, 0.8378021121025085, 0.8477083444595337, 0.8485008478164673, 0.8496896028518677], "val_loss": [1.8136069434029716, 1.263087613242013, 0.8989366803850446, 0.71197509765625, 0.6775422777448382, 0.5599512372698102, 0.5778403793062482, 0.5987979343959263, 0.5588690042495728, 0.502366168158395, 0.4766862392425537, 0.44130357674189974, 0.45220369952065603, 0.42282514912741526, 0.47683855465480257, 0.45744645595550537, 0.4217214158603123, 0.42042520216533114, 0.4091540915625436, 0.4150212747710092, 0.3956235221454075, 0.40645979983466013, 0.37502858468464445, 0.3565634148461478, 0.46180782999311176, 0.40160931859697613, 0.44416505098342896, 0.3604609114783151, 0.3712034140314375], "val_accuracy": [0.2849999964237213, 0.48500001430511475, 0.5673333406448364, 0.690666675567627, 0.7076666951179504, 0.7416666746139526, 0.7269999980926514, 0.7193333506584167, 0.7490000128746033, 0.7613333463668823, 0.7860000133514404, 0.8006666898727417, 0.8016666769981384, 0.8090000152587891, 0.7870000004768372, 0.7940000295639038, 0.8113333582878113, 0.8196666836738586, 0.8226666450500488, 0.812333345413208, 0.8323333263397217, 0.8186666369438171, 0.8399999737739563, 0.8519999980926514, 0.8009999990463257, 0.8230000138282776, 0.8096666932106018, 0.843999981880188, 0.8386666774749756]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 4, 2, 2, 5, 2, 3, 5, 0, 2, 2, 6], [0, 1, 3, 3, 3, 3, 0, 3, 1, 1, 3, 2], [78, 57, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.8202857375144958, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1547538823045995, 2.395584682006846, 2.159186795214148, 2.2199277376470437, 2.3124746166562296, 1.9539531338184957, 1.4432541448930472, 1.2178371563374706, 1.126222200743857, 0.9702473873664453, 0.9303315512461039, 0.8882599225007721, 0.7695005885944737, 0.7697504020134031, 0.7689521857114784, 0.7187438199564513, 0.7152024383605384, 0.6277460182394885, 0.6268292422055914, 0.6362537296456652, 0.5799008621877888, 0.5622304053732339, 0.5837731751405552, 0.5587752479855662, 0.5247204126840601, 0.5384725512467544, 0.5728485709672055, 0.5127049101625593, 0.5026514233300211], "accuracy": [0.2822612524032593, 0.15189538896083832, 0.24356095492839813, 0.18795403838157654, 0.21423853933811188, 0.3539822995662689, 0.481838583946228, 0.5403513312339783, 0.5807687044143677, 0.6330735683441162, 0.6519614458084106, 0.6643772125244141, 0.7059833407402039, 0.7054550051689148, 0.7119271159172058, 0.7333245277404785, 0.7292299270629883, 0.7572315335273743, 0.7630431652069092, 0.7526086568832397, 0.7798177003860474, 0.7884030938148499, 0.7783648371696472, 0.7860256433486938, 0.8004226684570312, 0.7989697456359863, 0.7852331399917603, 0.8103289008140564, 0.8131026029586792], "val_loss": [2.3177359444754466, 1.9391892978123255, 2.006881441388811, 1.9372809955051966, 1.398707355771746, 1.363921880722046, 0.9274186406816755, 0.9965205192565918, 0.8182519333703178, 0.6904610054833549, 0.8057142666407994, 0.6000752959932599, 0.553086655480521, 0.5865515640803746, 0.6055605411529541, 0.53895218031747, 0.521779979978289, 0.4816250801086426, 0.5663641691207886, 0.48324859142303467, 0.4686500515256609, 0.5315269231796265, 0.43993393012455534, 0.4341983710016523, 0.44852436440331594, 0.5052754027502877, 0.4564428840364729, 0.4453475219862802, 0.47672784328460693], "val_accuracy": [0.2723333239555359, 0.32199999690055847, 0.2953333258628845, 0.10066666454076767, 0.4716666638851166, 0.48500001430511475, 0.5746666789054871, 0.5580000281333923, 0.6549999713897705, 0.6679999828338623, 0.6269999742507935, 0.7099999785423279, 0.7486666440963745, 0.722000002861023, 0.718666672706604, 0.7536666393280029, 0.7603333592414856, 0.7876666784286499, 0.7413333058357239, 0.7716666460037231, 0.7950000166893005, 0.7226666808128357, 0.8023333549499512, 0.809333324432373, 0.8016666769981384, 0.7746666669845581, 0.7940000295639038, 0.7906666398048401, 0.784333348274231]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 3, 5, 2, 7, 2, 3, 5, 0, 2, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [7, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 18, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.6854285597801208, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.299592781816381, 2.295564504174225, 2.2939747841036033, 2.2907201827493533, 2.2872415899269933, 2.2816245750492246, 2.278449382103036, 2.276526539663613, 2.271737881560824, 2.2687257718353413, 2.264673296675596, 2.2625732232299005, 2.257525544928018, 2.2535759290101396, 2.2484958307570815, 2.2445696327963747, 2.238935396734592, 2.235292080733219, 2.2320703086505365, 2.2260995070853364, 2.2210559048562586, 2.2155327140033174, 2.211068980272782, 2.2046661300744836, 2.1982565915595584, 2.1923849862312457, 2.18598992464612, 2.1778006755822306, 2.17254225783549, 2.165242867840752, 2.157101621717242, 2.1518747352763348, 2.142674510631075, 2.13076040549852, 2.123747770166857, 2.1150450852915217, 2.1031215160970973, 2.0964064731290546, 2.0825262515615117, 2.072013746997731, 2.0606017078091803, 2.0490335853517707, 2.034292219085401, 2.0221946207035675, 2.0046047552969353, 1.992094755582113, 1.9819101341774341, 1.9674614555469483, 1.9519921396985078, 1.9332880814628768, 1.9224765946001914, 1.90352764549729, 1.8874037444804086, 1.8703191642039456, 1.8499752881740772, 1.83953170443507, 1.8168767642949661, 1.799714525771604, 1.7782326618662412, 1.7697569613663937, 1.7526753043076617, 1.7313408143862663, 1.7092469403803892, 1.6930174208776967, 1.67445039810553, 1.6573195609717621, 1.62929597757181, 1.6167898840829287, 1.604166287173527, 1.5847164750524312, 1.5725402987282022, 1.5484138594138515, 1.5326433994703603, 1.5196922854535757, 1.5018318607633643, 1.495002748565966, 1.4701032906695914, 1.465299355686144, 1.4595923437623142, 1.4302945712679933, 1.429120887161923, 1.4094028533205711, 1.3977055505691598, 1.3828830804019918, 1.37758903942088, 1.3663801436631466, 1.3582401550866356, 1.3386962295224119, 1.3278818117424387, 1.3259282737061049, 1.3131915809078114, 1.3109435810940124, 1.2887800733694517, 1.2792905973736257, 1.2810625287724713, 1.261597899193336, 1.2634127426928439, 1.24313568358786, 1.2422512998796331, 1.2305236024438366], "accuracy": [0.09074098616838455, 0.10698718577623367, 0.10659094154834747, 0.11636507511138916, 0.1302337795495987, 0.14278165996074677, 0.1500462293624878, 0.16034869849681854, 0.17302866280078888, 0.1798969805240631, 0.18874652683734894, 0.19601109623908997, 0.20921939611434937, 0.21318188309669495, 0.23114515841007233, 0.23682472109794617, 0.24924051761627197, 0.25201427936553955, 0.2587504982948303, 0.2674679756164551, 0.2782987654209137, 0.2829216718673706, 0.2907145619392395, 0.2949412167072296, 0.302469938993454, 0.3077532649040222, 0.3151499032974243, 0.33060362935066223, 0.3255844712257385, 0.3387927711009979, 0.33707568049430847, 0.3415665030479431, 0.3501518964767456, 0.3645489513874054, 0.36560559272766113, 0.36388853192329407, 0.37326639890670776, 0.38264429569244385, 0.39189010858535767, 0.38647469878196716, 0.3963809311389923, 0.39506009221076965, 0.40206050872802734, 0.40324923396110535, 0.4138158857822418, 0.4081363081932068, 0.41751420497894287, 0.4169858694076538, 0.42147669196128845, 0.4294016659259796, 0.4319112300872803, 0.4287412464618683, 0.43587371706962585, 0.4497424364089966, 0.44987452030181885, 0.4507991075515747, 0.4527803361415863, 0.45647865533828735, 0.4695548713207245, 0.45779949426651, 0.460969477891922, 0.47166821360588074, 0.4826310873031616, 0.48144233226776123, 0.4802536070346832, 0.4888390004634857, 0.49848103523254395, 0.4951789677143097, 0.495839387178421, 0.5011227130889893, 0.5083872675895691, 0.5094439387321472, 0.5143309831619263, 0.5193501710891724, 0.5209351181983948, 0.5221238732337952, 0.529388427734375, 0.5283318161964417, 0.5263505578041077, 0.5350680351257324, 0.5303130149841309, 0.5418042540550232, 0.5469554662704468, 0.544710099697113, 0.5423325896263123, 0.5523709058761597, 0.5495971441268921, 0.5518425703048706, 0.5548804402351379, 0.5609562993049622, 0.5650508403778076, 0.5535596609115601, 0.5646545886993408, 0.5721833109855652, 0.5635979175567627, 0.573107898235321, 0.5704662799835205, 0.5746929049491882, 0.5824857950210571, 0.5840708017349243], "val_loss": [1.9674256188528878, 1.9642013822283064, 1.9609756469726562, 1.9577748434884208, 1.954580851963588, 1.9513226917811803, 1.9480439594813757, 1.9447718347821916, 1.9414349964686803, 1.938065528869629, 1.9345745359148299, 1.9310238020760673, 1.9273837634495325, 1.923663752419608, 1.9198178563799178, 1.9158591542925154, 1.9117215701511927, 1.9074583053588867, 1.903080872126988, 1.898494107382638, 1.8937603405543737, 1.8887886319841658, 1.8837060928344727, 1.8783550943647112, 1.872737203325544, 1.8668621608189173, 1.8607590539114816, 1.8542819023132324, 1.8475911276681083, 1.8406101635524206, 1.8332826750619071, 1.8257191521780831, 1.817814895084926, 1.8094780785696847, 1.8008052962166923, 1.7918192318507604, 1.7824339866638184, 1.7726953370230538, 1.7624495370047433, 1.751772403717041, 1.740752901349749, 1.729280608040946, 1.7173763002668108, 1.7050063269478934, 1.6920493330274309, 1.6787474155426025, 1.6650077956063407, 1.650930677141462, 1.636383158820016, 1.621450594493321, 1.6062208584376745, 1.5905563831329346, 1.5746521268572127, 1.5583631311144148, 1.541653837476458, 1.5249680110386439, 1.5079119886670793, 1.4905927862439836, 1.473125423703875, 1.4556894302368164, 1.4381303446633475, 1.4205082484654017, 1.4025491646357946, 1.3846356187547957, 1.3666626385280065, 1.3490018844604492, 1.3311942645481654, 1.3137194088527135, 1.2964457443782262, 1.2793609755379813, 1.2625577109200614, 1.2459424223218645, 1.2298073768615723, 1.2139859880719865, 1.1983577183314733, 1.1833443641662598, 1.1685542038508825, 1.154284885951451, 1.1407982962472099, 1.1271028178078788, 1.1139405795506068, 1.1011723109654017, 1.0885695729936873, 1.0763864176613944, 1.0647961412157332, 1.0534684998648507, 1.0426233155386788, 1.031890562602452, 1.0215366567884172, 1.0117003236498152, 1.0019586426871163, 0.992614882332938, 0.9835255486624581, 0.9745115893227714, 0.9662060737609863, 0.9577365262167794, 0.9498636381966727, 0.9420364584241595, 0.934347254889352, 0.9270131247384208], "val_accuracy": [0.056333333253860474, 0.08799999952316284, 0.11599999666213989, 0.14933332800865173, 0.18799999356269836, 0.2199999988079071, 0.24533332884311676, 0.26899999380111694, 0.29600000381469727, 0.3160000145435333, 0.33033332228660583, 0.34299999475479126, 0.35366666316986084, 0.3633333444595337, 0.36899998784065247, 0.3790000081062317, 0.38499999046325684, 0.38866665959358215, 0.39366665482521057, 0.4000000059604645, 0.40533334016799927, 0.4126666784286499, 0.4203333258628845, 0.4243333339691162, 0.4309999942779541, 0.4359999895095825, 0.4423333406448364, 0.4429999887943268, 0.4483333230018616, 0.45133334398269653, 0.4573333263397217, 0.46133333444595337, 0.4703333377838135, 0.4763333201408386, 0.47966668009757996, 0.4856666624546051, 0.4886666536331177, 0.492333322763443, 0.49399998784065247, 0.49900001287460327, 0.5046666860580444, 0.5093333125114441, 0.5146666765213013, 0.5176666378974915, 0.5210000276565552, 0.5273333191871643, 0.531333327293396, 0.5366666913032532, 0.5393333435058594, 0.5413333177566528, 0.5429999828338623, 0.5446666479110718, 0.5460000038146973, 0.5476666688919067, 0.5519999861717224, 0.5559999942779541, 0.5586666464805603, 0.559333324432373, 0.5636666417121887, 0.5680000185966492, 0.5716666579246521, 0.574999988079071, 0.5786666870117188, 0.581333339214325, 0.5816666483879089, 0.5826666951179504, 0.5846666693687439, 0.5866666436195374, 0.5896666646003723, 0.5913333296775818, 0.593666672706604, 0.5983333587646484, 0.6016666889190674, 0.6053333282470703, 0.6069999933242798, 0.6110000014305115, 0.6133333444595337, 0.6163333058357239, 0.6200000047683716, 0.6230000257492065, 0.628000020980835, 0.6299999952316284, 0.6343333125114441, 0.6380000114440918, 0.6420000195503235, 0.643666684627533, 0.6446666717529297, 0.6473333239555359, 0.6499999761581421, 0.6543333530426025, 0.656333327293396, 0.6570000052452087, 0.6583333611488342, 0.6600000262260437, 0.6620000004768372, 0.6643333435058594, 0.6650000214576721, 0.6663333177566528, 0.6656666398048401, 0.6666666865348816]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 5, 4, 0, 2, 3, 3, 2, 5, 0, 2, 2, 6], [0, 1, 3, 5, 3, 3, 3, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 18, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.6854285597801208, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.299592781816381, 2.295564504174225, 2.2939747841036033, 2.2907201512583244, 2.287241621418022, 2.281624561539573, 2.278449350612007, 2.276526508172584, 2.2717379445428816, 2.2687257898167186, 2.264673296675596, 2.262573191738872, 2.257525544928018, 2.2535760549742547, 2.2484959747025743, 2.244569619286723, 2.238935554189736, 2.235292319151798, 2.2320703401415654, 2.2260996150680743, 2.2210555224921866, 2.2155323946213032, 2.211068728344552, 2.204665954637962, 2.1982561506851552, 2.1923843654485946, 2.1859891014076447, 2.177799703926537, 2.1725414886356202, 2.1652420221491733, 2.1570999572589145, 2.1518728503808053, 2.1426726122258946, 2.1307587680594953, 2.123746209219541, 2.1150433533794106, 2.1031202610221444, 2.096404646743857, 2.0825240518501675, 2.0720112953581564, 2.060599512569562, 2.049031048277035, 2.0342893311376224, 2.0221914178455007, 2.004601687346436, 1.9920916313571448, 1.9819062835646502, 1.9674575081307417, 1.9519882799533255, 1.9332842352273458, 1.9224731870032006, 1.9035239409713887, 1.887399752157995, 1.8703146028543869, 1.8499700813056645, 1.8395272892196306, 1.8168722747292076, 1.7997105153261033, 1.7782282623490795, 1.7697527823336703, 1.7526708845732597, 1.7313365453521825, 1.7092425049004727, 1.6930130191719086, 1.674446651003758, 1.6573150266415062, 1.6292905456999967, 1.6167844543052687, 1.6041597193888133, 1.5847089445082392, 1.5725318529444947, 1.5484056944356477, 1.5326357676982565, 1.5196841387874052, 1.5018235543117138, 1.4949946875239029, 1.470094738950063, 1.4652913394558147, 1.4595849479839802, 1.4302865773962945, 1.4291133364949637, 1.409395839906309, 1.397698899160019, 1.3828769583412999, 1.377583580813183, 1.366374673498242, 1.3582350405499195, 1.3386940498865985, 1.3278779588465552, 1.3259236583651772, 1.3131880718467257, 1.3109413656371538, 1.288774731640708, 1.2792884289171276, 1.281059913111873, 1.2615931867655668, 1.2634104865653215, 1.2431332834676083, 1.2422473998416794, 1.230518694504015], "accuracy": [0.09074098616838455, 0.10698718577623367, 0.10659094154834747, 0.11636507511138916, 0.1302337795495987, 0.14278165996074677, 0.1500462293624878, 0.16034869849681854, 0.17302866280078888, 0.1798969805240631, 0.18874652683734894, 0.19601109623908997, 0.20921939611434937, 0.21318188309669495, 0.23114515841007233, 0.23682472109794617, 0.24924051761627197, 0.25201427936553955, 0.2587504982948303, 0.2674679756164551, 0.2782987654209137, 0.2829216718673706, 0.2907145619392395, 0.2949412167072296, 0.302469938993454, 0.3077532649040222, 0.31501781940460205, 0.33060362935066223, 0.3255844712257385, 0.33866068720817566, 0.33707568049430847, 0.3415665030479431, 0.35028398036956787, 0.3645489513874054, 0.36560559272766113, 0.36388853192329407, 0.37339848279953003, 0.38264429569244385, 0.39189010858535767, 0.38647469878196716, 0.3963809311389923, 0.39506009221076965, 0.40206050872802734, 0.4031171500682831, 0.4138158857822418, 0.4081363081932068, 0.41751420497894287, 0.4169858694076538, 0.42147669196128845, 0.4294016659259796, 0.4319112300872803, 0.4287412464618683, 0.43587371706962585, 0.44987452030181885, 0.44987452030181885, 0.4507991075515747, 0.45264825224876404, 0.45647865533828735, 0.4695548713207245, 0.45779949426651, 0.460969477891922, 0.47166821360588074, 0.4826310873031616, 0.48144233226776123, 0.4803856909275055, 0.4888390004634857, 0.49848103523254395, 0.4951789677143097, 0.495839387178421, 0.5011227130889893, 0.5083872675895691, 0.5094439387321472, 0.514198899269104, 0.5193501710891724, 0.5209351181983948, 0.5222559571266174, 0.529388427734375, 0.5284639000892639, 0.5263505578041077, 0.5350680351257324, 0.5303130149841309, 0.5419363379478455, 0.5469554662704468, 0.5448421835899353, 0.5423325896263123, 0.5523709058761597, 0.5494650602340698, 0.5518425703048706, 0.5547483563423157, 0.5609562993049622, 0.5650508403778076, 0.5535596609115601, 0.5646545886993408, 0.5720512270927429, 0.5635979175567627, 0.573107898235321, 0.5704662799835205, 0.5746929049491882, 0.5824857950210571, 0.5842028856277466], "val_loss": [1.9674256188528878, 1.9642013822283064, 1.9609757150922502, 1.9577748434884208, 1.954580851963588, 1.9513226236615862, 1.9480439594813757, 1.9447719029017858, 1.9414349964686803, 1.9380655969892229, 1.9345744677952357, 1.9310239383152552, 1.9273837634495325, 1.923663752419608, 1.9198177882603236, 1.9158592905317033, 1.9117217745099748, 1.9074583734784807, 1.903080872126988, 1.898493698665074, 1.8937598637172155, 1.8887883595057897, 1.8837059565952845, 1.878354617527553, 1.8727366583687919, 1.866861343383789, 1.8607583045959473, 1.8542810848781042, 1.847590446472168, 1.840609073638916, 1.8332806995936803, 1.8257175173078264, 1.8178130558558874, 1.809476443699428, 1.8008037975856237, 1.7918177332196916, 1.7824328286307198, 1.7726935659136092, 1.7624480383736747, 1.7517705644880022, 1.74075106212071, 1.729278291974749, 1.7173737798418318, 1.7050036021641322, 1.6920460973467146, 1.6787440095629012, 1.665003708430699, 1.6509276798793249, 1.6363792760031564, 1.6214466435568673, 1.6062171799795968, 1.5905524321964808, 1.574648346219744, 1.558359009878976, 1.5416491372244698, 1.524963481085641, 1.507906709398542, 1.4905874729156494, 1.4731207234518868, 1.4556849002838135, 1.4381259168897356, 1.4205049787248885, 1.4025458948952811, 1.3846314634595598, 1.3666583810533797, 1.348996979849679, 1.3311892236982072, 1.3137143339429582, 1.2964397498539515, 1.2793541976383753, 1.2625500134059362, 1.2459349972861153, 1.2298003605433874, 1.2139782564980643, 1.1983507360730852, 1.1833368028913225, 1.168545927320208, 1.1542772906167167, 1.1407908371516637, 1.1270957674298967, 1.1139336654118128, 1.101165430886405, 1.0885630675724574, 1.076380934034075, 1.064790896006993, 1.0534645489283971, 1.0426197052001953, 1.0318855217524938, 1.0215327058519637, 1.0116963386535645, 1.001955815723964, 0.9926118169512067, 0.9835231985364642, 0.9745093754359654, 0.9662044048309326, 0.9577347551073346, 0.949861969266619, 0.9420333249228341, 0.9343452113015311, 0.9270101615360805], "val_accuracy": [0.056333333253860474, 0.08799999952316284, 0.11599999666213989, 0.14933332800865173, 0.18799999356269836, 0.2199999988079071, 0.24533332884311676, 0.26899999380111694, 0.29600000381469727, 0.3160000145435333, 0.33033332228660583, 0.34299999475479126, 0.35366666316986084, 0.3633333444595337, 0.36899998784065247, 0.3790000081062317, 0.38499999046325684, 0.38866665959358215, 0.39366665482521057, 0.4000000059604645, 0.40533334016799927, 0.4126666784286499, 0.4203333258628845, 0.4243333339691162, 0.4309999942779541, 0.4359999895095825, 0.4423333406448364, 0.4426666796207428, 0.4483333230018616, 0.45133334398269653, 0.4573333263397217, 0.46133333444595337, 0.4703333377838135, 0.4763333201408386, 0.47966668009757996, 0.4856666624546051, 0.4886666536331177, 0.492333322763443, 0.49399998784065247, 0.49900001287460327, 0.5046666860580444, 0.5093333125114441, 0.5146666765213013, 0.5176666378974915, 0.5216666460037231, 0.5273333191871643, 0.531333327293396, 0.5366666913032532, 0.5393333435058594, 0.5413333177566528, 0.5429999828338623, 0.5446666479110718, 0.5460000038146973, 0.5476666688919067, 0.5519999861717224, 0.5559999942779541, 0.5586666464805603, 0.559333324432373, 0.5636666417121887, 0.5680000185966492, 0.5716666579246521, 0.574999988079071, 0.5786666870117188, 0.581333339214325, 0.5816666483879089, 0.5826666951179504, 0.5846666693687439, 0.5866666436195374, 0.5896666646003723, 0.5913333296775818, 0.593666672706604, 0.5983333587646484, 0.6016666889190674, 0.6053333282470703, 0.6069999933242798, 0.6110000014305115, 0.6133333444595337, 0.6163333058357239, 0.6200000047683716, 0.6230000257492065, 0.628000020980835, 0.6299999952316284, 0.6343333125114441, 0.6380000114440918, 0.6420000195503235, 0.643666684627533, 0.6446666717529297, 0.6473333239555359, 0.6499999761581421, 0.6543333530426025, 0.656333327293396, 0.6570000052452087, 0.6583333611488342, 0.6600000262260437, 0.6620000004768372, 0.6643333435058594, 0.6650000214576721, 0.6663333177566528, 0.6656666398048401, 0.6666666865348816]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 0, 4, 0, 1, 7, 6, 3, 2, 2, 4, 2, 6, 0, 3, 1, 1, 9, 5, 6, 5], [0, 1, 3, 5, 3, 3, 3, 2, 1, 1, 3, 3, 1, 1, 4, 2], [78, 26, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [4, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.4828571379184723, "mapping_values": [1, 1, 1, 0, 1, 0, 32, 32, 19, 13, 2, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))), tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, grad)), grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4079922712741983, 2.2664647504496394, 2.2275095629953454, 2.30507479276419, 2.3030080454240243, 2.3016998596541587, 2.1849494824682196], "accuracy": [0.2285034954547882, 0.151234969496727, 0.24025888741016388, 0.09457138925790787, 0.09760929644107819, 0.10949676483869553, 0.2378813922405243], "val_loss": [1.9737685748508997, 1.9388025828770228, 1.975334916796003, 1.973639760698591, 1.9735666002546037, 1.9651374135698592, 1.822260856628418], "val_accuracy": [0.1003333330154419, 0.2903333306312561, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.2316666692495346, 0.12266666442155838]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 0, 4, 0, 1, 7, 6, 3, 2, 2, 4, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 26, 47, 41, 87, 41, 18], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [4, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 1, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.46314287185668945, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.409829132686973, 2.2550679705540078, 2.155731328379886, 2.249548239053563, 2.2285026608047516, 2.304222072041534, 2.303032688760109, 2.303269229308725], "accuracy": [0.22863557934761047, 0.16034869849681854, 0.22018226981163025, 0.16153743863105774, 0.1612732857465744, 0.10249637067317963, 0.10051512718200684, 0.09668471664190292], "val_loss": [1.9742683683122908, 1.50736631665911, 1.4714373861040388, 1.6590909957885742, 1.9756440435137068, 1.9738205501011439, 1.9736731392996651, 1.9736246381487166], "val_accuracy": [0.1003333330154419, 0.34066668152809143, 0.3889999985694885, 0.3529999852180481, 0.10066666454076767, 0.1003333330154419, 0.10300000011920929, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 0, 4, 0, 1, 9, 6, 3, 2, 2, 4, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 26, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.24171428382396698, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), alpha))), tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.411559096700275, 2.268672345824891, 2.6769083873580994, 2.288773908402233, 2.4097909963897757, 2.304233137264763, 2.3028861336058726, 2.273748295670251, 2.3036743316668025, 2.3035545995002096, 2.3032825017381637, 2.3029549357094674, 2.303231913321337], "accuracy": [0.22757892310619354, 0.15519747138023376, 0.19244486093521118, 0.2607317268848419, 0.1006472036242485, 0.09866596013307571, 0.10619468986988068, 0.15361246466636658, 0.11398758739233017, 0.09496764093637466, 0.10091137140989304, 0.1002509593963623, 0.09840179979801178], "val_loss": [1.9735868317740304, 1.9623567036220007, 1.9843808582850866, 2.517783982413156, 1.9753661836896623, 1.9737804276602608, 1.9723382677350725, 1.673332827431815, 1.9749445915222168, 1.9738157817295618, 1.9737953458513533, 1.9737591062273299, 1.9737543378557478], "val_accuracy": [0.1003333330154419, 0.10199999809265137, 0.12700000405311584, 0.10233332961797714, 0.10066666454076767, 0.10133333504199982, 0.10733333230018616, 0.24199999868869781, 0.0976666659116745, 0.09700000286102295, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 4, 2, 1, 7, 3, 3, 5, 0, 2, 2, 6], [0, 1, 3, 1, 3, 3, 0, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 3, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha))), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302912177285026, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 4, 2, 1, 3, 3, 3, 5, 0, 2, 2, 6], [0, 1, 0, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 83, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 23, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 8, 6, 2, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302912177285026, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 4, 2, 3, 3, 3, 3, 5, 0, 2, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 35, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 6, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.multiply(tf.math.multiply(grad, grad), grad)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(beta), sigma)))", "other_info": {"loss": [177823589.74191797, 3394806263.479065, 15964322195.59477, 44258881049.63043, 95714558770.00978, 171876058894.97925], "accuracy": [0.09866596013307571, 0.09972262382507324, 0.10394927859306335, 0.09734513610601425, 0.09985470771789551, 0.10236428678035736], "val_loss": [657577088.0, 5257594733.714286, 17740986075.42857, 42048611474.28571, 82121642569.14285, 141900883090.2857], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 0, 2, 0, 4, 7, 0, 3, 2, 2, 4, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [50, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [18, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.negative(grad)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.553432848286304, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18531237542629242, 0.10632677376270294, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [298.89137486049106, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 0, 3, 0, 4, 7, 2, 3, 2, 2, 4, 2, 6], [1, 1, 2, 5, 3, 3, 0, 3, 1, 1, 3, 2], [50, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 1, 4, 9, 1, 3, 3, 3, 5, 0, 2, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.910318033300699e+25, 3.1114708895476078, 5.816357570663813, 9.54204750514506, 13.321383805023665, 17.100553600244265], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2406298773629323, 3.73569393157959, 6.825163568769183, 10.054503849574498, 13.285211563110352, 16.51730455671038], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 4, 2, 1, 4, 3, 3, 5, 0, 2, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 19, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(beta, grad)), tf.math.pow(grad, tf.math.add(beta, grad)))))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.8310604617215227e+25, 3.096908353213007, 5.769780191936198, 9.47769632517087, 13.241825080078511, 17.00585099234006], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2368747166224887, 3.7051496505737305, 6.775602885654995, 9.99183600289481, 13.209594999040876, 16.428736550467356], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 1, 2, 2, 1, 3, 3, 3, 4, 0, 2, 2, 6], [0, 1, 3, 5, 3, 1, 0, 3, 1, 1, 3, 2], [78, 83, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), grad), grad))), tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 0, 2, 4, 3, 3, 3, 5, 0, 2, 2, 6], [0, 1, 3, 5, 3, 0, 0, 1, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 3, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.multiply(alpha, grad), grad)), tf.math.add(beta, tf.math.square(grad))), tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 1, 4, 2, 3, 3, 3, 8, 8, 0, 2, 2, 6], [0, 1, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 2, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 1, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.06628571450710297, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.multiply(alpha, tf.math.multiply(tf.math.multiply(grad, grad), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3006857656106785, 2.2996785901147363, 2.301081504583705, 2.3009003410092466, 2.3007412260990447, 2.299648521724646, 2.2996967973143527, 2.300805495132025, 2.2993780595436544, 2.2993014445158124, 2.299193512950953, 2.3010958526522147, 2.300509750945394, 2.300313780383663, 2.2998281788312687], "accuracy": [0.08875974267721176, 0.09840179979801178, 0.08902391046285629, 0.09430722147226334, 0.09470347315073013, 0.09694888442754745, 0.0940430611371994, 0.10038304328918457, 0.09681680053472519, 0.09734513610601425, 0.10527011007070541, 0.09840179979801178, 0.09932637959718704, 0.0936468094587326, 0.0940430611371994], "val_loss": [1.9700158664158411, 1.9698796953473772, 1.969653538295201, 1.969660690852574, 1.9697401182992118, 1.9699915477207728, 1.9700076239449638, 1.969942229134696, 1.9698841231209892, 1.9698875291006905, 1.9700284685407365, 1.9702918870108468, 1.9706055096217565, 1.9708771705627441, 1.9710818018232072], "val_accuracy": [0.04600000008940697, 0.05066666752099991, 0.058666665107011795, 0.06433333456516266, 0.06400000303983688, 0.06266666948795319, 0.06400000303983688, 0.06733333319425583, 0.07133333384990692, 0.07599999755620956, 0.07400000095367432, 0.07400000095367432, 0.070333331823349, 0.0689999982714653, 0.0663333311676979]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 1, 7, 3, 3, 5, 0, 2, 2, 6], [0, 3, 3, 5, 3, 3, 0, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [2, 2, 7], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 2, 2, 5, 3, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 2, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [50, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 10, 6, 4, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.multiply(grad, grad), grad))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), beta))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.301074562732806, 2.300576146126675, 2.3026086221265913, 2.3028457124140975, 2.3028891704117442, 2.300917616609758], "accuracy": [0.0874389111995697, 0.09642054885625839, 0.0878351628780365, 0.08889182657003403, 0.09179764986038208, 0.09113723784685135], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 8, 7, 2, 8, 4, 4, 8, 8, 1, 4, 0, 8, 4, 9, 3, 0, 0, 8, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [86, 11, 19, 14, 97, 27, 5, 61], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 9, 4, 0, 3, 7, 9, 3, 2, 2, 4, 2, 6], [3, 1, 3, 5, 3, 3, 3, 3, 1, 1, 3, 2], [78, 75, 47, 41, 87, 41, 18], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [3, 2, 1, 9, 1, 8, 3, 0], [4, 2, 7], [99], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 9, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 3, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [1, 67, 31, 3, 74, 13, 47, 86, 30]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301074562732806, 2.300576146126675, 2.3026086221265913, 2.3028457124140975, 2.3028891704117442, 2.300917616609758], "accuracy": [0.0874389111995697, 0.09642054885625839, 0.0878351628780365, 0.08889182657003403, 0.09179764986038208, 0.09113723784685135], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]