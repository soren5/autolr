[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 9, 4, 1, 1, 3, 2, 3, 0, 4, 3, 2, 4, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 4, 27, 33, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [4, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.5979999899864197, "mapping_values": [1, 5, 5, 2, 3, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6238654447096277, 2.38408582960972, 2.303991759536667, 2.2917668981291377, 2.205724102394881, 2.2101228031043316, 2.650904945394445, 2.2505858626584208, 1.984759127112774, 2.0012558738805235, 1.9665314396689548, 2.406127935859742, 2.1852685767016187, 2.298640577060325, 2.2557368162616434], "accuracy": [0.19112402200698853, 0.1916523575782776, 0.10091137140989304, 0.1426495909690857, 0.16114120185375214, 0.17038699984550476, 0.1744815707206726, 0.15572579205036163, 0.3222824037075043, 0.3135649263858795, 0.381719708442688, 0.19878484308719635, 0.21120063960552216, 0.23035265505313873, 0.19614318013191223], "val_loss": [1.9712550299508231, 1.9764272826058524, 1.9696078981672014, 1.9586623055594308, 1.972416605268206, 1.839489187513079, 1.9591445922851562, 1.5508385726383753, 1.7930660928998674, 1.190530572618757, 1.805349622453962, 1.5330633095332555, 1.8055033002580916, 1.977212837764195, 1.982123851776123], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.13899999856948853, 0.10333333164453506, 0.0976666659116745, 0.2213333398103714, 0.1366666704416275, 0.41733333468437195, 0.2056666612625122, 0.5289999842643738, 0.26499998569488525, 0.41866666078567505, 0.4116666615009308, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 5, 4, 8, 0, 0, 5, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 1, 2, 1, 1, 0, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 30, 73, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.43542855978012085, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6238328246644556, 2.3016150620603733, 2.453499136379193, 2.2850178974400013, 2.1899768251863216, 2.256148842394769, 2.300575575225814, 2.3261607548879075, 2.303506680766841, 2.303597317017805], "accuracy": [0.1916523575782776, 0.1958790123462677, 0.12230881303548813, 0.1328754425048828, 0.17884030938148499, 0.136045441031456, 0.10949676483869553, 0.12402588874101639, 0.10196803510189056, 0.09906221181154251], "val_loss": [1.9709907259259904, 1.8886942182268416, 1.9733454840523856, 1.9365741184779577, 1.435476643698556, 1.9737461635044642, 1.9414619037083216, 1.9746626445225306, 1.9738448006766183, 1.9740556989397322], "val_accuracy": [0.16300000250339508, 0.1120000034570694, 0.1003333330154419, 0.18966667354106903, 0.4676666557788849, 0.10166666656732559, 0.20266667008399963, 0.10133333504199982, 0.09833333641290665, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [5, 9, 6, 4, 4, 8, 0, 2, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 2, 2, 1, 1, 0, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 90, 27, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [5, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.3094285726547241, "mapping_values": [1, 2, 2, 2, 0, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6238607366118747, 2.7457662303260983, 2.3011287314591704, 2.5312064824528178, 2.3005669695149167, 2.1732392413442034, 2.3504931093159764, 2.2662979133723358, 2.3338249232302632, 2.3071369120567984, 2.3034735542829434], "accuracy": [0.19099193811416626, 0.17157575488090515, 0.10408136248588562, 0.13274335861206055, 0.10315678268671036, 0.19297318160533905, 0.1686699241399765, 0.12838461995124817, 0.1298375427722931, 0.09840179979801178, 0.09087307006120682], "val_loss": [1.9714255332946777, 1.9762347766331263, 1.9218875340053014, 1.9766276223318917, 1.9452806200299944, 1.5739988258906774, 1.9859741755894251, 1.976680142538888, 1.981144905090332, 1.9744494983128138, 1.9738824708121163], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.10266666859388351, 0.1003333330154419, 0.19066666066646576, 0.328000009059906, 0.10166666656732559, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 4, 6, 4, 8, 5, 0, 2, 2, 4, 6, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 1, 3, 1, 1, 0, 2, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [47, 90, 27, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.2922857105731964, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.718735241540403, 2.309736526401335, 2.3051929915696086, 2.3030157172999535, 2.2954737781423384, 2.2697828435438057, 2.3364905250732217, 2.3068774257274964, 2.3038836496696025, 2.30325116388172, 2.3030853406580887], "accuracy": [0.1632545292377472, 0.09668471664190292, 0.09972262382507324, 0.10500594228506088, 0.15176330506801605, 0.14410249888896942, 0.17461365461349487, 0.09879804402589798, 0.09681680053472519, 0.09377889335155487, 0.0956280529499054], "val_loss": [1.985325813293457, 1.9749072619846888, 1.9742817878723145, 1.9718540055411202, 1.9752459526062012, 1.5466156346457345, 1.9789374896458216, 1.9747166633605957, 1.9737461635044642, 1.9736716406685966, 1.973639828818185], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.13733333349227905, 0.11133333295583725, 0.10266666859388351, 0.30933332443237305, 0.0976666659116745, 0.10266666859388351, 0.10199999809265137, 0.09833333641290665, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [5, 3, 4, 4, 4, 8, 0, 2, 3, 0, 4, 3, 3, 2, 2, 2, 0, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 20, 73, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.2768571376800537, "mapping_values": [1, 29, 29, 16, 13, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(alpha, alpha)))))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6238493836236243, 3.3386793785311872, 2.274237540923625, 2.306361810453438, 2.295875498773305, 2.498165031827877, 2.361842732466664, 2.304750278751533, 2.297246050289861, 2.3044165022510814, 2.3033987302758736], "accuracy": [0.1912561058998108, 0.18953903019428253, 0.137630432844162, 0.10408136248588562, 0.11174217611551285, 0.137630432844162, 0.13855500519275665, 0.1080438494682312, 0.13630960881710052, 0.10170386731624603, 0.09470347315073013], "val_loss": [1.9709937231881278, 1.9806359836033411, 1.976194109235491, 1.976675306047712, 1.896700382232666, 1.9196436064583915, 1.9781359945024763, 1.9719541413443429, 1.9760105950491769, 1.9742751802716936, 1.973783016204834], "val_accuracy": [0.1653333306312561, 0.1003333330154419, 0.1003333330154419, 0.10066666454076767, 0.16899999976158142, 0.2566666603088379, 0.09833333641290665, 0.18666666746139526, 0.09833333641290665, 0.0976666659116745, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 2, 4, 8, 0, 0, 5, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 1, 2, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 90, 73, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.23714286088943481, "mapping_values": [1, 20, 20, 12, 8, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6238486317753114, 2.5295004888752968, 2.265773828869498, 2.2594798589662837, 2.2721779782616816, 2.3653517737443406, 2.3037502229048386, 2.3035190161807173, 2.3031781097649424, 2.303050402841705], "accuracy": [0.19191652536392212, 0.18636904656887054, 0.12851670384407043, 0.1372341811656952, 0.1500462293624878, 0.15189538896083832, 0.09945846349000931, 0.09509972482919693, 0.09893012791872025, 0.09549596905708313], "val_loss": [1.9710407938276018, 1.980896268572126, 1.9878863607134138, 1.9710664067949568, 1.500459909439087, 1.9741131237574987, 1.9736487524850028, 1.9736062458583288, 1.9736271585736955, 1.9737911224365234], "val_accuracy": [0.18466666340827942, 0.10100000351667404, 0.09833333641290665, 0.1003333330154419, 0.29633334279060364, 0.09833333641290665, 0.10066666454076767, 0.10266666859388351, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [5, 3, 6, 4, 4, 8, 0, 2, 3, 4, 4, 5, 2, 3, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 2, 2, 2, 1, 0, 1, 2, 1, 0, 0, 0, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 90, 5, 78, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.23657143115997314, "mapping_values": [1, 34, 34, 19, 15, 6, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.add(grad, alpha)))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.623881371549375, 2.4227649592421137, 2.3035016201270206, 2.3843768543303367, 2.2363211511227243, 2.3119293936743412, 2.3057855212567206, 2.3032752463310904, 2.302876228039779, 2.3028690150196307], "accuracy": [0.19112402200698853, 0.19270901381969452, 0.1014397069811821, 0.14793290197849274, 0.16114120185375214, 0.2576938271522522, 0.0948355570435524, 0.09457138925790787, 0.09826971590518951, 0.09509972482919693], "val_loss": [1.9713525090898787, 1.9768988745553153, 1.9583396230425154, 1.9737606048583984, 1.6339848041534424, 1.9796089444841658, 1.9741758619035994, 1.9735946655273438, 1.9735828808375768, 1.9736221177237374], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.13500000536441803, 0.15466666221618652, 0.37700000405311584, 0.10199999809265137, 0.0976666659116745, 0.10266666859388351, 0.10199999809265137, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 6, 4, 8, 8, 0, 2, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 2, 2, 1, 1, 0, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 90, 27, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.2280000001192093, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.623852424491839, 2.3618189864044634, 2.2964132970208584, 2.7109241878603743, 2.305486972636519, 2.3034662200223344, 2.30294051514861, 2.3028364849758187], "accuracy": [0.19152027368545532, 0.1846519559621811, 0.13089419901371002, 0.13498876988887787, 0.09774138033390045, 0.09668471664190292, 0.10011887550354004, 0.08942015469074249], "val_loss": [1.9715869086129325, 1.9806087357657296, 1.8867583274841309, 1.9774261202130998, 1.974339553288051, 1.973756994519915, 1.9735238892691476, 1.9731824057442802], "val_accuracy": [0.10233332961797714, 0.09833333641290665, 0.2776666581630707, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.1706666648387909, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 2, 4, 8, 0, 0, 5, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 2, 2, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 90, 27, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.15199999511241913, "mapping_values": [1, 16, 16, 10, 6, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.square(tf.math.add(alpha, grad)))), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6238397202865245, 2.2118162215110284, 2.368757003302493, 2.2548888616117235, 2.310357060493527, 2.3045310756518083], "accuracy": [0.19231277704238892, 0.2078985571861267, 0.14529123902320862, 0.1888786107301712, 0.09853387624025345, 0.09694888442754745], "val_loss": [1.9710422924586706, 1.9338972227913993, 1.9422811099461146, 1.98672696522304, 1.9760283742632185, 1.974092892238072], "val_accuracy": [0.1756666600704193, 0.10400000214576721, 0.1393333375453949, 0.1003333330154419, 0.10133333504199982, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 2, 4, 8, 0, 0, 5, 4, 6, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 2, 2, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 43, 73, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [4, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.15057143568992615, "mapping_values": [1, 29, 29, 16, 13, 5, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(alpha, grad))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.623849444369819, 3.5680216171832493, 2.2954776991848083, 2.3090664818302327, 2.301918883066073, 2.2976510913034143], "accuracy": [0.1912561058998108, 0.1904636174440384, 0.13697001338005066, 0.09708096832036972, 0.1088363528251648, 0.1298375427722931], "val_loss": [1.9709946768624442, 1.9798765863691057, 1.9849896430969238, 1.9750191143580846, 1.9686756815229143, 1.9742679595947266], "val_accuracy": [0.1653333306312561, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [8, 1, 2, 4, 8, 0, 6, 5, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 45, 27, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.15057143568992615, "mapping_values": [1, 16, 16, 10, 6, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, grad)))))), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6238478940034886, 3.4850775355345474, 2.3466464638977698, 2.302334679620078, 2.6352096708648163, 2.3054868464204756], "accuracy": [0.19178444147109985, 0.1846519559621811, 0.10738343745470047, 0.10249637067317963, 0.12349755316972733, 0.09998679161071777], "val_loss": [1.9712747846330916, 1.9736391476222448, 1.9749903678894043, 1.9630307470049178, 1.9780278887067522, 1.9742655072893416], "val_accuracy": [0.1693333387374878, 0.0976666659116745, 0.1003333330154419, 0.10199999809265137, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 4, 2, 8, 0, 2, 1, 0, 2, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 3, 3, 2, 0, 1, 1, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [27, 90, 27, 19, 83, 81, 22, 61], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [4, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.14142857491970062, "mapping_values": [1, 20, 20, 11, 9, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(grad, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), alpha)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3700065180736054, 2.2144794482400817e+19, NaN, NaN, NaN, NaN], "accuracy": [0.22335226833820343, 0.1364416927099228, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.750180653163365, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.3136666715145111, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 4, 6, 4, 8, 5, 0, 2, 2, 4, 6, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [0, 0, 1, 3, 1, 1, 0, 2, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [47, 90, 27, 19, 83, 81, 22, 61], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [5, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.13657142221927643, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [103.4139637239794, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22361643612384796, 0.12270505726337433, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [182401.88839285713, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.2919999957084656, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [6, 1, 6, 4, 0, 1, 3, 2, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 1, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 0, 0, 0, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [54, 90, 70, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 39, 20, 19, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 4, 6, 4, 8, 5, 0, 2, 2, 4, 6, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [2, 0, 1, 3, 1, 1, 0, 2, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [47, 90, 27, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [1, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 3, 4, 9, 0, 0, 5, 3, 0, 2, 9, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 1, 2, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [55, 90, 86, 19, 83, 81, 22, 61], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 8, 6, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 2, 4, 8, 3, 0, 5, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 1, 2, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [23, 90, 73, 19, 83, 81, 22, 61], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [3, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.04114285856485367, "mapping_values": [1, 29, 29, 16, 13, 5, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302497553488424, 2.3018084186777665, 2.301837004092328, 2.301775148846706, 2.302818644268795, 2.3020723187266845], "accuracy": [0.09338264167308807, 0.09192973375320435, 0.09113723784685135, 0.09034473448991776, 0.09179764986038208, 0.09192973375320435], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [4, 1, 1, 4, 6, 3, 1, 9, 3, 0, 4, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 3, 3, 1, 2, 1, 1, 1, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [26, 90, 27, 19, 83, 81, 22, 61], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [4, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 0, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1], [70, 92, 31, 3, 74, 13]], "fitness": -0.04114285856485367, "mapping_values": [1, 20, 20, 11, 9, 1, 5, 5, 2, 3, 0, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.subtract(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), alpha))), tf.math.add(alpha, tf.math.pow(alpha, alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302497553488424, 2.3018084186777665, 2.301837004092328, 2.301775148846706, 2.302818644268795, 2.3020723187266845], "accuracy": [0.09338264167308807, 0.09192973375320435, 0.09113723784685135, 0.09034473448991776, 0.09179764986038208, 0.09192973375320435], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 4, 6, 4, 8, 5, 0, 2, 2, 4, 6, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 0, 1, 3, 1, 1, 0, 2, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [47, 90, 27, 19, 83, 81, 22, 61], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [5, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [3, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302497553488424, 2.3018084186777665, 2.301837004092328, 2.301775148846706, 2.302818644268795, 2.3020723187266845], "accuracy": [0.09338264167308807, 0.09192973375320435, 0.09113723784685135, 0.09034473448991776, 0.09179764986038208, 0.09192973375320435], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 4, 6, 5, 8, 8, 0, 2, 2, 4, 6, 3, 2, 2, 2, 2, 3, 3, 0, 6, 4, 2, 1, 8, 0, 2, 2, 0, 4, 2, 1, 0, 7, 2, 5, 0, 3, 0, 3, 8, 4, 7], [1, 2, 0, 1, 0, 1, 0, 2, 2, 1, 0, 0, 1, 0, 3, 2, 0, 2, 1, 2, 2, 2, 0, 1, 1, 2, 1, 1, 1, 3, 0, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 3, 1], [3, 90, 27, 19, 83, 81, 22, 61], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 3, 5, 2, 1, 7, 2, 3, 2, 8, 2, 2, 6], [4, 2, 3, 5, 4, 3, 5, 3, 1, 1, 3, 2], [78, 14, 47, 41, 87, 41, 18], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 2, 6, 9, 1, 8, 3, 0], [5, 5, 2], [63], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 6, 7, 2, 9, 9, 5, 1, 4, 0, 4, 4, 4, 3, 3, 0, 6, 7, 3, 8, 9, 0, 6, 9, 1], [2, 1, 3, 3, 0, 2, 3, 3, 0, 0, 1, 3, 2, 3, 1, 1, 1, 1, 2, 0, 0, 1, 0, 3, 3, 0, 2], [70, 92, 31, 3, 74, 13]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302497553488424, 2.3018084186777665, 2.301837004092328, 2.301775148846706, 2.302818644268795, 2.3020723187266845], "accuracy": [0.09338264167308807, 0.09192973375320435, 0.09113723784685135, 0.09034473448991776, 0.09179764986038208, 0.09192973375320435], "val_loss": [1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598, 1.9706978797912598], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]