[{"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 4, 2, 4, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.824571430683136, "mapping_values": [1, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.1448247732188426, 1.5640605918609423, 1.595476707683468, 1.0653975200202754, 0.922382997405244, 0.8405929778655443, 0.7305540419793195, 0.7014009456010369, 0.6958970625670421, 0.6615171785115912, 0.6467998794371882, 0.6150590159385716, 0.5643967798420341, 0.580400408109449, 0.5312337992906476, 0.5462425635939875, 0.5372438118395128, 0.5075441993632258, 0.5125593240030248, 0.5047170659452145, 0.4905075220273801, 0.47712641282875806, 0.4824468040738706, 0.47314239362715543, 0.4627751214999281, 0.4374316363853628, 0.434829319051669, 0.4131273100042639, 0.42799899947248066, 0.3986545617412567, 0.4149464805758215, 0.4066477338116104, 0.3813019686048498, 0.40751132010043717, 0.35627642562833084, 0.3679578483986455, 0.3741974257884355, 0.35432068830971797, 0.35938515619531897, 0.3486201317555018, 0.3544461730763802, 0.324930773769718, 0.3262709078338751, 0.33542492077209224, 0.32154140186945934, 0.3058671615875125, 0.3188341050422927, 0.30318565872744985, 0.3218264642558188, 0.3117895049229117], "accuracy": [0.2739400267601013, 0.49689605832099915, 0.4613657295703888, 0.6217144131660461, 0.6538106203079224, 0.6800950765609741, 0.7238145470619202, 0.733588695526123, 0.7367587089538574, 0.7532690763473511, 0.7613261342048645, 0.7687227725982666, 0.78113853931427, 0.7784969210624695, 0.8039889335632324, 0.793422281742096, 0.8013472557067871, 0.8109893202781677, 0.8067626357078552, 0.8115176558494568, 0.8238013386726379, 0.8276317715644836, 0.8156121969223022, 0.8251221776008606, 0.8277638554573059, 0.8360850811004639, 0.8352925777435303, 0.8475762605667114, 0.8453308939933777, 0.8521991968154907, 0.8436138033866882, 0.8521991968154907, 0.8584070801734924, 0.8465195894241333, 0.8687095642089844, 0.8622375130653381, 0.8607845902442932, 0.8714832663536072, 0.8665962219238281, 0.8701624870300293, 0.8684453964233398, 0.8813894987106323, 0.8790120482444763, 0.8732003569602966, 0.8768987059593201, 0.8857482671737671, 0.8811253309249878, 0.8836349248886108, 0.8819178342819214, 0.8829745054244995], "val_loss": [1.4865763187408447, 1.361945595060076, 1.0446521554674422, 0.6626232521874564, 0.7200538771493095, 0.5717180967330933, 0.5580831936427525, 0.5627815553120205, 0.5612181595393589, 0.4926399162837437, 0.45153091635022846, 0.4464106730052403, 0.4617006778717041, 0.42855713197163176, 0.4740453447614397, 0.4256290878568377, 0.39186547483716694, 0.4251578790800912, 0.4347318410873413, 0.4454063858304705, 0.3808866228376116, 0.3861165813037327, 0.4272977539471218, 0.4169687713895525, 0.3581769806998117, 0.3858864392553057, 0.3561399664197649, 0.33498880692890715, 0.3661783252443586, 0.33985706738063265, 0.3461944205420358, 0.32661778586251394, 0.34951889514923096, 0.33542247329439434, 0.34684256996427265, 0.36968324865613666, 0.3331712143761771, 0.323736914566585, 0.33826850993292673, 0.3782025490488325, 0.30681016615458895, 0.321661753313882, 0.3204740456172398, 0.30618785108838764, 0.30591640302113127, 0.35964428527014597, 0.3161799652235849, 0.3539888688496181, 0.34289632524762836, 0.31481907197407316], "val_accuracy": [0.4723333418369293, 0.4516666531562805, 0.6046666502952576, 0.6916666626930237, 0.659333348274231, 0.7416666746139526, 0.7436666488647461, 0.7229999899864197, 0.7523333430290222, 0.7720000147819519, 0.7889999747276306, 0.8023333549499512, 0.7873333096504211, 0.8130000233650208, 0.7706666588783264, 0.8106666803359985, 0.8223333358764648, 0.8113333582878113, 0.8040000200271606, 0.7826666831970215, 0.8339999914169312, 0.8296666741371155, 0.7956666946411133, 0.8063333630561829, 0.8463333249092102, 0.8309999704360962, 0.843666672706604, 0.8550000190734863, 0.8429999947547913, 0.8500000238418579, 0.8556666374206543, 0.859666645526886, 0.843666672706604, 0.8533333539962769, 0.8489999771118164, 0.8386666774749756, 0.8603333234786987, 0.8643333315849304, 0.8569999933242798, 0.843666672706604, 0.8706666827201843, 0.8669999837875366, 0.862666666507721, 0.8663333058357239, 0.875, 0.8503333330154419, 0.8573333621025085, 0.8523333072662354, 0.8516666889190674, 0.8636666536331177]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 2, 0, 2, 1, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 1, 2, 0, 0, 0, 1, 2, 3, 0, 0, 2, 1, 2], [86, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8237142562866211, "mapping_values": [1, 15, 15, 8, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.144643843717201, 1.539151471241543, 1.7012481255664202, 1.1520053371541048, 0.9321380944347117, 0.816636930634994, 0.7122011539281368, 0.7157704240185253, 0.6689798149607831, 0.6417817342330152, 0.6326168902152407, 0.592739382211826, 0.5627538718331397, 0.5654184916126195, 0.5472651066057056, 0.5454672775004344, 0.5181557814899516, 0.49956879864090453, 0.48629927820989943, 0.49931066676043345, 0.482246582589334, 0.47593010555971976, 0.46422604825817565, 0.4895004205825921, 0.4649574028510365, 0.43383325231136693, 0.43267756619819986, 0.4017913419698696, 0.412820359935787, 0.39388528709886506, 0.4096630927656998, 0.39253779917093334, 0.38658488600591956, 0.3737618197122223, 0.3886359036401782, 0.3614392856037801, 0.3641065867853171, 0.3544301126910522, 0.351551910314924, 0.34006744913688947, 0.3557537998332481, 0.33063728789123703, 0.3164543206972642, 0.3449194107655883, 0.3375667883829906, 0.3274186307554783], "accuracy": [0.27380794286727905, 0.5032360553741455, 0.4373266398906708, 0.6008453369140625, 0.6523576974868774, 0.6900013089179993, 0.7306828498840332, 0.7293620109558105, 0.7425703406333923, 0.7592127919197083, 0.7585523724555969, 0.7744023203849792, 0.7887993454933167, 0.7844406366348267, 0.7903843522071838, 0.7955356240272522, 0.8074230551719666, 0.81548011302948, 0.816008448600769, 0.8183859586715698, 0.8204993009567261, 0.819442629814148, 0.8236692547798157, 0.8191784620285034, 0.8271034359931946, 0.8348963260650635, 0.8383304476737976, 0.8507462739944458, 0.8449346423149109, 0.8520671129226685, 0.846387505531311, 0.8537842035293579, 0.8541803956031799, 0.863029956817627, 0.8558974862098694, 0.8636903762817383, 0.863029956817627, 0.8663320541381836, 0.8712190985679626, 0.8739928603172302, 0.868049144744873, 0.8762382864952087, 0.8842953443527222, 0.8676528930664062, 0.8717474341392517, 0.8766345381736755], "val_loss": [1.4839527266366142, 1.6399830409458704, 1.0275091103145055, 0.7013217210769653, 0.6425462109701974, 0.5376655033656529, 0.614857588495527, 0.516843489238194, 0.4896956852504185, 0.4604968343462263, 0.4458308901105608, 0.44311862332480295, 0.46015104225703646, 0.4274841972759792, 0.4270675948687962, 0.41389220101492746, 0.42353157486234394, 0.38558379241398405, 0.431358414036887, 0.39824254172188894, 0.3773829681532724, 0.36474524225507465, 0.46460637024470736, 0.38486977985927034, 0.3446942908423288, 0.3945630363055638, 0.3515844770840236, 0.34064705882753643, 0.34554310355867657, 0.33608039787837435, 0.33874419757298063, 0.3414572903088161, 0.34275839158466886, 0.35495210545403616, 0.32264740977968487, 0.3576138700757708, 0.34382876328059603, 0.3313722014427185, 0.33781926121030537, 0.3393805112157549, 0.31156037534986225, 0.32475805282592773, 0.3044724890163967, 0.31629722458975656, 0.31703353779656546, 0.35296179567064556], "val_accuracy": [0.4753333330154419, 0.43533334136009216, 0.5946666598320007, 0.6986666917800903, 0.7106666564941406, 0.7509999871253967, 0.7400000095367432, 0.7673333287239075, 0.7710000276565552, 0.7940000295639038, 0.8009999990463257, 0.8053333163261414, 0.7836666703224182, 0.8066666722297668, 0.8230000138282776, 0.8153333067893982, 0.8063333630561829, 0.8296666741371155, 0.8063333630561829, 0.8199999928474426, 0.8339999914169312, 0.8433333039283752, 0.7736666798591614, 0.8316666483879089, 0.8529999852180481, 0.8259999752044678, 0.8486666679382324, 0.8536666631698608, 0.8533333539962769, 0.8536666631698608, 0.8550000190734863, 0.8529999852180481, 0.8539999723434448, 0.8420000076293945, 0.8583333492279053, 0.8443333506584167, 0.8446666598320007, 0.8550000190734863, 0.8546666502952576, 0.8586666584014893, 0.874666690826416, 0.859000027179718, 0.8700000047683716, 0.862666666507721, 0.871666669845581, 0.8513333201408386]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 3, 2, 6, 0, 1, 2, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 1, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.822857141494751, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1446354316446397, 1.5621096973547672, 1.4723369973194897, 1.0764945443075535, 0.9395296092849633, 0.8177488495440389, 0.7573682041830154, 0.7060846009148646, 0.6792061675053074, 0.6413688413801761, 0.6420153694429324, 0.6037589767668556, 0.5652190557229694, 0.5896616935918927, 0.5495598505374982, 0.5423109497431641, 0.5294192585222726, 0.506728514389292, 0.4947862368391458, 0.4985789499420138, 0.48913505611607366, 0.48757962357209045], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5177651643753052, 0.6000528335571289, 0.6494518518447876, 0.6984546184539795, 0.7096816897392273, 0.7293620109558105, 0.7363624572753906, 0.7540615797042847, 0.7549861073493958, 0.7713643908500671, 0.7837802171707153, 0.7777044177055359, 0.791969358921051, 0.7944789528846741, 0.805177628993988, 0.8112534880638123, 0.8168009519577026, 0.816008448600769, 0.8204993009567261, 0.8138951063156128], "val_loss": [1.4838320527757918, 1.426358904157366, 0.8259836775915963, 0.7134343726294381, 0.6138329335621425, 0.5745850631168911, 0.5467781679970878, 0.5252199513571603, 0.48107002462659565, 0.45257929393223356, 0.45457126413072857, 0.44273524624960764, 0.42468781982149395, 0.42201709747314453, 0.4505784170968192, 0.4135900224958147, 0.3887561048780169, 0.41098388603755404, 0.4225236603191921, 0.4440265808786665, 0.40028955255235943, 0.396648713520595], "val_accuracy": [0.47566667199134827, 0.4623333215713501, 0.6209999918937683, 0.684333324432373, 0.7440000176429749, 0.7266666889190674, 0.7536666393280029, 0.7440000176429749, 0.784333348274231, 0.7960000038146973, 0.7913333177566528, 0.8006666898727417, 0.812333345413208, 0.8103333115577698, 0.7960000038146973, 0.8130000233650208, 0.8243333101272583, 0.8096666932106018, 0.8090000152587891, 0.7946666479110718, 0.8159999847412109, 0.8216666579246521]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 2, 0, 1, 2, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.8188571333885193, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.144820960033146, 1.57822273733625, 1.3614822050457884, 1.2523380234225425, 0.9007204693573939, 0.7830843965942046, 0.7773494466247655, 0.7132909877063135, 0.6876461735459493, 0.6578697786276383, 0.6276064928433583, 0.6236930236509683, 0.5754782944748414, 0.5791532409394249, 0.5487033288712829, 0.5624008554477639, 0.5167360186592589, 0.5290900804914299, 0.5116426961108002, 0.5054875976059021, 0.5056748186135888, 0.48515858234998305, 0.4814627255667249], "accuracy": [0.2739400267601013, 0.49491479992866516, 0.5362567901611328, 0.5526350736618042, 0.6602826714515686, 0.7096816897392273, 0.7079645991325378, 0.7306828498840332, 0.7360982894897461, 0.7508915662765503, 0.7684586048126221, 0.763967752456665, 0.7817989587783813, 0.7755910754203796, 0.7957997918128967, 0.791969358921051, 0.8078193068504333, 0.802800178527832, 0.8061022162437439, 0.8127063512802124, 0.8145555257797241, 0.8191784620285034, 0.8127063512802124], "val_loss": [1.4863572461264474, 1.4868288040161133, 0.9007120132446289, 0.7706859622682843, 0.5813699449811663, 0.6215549537113735, 0.5779993534088135, 0.5415339469909668, 0.5280300378799438, 0.46743641580854145, 0.527876785823277, 0.44527382510049, 0.46766034194401335, 0.4404109716415405, 0.42860677412578035, 0.41069052049091886, 0.4394471304757254, 0.4098944067955017, 0.4379293663161142, 0.4455664498465402, 0.39400821924209595, 0.4115627918924604, 0.4357642446245466], "val_accuracy": [0.4723333418369293, 0.45633333921432495, 0.5669999718666077, 0.6549999713897705, 0.734333336353302, 0.7103333473205566, 0.7200000286102295, 0.7350000143051147, 0.7546666860580444, 0.7853333353996277, 0.7573333382606506, 0.7963333129882812, 0.7793333530426025, 0.7979999780654907, 0.8103333115577698, 0.8149999976158142, 0.7873333096504211, 0.8240000009536743, 0.8050000071525574, 0.7903333306312561, 0.8193333148956299, 0.8046666383743286, 0.7866666913032532]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 8, 2, 0, 1, 2, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.8140000104904175, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.144636560094166, 1.5331594188687918, 1.620635298721511, 1.0986834997041839, 0.9606656644480056, 0.849136649924593, 0.7511163483426839, 0.767114604705077, 0.683191569851941, 0.6405290272714219, 0.639732354187364, 0.6091381688206786, 0.5621380915243108, 0.5901008623308588, 0.5500629659357827, 0.5346045673893365, 0.52149790230208, 0.5066937285564862, 0.5061333107359421, 0.4978193976167108, 0.48845938050420984, 0.47949479947614787, 0.46159435585269115, 0.46806648382263855, 0.46947648921316454, 0.43961711168257694, 0.43420441803946674, 0.41228588260223115, 0.43222844308991837, 0.39601091752592693, 0.4062732530740809, 0.404630111913482, 0.38879956908670665, 0.400059424414532, 0.36285805847068203, 0.3690907777993277, 0.355813905138145], "accuracy": [0.27380794286727905, 0.5065380930900574, 0.4415532946586609, 0.6061286330223083, 0.6432439684867859, 0.6833971738815308, 0.7143045663833618, 0.7080966830253601, 0.7421740889549255, 0.7569673657417297, 0.7642319202423096, 0.7683265209197998, 0.7840443849563599, 0.7757231593132019, 0.7946110367774963, 0.798309326171875, 0.8088759779930115, 0.8141592741012573, 0.8075551390647888, 0.8170651197433472, 0.8168009519577026, 0.824329674243927, 0.8259146809577942, 0.8293488025665283, 0.8252542614936829, 0.8374059200286865, 0.8345000743865967, 0.8502179384231567, 0.8380662798881531, 0.8557654023170471, 0.8520671129226685, 0.8557654023170471, 0.8589354157447815, 0.8487650156021118, 0.8696341514587402, 0.8609166741371155, 0.8689737319946289], "val_loss": [1.483851092202323, 1.5656739984239851, 0.8907563005174909, 0.6935628311974662, 0.5843839815684727, 0.6141601119722638, 0.5916086094720023, 0.5315249988010952, 0.48310496125902447, 0.4629894495010376, 0.4565741334642683, 0.44192200899124146, 0.43890534128461567, 0.43675558056150166, 0.4268186688423157, 0.4309552567345755, 0.4040959732873099, 0.4044853278568813, 0.4378988402230399, 0.425772419997624, 0.3711497017315456, 0.40046697003500803, 0.40683252470833914, 0.4031788281032017, 0.34782109941755024, 0.3809109500476292, 0.3585609367915562, 0.3355680193219866, 0.36558137621198383, 0.32654056378773283, 0.3592547518866403, 0.32662309067589895, 0.34937022413526264, 0.33597032512937275, 0.3221842050552368, 0.3418928214481899, 0.33911498955317904], "val_accuracy": [0.47600001096725464, 0.47433334589004517, 0.6413333415985107, 0.6993333101272583, 0.7369999885559082, 0.7070000171661377, 0.7160000205039978, 0.7403333187103271, 0.7803333401679993, 0.781000018119812, 0.7910000085830688, 0.8080000281333923, 0.7953333258628845, 0.8029999732971191, 0.8063333630561829, 0.8073333501815796, 0.8166666626930237, 0.8143333196640015, 0.8046666383743286, 0.7986666560173035, 0.8326666951179504, 0.8230000138282776, 0.8140000104904175, 0.8149999976158142, 0.8519999980926514, 0.82833331823349, 0.8523333072662354, 0.8526666760444641, 0.8379999995231628, 0.8556666374206543, 0.8486666679382324, 0.8613333106040955, 0.8473333120346069, 0.8510000109672546, 0.859666645526886, 0.8546666502952576, 0.8536666631698608]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 0, 0, 1, 2, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [57, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.8100000023841858, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1446520705280396, 1.535549461880947, 1.5627938054099515, 1.079549498672042, 0.9424231037046805, 0.8127489852757266, 0.7459007783761791, 0.7273666959601843, 0.6826461895959819, 0.6561902331685535, 0.6221960695774611, 0.6282626672538044, 0.5630552890498829, 0.5774846253787459, 0.5529019822848865, 0.5464937737541995, 0.5211026415754351, 0.5118023698371809, 0.5034541370783342, 0.505234995813827, 0.4877893600709812, 0.4811135156594562, 0.47350661400885175], "accuracy": [0.27380794286727905, 0.5069343447685242, 0.4695548713207245, 0.6190727949142456, 0.6610751748085022, 0.6934354901313782, 0.7157574892044067, 0.7236824631690979, 0.7425703406333923, 0.7512878179550171, 0.7670056819915771, 0.763439416885376, 0.7860256433486938, 0.774798572063446, 0.793950617313385, 0.7950072884559631, 0.8095363974571228, 0.8136309385299683, 0.813498854637146, 0.8164047002792358, 0.8219521641731262, 0.8175934553146362, 0.819442629814148], "val_loss": [1.4839457784380232, 1.4319884777069092, 0.8749660423823765, 0.8689085245132446, 0.6185880558831351, 0.5451511144638062, 0.5995921066829136, 0.5367918355124337, 0.5179310696465629, 0.49180708612714497, 0.549562760761806, 0.4389535869870867, 0.4648569141115461, 0.44444646154131207, 0.42140835523605347, 0.40320214203425814, 0.4165807366371155, 0.39766888107572285, 0.4141403692109244, 0.44226416519709993, 0.39863990034375874, 0.43486703293664114, 0.424129843711853], "val_accuracy": [0.4753333330154419, 0.5353333353996277, 0.6483333110809326, 0.637333333492279, 0.7046666741371155, 0.7443333268165588, 0.7146666646003723, 0.7506666779518127, 0.762333333492279, 0.7706666588783264, 0.7366666793823242, 0.8103333115577698, 0.7806666493415833, 0.8106666803359985, 0.8146666884422302, 0.8220000267028809, 0.8116666674613953, 0.8266666531562805, 0.8109999895095825, 0.7873333096504211, 0.8130000233650208, 0.796999990940094, 0.8016666769981384]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [6, 4, 2, 2, 0, 1, 2, 0, 4, 3, 1, 8, 2, 5, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 2, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [32, 56, 44, 92]], "fitness": -0.7802857160568237, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.277057870378143, 2.2057181443867035, 2.071388877645822, 1.8383564568466562, 1.5560383564917923, 1.3297311971216248, 1.1747907124112358, 1.0920107702553281, 1.0258148018363729, 0.9686272219345003, 0.9192969366906105, 0.9002114338031487, 0.8731374719895234, 0.8372595086624877, 0.823544493558904, 0.8083085355001622, 0.7941657419706049, 0.7674330196927299, 0.7678706392462794, 0.7625868422810932, 0.7509809872887122, 0.7253345904522221, 0.7181031729299253, 0.7153474638774143, 0.7080820256283475, 0.6996602941151419, 0.6982023333986721, 0.6842552242876123, 0.6887226820369958, 0.6755842829597719, 0.6624958630503129, 0.6598394423538211, 0.6549963036768819, 0.6576735048466639, 0.642625257953472, 0.6418782866563244, 0.6375671041844748, 0.6362724288689887], "accuracy": [0.1558578759431839, 0.2875445783138275, 0.39387133717536926, 0.450931191444397, 0.5033681392669678, 0.5526350736618042, 0.5929203629493713, 0.6159027814865112, 0.641791045665741, 0.6633205413818359, 0.6794346570968628, 0.6804913282394409, 0.6873596906661987, 0.7034738063812256, 0.7058512568473816, 0.7084929347038269, 0.7166820764541626, 0.722229540348053, 0.7220974564552307, 0.7209087014198303, 0.7290979027748108, 0.7302865982055664, 0.7434949278831482, 0.7429665923118591, 0.7470611333847046, 0.7458723783493042, 0.7457403540611267, 0.7512878179550171, 0.7515519857406616, 0.7567031979560852, 0.7589486241340637, 0.7594769597053528, 0.7606657147407532, 0.7640998363494873, 0.76542067527771, 0.763967752456665, 0.7718927264213562, 0.7680623531341553], "val_loss": [1.913398197719029, 1.8229350362505232, 1.644160577229091, 1.3635599272591727, 1.1008237770625524, 0.928858825138637, 0.8273435320172992, 0.7592060055051532, 0.7160260677337646, 0.6784675121307373, 0.6613530601773944, 0.6378289461135864, 0.6175514119012016, 0.60442544732775, 0.6018377712794712, 0.5860801424298968, 0.5693531376974923, 0.5596776178904942, 0.5542602368763515, 0.5509029115949359, 0.5456066472189767, 0.5363263402666364, 0.5296074662889753, 0.5191350153514317, 0.5166736841201782, 0.5178884608404977, 0.5090867110661098, 0.5051459755216327, 0.5055925675800869, 0.4979136160441807, 0.49679088592529297, 0.49478352069854736, 0.48391640186309814, 0.48634612560272217, 0.48529052734375, 0.4810255765914917, 0.4784520183290754, 0.4780403545924595], "val_accuracy": [0.36033332347869873, 0.4463333189487457, 0.5116666555404663, 0.5863333344459534, 0.6333333253860474, 0.6660000085830688, 0.6863333582878113, 0.7103333473205566, 0.7139999866485596, 0.7176666855812073, 0.7153333425521851, 0.7310000061988831, 0.7356666922569275, 0.7446666955947876, 0.7409999966621399, 0.7509999871253967, 0.7576666474342346, 0.7639999985694885, 0.7633333206176758, 0.7609999775886536, 0.7576666474342346, 0.7666666507720947, 0.7643333077430725, 0.7733333110809326, 0.7756666541099548, 0.7673333287239075, 0.7726666927337646, 0.781333327293396, 0.7736666798591614, 0.7733333110809326, 0.7823333144187927, 0.7826666831970215, 0.7896666526794434, 0.7776666879653931, 0.7833333611488342, 0.7873333096504211, 0.7803333401679993, 0.7873333096504211]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 1, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [3, 56, 44, 92]], "fitness": -0.10885713994503021, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [1377537050.272166, 1580270223.858407, 1610169618.6141858, 1621756882.9607713, 1592727588.2139745, 1597762148.2393343], "accuracy": [0.09826971590518951, 0.10236428678035736, 0.10355303436517715, 0.09602430462837219, 0.10038304328918457, 0.10236428678035736], "val_loss": [989255680.0, 989254436.5714285, 989253156.5714285, 989252571.4285715, 989251401.1428572, 989250962.2857143], "val_accuracy": [0.10899999737739563, 0.10899999737739563, 0.10899999737739563, 0.10899999737739563, 0.10899999737739563, 0.10899999737739563]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 4, 2, 2, 0, 1, 4, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [75, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 6, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 1, 0, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), alpha)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad)))), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020545506064822, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 4, 2, 2, 3, 1, 2, 5, 4, 3, 1, 8, 2, 0, 4, 3, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 0, 0, 0, 2, 1, 2, 0], [99, 54, 16, 57, 57, 39, 81, 89, 2], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 23, 15, 9, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.square(tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3017588524912265, 2.3022801634217016, 2.302792196937635, 2.3048891654938535, 2.315072390192677, 2.372467532527603], "accuracy": [0.10368511080741882, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737799508231026, 1.9740591730390276, 1.9752366202218192, 1.9797189576285226, 2.0010151181902205, 2.1458750452314104], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 4, 2, 2, 0, 3, 2, 0, 6, 3, 1, 0, 2, 0, 4, 5, 0, 3, 4, 8, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 2, 0, 0, 1, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 3, 3, 0, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), alpha), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020545506064822, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 2, 3, 1, 2, 5, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [1, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020545506064822, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 4, 2, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 5, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 4, 2, 2, 0, 1, 2, 0, 4, 3, 1, 8, 2, 0, 5, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 2, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 76, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 2, 1, 3], [6, 2], [76], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), alpha)), grad)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 0, 6, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [33, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [2, 9, 1, 3], [6, 2], [76], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [10317463.203697398, 198112921.21621978, 906375584.1901995, 2529512561.849161, 5413951712.384625, 9798333974.519615], "accuracy": [0.09708096832036972, 0.10091137140989304, 0.1026284471154213, 0.09972262382507324, 0.09760929644107819, 0.1014397069811821], "val_loss": [38884898.28571428, 310612114.28571427, 1047796041.1428572, 2483043108.571429, 4848978944.0, 8378198308.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 2, 2, 0, 1, 2, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 2, 1, 2, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [48, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), beta)", "other_info": {"loss": [1.4677149324658116e+20, 2.2661259268560988e+20, 2.6439333136899195e+20, 3.0656064486416836e+20, 3.4567673545214906e+20, 3.8181331782224714e+20], "accuracy": [0.09879804402589798, 0.10817593336105347, 0.09998679161071777, 0.09549596905708313, 0.10038304328918457, 0.10130762308835983], "val_loss": [1.4484687222513748e+20, 1.6535132403707367e+20, 1.8608506234923506e+20, 2.0704253305717044e+20, 2.282453996814088e+20, 2.4973019365285613e+20], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [6, 4, 3, 2, 0, 1, 2, 2, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 2, 9, 3, 2], [2, 2, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2, 0, 3], [99, 54, 39, 57, 57, 12], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [85, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 4, 2, 2, 0, 1, 1, 9, 4, 8, 1, 8, 2, 6, 0, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 2, 1, 2, 3, 0, 0, 2, 1, 2], [66, 61, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 0, 1, 1, 0, 1, 0, 3], [65, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2251937689.756514, 43333958430.26285, 198381505688.43005, 553802619282.2422, 1185507076427.3696, 2145780920092.2341], "accuracy": [0.09708096832036972, 0.10091137140989304, 0.1026284471154213, 0.09972262382507324, 0.09760929644107819, 0.1014397069811821], "val_loss": [8498210816.0, 67968764196.57143, 229376004681.14285, 543688097792.0, 1061853631049.1428, 1834864906825.1428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 2, 0, 9, 6, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [1, 2, 2, 0, 1, 0, 2, 2, 3, 0, 0, 2, 1, 2], [33, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [2, 9, 1, 3], [6, 2], [9], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [10317463.203697398, 198112921.21621978, 906375584.1901995, 2529512561.849161, 5413951712.384625, 9798333974.519615], "accuracy": [0.09708096832036972, 0.10091137140989304, 0.1026284471154213, 0.09972262382507324, 0.09760929644107819, 0.1014397069811821], "val_loss": [38884898.28571428, 310612114.28571427, 1047796041.1428572, 2483043108.571429, 4848978944.0, 8378198308.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 8, 2, 8, 2, 2, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 1, 2, 0, 1, 0, 2, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [55, 56, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]