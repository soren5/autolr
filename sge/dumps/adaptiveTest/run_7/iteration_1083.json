[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 5, 2, 2, 2, 6, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.8225714564323425, "mapping_values": [1, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))))), tf.math.add(alpha, grad)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1006776522872093, 1.7941572910853507, 1.301790787449067, 1.0750261922207618, 0.85400204245346, 0.8077382992413286, 0.7397068234529824, 0.6781007822919374, 0.652945701188856, 0.6457520047466689, 0.619017588093989, 0.6128530726378006, 0.5613783325863678, 0.5600461138001743, 0.5374650521490001, 0.5237266508784387, 0.5290365492379614, 0.5131184944560452, 0.49327365910183435, 0.4785091029087692, 0.4914492934788727, 0.48708072827870363, 0.46984807015441554, 0.44848629824395003], "accuracy": [0.284110426902771, 0.4367983043193817, 0.5296525955200195, 0.611411988735199, 0.6818121671676636, 0.6888125538825989, 0.7194558382034302, 0.7401928305625916, 0.750759482383728, 0.7506273984909058, 0.7643640041351318, 0.7687227725982666, 0.7901201844215393, 0.7849689722061157, 0.7975168228149414, 0.802800178527832, 0.7968564033508301, 0.8080834746360779, 0.8099326491355896, 0.819970965385437, 0.8158763647079468, 0.81112140417099, 0.8280280232429504, 0.8337075710296631], "val_loss": [1.8367881093706404, 1.2775710650852747, 1.072648048400879, 0.6597763640539986, 0.5892349481582642, 0.5887636627469744, 0.5426073585237775, 0.5220872844968524, 0.506473217691694, 0.47126192705971853, 0.43150451353618074, 0.4545029401779175, 0.4296601925577436, 0.4366955416543143, 0.4048016922814505, 0.4013006346566336, 0.4587599039077759, 0.39607504435947966, 0.37927389996392386, 0.40113554682050434, 0.3977470908846174, 0.40161543233054026, 0.3771394065448216, 0.39403706789016724], "val_accuracy": [0.4183333218097687, 0.5376666784286499, 0.5793333053588867, 0.6959999799728394, 0.7436666488647461, 0.7326666712760925, 0.7476666569709778, 0.762333333492279, 0.7703333497047424, 0.7879999876022339, 0.8063333630561829, 0.7960000038146973, 0.8050000071525574, 0.79666668176651, 0.8270000219345093, 0.8256666660308838, 0.7986666560173035, 0.8223333358764648, 0.8360000252723694, 0.8173333406448364, 0.8153333067893982, 0.8146666884422302, 0.8233333230018616, 0.8230000138282776]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 2, 3, 6, 0, 4, 6, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8197143077850342, "mapping_values": [1, 21, 21, 12, 9, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))), tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1006609415412814, 1.796865223956508, 1.283401793067513, 0.980819039199299, 0.8513544309314027, 0.7505759160122804, 0.7652334302974777, 0.690173368845413, 0.6529679064501263, 0.6275593058276627, 0.6192573825397575, 0.5901713061641315, 0.573321585744332, 0.5612749071672939, 0.5572964081107948, 0.5345267504512705, 0.5412888446535653, 0.4952285164863111, 0.5031661510097509, 0.47861555640282744, 0.49524659854845204, 0.48957881022438066], "accuracy": [0.284110426902771, 0.4373266398906708, 0.5456346869468689, 0.6406022906303406, 0.6837934255599976, 0.709021270275116, 0.713908314704895, 0.7404569983482361, 0.752740740776062, 0.7607977986335754, 0.7594769597053528, 0.7766477465629578, 0.7845727205276489, 0.7795535326004028, 0.7938185334205627, 0.8010830879211426, 0.8006868362426758, 0.8120459914207458, 0.8064984679222107, 0.8195747137069702, 0.8162726163864136, 0.8150838613510132], "val_loss": [1.8366778918675013, 1.275822571345738, 0.7189349446977887, 0.6750780684607369, 0.5901910747800555, 0.7373617206301007, 0.5812242201396397, 0.5079942941665649, 0.49679984365190777, 0.5260629824229649, 0.44394545895712717, 0.4420315538133894, 0.42975238391331266, 0.44795407567705425, 0.4212502155985151, 0.4492428983960833, 0.4032306500843593, 0.41329002380371094, 0.38534930774143766, 0.42170000076293945, 0.3851536682673863, 0.3979125704084124], "val_accuracy": [0.41966667771339417, 0.5306666493415833, 0.6756666898727417, 0.6953333616256714, 0.7160000205039978, 0.6826666593551636, 0.7663333415985107, 0.7720000147819519, 0.7649999856948853, 0.7490000128746033, 0.8056666851043701, 0.8173333406448364, 0.8033333420753479, 0.7906666398048401, 0.8146666884422302, 0.7873333096504211, 0.8270000219345093, 0.8006666898727417, 0.8246666789054871, 0.8056666851043701, 0.8203333616256714, 0.8173333406448364]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 60, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.8151428699493408, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1006464299083687, 1.7885123011049042, 1.309549129791799, 1.0084767497415634, 0.8313266353490031, 0.7452475300727661, 0.7891613491585131, 0.6800618556984632, 0.6669930377971416, 0.6526039451529967, 0.6229438396051906, 0.586856755550905, 0.5639530644991835, 0.5810936679772067, 0.5727875419359606, 0.524848944483306, 0.5586388951137695, 0.5133543900408372, 0.5037177657454384, 0.4852972925772142], "accuracy": [0.28397834300994873, 0.443798691034317, 0.5337471961975098, 0.6322810649871826, 0.6765288710594177, 0.7143045663833618, 0.7009642124176025, 0.7411174178123474, 0.7490423917770386, 0.7531369924545288, 0.7578919529914856, 0.7755910754203796, 0.7882710099220276, 0.7779685854911804, 0.7873464822769165, 0.8041210174560547, 0.7943468689918518, 0.8037247657775879, 0.8078193068504333, 0.8234050869941711], "val_loss": [1.8360603196280343, 1.4997007846832275, 0.7075419425964355, 0.6297768184116909, 0.607229198728289, 0.7158221006393433, 0.5455080100468227, 0.5218358891350883, 0.4794752768107823, 0.4686756304332188, 0.44236844778060913, 0.44300385883876253, 0.4573038305555071, 0.4663358415876116, 0.4186535818236215, 0.4835514851978847, 0.4253092493329729, 0.39596944195883615, 0.39333225999559673, 0.4085331984928676], "val_accuracy": [0.414000004529953, 0.4806666672229767, 0.6863333582878113, 0.7039999961853027, 0.7196666598320007, 0.6819999814033508, 0.7636666893959045, 0.7683333158493042, 0.7879999876022339, 0.7870000004768372, 0.7990000247955322, 0.8019999861717224, 0.7956666946411133, 0.7763333320617676, 0.8209999799728394, 0.7609999775886536, 0.8026666641235352, 0.8206666707992554, 0.8206666707992554, 0.8193333148956299]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 5, 3, 2, 4, 4, 0, 3, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.8137142658233643, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1004935541582492, 1.7887091870793514, 1.3002854413706566, 1.0011493722524278, 0.8316906215397909, 0.807359824658007, 0.7381198295685971, 0.7026062890082271, 0.6515438909449393, 0.6663074198258535, 0.6214382346547779, 0.6093061587136923, 0.581718570756843, 0.5442498298983107, 0.567397326471122, 0.542702442107656, 0.5394654110784559, 0.5158191159802531, 0.4978715189144738, 0.46983263507857376, 0.5058990483743135, 0.49550552650244956, 0.49672825120585296, 0.45040217246660985], "accuracy": [0.28397834300994873, 0.4415532946586609, 0.5332188606262207, 0.6213181614875793, 0.6896050572395325, 0.6935675740242004, 0.7226257920265198, 0.7257958054542542, 0.7559106945991516, 0.7427024245262146, 0.7594769597053528, 0.7668735980987549, 0.7837802171707153, 0.7987055778503418, 0.7877426743507385, 0.7935543656349182, 0.7998943328857422, 0.8053097128868103, 0.8095363974571228, 0.8253863453865051, 0.8083476424217224, 0.8063663840293884, 0.816008448600769, 0.832650899887085], "val_loss": [1.8349720409938268, 1.3675798348018102, 0.9189206872667585, 0.6561977182115827, 0.5965402977807182, 0.5467516524451119, 0.5398368324552264, 0.530093891280038, 0.5007129907608032, 0.47152553285871235, 0.4308211888585772, 0.4405147007533482, 0.45832884311676025, 0.42887323243277414, 0.40936276742390226, 0.42585510866982595, 0.42191018377031597, 0.3940943649836949, 0.3836103933198111, 0.47085583209991455, 0.37317378180367605, 0.41478908913476126, 0.3845246434211731, 0.3736434153148106], "val_accuracy": [0.41733333468437195, 0.5009999871253967, 0.5849999785423279, 0.7210000157356262, 0.734333336353302, 0.7409999966621399, 0.75, 0.7599999904632568, 0.7693333625793457, 0.7873333096504211, 0.8076666593551636, 0.8053333163261414, 0.8080000281333923, 0.8066666722297668, 0.8216666579246521, 0.8056666851043701, 0.8106666803359985, 0.8243333101272583, 0.8336666822433472, 0.7850000262260437, 0.8330000042915344, 0.8086666464805603, 0.8236666917800903, 0.8336666822433472]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 60, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.8102856874465942, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.100702882993963, 1.7932766317266278, 1.2968865794717297, 0.984455783770872, 0.844183401125549, 0.7814277100792933, 0.7285160631819203, 0.6612089858819087, 0.6757511924506966, 0.6295206627321753, 0.6216679443662445, 0.6154863429091563, 0.5528084412226981, 0.5533283551953897, 0.5715543164191008, 0.5286752019009144, 0.5511662778427981, 0.5018997018591698, 0.4984125390761029, 0.46828199056444736, 0.48500905526139404, 0.49307568133341845, 0.4708281830238581, 0.44478302545724463, 0.4612317246342726, 0.4340953955781332, 0.42556397738300533, 0.44474081142215427, 0.3992395623524459, 0.40546513812227997, 0.39942433396035715, 0.41256416316329053, 0.40460345345465515, 0.4054640620580801, 0.37680092507491353, 0.3814958988313331, 0.37059621030486667, 0.36942699494898484, 0.3621326909207271, 0.3561005077034869], "accuracy": [0.2843745946884155, 0.4348170757293701, 0.5439175963401794, 0.6239598393440247, 0.6950204968452454, 0.703209638595581, 0.7252674698829651, 0.7436270117759705, 0.7397965788841248, 0.7563069462776184, 0.765949010848999, 0.7648923397064209, 0.7940827012062073, 0.7852331399917603, 0.7848368883132935, 0.8017435073852539, 0.7987055778503418, 0.8132346868515015, 0.8080834746360779, 0.8272355198860168, 0.8128384351730347, 0.8096684813499451, 0.8257825970649719, 0.8372738361358643, 0.8286884427070618, 0.8416325449943542, 0.8457271456718445, 0.8327829837799072, 0.8512746095657349, 0.8533879518508911, 0.8521991968154907, 0.8495575189590454, 0.8459912538528442, 0.8490291833877563, 0.8574824929237366, 0.856689989566803, 0.8598600029945374, 0.8593316674232483, 0.8638224601745605, 0.8691058158874512], "val_loss": [1.8375323159354073, 1.2852540016174316, 0.8627392564501081, 0.6001920189176287, 0.56460211958204, 0.5956405912126813, 0.5736956085477557, 0.5559361321585519, 0.49964955874851774, 0.474003723689488, 0.4315434864589146, 0.4491403954369681, 0.4228366953986032, 0.4924982956477574, 0.4168282832418169, 0.4420555319104876, 0.40384338583265034, 0.3968953916004726, 0.3831263269696917, 0.44640618562698364, 0.39486855268478394, 0.3914070725440979, 0.3939268929617746, 0.3732715845108032, 0.3816190447126116, 0.3544227310589382, 0.4183320999145508, 0.35893382344927105, 0.3475257584026882, 0.3684385759489877, 0.3303093229021345, 0.34113843951906475, 0.3607730610030038, 0.3319278870310102, 0.3179418274334499, 0.34257969685963224, 0.32642623356410433, 0.3196242366518293, 0.34886328663144794, 0.33949871574129376], "val_accuracy": [0.4183333218097687, 0.5299999713897705, 0.6176666617393494, 0.734000027179718, 0.7549999952316284, 0.731333315372467, 0.7289999723434448, 0.7620000243186951, 0.7746666669845581, 0.7876666784286499, 0.8059999942779541, 0.7976666688919067, 0.800000011920929, 0.7649999856948853, 0.8193333148956299, 0.7946666479110718, 0.8166666626930237, 0.8230000138282776, 0.824999988079071, 0.768666684627533, 0.8163333535194397, 0.82833331823349, 0.8163333535194397, 0.8360000252723694, 0.8293333053588867, 0.8450000286102295, 0.8033333420753479, 0.8386666774749756, 0.8483333587646484, 0.8343333601951599, 0.859333336353302, 0.8550000190734863, 0.8443333506584167, 0.8516666889190674, 0.8636666536331177, 0.8536666631698608, 0.8583333492279053, 0.8633333444595337, 0.8573333621025085, 0.8566666841506958]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 3, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 1, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 3, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 2, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.7622857093811035, "mapping_values": [1, 26, 26, 14, 12, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.297100410768778, 2.2856974678898627, 2.2722515946507786, 2.259986332867045, 2.2475122056695778, 2.230722146436696, 2.2141817997569784, 2.19657333491422, 2.1717644159772753, 2.148163837637679, 2.1164282822511327, 2.084682701569601, 2.044091244100375, 1.9997828321812128, 1.9505920601306794, 1.8973076928324781, 1.8349929954145625, 1.7778844891160062, 1.718833564735753, 1.6550604020757225, 1.5987938217687852, 1.5374783775542218, 1.475231515591281, 1.4367496180827228, 1.3949589738756392, 1.3460489181621342, 1.3081142518813538, 1.2780966309351047, 1.2628618537505794, 1.2197992013445809, 1.1931609948549635, 1.1832263487803387, 1.1614747529394511, 1.1266544028642298, 1.1158471023086953, 1.110540849421522, 1.0763565712695613, 1.0597977323176886, 1.0430176047727087, 1.033900946390517, 1.0183547978718615, 0.9959135216776059, 0.9985066898872729, 0.9908286313087303, 0.9693258921184623, 0.9613399119771404, 0.9607370300315642, 0.9446534235495397, 0.9318651704267976, 0.937325754075585, 0.9192916800348813, 0.9130041664775022, 0.916581404317781, 0.8996322241048016, 0.8954641540540822, 0.8899099225963915, 0.885153524675043, 0.8729603802129624, 0.8721896603579503, 0.8649053635173359, 0.8592727869619169, 0.8624722874789679, 0.8612003949938386, 0.8450785625045483, 0.8395609513029462, 0.8486910469071299, 0.8328619462198916, 0.832553083626444, 0.8235780798826771, 0.8288789313577343, 0.8142228773981431, 0.8154690927439487, 0.819763404377353, 0.8110754973443429, 0.801380618916621, 0.8034601897737369, 0.7945254590485814, 0.7937151894451621, 0.7881152567578785, 0.7836015628959052, 0.7823235904693352, 0.7854206695800381, 0.7838426345941838, 0.7707211191958724, 0.7729376949465364, 0.7757929067932273, 0.761851473097725, 0.7656709809958927, 0.7696424954445481, 0.7674575779715455, 0.7525554945235554, 0.7476786168385899, 0.7526614546319198, 0.7484960262927522, 0.7396625530970111, 0.7360849082509304, 0.749269345425155, 0.7455049220203425, 0.7397371177124766, 0.7336965134477319], "accuracy": [0.10315678268671036, 0.13076211512088776, 0.16734910011291504, 0.2071060687303543, 0.22718267142772675, 0.26403382420539856, 0.2907145619392395, 0.31845200061798096, 0.3366794288158417, 0.3531897962093353, 0.3731343150138855, 0.3891163766384125, 0.3963809311389923, 0.4113062918186188, 0.4243825078010559, 0.4364020526409149, 0.4575353264808655, 0.4702152907848358, 0.4784044325351715, 0.49689605832099915, 0.49953770637512207, 0.5152555704116821, 0.523048460483551, 0.5296525955200195, 0.54220050573349, 0.5563333630561829, 0.5629374980926514, 0.5704662799835205, 0.5746929049491882, 0.5847312211990356, 0.5941091179847717, 0.5955620408058167, 0.5997886657714844, 0.6155065298080444, 0.6156386137008667, 0.6152423620223999, 0.6210539937019348, 0.6330735683441162, 0.6367719173431396, 0.6408664584159851, 0.6507726907730103, 0.6462818384170532, 0.6503764390945435, 0.6585655808448792, 0.6642451286315918, 0.6617355942726135, 0.656980574131012, 0.6688680648803711, 0.6672830581665039, 0.6744155287742615, 0.6756042838096619, 0.6749438643455505, 0.6783780455589294, 0.6837934255599976, 0.6832650899887085, 0.689869225025177, 0.6847180128097534, 0.696209192276001, 0.6927750706672668, 0.6919825673103333, 0.6966054439544678, 0.6930392384529114, 0.6993792057037354, 0.700171709060669, 0.7024171352386475, 0.6991150379180908, 0.7062475085258484, 0.7061154246330261, 0.7062475085258484, 0.7077004313468933, 0.707568347454071, 0.7117950320243835, 0.7047945857048035, 0.7045304179191589, 0.7154933214187622, 0.7124554514884949, 0.7129837274551392, 0.7108704447746277, 0.7211728692054749, 0.7169462442398071, 0.7160216569900513, 0.7166820764541626, 0.7185312509536743, 0.7228899598121643, 0.7226257920265198, 0.7144366502761841, 0.7220974564552307, 0.7228899598121643, 0.7135120630264282, 0.7189275026321411, 0.7275128960609436, 0.7322678565979004, 0.7289658188819885, 0.7301545143127441, 0.7297582626342773, 0.7301545143127441, 0.7272487282752991, 0.7283053994178772, 0.7316074371337891, 0.7313432693481445], "val_loss": [1.9596808978489466, 1.9486752918788366, 1.9372154644557409, 1.925055912562779, 1.9117714336940221, 1.8968511308942522, 1.8797922134399414, 1.8600288118634904, 1.8371246882847376, 1.8107852935791016, 1.7804416247776575, 1.7459149360656738, 1.7064098971230643, 1.661801883152553, 1.6122165066855294, 1.5579298223767961, 1.499270030430385, 1.4388371876307897, 1.3780054364885603, 1.3164682388305664, 1.2574018410273962, 1.201033353805542, 1.1478832108633858, 1.1008812018803187, 1.0577617032187325, 1.018866436822074, 0.9840476512908936, 0.9524575982775006, 0.9251555034092495, 0.900033678327288, 0.8768853800637382, 0.8561258656638009, 0.8373585087912423, 0.8198376723698207, 0.8038017579487392, 0.7901147603988647, 0.7769393750599453, 0.7643174954823085, 0.7529010432107108, 0.7425763777324131, 0.7328086921146938, 0.7240602799824306, 0.7160257952553886, 0.7086687769208636, 0.7005100420543126, 0.6936280046190534, 0.687132716178894, 0.6802112545285907, 0.6748526777539935, 0.6703157595225743, 0.6651355198451451, 0.6598024708884103, 0.655306305204119, 0.6505598170416695, 0.6463580301829747, 0.6423660857336861, 0.6381325551441738, 0.6337592261178153, 0.6293726478304181, 0.6261826242719378, 0.62290700844356, 0.6200769969395229, 0.6177917889186314, 0.6140258312225342, 0.6098998955317906, 0.6079690967287336, 0.6038632392883301, 0.6016966615404401, 0.5993116753441947, 0.5950403383799961, 0.5929665906088692, 0.5904122080121722, 0.588970558983939, 0.5860769578388759, 0.5831653560910907, 0.5820738928658622, 0.5788785559790475, 0.5764479296548026, 0.5753940514155796, 0.5724845613752093, 0.5693462235586983, 0.5675920248031616, 0.5666721548352923, 0.5642455816268921, 0.5622158050537109, 0.5606487648827689, 0.5585996764046806, 0.5580071721758161, 0.5562898942402431, 0.5558351618903024, 0.553302560533796, 0.551093408039638, 0.5501323086874825, 0.5469156163079398, 0.5458527633122036, 0.5449350561414447, 0.5425723620823452, 0.5421265874590192, 0.5402393000466483, 0.5391229050500053], "val_accuracy": [0.13300000131130219, 0.2303333282470703, 0.304666668176651, 0.3490000069141388, 0.37166666984558105, 0.39366665482521057, 0.41100001335144043, 0.4323333203792572, 0.4463333189487457, 0.4583333432674408, 0.4726666808128357, 0.4906666576862335, 0.503333330154419, 0.5170000195503235, 0.5316666960716248, 0.5450000166893005, 0.5569999814033508, 0.5693333148956299, 0.5873333215713501, 0.5973333120346069, 0.6073333621025085, 0.6206666827201843, 0.6380000114440918, 0.6496666669845581, 0.6589999794960022, 0.6606666445732117, 0.6683333516120911, 0.6736666560173035, 0.6759999990463257, 0.6763333082199097, 0.6796666383743286, 0.6836666464805603, 0.6896666884422302, 0.6913333535194397, 0.6919999718666077, 0.6956666707992554, 0.6970000267028809, 0.7009999752044678, 0.70333331823349, 0.7043333053588867, 0.7059999704360962, 0.7093333601951599, 0.7133333086967468, 0.7120000123977661, 0.7160000205039978, 0.7170000076293945, 0.7170000076293945, 0.7203333377838135, 0.7203333377838135, 0.722000002861023, 0.7256666421890259, 0.7269999980926514, 0.7243333458900452, 0.7300000190734863, 0.7279999852180481, 0.7323333621025085, 0.731333315372467, 0.7310000061988831, 0.7336666584014893, 0.7333333492279053, 0.7353333234786987, 0.7366666793823242, 0.737666666507721, 0.7386666536331177, 0.7393333315849304, 0.7403333187103271, 0.7416666746139526, 0.7456666827201843, 0.7453333139419556, 0.7476666569709778, 0.7480000257492065, 0.7486666440963745, 0.7453333139419556, 0.7519999742507935, 0.7490000128746033, 0.746999979019165, 0.7523333430290222, 0.753333330154419, 0.750333309173584, 0.7516666650772095, 0.7556666731834412, 0.7546666860580444, 0.7540000081062317, 0.7563333511352539, 0.7576666474342346, 0.7580000162124634, 0.7563333511352539, 0.7563333511352539, 0.7590000033378601, 0.7570000290870667, 0.7546666860580444, 0.7576666474342346, 0.7590000033378601, 0.7630000114440918, 0.7603333592414856, 0.7580000162124634, 0.7639999985694885, 0.7630000114440918, 0.7676666378974915, 0.765999972820282]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 6, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 3, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [6, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.7622857093811035, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.297100410768778, 2.2856974678898627, 2.2722515946507786, 2.2599863823394513, 2.2475122191792294, 2.230721746091247, 2.214181979665226, 2.196574275078885, 2.1717648118509985, 2.1481634687832587, 2.116426617792805, 2.0846802452693542, 2.04408828403814, 1.999779674229353, 1.9505887651298623, 1.8973059338538276, 1.8349920147209435, 1.7778825843338921, 1.718838276171555, 1.6550688952376829, 1.598805747216703, 1.5374862990752818, 1.4752381736135376, 1.4367549218490312, 1.3949637617559134, 1.3460532865189228, 1.3081176277038964, 1.2780983456688597, 1.2628683190634853, 1.2197972920435043, 1.1931591709418115, 1.1832308648457979, 1.16147290624254, 1.1266621469490878, 1.11584781090408, 1.1105444715983832, 1.076366107115231, 1.0598234808629199, 1.0430212990640255, 1.0339145272430916, 1.018347387615527, 0.9959252575022938, 0.9985069493812231, 0.9908381882061528, 0.9692954961586906, 0.9613519254661019, 0.96071763832839, 0.9446467813908889, 0.9318579308912031, 0.9373331139856373, 0.9192903327069593, 0.9129890897538228, 0.916568848954814, 0.8996422756396862, 0.8954557594826602, 0.8899099940259175, 0.8851590517048729, 0.8729442184895037, 0.8721990625871848, 0.8649218735630644, 0.8592536362910771, 0.8624666634410237, 0.8611985526977985, 0.8450557590948041, 0.8395455975841773, 0.8486657719397352, 0.8328501098128578, 0.8325451534925876, 0.823568920307565, 0.8288606630182852, 0.8142062004578348, 0.8154762450808847, 0.8197709710102639, 0.8110837375624872, 0.8013810615938857, 0.8034438246497231, 0.7944985394149707, 0.7937123809335034, 0.7881350282192419, 0.7835938166775298, 0.7823219881270619, 0.7853596287790212, 0.7838521007344613, 0.7707155095335829, 0.7729354183813364, 0.7757846198423963, 0.7618231003971904, 0.765650492365712, 0.7696099598032058, 0.7674295824469356, 0.7525680377388579, 0.7476591093271573, 0.7526580817695339, 0.748436497486247, 0.739616860015722, 0.7359964605949779, 0.749249606084641, 0.7455095743002468, 0.7397222817928217, 0.7337094137870467], "accuracy": [0.10315678268671036, 0.13076211512088776, 0.16734910011291504, 0.2071060687303543, 0.22718267142772675, 0.26403382420539856, 0.2907145619392395, 0.31845200061798096, 0.3366794288158417, 0.3533218801021576, 0.37326639890670776, 0.3889842927455902, 0.3963809311389923, 0.4113062918186188, 0.4243825078010559, 0.4364020526409149, 0.45766741037368774, 0.47008320689201355, 0.4784044325351715, 0.4970281422138214, 0.4998018741607666, 0.5152555704116821, 0.5233126282691956, 0.5295205116271973, 0.54220050573349, 0.5564654469490051, 0.5630695819854736, 0.5704662799835205, 0.5746929049491882, 0.5848633050918579, 0.5941091179847717, 0.5954299569129944, 0.5995244979858398, 0.6155065298080444, 0.6156386137008667, 0.6152423620223999, 0.6209219098091125, 0.6332056522369385, 0.6367719173431396, 0.6408664584159851, 0.6510368585586548, 0.6462818384170532, 0.6502443552017212, 0.6583014130592346, 0.6645092964172363, 0.661471426486969, 0.656980574131012, 0.6686038970947266, 0.6671509742736816, 0.6742834448814392, 0.6753401160240173, 0.6750759482383728, 0.678642213344574, 0.6839255094528198, 0.6833971738815308, 0.6897371411323547, 0.6845859289169312, 0.6963412761688232, 0.6926429867744446, 0.6917183995246887, 0.6966054439544678, 0.6930392384529114, 0.6995112895965576, 0.700171709060669, 0.7024171352386475, 0.6991150379180908, 0.7062475085258484, 0.7059833407402039, 0.7062475085258484, 0.707568347454071, 0.7073041796684265, 0.7121912837028503, 0.7047945857048035, 0.7047945857048035, 0.7152291536331177, 0.7121912837028503, 0.7127195596694946, 0.7108704447746277, 0.7213049530982971, 0.7165499925613403, 0.7164179086685181, 0.7166820764541626, 0.7190595865249634, 0.7232862114906311, 0.7223616242408752, 0.7141724824905396, 0.7220974564552307, 0.7228899598121643, 0.7131158113479614, 0.7186633348464966, 0.7269845604896545, 0.7321357727050781, 0.7294940948486328, 0.7302865982055664, 0.7300224304199219, 0.7306828498840332, 0.7273808121681213, 0.728701651096344, 0.7321357727050781, 0.7313432693481445], "val_loss": [1.9596808297293526, 1.9486752918788366, 1.9372156688145228, 1.925056048801967, 1.911771365574428, 1.8968507221766882, 1.8797930308750697, 1.8600293568202428, 1.8371238708496094, 1.8107833181108748, 1.7804390362330846, 1.7459121431623186, 1.7064064230237688, 1.6617990221296037, 1.61221524647304, 1.5579290049416679, 1.499267646244594, 1.438833781651088, 1.3780129977634974, 1.316481011254447, 1.2574099472590856, 1.2010389055524553, 1.1478897844042097, 1.1008877754211426, 1.057762793132237, 1.018862349646432, 0.9840451308659145, 0.9524605614798409, 0.9251559802464077, 0.9000320775168282, 0.8768829618181501, 0.8561231579099383, 0.8373573848179409, 0.8198299578257969, 0.8038042954036168, 0.7901041337421962, 0.7769373485020229, 0.7643134593963623, 0.7528883389064244, 0.7425625664847237, 0.7327851227351597, 0.7240564823150635, 0.7160368817193168, 0.7086676018578666, 0.7005030938557216, 0.6936068534851074, 0.6871342148099627, 0.6802172490528652, 0.6748492547443935, 0.6703213964189801, 0.6651382446289062, 0.659811156136649, 0.6553010089056832, 0.6505554573876517, 0.6463671752384731, 0.642392805644444, 0.6381362336022514, 0.6337595326559884, 0.6293795449393136, 0.6261781794684274, 0.6229048115866525, 0.6200717517307827, 0.6177622931344169, 0.6140234300068447, 0.6098780972617013, 0.6079810176576886, 0.6038740703037807, 0.6017165354319981, 0.5993082523345947, 0.5950136525290353, 0.5929727043424334, 0.5904296977179391, 0.5889931917190552, 0.5860864264624459, 0.5831671442304339, 0.5821049724306379, 0.5789063998631069, 0.5764530215944562, 0.5753675869532994, 0.5724954434803554, 0.5693457637514386, 0.5675864560263497, 0.5667008331843785, 0.5642730678830828, 0.5622210162026542, 0.5606966018676758, 0.5586144413266864, 0.5579700980867658, 0.556228518486023, 0.5557963337217059, 0.5533138854163033, 0.551093476159232, 0.5501198087419782, 0.546885575566973, 0.5458068677357265, 0.5448875427246094, 0.5425024202891758, 0.5420754977634975, 0.5401805979864938, 0.5390651055744716], "val_accuracy": [0.13300000131130219, 0.2303333282470703, 0.304666668176651, 0.3490000069141388, 0.37166666984558105, 0.39366665482521057, 0.41100001335144043, 0.4323333203792572, 0.4463333189487457, 0.4583333432674408, 0.4726666808128357, 0.4906666576862335, 0.503333330154419, 0.5170000195503235, 0.5316666960716248, 0.5450000166893005, 0.5569999814033508, 0.5693333148956299, 0.5873333215713501, 0.5973333120346069, 0.6076666712760925, 0.6203333139419556, 0.6380000114440918, 0.6496666669845581, 0.659333348274231, 0.6606666445732117, 0.6683333516120911, 0.6736666560173035, 0.6759999990463257, 0.6763333082199097, 0.6796666383743286, 0.6836666464805603, 0.6896666884422302, 0.6913333535194397, 0.6919999718666077, 0.6956666707992554, 0.6966666579246521, 0.7009999752044678, 0.70333331823349, 0.7039999961853027, 0.7059999704360962, 0.7089999914169312, 0.7129999995231628, 0.7120000123977661, 0.7160000205039978, 0.7170000076293945, 0.7170000076293945, 0.7203333377838135, 0.7203333377838135, 0.722000002861023, 0.7256666421890259, 0.7266666889190674, 0.7243333458900452, 0.7300000190734863, 0.7276666760444641, 0.7319999933242798, 0.731333315372467, 0.7310000061988831, 0.7336666584014893, 0.7336666584014893, 0.7353333234786987, 0.7363333106040955, 0.737666666507721, 0.7386666536331177, 0.7396666407585144, 0.7403333187103271, 0.7416666746139526, 0.7456666827201843, 0.7453333139419556, 0.7473333477973938, 0.7483333349227905, 0.7483333349227905, 0.7456666827201843, 0.7513333559036255, 0.7490000128746033, 0.746999979019165, 0.7523333430290222, 0.753000020980835, 0.750333309173584, 0.7516666650772095, 0.7556666731834412, 0.7546666860580444, 0.7540000081062317, 0.7559999823570251, 0.7573333382606506, 0.7580000162124634, 0.7559999823570251, 0.7563333511352539, 0.7590000033378601, 0.7570000290870667, 0.7549999952316284, 0.7573333382606506, 0.7586666941642761, 0.7620000243186951, 0.7596666812896729, 0.7583333253860474, 0.7636666893959045, 0.7630000114440918, 0.7666666507720947, 0.765999972820282]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [5, 3, 4, 8, 2, 3, 3, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 1, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 42, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 3, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.math.subtract(tf.math.multiply(sigma, sigma), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.4514324480847063, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03183199092745781, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.7153991971697127, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0663333311676979, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 4, 6, 2, 7, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 3, 1, 0, 3], [7, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 6, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [32, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [6, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [310.3426629266624, 4964.7902632423475, 22118.526653410216, 60726.141798268065, 131242.15051264694, 237282.28709054287], "accuracy": [0.09906221181154251, 0.09509972482919693, 0.09893012791872025, 0.10157178342342377, 0.09628847241401672, 0.1006472036242485], "val_loss": [1050.7754603794642, 7681.578683035715, 25319.270647321428, 59369.79241071428, 115241.33035714286, 198341.80357142858], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 1, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), grad))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.302604558681689, 2.305039142368807, 2.305149509859217, 2.3076205639681087, 2.3127605748482036, 2.3131949019517095, 2.317616191034414, 2.326917692560325, 2.330998148349424, 2.3494994062489964, 2.388572337872726, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.08096684515476227, 0.08228767663240433, 0.08691058307886124, 0.07674019038677216, 0.08083476126194, 0.07660810649394989, 0.07753269374370575, 0.07607977837324142, 0.07436270266771317, 0.08519349992275238, 0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97203152520316, 1.9736402375357491, 1.974987302507673, 1.9768565722874232, 1.9795502253941126, 1.9820708547319685, 1.9851021766662598, 1.9895286560058594, 1.9961951119559151, 2.0114036968776157, 2.099815845489502, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.020666666328907013, 0.020666666328907013, 0.023666666820645332, 0.024000000208616257, 0.029333332553505898, 0.03733333200216293, 0.055666666477918625, 0.0793333351612091, 0.0976666659116745, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 5, 2, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 1, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 14, 11, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029240976471423, 2.3030157316283715, 2.3029855693005428, 2.3029059155458755, 2.303026828563067, 2.30298983646091, 2.3030196920346278, 2.3030046481088546, 2.3030194119219263, 2.3028434546962786], "accuracy": [0.09391097724437714, 0.09721305221319199, 0.09681680053472519, 0.09272222965955734, 0.09998679161071777, 0.09879804402589798, 0.09694888442754745, 0.09760929644107819, 0.0936468094587326, 0.09721305221319199], "val_loss": [1.9737437111990792, 1.9736341748918806, 1.9736472538539342, 1.9735956873212541, 1.9736048153468542, 1.9736144883292062, 1.9736792019435339, 1.973653997693743, 1.9736692564828056, 1.973696299961635], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10133333504199982, 0.10400000214576721, 0.10100000351667404, 0.09866666793823242, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 3, 2, 4, 2, 3, 4, 9, 4, 5, 3, 0, 9, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 0, 1, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [69, 33, 42, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 8, 0, 8, 4, 3, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 6, 2, 8, 3, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 4, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 66, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 14, 12, 5, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 12, 6, 6, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))))))), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, beta), tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(beta, sigma))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 2, 3, 6, 0, 4, 6, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 19, 11, 8, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.square(grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.add(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(sigma, tf.math.negative(beta)), sigma))), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [50, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 14, 12, 3, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 6, 5, 3, 0, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 6, 2, 3, 2, 3, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 2, 1, 2, 2, 1, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 42, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 6, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 64, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 2, 4, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 1, 3, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 60, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.05542857199907303, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020667324071202, 2.3023084988289853, 2.300825756554433, 2.3009382717015168, 2.3020911857893185, 2.2997652023790565, 2.300275969073883, 2.3016149539516713, 2.299854901614458, 2.301418952623205, 2.3001508673404767, 2.300686294313561, 2.3001069377961647, 2.3002634004374474, 2.299847667999177, 2.30064821973878, 2.300079995016648, 2.2999277926077064, 2.301110678313667, 2.300671573202324, 2.301323539403609, 2.300526863170448, 2.2992943340619445, 2.300487710563278, 2.300092919375745, 2.2997131362142125], "accuracy": [0.09060890227556229, 0.08677849918603897, 0.08902391046285629, 0.1010434553027153, 0.09113723784685135, 0.09668471664190292, 0.09298639744520187, 0.09853387624025345, 0.1006472036242485, 0.0956280529499054, 0.09708096832036972, 0.09747721254825592, 0.08836349099874496, 0.09430722147226334, 0.09893012791872025, 0.09219389408826828, 0.1006472036242485, 0.0948355570435524, 0.09430722147226334, 0.09391097724437714, 0.08942015469074249, 0.09219389408826828, 0.09708096832036972, 0.09879804402589798, 0.09140139818191528, 0.0956280529499054], "val_loss": [1.9708409990583147, 1.9706732204982214, 1.9705642291477747, 1.9704390934535436, 1.9703222683497839, 1.9702308518545968, 1.970135007585798, 1.97001314163208, 1.9699574198041643, 1.9698996543884277, 1.969829831804548, 1.9697826930454798, 1.9697299684797014, 1.9696877343314034, 1.9696803774152483, 1.9696478162493025, 1.9696569442749023, 1.9696500641959054, 1.969672543661935, 1.969698769705636, 1.9696958405630929, 1.9697153908865792, 1.9697435923985072, 1.9697869845799036, 1.969780581338065, 1.9698008809770857], "val_accuracy": [0.036666665226221085, 0.03866666555404663, 0.03999999910593033, 0.043666668236255646, 0.0430000014603138, 0.04399999976158142, 0.04533333331346512, 0.04600000008940697, 0.046666666865348816, 0.04800000041723251, 0.04899999871850014, 0.049666665494441986, 0.050333332270383835, 0.05233333259820938, 0.05400000140070915, 0.05433333292603493, 0.054666668176651, 0.05666666850447655, 0.058666665107011795, 0.05900000035762787, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05900000035762787, 0.05966666713356972, 0.05966666713356972]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 5, 5, 3, 2, 2, 4, 0, 0, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [87, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [27, 33, 44, 92]], "fitness": -0.00828571431338787, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.add(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(sigma, beta), sigma))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.314624033709874, 2.318693105775478, 2.3173732838500305, 2.3177069808356343, 2.3192164749910864, 2.3167913322199323], "accuracy": [0.06670188903808594, 0.05560692027211189, 0.05732399970293045, 0.06221107020974159, 0.05824857950210571, 0.06432439386844635], "val_loss": [1.9857803753444128, 1.985816478729248, 1.985816478729248, 1.985816478729248, 1.985816478729248, 1.985816478729248], "val_accuracy": [0.009666666388511658, 0.009666666388511658, 0.009666666388511658, 0.009666666388511658, 0.009666666388511658, 0.009666666388511658]}}]