[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 2, 8, 0, 0, 2, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 0, 0, 1, 2, 3, 0, 0, 2, 1, 2], [59, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8248571157455444, "mapping_values": [1, 30, 30, 18, 12, 4, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.074038622984246, 1.606634115813793, 1.1741089602235348, 0.9168981247574284, 0.8088692060362126, 0.7301691942179696, 0.6972866794846045, 0.6990458406257025, 0.6132003918394452, 0.6256699914929732, 0.5895531494163047, 0.5823294681848363, 0.564930642183352, 0.5379085124617539, 0.5368568923463596, 0.5119715538463887, 0.491706088513998, 0.5224254160288885, 0.4824180914631074, 0.48256071567881803, 0.46754723500739376, 0.46908337363965635, 0.45148157434944686, 0.45122979815767394, 0.4285143755406846, 0.406729098375463, 0.4081841466205153, 0.3844698801126935, 0.38800742517624864, 0.3824349387391778, 0.3873001541191986, 0.3997303490286978, 0.3640675951878408], "accuracy": [0.30682867765426636, 0.44247788190841675, 0.5818253755569458, 0.6573768258094788, 0.6901333928108215, 0.7191916704177856, 0.7326641082763672, 0.7296261787414551, 0.7640998363494873, 0.7625148296356201, 0.7771760821342468, 0.7816668748855591, 0.7836481332778931, 0.7944789528846741, 0.8009510040283203, 0.8072909712791443, 0.8146876096725464, 0.7960638999938965, 0.8169330358505249, 0.8190463781356812, 0.82683926820755, 0.8247259259223938, 0.829216718673706, 0.83119797706604, 0.8422929644584656, 0.8488970994949341, 0.8502179384231567, 0.8584070801734924, 0.8564258217811584, 0.859199583530426, 0.857218325138092, 0.8479725122451782, 0.8646149635314941], "val_loss": [1.2570884568350655, 1.0687907082693917, 0.8054622752325875, 0.6391493082046509, 0.5964245285306659, 0.5277223587036133, 0.5282502344676426, 0.4780015434537615, 0.48571142128535677, 0.46281399045671734, 0.4644296509878976, 0.419892566544669, 0.39923919098717825, 0.4817617620740618, 0.4481911999838693, 0.4282865183694022, 0.4558579581124442, 0.391225482736315, 0.3829700861658369, 0.400829553604126, 0.3699774742126465, 0.3468614901815142, 0.3492804765701294, 0.38003221579960417, 0.3737109388623919, 0.34198892968041555, 0.3303182465689523, 0.315750743661608, 0.3119299922670637, 0.33586754969188143, 0.36259378705705914, 0.3442129577909197, 0.3631208709308079], "val_accuracy": [0.4516666531562805, 0.6309999823570251, 0.6356666684150696, 0.7149999737739563, 0.7243333458900452, 0.750333309173584, 0.7573333382606506, 0.7919999957084656, 0.7699999809265137, 0.7923333048820496, 0.7889999747276306, 0.8096666932106018, 0.8270000219345093, 0.7820000052452087, 0.7863333225250244, 0.8053333163261414, 0.781000018119812, 0.8293333053588867, 0.8233333230018616, 0.8226666450500488, 0.8353333473205566, 0.8513333201408386, 0.8456666469573975, 0.8399999737739563, 0.8330000042915344, 0.8546666502952576, 0.8653333187103271, 0.8703333139419556, 0.8653333187103271, 0.8603333234786987, 0.8379999995231628, 0.8579999804496765, 0.8316666483879089]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 6, 2, 6, 1, 5, 4, 0, 4, 2, 8, 3, 0, 2, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8248571157455444, "mapping_values": [1, 5, 5, 2, 3, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.074146748770025, 1.5752970797117156, 1.6957215556001242, 1.1308627550817043, 0.8857030830268673, 0.777493300919425, 0.6872839495695152, 0.6687815306980565, 0.6430936722534365, 0.6132484494246323, 0.5698371073037972, 0.5550285475349477, 0.5594312174287785, 0.5619995995928914, 0.5222272774869614, 0.5132050544216397, 0.495592561348822, 0.5241216851806502, 0.4718461083761217, 0.4682975888386095, 0.4826432677654306, 0.4631161494868196, 0.452476474382559, 0.4293970292262618, 0.42120078182837684, 0.41038479618487056, 0.41446045355994576, 0.3912077833435964, 0.40040726155700024, 0.3979624030675398, 0.37877224280440247, 0.3807244014628197, 0.3771524128936238, 0.3553258878853122], "accuracy": [0.30682867765426636, 0.44789329171180725, 0.4391758143901825, 0.6041474342346191, 0.6762647032737732, 0.7033417224884033, 0.7446836829185486, 0.7452120184898376, 0.757099449634552, 0.7652885913848877, 0.7873464822769165, 0.7906485199928284, 0.7844406366348267, 0.7902522683143616, 0.8070268034934998, 0.8101968169212341, 0.8146876096725464, 0.8017435073852539, 0.8244617581367493, 0.8297450542449951, 0.8204993009567261, 0.8321225643157959, 0.8343679904937744, 0.8421608805656433, 0.8409721255302429, 0.8495575189590454, 0.8467837572097778, 0.8527275323867798, 0.8491612672805786, 0.8532558679580688, 0.863029956817627, 0.8601241707801819, 0.860652506351471, 0.8663320541381836], "val_loss": [1.258392299924578, 1.7263991492135184, 1.2041452952793665, 0.6813644341060093, 0.5711640800748553, 0.5743554489953178, 0.5647558995655605, 0.49887335300445557, 0.48099240234919954, 0.45858120918273926, 0.4156508871487209, 0.43377630199704853, 0.4278792568615505, 0.44943019321986605, 0.39211125884737286, 0.4290652445384434, 0.42540342467171804, 0.3776800973074777, 0.39839333295822144, 0.3776404346738543, 0.3647435392652239, 0.353553192956107, 0.36513679368155344, 0.3518892696925572, 0.4106131281171526, 0.33183238336018156, 0.34251569850104197, 0.33624557086399626, 0.3182742084775652, 0.3747137359210423, 0.3431246450969151, 0.36593433788844515, 0.3217092752456665, 0.3238346150943211], "val_accuracy": [0.4519999921321869, 0.4126666784286499, 0.4830000102519989, 0.6963333487510681, 0.7386666536331177, 0.7436666488647461, 0.7413333058357239, 0.7900000214576721, 0.7763333320617676, 0.7879999876022339, 0.8159999847412109, 0.8023333549499512, 0.8086666464805603, 0.8016666769981384, 0.828000009059906, 0.8063333630561829, 0.7950000166893005, 0.8333333134651184, 0.8140000104904175, 0.8346666693687439, 0.8393333554267883, 0.8446666598320007, 0.8339999914169312, 0.8526666760444641, 0.8059999942779541, 0.859000027179718, 0.8539999723434448, 0.8576666712760925, 0.8690000176429749, 0.8516666889190674, 0.8550000190734863, 0.8383333086967468, 0.8586666584014893, 0.8610000014305115]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 8, 5, 4, 0, 4, 3, 1, 2, 2, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8199999928474426, "mapping_values": [1, 16, 16, 9, 7, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, grad)))), grad), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.sqrt(alpha))), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0740386829746553, 1.5884439914989559, 1.1140526412516192, 0.9603435015004498, 0.7899260810809978, 0.7550169267060498, 0.695549822982591, 0.6439004229705694, 0.6493117140662386, 0.6017993348244081, 0.5726040104250819, 0.5712627052804183, 0.5698442475088142, 0.5431685343457566, 0.5230908822177219, 0.5150608717332411, 0.49496622758534575, 0.5371017178815543], "accuracy": [0.30682867765426636, 0.44591203331947327, 0.5930524468421936, 0.6487914323806763, 0.7042662501335144, 0.7243428826332092, 0.7341170310974121, 0.7568352818489075, 0.7515519857406616, 0.7671377658843994, 0.7821952104568481, 0.7798177003860474, 0.7860256433486938, 0.7935543656349182, 0.8031964302062988, 0.8057059645652771, 0.8117818236351013, 0.7931581139564514], "val_loss": [1.2572532040732247, 1.021995987210955, 0.9590251105172294, 0.6341743980135236, 0.6974664585930961, 0.5690192665372577, 0.49616897106170654, 0.49857490403311594, 0.4664597340992519, 0.4649829013007028, 0.45813046182904926, 0.45839764390672955, 0.3954656294413975, 0.4364825572286333, 0.42143755299704416, 0.4084752287183489, 0.4554337348256792, 0.394535345690591], "val_accuracy": [0.4516666531562805, 0.5423333048820496, 0.5733333230018616, 0.7126666903495789, 0.6899999976158142, 0.7289999723434448, 0.7666666507720947, 0.7866666913032532, 0.7796666622161865, 0.784333348274231, 0.7900000214576721, 0.8016666769981384, 0.831333339214325, 0.7973333597183228, 0.8023333549499512, 0.8130000233650208, 0.7720000147819519, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 6, 2, 8, 7, 5, 4, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 0, 2, 0, 3, 1, 1, 2, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8162857294082642, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0740377890860575, 1.6088583987103382, 1.1975290558247156, 0.9426252898633315, 0.8023237237651917, 0.7680372453919964, 0.6949035816220339, 0.6620599935713256, 0.6340071655551063, 0.6216513023416144, 0.6004220328594259, 0.5802896362506104, 0.5709222121214146, 0.5402390773207236, 0.5445867728374543, 0.5071692368247648, 0.5012829498592196, 0.5326868152897104], "accuracy": [0.30682867765426636, 0.44168537855148315, 0.5881653428077698, 0.641791045665741, 0.6966054439544678, 0.7124554514884949, 0.7357020378112793, 0.7432307600975037, 0.7568352818489075, 0.7622507214546204, 0.7691190242767334, 0.7802139520645142, 0.7843085527420044, 0.7961959838867188, 0.7971205711364746, 0.8121780753135681, 0.8136309385299683, 0.7960638999938965], "val_loss": [1.2571032728467668, 1.1987828527178084, 0.86071058682033, 0.6565207242965698, 0.6641565561294556, 0.5719201394489833, 0.5092513731547764, 0.492241484778268, 0.4772010360445295, 0.45248488017490934, 0.4394663316862924, 0.4407104083469936, 0.3960985115596226, 0.48986549036843435, 0.4494764804840088, 0.4396300656454904, 0.4831101894378662, 0.3919581515448434], "val_accuracy": [0.45233333110809326, 0.6110000014305115, 0.6000000238418579, 0.7016666531562805, 0.687666654586792, 0.7246666550636292, 0.7593333125114441, 0.7753333449363708, 0.7793333530426025, 0.7986666560173035, 0.8133333325386047, 0.8080000281333923, 0.8320000171661377, 0.7829999923706055, 0.7826666831970215, 0.8053333163261414, 0.7850000262260437, 0.8246666789054871]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 3, 2, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 1, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8142856955528259, "mapping_values": [1, 25, 25, 15, 10, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad))))), grad)), grad)), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0740417810305787, 1.6071914102989906, 1.1522881066747204, 0.994660484682158, 0.7917012809179778, 0.7171478433505718, 0.6873790851484562, 0.7091635587256047, 0.6321980622088385, 0.6177911569791589, 0.6059684431422199, 0.5572044376951593, 0.5891619877351698, 0.5353154601626912, 0.5456504091185476, 0.518345776597475, 0.4858779616682458, 0.5232376959329866], "accuracy": [0.3066965937614441, 0.43970412015914917, 0.6096948981285095, 0.6387531161308289, 0.6947563290596008, 0.7238145470619202, 0.7413815855979919, 0.7246070504188538, 0.7543256878852844, 0.7633073329925537, 0.7651565074920654, 0.7917051911354065, 0.7755910754203796, 0.7964601516723633, 0.7950072884559631, 0.8009510040283203, 0.8170651197433472, 0.7968564033508301], "val_loss": [1.2572385243007116, 0.8812664236341204, 0.7657970530646188, 0.6141129902430943, 0.5702285596302578, 0.512044974735805, 0.5194093840462821, 0.5153932060514178, 0.5510574749537877, 0.4754677840641567, 0.43175710099084036, 0.45240470341273714, 0.39510221992220196, 0.45053725583212717, 0.45329248905181885, 0.4030428613935198, 0.46107384136744906, 0.397888720035553], "val_accuracy": [0.4506666660308838, 0.6710000038146973, 0.6759999990463257, 0.7136666774749756, 0.7403333187103271, 0.7630000114440918, 0.7643333077430725, 0.778333306312561, 0.7459999918937683, 0.7839999794960022, 0.809333324432373, 0.7993333339691162, 0.8349999785423279, 0.7916666865348816, 0.778333306312561, 0.8149999976158142, 0.7960000038146973, 0.8226666450500488]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 6, 2, 6, 7, 5, 4, 0, 4, 3, 1, 9, 2, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 1, 0, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8125714063644409, "mapping_values": [1, 30, 30, 19, 11, 5, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, grad))), tf.math.add(alpha, alpha)))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), tf.math.add(tf.math.negative(tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.074043957973909, 1.6193003257220653, 1.1767743467938205, 0.9686452621923005, 0.8130496655630319, 0.7471774248021263, 0.6848006525595175, 0.683882231741313, 0.6291507109596178, 0.6070290140314597, 0.6075951108654114, 0.5878519487891136, 0.5696629874222251, 0.5578340374640879, 0.5408635126317828, 0.5241736894616865, 0.5138403093416488, 0.5169801354219318], "accuracy": [0.30682867765426636, 0.44089287519454956, 0.5881653428077698, 0.6440364718437195, 0.6884163022041321, 0.7103421092033386, 0.7427024245262146, 0.7392682433128357, 0.759080708026886, 0.7732135653495789, 0.7642319202423096, 0.7788931727409363, 0.7840443849563599, 0.7877426743507385, 0.8013472557067871, 0.8031964302062988, 0.8067626357078552, 0.8021397590637207], "val_loss": [1.2573330061776298, 1.230855907712664, 0.9241374901362828, 0.6776866742542812, 0.5600012540817261, 0.5762220450810024, 0.5050144706453595, 0.490329384803772, 0.513275180544172, 0.5624676772526332, 0.4283017430986677, 0.43393763474055697, 0.40569951704570223, 0.49401884419577463, 0.46262666157313753, 0.4380333849361965, 0.4774144206728254, 0.38298986639295307], "val_accuracy": [0.45133334398269653, 0.5609999895095825, 0.6296666860580444, 0.7043333053588867, 0.746999979019165, 0.7396666407585144, 0.762666642665863, 0.7823333144187927, 0.7576666474342346, 0.7286666631698608, 0.8013333082199097, 0.8106666803359985, 0.8296666741371155, 0.778333306312561, 0.7860000133514404, 0.8023333549499512, 0.777999997138977, 0.8273333311080933]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 0, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8105714321136475, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.074038146808399, 1.6248992884777886, 1.2209421778556584, 0.9173788052854789, 0.7785192561533788, 0.7831268805349665, 0.6870116202775529, 0.6622011886139304, 0.6587165798162818, 0.6088440533972939, 0.5896851912449852, 0.5844024653211797, 0.5743574701626508, 0.5610692737093376, 0.5306080997289369, 0.5237256705942029, 0.5087845625185837, 0.5239038708943418, 0.48707689555676037, 0.469022656519179, 0.4997685957798916, 0.47177869490093294, 0.4574906628413081, 0.45584965447755366, 0.4398430844008915, 0.4217717096420122, 0.42784130981868806, 0.4098883118722039, 0.4029031479520852, 0.3964949674129864, 0.3897151199030823, 0.3959289076400392, 0.37707415224696195, 0.38781109000351355, 0.3538707291776037, 0.3694803980260934, 0.3524518990049021, 0.3395835602595239, 0.3504357362987028, 0.3533705952711991], "accuracy": [0.30682867765426636, 0.44168537855148315, 0.5736362338066101, 0.6567164063453674, 0.700171709060669, 0.7037379741668701, 0.7437590956687927, 0.7416457533836365, 0.7456082701683044, 0.7684586048126221, 0.7734777331352234, 0.78113853931427, 0.7821952104568481, 0.7828556299209595, 0.8068947196006775, 0.8030643463134766, 0.8054417967796326, 0.798309326171875, 0.8164047002792358, 0.8265751004219055, 0.8109893202781677, 0.8249900937080383, 0.8257825970649719, 0.8318583965301514, 0.8379341959953308, 0.8430854678153992, 0.8412362933158875, 0.8475762605667114, 0.8511425256729126, 0.8557654023170471, 0.8570862412452698, 0.8492933511734009, 0.8602562546730042, 0.8569541573524475, 0.8705587387084961, 0.8643507957458496, 0.8681812286376953, 0.8745211958885193, 0.872407853603363, 0.8701624870300293], "val_loss": [1.2572244235447474, 1.2883491516113281, 0.8538731166294643, 0.6362908908299038, 0.669245992388044, 0.564613972391401, 0.510095511163984, 0.48330278056008474, 0.4738813468388149, 0.46643837860652376, 0.4892148801258632, 0.4510899271283831, 0.4264575583594186, 0.45038739272526335, 0.4278396282877241, 0.4261268547603062, 0.46767192227499826, 0.3885210411889212, 0.3773599863052368, 0.41950641359601704, 0.36614527872630526, 0.35266758714403423, 0.3452185647828238, 0.383306017943791, 0.37714962448392597, 0.37415059975215365, 0.33224246331623625, 0.32497641869953703, 0.3201376029423305, 0.37827231202806744, 0.31343174832207815, 0.3361425059182303, 0.36111860615866526, 0.31332684414727346, 0.31200934307915823, 0.31168984515326364, 0.33127695322036743, 0.3159570268222264, 0.3278237836701529, 0.3137698343821934], "val_accuracy": [0.45100000500679016, 0.550000011920929, 0.625333309173584, 0.699999988079071, 0.6990000009536743, 0.7293333411216736, 0.7573333382606506, 0.7863333225250244, 0.7776666879653931, 0.7833333611488342, 0.765999972820282, 0.8016666769981384, 0.8096666932106018, 0.7903333306312561, 0.8006666898727417, 0.8096666932106018, 0.7886666655540466, 0.8286666870117188, 0.8286666870117188, 0.8213333487510681, 0.8450000286102295, 0.8496666550636292, 0.8506666421890259, 0.8413333296775818, 0.8309999704360962, 0.8393333554267883, 0.8650000095367432, 0.8643333315849304, 0.8683333396911621, 0.8550000190734863, 0.8686666488647461, 0.8566666841506958, 0.8389999866485596, 0.8696666955947876, 0.8709999918937683, 0.8673333525657654, 0.8603333234786987, 0.8683333396911621, 0.8633333444595337, 0.8693333268165588]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 6, 2, 2, 7, 5, 2, 0, 4, 2, 8, 0, 8, 2, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 0, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 2, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 5, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.4691428542137146, "mapping_values": [1, 30, 30, 18, 12, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad))))), tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3014782791392143, 2.299616386168952, 2.2990868444597683, 2.2988520778637866, 2.29749887809305, 2.2947883008257306, 2.293624749603745, 2.2937022842955925, 2.292614785577202, 2.2922409887027904, 2.2913133404620525, 2.2885904888419617, 2.2877679920750777, 2.2858149503688487, 2.286099190095381, 2.2859878157737974, 2.282722598384353, 2.2826834816454644, 2.2803569013227514, 2.2787028119517134, 2.280012015291193, 2.2777102086459324, 2.2776347020708134, 2.2750515378839413, 2.2757910402333494, 2.273557015445333, 2.2727639852119963, 2.271150136368701, 2.270182059283868, 2.2681590591549576, 2.266209619739005, 2.265905708952382, 2.264824320784712, 2.263545139134127, 2.2629234844966573, 2.260307628402085, 2.259501593727965, 2.2590608278742366, 2.2568768462673736, 2.256252805554651, 2.2560774784959805, 2.2537213915831313, 2.252976319415458, 2.251680259486672, 2.2508079261512743, 2.248201887447915, 2.245856208540524, 2.245340620474714, 2.2443098852489887, 2.243186806454682, 2.2412613046293672, 2.241373268935375, 2.2372541734020013, 2.2347180533481548, 2.2344880617683622, 2.2354088574037765, 2.2338374810463812, 2.229334748164459, 2.2318242065753164, 2.2283276413504507, 2.228014654660379, 2.2261282274074654, 2.223737886128031, 2.220891656813888, 2.2225056171984074, 2.217080774938331, 2.21518560209137, 2.215583006184036, 2.214321058786241, 2.2114372370879507, 2.2113668500093846, 2.208808709318297, 2.2070875087544555, 2.204350136558, 2.2058916833532676, 2.2002474359470257, 2.199166372798264, 2.1965157603386167, 2.195209695332086, 2.1935403688693045, 2.189787467961078, 2.1888116682052865, 2.187725024594292, 2.1851525729941086, 2.1840462265800666, 2.1804997028219324, 2.1785997470860248, 2.1789098210448774, 2.174415233569485, 2.174755483680728, 2.170890872630587, 2.167784381929941, 2.1660322906822653, 2.165166341775066, 2.1594396038393002, 2.156432548864816, 2.1573540214313853, 2.151793769920318, 2.1506938632642116, 2.145062528344949], "accuracy": [0.09259014576673508, 0.09536388516426086, 0.09549596905708313, 0.09708096832036972, 0.1022322028875351, 0.10936468094587326, 0.11451591551303864, 0.11768590658903122, 0.11702549457550049, 0.1158367469906807, 0.11702549457550049, 0.12574297189712524, 0.12851670384407043, 0.1310262829065323, 0.13142253458499908, 0.13419628143310547, 0.13776251673698425, 0.13895125687122345, 0.15189538896083832, 0.1438383311033249, 0.148064985871315, 0.15295206010341644, 0.15717871487140656, 0.160084530711174, 0.16721701622009277, 0.1710474193096161, 0.17131158709526062, 0.17355699837207794, 0.1795007288455963, 0.1814819723367691, 0.18584071099758148, 0.1806894689798355, 0.19336943328380585, 0.19416193664073944, 0.19561484456062317, 0.20076608657836914, 0.20512482523918152, 0.21014396846294403, 0.21476687490940094, 0.2133139669895172, 0.20961563289165497, 0.218465194106102, 0.22097477316856384, 0.22361643612384796, 0.21925769746303558, 0.2339189052581787, 0.2351076453924179, 0.23339056968688965, 0.23695680499076843, 0.2316734939813614, 0.24118345975875854, 0.23933430016040802, 0.25439175963401794, 0.2607317268848419, 0.25478801131248474, 0.2502971887588501, 0.258090078830719, 0.2670717239379883, 0.25439175963401794, 0.26958128809928894, 0.26244881749153137, 0.26363757252693176, 0.2771100103855133, 0.28001585602760315, 0.27327960729599, 0.28001585602760315, 0.28384625911712646, 0.2915070652961731, 0.28397834300994873, 0.29163914918899536, 0.284110426902771, 0.2938845455646515, 0.2965262234210968, 0.3055078685283661, 0.29705455899238586, 0.310130774974823, 0.3053757846355438, 0.31079116463661194, 0.3077532649040222, 0.31726324558258057, 0.320169061422348, 0.3237352967262268, 0.3187161684036255, 0.3206973969936371, 0.3156782388687134, 0.32901862263679504, 0.33020737767219543, 0.3203011453151703, 0.33205652236938477, 0.32479196786880493, 0.33747193217277527, 0.3415665030479431, 0.34381189942359924, 0.34222692251205444, 0.3435477614402771, 0.35068023204803467, 0.3443402349948883, 0.3481706380844116, 0.3471139967441559, 0.3599260449409485], "val_loss": [1.9699057851518904, 1.9688423020499093, 1.9677681241716658, 1.9667019162859236, 1.9656458582196916, 1.9645895957946777, 1.9635247503008162, 1.9624748911176408, 1.9614246913364954, 1.9603780337742396, 1.9593256541660853, 1.9582712990897042, 1.9572256633213587, 1.9561800275530135, 1.9551218577793665, 1.954069001334054, 1.9530143737792969, 1.9519600187029158, 1.95088563646589, 1.9498168400355749, 1.9487660271780831, 1.9477128301348006, 1.9466503688267298, 1.9455787113734655, 1.9445101193019323, 1.943432194846017, 1.942352363041469, 1.9412696702139718, 1.9401840482439314, 1.939093726021903, 1.9379918234688895, 1.9368723460606165, 1.9357472828456335, 1.9346207209995814, 1.9334850311279297, 1.9323372159685408, 1.9311810220990862, 1.9300223759242467, 1.928849356515067, 1.927671228136335, 1.9264869008745467, 1.9253026417323522, 1.924103123801095, 1.9228957721165247, 1.9216700962611608, 1.9204256875174386, 1.9191639082772392, 1.917900902884347, 1.9166253634861536, 1.9153401511056083, 1.9140333448137556, 1.9127253804888045, 1.9113784517560686, 1.910017830984933, 1.9086494445800781, 1.9072842597961426, 1.9058878762381417, 1.9044577053615026, 1.9030428613935197, 1.9015867369515556, 1.9001267296927316, 1.8986635208129883, 1.8971616881234306, 1.895641599382673, 1.8941266877310616, 1.892556939806257, 1.8909727505275182, 1.8893787520272392, 1.8877763066973006, 1.8861305373055595, 1.8844989367893763, 1.8828294617789132, 1.881136349269322, 1.8794092450823103, 1.8776989664350237, 1.8759197507585799, 1.874120099203927, 1.8722825731549944, 1.8704346248081751, 1.8685667855398995, 1.8666676793779646, 1.8647394861493791, 1.8628035272870744, 1.8608316012791224, 1.8588389669145857, 1.8568035534449987, 1.8547496795654297, 1.8526641981942313, 1.850532395499093, 1.848407404763358, 1.8462451526096888, 1.8440289497375488, 1.8418107713971819, 1.8395870753696986, 1.8372738020760673, 1.834937913077218, 1.8325906481061662, 1.8301869801112585, 1.8277783393859863, 1.8253036907741003], "val_accuracy": [0.0403333343565464, 0.04833333194255829, 0.05766666680574417, 0.06499999761581421, 0.07233333587646484, 0.0833333358168602, 0.09333333373069763, 0.10466666519641876, 0.11766666918992996, 0.12666666507720947, 0.1353333294391632, 0.14233332872390747, 0.15266667306423187, 0.16200000047683716, 0.17133332788944244, 0.18400000035762787, 0.19333332777023315, 0.20333333313465118, 0.21133333444595337, 0.22066666185855865, 0.2280000001192093, 0.23766666650772095, 0.24666666984558105, 0.25200000405311584, 0.2603333294391632, 0.27000001072883606, 0.2773333191871643, 0.28466665744781494, 0.289000004529953, 0.2933333218097687, 0.29866665601730347, 0.30433332920074463, 0.30933332443237305, 0.3153333365917206, 0.31933334469795227, 0.32366666197776794, 0.328000009059906, 0.3310000002384186, 0.3356666564941406, 0.33899998664855957, 0.34333333373069763, 0.3466666638851166, 0.3490000069141388, 0.3513333201408386, 0.3556666672229767, 0.35766667127609253, 0.359333336353302, 0.3619999885559082, 0.3659999966621399, 0.36666667461395264, 0.367333322763443, 0.36899998784065247, 0.3713333308696747, 0.3733333349227905, 0.3763333261013031, 0.3776666522026062, 0.3790000081062317, 0.3799999952316284, 0.38233333826065063, 0.3840000033378601, 0.38499999046325684, 0.3876666724681854, 0.390666663646698, 0.3930000066757202, 0.39399999380111694, 0.3970000147819519, 0.3996666669845581, 0.40066665410995483, 0.40299999713897705, 0.40533334016799927, 0.40700000524520874, 0.4099999964237213, 0.41100001335144043, 0.4126666784286499, 0.4126666784286499, 0.4129999876022339, 0.41600000858306885, 0.4176666736602783, 0.41866666078567505, 0.4193333387374878, 0.4216666519641876, 0.42399999499320984, 0.42633333802223206, 0.4269999861717224, 0.42933332920074463, 0.4300000071525574, 0.4323333203792572, 0.43433332443237305, 0.43566668033599854, 0.437333345413208, 0.4403333365917206, 0.4423333406448364, 0.4436666667461395, 0.4466666579246521, 0.44866666197776794, 0.4490000009536743, 0.4503333270549774, 0.45233333110809326, 0.45366665720939636, 0.45633333921432495]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 3, 1, 9, 0, 9, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 2, 3, 1, 2, 1, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 0, 9, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 1, 1, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 14, 8, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), grad), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.subtract(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.302475551966238, 2.303298647881436, 2.306230199114994, 2.3095913134577284, 2.3120757986163705, 2.3140396128682066, 2.317845407053149, 2.3245034654615044, 2.3321033107952562, 2.3472454519540156, 2.3894488367469413, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.08889182657003403, 0.08387266844511032, 0.07858935743570328, 0.07357019931077957, 0.07290978729724884, 0.08149518072605133, 0.07872143387794495, 0.07792893797159195, 0.07515519857406616, 0.07845727354288101, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720093863351005, 1.9733998434884208, 1.975156239100865, 1.9771710804530553, 1.9793457984924316, 1.9820034163338798, 1.9848553793770927, 1.988527502332415, 1.9948836054120744, 2.0091712134225026, 2.1010046686444963, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029333332553505898, 0.02133333310484886, 0.020999999716877937, 0.02133333310484886, 0.024666666984558105, 0.03166666626930237, 0.041999999433755875, 0.06566666811704636, 0.08666666597127914, 0.09933333098888397, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 8, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 0, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [90, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 16, 9, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))))), tf.math.pow(tf.math.square(grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 2, 8, 0, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 0, 0, 5, 2, 2, 1, 4, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 1, 7, 3, 3, 0, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(alpha)), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, alpha)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(alpha))", "other_info": {"loss": [2.302475551966238, 2.3032989402441473, 2.306230055263974, 2.309591057057772, 2.312084705538958, 2.31405131335996, 2.3178633788258347, 2.3245227412147105, 2.3321288486025225, 2.3473055191705128, 2.3897107903983503, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.08889182657003403, 0.08387266844511032, 0.07858935743570328, 0.07357019931077957, 0.07277770340442657, 0.08149518072605133, 0.07858935743570328, 0.07792893797159195, 0.07515519857406616, 0.07845727354288101, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720095225742884, 1.9733999116080148, 1.9751571246555872, 1.9771782330104284, 1.9793572425842285, 1.9820122718811035, 1.9848681858607702, 1.9885440553937639, 1.994910648890904, 2.0092415809631348, 2.1023150171552385, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029333332553505898, 0.02133333310484886, 0.020999999716877937, 0.02133333310484886, 0.02433333359658718, 0.03133333474397659, 0.041999999433755875, 0.06566666811704636, 0.08666666597127914, 0.09933333098888397, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 2, 7, 3, 4, 0, 0, 4, 1, 9, 0, 2, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 2, 2, 1, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 2, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [96, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [133167905.45089346, 2548109086.1952186, 11855871698.656452, 33025202056.165897, 70528717798.16669, 130083194299.22388], "accuracy": [0.09747721254825592, 0.09840179979801178, 0.09866596013307571, 0.09813763201236725, 0.09655263274908066, 0.10566636174917221], "val_loss": [506194249.14285713, 4046995309.714286, 13655752118.857143, 32365860571.42857, 63210836553.14286, 109223510016.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 0, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [1, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.059833575040102005, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 6, 2, 0, 5, 5, 4, 0, 0, 2, 8, 0, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 0, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 6, 6, 2, 0, 5, 1, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 2, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [31, 70, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, alpha))), beta), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303130536078777, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 2, 8, 0, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 6, 6, 2, 5, 5, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 2, 3, 1, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 7, 3, 3, 0, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(grad))), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303130536078777, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 2, 8, 0, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 3, 0, 8, 4, 2, 2, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 2, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [14610287.981635755, 279226924.9377889, 1298727772.5975432, 3617102440.9562807, 7724014759.307885, 14245374049.382116], "accuracy": [0.09734513610601425, 0.09840179979801178, 0.09866596013307571, 0.09813763201236725, 0.09655263274908066, 0.10566636174917221], "val_loss": [55496124.571428575, 443378322.28571427, 1495740854.857143, 3544682642.285714, 6922299245.714286, 11960675766.857143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 6, 2, 6, 7, 5, 2, 0, 4, 3, 3, 9, 0, 4, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 1, 0, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 6, 6, 2, 0, 0, 1, 8, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 2, 3, 3, 2, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 18, 12, 4, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad)))))), tf.math.multiply(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1877.2135649262764, 33403.48177358506, 152815.45747135452, 422685.12844241183, 899271.5518425571, 1654632.0299498085], "accuracy": [0.09708096832036972, 0.09879804402589798, 0.09866596013307571, 0.09813763201236725, 0.09668471664190292, 0.10566636174917221], "val_loss": [6802.740094866072, 52478.89174107143, 175233.1830357143, 413257.72321428574, 804746.5714285715, 1387893.4285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 2, 8, 0, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 6, 6, 2, 0, 4, 1, 8, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 2, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [33, 67, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303130536078777, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 6, 6, 3, 7, 5, 4, 0, 4, 2, 8, 0, 9, 2, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 4, 2, 0, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [90, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 15, 15, 8, 7, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))), tf.math.add(alpha, tf.math.negative(alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3019566631997344, 2.301253691797857, 2.301884377810461, 2.302810971070243, 2.302578356917571, 2.3010203803078437], "accuracy": [0.09153348207473755, 0.09298639744520187, 0.08968432247638702, 0.08809932321310043, 0.08981640636920929, 0.09232597798109055], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 6, 7, 5, 4, 0, 4, 2, 8, 0, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 3, 8, 2, 4, 2, 0, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 4, 2, 0, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [50, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 23, 23, 14, 9, 0, 15, 15, 10, 5, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), alpha))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3019566631997344, 2.301253691797857, 2.301884377810461, 2.302810971070243, 2.302578356917571, 2.3010203803078437], "accuracy": [0.09153348207473755, 0.09298639744520187, 0.08968432247638702, 0.08809932321310043, 0.08981640636920929, 0.09232597798109055], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]