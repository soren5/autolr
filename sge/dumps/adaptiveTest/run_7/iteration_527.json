[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8285714387893677, "mapping_values": [1, 3, 3, 1, 2, 1, 16, 16, 11, 5, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), grad), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9848830681340948, 1.4034457909763292, 1.007818963722609, 0.9233827797366077, 0.8179117917479178, 0.7475527899376453, 0.7451155339611866, 0.7397781922407531, 0.6827460204951908, 0.6551643449081453, 0.6435574041838187, 0.6272226823807519, 0.598530254068313, 0.6340667000378695, 0.5791341105409349, 0.5943547155186012, 0.5753127205263212, 0.5500893629915159, 0.5274916161178929, 0.5344667760703259, 0.518556021113579, 0.5298404513238648, 0.509948191239991, 0.5086691120454679, 0.4876234877370903, 0.4995306337655984, 0.4680135363341165, 0.4688496414924798, 0.4705337552055313, 0.4604089474082859, 0.4420917519898289, 0.4439453741247943, 0.4288771986103234, 0.43850570159376634, 0.4165408044695272, 0.4184950806398307, 0.41349323287364154, 0.39566464475542407, 0.39661503279796445, 0.38087836235836436, 0.3986313105448283, 0.4031063196697192, 0.39667504299601797, 0.36714275109848216, 0.3805575752459843, 0.3684148784318951, 0.3559096901959369, 0.35961426349127723], "accuracy": [0.33681151270866394, 0.5180293321609497, 0.6310923099517822, 0.6579051613807678, 0.6975300312042236, 0.7197200059890747, 0.7156254053115845, 0.718399167060852, 0.7354378700256348, 0.7446836829185486, 0.7559106945991516, 0.7600052952766418, 0.7724210619926453, 0.7611940503120422, 0.7751948237419128, 0.7749306559562683, 0.7802139520645142, 0.7926297783851624, 0.7981772422790527, 0.7998943328857422, 0.8075551390647888, 0.8020076751708984, 0.813498854637146, 0.809140145778656, 0.8187822103500366, 0.8133667707443237, 0.8255184292793274, 0.8248580098152161, 0.8227446675300598, 0.8315942287445068, 0.8367455005645752, 0.835160493850708, 0.847840428352356, 0.8347642421722412, 0.8450667262077332, 0.8453308939933777, 0.8457271456718445, 0.8524633646011353, 0.8555012345314026, 0.860652506351471, 0.8540483713150024, 0.8475762605667114, 0.8524633646011353, 0.8673887252807617, 0.8582749962806702, 0.8625016212463379, 0.86553955078125, 0.8683133125305176], "val_loss": [1.52927143233163, 0.9038618973323277, 0.8091502359935215, 0.6940521512712751, 0.6069620336805072, 0.562212347984314, 0.680126258305141, 0.5264854942049298, 0.5005154950278146, 0.5299557106835502, 0.5048994847706386, 0.47025110040392193, 0.46585358892168316, 0.4395463296345302, 0.4475333179746355, 0.4383347119603838, 0.4300443274634225, 0.4212205580302647, 0.4325356142861502, 0.43788221904209684, 0.41562714747020174, 0.39900987488882883, 0.4203405039651053, 0.3937858428273882, 0.39132010085242136, 0.3815083418573652, 0.381608784198761, 0.40502562693187166, 0.37381140674863544, 0.3814115524291992, 0.3526307855333601, 0.36086266381399973, 0.3603805388723101, 0.35874256917408537, 0.3357673627989633, 0.34032764605113436, 0.33785389150891987, 0.3362728272165571, 0.33010848079408917, 0.32414054019110544, 0.32935966764177593, 0.3393137454986572, 0.3231493149484907, 0.3260994383266994, 0.32778364419937134, 0.3200370328766959, 0.3356680529458182, 0.384045021874564], "val_accuracy": [0.46933332085609436, 0.6256666779518127, 0.6466666460037231, 0.687333345413208, 0.7183333039283752, 0.7323333621025085, 0.6809999942779541, 0.7576666474342346, 0.768666684627533, 0.765999972820282, 0.7633333206176758, 0.7943333387374878, 0.7893333435058594, 0.8073333501815796, 0.8026666641235352, 0.7983333468437195, 0.8056666851043701, 0.8149999976158142, 0.8066666722297668, 0.8023333549499512, 0.8130000233650208, 0.8153333067893982, 0.7983333468437195, 0.8256666660308838, 0.8360000252723694, 0.8353333473205566, 0.8326666951179504, 0.8223333358764648, 0.8363333344459534, 0.8309999704360962, 0.8473333120346069, 0.8396666646003723, 0.8416666388511658, 0.8450000286102295, 0.8543333411216736, 0.8526666760444641, 0.8566666841506958, 0.8523333072662354, 0.8643333315849304, 0.8650000095367432, 0.8616666793823242, 0.8603333234786987, 0.8673333525657654, 0.8666666746139526, 0.8566666841506958, 0.8579999804496765, 0.8573333621025085, 0.8383333086967468]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8102856874465942, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.984954891833395, 1.4014923502472745, 1.0062376870108853, 0.9095235312729779, 0.8368806499358512, 0.749305508376396, 0.737561567143647, 0.7309436123400411, 0.6887301974969848, 0.6412838915902485, 0.648496197340999, 0.6184839079912549, 0.620513889138032, 0.6131156980007268, 0.5809212260321226, 0.5873294671245334, 0.5817728436712765, 0.5544370098152432, 0.529140332639178, 0.5331404191659442, 0.5215195207831378, 0.5273623020893642, 0.509735117912324, 0.5097102429479137, 0.48942802426616955, 0.49696022963338066, 0.4697469609556197, 0.4722512318016972, 0.4695431671051569, 0.45552874691198847], "accuracy": [0.33681151270866394, 0.520142674446106, 0.6313564777374268, 0.6621318459510803, 0.6907938122749329, 0.7187954187393188, 0.7174745798110962, 0.7214370369911194, 0.7322678565979004, 0.7564390301704407, 0.748778223991394, 0.7621186375617981, 0.767930269241333, 0.7716285586357117, 0.7753269076347351, 0.7769119143486023, 0.7777044177055359, 0.7880068421363831, 0.7998943328857422, 0.7994980812072754, 0.804649293422699, 0.802271842956543, 0.8115176558494568, 0.8096684813499451, 0.8173292875289917, 0.8148196935653687, 0.824329674243927, 0.8241975903511047, 0.8197067975997925, 0.830669641494751], "val_loss": [1.5294736112867082, 0.9121925149645124, 0.7995014020374843, 0.7440445593425206, 0.6141396250043597, 0.5971119744437081, 0.6014314038412911, 0.5262513841901507, 0.49580720492771696, 0.535325459071568, 0.5120045968464443, 0.4880891186850412, 0.44871555055890766, 0.4485952513558524, 0.44842190401894705, 0.4359018462044852, 0.4312859773635864, 0.4214234692709787, 0.419620828969138, 0.43493559530803133, 0.4270818403788975, 0.4026405726160322, 0.41570583411625456, 0.3944266268185207, 0.38764009305409025, 0.3869660496711731, 0.37907109941755024, 0.40895538670676096, 0.37060695035117014, 0.37976793731961933], "val_accuracy": [0.46933332085609436, 0.6200000047683716, 0.6456666588783264, 0.6650000214576721, 0.7003333568572998, 0.7129999995231628, 0.7203333377838135, 0.762333333492279, 0.7766666412353516, 0.7649999856948853, 0.762666642665863, 0.7733333110809326, 0.7960000038146973, 0.8069999814033508, 0.8023333549499512, 0.8046666383743286, 0.8013333082199097, 0.8140000104904175, 0.8163333535194397, 0.8029999732971191, 0.8083333373069763, 0.815666675567627, 0.8053333163261414, 0.8243333101272583, 0.8356666564941406, 0.82833331823349, 0.8330000042915344, 0.8203333616256714, 0.8333333134651184, 0.831333339214325]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 5, 6, 2, 2, 0, 0, 1, 0, 0, 2, 0, 6, 2, 9, 2, 4, 8, 9, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [2, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 15, 8, 2, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9843197271509287, 1.3736597790835856, 1.0144900344996137, 0.8985118908479686, 0.8331810488141586, 0.7569631498959937, 0.7532545876792708, 0.7332201421126997, 0.6894493798113077, 0.6553057546802028, 0.6438003374585197, 0.6271474678061972, 0.6198709438804779, 0.6169707939735319, 0.5804714507525072, 0.5919292573018112, 0.5846953704262359, 0.5553672119547993, 0.531320159256718, 0.5432575228050196, 0.5369243290658641, 0.5289112488591455, 0.5129933788114771, 0.5159776512705151, 0.4970502543443104, 0.4912205264080533, 0.47439522993421324, 0.47888192745042973, 0.4855650468643205, 0.465311470938365, 0.4527014228787798, 0.4478053691726965, 0.4398958918999813, 0.44662489386487236, 0.4234511641825604, 0.42343136395020586, 0.4292225368136916, 0.4084195162342713, 0.4114705950765719, 0.40155576597571985], "accuracy": [0.3377360999584198, 0.5288601517677307, 0.6280544400215149, 0.665830135345459, 0.6876237988471985, 0.7186633348464966, 0.711530864238739, 0.7207766771316528, 0.7304186820983887, 0.7465327978134155, 0.7536653280258179, 0.7607977986335754, 0.7658169269561768, 0.7648923397064209, 0.7778365015983582, 0.7721568942070007, 0.7757231593132019, 0.7902522683143616, 0.7965922355651855, 0.7928939461708069, 0.7972526550292969, 0.8016114234924316, 0.8133667707443237, 0.8055738806724548, 0.8115176558494568, 0.8177255392074585, 0.8230088353157043, 0.819970965385437, 0.8158763647079468, 0.8226125836372375, 0.8285563588142395, 0.8335754871368408, 0.8429533839225769, 0.8318583965301514, 0.8433496356010437, 0.8436138033866882, 0.8392550349235535, 0.846387505531311, 0.847840428352356, 0.8537842035293579], "val_loss": [1.5305355957576208, 0.9247209344591413, 0.8791158880506244, 0.6811496189662388, 0.6315031903130668, 0.6028118133544922, 0.6112196786063058, 0.5340229613440377, 0.49907006536211285, 0.5288846663066319, 0.5147038187299456, 0.4685094356536865, 0.47450642926352365, 0.43999126127787996, 0.45513483456202913, 0.43545260599681307, 0.433835506439209, 0.42243662902287077, 0.4184197613171169, 0.4224014026778085, 0.41851310219083515, 0.399094249520983, 0.4202668922288077, 0.396175069468362, 0.3866338644708906, 0.3883230686187744, 0.3865955386843, 0.4182145254952567, 0.37227300235203337, 0.37089957509722027, 0.3610904557364328, 0.3651054586683001, 0.3714238234928676, 0.36630570888519287, 0.34086722135543823, 0.352057831627982, 0.3425049100603376, 0.35539673055921284, 0.34018023524965557, 0.3370661309787205], "val_accuracy": [0.47833332419395447, 0.5956666469573975, 0.606333315372467, 0.6740000247955322, 0.706333339214325, 0.6919999718666077, 0.7116666436195374, 0.7596666812896729, 0.7736666798591614, 0.762666642665863, 0.7663333415985107, 0.7896666526794434, 0.7803333401679993, 0.8140000104904175, 0.7906666398048401, 0.8036666512489319, 0.8053333163261414, 0.8173333406448364, 0.8163333535194397, 0.8190000057220459, 0.8169999718666077, 0.8196666836738586, 0.7996666431427002, 0.8296666741371155, 0.8343333601951599, 0.8320000171661377, 0.831333339214325, 0.8130000233650208, 0.8366666436195374, 0.8389999866485596, 0.8456666469573975, 0.8356666564941406, 0.8366666436195374, 0.8370000123977661, 0.859333336353302, 0.8479999899864197, 0.8553333282470703, 0.8433333039283752, 0.8519999980926514, 0.8586666584014893]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 1, 2, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 2, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.8031428456306458, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.984220805641777, 1.3727352331500595, 1.0155574550576387, 0.903987543615352, 0.8281045491590538, 0.7552263287032962, 0.7548270325351464, 0.7346632119655421, 0.6855675921684495, 0.6476147449673159, 0.645236030695319, 0.6249339741533774, 0.6303250495122487, 0.617808466054634, 0.5870554990551774, 0.5881939426688407, 0.5871495292360253, 0.5523467316068221, 0.533158365304932, 0.5384422706622395, 0.5278593159512349, 0.5406859533708991, 0.5102810561460133, 0.5174555389116847, 0.49899452409456435, 0.49194444114694885, 0.4727724828283627, 0.480713144773348, 0.47811118861813634, 0.463720475331494], "accuracy": [0.33760401606559753, 0.5288601517677307, 0.6302998065948486, 0.6642451286315918, 0.6848500967025757, 0.7165499925613403, 0.7066437602043152, 0.7214370369911194, 0.7353057861328125, 0.757099449634552, 0.7512878179550171, 0.7588165402412415, 0.7629110813140869, 0.765949010848999, 0.7714964747428894, 0.7729493975639343, 0.7757231593132019, 0.7906485199928284, 0.7976489067077637, 0.796328067779541, 0.8033285140991211, 0.7944789528846741, 0.8129705190658569, 0.8061022162437439, 0.8115176558494568, 0.8190463781356812, 0.8238013386726379, 0.8197067975997925, 0.8165367841720581, 0.8255184292793274], "val_loss": [1.5312793595450265, 0.9230504376547677, 0.883260829108102, 0.6726867130824498, 0.6087005138397217, 0.5819317953927177, 0.6157418148858207, 0.5156388282775879, 0.49857539790017263, 0.549513442175729, 0.5163178784506661, 0.49456325599125456, 0.5016388552529472, 0.44301533699035645, 0.44844634192330496, 0.4344638075147356, 0.43159884214401245, 0.42423694474356516, 0.4329431142125811, 0.44955536297389437, 0.43238177469798494, 0.3974862354142325, 0.423103392124176, 0.3995603493281773, 0.3822901589529855, 0.39500121559415546, 0.3818389858518328, 0.4155008792877197, 0.37283030578068327, 0.37932691403797697], "val_accuracy": [0.47733333706855774, 0.5976666808128357, 0.609666645526886, 0.6893333196640015, 0.7089999914169312, 0.6913333535194397, 0.7106666564941406, 0.7666666507720947, 0.7763333320617676, 0.7543333172798157, 0.7593333125114441, 0.7806666493415833, 0.7563333511352539, 0.8043333292007446, 0.8009999990463257, 0.8046666383743286, 0.8046666383743286, 0.8149999976158142, 0.8100000023841858, 0.7996666431427002, 0.8069999814033508, 0.8199999928474426, 0.7983333468437195, 0.8256666660308838, 0.8370000123977661, 0.828000009059906, 0.8256666660308838, 0.8146666884422302, 0.8333333134651184, 0.8326666951179504]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [53, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 6, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 58, 44, 92]], "fitness": -0.800000011920929, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 10, 8, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, grad)))))), tf.math.negative(tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1064287728763227, 1.712966195816818, 1.3608722796513812, 1.026406532525229, 0.8909589700758056, 0.8586159403203516, 0.7324895872541973, 0.7298871024079122, 0.703310337064761, 0.6457706043245046, 0.6328481837050192, 0.6212654269256486, 0.5795741071475574, 0.5951500871650389, 0.5815651018968143, 0.5651231268692671, 0.5521113959364589, 0.5269029330205861, 0.5044883948118144, 0.507112667537274, 0.4946846717092985, 0.49095096404384614], "accuracy": [0.2911108136177063, 0.4325716495513916, 0.538237988948822, 0.6244881749153137, 0.6744155287742615, 0.6760005354881287, 0.7172104120254517, 0.7238145470619202, 0.7284374833106995, 0.7541936039924622, 0.7630431652069092, 0.7630431652069092, 0.7796856164932251, 0.774270236492157, 0.7824593782424927, 0.7837802171707153, 0.791969358921051, 0.8010830879211426, 0.8087438941001892, 0.81548011302948, 0.8138951063156128, 0.8158763647079468], "val_loss": [1.4846903596605574, 1.3673764637538366, 0.7232734986713955, 0.6969682489122663, 0.7420452662876674, 0.5937306029456002, 0.5978777919496808, 0.4889930146081107, 0.4919333798544748, 0.5077874319893974, 0.4707790953772409, 0.44411589418138775, 0.48058686937604633, 0.42784049681254793, 0.42805035625185284, 0.4168799604688372, 0.3947629928588867, 0.40007959944861277, 0.39470252820423674, 0.4412496430533273, 0.3873798166002546, 0.3941833291734968], "val_accuracy": [0.42500001192092896, 0.4690000116825104, 0.6756666898727417, 0.6943333148956299, 0.6766666769981384, 0.7046666741371155, 0.7163333296775818, 0.7866666913032532, 0.7673333287239075, 0.7766666412353516, 0.7826666831970215, 0.8086666464805603, 0.7760000228881836, 0.8100000023841858, 0.7983333468437195, 0.8050000071525574, 0.8289999961853027, 0.8230000138282776, 0.8270000219345093, 0.8003333210945129, 0.8226666450500488, 0.8209999799728394]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 5, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 4, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.7971428632736206, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 3, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.add(beta, beta)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.282289421018309, 2.2282132250584663, 2.140772010923896, 1.9912068638520044, 1.7712708863725815, 1.5364229445916597, 1.3554563654128822, 1.2307901122960212, 1.129379197701235, 1.0668635196721061, 1.00658838730982, 0.9659956142713743, 0.9381054821991885, 0.8936857677343704, 0.8863767919098271, 0.8559572664486214, 0.8472623921671973, 0.8287251086802515, 0.8075758157987574, 0.8030331136213239, 0.7774568509668203, 0.773375690077841, 0.7621481705492892, 0.7482759429951543, 0.747395329274805, 0.7395937929552119, 0.7255719801800488, 0.7227500053743849, 0.7201050926334964, 0.7122236712969935, 0.7024308364499341, 0.6973874482732517, 0.6837421390736628, 0.6888947218101511, 0.675550590668687, 0.6784802923632682, 0.6648695767358813, 0.6620562964379433, 0.6699376658929762, 0.6538089851441243, 0.6477591831213951, 0.6443602314809089, 0.6425220756687587, 0.6351989513501011, 0.642145989979137, 0.6317875669412232, 0.6345575312030723, 0.6220417528372273, 0.6198116857866018, 0.6275650531136207, 0.6176546650823428, 0.6216416999947645, 0.6041352869560217, 0.6044641621297676, 0.6054697321500792, 0.603449790894379, 0.6071211597419072, 0.6057091583082658, 0.5925415883431455, 0.5980041890474375, 0.5908519278868802, 0.5917982623766379, 0.5876613441176182, 0.5886937025877872, 0.5853151246037356, 0.5682609500335176, 0.5749357546309533, 0.5788266752862408, 0.5710531290905461, 0.5706241872678769, 0.5678580388842068], "accuracy": [0.14568749070167542, 0.2565050721168518, 0.3575485348701477, 0.42504292726516724, 0.4633469879627228, 0.5123497843742371, 0.5460308790206909, 0.5810328722000122, 0.6082419753074646, 0.6250165104866028, 0.6509047746658325, 0.6610751748085022, 0.667811393737793, 0.685510516166687, 0.6847180128097534, 0.6956809163093567, 0.6968696117401123, 0.7047945857048035, 0.7111346125602722, 0.7091533541679382, 0.7193237543106079, 0.7220974564552307, 0.7252674698829651, 0.7296261787414551, 0.7236824631690979, 0.7275128960609436, 0.7304186820983887, 0.737022876739502, 0.7362303733825684, 0.7425703406333923, 0.7474573850631714, 0.7442874312400818, 0.7486461400985718, 0.7523444890975952, 0.7540615797042847, 0.7516840696334839, 0.7586844563484192, 0.7580240368843079, 0.7567031979560852, 0.7625148296356201, 0.7611940503120422, 0.7626469135284424, 0.7648923397064209, 0.7695152759552002, 0.763439416885376, 0.7703077793121338, 0.7738739848136902, 0.7728173136711121, 0.7718927264213562, 0.7697794437408447, 0.7798177003860474, 0.7716285586357117, 0.7755910754203796, 0.7781006693840027, 0.7803460359573364, 0.7745344042778015, 0.7828556299209595, 0.7849689722061157, 0.7862898111343384, 0.7790252566337585, 0.7833839654922485, 0.7841764688491821, 0.7898560166358948, 0.7841764688491821, 0.7819310426712036, 0.7927618622779846, 0.7889314293861389, 0.7882710099220276, 0.7932901978492737, 0.7869502305984497, 0.7938185334205627], "val_loss": [1.9246256010872977, 1.861391203744071, 1.750120026724679, 1.5661144597189767, 1.3259753840310233, 1.1109846660069056, 0.9586172785077777, 0.8611298288617816, 0.7975896937506539, 0.7468469142913818, 0.7111120564596993, 0.682604227747236, 0.6618401323046003, 0.6434703384126935, 0.628116284097944, 0.6164309978485107, 0.608284558568682, 0.5929234027862549, 0.5869041000093732, 0.5750688144138881, 0.567992125238691, 0.5603216886520386, 0.5572541952133179, 0.5501504284994942, 0.5422796862465995, 0.5390033892222813, 0.5357886723109654, 0.5310086182185582, 0.5256930930273873, 0.5156652586800712, 0.5108256340026855, 0.5133788415363857, 0.5087254217692784, 0.5049750464303153, 0.4976194756371634, 0.49517514024462017, 0.5082324743270874, 0.4962975297655378, 0.48544653824397493, 0.4852707896913801, 0.482991133417402, 0.4810772453035627, 0.4792577028274536, 0.4754077536719186, 0.47356132098606657, 0.47252789565495085, 0.46926908833639963, 0.4681649889264788, 0.46539623396737234, 0.4634533439363752, 0.4650862898145403, 0.46279064246586393, 0.46060546806880404, 0.4596007892063686, 0.45402140276772635, 0.4572743688310896, 0.4555772713252476, 0.45393294947487967, 0.45033580916268484, 0.4480711391993931, 0.4463256852967398, 0.44497922488621305, 0.4445269703865051, 0.4439473067011152, 0.44101876871926443, 0.43773651123046875, 0.44196033477783203, 0.4374785763876779, 0.4393432651247297, 0.4388891969408308, 0.43686566182545256], "val_accuracy": [0.34833332896232605, 0.44066667556762695, 0.5163333415985107, 0.559333324432373, 0.5956666469573975, 0.628333330154419, 0.6613333225250244, 0.6840000152587891, 0.6946666836738586, 0.7043333053588867, 0.7103333473205566, 0.7243333458900452, 0.7300000190734863, 0.7273333072662354, 0.7296666502952576, 0.7386666536331177, 0.7453333139419556, 0.7476666569709778, 0.75, 0.7526666522026062, 0.7580000162124634, 0.7519999742507935, 0.7570000290870667, 0.7580000162124634, 0.7706666588783264, 0.7670000195503235, 0.7723333239555359, 0.762666642665863, 0.7720000147819519, 0.7736666798591614, 0.7786666750907898, 0.7733333110809326, 0.778333306312561, 0.7726666927337646, 0.7876666784286499, 0.7820000052452087, 0.7710000276565552, 0.7816666960716248, 0.7863333225250244, 0.7903333306312561, 0.7823333144187927, 0.781333327293396, 0.793666660785675, 0.7916666865348816, 0.7923333048820496, 0.7929999828338623, 0.7863333225250244, 0.7943333387374878, 0.7919999957084656, 0.7990000247955322, 0.800000011920929, 0.7960000038146973, 0.796999990940094, 0.7940000295639038, 0.8043333292007446, 0.7943333387374878, 0.7986666560173035, 0.8046666383743286, 0.8016666769981384, 0.8086666464805603, 0.8003333210945129, 0.8009999990463257, 0.8066666722297668, 0.8090000152587891, 0.8033333420753479, 0.8133333325386047, 0.8059999942779541, 0.8069999814033508, 0.8059999942779541, 0.8023333549499512, 0.8119999766349792]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 5, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.7951428294181824, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 4, 3, 2, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.282396163229992, 2.2286071225935835, 2.1416422754246653, 1.9922554253461164, 1.7716065194738728, 1.5354572293812243, 1.354219354438177, 1.2296700871237958, 1.1284443119088372, 1.0660265202472523, 1.0059941700184745, 0.9653192821069873, 0.9379482974371245, 0.8935616699821992, 0.8860594994198959, 0.8558774060340778, 0.8474126480605387, 0.8287625313356268, 0.807869590756884, 0.8030221973742792, 0.7780192391259275, 0.773439213277295, 0.7626681889068685, 0.7487874563816375, 0.747581919729749, 0.7398160426860094, 0.7260977844473331, 0.723791570435772, 0.7206733143639807, 0.7126341240438472, 0.7032827014589921, 0.6977377513522217, 0.6844539998340065, 0.689563998984245, 0.6761797462723999, 0.6795802998379032, 0.665418034956487, 0.6625427748265441, 0.670685527221071, 0.6549461493245237, 0.6482040346684378, 0.6454670115027996, 0.6432532643471979, 0.6357190605592986, 0.6431019150066086, 0.6328661748446871, 0.6355182826400921, 0.6231820092162184, 0.6205733269118456, 0.6282911239645311, 0.6183843133141257, 0.6227389978868079, 0.6049848851620986, 0.6052511823789838, 0.6055140086310556, 0.6044077256005815, 0.608319915997401, 0.6060734643219421, 0.5933324830359819, 0.598888956316395, 0.5920919917042639, 0.5926004083023378, 0.5888684672717924, 0.5892261716006627, 0.5865909911543544, 0.5691245304689494, 0.575729391956216, 0.5808030681729144, 0.5720128469447638, 0.5710877503591081, 0.5692816693328391], "accuracy": [0.14476291835308075, 0.2561088502407074, 0.3567560315132141, 0.42504292726516724, 0.4644036591053009, 0.5127459764480591, 0.5464271306991577, 0.5811649560928345, 0.6095628142356873, 0.6255448460578918, 0.6518293619155884, 0.6610751748085022, 0.6674151420593262, 0.684982180595398, 0.6840575933456421, 0.6951525807380676, 0.6976621150970459, 0.7051908373832703, 0.7111346125602722, 0.7086250185966492, 0.7191916704177856, 0.7214370369911194, 0.72672039270401, 0.7293620109558105, 0.7236824631690979, 0.7273808121681213, 0.7298903465270996, 0.735569953918457, 0.7353057861328125, 0.7417778372764587, 0.7481178045272827, 0.7446836829185486, 0.7473253011703491, 0.7510236501693726, 0.7539294958114624, 0.7503632307052612, 0.7593448758125305, 0.7567031979560852, 0.7581561207771301, 0.7631752490997314, 0.7611940503120422, 0.7637035846710205, 0.7648923397064209, 0.769911527633667, 0.7647602558135986, 0.770439863204956, 0.7737419009208679, 0.7724210619926453, 0.7713643908500671, 0.7693831920623779, 0.7799497842788696, 0.7709681391716003, 0.7751948237419128, 0.7777044177055359, 0.7804781198501587, 0.7754589915275574, 0.7825914621353149, 0.7825914621353149, 0.7854973077774048, 0.7775723338127136, 0.7828556299209595, 0.7845727205276489, 0.7889314293861389, 0.7836481332778931, 0.7821952104568481, 0.7918372750282288, 0.7887993454933167, 0.7877426743507385, 0.7923656105995178, 0.7873464822769165, 0.7938185334205627], "val_loss": [1.9248574801853724, 1.862001623426165, 1.751074995313372, 1.5666747774396623, 1.3248778411320277, 1.1088157721928187, 0.9563709327152797, 0.8596707923071725, 0.7965706757136753, 0.7461881807872227, 0.710228715624128, 0.6818512337548392, 0.6614465883799961, 0.6432458502905709, 0.6280960355486188, 0.6164711202893939, 0.6078113658087594, 0.5927127429417202, 0.5868064505713326, 0.5749385697501046, 0.5681802034378052, 0.5603500945227486, 0.5572468553270612, 0.5502924919128418, 0.5427812167576381, 0.5399759156363351, 0.5363193239484515, 0.530985985483442, 0.5257879155022758, 0.5161067587988717, 0.5113920995167324, 0.5138251100267682, 0.5090799331665039, 0.505169221333095, 0.4979998213904245, 0.4954862083707537, 0.5076610190527779, 0.4965958765574864, 0.48576056957244873, 0.48578034128461567, 0.48321633679526194, 0.4813885348183768, 0.4796863113130842, 0.47566587584359304, 0.4742042677743094, 0.4731938328061785, 0.47011748382023405, 0.4690594162259783, 0.4660901853016445, 0.46434128284454346, 0.4648595537458147, 0.46270925658089773, 0.461056113243103, 0.45964820044381277, 0.45456441811152865, 0.4582102469035557, 0.45674451759883333, 0.45434151376996723, 0.4503817728587559, 0.4481269291469029, 0.44780685220445904, 0.4455881544521877, 0.4448736735752651, 0.4443323612213135, 0.4412680183138166, 0.4385470577648708, 0.4428712044443403, 0.43837766136441914, 0.4396658114024571, 0.4387810230255127, 0.4376763786588396], "val_accuracy": [0.34833332896232605, 0.4399999976158142, 0.515333354473114, 0.559333324432373, 0.5956666469573975, 0.628333330154419, 0.6613333225250244, 0.6850000023841858, 0.6959999799728394, 0.7043333053588867, 0.7113333344459534, 0.7236666679382324, 0.731333315372467, 0.7273333072662354, 0.7306666374206543, 0.7390000224113464, 0.7446666955947876, 0.7480000257492065, 0.75, 0.7540000081062317, 0.7556666731834412, 0.7526666522026062, 0.7559999823570251, 0.7590000033378601, 0.7713333368301392, 0.7663333415985107, 0.7720000147819519, 0.7630000114440918, 0.7723333239555359, 0.7723333239555359, 0.7793333530426025, 0.7726666927337646, 0.7803333401679993, 0.7723333239555359, 0.7879999876022339, 0.7829999923706055, 0.7713333368301392, 0.781333327293396, 0.7856666445732117, 0.7913333177566528, 0.7816666960716248, 0.781000018119812, 0.7923333048820496, 0.7919999957084656, 0.7900000214576721, 0.7933333516120911, 0.7850000262260437, 0.7919999957084656, 0.7900000214576721, 0.7983333468437195, 0.800000011920929, 0.7963333129882812, 0.7960000038146973, 0.7960000038146973, 0.8033333420753479, 0.7929999828338623, 0.800000011920929, 0.8040000200271606, 0.8009999990463257, 0.8076666593551636, 0.7996666431427002, 0.800000011920929, 0.8090000152587891, 0.8080000281333923, 0.8019999861717224, 0.8116666674613953, 0.8043333292007446, 0.8073333501815796, 0.8066666722297668, 0.8029999732971191, 0.8100000023841858]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 6, 4, 2, 5, 0, 3, 6, 0, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0], [7, 7, 1, 3], [6, 2], [94], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [39, 49, 44, 92]], "fitness": -0.696571409702301, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9637613811859476, 1.2210168085078112, 0.9185363956887126, 0.7731942793617883, 0.695431675106039, 0.6487030863305282, 0.6192404495852577, 0.5926890452823556, 0.548248711247659, 0.5602058409825764, 0.5306661129942534, 0.5313143484927187, 0.5488814363437416, 0.5417139140086765, 0.5275376981921153, 276.4032106150127], "accuracy": [0.3291507065296173, 0.6028265953063965, 0.6649055480957031, 0.7119271159172058, 0.7366266250610352, 0.7537974119186401, 0.7600052952766418, 0.7741381525993347, 0.791441023349762, 0.7996301651000977, 0.7960638999938965, 0.802271842956543, 0.7902522683143616, 0.7907806038856506, 0.8000264167785645, 0.54655921459198], "val_loss": [0.8689276490892682, 0.6620986972536359, 0.6048863274710519, 0.538973297391619, 0.4991537502833775, 0.4674567495073591, 0.44960226331438335, 0.4268299000603812, 0.43680492469242643, 0.4380414826529367, 0.4216118369783674, 0.42676361969539095, 0.41760694129126413, 0.4187424268041338, 0.4853966917310442, 11072.842075892857], "val_accuracy": [0.6273333430290222, 0.6949999928474426, 0.7369999885559082, 0.7549999952316284, 0.7620000243186951, 0.7856666445732117, 0.7956666946411133, 0.8016666769981384, 0.815666675567627, 0.8199999928474426, 0.8259999752044678, 0.8190000057220459, 0.8140000104904175, 0.8209999799728394, 0.8196666836738586, 0.19233334064483643]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 6, 4, 2, 5, 0, 3, 6, 0, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [39, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 9, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [64, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 8, 2, 2, 0, 0, 1, 0, 2, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 0, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [44, 58, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(grad, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025170278555493, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 4, 2, 0, 0, 1, 6, 0, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 0, 0, 0, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [2, 8, 1, 3], [6, 2], [94], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 2, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [44, 43, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06128648668527603, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 1, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025170278555493, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 1, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 8, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 33, 39, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 38, 38, 24, 14, 3, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad))))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [2.3522610315652643e+29, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05943732708692551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 1, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 6, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 78, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 36, 36, 21, 15, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad))))))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 5, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 6, 1, 3], [6, 2], [94], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 3, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [263173756.85138407, 1.2459738965018797e+26, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09932637959718704, 0.10091137140989304, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [381336719945.1429, 1.7061964612209715e+29, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [20, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [46, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025170278555493, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 6, 4, 2, 5, 0, 3, 6, 0, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30252307750262, 2.3581881118787513, 3.4669379733887644, 8.400944425098931, 18.010369666012256, 32.41029187657058, 51.234845872001564, 74.8267341334633], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.10210011899471283, 0.09800554811954498, 0.1026284471154213, 0.10408136248588562, 0.10645885765552521, 0.0956280529499054], "val_loss": [1.980048520224435, 2.261586938585554, 4.808701378958566, 11.687717710222516, 22.37833023071289, 36.97628130231585, 56.29890441894531, 78.93508475167411], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 8, 2, 3, 0, 0, 1, 0, 9, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 0, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [25, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030375668464353, 2.3036097305294323, 2.304255241668141, 2.305788270077134, 2.306205315785779, 2.3067191740808672], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9742053576878138, 1.9745254516601562, 1.9767847061157227, 1.9766745567321777, 1.9771240779331751, 1.977447509765625], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.07657142728567123, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3019180193616258, 2.3013309841662384, 2.3001639871958806, 2.2991080020538743, 2.3000729688327737, 2.298983686368038, 2.3000209785927996, 2.299525501548244, 2.2982535361298924, 2.299236086837966, 2.299072814324686, 2.2988458055121597, 2.299002010588318, 2.299251150288177, 2.299282912171323, 2.2991605119273144], "accuracy": [0.09417514503002167, 0.09747721254825592, 0.09774138033390045, 0.09932637959718704, 0.09972262382507324, 0.09694888442754745, 0.0944393053650856, 0.09681680053472519, 0.10302469879388809, 0.10170386731624603, 0.107647605240345, 0.09879804402589798, 0.1026284471154213, 0.09602430462837219, 0.10077928751707077, 0.09998679161071777], "val_loss": [1.9701761518205916, 1.9695955685206823, 1.9693397113255091, 1.9693432535443987, 1.9693538802010673, 1.9694290842328752, 1.969367299761091, 1.9692394392830985, 1.9692316055297852, 1.9692789486476354, 1.9693936620439803, 1.969623293195452, 1.9700219290597099, 1.970240252358573, 1.9704762186322893, 1.9706805774143763], "val_accuracy": [0.04233333468437195, 0.05066666752099991, 0.05833333358168602, 0.06233333423733711, 0.06833333522081375, 0.07199999690055847, 0.07400000095367432, 0.07566666603088379, 0.07866666465997696, 0.08100000023841858, 0.08166666328907013, 0.08166666328907013, 0.07666666805744171, 0.07733333110809326, 0.07466666400432587, 0.07866666465997696]}}]