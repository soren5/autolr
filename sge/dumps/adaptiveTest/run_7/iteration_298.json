[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8288571238517761, "mapping_values": [1, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1034022672632036, 2.1895127398793597, 2.1505492319284163, 2.1546673075933307, 2.1603391301819297, 1.4882809689740588, 1.1740251176424346, 0.9755813505009984, 0.7936428144245478, 0.7656552351350876, 0.7263036506161195, 0.6679178919018756, 0.6298646501436084, 0.6076152296649499, 0.6141688020048895, 0.6114175783849396, 0.5839864994084216, 0.5588659326382411, 0.5543603116274667, 0.549433219347805, 0.5394404399837438, 0.5173362296302447, 0.5167595546605518, 0.5081223286279929, 0.5071328910444832, 0.510811074070407, 0.4729273488272482, 0.4827856281178109, 0.4755302240993085, 0.4735715655193447, 0.4626415538324924, 0.44752226670530604, 0.45435331805727625, 0.44741430183868397, 0.42455056984001666, 0.44613417738212363, 0.4302229474934258, 0.42513133073527, 0.4088973698874569], "accuracy": [0.28741249442100525, 0.35464271903038025, 0.24118345975875854, 0.2518821954727173, 0.25795799493789673, 0.47351735830307007, 0.553031325340271, 0.6333377361297607, 0.7022850513458252, 0.7104741930961609, 0.7268524765968323, 0.7409853339195251, 0.7578919529914856, 0.7707040309906006, 0.7684586048126221, 0.7692511081695557, 0.78113853931427, 0.7882710099220276, 0.7849689722061157, 0.7957997918128967, 0.7947431206703186, 0.8037247657775879, 0.8075551390647888, 0.8080834746360779, 0.8121780753135681, 0.8021397590637207, 0.8259146809577942, 0.8202351331710815, 0.8212917447090149, 0.8248580098152161, 0.8293488025665283, 0.8284242749214172, 0.8305375576019287, 0.8308017253875732, 0.841500461101532, 0.8318583965301514, 0.8408400416374207, 0.8445383906364441, 0.8504821062088013], "val_loss": [1.867795467376709, 1.9546284675598145, 1.7832704271589006, 1.8987934929983956, 1.574345929282052, 1.0156492505754744, 0.8947982447487968, 0.60478675365448, 0.6008558103016445, 0.5909905774252755, 0.4968895060675485, 0.4923500844410488, 0.46484242166791645, 0.47837027481624056, 0.45136259283338276, 0.4913733516420637, 0.423153749534062, 0.4109308975083487, 0.40645196608134676, 0.41608210120882305, 0.4543104682649885, 0.3993321486881801, 0.4244694539478847, 0.38131654262542725, 0.43276025567735943, 0.3831268293516977, 0.40689719574792044, 0.37913910831723896, 0.3701213598251343, 0.42405846289225985, 0.3519276465688433, 0.3827193294252668, 0.40539037329810007, 0.3443451523780823, 0.36513930559158325, 0.35545953682490755, 0.3415225829396929, 0.35233737741197857, 0.3673952307019915], "val_accuracy": [0.30799999833106995, 0.10199999809265137, 0.3296666741371155, 0.3423333466053009, 0.46433332562446594, 0.5830000042915344, 0.5953333377838135, 0.7256666421890259, 0.7193333506584167, 0.7379999756813049, 0.7676666378974915, 0.7609999775886536, 0.7870000004768372, 0.7720000147819519, 0.8003333210945129, 0.765333354473114, 0.8113333582878113, 0.8166666626930237, 0.8136666417121887, 0.8069999814033508, 0.7886666655540466, 0.8236666917800903, 0.8163333535194397, 0.8330000042915344, 0.7896666526794434, 0.831333339214325, 0.8193333148956299, 0.8349999785423279, 0.82833331823349, 0.7926666736602783, 0.843999981880188, 0.8296666741371155, 0.8113333582878113, 0.8526666760444641, 0.8389999866485596, 0.8443333506584167, 0.8523333072662354, 0.8463333249092102, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 6, 2, 6, 7, 0, 4, 0, 4, 3, 8, 9, 0, 8, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 0, 2, 2, 3, 0, 0, 2, 1, 2], [59, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 1, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8265714049339294, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1034267219365343, 2.1869277398599816, 1.9725285475484888, 1.750937960686669, 1.2995347923307277, 0.9407803217465017, 0.8296546548931685, 0.7415791409851112, 0.7073653026689014, 0.6925867448991804, 0.6548477010782983, 0.6311166382122506, 0.62047505458238, 0.5902444214837237, 0.572492343969097, 0.5857373139704255, 0.5525316734827899, 0.5554861549640833, 0.5413107846186633, 0.5394822675491195, 0.5085230616136959, 0.5111070487949874, 0.49975105320631064, 0.4758747331635701, 0.484579339963948, 0.5046577495181439, 0.4409412210997873, 0.4672653110996292, 0.4519293722325722, 0.46303816305616385, 0.43825815182477884, 0.431405923456611, 0.4156487084036537, 0.4081261053872288, 0.4189333200234275, 0.41245387226299857, 0.39041068725629396, 0.40550701173147613, 0.3917996474993054, 0.39262747974002743, 0.39329682322635534, 0.4076993787655536, 0.37773570419145125, 0.3896962865319124, 0.35310460217892453, 0.37356400696073366], "accuracy": [0.287280410528183, 0.3559635579586029, 0.30260202288627625, 0.3917580246925354, 0.5624092221260071, 0.6450931429862976, 0.6844538450241089, 0.7150970697402954, 0.724739134311676, 0.7396644949913025, 0.7515519857406616, 0.7508915662765503, 0.7618544697761536, 0.7751948237419128, 0.7832518815994263, 0.7741381525993347, 0.7917051911354065, 0.7872143983840942, 0.796328067779541, 0.7957997918128967, 0.8087438941001892, 0.8057059645652771, 0.8101968169212341, 0.8219521641731262, 0.8189142942428589, 0.804649293422699, 0.8352925777435303, 0.8203672170639038, 0.8285563588142395, 0.832650899887085, 0.837141752243042, 0.8372738361358643, 0.8465195894241333, 0.8492933511734009, 0.8413683772087097, 0.846387505531311, 0.8568220734596252, 0.8477083444595337, 0.8568220734596252, 0.8515387773513794, 0.850350022315979, 0.8516708612442017, 0.8576145768165588, 0.8514066934585571, 0.867520809173584, 0.8597279191017151], "val_loss": [1.8680112702505929, 1.9539790834699358, 1.3598625659942627, 1.4449167251586914, 0.7564687217984881, 0.7709321464811053, 0.6209238256726947, 0.5458048752376011, 0.522727199963161, 0.5249426194599697, 0.4759253604071481, 0.5131806135177612, 0.46243672711508615, 0.42431898627962383, 0.4633688415799822, 0.4428507259913853, 0.41267354999269756, 0.4056300861494882, 0.3975292869976589, 0.43519818782806396, 0.4533085823059082, 0.39859198672430857, 0.4038243889808655, 0.37979239225387573, 0.3948194554873875, 0.37687660115105764, 0.3773891159466335, 0.3520034636769976, 0.3692897302763803, 0.4085352676255362, 0.36894467898777555, 0.35152665206364225, 0.347338216645377, 0.32905289956501554, 0.3695655805724008, 0.33746616329465595, 0.3302100045340402, 0.3482381956917899, 0.3411137206213815, 0.3778081876891, 0.32622251340321134, 0.357958938394274, 0.35503854921885897, 0.3606994492667062, 0.35784222398485455, 0.31904564585004536], "val_accuracy": [0.3096666634082794, 0.11100000143051147, 0.4009999930858612, 0.5049999952316284, 0.6963333487510681, 0.6466666460037231, 0.7016666531562805, 0.7549999952316284, 0.7590000033378601, 0.7463333606719971, 0.7713333368301392, 0.753333330154419, 0.7886666655540466, 0.8106666803359985, 0.7836666703224182, 0.8013333082199097, 0.809333324432373, 0.8216666579246521, 0.8243333101272583, 0.8006666898727417, 0.7910000085830688, 0.8240000009536743, 0.8196666836738586, 0.8379999995231628, 0.8186666369438171, 0.8353333473205566, 0.8363333344459534, 0.8493333458900452, 0.8346666693687439, 0.8113333582878113, 0.8370000123977661, 0.8429999947547913, 0.8506666421890259, 0.859333336353302, 0.8413333296775818, 0.8566666841506958, 0.8600000143051147, 0.8529999852180481, 0.8503333330154419, 0.8339999914169312, 0.8646666407585144, 0.8433333039283752, 0.8379999995231628, 0.8446666598320007, 0.8410000205039978, 0.8606666922569275]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8254285454750061, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.103412646076478, 2.199527052399536, 2.1075338837713407, 1.6252039772975146, 1.3277935307370106, 1.015318926204827, 0.9900506755317191, 0.7924960349544857, 0.7383045614387664, 0.722062331810446, 0.6986184121831501, 0.660405140645185, 0.6420735317356063, 0.6097172812747288, 0.6085842569285946, 0.5918618475110728, 0.5766674512255509, 0.5633147533590831, 0.5540654588495153, 0.56000607845223, 0.5171798975507675, 0.5214428580778779, 0.5202516993007577, 0.482831589093282, 0.5058545739171117, 0.48850030081304563, 0.47988549988456547, 0.47113302663773626, 0.4677459836053401, 0.4457772924380138, 0.44615838249692386, 0.44705126751935115, 0.4317303762428355, 0.423607556039883, 0.43546176449167034, 0.4199729483235608, 0.43819759306481265, 0.4125966416641611, 0.4139931522041122], "accuracy": [0.287280410528183, 0.35305771231651306, 0.28318583965301514, 0.4695548713207245, 0.5406154990196228, 0.6254127621650696, 0.6363756656646729, 0.6954167485237122, 0.7199841737747192, 0.7248712182044983, 0.7320036888122559, 0.7477215528488159, 0.7577598690986633, 0.767401933670044, 0.7692511081695557, 0.7708360552787781, 0.7839123010635376, 0.7832518815994263, 0.7864218950271606, 0.785101056098938, 0.8058380484580994, 0.8005547523498535, 0.8030643463134766, 0.8240655064582825, 0.8090080618858337, 0.8158763647079468, 0.8210275769233704, 0.8222163319587708, 0.8264430165290833, 0.8350284099578857, 0.8329150676727295, 0.8278959393501282, 0.8408400416374207, 0.8424250483512878, 0.8333113193511963, 0.8418967127799988, 0.8363492488861084, 0.8449346423149109, 0.8422929644584656], "val_loss": [1.8695693016052246, 1.9519143104553223, 1.212022066116333, 1.0980839729309082, 0.915743214743478, 0.7182409422738212, 0.6714112758636475, 0.5602341038840157, 0.5571487290518624, 0.5529505865914481, 0.5115538154329572, 0.5171594449451992, 0.4702691520963396, 0.47241910866328646, 0.4521028314317976, 0.4763935123171125, 0.43061353479112896, 0.41923792021615164, 0.45447375093187603, 0.42209625244140625, 0.44051153319222586, 0.40761435883385794, 0.40831481558935984, 0.41763497250420706, 0.41499942541122437, 0.37741535902023315, 0.36124271154403687, 0.3861289364950998, 0.3530546852520534, 0.3860096420560564, 0.3635504160608564, 0.3518269147191729, 0.34876249517713276, 0.34230709075927734, 0.35849412849971224, 0.36672868047441753, 0.3428964614868164, 0.3531228814806257, 0.40678086451121737], "val_accuracy": [0.3076666593551636, 0.13733333349227905, 0.4516666531562805, 0.5983333587646484, 0.5799999833106995, 0.6656666398048401, 0.6936666369438171, 0.7463333606719971, 0.7526666522026062, 0.734666645526886, 0.7590000033378601, 0.7540000081062317, 0.7839999794960022, 0.7806666493415833, 0.7906666398048401, 0.7776666879653931, 0.7950000166893005, 0.8119999766349792, 0.7923333048820496, 0.8053333163261414, 0.7926666736602783, 0.8199999928474426, 0.8216666579246521, 0.8119999766349792, 0.8133333325386047, 0.8349999785423279, 0.8410000205039978, 0.8086666464805603, 0.8506666421890259, 0.8330000042915344, 0.8413333296775818, 0.8386666774749756, 0.8503333330154419, 0.8516666889190674, 0.8420000076293945, 0.8410000205039978, 0.8456666469573975, 0.8473333120346069, 0.8119999766349792]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 2, 9, 0, 5, 4, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 2, 1, 0, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 8, 3, 8, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 0, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.822857141494751, "mapping_values": [1, 7, 7, 4, 3, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(alpha, tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1033279276039023, 2.2091252490151843, 2.1355672929076284, 1.8718680109031103, 1.3795397528378939, 1.1486770235363204, 0.9402331293156717, 0.8244992858934334, 0.7475629475658061, 0.7341818086475256, 0.7008778588127199, 0.6628600779132064, 0.656302345907526, 0.6115936320597359, 0.6104432725635549, 0.5910539238397172, 0.5746562169558966, 0.5614600218266639, 0.5564140672885888, 0.5632404611803805, 0.504837837146494, 0.5258262493134552, 0.5191077482131935, 0.5022753685330985, 0.5203439216131327, 0.5034480626714417, 0.48143315947428983, 0.48134550039306245, 0.46803944144487036, 0.4762384331166516, 0.4613366143389495, 0.4417718215042873, 0.4431690152184901, 0.4371783348901822, 0.4279844636662667, 0.42792597306387187, 0.4222033797726261, 0.41956213909038825, 0.40940867309494106, 0.4086785155351309], "accuracy": [0.28741249442100525, 0.35385021567344666, 0.25822216272354126, 0.3887201249599457, 0.5060097575187683, 0.570202112197876, 0.6576409935951233, 0.6877558827400208, 0.7143045663833618, 0.7214370369911194, 0.7334566116333008, 0.752740740776062, 0.7524765729904175, 0.7670056819915771, 0.7718927264213562, 0.7729493975639343, 0.7829877138137817, 0.7924976944923401, 0.787082314491272, 0.7873464822769165, 0.8127063512802124, 0.8021397590637207, 0.8063663840293884, 0.8109893202781677, 0.802271842956543, 0.8105930685997009, 0.819442629814148, 0.8175934553146362, 0.8207634687423706, 0.8278959393501282, 0.8309338092803955, 0.8354246616363525, 0.8360850811004639, 0.8352925777435303, 0.8380662798881531, 0.8385946154594421, 0.8437458872795105, 0.8465195894241333, 0.850350022315979, 0.8496896028518677], "val_loss": [1.868861130305699, 1.9525386265345983, 1.3262277671269007, 1.3646730014256068, 1.2413585867200578, 0.7472630398614066, 0.6743563073022025, 0.557125449180603, 0.539818457194737, 0.5396324566432408, 0.5024058818817139, 0.5617775746754238, 0.45396460805620464, 0.4388288004057748, 0.4565150056566511, 0.46800867148808073, 0.4111384153366089, 0.42666988713400705, 0.4753603254045759, 0.40805797066007343, 0.4361234988485064, 0.39494982787540983, 0.41048306226730347, 0.4024845361709595, 0.40309423208236694, 0.39039561578205656, 0.3728520614760263, 0.38179738180977957, 0.38608457360948834, 0.3911641410418919, 0.3694657172475542, 0.37624551568712505, 0.36767865078789846, 0.3446585536003113, 0.3439547674996512, 0.34784622703279766, 0.3417065739631653, 0.34221521445683073, 0.38046917745045256, 0.3546163184302194], "val_accuracy": [0.30933332443237305, 0.13433332741260529, 0.47966668009757996, 0.4676666557788849, 0.40966665744781494, 0.6800000071525574, 0.6769999861717224, 0.7540000081062317, 0.7519999742507935, 0.7390000224113464, 0.7593333125114441, 0.7369999885559082, 0.7963333129882812, 0.7996666431427002, 0.7900000214576721, 0.7756666541099548, 0.8190000057220459, 0.8066666722297668, 0.7850000262260437, 0.8130000233650208, 0.8016666769981384, 0.8199999928474426, 0.8180000185966492, 0.8236666917800903, 0.8190000057220459, 0.831333339214325, 0.8376666903495789, 0.8316666483879089, 0.8190000057220459, 0.8180000185966492, 0.8433333039283752, 0.8293333053588867, 0.847000002861023, 0.8539999723434448, 0.8546666502952576, 0.8489999771118164, 0.8500000238418579, 0.8543333411216736, 0.8270000219345093, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 6, 2, 0, 0, 5, 2, 0, 4, 8, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8122857213020325, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1033323110134026, 2.2046657529379226, 2.1121437594308325, 1.825559137692903, 1.3537806856192933, 1.0066897701184196, 0.8901209086238779, 0.7995792941536335, 0.7530075328823377, 0.6940059939065015, 0.7137581482382026, 0.649450087158388, 0.6224139279551463, 0.5900555172333108, 0.589287743773427, 0.5963358924436437, 0.571788877299937, 0.5556202587466025, 0.5434727652544327, 0.5549603589631941, 0.515396493080506, 0.5097750884792855, 0.5058775216974776, 0.49457097572342534, 0.4998908119430915, 0.49249072728958804, 0.46687593254682774, 0.47430996273833337, 0.4652831768315655, 0.45638740075310036, 0.4398750666149572, 0.4440540345573879, 0.4317105709561708, 0.42833683556411967, 0.42213428971112726, 0.42501729308747976, 0.4308979700403978, 0.41160847725900973, 0.3957550074280749], "accuracy": [0.2875445783138275, 0.35305771231651306, 0.28160083293914795, 0.39228636026382446, 0.5346717834472656, 0.6156386137008667, 0.6641130447387695, 0.6947563290596008, 0.7186633348464966, 0.7415136694908142, 0.7223616242408752, 0.755118191242218, 0.7651565074920654, 0.7784969210624695, 0.7714964747428894, 0.7778365015983582, 0.7877426743507385, 0.7903843522071838, 0.7960638999938965, 0.7906485199928284, 0.8037247657775879, 0.8034605979919434, 0.8095363974571228, 0.8100647330284119, 0.8108572363853455, 0.8101968169212341, 0.8248580098152161, 0.8228767514228821, 0.8298771381378174, 0.8319904804229736, 0.8405758738517761, 0.8290846943855286, 0.8399154543876648, 0.8372738361358643, 0.8404437899589539, 0.8425571322441101, 0.8359529972076416, 0.8470479249954224, 0.8535200357437134], "val_loss": [1.8700356483459473, 1.953444004058838, 1.3649163246154785, 0.9982583863394601, 0.970484699521746, 0.7479870659964425, 0.7539124659129551, 0.5700982127870832, 0.5408150127955845, 0.5940221548080444, 0.49065455368586947, 0.5213665451322284, 0.488215480531965, 0.4420572689601353, 0.4732330526624407, 0.46031974043164936, 0.42542329856327604, 0.41501286200114657, 0.4720206430980137, 0.4328165820666722, 0.4251897505351475, 0.3996319941111973, 0.40456936189106535, 0.3956171785082136, 0.4157786880220686, 0.37777823209762573, 0.36217405114855084, 0.3803276675088065, 0.3565306237765721, 0.38779627425330027, 0.36026571478162495, 0.3834434747695923, 0.35894093343189787, 0.3373861738613674, 0.3551784072603498, 0.38451233931950163, 0.34951840128217426, 0.3404024158205305, 0.43324401548930574], "val_accuracy": [0.30933332443237305, 0.1276666671037674, 0.3893333375453949, 0.5789999961853027, 0.5720000267028809, 0.6639999747276306, 0.6620000004768372, 0.7483333349227905, 0.749666690826416, 0.7163333296775818, 0.765333354473114, 0.7506666779518127, 0.7799999713897705, 0.800000011920929, 0.7726666927337646, 0.7973333597183228, 0.800000011920929, 0.8103333115577698, 0.7706666588783264, 0.7916666865348816, 0.8003333210945129, 0.8166666626930237, 0.8196666836738586, 0.8266666531562805, 0.8140000104904175, 0.8333333134651184, 0.8410000205039978, 0.8299999833106995, 0.8483333587646484, 0.8263333439826965, 0.840666651725769, 0.8223333358764648, 0.8403333425521851, 0.8546666502952576, 0.8510000109672546, 0.8360000252723694, 0.8446666598320007, 0.8516666889190674, 0.7946666479110718]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 0, 0, 6, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 2, 2, 3, 3, 2, 3, 0, 0, 2, 1, 2], [30, 18, 74, 57, 57, 39], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1033140880997627, 2.194294996548795, 2.104756170291596, 1.7999154813159584, 1.4075297746896398, 1.0295116378646627, 0.9505363876289616, 0.7764366233684226, 0.7559093664965026, 0.7054921063245043, 0.697929599659554, 0.6631139918813427, 0.6347186409046212, 0.6025371550647669, 0.614620345553009, 0.5893728056792901, 0.5790171277537212, 0.5700801870905098, 0.5570959976918946, 0.5578907664189674, 0.5194977418448332, 0.5187804313808809, 0.5323259252378292, 0.4996809688352591, 0.49623654647163823, 0.5127613925269378, 0.4747195209155954, 0.4855611580647277, 0.4661028445349582, 0.46611194758760993, 0.4560909944951432, 0.45954513698599797], "accuracy": [0.28741249442100525, 0.35385021567344666, 0.28384625911712646, 0.414608359336853, 0.5025756359100342, 0.6219785809516907, 0.6383568644523621, 0.7065116763114929, 0.7082287669181824, 0.7378153204917908, 0.7268524765968323, 0.741909921169281, 0.7556465268135071, 0.7726852297782898, 0.7692511081695557, 0.7738739848136902, 0.785101056098938, 0.7829877138137817, 0.7917051911354065, 0.7840443849563599, 0.8053097128868103, 0.802271842956543, 0.7947431206703186, 0.8094043135643005, 0.8113855719566345, 0.802271842956543, 0.8198388814926147, 0.819442629814148, 0.8239334225654602, 0.8294808864593506, 0.8280280232429504, 0.826310932636261], "val_loss": [1.8706654821123396, 1.9536660739353724, 1.2974584443228585, 0.8790796143668038, 1.041613987513951, 0.8474557740347726, 0.6049239465168544, 0.5740165199552264, 0.5431751012802124, 0.5730070216315133, 0.509151782308306, 0.5357743671962193, 0.474763240133013, 0.5150085687637329, 0.4376270430428641, 0.44521142755235943, 0.4363527638571603, 0.4327857068606785, 0.41310241392680574, 0.41647460630961824, 0.4348530258451189, 0.407490006514958, 0.3814986859049116, 0.3820898107119969, 0.40867435932159424, 0.3866795471736363, 0.3647391029766628, 0.36376318761280607, 0.36050570011138916, 0.4050628457750593, 0.38738852739334106, 0.3866478375026158], "val_accuracy": [0.31066668033599854, 0.11166666448116302, 0.39133334159851074, 0.6566666960716248, 0.5136666893959045, 0.6163333058357239, 0.7329999804496765, 0.7326666712760925, 0.7396666407585144, 0.7486666440963745, 0.7576666474342346, 0.7446666955947876, 0.784333348274231, 0.7683333158493042, 0.7906666398048401, 0.7976666688919067, 0.7996666431427002, 0.7950000166893005, 0.8143333196640015, 0.8033333420753479, 0.796999990940094, 0.8136666417121887, 0.8349999785423279, 0.8360000252723694, 0.809333324432373, 0.8273333311080933, 0.8383333086967468, 0.8376666903495789, 0.8373333215713501, 0.8106666803359985, 0.8309999704360962, 0.8196666836738586]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 0, 0, 2, 6, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 4, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8042857050895691, "mapping_values": [1, 25, 25, 16, 9, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)), grad))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.103314902032639, 2.201113842576329, 2.1295543887501522, 1.6505686148613388, 1.3831132763270704, 1.0351694035665502, 0.8588529230423765, 0.7662306879064615, 0.7172500472956204, 0.7139233435622107, 0.683257410082567, 0.6377981213404754, 0.6437347063283249, 0.6016124615485343, 0.5827824742471883, 0.5801133640910562, 0.5760624391559314, 0.5637877241668605, 0.5393989972702311, 0.5639083959548985, 0.5005817917186539, 0.5205920718412483], "accuracy": [0.28741249442100525, 0.35279354453086853, 0.2405230551958084, 0.4624224007129669, 0.5260863900184631, 0.6258090138435364, 0.6824725866317749, 0.7040021419525146, 0.7257958054542542, 0.7337207794189453, 0.737947404384613, 0.7519482374191284, 0.7572315335273743, 0.769911527633667, 0.7814027070999146, 0.7833839654922485, 0.7828556299209595, 0.7891955971717834, 0.7975168228149414, 0.7880068421363831, 0.8145555257797241, 0.8031964302062988], "val_loss": [1.8699329239981515, 1.9553826195853097, 1.607241221836635, 1.0213492597852434, 0.8193525927407401, 0.7332860742296491, 0.6731423820768084, 0.542862960270473, 0.5200550215584892, 0.5757926191602435, 0.49034227643694195, 0.5068394797188895, 0.4477975709097726, 0.43390696389334543, 0.42660495213099886, 0.42167400462286814, 0.42400400979178293, 0.40868630579539705, 0.49470436573028564, 0.40457368748528616, 0.42846075126102995, 0.39717675958360943], "val_accuracy": [0.3109999895095825, 0.11033333092927933, 0.3903333246707916, 0.5473333597183228, 0.675000011920929, 0.6959999799728394, 0.6816666722297668, 0.7573333382606506, 0.7609999775886536, 0.7303333282470703, 0.7630000114440918, 0.7566666603088379, 0.8013333082199097, 0.8076666593551636, 0.8073333501815796, 0.815666675567627, 0.8223333358764648, 0.812666654586792, 0.7613333463668823, 0.8149999976158142, 0.8026666641235352, 0.8166666626930237]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.7942857146263123, "mapping_values": [1, 13, 13, 8, 5, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.square(grad)))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.185021760834994, 1.9707086451096762, 1.6269722022337605, 1.1067129829225602, 0.9380122657465252, 0.7911606664434636, 0.7330927524615777, 0.6957384111260568, 0.6808634608838348, 0.6359622708054707, 0.6520371981237731, 0.5846592899893631, 0.5801737351644907, 0.5699731445488849, 0.5584065275752171, 0.5464561532879266], "accuracy": [0.26839256286621094, 0.334169864654541, 0.448949933052063, 0.6044115424156189, 0.653150200843811, 0.6999075412750244, 0.717870831489563, 0.733060359954834, 0.735569953918457, 0.7556465268135071, 0.7467969655990601, 0.7758552432060242, 0.7783648371696472, 0.7823272943496704, 0.791969358921051, 0.8018755912780762], "val_loss": [1.5670527049473353, 1.4518494946616036, 0.8025668859481812, 0.8750718661717006, 0.6541737999234881, 0.5806217874799456, 0.5422975165503365, 0.503818222454616, 0.48620377268110004, 0.5079702990395683, 0.4396611622401646, 0.4674039568219866, 0.4720679351261684, 0.48627265862056185, 0.49870622158050537, 0.46809892995016916], "val_accuracy": [0.36399999260902405, 0.45366665720939636, 0.6456666588783264, 0.6346666812896729, 0.7106666564941406, 0.7213333249092102, 0.7506666779518127, 0.7436666488647461, 0.7826666831970215, 0.7576666474342346, 0.8063333630561829, 0.7873333096504211, 0.7839999794960022, 0.7540000081062317, 0.7866666913032532, 0.762333333492279]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 6, 2, 0, 0, 5, 4, 0, 0, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [59, 92, 74, 57, 57, 39], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.16114285588264465, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.3015087294525016, 2.300640263876753, 2.302121115524409, 2.3020110454667657, 2.301937755324727, 2.297962223959164, 2.2937242281577057, 2.293418044946953, 2.2944266064260552, 2.2903331429525973, 2.2913460564918804, 2.2905663285414777, 2.287011140058258, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.0948355570435524, 0.09113723784685135, 0.09272222965955734, 0.08796724677085876, 0.10606260597705841, 0.11781799048185349, 0.12072381377220154, 0.11345925182104111, 0.12402588874101639, 0.12640337646007538, 0.13498876988887787, 0.14357416331768036, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9647880281720842, 1.964111600603376, 1.964111600603376, 1.9615377017429896, 1.9596365519932337, 1.9611037118094308, 1.9606165204729353, 1.9595855985369002, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.11900000274181366, 0.10233332961797714, 0.10233332961797714, 0.14666666090488434, 0.1446666717529297, 0.1469999998807907, 0.14900000393390656, 0.15833333134651184, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 2, 2, 6, 7, 2, 8, 0, 1, 8, 2, 9, 0, 6, 4, 5, 0, 1, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 2, 0, 0, 2, 1, 2], [59, 92, 1, 57, 57, 39, 47, 15], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 4, 1, 9, 8, 1, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 5, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 1, 1, 0, 1, 0, 3], [96, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, alpha)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.square(alpha))", "other_info": {"loss": [2.3026378904241125, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 0, 2, 2, 3, 0, 0, 2, 1, 2], [68, 16, 74, 7, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 0, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [66157.66275332522, 69102.19371641173, 71185.13136500503, 71182.48097618586, 72918.00303661793, 72328.4707425951], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.10091137140989304, 0.09509972482919693, 0.09998679161071777, 0.09787346422672272], "val_loss": [263.1215035574777, 2007.3316127232142, 2935.1412527901784, 3628.116768973214, 3629.9200613839284, 3630.080636160714], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 3, 2, 0, 0, 5, 4, 1, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 0, 3, 1, 2, 3, 0, 0, 2, 1, 2], [30, 18, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 1, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [81, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026378904241125, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 3, 0, 0, 5, 9, 4, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 1, 2, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 6, 2, 6, 7, 5, 4, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 6, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 1, 16, 16, 8, 8, 1, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad))))), alpha)), grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, alpha))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [10164136.864290975, 195413521.8829745, 910285162.0213975, 2518022438.310395, 5472416733.645754, 9910086437.431252], "accuracy": [0.09826971590518951, 0.1022322028875351, 0.10157178342342377, 0.09906221181154251, 0.09668471664190292, 0.09826971590518951], "val_loss": [38884898.28571428, 310612114.28571427, 1047796041.1428572, 2483043108.571429, 4848978944.0, 8378198308.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 6, 2, 0, 0, 5, 4, 1, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [59, 92, 74, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 6, 1, 8, 0, 5, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [84, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.pow(grad, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), grad)))))), grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026378904241125, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 6, 2, 0, 0, 5, 4, 1, 4, 3, 1, 9, 0, 0, 4, 2, 0, 3, 4, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 2, 2, 3, 0, 0, 2, 1, 2], [30, 18, 74, 57, 57, 39], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 4, 1, 3, 0, 5, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [98, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [2, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 17, 10, 2, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), grad), tf.math.add(alpha, grad))))))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad))))))), tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(alpha, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 2, 0, 0, 5, 2, 4, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 1, 2, 2, 2, 3, 1, 2, 3, 0, 0, 2, 1, 2], [59, 92, 74, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 9, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 5, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 3, 0, 1, 7, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))", "other_info": {"loss": [2.3026378904241125, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 6, 1, 6, 7, 0, 2, 0, 4, 3, 8, 9, 0, 8, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 2, 2, 3, 2, 2, 3, 0, 0, 2, 1, 2], [30, 18, 74, 57, 57, 39], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 5, 5, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [94, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 10, 9, 1, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), grad)), grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.square(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 2, 0, 0, 5, 4, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 3, 3, 2, 3, 0, 0, 2, 1, 2], [87, 92, 74, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [3, 2], [76], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026378904241125, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [2, 2, 2, 6, 7, 4, 3, 6, 4, 8, 4, 8, 0, 1, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 2, 3, 1, 0, 2, 0, 0, 2, 1, 2], [87, 92, 74, 24, 57, 39], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 1, 0, 8, 4, 5, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 3, 3, 2, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [23, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 1, 1, 0, 1, 0, 3], [8, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 32, 32, 19, 13, 4, 15, 15, 10, 5, 2, 7, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.pow(grad, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))), tf.math.sqrt(grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015087294525016, 2.300640263876753, 2.302121115524409, 2.3020110454667657, 2.301937755324727, 2.3000853381309967], "accuracy": [0.09272222965955734, 0.0948355570435524, 0.09113723784685135, 0.09272222965955734, 0.08796724677085876, 0.09232597798109055], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]