[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.797428548336029, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma))))", "other_info": {"loss": [1.9540159045083254, 1.4815042933862224, 1.0559808861987308, 0.8866706328888957, 0.7963516840278481, 0.7907738687891009, 0.7218661352927107, 0.7018456456683583, 0.6861820295817187, 0.6512365282377027, 0.6308947269785217, 0.6568941876809863, 0.614364058609888, 0.6098850558005965, 0.5843790714074089, 0.5946868663891636, 0.5659666808132388, 0.5434925540043709, 0.5383531161350361], "accuracy": [0.3517369031906128, 0.5049530863761902, 0.6087703108787537, 0.677189290523529, 0.7051908373832703, 0.7030775547027588, 0.7308149337768555, 0.7371549606323242, 0.7387399077415466, 0.7537974119186401, 0.7644960880279541, 0.7516840696334839, 0.7672698497772217, 0.7685906887054443, 0.7810064554214478, 0.7744023203849792, 0.783119797706604, 0.7948752045631409, 0.7964601516723633], "val_loss": [1.4996585164751326, 0.9520658084324428, 0.7031461851937431, 0.6846744162695748, 0.5733583654676165, 0.5602772235870361, 0.5502324785505023, 0.5273575101579938, 0.528924720627921, 0.49143900190080914, 0.535160848072597, 0.47934636047908236, 0.46254660402025494, 0.45639962809426443, 0.46288059438977924, 0.48826234681265696, 0.4636516400745937, 0.4703231709344046, 0.4401079671723502], "val_accuracy": [0.37533333897590637, 0.5653333067893982, 0.687666654586792, 0.6766666769981384, 0.7393333315849304, 0.7519999742507935, 0.7536666393280029, 0.7570000290870667, 0.7583333253860474, 0.7739999890327454, 0.7509999871253967, 0.7856666445732117, 0.7889999747276306, 0.8053333163261414, 0.7976666688919067, 0.7723333239555359, 0.7836666703224182, 0.7829999923706055, 0.7996666431427002]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [3, 8, 9, 3, 1, 5, 5, 1, 7, 5], [1, 1, 2, 2, 0, 0, 1, 1], [43, 9, 50]], "fitness": -0.41514286398887634, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.271929166288959, 2.2654728342151254, 629.6685120082881, NaN, NaN, NaN, NaN], "accuracy": [0.2545238435268402, 0.2608638107776642, 0.2510896921157837, 0.10579843819141388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9092868396214075, 1.6384352615901403, 16327198.857142856, NaN, NaN, NaN, NaN], "val_accuracy": [0.19166666269302368, 0.3336666524410248, 0.14100000262260437, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [1, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 4, 1, 5, 5, 1, 7, 5], [1, 0, 1, 3, 1, 1], [13, 9, 50]], "fitness": -0.4091428518295288, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302227715837516, 2.3008009615575538, 2.301175190048006, 2.2999779828204736, 2.297548519669113, 2.299102679219748, 2.296955184724904, 2.297104370954597, 2.2970415936831423, 2.294054403721995, 2.293413825432512, 2.2932596069049245, 2.293137285986817, 2.2928605677350604, 2.291022946916126, 2.2909257055163432, 2.2905444536762087, 2.289417043416854, 2.287087100828486, 2.288068558545932, 2.286481830123047, 2.284930333296353, 2.285678672626774, 2.284684018436251, 2.2839566003597644, 2.284745849591236, 2.2820605738225033, 2.283255868536874, 2.281003847035277, 2.280477060318749, 2.2799109468811523, 2.2792549486315212, 2.2781073635500877, 2.277866585978018, 2.2769720554666715, 2.275958393826508, 2.277004091794134, 2.2743364489861073, 2.2745045944526763, 2.2740267795610105, 2.2721997641647937, 2.2707412997414456, 2.271291765916648, 2.269406470734729, 2.2706509692368804, 2.267482598633137, 2.26908624564274, 2.2676055135035385, 2.2649417071530786, 2.2646848276511413, 2.264361572240432, 2.2641942729692985, 2.263754035692488, 2.2623706515816933, 2.26111957050979, 2.26101153178096, 2.260147421036603, 2.259983250840056, 2.2576378670036044, 2.259984097224437, 2.2559706127135004, 2.2550435828306044, 2.254492133662937, 2.253432733948677, 2.2522243138364813, 2.2517067462760916, 2.2499522820849225, 2.250366699520812, 2.2515177335312115, 2.249655573737462, 2.248552890674801, 2.2483853511271175, 2.2473435972533946, 2.2463627230017305, 2.2443023103654283, 2.2445769535788234, 2.2436496374109844, 2.242264441589811, 2.2425242827600256, 2.2413516860234344, 2.240945533911912, 2.2400311484328665, 2.236368950945968, 2.2369796553654457, 2.235802878509691, 2.23335452118192, 2.234483152096534, 2.2321409395326475, 2.2321947717773694, 2.2321086056149633, 2.23012378464254, 2.230001771013892, 2.2278430885437883, 2.2290931529593174, 2.224521936568539, 2.2251398919233636, 2.225123164802101, 2.2234230914750137, 2.222236419854588, 2.220737932065632], "accuracy": [0.08994849026203156, 0.0956280529499054, 0.09285431355237961, 0.09826971590518951, 0.09760929644107819, 0.09893012791872025, 0.10328886657953262, 0.10236428678035736, 0.09826971590518951, 0.10606260597705841, 0.1150442510843277, 0.11240258812904358, 0.11306300014257431, 0.10989301651716232, 0.11900673806667328, 0.11861048638820648, 0.1200634017586708, 0.12561088800430298, 0.1220446452498436, 0.1254788041114807, 0.13578127324581146, 0.13472460210323334, 0.13076211512088776, 0.13432836532592773, 0.13419628143310547, 0.13181878626346588, 0.14370624721050262, 0.14198917150497437, 0.14872540533542633, 0.15493330359458923, 0.14938580989837646, 0.1546691358089447, 0.14912164211273193, 0.15414080023765564, 0.15915995836257935, 0.1562541276216507, 0.1526878923177719, 0.16602826118469238, 0.16166952252388, 0.16219785809516907, 0.17131158709526062, 0.16999074816703796, 0.1732928305864334, 0.17553824186325073, 0.1784440577030182, 0.1822744756937027, 0.17699114978313446, 0.1822744756937027, 0.18557654321193695, 0.19495442509651184, 0.18914277851581573, 0.18544445931911469, 0.1872936189174652, 0.19812442362308502, 0.19719983637332916, 0.20063400268554688, 0.20420023798942566, 0.19865275919437408, 0.20855897665023804, 0.1966715157032013, 0.21371020376682281, 0.21133272349834442, 0.21291771531105042, 0.21978603303432465, 0.22361643612384796, 0.218465194106102, 0.22520142793655396, 0.22572976350784302, 0.2188614457845688, 0.2238806039094925, 0.2250693440437317, 0.23206974565982819, 0.23220182955265045, 0.23378682136535645, 0.23061682283878326, 0.23959846794605255, 0.23933430016040802, 0.2324659824371338, 0.24580636620521545, 0.24461762607097626, 0.2432967871427536, 0.24686303734779358, 0.2631092369556427, 0.25201427936553955, 0.2483159452676773, 0.26139214634895325, 0.25716549158096313, 0.25980716943740845, 0.26799631118774414, 0.25756174325942993, 0.2635054886341095, 0.26363757252693176, 0.27143046259880066, 0.2662792205810547, 0.2719587981700897, 0.26720380783081055, 0.27882710099220276, 0.27658170461654663, 0.26641130447387695, 0.2767137885093689], "val_loss": [1.9702842576163155, 1.969595500401088, 1.9689154624938965, 1.9682328360421317, 1.9675485747201102, 1.9668694223676408, 1.9661856378827776, 1.9655049187796456, 1.9648322377886092, 1.964153630392892, 1.96346800667899, 1.9627958706447057, 1.9621254376002721, 1.961449078151158, 1.9607673372541154, 1.9600935663495744, 1.9594201360430037, 1.95874970299857, 1.958071572440011, 1.957404341016497, 1.9567303657531738, 1.956054959978376, 1.9553803035191126, 1.9547085762023926, 1.954029151371547, 1.9533493859427316, 1.9526732308523995, 1.9519930567060197, 1.9513112476893835, 1.9506285531180245, 1.9499519211905343, 1.9492713383265905, 1.9485977717808314, 1.947920458657401, 1.947230543409075, 1.946545124053955, 1.9458650180271693, 1.9451725142342704, 1.9444770131792342, 1.943784441266741, 1.9430881227765764, 1.9423871721540178, 1.9416966438293457, 1.940995216369629, 1.9402968542916434, 1.939593928200858, 1.93888521194458, 1.9381828308105469, 1.937467166355678, 1.9367527280535017, 1.9360332489013672, 1.9353156770978654, 1.934593949999128, 1.9338664327348982, 1.9331226348876953, 1.9323872838701521, 1.931648118155343, 1.9309188297816686, 1.930173056466239, 1.9294302804129464, 1.9286730630057198, 1.927913052695138, 1.9271445955548967, 1.926370484488351, 1.925602912902832, 1.924825940813337, 1.9240428379603796, 1.9232618468148368, 1.9224789483206612, 1.9216872623988561, 1.9208921704973494, 1.9200941494532995, 1.9192887714930944, 1.9184819630214147, 1.9176552636282784, 1.9168414388384138, 1.9160118103027344, 1.9151768003191267, 1.9143363407679967, 1.9135047367640905, 1.9126581464494978, 1.9118106705801827, 1.910942895071847, 1.9100843838282995, 1.9092082296098982, 1.9083220618111747, 1.9074430465698242, 1.906543254852295, 1.905644348689488, 1.9047401291983468, 1.903829710824149, 1.902914319719587, 1.9019875526428223, 1.9010541098458427, 1.9001071112496513, 1.899156161717006, 1.898202351161412, 1.8972381864275252, 1.8962633269173759, 1.8952773639133997], "val_accuracy": [0.03966666758060455, 0.0416666679084301, 0.04699999839067459, 0.05299999937415123, 0.05900000035762787, 0.06366666406393051, 0.06866666674613953, 0.07333333045244217, 0.07966666668653488, 0.08733333647251129, 0.09433333575725555, 0.0989999994635582, 0.10733333230018616, 0.1146666631102562, 0.12200000137090683, 0.1276666671037674, 0.1326666623353958, 0.14000000059604645, 0.14399999380111694, 0.1496666669845581, 0.15466666221618652, 0.16300000250339508, 0.16899999976158142, 0.1756666600704193, 0.18199999630451202, 0.1889999955892563, 0.1926666647195816, 0.20100000500679016, 0.20733332633972168, 0.21299999952316284, 0.218666672706604, 0.22466666996479034, 0.2290000021457672, 0.23533333837985992, 0.2409999966621399, 0.24500000476837158, 0.25066667795181274, 0.25466665625572205, 0.25999999046325684, 0.26600000262260437, 0.27266666293144226, 0.27566665410995483, 0.2783333361148834, 0.2823333442211151, 0.28733333945274353, 0.2906666696071625, 0.29366666078567505, 0.2966666519641876, 0.30000001192092896, 0.304666668176651, 0.3083333373069763, 0.31033334136009216, 0.31333333253860474, 0.3163333237171173, 0.3199999928474426, 0.3226666748523712, 0.3253333270549774, 0.32633334398269653, 0.3296666741371155, 0.3323333263397217, 0.3343333303928375, 0.3370000123977661, 0.3413333296775818, 0.34166666865348816, 0.3440000116825104, 0.34566667675971985, 0.3486666679382324, 0.3499999940395355, 0.35100001096725464, 0.35333332419395447, 0.35466668009757996, 0.3580000102519989, 0.35866665840148926, 0.3596666753292084, 0.3606666624546051, 0.3619999885559082, 0.3636666536331177, 0.36633333563804626, 0.36800000071525574, 0.3686666786670685, 0.36933332681655884, 0.37033334374427795, 0.37299999594688416, 0.3733333349227905, 0.37400001287460327, 0.37599998712539673, 0.3779999911785126, 0.3786666691303253, 0.38066667318344116, 0.38066667318344116, 0.38100001215934753, 0.38233333826065063, 0.3840000033378601, 0.3856666684150696, 0.38600000739097595, 0.3863333463668823, 0.3893333375453949, 0.39133334159851074, 0.39266666769981384, 0.39399999380111694]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1, 0, 0], [0, 0, 1, 1], [1, 4], [7, 5], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [57, 9, 50]], "fitness": -0.3871428668498993, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3622871911158856, 2.2987077144851553, 2.3041643300596215, 2.303310625273806, 2.303110786102168, 2.3030265208327334], "accuracy": [0.21925769746303558, 0.14819706976413727, 0.09932637959718704, 0.09774138033390045, 0.09496764093637466, 0.09576013684272766], "val_loss": [1.7596565655299596, 1.9753550801958357, 1.9739905084882463, 1.9737266131809779, 1.973656381879534, 1.9736460958208357], "val_accuracy": [0.3513333201408386, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [2, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 3, 2, 0, 1, 5, 5, 1, 3, 5], [1, 1, 2, 2, 0, 0, 1, 1], [63, 9, 50]], "fitness": -0.30314284563064575, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.723443697850151, 2.273511750555435, 2.5893574471738847, 2.30425819360569, 2.3032663674670095, 2.3030076717199854, 2.3030497690217686], "accuracy": [0.18953903019428253, 0.15836745500564575, 0.11596883088350296, 0.09774138033390045, 0.09998679161071777, 0.09509972482919693, 0.09219389408826828], "val_loss": [1.974593230656215, 2.786724363054548, 1.9753221784319197, 1.973888874053955, 1.9736411912100655, 1.973646913255964, 1.9736858095441545], "val_accuracy": [0.10400000214576721, 0.28333333134651184, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [0, 5, 0, 3, 4], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 9, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [57, 9, 50]], "fitness": -0.15714286267757416, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.8407520972002356, 2.3556043863013088, 2.345482539979458, 2.390745219521755, 2.336918647499321, 2.3368945754104997, 2.3472326576213765], "accuracy": [0.17461365461349487, 0.11834631860256195, 0.1728965789079666, 0.09721305221319199, 0.09879804402589798, 0.09694888442754745, 0.1002509593963623], "val_loss": [2.0475455011640276, 1.8423352241516113, 2.055640016283308, 1.9992333820887975, 2.024300983973912, 2.027348109654018, 1.9882630620683943], "val_accuracy": [0.10400000214576721, 0.17499999701976776, 0.1003333330154419, 0.1003333330154419, 0.10100000351667404, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 1, 8, 3, 8, 5, 9, 0, 7, 5], [1, 0, 1, 3, 1, 1], [43, 12, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 2, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [92], [1, 1, 1, 1, 1], [0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [3, 4, 8, 4, 1, 5, 5, 1, 7, 3, 9], [1, 0, 1, 3, 1, 1], [43, 9, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 14, 8, 6, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(alpha)))), grad))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.math.square(tf.math.subtract(sigma, alpha)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [7, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2, 3, 4, 1, 5, 0, 2, 0, 4, 5, 4, 5], [11, 61, 41, 19, 22], [1, 1, 1], [1, 1], [2], [5], [76], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 1, 7, 5], [1, 0, 1, 3, 1, 1], [43, 38, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 36, 36, 21, 15, 3, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(grad), grad), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, beta), grad), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), alpha), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [88005718630266.22, 2.3509553948161686, 2.3899110836706234, 2.4767427551212595, 2.705880809154619, 3.375043254786038], "accuracy": [0.05507858842611313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0067919322422574, 2.0312395777021135, 2.0822781835283553, 2.2058254650660922, 2.561271599360875, 3.5226155689784457], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [0, 5, 0, 3, 4], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 8, 9, 3, 1, 5, 5, 0, 7, 5], [0, 0, 2, 0, 1, 1], [57, 9, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025843556751395, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [54], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [0, 1], [2], [5], [76], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 7, 3, 1, 5, 5, 0, 7, 5], [1, 3, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [35], [1, 1, 0, 1, 1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1, 7, 5], [1, 1, 2, 2, 0, 0, 1, 1], [63, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 10, 6, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.square(tf.math.square(tf.math.subtract(beta, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [5, 0, 1, 1, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [2, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 3, 2, 0, 1, 5, 5, 1, 3, 5], [1, 0, 1, 3, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025843556751395, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [69], [1, 1, 0, 1, 1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1, 7, 5], [1, 1, 2, 2, 0, 0, 1, 1], [63, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 10, 6, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.square(tf.math.square(tf.math.subtract(beta, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [7, 0, 1, 7, 5, 8, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9, 9], [1, 3, 5, 2, 4, 5, 4, 2, 5, 3, 2, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1, 7, 5], [1, 1, 2, 2, 0, 0, 1, 1], [63, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 23, 13, 3, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(beta)), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.square(tf.math.square(tf.math.subtract(beta, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [3, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3, 0], [34, 74, 15], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [7], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1, 7, 5], [1, 0, 1, 3, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 3, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.square(tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [1, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 1, 2, 3, 1, 5, 5, 1, 7, 5], [1, 0, 1, 2, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08625016361474991, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 2, 3, 8, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 0, 1, 1, 3, 3, 0, 3], [92, 48], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 8, 9, 3, 1, 5, 5, 1, 7, 5, 9], [1, 0, 1, 3, 1, 1], [43, 9, 50]], "fitness": -0.08057142794132233, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 9, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.math.square(alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.add(alpha, sigma), alpha))))", "other_info": {"loss": [2.301450568513942, 2.299312275508769, 2.3007409166996866, 2.3013724707310086, 2.301457877046381, 2.302090798134754, 2.3019846997886457, 2.3023705081602115, 2.302693516082925, 2.3026119475162514, 2.302953638940392, 2.3031204062965585, 2.3030549079797775, 2.3033320630435945], "accuracy": [0.09113723784685135, 0.10157178342342377, 0.0952318087220192, 0.08757099509239197, 0.08558975160121918, 0.08625016361474991, 0.09074098616838455, 0.09298639744520187, 0.107647605240345, 0.1088363528251648, 0.10447761416435242, 0.10051512718200684, 0.09959053993225098, 0.10051512718200684], "val_loss": [1.9695902551923479, 1.969935485294887, 1.9718661308288574, 1.9723596572875977, 1.9729326793125697, 1.9729130608694894, 1.9732879911150252, 1.9735982758658273, 1.9736009325299944, 1.9739886692592077, 1.974257264818464, 1.9742247717721122, 1.9745005198887415, 1.9743046079363142], "val_accuracy": [0.06333333253860474, 0.06833333522081375, 0.0533333346247673, 0.06133333221077919, 0.04800000041723251, 0.1080000028014183, 0.0949999988079071, 0.09799999743700027, 0.1106666699051857, 0.10266666859388351, 0.10433333367109299, 0.10133333504199982, 0.09933333098888397, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 0, 1, 1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 8, 1, 7, 5], [1, 1, 2, 1, 2, 0, 1, 1], [63, 9, 50]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3020168959960614, 2.300453963233747, 2.300984129315559, 2.300307793151811, 2.298771027167082, 2.3008508356633737, 2.299786766553835, 2.2998409185584636, 2.299968120113671, 2.2990476396404724, 2.2988969787803732, 2.299323036623133, 2.2996505412128325, 2.3002505890996527], "accuracy": [0.09008057415485382, 0.09430722147226334, 0.09232597798109055, 0.09734513610601425, 0.09787346422672272, 0.09668471664190292, 0.09945846349000931, 0.09681680053472519, 0.09272222965955734, 0.09800554811954498, 0.09932637959718704, 0.10130762308835983, 0.09681680053472519, 0.0940430611371994], "val_loss": [1.970235824584961, 1.969742706843785, 1.969475609915597, 1.9694981575012207, 1.969613756452288, 1.969670636313302, 1.9696625982012068, 1.9696070807320731, 1.969562258039202, 1.9697060585021973, 1.969940458025251, 1.9701813970293318, 1.9704196793692452, 1.9706085068838937], "val_accuracy": [0.043666668236255646, 0.04933333396911621, 0.056333333253860474, 0.06266666948795319, 0.06533333659172058, 0.06833333522081375, 0.070333331823349, 0.07199999690055847, 0.07433333247900009, 0.07333333045244217, 0.07400000095367432, 0.0729999989271164, 0.0716666653752327, 0.07199999690055847]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 1, 4, 3], [11, 61, 41, 19, 22], [1, 0, 1], [0, 1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 3, 2, 0, 1, 5, 5, 1, 3, 5], [1, 1, 2, 2, 0, 0, 1, 1], [43, 9, 50]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 17, 10, 7, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.multiply(tf.math.add(tf.math.negative(tf.math.subtract(alpha, beta)), tf.math.square(tf.math.square(tf.math.subtract(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))))), alpha))", "other_info": {"loss": [2.3026208955661227, 2.302129473148981, 2.3034027515542883, 2.3031156428060857, 2.301576847570951, 2.3040445191969474], "accuracy": [0.08955223858356476, 0.09298639744520187, 0.08796724677085876, 0.09034473448991776, 0.08836349099874496, 0.08942015469074249], "val_loss": [1.9711592538016183, 1.9713238307407923, 1.9714734213692802, 1.9716354778834753, 1.971789768763951, 1.9719514165605818], "val_accuracy": [0.03466666489839554, 0.033666666597127914, 0.033666666597127914, 0.032999999821186066, 0.03166666626930237, 0.03133333474397659]}}]