[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 5, 8, 7, 5, 1, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2, 1, 4, 0, 5, 2, 1, 2, 1, 0, 4], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 4, 5, 2, 9, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7940000295639038, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 22, 14, 4, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(alpha, grad), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, beta)), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))))))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0016534660691048, 1.4467800267069268, 1.0557575290229233, 0.8881986866128317, 0.8075983982910617, 0.7862888018941017, 0.7082218115182679, 0.7327892866589374, 0.6912077449615432, 0.6963442993075888, 0.6443082633555101, 0.6329819939675316, 0.6196721047064601, 0.6423289653190831, 0.6039156037834358, 0.5854278091331908, 0.5746156127933718], "accuracy": [0.33007529377937317, 0.505349338054657, 0.622639000415802, 0.6633205413818359, 0.6905296444892883, 0.7067758440971375, 0.7279091477394104, 0.7226257920265198, 0.7327961921691895, 0.7396644949913025, 0.7511557340621948, 0.7582882046699524, 0.7565711140632629, 0.7512878179550171, 0.7613261342048645, 0.7751948237419128, 0.7792893648147583], "val_loss": [1.4752302169799805, 0.777032562664577, 0.6535361664635795, 0.6327951295035226, 0.603762320109776, 0.5492176839283535, 0.5774648359843663, 0.5037134204592023, 0.5074571541377476, 0.5007779427937099, 0.49273225239345003, 0.469807641846793, 0.48322018555232454, 0.4851440702165876, 0.4824219601494925, 0.4948329584939139, 0.47634969438825336], "val_accuracy": [0.44699999690055847, 0.6596666574478149, 0.7203333377838135, 0.6983333230018616, 0.7319999933242798, 0.7516666650772095, 0.7170000076293945, 0.762666642665863, 0.7730000019073486, 0.7766666412353516, 0.7720000147819519, 0.7943333387374878, 0.7906666398048401, 0.7620000243186951, 0.765666663646698, 0.7576666474342346, 0.7730000019073486]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 8, 5, 3, 3, 8, 2, 7, 2, 9, 9, 8, 0], [4, 3, 5, 2, 1, 4, 0, 2, 2, 3, 2, 1, 0, 3], [11, 61, 14, 19, 22], [0, 0, 1, 1, 0], [0, 0, 1], [2, 2], [5], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 8, 9, 3, 4, 5, 2, 9, 7, 5], [1, 0, 0, 3, 1, 1], [30, 9, 44]], "fitness": -0.7934285998344421, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 24, 12, 3, 5, 3, 2, 1, 0, 4, 3, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, alpha)))), tf.math.add(beta, grad))), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), beta)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))))), tf.math.add(beta, beta))))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.117641012320004, 1.3976462522061304, 1.1342874367113331, 0.9229559004267429, 0.8437160121026277, 0.8166810671540929, 0.780215267846298, 0.7721255162231139, 0.7227231627284669, 0.7084743390623699, 0.6963325391245903, 0.6717279164577913, 0.6639991301224925, 0.6682662794681635, 0.6399763803582197, 0.61624491736716, 0.6240425383284138, 0.6106098576890101, 0.5937517823292484, 0.5986023058413893], "accuracy": [0.3051116168498993, 0.5309734344482422, 0.5929203629493713, 0.6646413803100586, 0.6919825673103333, 0.6989829540252686, 0.7153612375259399, 0.7143045663833618, 0.7224937081336975, 0.7333245277404785, 0.7388719916343689, 0.7475894689559937, 0.7499669790267944, 0.7424382567405701, 0.7635715007781982, 0.7754589915275574, 0.7713643908500671, 0.7717606425285339, 0.7819310426712036, 0.7753269076347351], "val_loss": [1.2650250366755895, 0.8882246698651995, 0.730506317956107, 0.6400958299636841, 0.6607970169612339, 0.5899454525538853, 0.554166146687099, 0.5505927460534232, 0.535469480923244, 0.5124948535646711, 0.5355651038033622, 0.4918762615748814, 0.4925152914864676, 0.5120728697095599, 0.46623577390398296, 0.4782647064753941, 0.4535144397190639, 0.4548405408859253, 0.47517476763044086, 0.4783034154347011], "val_accuracy": [0.546999990940094, 0.5823333263397217, 0.6926666498184204, 0.7236666679382324, 0.7120000123977661, 0.7493333220481873, 0.7606666684150696, 0.7379999756813049, 0.737333357334137, 0.7746666669845581, 0.7573333382606506, 0.7829999923706055, 0.7633333206176758, 0.7689999938011169, 0.7910000085830688, 0.7789999842643738, 0.7906666398048401, 0.7900000214576721, 0.7666666507720947, 0.7720000147819519]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.3959999978542328, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.260607903549432, 2.2409157051528057, 2.716722114163934, 2.270578071536043, 2.3051006665492433, 2.3038315213099763, 2.303849408119866], "accuracy": [0.23022057116031647, 0.17817988991737366, 0.16510368883609772, 0.13921542465686798, 0.09826971590518951, 0.09945846349000931, 0.09747721254825592], "val_loss": [1.992166246686663, 2.529989923749651, 1.8351168632507324, 1.975205898284912, 1.9738802909851074, 1.9737727982657296, 1.9737046105521066], "val_accuracy": [0.09799999743700027, 0.30266666412353516, 0.2056666612625122, 0.09866666793823242, 0.09866666793823242, 0.09966666996479034, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.29085713624954224, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.258823898096504, 2.2693077263941053, 2.228679708407272, 2.285829111349156, 2.1690089466423483, 2.304933519757671, 2.303693226252596, 2.3017702721459847], "accuracy": [0.23074890673160553, 0.1740853190422058, 0.16629242897033691, 0.13234710693359375, 0.23722097277641296, 0.09536388516426086, 0.10394927859306335, 0.10698718577623367], "val_loss": [1.991192068372454, 1.5762330804552351, 1.6925970145634242, 1.9057597432817732, 1.9756082807268416, 1.9738810403006417, 1.9732371738978796, 1.9547154562813895], "val_accuracy": [0.09799999743700027, 0.2840000092983246, 0.28466665744781494, 0.28433331847190857, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.20499999821186066]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1, 1, 0, 1], [0, 0, 0], [2, 1, 5], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.2808571457862854, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2587588247826482, 2.279108731061114, 2.242844372629537, 2.303694588019155, 2.3031233612887374, 2.3032416023236255, 2.3031897559346715], "accuracy": [0.23074890673160553, 0.17382116615772247, 0.14832915365695953, 0.10011887550354004, 0.0948355570435524, 0.09576013684272766, 0.09708096832036972], "val_loss": [1.9904293332781111, 1.6069681985037667, 1.974283150264195, 1.9738711629595076, 1.9737471171787806, 1.9737552915300642, 1.9736302239554269], "val_accuracy": [0.0976666659116745, 0.26866665482521057, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 6, 1, 8, 7, 5, 3, 0, 2, 1, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 2, 0, 3, 1, 1, 1], [9, 45, 40], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 1, 7, 5, 6, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 3, 7, 2, 9, 9], [4, 3, 5, 2, 2, 1, 0, 5, 2, 1, 2, 1, 0, 2], [11, 61, 41, 86, 22], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 4, 5, 2, 9, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))), tf.math.negative(grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)))))))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), alpha))), alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [64], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2, 1, 4, 0, 5, 2, 1, 2, 1, 0, 4], [11, 61, 41, 19, 22], [0, 0, 1, 1, 1], [0, 0], [2, 1], [5], [76], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 7, 3, 4, 5, 2, 9, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 14, 8, 6, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.multiply(alpha, tf.math.pow(tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), sigma), alpha), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [5, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1], [2, 3, 7], [5, 5], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 7, 5, 3, 2, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [60406.25439439001, 2.3135667032711162, 2.3056572677122054, 2.303571114371938, 2.3031109368812137, 2.302898252298488], "accuracy": [0.09311848133802414, 0.09628847241401672, 0.09509972482919693, 0.09681680053472519, 0.09391097724437714, 0.09840179979801178], "val_loss": [1.988504273550851, 1.9774738039289201, 1.9746119635445731, 1.9739225251334054, 1.9737864221845354, 1.9737435749598913], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 5, 8, 7, 5, 1, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 1, 2, 2, 3, 3, 3, 8, 0, 7, 2, 9, 9], [4, 3, 5, 2, 1, 3, 0, 5, 2, 1, 2, 1, 0, 4], [68, 61, 41, 19, 22], [0, 0, 1, 0], [0, 0, 1], [2, 0], [5], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 1, 9, 3, 4, 5, 2, 9, 7, 5], [1, 1, 0, 3, 1, 1], [31, 81, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 25, 25, 14, 11, 1, 4, 3, 2, 1, 0, 5, 3, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(beta)), tf.math.multiply(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(beta, alpha))))))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2656160569.364639, 96281955289.99393, 575292229529.4783, 1790231426218.013, 3965721978326.2744, 7840933758496.935], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [18542390125.714287, 245500711497.14285, 968522352932.5714, 2475516269129.143, 5054566086363.429, 9004664974774.857], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 2, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 1, 0, 1, 3, 0, 3], [42, 70, 96], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 15, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), alpha))), tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), sigma)))", "other_info": {"loss": [1.3611171809620847e+23, 349507090530418.7, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10619468986988068, 0.09826971590518951, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [633608933848795.4, 212579013249316.56, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 0, 5, 8, 7, 5, 1, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 1, 2, 2, 3, 6, 8, 2, 7, 2, 9, 9], [3, 0, 5, 2, 1, 4, 0, 5, 3, 1, 2, 1, 1, 4], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 4, 5, 2, 9, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1164033639.297347, 22101484927.171577, 102856256596.26259, 285187055383.3649, 621018739771.6466, 1126791389353.8777], "accuracy": [0.09813763201236725, 0.09985470771789551, 0.09945846349000931, 0.1022322028875351, 0.09760929644107819, 0.10619468986988068], "val_loss": [4405858304.0, 35236070546.28571, 118909155035.42857, 281844861220.5714, 550463696310.8572, 951186957458.2858], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 5, 8, 7, 5, 1, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [68], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [7, 0, 1, 9, 5, 5, 7, 4, 0, 9, 2, 3, 2, 3, 3, 5, 8, 2, 7, 9, 9, 9], [3, 3, 5, 2, 5, 0, 2, 1, 4, 5, 5, 2, 3, 0], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 1, 9, 3, 4, 5, 2, 9, 7, 5], [1, 2, 0, 1, 1, 1], [92, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 10, 3, 2, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.square(grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.square(beta), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 2, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.2984309960631533e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0544181764125824, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [82], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 3, 2, 3, 1, 5, 5, 0, 7, 5], [0, 0, 3, 3, 1, 1], [55, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(sigma, tf.math.subtract(alpha, tf.math.square(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 1, 1, 3, 3, 0, 3], [28], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3028002896596727, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 0, 8, 4, 5, 3, 0, 5, 0, 2, 5, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 1, 1, 1, 2, 0, 3], [10, 19], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 8, 6, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2, 1, 0, 0, 5, 2, 1, 2, 1, 0, 3], [11, 61, 87, 11, 22], [1, 0, 1], [0], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 4, 5, 2, 9, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 17, 17, 12, 5, 2, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3023915044887584, 2.3016314517867533, 2.301963958631905, 2.3001614813287543, 2.3028138170719714, 2.3028126156262405], "accuracy": [0.09325055778026581, 0.09774138033390045, 0.0870426595211029, 0.08955223858356476, 0.09100515395402908, 0.09087307006120682], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [0], [2], [5], [76], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), sigma)", "other_info": {"loss": [2.3023915044887584, 2.3016314517867533, 2.301963958631905, 2.3001614813287543, 2.3028138170719714, 2.3028126156262405], "accuracy": [0.09325055778026581, 0.09774138033390045, 0.0870426595211029, 0.08955223858356476, 0.09100515395402908, 0.09087307006120682], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 5, 8, 7, 5, 1, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 1, 0, 3, 2, 0, 0], [68], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 4, 4, 2, 2, 2, 3, 3, 3, 8, 2, 2, 2, 9, 9], [5, 3, 5, 2, 3, 4, 3, 1, 1, 3, 0, 2, 0, 3], [11, 61, 41, 57, 22], [1, 0, 1], [1], [2], [1], [76], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 8, 4, 3, 1, 5, 5, 1, 7, 8, 3], [3, 0, 1, 3, 1, 1, 3, 1], [52, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023915044887584, 2.3016314517867533, 2.301963958631905, 2.3001614813287543, 2.3028138170719714, 2.3028126156262405], "accuracy": [0.09325055778026581, 0.09774138033390045, 0.0870426595211029, 0.08955223858356476, 0.09100515395402908, 0.09087307006120682], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]