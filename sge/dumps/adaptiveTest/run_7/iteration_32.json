[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 1, 7, 5], [1, 0, 1, 3, 1, 1], [43, 9, 50]], "fitness": -0.7891428470611572, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.square(tf.math.subtract(sigma, alpha))))))", "other_info": {"loss": [1.98216806812498, 1.6235409591018783, 1.10534101177468, 0.9119253667306906, 0.8200086101470386, 0.785031843879802, 0.7518689191777551, 0.7153702072652576, 0.6985836224690751, 0.6788776244831879, 0.6834917499042537, 0.6123470011530237, 0.615742008534279, 0.636059767573879, 0.5948741276187668, 0.606479010884599, 0.5677632726635428, 0.5667631304999384, 0.5599302344822282], "accuracy": [0.3350944519042969, 0.46347907185554504, 0.6045436263084412, 0.6643772125244141, 0.7003037929534912, 0.7096816897392273, 0.7193237543106079, 0.7321357727050781, 0.7367587089538574, 0.7442874312400818, 0.7413815855979919, 0.7701756954193115, 0.7712323069572449, 0.7578919529914856, 0.774798572063446, 0.7677981853485107, 0.7906485199928284, 0.7905164361000061, 0.7913089394569397], "val_loss": [1.565560988017491, 0.850811277117048, 0.732961620603289, 0.6094045128141131, 0.6004023892538888, 0.5803235939570835, 0.5791901690619332, 0.5624585321971348, 0.513306907245091, 0.5759502479008266, 0.47522824151175364, 0.49037623405456543, 0.4831725869859968, 0.45240330696105957, 0.4518552677971976, 0.4829526628766741, 0.44286441802978516, 0.5019216878073556, 0.4368180547441755], "val_accuracy": [0.3409999907016754, 0.6306666731834412, 0.6706666946411133, 0.7206666469573975, 0.7310000061988831, 0.7193333506584167, 0.7386666536331177, 0.7253333330154419, 0.7713333368301392, 0.7213333249092102, 0.7896666526794434, 0.765999972820282, 0.7730000019073486, 0.796999990940094, 0.796999990940094, 0.7820000052452087, 0.7953333258628845, 0.7506666779518127, 0.7956666946411133]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 3, 2, 0, 1, 5, 5, 1, 3, 5], [1, 1, 2, 2, 0, 0, 1, 1], [63, 9, 50]], "fitness": -0.4099999964237213, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.1671924033988152, 2.33923405867841, 2.279871963758699, 2.295169231898245, 2.255787832484096, 2.262688315130417, 2.143304134388295, 2.227418344569732, 2.3093017021174664], "accuracy": [0.20578522980213165, 0.14555540680885315, 0.16378284990787506, 0.11993131786584854, 0.15915995836257935, 0.18253862857818604, 0.26601505279541016, 0.21635186672210693, 0.10011887550354004], "val_loss": [1.9507083892822266, 1.9685957091195243, 1.972747802734375, 1.9045893805367606, 1.950681277683803, 1.8760754040309362, 1.9657393183026994, 1.9796734537397112, 1.9749227932521276], "val_accuracy": [0.09966666996479034, 0.13566666841506958, 0.10133333504199982, 0.2720000147819519, 0.2136666625738144, 0.24799999594688416, 0.16233333945274353, 0.1003333330154419, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [7, 0, 6, 7, 6, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [2, 0, 1, 2, 4, 2, 3, 5, 4, 0], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [57, 9, 50]], "fitness": -0.3831428587436676, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 12, 10, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))), tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)))), grad))), grad))), tf.math.add(beta, grad))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.1672138958685214, 2.4136346823440773, 2.2963570347079165, 2.3040881485687725, 2.3033959259682675, 2.3029103861697804, 2.300486179374984, 2.2072812482712685, 2.3050882007625075, 2.3041737270141085, 2.3038201736122184, 2.3035321258330277], "accuracy": [0.20618148148059845, 0.1508387327194214, 0.17421740293502808, 0.1018359512090683, 0.10157178342342377, 0.09866596013307571, 0.11055342853069305, 0.22480517625808716, 0.09694888442754745, 0.10196803510189056, 0.09509972482919693, 0.09800554811954498], "val_loss": [1.9499474252973283, 1.9420415333339147, 1.9752112116132463, 1.9735984802246094, 1.9736084256853377, 1.9729501860482352, 1.960779803139823, 1.9769261905125208, 1.9740144865853446, 1.9739951406206404, 1.9741061074393136, 1.973700795854841], "val_accuracy": [0.09966666996479034, 0.19900000095367432, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.20100000500679016, 0.10133333504199982, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 9, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [57, 9, 50]], "fitness": -0.3522857129573822, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7469382828032383, 2.276934691360992, 2.5321893434105074, 2.3044017839425464, 2.303871414586144, 2.303489814486722], "accuracy": [0.2362964004278183, 0.2218993455171585, 0.15519747138023376, 0.1006472036242485, 0.09457138925790787, 0.0940430611371994], "val_loss": [1.7728768757411413, 1.873056071145194, 1.9750035830906458, 1.9737561089651925, 1.9736294746398926, 1.9736347198486328], "val_accuracy": [0.3296666741371155, 0.15166667103767395, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1], [7, 5, 2, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 4, 2], [11, 61, 41, 19, 22], [0, 0, 1], [0, 1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1], [1, 1, 2, 2, 0, 0, 1, 1], [57, 9, 50]], "fitness": -0.3017142713069916, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.1643748409665258, 2.4000455671848795, 2.262199733172583, 2.2860484577330618, 2.304544872942224, 2.3032298940850793, 2.303347760471197], "accuracy": [0.2082948088645935, 0.1368379294872284, 0.13617752492427826, 0.14912164211273193, 0.09602430462837219, 0.10487385839223862, 0.09430722147226334], "val_loss": [1.8633178302219935, 1.878487995692662, 1.9685544967651367, 1.9744514056614466, 1.9737391471862793, 1.9737298829214913, 1.9737062454223633], "val_accuracy": [0.10700000077486038, 0.24066667258739471, 0.10266666859388351, 0.09866666793823242, 0.1003333330154419, 0.09966666996479034, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 2, 9, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [57, 9, 50]], "fitness": -0.24771428108215332, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.8754968840952135, 2.30283900416365, 2.2655081064347438, 2.305437913109141, 2.3034138001817452, 2.3031054653464498, 2.3030688171263276], "accuracy": [0.18782195448875427, 0.11266675591468811, 0.2090873122215271, 0.09642054885625839, 0.10038304328918457, 0.09681680053472519, 0.09576013684272766], "val_loss": [1.9765746934073312, 1.9614857946123396, 1.9774844987051827, 1.9743187768118722, 1.9737962314060755, 1.973677294594901, 1.973618507385254], "val_accuracy": [0.10400000214576721, 0.25033333897590637, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3, 0, 1, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [3, 5, 2, 3, 1, 5, 5, 1], [1, 2, 2, 1, 2, 0, 0], [63, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4], [11, 61, 41, 19, 22], [1, 0, 1], [0, 1], [2], [5], [76], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 5, 2, 3, 1, 5, 5, 1, 8, 4, 4], [1, 0, 1, 3, 1, 3, 1, 2], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 19, 11, 8, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.square(alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.sqrt(alpha), tf.math.pow(sigma, tf.math.pow(alpha, sigma))))), alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 0, 1], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1], [1, 1, 2, 2, 0, 0, 1, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(grad, grad), tf.math.square(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304662661356555, 2.318009384587582, 2.3579882012224784, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0882314071059227, 0.07806102186441422, 0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9774656976972307, 1.9896020208086287, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.036666665226221085, 0.07133333384990692, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [0], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [3, 4, 9, 3, 1, 5, 5, 1, 8, 1, 2], [1, 0, 2, 2, 0, 0, 1, 1], [57, 9, 50, 78]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 18, 11, 7, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.subtract(beta, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 7, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 4, 5, 2, 5, 3], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [3, 3, 2, 0, 1, 5, 5, 1, 3, 5], [2, 1, 2, 2, 0, 0, 1, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.square(tf.math.add(tf.math.add(beta, grad), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [7, 5, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 5, 5, 0, 5, 4], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.square(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [], [1, 1, 1, 1, 1], [0, 0, 1], [9, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 3, 1, 1, 5, 1, 0, 1], [1, 1, 2, 2, 0, 0, 1, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 17, 10, 7, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.subtract(tf.math.square(tf.math.subtract(beta, tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20076608657836914, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [3, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 1, 1, 3, 3, 0, 3, 2], [35, 40, 45], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [0, 0, 1], [0, 1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 8, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [1], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 9, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [1, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2], [35, 40, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [5, 1, 3, 1], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [3, 5, 9, 3, 1, 5, 5, 1], [1, 1, 2, 1, 2, 0, 3], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1], [1, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [0], [11, 61, 41, 19, 22], [0, 0, 1], [0, 1], [2], [5], [76], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [3, 5, 2, 3, 2, 5, 5, 1, 4, 3], [2, 0, 2, 2, 1], [16, 9, 50]], "fitness": -0.09771428257226944, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301126285299035, 2.3030012341034394, 2.3041039577895277, 2.3085904166746007, 2.3181337430382354, 2.3309835113822164, 2.3638963323023026, 2.4295402854866026, 2.528565324513258, 2.70822027897586, 2.939477115023201, 3.333438064664378, 3.8241397724521944, 4.611566956300525], "accuracy": [0.09576013684272766, 0.09338264167308807, 0.09100515395402908, 0.09047681838274002, 0.08889182657003403, 0.08968432247638702, 0.09338264167308807, 0.09628847241401672, 0.10038304328918457, 0.09893012791872025, 0.1018359512090683, 0.09840179979801178, 0.10553427785634995, 0.09813763201236725], "val_loss": [1.9712021010262626, 1.9718971252441406, 1.97329957144601, 1.975318159375872, 1.978839669908796, 1.9882261412484306, 2.0087665830339705, 2.0461882182529996, 2.1102138928004672, 2.2149156161717007, 2.378654752458845, 2.6233199664524625, 2.9723664011274065, 3.447700704847063], "val_accuracy": [0.03200000151991844, 0.02800000086426735, 0.027000000700354576, 0.03999999910593033, 0.07800000160932541, 0.09066666662693024, 0.09333333373069763, 0.09700000286102295, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [4, 3, 5, 2], [11, 61, 41, 19, 22], [0, 0, 1, 1, 1], [0, 0], [2, 6], [0], [76], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 9, 3, 1, 5, 5, 1], [1, 1, 2, 2, 0, 0, 1, 1], [57, 9, 50]], "fitness": -0.05714285746216774, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(alpha))", "other_info": {"loss": [2.301025341624959, 2.3019484749968973, 2.3011924358265134, 2.3015797088773198, 2.3025884764966964, 2.30100817873084, 2.301565972553536, 2.302015281954871, 2.3012811478181616, 2.301397799689772, 2.3004597779262523, 2.3009458367598765, 2.2999709578647494, 2.3030788741327783, 2.3011665678043185, 2.3021742798759006, 2.3000736069039993, 2.301374442604759, 2.299446127402422, 2.299810464749672, 2.301051808008192, 2.3005125762890075, 2.3006022525044667, 2.3007271566316674, 2.299570469446249, 2.300829209955125, 2.3008969599119564, 2.299870207766028, 2.2991726583320355, 2.2992369879537553, 2.2986281788218466, 2.299459619670732, 2.2982516144843324, 2.298964482571833, 2.300708660533352, 2.2996688042145523, 2.301026099928933, 2.2998951302700825, 2.2988318904138056, 2.299311092674236, 2.298889894715988, 2.299541779386999, 2.2987458952161943, 2.299921980969831, 2.2981744336256846, 2.2990089837412997, 2.2984981884211284, 2.2983032521192563, 2.297308929655231, 2.2989196314110716, 2.2988107314655855, 2.2986001140799552, 2.2993687210994986, 2.2990964785417027, 2.299158012326903, 2.2978341840812795, 2.2986593599789304, 2.2967673899900363, 2.2971534421021644, 2.296272550008993, 2.2972935337227383, 2.2975442065948255, 2.2989957700426302, 2.298558269714116, 2.29661323120093, 2.2970460757067994, 2.2978770152185066, 2.2969215211615097, 2.2968101871799345, 2.2962374688769374, 2.2983174682403553, 2.2979264027564406, 2.2968523287266125, 2.296840109986998, 2.297386298767249, 2.2967388590549542, 2.2980312740546114, 2.2969691878406837, 2.2970043511328333, 2.2974399860587655, 2.2973500315570843, 2.2967519506629053, 2.2974811911252293, 2.296103968265711, 2.296611012217076, 2.2957978929432232, 2.2963161187290972, 2.296081468240539, 2.296578839533459, 2.296703017414553, 2.295354008627385, 2.295774517750869, 2.295778435707218, 2.296741795089534, 2.2970179846698993, 2.296174992124371, 2.295595039891183, 2.2969627948784166, 2.296981008596676, 2.2966450314401494], "accuracy": [0.09576013684272766, 0.0952318087220192, 0.09470347315073013, 0.09087307006120682, 0.09021265059709549, 0.09298639744520187, 0.09087307006120682, 0.08994849026203156, 0.0936468094587326, 0.08558975160121918, 0.09219389408826828, 0.09589222073554993, 0.09760929644107819, 0.09153348207473755, 0.09457138925790787, 0.08770307898521423, 0.0936468094587326, 0.09602430462837219, 0.0948355570435524, 0.09628847241401672, 0.09760929644107819, 0.09074098616838455, 0.09509972482919693, 0.08968432247638702, 0.09985470771789551, 0.09285431355237961, 0.09536388516426086, 0.09642054885625839, 0.10038304328918457, 0.09800554811954498, 0.1014397069811821, 0.09932637959718704, 0.09985470771789551, 0.1026284471154213, 0.09800554811954498, 0.09377889335155487, 0.0936468094587326, 0.09800554811954498, 0.09932637959718704, 0.09800554811954498, 0.09681680053472519, 0.10460969805717468, 0.10117553919553757, 0.10077928751707077, 0.10130762308835983, 0.10342095047235489, 0.09906221181154251, 0.10170386731624603, 0.10355303436517715, 0.1014397069811821, 0.09959053993225098, 0.09509972482919693, 0.10447761416435242, 0.10566636174917221, 0.10011887550354004, 0.10579843819141388, 0.0948355570435524, 0.1018359512090683, 0.09932637959718704, 0.1088363528251648, 0.10289261490106583, 0.10091137140989304, 0.09932637959718704, 0.10791176557540894, 0.10011887550354004, 0.10394927859306335, 0.10368511080741882, 0.10672302544116974, 0.10170386731624603, 0.10606260597705841, 0.1026284471154213, 0.10540219396352768, 0.10645885765552521, 0.10791176557540894, 0.10381719470024109, 0.10381719470024109, 0.10711926966905594, 0.10210011899471283, 0.10566636174917221, 0.10236428678035736, 0.10711926966905594, 0.10447761416435242, 0.10606260597705841, 0.10976093262434006, 0.10302469879388809, 0.10606260597705841, 0.10817593336105347, 0.10593052208423615, 0.10342095047235489, 0.10672302544116974, 0.10527011007070541, 0.10355303436517715, 0.109232597053051, 0.10751552134752274, 0.10421344637870789, 0.11253467202186584, 0.107647605240345, 0.10474177449941635, 0.10051512718200684, 0.10210011899471283], "val_loss": [1.9708912031991142, 1.970808846609933, 1.9707252638680595, 1.9706432478768485, 1.970567090170724, 1.9704907962254115, 1.9704272406441825, 1.9703505379813058, 1.9702697481427873, 1.9701988356454032, 1.970121247427804, 1.9700491087777274, 1.9699715886797224, 1.969893183026995, 1.9698089872087752, 1.9697390283857072, 1.969663347516741, 1.9695895739964075, 1.9695138250078474, 1.96943541935512, 1.969364847455706, 1.9692892347063338, 1.9692237036568778, 1.9691459110804967, 1.9690805162702287, 1.969010898045131, 1.968937601361956, 1.968867574419294, 1.9687987736293249, 1.968736035483224, 1.9686782019478934, 1.9686149188450404, 1.968557562146868, 1.968496595110212, 1.9684393746512276, 1.9683795656476701, 1.968318053654262, 1.9682564054216658, 1.9681950296674455, 1.9681387628827776, 1.9680784089224679, 1.9680146489824568, 1.9679480280194963, 1.9678897857666016, 1.96783447265625, 1.9677762304033553, 1.9677239145551408, 1.9676674434116908, 1.9676134245736259, 1.9675611768450056, 1.967510427747454, 1.9674581800188338, 1.9674087933131628, 1.96736056464059, 1.9673059327261788, 1.967254298073905, 1.9672037533351354, 1.967146532876151, 1.9670967374529158, 1.9670463970729284, 1.9669981684003557, 1.966947419302804, 1.966902800968715, 1.9668473516191756, 1.9668025970458984, 1.966749804360526, 1.9666991233825684, 1.9666436740330286, 1.9665961946759904, 1.9665444919041224, 1.9664946283612932, 1.9664414950779505, 1.9663944925580705, 1.9663427897862025, 1.9662929262433733, 1.9662390436444963, 1.9661846160888672, 1.9661342075892858, 1.966087818145752, 1.9660449028015137, 1.9659981727600098, 1.9659469468253, 1.9658921105521066, 1.9658397947038924, 1.9657934052603585, 1.965745517185756, 1.9656928607395716, 1.965644087110247, 1.9655994006565638, 1.9655529430934362, 1.9655070304870605, 1.9654669761657715, 1.9654229027884347, 1.9653805324009486, 1.9653348241533553, 1.9652844837733678, 1.9652391161237444, 1.965196132659912, 1.9651535579136439, 1.9651096207754952], "val_accuracy": [0.03700000047683716, 0.036666665226221085, 0.036666665226221085, 0.03700000047683716, 0.03766666725277901, 0.03766666725277901, 0.039000000804662704, 0.03866666555404663, 0.03866666555404663, 0.03933333232998848, 0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.041333332657814026, 0.0416666679084301, 0.04233333468437195, 0.04266666620969772, 0.0430000014603138, 0.0430000014603138, 0.044333335012197495, 0.044333335012197495, 0.04533333331346512, 0.045666664838790894, 0.04600000008940697, 0.04633333161473274, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.050333332270383835, 0.050333332270383835, 0.05133333429694176, 0.052000001072883606, 0.052000001072883606, 0.052000001072883606, 0.052666667848825455, 0.05299999937415123, 0.05366666615009308, 0.05400000140070915, 0.05400000140070915, 0.05433333292603493, 0.05533333495259285, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.05666666850447655, 0.0573333315551281, 0.05766666680574417, 0.05766666680574417, 0.057999998331069946, 0.059333331882953644, 0.059333331882953644, 0.05966666713356972, 0.05999999865889549, 0.06133333221077919, 0.061666667461395264, 0.06266666948795319, 0.06300000101327896, 0.06333333253860474, 0.06433333456516266, 0.06499999761581421, 0.06533333659172058, 0.06566666811704636, 0.06599999964237213, 0.06599999964237213, 0.06666667014360428, 0.06666667014360428, 0.0676666647195816, 0.06866666674613953, 0.06966666877269745, 0.06966666877269745, 0.07000000029802322, 0.07000000029802322, 0.07100000232458115, 0.07133333384990692, 0.07133333384990692, 0.07233333587646484, 0.07266666740179062, 0.0729999989271164, 0.07333333045244217, 0.07333333045244217, 0.07400000095367432, 0.07533333450555801, 0.07699999958276749, 0.07766667008399963, 0.07900000363588333, 0.07900000363588333, 0.07900000363588333, 0.07900000363588333, 0.0793333351612091, 0.0793333351612091, 0.07999999821186066, 0.0806666687130928, 0.0806666687130928, 0.08100000023841858, 0.08133333176374435, 0.08166666328907013, 0.08166666328907013]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 9, 3, 1, 5, 5, 1], [0, 2, 2, 1, 2, 0, 0], [63, 9, 50]], "fitness": -0.04399999976158142, "mapping_values": [1, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010610027272924, 2.30206212571048, 2.3013911746701137, 2.3018587308237977, 2.3029266360445013, 2.3014402473292503, 2.3020283444966023, 2.302572265891288, 2.301934494680622, 2.3020531986651247, 2.301252963410361, 2.3018101230667187, 2.3009196635266305, 2.304028367857655, 2.3022738759543806], "accuracy": [0.0956280529499054, 0.09470347315073013, 0.09496764093637466, 0.09074098616838455, 0.0886276587843895, 0.09232597798109055, 0.09060890227556229, 0.08942015469074249, 0.09166556596755981, 0.08492933213710785, 0.08968432247638702, 0.0944393053650856, 0.09311848133802414, 0.08889182657003403, 0.09285431355237961], "val_loss": [1.9709747859409876, 1.9709678377423967, 1.9709607533046178, 1.9709540094648088, 1.970947197505406, 1.9709405217851912, 1.9709337779453822, 1.9709266935076033, 1.9709196771894182, 1.9709128652300154, 1.9709059851510184, 1.9708988325936454, 1.9708918162754603, 1.9708845274788993, 1.9708773068019323], "val_accuracy": [0.03633333370089531, 0.035999998450279236, 0.035999998450279236, 0.03633333370089531, 0.036666665226221085, 0.03733333200216293, 0.03700000047683716, 0.03766666725277901, 0.03766666725277901, 0.03799999877810478, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 1, 1, 3, 3, 0, 3], [35, 40, 45], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [0], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [3, 5, 9, 3, 1, 5, 5, 1], [1, 0, 1, 3, 1], [32, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301064488532253, 2.3020806453955753, 2.3014187004115554, 2.3019024721777215, 2.3029898555129824, 2.301505293938714], "accuracy": [0.0956280529499054, 0.09470347315073013, 0.09470347315073013, 0.08994849026203156, 0.08809932321310043, 0.09272222965955734], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]