[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8274285793304443, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.145644856639243, 2.2961083026594253, 2.0930245332178767, 1.6105775791876635, 1.1558051529010651, 0.875095017975694, 0.7707727344485479, 0.7615512990287078, 0.6695923072991669, 0.6565682713885617, 0.6423365554521743, 0.6557136735014235, 0.6073743430945568, 0.580730967990254, 0.5796348950047582, 0.5873239473848767, 0.5574769638611609, 0.5328712679171181, 0.5443811948824363, 0.5288138680485781, 0.5216161439589159, 0.5066428429194572, 0.5019240524113501, 0.5232043116162907, 0.4601827073547551, 0.48780011610348056, 0.4696710196271659, 0.4902100546516526, 0.46487933973578915, 0.45699537321561046, 0.46838505734006697, 0.4282365904437269, 0.4424778095144779, 0.4104142817468723, 0.4231958122277666, 0.416476883223469], "accuracy": [0.3035266101360321, 0.11715757846832275, 0.2868841588497162, 0.4542332589626312, 0.5851274728775024, 0.6814159154891968, 0.7124554514884949, 0.7074362635612488, 0.7427024245262146, 0.7523444890975952, 0.7576277852058411, 0.7531369924545288, 0.7625148296356201, 0.7784969210624695, 0.774270236492157, 0.7700436115264893, 0.7910447716712952, 0.7979130744934082, 0.793422281742096, 0.7975168228149414, 0.8062343001365662, 0.8112534880638123, 0.8087438941001892, 0.8029322624206543, 0.8310658931732178, 0.8187822103500366, 0.8228767514228821, 0.8127063512802124, 0.8249900937080383, 0.8337075710296631, 0.8240655064582825, 0.8401796221733093, 0.8362171649932861, 0.846387505531311, 0.844010055065155, 0.8453308939933777], "val_loss": [1.9750794001988001, 1.9380619185311454, 1.800058024270194, 1.0261130673544747, 0.723289932523455, 0.633886592728751, 0.6290391172681536, 0.506613050188337, 0.5410466364451817, 0.5436915670122419, 0.6148006575448173, 0.4842419283730643, 0.500338111604963, 0.45125274998801096, 0.4734901189804077, 0.43130247933523996, 0.43306186369487215, 0.41794380971363615, 0.4146597555705479, 0.44651431696755545, 0.39276887689317974, 0.3906927023615156, 0.46174323558807373, 0.4029145666531154, 0.39170851026262554, 0.38476661273411344, 0.4011226211275373, 0.3897559472492763, 0.4009725792067392, 0.39465788432529997, 0.3587980014937265, 0.3682886617524283, 0.35419750213623047, 0.3661532827786037, 0.3775956801005772, 0.40264969212668283], "val_accuracy": [0.10400000214576721, 0.29233333468437195, 0.3199999928474426, 0.5443333387374878, 0.6706666946411133, 0.7379999756813049, 0.6863333582878113, 0.7633333206176758, 0.7509999871253967, 0.7329999804496765, 0.7336666584014893, 0.7806666493415833, 0.7699999809265137, 0.7973333597183228, 0.7919999957084656, 0.8086666464805603, 0.8056666851043701, 0.8169999718666077, 0.8236666917800903, 0.7866666913032532, 0.831333339214325, 0.8289999961853027, 0.7943333387374878, 0.8293333053588867, 0.8286666870117188, 0.8339999914169312, 0.8209999799728394, 0.8226666450500488, 0.8266666531562805, 0.8259999752044678, 0.8500000238418579, 0.8453333377838135, 0.8493333458900452, 0.8426666855812073, 0.8363333344459534, 0.8220000267028809]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [8, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [8, 80, 44, 92]], "fitness": -0.8111428618431091, "mapping_values": [1, 25, 25, 15, 10, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad)))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.036092425948357, 1.6426459621239993, 1.0601062612085768, 0.9423465692702537, 0.8116793517879979, 0.798111365755016, 0.7611351220237108, 0.73792309112962, 0.7066101467037843, 0.6697954240098464, 0.6566247714115345, 0.6734032755939795, 0.6264633602155056, 0.5910335615121803, 0.6031687298093127, 0.6141001431933484, 0.5917563567292563, 0.5622439616864242, 0.5555657132733783, 0.5384358557428525, 0.5283447374457996, 0.5319209595350715, 0.5108824604537903, 0.5358040405459739, 0.5247817291654159, 0.498060697695803, 0.5014819270308621], "accuracy": [0.32545238733291626, 0.4752344489097595, 0.620261549949646, 0.6509047746658325, 0.6893408894538879, 0.7000396251678467, 0.7136441469192505, 0.7140403985977173, 0.7248712182044983, 0.7446836829185486, 0.7537974119186401, 0.7481178045272827, 0.7609298825263977, 0.7796856164932251, 0.7633073329925537, 0.7658169269561768, 0.765949010848999, 0.7882710099220276, 0.7951393723487854, 0.8000264167785645, 0.8038568496704102, 0.7984414100646973, 0.8124422430992126, 0.7975168228149414, 0.8000264167785645, 0.8129705190658569, 0.8105930685997009], "val_loss": [1.814568178994315, 0.8669996772493634, 0.8708997964859009, 0.6941867044993809, 0.6068650484085083, 0.6612129722322736, 0.5574195214680263, 0.580979483468192, 0.5160286937441144, 0.5246049506323678, 0.5831024306161063, 0.4869765043258667, 0.4813227483204433, 0.4456373793738229, 0.4925297669001988, 0.4453679493495396, 0.4370320013591221, 0.455537063734872, 0.4086342283657619, 0.43651527166366577, 0.43131217786243986, 0.39670564447130474, 0.42374104261398315, 0.4352040801729475, 0.3998985375676836, 0.4013375384466989, 0.3861907294818333], "val_accuracy": [0.28966665267944336, 0.6633333563804626, 0.6103333234786987, 0.6813333630561829, 0.6923333406448364, 0.6976666450500488, 0.7480000257492065, 0.7329999804496765, 0.7726666927337646, 0.7663333415985107, 0.7306666374206543, 0.7839999794960022, 0.7870000004768372, 0.8056666851043701, 0.7816666960716248, 0.7990000247955322, 0.8059999942779541, 0.7933333516120911, 0.8259999752044678, 0.8033333420753479, 0.8146666884422302, 0.8286666870117188, 0.812666654586792, 0.8186666369438171, 0.8236666917800903, 0.8203333616256714, 0.8270000219345093]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [6, 2], [93], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [84, 80, 44, 92]], "fitness": -0.36714285612106323, "mapping_values": [1, 25, 25, 15, 10, 4, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad)))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.646264356125174, 5.351295333166328e+21, 6837.380036637862, 6882479.765197794, 2155200211.5778627, 559201211423.5139], "accuracy": [0.13670584559440613, 0.12257297337055206, 0.09893012791872025, 0.09747721254825592, 0.1018359512090683, 0.09734513610601425], "val_loss": [162.30707223074776, 76.65012468610492, 67978.49776785714, 52581636.571428575, 13654177499.428572, 3495660280685.7144], "val_accuracy": [0.32466667890548706, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [6, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [84, 80, 44, 92]], "fitness": -0.1022857129573822, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3990444025390607, 2.885679910809939, 4.167121628917613, 41.22678354938725, 4.457760764932261e+33, 3.3980124263778544], "accuracy": [0.1538766324520111, 0.11847840249538422, 0.10315678268671036, 0.10038304328918457, 0.09232597798109055, 0.10117553919553757], "val_loss": [2.201974391937256, 2.8533832686288014, 4.800234658377511, 1200.718226841518, 2.916741098676409, 3.1022533008030484], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.020999999716877937, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 1, 5, 6, 0, 2, 5, 0, 0, 6, 3, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 1, 2, 0, 2, 2, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [9, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 15, 8, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))))), grad)))))), alpha), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07092854380607605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [6, 2], [93], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad)))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [9.514664541620684e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9739650998796736, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [6, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [526573.03976214, 2.4768967506293813, 2.3988544892137393, 2.4019360081268704, 2.363413022131637, 2.437525658795799], "accuracy": [0.09549596905708313, 0.09972262382507324, 0.1014397069811821, 0.10011887550354004, 0.09311848133802414, 0.0956280529499054], "val_loss": [2.100006307874407, 2.096463544028146, 2.015223911830357, 2.083991527557373, 2.054891654423305, 2.112083366939], "val_accuracy": [0.10400000214576721, 0.10100000351667404, 0.09799999743700027, 0.10133333504199982, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 4, 0, 6, 1, 2, 6, 0, 2, 5, 1, 0, 2, 0, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 17, 9, 4, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), alpha))), tf.math.add(alpha, grad))))))), tf.math.negative(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0], [7, 8, 1, 3, 7, 2], [6, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [84, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023437957060793, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 1, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 4, 4, 0, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [34359886337.95836, 6140005571918.751, 113278700306364.92, 816650594959093.9, 3629851714770346.5, 1.2172051994646512e+16], "accuracy": [0.09470347315073013, 0.09919429570436478, 0.10091137140989304, 0.09853387624025345, 0.09959053993225098, 0.10196803510189056], "val_loss": [306442478738.2857, 19110732609243.43, 215808675264219.44, 1207334672606354.2, 4593117790020754.0, 1.3691302245526966e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 3, 0, 6, 1, 2, 6, 2, 2, 5, 0, 0, 8, 4, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 80, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [53, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 15, 9, 3, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 3, 1, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha))))), grad)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [9, 8, 1, 3], [7, 2], [93], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.09571428596973419, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 3, 4, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, beta)))", "other_info": {"loss": [2.303450184286609, 2.2990611684383766, 2.2983037923478555, 2.298798981658881, 2.29988304045474, 2.3005591428290897, 2.3011874881450134, 2.3002401906359764], "accuracy": [0.09179764986038208, 0.1006472036242485, 0.10830801725387573, 0.10632677376270294, 0.09932637959718704, 0.09536388516426086, 0.09298639744520187, 0.09325055778026581], "val_loss": [1.9696215902056013, 1.9688376699175154, 1.9686083112444197, 1.9704382078988212, 1.9715167454310827, 1.9719037328447615, 1.9718708992004395, 1.9721217155456543], "val_accuracy": [0.052666667848825455, 0.08433333039283752, 0.10633333027362823, 0.09099999815225601, 0.07466666400432587, 0.06599999964237213, 0.07533333450555801, 0.08033332973718643]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [0, 2], [93], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [84, 80, 44, 92]], "fitness": -0.08742856979370117, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4030028314102974, 2.9021416286735047, 4.235405215466295, 20.955704505244235, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15361246466636658, 0.11808215826749802, 0.10368511080741882, 0.09813763201236725, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2070604733058383, 2.880833080836705, 4.920662334987095, 70.15203857421875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10233332961797714, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [8, 8, 1, 3], [7, 2], [93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.07285714149475098, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.303768453848691, 2.300852418402482, 2.3009865556678375, 2.3008011516688947, 2.300445807214741, 2.3002074704178415, 2.3006233061466865, 2.2993506321172044, 2.301468115850541, 2.3006809353592246, 2.299561196377469, 2.30079958769844, 2.299322570083542, 2.3001797073914974, 2.2996936577532536, 2.299145293761679, 2.3003923590346065, 2.300178014559753, 2.2994844653051856, 2.299051199071459, 2.2989012765815118, 2.2988756986231835, 2.2983888547182114, 2.298434826802143, 2.299192043548058, 2.299578089834346], "accuracy": [0.09140139818191528, 0.0940430611371994, 0.09536388516426086, 0.08994849026203156, 0.09457138925790787, 0.09615638852119446, 0.09536388516426086, 0.10170386731624603, 0.09708096832036972, 0.09509972482919693, 0.10328886657953262, 0.09681680053472519, 0.09549596905708313, 0.09840179979801178, 0.10011887550354004, 0.10196803510189056, 0.09985470771789551, 0.09192973375320435, 0.09813763201236725, 0.10196803510189056, 0.10381719470024109, 0.10249637067317963, 0.10645885765552521, 0.10645885765552521, 0.10342095047235489, 0.10157178342342377], "val_loss": [1.970644133431571, 1.9702889578683036, 1.9700660024370467, 1.9698724065508162, 1.969808919089181, 1.9697299003601074, 1.9697153908865792, 1.9696766308375768, 1.9696433203560966, 1.9696663447788783, 1.9696991103036063, 1.969698360988072, 1.9697018350873674, 1.9696965898786272, 1.9696932520185197, 1.9697413444519043, 1.9696946825299944, 1.9696810586111886, 1.969632353101458, 1.9695914132254464, 1.9695874622889928, 1.969587939126151, 1.9696205684116908, 1.9696671622140067, 1.9697051729474748, 1.9697770391191756], "val_accuracy": [0.0403333343565464, 0.043666668236255646, 0.045666664838790894, 0.04899999871850014, 0.05066666752099991, 0.05299999937415123, 0.05533333495259285, 0.0573333315551281, 0.06066666543483734, 0.06400000303983688, 0.06400000303983688, 0.06733333319425583, 0.06933332979679108, 0.07100000232458115, 0.0716666653752327, 0.07133333384990692, 0.07566666603088379, 0.07500000298023224, 0.07733333110809326, 0.0820000022649765, 0.08366666734218597, 0.0833333358168602, 0.08366666734218597, 0.0833333358168602, 0.08166666328907013, 0.07999999821186066]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [6, 2], [93], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [84, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30395858411571, 2.301545709115702, 2.3020410893568353, 2.302190941810734, 2.3018660647380056, 2.3019234357555987], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09338264167308807, 0.08519349992275238, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [6, 2], [93], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [84, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30395858411571, 2.301545709115702, 2.3020410893568353, 2.302190941810734, 2.3018660647380056, 2.3019234357555987], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09338264167308807, 0.08519349992275238, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [23, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30395858411571, 2.301545709115702, 2.3020410893568353, 2.302190941810734, 2.3018660647380056, 2.3019234357555987], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09338264167308807, 0.08519349992275238, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 8, 4, 4, 0, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.30395858411571, 2.301545709115702, 2.3020410893568353, 2.302190941810734, 2.3018660647380056, 2.3019234357555987], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09338264167308807, 0.08519349992275238, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 2, 6, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30395858411571, 2.301545709115702, 2.3020410893568353, 2.302190941810734, 2.3018660647380056, 2.3019234357555987], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09338264167308807, 0.08519349992275238, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 0, 6, 1, 6, 5, 0, 2, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 55, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 6, 9, 9, 0, 4, 1, 0, 3, 5, 1, 9, 6, 8, 3, 8, 2, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 1, 2, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [34, 82, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 8, 1, 3], [6, 2], [93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.30395858411571, 2.301545709115702, 2.3020410893568353, 2.302190941810734, 2.3018660647380056, 2.3019234357555987], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09338264167308807, 0.08519349992275238, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]