[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8208571672439575, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0186984716011565, 1.543507115054581, 1.0700483553996254, 0.9228913466676257, 0.8026814160093797, 0.7890461303648963, 0.7238360936489592, 0.7463379043550885, 0.6804225121223381, 0.6927724361277968, 0.6462890626794988, 0.645046653237089, 0.648170573663214, 0.6355152972118336, 0.6063810679670402, 0.595289831628511, 0.5758889764370211, 0.5975403849632355, 0.5632116306396507, 0.5501360110461263, 0.5555484143891875, 0.5642878134898411, 0.5398958208711786, 0.5508946955180392, 0.503772275842428, 0.51374347960834, 0.5153994846573878], "accuracy": [0.32399946451187134, 0.46968695521354675, 0.6024303436279297, 0.668339729309082, 0.7013604640960693, 0.6979262828826904, 0.7290979027748108, 0.7145687341690063, 0.7440232634544373, 0.7339849472045898, 0.7582882046699524, 0.7526086568832397, 0.7555144429206848, 0.7535332441329956, 0.7703077793121338, 0.774798572063446, 0.7824593782424927, 0.7734777331352234, 0.7854973077774048, 0.7898560166358948, 0.7913089394569397, 0.785101056098938, 0.7973847389221191, 0.7923656105995178, 0.8099326491355896, 0.8107251524925232, 0.8053097128868103], "val_loss": [1.5759541988372803, 0.8035425288336617, 0.7391121217182705, 0.6317241532461983, 0.5792003359113421, 0.5644032444272723, 0.5314104386738369, 0.5192205905914307, 0.542262043271746, 0.5359981400626046, 0.484065192086356, 0.4931899309158325, 0.511774982724871, 0.5090014083044869, 0.4505136183329991, 0.44223776885441374, 0.4469449349812099, 0.4536994355065482, 0.4451457943235125, 0.44421747752598356, 0.4269337143216814, 0.40203382287706646, 0.471194999558585, 0.41369943959372385, 0.4026813932827541, 0.42051914760044645, 0.40392311981746126], "val_accuracy": [0.3140000104904175, 0.6499999761581421, 0.7006666660308838, 0.7353333234786987, 0.737666666507721, 0.7559999823570251, 0.7673333287239075, 0.765333354473114, 0.7486666440963745, 0.7663333415985107, 0.7910000085830688, 0.7786666750907898, 0.7643333077430725, 0.7556666731834412, 0.8003333210945129, 0.8056666851043701, 0.7973333597183228, 0.7943333387374878, 0.7976666688919067, 0.7993333339691162, 0.812666654586792, 0.8330000042915344, 0.7929999828338623, 0.812333345413208, 0.8296666741371155, 0.8026666641235352, 0.8303333520889282]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 1, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8005714416503906, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0188134887734615, 1.5447010118979285, 1.069120956103343, 0.9227232261262062, 0.8061097932686943, 0.783451601057918, 0.7328154261416732, 0.7378679000076411, 0.6835544641227959, 0.6964888547500048, 0.6488403777058381, 0.6479055132171214, 0.6350388322460999, 0.6351901364836632, 0.6055915730504343, 0.5942957369705878, 0.5756390591921697, 0.5970238842559198, 0.5628185168375129, 0.5481622998331201], "accuracy": [0.32426363229751587, 0.46770572662353516, 0.6034870147705078, 0.6643772125244141, 0.7024171352386475, 0.7038700580596924, 0.7243428826332092, 0.7185312509536743, 0.744419515132904, 0.7280412316322327, 0.7567031979560852, 0.7475894689559937, 0.7602694630622864, 0.7520803213119507, 0.7688548564910889, 0.7765156626701355, 0.7812706232070923, 0.7708360552787781, 0.7866860628128052, 0.7906485199928284], "val_loss": [1.5739247458321708, 0.8071265390941075, 0.7293507541928973, 0.6308821269444057, 0.5763788052967617, 0.5703345026288714, 0.5290358747754779, 0.5518860476357597, 0.5340098653520856, 0.5334404025759015, 0.4811605896268572, 0.48917644364493235, 0.5254246507372174, 0.49619979517800467, 0.4474343572344099, 0.44111565181187223, 0.4431277002607073, 0.4514760119574411, 0.43678660903658184, 0.4507079805646624], "val_accuracy": [0.3140000104904175, 0.6480000019073486, 0.7026666402816772, 0.7300000190734863, 0.7386666536331177, 0.749666690826416, 0.7670000195503235, 0.7306666374206543, 0.7553333044052124, 0.7666666507720947, 0.7876666784286499, 0.7760000228881836, 0.7553333044052124, 0.7633333206176758, 0.8056666851043701, 0.8056666851043701, 0.7993333339691162, 0.793666660785675, 0.8019999861717224, 0.7903333306312561]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7628571391105652, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9723127752861342, 1.4518724941637349, 1.0197239706718124, 0.9022601177553538, 0.7806899204167235, 0.7573250679370829, 0.7334989929762908, 0.7219479598578303, 0.67085157289733, 0.6876205353610283, 0.6340008985097177], "accuracy": [0.3409060835838318, 0.4982168674468994, 0.6238277554512024, 0.666358470916748, 0.705058753490448, 0.7127195596694946, 0.7193237543106079, 0.7181349992752075, 0.7481178045272827, 0.7353057861328125, 0.750231146812439], "val_loss": [1.4201823302677699, 0.9051505156925747, 0.8402630601610456, 0.6366760730743408, 0.5863716091428485, 0.5395348242350987, 0.5614886283874512, 0.5576003449303764, 0.5292214325496128, 0.5294508934020996, 0.5017501796994891], "val_accuracy": [0.47099998593330383, 0.6056666374206543, 0.6290000081062317, 0.7099999785423279, 0.7323333621025085, 0.7689999938011169, 0.7513333559036255, 0.75, 0.7509999871253967, 0.7483333349227905, 0.7636666893959045]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 7, 4, 6, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [0, 2], [48], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [29, 9, 44]], "fitness": -0.6899999976158142, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 20, 16, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))))))), tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), grad)), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.26629230160802, 1.9190713688996899, 1.3772978777615243, 1.0168750085110803, 0.9014152506590992, 0.8162709982513894, 0.7900276856572952, 0.7437534168994406, 0.7004377816126819, 0.7120305162221843, 0.669572258976551, 0.6339099998518838, 0.6165119405782233, 0.5904759829779028, 0.589388286661179, 0.5602091075706129, 0.551168651691659, 0.5378225925906838, 0.5155133305759856, 0.5155697568233507, 0.48770222243001793, 0.4801405165189482, 0.46395790151412286, 0.4530443060021784, 0.45902530063081964, 0.44400363581496427, 0.43130583327207994, 0.4221384562734033, 0.4355050596885709, 0.41272119519780137, 0.40952205727632884, 0.405305753341834, 0.39491892434885917, 0.37942457155402876, 0.38471170931192455], "accuracy": [0.18214239180088043, 0.41249504685401917, 0.5355963706970215, 0.6470743417739868, 0.6769251227378845, 0.6935675740242004, 0.7103421092033386, 0.7127195596694946, 0.7375511527061462, 0.7387399077415466, 0.746268630027771, 0.7681944370269775, 0.7761194109916687, 0.7770439982414246, 0.7774402499198914, 0.7889314293861389, 0.791441023349762, 0.7936864495277405, 0.8034605979919434, 0.8030643463134766, 0.8173292875289917, 0.8169330358505249, 0.8189142942428589, 0.8271034359931946, 0.8255184292793274, 0.8383304476737976, 0.8350284099578857, 0.8355567455291748, 0.837141752243042, 0.8418967127799988, 0.8449346423149109, 0.8429533839225769, 0.854708731174469, 0.8582749962806702, 0.8537842035293579], "val_loss": [1.8421100207737513, 1.1164285796029227, 0.7341581583023071, 0.7050318207059588, 0.6074069057192121, 0.5859491143907819, 0.5559438467025757, 0.5574401617050171, 0.5308414016451154, 0.4712761470249721, 0.4626012018748692, 0.47672740050724577, 0.4480291264397757, 0.44726083108357023, 0.43243137427738737, 0.4410172019686018, 0.41527423688343595, 0.41836879934583393, 0.41357429538454327, 0.42356537921088083, 0.39835849830082487, 0.3815584182739258, 0.3813965065138681, 0.3890256541115897, 0.37794228962489534, 0.37438201904296875, 0.36325579030173166, 0.3583712066922869, 0.35599803924560547, 0.36424187251499723, 0.3547264848436628, 0.3578360932213919, 0.37345389808927265, 0.35546479906354633, 0.3565347875867571], "val_accuracy": [0.44066667556762695, 0.5870000123977661, 0.6946666836738586, 0.6916666626930237, 0.722000002861023, 0.731333315372467, 0.75, 0.7699999809265137, 0.7616666555404663, 0.7856666445732117, 0.793666660785675, 0.7856666445732117, 0.8016666769981384, 0.7963333129882812, 0.8100000023841858, 0.812666654586792, 0.8186666369438171, 0.8193333148956299, 0.8240000009536743, 0.8223333358764648, 0.8373333215713501, 0.843666672706604, 0.8453333377838135, 0.8410000205039978, 0.8420000076293945, 0.8443333506584167, 0.8493333458900452, 0.8529999852180481, 0.8510000109672546, 0.8583333492279053, 0.8536666631698608, 0.8543333411216736, 0.8579999804496765, 0.8533333539962769, 0.8513333201408386]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 5, 2, 8, 8, 2, 9, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [4, 2], [10], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [11, 9, 44]], "fitness": -0.3862857222557068, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029647545177765, 2.3014596662721645, 2.301568670389974, 2.3005408807091188, 2.3005662391434853, 2.2985464472890986, 2.299329306392496, 2.296379442653321, 2.297038791705872, 2.296012134221976, 2.295701152723164, 2.296132374622283, 2.294710205247169, 2.292663363291839, 2.2931555582783902, 2.2927967646748337, 2.292970148296152, 2.2901530437434214, 2.29169365698714, 2.290675029558135, 2.289089285639283, 2.2880165312410172, 2.288316457656711, 2.288564477567077, 2.287682115535663, 2.2848242404296837, 2.287459035606873, 2.2840930591437636, 2.2849495451227706, 2.2842311886528055, 2.2847049666779973, 2.2827455584619654, 2.283709764260154, 2.2812564207373547, 2.2805631292683493, 2.2792326076045533, 2.2787690462138377, 2.2796829947548582, 2.279531360916442, 2.278709984600363, 2.276600091873993, 2.277303678264172, 2.275874387129911, 2.2731787181879946, 2.2754268342351804, 2.274925427902266, 2.272841767202893, 2.2706197968028117, 2.271181094663774, 2.272149067229882, 2.268065324879562, 2.2696063039860532, 2.2693403395112512, 2.2683290708113844, 2.266294164113428, 2.2674412071082917, 2.265385429101172, 2.265258791361345, 2.264695035373656, 2.2646370210573266, 2.2611161119130783, 2.2609694703159677, 2.2597694262820873, 2.260420385778163, 2.259727364691131, 2.257396060840061, 2.2586096611005315, 2.2566685460231337, 2.2555700584472587, 2.254570432642054, 2.2544810054891413, 2.2530112176161277, 2.25259558812203, 2.252256527615891, 2.2520636317437397, 2.25201463063222, 2.2509112140175342, 2.248191314492448, 2.2489935729198485, 2.248130982467889, 2.245454941789755, 2.243308237089914, 2.2443522021692064, 2.2434478884973954, 2.2436330405366167, 2.2415881866099356, 2.2392419314796994, 2.2383916533901833, 2.239008291128872, 2.237534136268929, 2.2357294421548053, 2.235422861495778, 2.2346465494717433, 2.23446831720821, 2.2325864074063606, 2.2314359863058546, 2.2311030730374846, 2.230582637966994, 2.2284512858994807, 2.229392579360456], "accuracy": [0.09509972482919693, 0.0948355570435524, 0.09311848133802414, 0.09457138925790787, 0.09008057415485382, 0.09813763201236725, 0.10328886657953262, 0.10315678268671036, 0.10170386731624603, 0.10302469879388809, 0.10777968913316727, 0.10553427785634995, 0.10527011007070541, 0.11227050423622131, 0.11293092370033264, 0.11094967275857925, 0.10830801725387573, 0.11847840249538422, 0.12059172987937927, 0.11913882195949554, 0.12521463632583618, 0.1254788041114807, 0.12296922504901886, 0.12600713968276978, 0.12442214041948318, 0.12851670384407043, 0.12032756209373474, 0.14000792801380157, 0.13181878626346588, 0.13697001338005066, 0.13538502156734467, 0.13459251821041107, 0.12957337498664856, 0.1414608359336853, 0.14370624721050262, 0.15097081661224365, 0.1526878923177719, 0.14951789379119873, 0.14291374385356903, 0.14832915365695953, 0.1504424810409546, 0.15361246466636658, 0.1542728841304779, 0.15836745500564575, 0.1542728841304779, 0.15519747138023376, 0.16074495017528534, 0.17051908373832703, 0.1644432693719864, 0.16351869702339172, 0.16853784024715424, 0.16629242897033691, 0.16549994051456451, 0.17250032722949982, 0.1690661758184433, 0.17144367098808289, 0.1740853190422058, 0.177255317568779, 0.1810857206583023, 0.17593449354171753, 0.18782195448875427, 0.18518029153347015, 0.17897239327430725, 0.1868973672389984, 0.18253862857818604, 0.1912561058998108, 0.19270901381969452, 0.1962752640247345, 0.19310526549816132, 0.19614318013191223, 0.1935015171766281, 0.20063400268554688, 0.2020869106054306, 0.19984149932861328, 0.19852067530155182, 0.19970941543579102, 0.20935148000717163, 0.20803064107894897, 0.20340773463249207, 0.2071060687303543, 0.21661603450775146, 0.21463479101657867, 0.21120063960552216, 0.21833311021327972, 0.21595561504364014, 0.22018226981163025, 0.22665433585643768, 0.22520142793655396, 0.22414475679397583, 0.22665433585643768, 0.22586184740066528, 0.23563598096370697, 0.23339056968688965, 0.22097477316856384, 0.23140932619571686, 0.23418307304382324, 0.23457930982112885, 0.23365473747253418, 0.2421080470085144, 0.23484347760677338], "val_loss": [1.970438003540039, 1.9698890277317591, 1.9693429810660226, 1.9687878744942802, 1.9682320186070033, 1.9676731654575892, 1.967113699231829, 1.9665604318891252, 1.9660027367728097, 1.9654354367937361, 1.9648682049342565, 1.964306354522705, 1.9637293815612793, 1.9631548609052385, 1.9625842911856515, 1.9620089530944824, 1.9614238739013672, 1.9608430862426758, 1.9602531705583846, 1.9596667289733887, 1.959073271070208, 1.958488600594657, 1.9578938484191895, 1.9572916712079729, 1.9566892215183802, 1.9560877255031042, 1.9554813248770577, 1.9548749923706055, 1.9542584419250488, 1.9536528587341309, 1.9530343328203474, 1.952413490840367, 1.9517968722752161, 1.9511685371398926, 1.9505318232945033, 1.9498907497950964, 1.94925628389631, 1.9486202512468611, 1.9479834011622839, 1.947340829031808, 1.9466946465628487, 1.9460463523864746, 1.9453954696655273, 1.9447334834507533, 1.9440693855285645, 1.9434035846165247, 1.9427331515720911, 1.9420598575047083, 1.9413774354117257, 1.9406955582754952, 1.940009934561593, 1.9393236296517509, 1.9386317389351981, 1.9379358291625977, 1.93723692212786, 1.936535085950579, 1.93582854952131, 1.9351155417306083, 1.9344029426574707, 1.9336854389735632, 1.9329542432512556, 1.9322230475289481, 1.9314748219081335, 1.9307341575622559, 1.929985591343471, 1.9292347090584892, 1.9284806932721819, 1.9277161870683943, 1.9269467762538366, 1.9261695998055595, 1.925394058227539, 1.9246023723057337, 1.9238063267299108, 1.92300626209804, 1.9222145080566406, 1.921412536076137, 1.9206074987139021, 1.9197938101632255, 1.9189747401646204, 1.9181526047842843, 1.917316504887172, 1.9164725031171526, 1.915628433227539, 1.9147827284676688, 1.913931437901088, 1.9130711555480957, 1.912203652518136, 1.9113258634294783, 1.9104441915239607, 1.9095590455191476, 1.9086542810712541, 1.9077513558523995, 1.9068420955113001, 1.9059371267046248, 1.905010563986642, 1.9040777342660087, 1.9031384331839425, 1.9022032192775182, 1.901251929146903, 1.9002954619271415], "val_accuracy": [0.03766666725277901, 0.0403333343565464, 0.04233333468437195, 0.04699999839067459, 0.052000001072883606, 0.056333333253860474, 0.06133333221077919, 0.06533333659172058, 0.06866666674613953, 0.07133333384990692, 0.07666666805744171, 0.08266666531562805, 0.08799999952316284, 0.09266666322946548, 0.09733333438634872, 0.10000000149011612, 0.10633333027362823, 0.1106666699051857, 0.11699999868869781, 0.12099999934434891, 0.12800000607967377, 0.13333334028720856, 0.13833333551883698, 0.14300000667572021, 0.14800000190734863, 0.15199999511241913, 0.15600000321865082, 0.15933333337306976, 0.16733333468437195, 0.17299999296665192, 0.17633333802223206, 0.179666668176651, 0.18266665935516357, 0.18799999356269836, 0.19300000369548798, 0.1979999989271164, 0.20033332705497742, 0.20499999821186066, 0.20866666734218597, 0.21466666460037231, 0.22066666185855865, 0.22433333098888397, 0.2303333282470703, 0.23333333432674408, 0.23633334040641785, 0.23899999260902405, 0.2423333376646042, 0.24566666781902313, 0.24933333694934845, 0.2529999911785126, 0.2563333213329315, 0.25999999046325684, 0.2653333246707916, 0.2680000066757202, 0.27166667580604553, 0.27666667103767395, 0.281333327293396, 0.28466665744781494, 0.28833332657814026, 0.29233333468437195, 0.29499998688697815, 0.29733332991600037, 0.30033332109451294, 0.30533334612846375, 0.3083333373069763, 0.3109999895095825, 0.31466665863990784, 0.31700000166893005, 0.32066667079925537, 0.3226666748523712, 0.32600000500679016, 0.3266666531562805, 0.3310000002384186, 0.33399999141693115, 0.3373333215713501, 0.3386666774749756, 0.34200000762939453, 0.3440000116825104, 0.3476666808128357, 0.34933334589004517, 0.3513333201408386, 0.3540000021457672, 0.3556666672229767, 0.35633334517478943, 0.35766667127609253, 0.3580000102519989, 0.3596666753292084, 0.36033332347869873, 0.3610000014305115, 0.36133334040641785, 0.3636666536331177, 0.36666667461395264, 0.3683333396911621, 0.3700000047683716, 0.3726666569709778, 0.375, 0.37566667795181274, 0.37566667795181274, 0.3776666522026062, 0.37966665625572205]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [9, 9, 44]], "fitness": -0.38342857360839844, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029565139453583, 2.3014343125614523, 2.301521118432618, 2.3004911319061025, 2.3004852758973677, 2.2984877588758064, 2.2992459954901805, 2.2963595828674945, 2.296968320451786, 2.295969231222221, 2.2956679695869058, 2.2960572747852916, 2.2946932677658336, 2.2927376775221346, 2.2931604986539718, 2.2928323381691245, 2.292995718413214, 2.29031214416775, 2.291808401226698, 2.2908630736704594, 2.289344867238468, 2.2883208349726973, 2.288699624182888, 2.288877928560877, 2.2881229160295233, 2.285423952590646, 2.2879092953444755, 2.2847128739808578, 2.285586045135077, 2.284979353774855, 2.2853421464241603, 2.283632874410103, 2.2844948343171922, 2.282173298605366, 2.2815810589821206, 2.2803512571541673, 2.2800636626253543, 2.280873843754728, 2.280590940633423, 2.2800555823422726, 2.2781763405863478, 2.2788963127035458, 2.2775580971830824, 2.275241018081653, 2.2772371515448633, 2.276853131580315, 2.275094044884009, 2.273154742587685, 2.2736521186672416, 2.274371109870384, 2.270989061393884, 2.272328081069259, 2.2722787237312216, 2.271204443120245, 2.269396511507922, 2.2706608189693798, 2.2689973902094556, 2.268828886910326, 2.268534190997062, 2.268467790462306, 2.2654083747558937, 2.2652646749562213, 2.2645262647471833, 2.2650976098838687, 2.2643348929778444, 2.2624966554071104, 2.2633405097991153, 2.262012583373985, 2.2610139667302893, 2.2603345194103506, 2.260198116459945, 2.2588811630523122, 2.258891906626173, 2.258633355611918, 2.258537764782919, 2.258209003039859, 2.2577584815488247, 2.255255070754235, 2.256166055926463, 2.2553898690477765, 2.253228856556451, 2.2516745625706145, 2.252668353718002, 2.251786510847689, 2.2519016655098256, 2.250445774848262, 2.248483630565683, 2.247798070900035, 2.248580775949319, 2.247446778365067, 2.246168819070256, 2.245789488088406, 2.245348206789518, 2.2455619463846905, 2.2440422836500717, 2.2428943021280765, 2.242918798149128, 2.242350414932648, 2.2405476264666415, 2.241630624361231], "accuracy": [0.09496764093637466, 0.09470347315073013, 0.09298639744520187, 0.0944393053650856, 0.09113723784685135, 0.09787346422672272, 0.10368511080741882, 0.10355303436517715, 0.10170386731624603, 0.10315678268671036, 0.10791176557540894, 0.10672302544116974, 0.10685510188341141, 0.11266675591468811, 0.11491216719150543, 0.11081759631633759, 0.10672302544116974, 0.11900673806667328, 0.11993131786584854, 0.12072381377220154, 0.12415797263383865, 0.12613920867443085, 0.12389380484819412, 0.12600713968276978, 0.12561088800430298, 0.13049794733524323, 0.1208558976650238, 0.14172500371932983, 0.13353586196899414, 0.13697001338005066, 0.13670584559440613, 0.136045441031456, 0.13036586344242096, 0.14172500371932983, 0.1450270712375641, 0.15295206010341644, 0.15097081661224365, 0.1526878923177719, 0.1450270712375641, 0.14978206157684326, 0.1500462293624878, 0.15849953889846802, 0.15612204372882843, 0.16391493380069733, 0.15638621151447296, 0.1592920422554016, 0.16272619366645813, 0.17012283205986023, 0.16497160494327545, 0.16616034507751465, 0.17434948682785034, 0.16721701622009277, 0.16642451286315918, 0.17751948535442352, 0.17474573850631714, 0.1760665625333786, 0.17976489663124084, 0.175670325756073, 0.18042530119419098, 0.17976489663124084, 0.18940694630146027, 0.19152027368545532, 0.18438778817653656, 0.1935015171766281, 0.18755778670310974, 0.1954827606678009, 0.1958790123462677, 0.2005019187927246, 0.20103025436401367, 0.20023775100708008, 0.19521859288215637, 0.20763438940048218, 0.20512482523918152, 0.20353981852531433, 0.2036719024181366, 0.2056531459093094, 0.21304979920387268, 0.21423853933811188, 0.20578522980213165, 0.21252146363258362, 0.21555937826633453, 0.2226918488740921, 0.21780477464199066, 0.22203142940998077, 0.22018226981163025, 0.2234843522310257, 0.22903183102607727, 0.22493726015090942, 0.2316734939813614, 0.23061682283878326, 0.2312772423028946, 0.23999471962451935, 0.2405230551958084, 0.22572976350784302, 0.23325848579406738, 0.2362964004278183, 0.24025888741016388, 0.24065512418746948, 0.24937260150909424, 0.24065512418746948], "val_loss": [1.9704283305576868, 1.9698724746704102, 1.9693217277526855, 1.968766212463379, 1.9682121276855469, 1.9676568167550224, 1.967104230608259, 1.9665609087262834, 1.96601745060512, 1.9654659543718611, 1.9649171148027693, 1.9643762452261788, 1.9638218198503767, 1.963273184640067, 1.9627320425851005, 1.9621897424970354, 1.96164151600429, 1.9610997608729772, 1.96055235181536, 1.9600097792489188, 1.959463460104806, 1.958928448813302, 1.958385808127267, 1.957838671548026, 1.957294191632952, 1.9567540713718958, 1.9562106813703264, 1.95566953931536, 1.9551210403442383, 1.9545843941824776, 1.9540369170052665, 1.953491483415876, 1.9529523849487305, 1.9524055889674596, 1.951854978288923, 1.9513023240225655, 1.9507570947919572, 1.9502126829964774, 1.9496703829084123, 1.9491228376116072, 1.9485759735107422, 1.9480314935956682, 1.9474853788103377, 1.9469308171953474, 1.9463797296796526, 1.9458303451538086, 1.9452778952462333, 1.9447236061096191, 1.9441657066345215, 1.9436069216047014, 1.9430474553789412, 1.94249050957816, 1.9419330869402205, 1.9413744381495885, 1.9408139501299178, 1.9402533258710588, 1.939692429133824, 1.939126627785819, 1.9385629381452287, 1.9379970005580358, 1.9374226842607771, 1.9368511608668737, 1.9362656729561942, 1.935689994267055, 1.935110637119838, 1.9345299175807409, 1.9339467457362585, 1.9333578518458776, 1.9327681405203683, 1.9321709360395158, 1.9315785680498396, 1.9309776851109095, 1.9303741455078125, 1.9297711508614677, 1.9291743550981795, 1.9285737446376257, 1.9279701369149345, 1.9273620332990373, 1.9267512048993791, 1.9261422157287598, 1.9255221911839075, 1.924898283822196, 1.9242797579084123, 1.9236568723406111, 1.9230348723275321, 1.9224070821489607, 1.9217698233468192, 1.9211273193359375, 1.920487403869629, 1.9198434693472726, 1.919184616633824, 1.9185331889561243, 1.91787964957101, 1.9172272682189941, 1.9165616716657365, 1.9158903530665807, 1.915220124380929, 1.9145511899675642, 1.9138743536812919, 1.9131964956011092], "val_accuracy": [0.038333334028720856, 0.04066666588187218, 0.043666668236255646, 0.04933333396911621, 0.0533333346247673, 0.05833333358168602, 0.06233333423733711, 0.06666667014360428, 0.07066666334867477, 0.07400000095367432, 0.07900000363588333, 0.08399999886751175, 0.09233333170413971, 0.09566666930913925, 0.10133333504199982, 0.10833333432674408, 0.11533333361148834, 0.12033333629369736, 0.125, 0.12966667115688324, 0.13433332741260529, 0.13866665959358215, 0.14266666769981384, 0.14733333885669708, 0.1509999930858612, 0.15733332931995392, 0.1616666615009308, 0.16566666960716248, 0.17133332788944244, 0.17766666412353516, 0.18333333730697632, 0.18833333253860474, 0.19333332777023315, 0.19866666197776794, 0.20399999618530273, 0.20733332633972168, 0.2133333384990692, 0.2173333317041397, 0.22300000488758087, 0.2266666740179062, 0.2303333282470703, 0.234333336353302, 0.23899999260902405, 0.24400000274181366, 0.24699999392032623, 0.2513333261013031, 0.25566667318344116, 0.2606666684150696, 0.2633333206176758, 0.26766666769981384, 0.2723333239555359, 0.2759999930858612, 0.27799999713897705, 0.28166666626930237, 0.28566667437553406, 0.28866666555404663, 0.2916666567325592, 0.2926666736602783, 0.2943333387374878, 0.2966666519641876, 0.3009999990463257, 0.304666668176651, 0.3076666593551636, 0.3086666762828827, 0.3109999895095825, 0.3136666715145111, 0.3160000145435333, 0.3179999887943268, 0.32233333587646484, 0.32466667890548706, 0.32600000500679016, 0.32766667008399963, 0.3306666612625122, 0.3330000042915344, 0.3343333303928375, 0.335999995470047, 0.3396666646003723, 0.34066668152809143, 0.34200000762939453, 0.34333333373069763, 0.3453333377838135, 0.3473333418369293, 0.34833332896232605, 0.34966665506362915, 0.35233333706855774, 0.3540000021457672, 0.35466668009757996, 0.35633334517478943, 0.35866665840148926, 0.35866665840148926, 0.359333336353302, 0.3606666624546051, 0.3616666793823242, 0.3623333275318146, 0.36399999260902405, 0.3659999966621399, 0.36666667461395264, 0.367000013589859, 0.367333322763443, 0.36800000071525574]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4.1862177262457874e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0544181764125824, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 4, 1, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 32, 32, 18, 14, 2, 1, 1, 0, 1, 1, 5, 2, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha)))))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))))), tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022917410354604, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [3, 4, 0, 3], [0, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1233015602.3273494, 23761739945.336678, 109073686896.97002, 300814258682.92804, 655794014120.6266, 1192470187684.1294], "accuracy": [0.1006472036242485, 0.10619468986988068, 0.10210011899471283, 0.09853387624025345, 0.09747721254825592, 0.1002509593963623], "val_loss": [4661677202.285714, 37282219154.28571, 125814463341.71428, 298213132580.5714, 582428524544.0, 1006414893641.1428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025363604500626, 2.3029048527551446, 2.3029550659878537, 2.303006994757339, 2.3029975992199483, 2.302993565943452, 2.3029120396692297, 2.3029832669914265], "accuracy": [0.09708096832036972, 0.09496764093637466, 0.09760929644107819, 0.09813763201236725, 0.09325055778026581, 0.09959053993225098, 0.0952318087220192, 0.09219389408826828], "val_loss": [1.9736547470092773, 1.9736477988106864, 1.9736409868512834, 1.9736340386526925, 1.9736411912100655, 1.9737249783107214, 1.9737036568777901, 1.9736952781677246], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 4, 7, 3, 3, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 3, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [48], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [4, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 33, 33, 18, 15, 2, 3, 2, 1, 1, 1, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.multiply(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(tf.math.add(beta, grad), alpha), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [80, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1158020045.843926, 22316243930.534935, 102437951039.77176, 282513175031.68195, 615896966941.0455, 1119920471884.384], "accuracy": [0.1006472036242485, 0.10619468986988068, 0.10210011899471283, 0.09853387624025345, 0.09747721254825592, 0.1002509593963623], "val_loss": [4378110683.428572, 35014075538.28571, 118160427300.57143, 280069285010.2857, 546993696182.8571, 945184608841.1428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025363604500626, 2.3029048527551446, 2.3029550659878537, 2.303006994757339, 2.302997585710297, 2.3029935974344804, 2.302912008178201, 2.3029832669914265], "accuracy": [0.09708096832036972, 0.09496764093637466, 0.09760929644107819, 0.09813763201236725, 0.09325055778026581, 0.09959053993225098, 0.0952318087220192, 0.09219389408826828], "val_loss": [1.9736547470092773, 1.9736477988106864, 1.9736409868512834, 1.9736341067722865, 1.9736412593296595, 1.9737250464303153, 1.9737038612365723, 1.9736952781677246], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 5, 2, 8, 8, 2, 9, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 3, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [48], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [4, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 9, 3], [1, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025363604500626, 2.302904915737202, 2.302955128969911, 2.303007057739397, 2.302997585710297, 2.3029936289255093, 2.302912008178201, 2.3029832669914265], "accuracy": [0.09708096832036972, 0.09496764093637466, 0.09760929644107819, 0.09813763201236725, 0.09325055778026581, 0.09959053993225098, 0.0952318087220192, 0.09219389408826828], "val_loss": [1.9736547470092773, 1.9736478669302804, 1.9736410549708776, 1.9736339024135046, 1.9736413274492537, 1.9737249783107214, 1.9737038612365723, 1.9736952781677246], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [30], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 1, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [3, 2, 0, 3, 1, 1], [87, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 14, 14, 7, 7, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.multiply(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, grad))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [0, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.09828571230173111, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.311236194190631, 2.37220179913397, 2.542325259262718, 2.828020884675467, 3.243738904337542, 3.662615477904951, 4.090842012086203, 4.406519208554625], "accuracy": [0.09417514503002167, 0.1026284471154213, 0.09879804402589798, 0.09998679161071777, 0.09536388516426086, 0.10051512718200684, 0.09628847241401672, 0.09747721254825592], "val_loss": [1.9811996051243372, 2.0318288121904646, 2.1418443407331194, 2.3123291560581754, 2.5186329569135393, 2.7241614205496654, 2.8901644434247697, 2.994462421962193], "val_accuracy": [0.08900000154972076, 0.0963333323597908, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 1, 4, 7, 3, 3, 2, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 1, 2, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 20, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [4, 9, 44]], "fitness": -0.09514285624027252, "mapping_values": [1, 2, 2, 1, 1, 0, 33, 33, 18, 15, 2, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3003115180366627, 2.301008106836821, 2.3021158221029037, 2.302932417576953, 2.3050854095551694, 2.33250033098079, 2.7260310845116207, 4.892551072127847, 10.720597286675316, 22.102669554269387, 41.083387577176296, 69.2350154771403, 108.91015828356467], "accuracy": [0.10196803510189056, 0.0878351628780365, 0.09034473448991776, 0.0754193663597107, 0.07674019038677216, 0.09536388516426086, 0.10011887550354004, 0.09945846349000931, 0.09813763201236725, 0.10315678268671036, 0.0948355570435524, 0.09893012791872025, 0.09668471664190292], "val_loss": [1.9702415466308594, 1.972715241568429, 1.9740294047764368, 1.9748766081673759, 1.9813667706080846, 2.0800300325666154, 3.070845603942871, 6.590709958757673, 14.350749697004046, 28.02493395124163, 49.2588620867048, 79.76375470842633, 121.23988996233258], "val_accuracy": [0.08666666597127914, 0.07366666942834854, 0.06300000101327896, 0.0689999982714653, 0.09833333641290665, 0.09966666996479034, 0.09799999743700027, 0.10100000351667404, 0.09966666996479034, 0.09866666793823242, 0.09966666996479034, 0.09866666793823242, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 3, 0, 3, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [2.303202006606189, 2.302287422576207, 2.3029604814685865, 2.302552223803896, 2.3031326060155917, 2.30176129216421], "accuracy": [0.09496764093637466, 0.09325055778026581, 0.09047681838274002, 0.08770307898521423, 0.08677849918603897, 0.08968432247638702], "val_loss": [1.9709817341395788, 1.9709817341395788, 1.9709817341395788, 1.9709820066179549, 1.9709818703787667, 1.9709820066179549], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]