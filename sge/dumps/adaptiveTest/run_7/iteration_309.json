[{"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8265714049339294, "mapping_values": [1, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.square(grad)))), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0337528348709095, 1.5162453782430902, 1.1604656173631485, 0.934648820548057, 0.806315030183743, 0.7188567215378227, 0.6837486397746122, 0.6397188523142896, 0.6497053989660565, 0.6228952601191831, 0.6001746980442646, 0.5489283473799336, 0.5468381202499613, 0.5256553407649732, 0.5239909743714751, 0.4917551255528449, 0.49917122685457377, 0.5012204299403251, 0.4543051670736341, 0.46903399422247144, 0.4450809975396908, 0.45070555821118213, 0.4339666874566807, 0.4232886661635792, 0.4531360686242604, 0.43607980694674453, 0.41226620129181046, 0.40709451128699287, 0.4076996293869064, 0.3671421961832544, 0.38830758465311044, 0.3843714588660889, 0.37006057881723226, 0.36712850230150473, 0.3538757027644113, 0.35150644556327565, 0.3422940113029271, 0.3345605239907843, 0.3378561802110998, 0.31584999475024395, 0.31794065526762755, 0.3336206366947818, 0.35602416394723957, 0.31239678740910787, 0.3094925384133515, 0.29999114467703736, 0.29160649455880067, 0.282159446256823, 0.289504694802461, 0.28247531756449684, 0.274452828184772, 0.29389744454591565, 0.2622125932309354], "accuracy": [0.31422534584999084, 0.4757627844810486, 0.5904107689857483, 0.6551313996315002, 0.6980583667755127, 0.724739134311676, 0.7400607466697693, 0.7548540234565735, 0.7539294958114624, 0.7623828053474426, 0.7728173136711121, 0.7950072884559631, 0.7940827012062073, 0.8090080618858337, 0.8001585006713867, 0.8164047002792358, 0.8129705190658569, 0.8136309385299683, 0.8305375576019287, 0.8211596608161926, 0.8362171649932861, 0.8302733898162842, 0.8376700282096863, 0.8403117060661316, 0.8310658931732178, 0.8391229510307312, 0.8469158411026001, 0.8459912538528442, 0.8473120927810669, 0.8640866279602051, 0.8555012345314026, 0.858671247959137, 0.8632941246032715, 0.8613129258155823, 0.8677849769592285, 0.8721436858177185, 0.8761062026023865, 0.8745211958885193, 0.8728041052818298, 0.8842953443527222, 0.8824461698532104, 0.8761062026023865, 0.8660678863525391, 0.8829745054244995, 0.8829745054244995, 0.8873332738876343, 0.8919561505317688, 0.893541157245636, 0.8903711438179016, 0.8931449055671692, 0.897899866104126, 0.8886540532112122, 0.9027869701385498], "val_loss": [1.194601093019758, 1.1364408220563615, 0.8888581820896694, 0.6454581873757499, 0.5736355440957206, 0.5459812028067452, 0.49914305550711496, 0.5151292596544538, 0.5075491496494838, 0.4842239958899362, 0.44157963139670237, 0.4907388516834804, 0.434416583606175, 0.4336113929748535, 0.429588326386043, 0.4045016850743975, 0.3906122531209673, 0.36351265226091656, 0.3922734941755022, 0.3767584902899606, 0.35119909048080444, 0.35810935497283936, 0.3582752176693508, 0.3332870772906712, 0.38459956645965576, 0.34392493963241577, 0.33443154607500347, 0.37488809653690885, 0.3359476498195103, 0.346206077507564, 0.33467884574617657, 0.36051128591809956, 0.3386374626840864, 0.3253412757601057, 0.3072596788406372, 0.348679176398686, 0.30641795907701763, 0.31166817460741314, 0.32363637004579815, 0.3063544971602304, 0.3315948673657009, 0.39890300376074656, 0.3058063302721296, 0.33531483582087923, 0.29472899436950684, 0.33907767704554964, 0.3339114359446934, 0.2930498719215393, 0.3231642927442278, 0.31774115562438965, 0.31664081130708965, 0.2898267848151071, 0.3139550345284598], "val_accuracy": [0.492333322763443, 0.57833331823349, 0.6223333477973938, 0.7223333120346069, 0.7306666374206543, 0.746666669845581, 0.7570000290870667, 0.7490000128746033, 0.7683333158493042, 0.7903333306312561, 0.800000011920929, 0.7673333287239075, 0.8086666464805603, 0.79666668176651, 0.7879999876022339, 0.8203333616256714, 0.8266666531562805, 0.8426666855812073, 0.8226666450500488, 0.8383333086967468, 0.8516666889190674, 0.8489999771118164, 0.843666672706604, 0.8576666712760925, 0.8136666417121887, 0.8486666679382324, 0.856333315372467, 0.8343333601951599, 0.8600000143051147, 0.8529999852180481, 0.8583333492279053, 0.8386666774749756, 0.859666645526886, 0.8656666874885559, 0.8706666827201843, 0.8500000238418579, 0.8690000176429749, 0.8723333477973938, 0.8646666407585144, 0.8736666440963745, 0.8610000014305115, 0.8086666464805603, 0.8690000176429749, 0.8669999837875366, 0.878000020980835, 0.8556666374206543, 0.8523333072662354, 0.8816666603088379, 0.8679999709129333, 0.8646666407585144, 0.8653333187103271, 0.878333330154419, 0.874666690826416]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 2, 2, 2, 0, 5, 2, 0, 4, 2, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 40, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8217142820358276, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0337973690744655, 1.4962849303983567, 1.3899168322162228, 0.9392414344079806, 0.8252091910057788, 0.727556879226605, 0.6638005326185024, 0.656439493542035, 0.6481071121310671, 0.6199820125265175, 0.583470043607313, 0.5740463152033793, 0.5464899927680802, 0.5256421596398364, 0.5287556402388187, 0.497689836560743, 0.48455403479272036, 0.4915651754145105, 0.45044960404557166, 0.47239538204904563, 0.44221395301765315, 0.4413109678381926, 0.44439073812534874, 0.4362478616443592, 0.4500156873607081, 0.40596094582657444, 0.41911052498661877, 0.4094927752526555, 0.404892853139776, 0.3671620436206612, 0.36298564927862337, 0.38316435336263627, 0.37009536716932034, 0.35900045497747163, 0.3686502657475457, 0.34148921077009897, 0.34692044226469193, 0.3507848052442538, 0.3384476585938332, 0.31887451262994293, 0.3156575787305171, 0.34215024778509434, 0.32890635203723156], "accuracy": [0.3143574297428131, 0.48144233226776123, 0.5102364420890808, 0.6431118845939636, 0.6903975605964661, 0.7240787148475647, 0.7493065595626831, 0.7531369924545288, 0.7499669790267944, 0.7647602558135986, 0.7817989587783813, 0.7840443849563599, 0.7993659973144531, 0.8031964302062988, 0.7984414100646973, 0.8145555257797241, 0.8133667707443237, 0.8156121969223022, 0.8305375576019287, 0.8241975903511047, 0.8378021121025085, 0.8392550349235535, 0.8335754871368408, 0.8345000743865967, 0.8280280232429504, 0.8444063067436218, 0.8444063067436218, 0.8470479249954224, 0.8520671129226685, 0.8648791313171387, 0.8672566413879395, 0.8585391640663147, 0.8617091774940491, 0.8664641380310059, 0.8585391640663147, 0.8714832663536072, 0.8739928603172302, 0.8691058158874512, 0.8757099509239197, 0.8833707571029663, 0.8808611631393433, 0.8710870146751404, 0.876370370388031], "val_loss": [1.1916982105800085, 0.8912999629974365, 0.6875829526356289, 0.6995095014572144, 0.606436916760036, 0.5258108377456665, 0.4970242806843349, 0.47894162791115896, 0.5032148701804025, 0.5407768147332328, 0.4375578079904829, 0.46524318626948763, 0.4261349780218942, 0.4561967168535505, 0.4149518183299473, 0.3753723842757089, 0.4064545120511736, 0.38102803911481586, 0.4366382786205837, 0.3813189608710153, 0.34564201320920673, 0.35583944831575665, 0.35818239620753695, 0.3340444564819336, 0.35241410561970304, 0.3351347787039621, 0.327792797769819, 0.4024647985185896, 0.3356528452464512, 0.3429630824497768, 0.36052678312574116, 0.36714684111731394, 0.34202003479003906, 0.3236736570085798, 0.30592501163482666, 0.33590774876730783, 0.3159782205309187, 0.2989290952682495, 0.310881997857775, 0.3012418065752302, 0.3540867737361363, 0.33619812556675505, 0.3102299656186785], "val_accuracy": [0.4936666786670685, 0.6190000176429749, 0.7066666483879089, 0.6713333129882812, 0.7126666903495789, 0.762333333492279, 0.7720000147819519, 0.7663333415985107, 0.7670000195503235, 0.7609999775886536, 0.79666668176651, 0.7883333563804626, 0.8046666383743286, 0.7846666574478149, 0.7940000295639038, 0.8373333215713501, 0.8109999895095825, 0.8289999961853027, 0.781333327293396, 0.8410000205039978, 0.8529999852180481, 0.8503333330154419, 0.8403333425521851, 0.8576666712760925, 0.840666651725769, 0.8543333411216736, 0.8573333621025085, 0.8146666884422302, 0.8610000014305115, 0.8536666631698608, 0.8433333039283752, 0.8349999785423279, 0.8539999723434448, 0.8616666793823242, 0.8706666827201843, 0.8539999723434448, 0.8656666874885559, 0.8766666650772095, 0.8730000257492065, 0.8706666827201843, 0.8519999980926514, 0.8493333458900452, 0.8676666617393494]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 2, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8217142820358276, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0338357021748474, 1.496928324190507, 1.1541549999322465, 0.9254754151981174, 0.806345537417065, 0.7206570951851399, 0.6805076882933991, 0.657140634126352, 0.6272058416870937, 0.6261167236370198, 0.5811585924172241, 0.5601750003852235, 0.5604717542057291, 0.5282916662447709, 0.5219619874161594, 0.49438562166925437, 0.5006636669252842, 0.5032182805778455, 0.45585405397109696, 0.4756873474302482, 0.45154420464833367, 0.46590940065198744, 0.46617205467568634, 0.4241217158615723, 0.4541450608770184, 0.4146515313290397, 0.4154160734354119, 0.41466303537975546, 0.4144689249183051, 0.3722331204812414, 0.39772419268350245, 0.37352461408488646, 0.37607673318347346, 0.37503889347930325, 0.3600489320165808, 0.34581457088888284, 0.3413860141018583, 0.33240544866451166, 0.3485684233090629, 0.32979667101711285, 0.3078010230449527, 0.3462655467560987, 0.3438219700499202, 0.3152220533107014, 0.3117521894708711, 0.30292335699782663, 0.29783101732374073, 0.28309149186939625, 0.28316980269701253, 0.290139702080956], "accuracy": [0.3140932619571686, 0.48566898703575134, 0.583938717842102, 0.6701889038085938, 0.6964733600616455, 0.7256637215614319, 0.7424382567405701, 0.7467969655990601, 0.7597411274909973, 0.7578919529914856, 0.7810064554214478, 0.787082314491272, 0.7882710099220276, 0.8078193068504333, 0.8053097128868103, 0.8125742673873901, 0.8088759779930115, 0.8064984679222107, 0.8278959393501282, 0.822348415851593, 0.8338396549224854, 0.8315942287445068, 0.8220842480659485, 0.8400475382804871, 0.8301413059234619, 0.8446704745292664, 0.8424250483512878, 0.8422929644584656, 0.8445383906364441, 0.8654074668884277, 0.8529917001724243, 0.8632941246032715, 0.863558292388916, 0.8595958352088928, 0.8663320541381836, 0.8689737319946289, 0.8768987059593201, 0.876370370388031, 0.8714832663536072, 0.8779553771018982, 0.887201189994812, 0.8716153502464294, 0.8708229064941406, 0.8815215826034546, 0.8828424215316772, 0.8864086866378784, 0.8891823887825012, 0.8932769894599915, 0.8923524022102356, 0.8920882344245911], "val_loss": [1.1979563576834542, 0.9715263162340436, 0.9456462860107422, 0.6793824093682426, 0.6130328519003732, 0.5012221847261701, 0.4965593303952898, 0.48413523605891634, 0.47463737215314594, 0.5090177229472569, 0.5316260882786342, 0.4769143547330584, 0.42040010009493145, 0.43614437750407625, 0.39483210870197843, 0.4015329139573233, 0.4145197868347168, 0.39736493144716534, 0.37927041734967915, 0.37499001196452547, 0.36279083149773733, 0.44256738254002165, 0.3592322724206107, 0.3322296738624573, 0.35062149592808317, 0.34242166791643414, 0.3412887028285435, 0.39079651662281584, 0.33594655990600586, 0.3418596642357962, 0.33815704924719675, 0.3948246581213815, 0.36423722335270475, 0.3304699318749564, 0.3046921491622925, 0.3451226694243295, 0.3043169379234314, 0.32570029156548636, 0.3504027043070112, 0.29839118889399935, 0.3469544989722116, 0.36681399175098967, 0.3083526151520865, 0.3366104023797171, 0.30308541229793, 0.3646485720361982, 0.3163860695702689, 0.2931143045425415, 0.3261030486651829, 0.3135344215801784], "val_accuracy": [0.4860000014305115, 0.5833333134651184, 0.5799999833106995, 0.6819999814033508, 0.7059999704360962, 0.7609999775886536, 0.7620000243186951, 0.7699999809265137, 0.7756666541099548, 0.7816666960716248, 0.7556666731834412, 0.7770000100135803, 0.8140000104904175, 0.793666660785675, 0.8169999718666077, 0.8243333101272583, 0.8173333406448364, 0.8113333582878113, 0.8240000009536743, 0.8416666388511658, 0.8446666598320007, 0.79666668176651, 0.8403333425521851, 0.8573333621025085, 0.8446666598320007, 0.8489999771118164, 0.8493333458900452, 0.8230000138282776, 0.8586666584014893, 0.8553333282470703, 0.8539999723434448, 0.8286666870117188, 0.8379999995231628, 0.8636666536331177, 0.8700000047683716, 0.8543333411216736, 0.871666669845581, 0.8669999837875366, 0.8483333587646484, 0.8756666779518127, 0.8533333539962769, 0.8263333439826965, 0.8713333606719971, 0.8669999837875366, 0.8776666522026062, 0.846666693687439, 0.8656666874885559, 0.8756666779518127, 0.8693333268165588, 0.8646666407585144]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 5, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8119999766349792, "mapping_values": [1, 30, 30, 21, 9, 4, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))))))))), tf.math.pow(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.033621536836711, 1.5043805899353642, 1.4367742421462977, 0.9544879575966686, 0.8114919651689908, 0.7247654861856555, 0.6985786239689273, 0.6373234437583003, 0.6405595620042849, 0.6284212121212754, 0.5780056094047873, 0.5705516786150818, 0.5542684963445118, 0.5319656943994632, 0.5122449814352172, 0.49852195602161786, 0.5000715006013446, 0.4907278285570085, 0.45461242805303853, 0.4666189507502197, 0.4409373375473871, 0.4524549559524361, 0.4367866157824101, 0.41256110581739497, 0.44746084354021737, 0.41144953809630336, 0.4142151143785166, 0.4237207074710769, 0.4120463435841337, 0.3624873416668798, 0.3825844214608436, 0.3807518364234985, 0.36962257077854227, 0.3638965294597612, 0.365980315328101, 0.33981208536902346, 0.34864795904716306, 0.3258958665048599, 0.34246766082662017, 0.32608390080379285, 0.31316416757359655, 0.3340358968935843, 0.3337343606722432, 0.3178811582552522, 0.30617678846822927, 0.31696131166890945, 0.2899867844950049, 0.2940958497617475, 0.2909554711162548, 0.28367165042393244, 0.2766781484509157, 0.28916728240293266, 0.26957454351606686, 0.2801426347015934, 0.26894443992216827, 0.25321709938084586, 0.2638101869523171, 0.2766521810272886, 0.25915380711875746, 0.24346296569344045], "accuracy": [0.31422534584999084, 0.47827234864234924, 0.4950468838214874, 0.6450931429862976, 0.6894729733467102, 0.728701651096344, 0.7297582626342773, 0.7531369924545288, 0.7574957013130188, 0.757099449634552, 0.7796856164932251, 0.7866860628128052, 0.7935543656349182, 0.8006868362426758, 0.8096684813499451, 0.8087438941001892, 0.8125742673873901, 0.8108572363853455, 0.8260467648506165, 0.8231409192085266, 0.8392550349235535, 0.8301413059234619, 0.8400475382804871, 0.843481719493866, 0.8304054737091064, 0.8449346423149109, 0.848368763923645, 0.8418967127799988, 0.8445383906364441, 0.8638224601745605, 0.8597279191017151, 0.8573504090309143, 0.8628978729248047, 0.8646149635314941, 0.86118084192276, 0.8732003569602966, 0.870030403137207, 0.8794082403182983, 0.8732003569602966, 0.8800686597824097, 0.8848236799240112, 0.8803328275680542, 0.8741249442100525, 0.8816536664962769, 0.8816536664962769, 0.8782195448875427, 0.8911636471748352, 0.8874653577804565, 0.8862766027450562, 0.8926165699958801, 0.896446943283081, 0.8931449055671692, 0.900409460067749, 0.8878615498542786, 0.9008057117462158, 0.9027869701385498, 0.8982961177825928, 0.8932769894599915, 0.8988244533538818, 0.9091269373893738], "val_loss": [1.1950482640947615, 0.998661824635097, 0.7655189037322998, 0.6757051774433681, 0.6459947313581195, 0.5491609913962228, 0.515872631754194, 0.49459356921059744, 0.4953194856643677, 0.4929279088973999, 0.42604048763002667, 0.4654196160180228, 0.4202319639069693, 0.43931286675589426, 0.44028942925589426, 0.40683421918324064, 0.40487140417099, 0.3866240552493504, 0.363952704838344, 0.36913423027311054, 0.3494539942060198, 0.3628814561026437, 0.34852932180677143, 0.3372791494641985, 0.3609443817819868, 0.3671296409198216, 0.37373725857053486, 0.4001010400908334, 0.33745986223220825, 0.3377857804298401, 0.3362081902367728, 0.3665916068213327, 0.3456289087023054, 0.320173408303942, 0.3106970361300877, 0.34089926310947966, 0.30641720976148334, 0.3094315103122166, 0.3295317717960903, 0.29567714248384747, 0.30873615401131765, 0.37531983852386475, 0.3073361430849348, 0.34741239888327463, 0.30966141394206453, 0.3245044095175607, 0.34765030656542095, 0.3031721455710275, 0.3041080151285444, 0.3071419341223581, 0.30971086025238037, 0.28929851736341206, 0.32637758765901836, 0.35701142038617817, 0.2878096784864153, 0.3123007672173636, 0.3012808050428118, 0.3001131074769156, 0.302278859274728, 0.3133778486933027], "val_accuracy": [0.4946666657924652, 0.5630000233650208, 0.6773333549499512, 0.6786666512489319, 0.675000011920929, 0.7440000176429749, 0.7523333430290222, 0.7766666412353516, 0.7693333625793457, 0.7836666703224182, 0.8096666932106018, 0.784333348274231, 0.8083333373069763, 0.796999990940094, 0.7839999794960022, 0.8203333616256714, 0.8193333148956299, 0.8213333487510681, 0.8410000205039978, 0.8456666469573975, 0.8506666421890259, 0.8489999771118164, 0.8479999899864197, 0.8569999933242798, 0.8343333601951599, 0.8366666436195374, 0.8326666951179504, 0.8216666579246521, 0.8633333444595337, 0.8576666712760925, 0.8566666841506958, 0.8399999737739563, 0.8476666808128357, 0.8686666488647461, 0.8733333349227905, 0.8503333330154419, 0.8743333220481873, 0.8700000047683716, 0.859000027179718, 0.8759999871253967, 0.8730000257492065, 0.8199999928474426, 0.8730000257492065, 0.8616666793823242, 0.8773333430290222, 0.8629999756813049, 0.8429999947547913, 0.8763333559036255, 0.878000020980835, 0.8706666827201843, 0.8756666779518127, 0.8796666860580444, 0.8709999918937683, 0.856333315372467, 0.8813333511352539, 0.8773333430290222, 0.8740000128746033, 0.878333330154419, 0.8803333044052124, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 2, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 0, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 9, 62, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.7908571362495422, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), alpha))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2271297833922987, 1.791216821450725, 1.2513301474559009, 1.0611719565699522, 0.9652866234380681, 0.882615610711122, 0.8183196078139116, 0.7870551543449288, 0.7629721419229609, 0.7553344283515215, 0.7041890745732322, 0.6973770542104467, 0.7044082526139706, 0.6892900590599961, 0.64706319398128, 0.6572666858102604, 0.6407211528336446, 0.6376664936188237, 0.6260156476770048, 0.6166034556020914], "accuracy": [0.2440892904996872, 0.4563465714454651, 0.5645225048065186, 0.6308281421661377, 0.6618676781654358, 0.6812838315963745, 0.703209638595581, 0.7120591998100281, 0.7156254053115845, 0.7209087014198303, 0.7397965788841248, 0.7425703406333923, 0.7388719916343689, 0.7423061728477478, 0.7605336308479309, 0.7597411274909973, 0.7630431652069092, 0.7619865536689758, 0.765949010848999, 0.7720248103141785], "val_loss": [1.747241633278983, 1.0879366057259696, 0.8238002232142857, 0.711916310446603, 0.6825903483799526, 0.6286953347069877, 0.5848158257348197, 0.5766567673001971, 0.5731254134859357, 0.5375952039446149, 0.5201170785086495, 0.5399266651698521, 0.5187031371252877, 0.5036378077098301, 0.4977085420063564, 0.4922694478716169, 0.5177442176001412, 0.49379236357552664, 0.48042120252336773, 0.4809149844305856], "val_accuracy": [0.47200000286102295, 0.5933333039283752, 0.675000011920929, 0.7116666436195374, 0.7080000042915344, 0.7260000109672546, 0.7379999756813049, 0.753000020980835, 0.7493333220481873, 0.7583333253860474, 0.765999972820282, 0.750333309173584, 0.7746666669845581, 0.7746666669845581, 0.7876666784286499, 0.7846666574478149, 0.7553333044052124, 0.7726666927337646, 0.7870000004768372, 0.7766666412353516]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 2, 2, 2, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.7842857241630554, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.280459311691494, 2.226934489541286, 2.1394800465608617, 1.9933733956657302, 1.7793675912857811, 1.5391585666899352, 1.3490681252097252, 1.2208479177588092, 1.1308057406606487, 1.0624938440234701, 1.003219683400833, 0.9652020079017929, 0.9441254526128733, 0.909786634134374, 0.8721507960511489, 0.8669121407908282, 0.8414888639790806, 0.8231199775169145, 0.8104100252942418, 0.7873304344958727, 0.7853758384633168, 0.7718743195686169, 0.7678434626458737, 0.7532535633705768, 0.7481674047477525, 0.7178367424036424, 0.7370388140578894, 0.7188708062704764, 0.7247053135214481, 0.7068172290954671, 0.706249335595976, 0.6867442896431936, 0.6826403039226978, 0.6829289439536671, 0.6769122481897223, 0.6662637263146752, 0.6671005724490736, 0.6725907852195903, 0.6637684129027958, 0.6520902997451357, 0.6533160675801716, 0.6465778961204944, 0.6444912124476838, 0.6429249364166779, 0.6381771014099187, 0.6283393543961026, 0.6326379041394002, 0.6269613075187067, 0.6223695911058676, 0.6251011594820961, 0.6161847855861806], "accuracy": [0.14291374385356903, 0.26244881749153137, 0.35860520601272583, 0.418570876121521, 0.45647865533828735, 0.5090476870536804, 0.5559371113777161, 0.583938717842102, 0.6112799048423767, 0.6272619366645813, 0.6528860330581665, 0.6633205413818359, 0.669792652130127, 0.6757363677024841, 0.6940959095954895, 0.691850483417511, 0.7013604640960693, 0.705058753490448, 0.7045304179191589, 0.7189275026321411, 0.7169462442398071, 0.7273808121681213, 0.7205125093460083, 0.7255316376686096, 0.7294940948486328, 0.7390040755271912, 0.7281733155250549, 0.7359662055969238, 0.7363624572753906, 0.7395324110984802, 0.7415136694908142, 0.7493065595626831, 0.7491744756698608, 0.7493065595626831, 0.7548540234565735, 0.757099449634552, 0.7597411274909973, 0.757099449634552, 0.7600052952766418, 0.7637035846710205, 0.7622507214546204, 0.7580240368843079, 0.761590301990509, 0.7660810947418213, 0.7652885913848877, 0.7738739848136902, 0.7697794437408447, 0.7707040309906006, 0.7733456492424011, 0.7790252566337585, 0.7766477465629578], "val_loss": [1.924579347882952, 1.8602341243198939, 1.7468068259102958, 1.5631095000675745, 1.3284481252942766, 1.1106013229915075, 0.9567381313868931, 0.8587660619190761, 0.7937556164605277, 0.7458238090787616, 0.7081013066428048, 0.6846635852541242, 0.6658681801387242, 0.6459191356386457, 0.6309138025556292, 0.614498325756618, 0.6067956345421928, 0.5950573853084019, 0.5828338350568499, 0.5765690122331891, 0.572259647505624, 0.5600856031690326, 0.5527698142187936, 0.5482310567583356, 0.543453744479588, 0.5333628313882011, 0.5322668382099697, 0.5296593223299298, 0.5303687879017421, 0.520405752318246, 0.512595364025661, 0.5084632635116577, 0.50543783392225, 0.5102891751698085, 0.5073182242257255, 0.49413108825683594, 0.49345340047563824, 0.48988471712384907, 0.48691185883113314, 0.4828897544315883, 0.4878788334982736, 0.48330029419490267, 0.48247001852308, 0.4764787639890398, 0.4759071554456438, 0.470363906451634, 0.4724403279168265, 0.466909578868321, 0.46781069891793386, 0.467374358858381, 0.46121011461530415], "val_accuracy": [0.3386666774749756, 0.4256666600704193, 0.4893333315849304, 0.5513333082199097, 0.6069999933242798, 0.6543333530426025, 0.6786666512489319, 0.6836666464805603, 0.6919999718666077, 0.7013333439826965, 0.7129999995231628, 0.7146666646003723, 0.7163333296775818, 0.7300000190734863, 0.7353333234786987, 0.7419999837875366, 0.7433333396911621, 0.7396666407585144, 0.7543333172798157, 0.7563333511352539, 0.7580000162124634, 0.7536666393280029, 0.7573333382606506, 0.7680000066757202, 0.765999972820282, 0.7670000195503235, 0.7733333110809326, 0.7596666812896729, 0.7603333592414856, 0.7746666669845581, 0.7746666669845581, 0.7789999842643738, 0.7726666927337646, 0.7746666669845581, 0.7706666588783264, 0.7870000004768372, 0.7736666798591614, 0.7850000262260437, 0.7906666398048401, 0.7850000262260437, 0.7873333096504211, 0.7823333144187927, 0.778333306312561, 0.7913333177566528, 0.7940000295639038, 0.7973333597183228, 0.7893333435058594, 0.7916666865348816, 0.7876666784286499, 0.7913333177566528, 0.7960000038146973]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 9, 0, 5, 2, 0, 4, 3, 1, 9, 0, 6, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 25, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 13, 6, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), grad)), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022262711865698, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 2, 2, 0, 9, 2, 0, 4, 3, 2, 3, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 6, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [4, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 0, 7, 3, 3, 0, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022262711865698, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 9, 86, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 17, 8, 3, 6, 6, 5, 1, 0, 7, 3, 3, 0, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), alpha))))), tf.math.add(alpha, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 2, 1, 2, 3, 0, 0, 2, 1, 2], [87, 77, 86, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022262711865698, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 9, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 0, 2, 2, 3, 0, 0, 2, 1, 2], [87, 92, 11, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 6, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [91, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 9, 0, 1, 2, 3, 4, 3, 1, 9, 0, 6, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 9, 86, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [34, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.302680731040139, 2.3029725530506235, 2.302964823892513, 2.3029096900920796, 2.302924901770563, 2.3029160017760013, 2.3029549469517647, 2.30292013491055, 2.3030188622775096, 2.3029522104128524, 2.302804561134311, 2.3030173295776466], "accuracy": [0.09140139818191528, 0.09668471664190292, 0.09628847241401672, 0.09377889335155487, 0.0948355570435524, 0.09681680053472519, 0.09787346422672272, 0.09325055778026581, 0.09536388516426086, 0.09826971590518951, 0.09866596013307571, 0.09576013684272766], "val_loss": [1.973719937460763, 1.973667894090925, 1.9736991609845842, 1.9736807005746024, 1.9736947332109724, 1.9737556321280343, 1.9736193248203822, 1.973658493586949, 1.9736685752868652, 1.9736206190926688, 1.973686695098877, 1.9736428941999162], "val_accuracy": [0.09799999743700027, 0.09866666793823242, 0.09799999743700027, 0.09866666793823242, 0.10133333504199982, 0.09866666793823242, 0.10400000214576721, 0.09866666793823242, 0.10100000351667404, 0.10400000214576721, 0.09799999743700027, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 5, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022262711865698, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 6, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [26, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022262711865698, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 2, 2, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 0, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [64, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 4, 3, 1, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [10082275.156566914, 195311670.31250826, 913691349.581297, 2556154882.4345527, 5444712483.977282, 9874609089.648396], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09602430462837219, 0.09866596013307571, 0.10355303436517715], "val_loss": [38884898.28571428, 310612114.28571427, 1047796041.1428572, 2483043108.571429, 4848978944.0, 8378198308.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022262711865698, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 0, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05877691134810448, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 2, 6, 9, 0, 5, 2, 0, 4, 3, 1, 9, 0, 6, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 0, 1, 1, 0, 1, 0, 3], [3, 49, 44, 92]], "fitness": -0.09771428257226944, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039778542950042, 2.331775085942746, 2.3964003335373074, 2.5301979621324904, 2.7185945423319198, 2.971211039205946, 3.3414155121539895, 3.767311530232256, 4.304838074795118], "accuracy": [0.09074098616838455, 0.09140139818191528, 0.09959053993225098, 0.09708096832036972, 0.09774138033390045, 0.1010434553027153, 0.10394927859306335, 0.09787346422672272, 0.09932637959718704], "val_loss": [1.976649556841169, 1.9938509804861886, 2.0362999779837474, 2.110152040209089, 2.224053450993129, 2.385867323194231, 2.60162285396031, 2.875061580113002, 3.207191126687186], "val_accuracy": [0.056333333253860474, 0.09033333510160446, 0.09666666388511658, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 2, 0, 5, 2, 1, 9, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [71, 49, 44, 92]], "fitness": -0.07514286041259766, "mapping_values": [1, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))", "other_info": {"loss": [2.3002298475965106, 2.3009303604307867, 2.301141324942028, 2.3008269409950084, 2.300938311222758, 2.299175171032715, 2.2995176413244716, 2.3000525192829597, 2.2999521557051255, 2.299694951247262, 2.2990481139898393, 2.2991905170519273, 2.299360571819573, 2.300082398663895, 2.299744009672454], "accuracy": [0.09338264167308807, 0.09008057415485382, 0.10276053100824356, 0.09285431355237961, 0.08942015469074249, 0.1006472036242485, 0.10236428678035736, 0.09470347315073013, 0.1006472036242485, 0.09708096832036972, 0.10276053100824356, 0.10527011007070541, 0.10077928751707077, 0.10051512718200684, 0.09853387624025345], "val_loss": [1.9703095299857003, 1.9697987011500768, 1.9696357590811593, 1.9696130752563477, 1.9696756090436662, 1.969693388257708, 1.9697747230529785, 1.9697981561933244, 1.9697747230529785, 1.9697747230529785, 1.9699102129255022, 1.9701210430690221, 1.9703676359994071, 1.9705821446010046, 1.9707706996372767], "val_accuracy": [0.045666664838790894, 0.05166666582226753, 0.06066666543483734, 0.06666667014360428, 0.06800000369548798, 0.07400000095367432, 0.07699999958276749, 0.08033332973718643, 0.07733333110809326, 0.08133333176374435, 0.0806666687130928, 0.07699999958276749, 0.07599999755620956, 0.07833333313465118, 0.07800000160932541]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 4, 2, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 2, 1, 2, 3, 0, 0, 2, 1, 2], [70, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 5, 44, 92]], "fitness": -0.03942857310175896, "mapping_values": [1, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 5, 2, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), grad), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300732387291552, 2.3032782381992645, 2.3057577640247255, 2.308645023220739, 2.3124936385602526, 2.3152388952285734], "accuracy": [0.09272222965955734, 0.08545766770839691, 0.08928807079792023, 0.07779685407876968, 0.06472064554691315, 0.06670188903808594], "val_loss": [1.9714548247201102, 1.9727732794625419, 1.9749434334891183, 1.9779748235430037, 1.981881550380162, 1.9866979462759835], "val_accuracy": [0.03400000184774399, 0.027666667476296425, 0.022333333268761635, 0.01666666753590107, 0.01133333332836628, 0.007333333138376474]}}]