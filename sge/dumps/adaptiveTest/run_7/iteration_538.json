[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8137142658233643, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9694001256451237, 1.4619698113989537, 1.0551394723457133, 0.876640128602819, 0.8110472386177142, 0.7636462857757561, 0.7232020216028467, 0.7135950494845467, 0.6849955587795838, 0.656342435089384, 0.6383373848026171, 0.6350251356088852, 0.5907182334011352, 0.59736707436174, 0.5905914144461827, 0.5417794442494879, 0.5829336257375164, 0.5428035935437943, 0.527641187270304, 0.5250871744390178, 0.5094482240707111, 0.5281232895710686, 0.5097120778789893, 0.481210183820169, 0.481933360759687, 0.48033712114073485, 0.47265268816782297, 0.470607209612649, 0.46015207425966365, 0.45164386150843555, 0.42786386406747595, 0.4606779850610983, 0.4224398576226044, 0.4369293473038014, 0.4179120344366805], "accuracy": [0.3365473449230194, 0.4909523129463196, 0.6185444593429565, 0.6756042838096619, 0.6909258961677551, 0.7145687341690063, 0.7226257920265198, 0.7272487282752991, 0.7382115721702576, 0.748249888420105, 0.7567031979560852, 0.7586844563484192, 0.7800818681716919, 0.765949010848999, 0.7790252566337585, 0.7991018295288086, 0.7828556299209595, 0.7938185334205627, 0.8012151718139648, 0.8000264167785645, 0.8117818236351013, 0.8086118102073669, 0.8061022162437439, 0.8197067975997925, 0.8156121969223022, 0.8207634687423706, 0.8232730031013489, 0.8253863453865051, 0.8318583965301514, 0.835160493850708, 0.8454629778862, 0.8247259259223938, 0.8494254350662231, 0.8378021121025085, 0.8426892161369324], "val_loss": [1.4843569823673792, 0.8911278247833252, 0.6564123971121651, 0.628186855997358, 0.623103107724871, 0.5730068002428327, 0.6300526346479144, 0.5208032131195068, 0.52923013482775, 0.49753216334751676, 0.5065506015505109, 0.4760946546282087, 0.47239599909101215, 0.4606167588915144, 0.4315214923449925, 0.42703046117510113, 0.4407238449369158, 0.41163123505456106, 0.44841463225228445, 0.41309624910354614, 0.4298530987330845, 0.42064121791294645, 0.38660153320857454, 0.40711391823632376, 0.39337360858917236, 0.3738773890904018, 0.382089512688773, 0.3834023305347988, 0.36488774844578337, 0.3589226944105966, 0.3668186068534851, 0.37975496905190603, 0.35223004647663664, 0.35656202690941946, 0.3667989798954555], "val_accuracy": [0.4869999885559082, 0.6656666398048401, 0.7133333086967468, 0.7103333473205566, 0.718999981880188, 0.7316666841506958, 0.7163333296775818, 0.7636666893959045, 0.7609999775886536, 0.7609999775886536, 0.7649999856948853, 0.7903333306312561, 0.7820000052452087, 0.7929999828338623, 0.8186666369438171, 0.8153333067893982, 0.7950000166893005, 0.8263333439826965, 0.7866666913032532, 0.8220000267028809, 0.8016666769981384, 0.8056666851043701, 0.8286666870117188, 0.8199999928474426, 0.8306666612625122, 0.8393333554267883, 0.8336666822433472, 0.8309999704360962, 0.8453333377838135, 0.8493333458900452, 0.8450000286102295, 0.8316666483879089, 0.8483333587646484, 0.8429999947547913, 0.843666672706604]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2780160150035433, 2.20777225960452, 2.0730373593621234, 1.8347863793105434, 1.5500714084208052, 1.338495752452749, 1.1820554025200585, 1.0988336460638544, 1.0206716486239682, 0.9653528701706396, 0.9279873829948557, 0.8838042110862072, 0.8714331138434742, 0.8408952364438498, 0.8213779497470964, 0.8097880711534697, 0.7828914714747605, 0.780255754720486, 0.7626304166774551, 0.7519623196718637, 0.7494315175552883, 0.7282142202851952, 0.7183357002224668, 0.7161984315574791, 0.7097171564002032, 0.7052896382502908, 0.690898489848167, 0.6851437816987058, 0.6803145369345313, 0.6681604738547865, 0.6667894373921324, 0.6565773839554404, 0.654901451359745, 0.6460489456317585, 0.6496266895013794, 0.6503934485564977, 0.6441202769898594, 0.6361111242537171, 0.6363537069151761, 0.6248075618420799, 0.6220672654674164, 0.6190504597603542, 0.6165396485582492, 0.6057413271972139, 0.6053678804321878, 0.603718150033612, 0.5965354489596796, 0.600004534530224, 0.6002309426277572, 0.6014345106179798, 0.5844846105830639, 0.5929429567548278], "accuracy": [0.15453705191612244, 0.2860916554927826, 0.38845595717430115, 0.4547615945339203, 0.5041606426239014, 0.5534275770187378, 0.5959582328796387, 0.6181482076644897, 0.6404702067375183, 0.6608110070228577, 0.6781138777732849, 0.6852463483810425, 0.6902654767036438, 0.7003037929534912, 0.7024171352386475, 0.7107383608818054, 0.7205125093460083, 0.7174745798110962, 0.7223616242408752, 0.724739134311676, 0.726192057132721, 0.7375511527061462, 0.7415136694908142, 0.739400327205658, 0.7432307600975037, 0.7387399077415466, 0.7465327978134155, 0.752212405204773, 0.7520803213119507, 0.7557786107063293, 0.7540615797042847, 0.76106196641922, 0.76106196641922, 0.7614582180976868, 0.7609298825263977, 0.7613261342048645, 0.76106196641922, 0.7716285586357117, 0.7629110813140869, 0.76542067527771, 0.7744023203849792, 0.7687227725982666, 0.772288978099823, 0.7770439982414246, 0.7770439982414246, 0.7781006693840027, 0.783119797706604, 0.7815347909927368, 0.7833839654922485, 0.78113853931427, 0.7835160493850708, 0.7868181467056274], "val_loss": [1.9143077986580985, 1.823540483202253, 1.644670043672834, 1.361860718045916, 1.0952074868338448, 0.9294694491795131, 0.8284434591020856, 0.7580018895012992, 0.7194861173629761, 0.683076126234872, 0.6599535431180682, 0.6392589466912406, 0.6219236339841571, 0.6032425165176392, 0.5897242852619716, 0.5831820113318307, 0.569777079990932, 0.5673163277762276, 0.5628548519951957, 0.5512763261795044, 0.5442345482962472, 0.5342403990881783, 0.5266516208648682, 0.5233491148267474, 0.5160799877984183, 0.5110331433159965, 0.5135448830468314, 0.5080569982528687, 0.5167740753718785, 0.49468680790492464, 0.49359420367649626, 0.49515693528311594, 0.48638817242213656, 0.48657294682094027, 0.4805697202682495, 0.4773303440638951, 0.4795461893081665, 0.4792580263955252, 0.47065416404179167, 0.46665944371904644, 0.46227121353149414, 0.4683596066066197, 0.46147377150399344, 0.45748983110700336, 0.45767736434936523, 0.4572610173906599, 0.4555695227214268, 0.4469341380255563, 0.4487794978278024, 0.45005905628204346, 0.4466816186904907, 0.44931767668042866], "val_accuracy": [0.37566667795181274, 0.4546666741371155, 0.5173333287239075, 0.5826666951179504, 0.6223333477973938, 0.6779999732971191, 0.6833333373069763, 0.7020000219345093, 0.70333331823349, 0.721666693687439, 0.7316666841506958, 0.7279999852180481, 0.7300000190734863, 0.7406666874885559, 0.7526666522026062, 0.7473333477973938, 0.7540000081062317, 0.7546666860580444, 0.7486666440963745, 0.7516666650772095, 0.7599999904632568, 0.7713333368301392, 0.7673333287239075, 0.7716666460037231, 0.7746666669845581, 0.7743333578109741, 0.781000018119812, 0.7796666622161865, 0.7606666684150696, 0.7806666493415833, 0.7723333239555359, 0.7833333611488342, 0.7876666784286499, 0.7903333306312561, 0.781333327293396, 0.7873333096504211, 0.7860000133514404, 0.7850000262260437, 0.7943333387374878, 0.7963333129882812, 0.8016666769981384, 0.7919999957084656, 0.7923333048820496, 0.8036666512489319, 0.7986666560173035, 0.7983333468437195, 0.8083333373069763, 0.8046666383743286, 0.8083333373069763, 0.7996666431427002, 0.8056666851043701, 0.8009999990463257]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.7760000228881836, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.010184919577485, 1.3793608510435973, 1.005954702052269, 0.9217213292667312, 0.8340292724210825, 0.7639962827540534, 0.7219775167312668, 0.7059158551663046, 0.6709973974203343, 0.6503532508644272, 0.6340564611234906, 0.61685778103201], "accuracy": [0.3280940353870392, 0.5268788933753967, 0.6296393871307373, 0.6544709801673889, 0.6859067678451538, 0.7111346125602722, 0.7231541275978088, 0.7264562249183655, 0.7390040755271912, 0.7512878179550171, 0.7567031979560852, 0.7718927264213562], "val_loss": [1.4318562235151018, 0.771318827356611, 0.8407259498323713, 0.7224157197134835, 0.637613024030413, 0.5444403716496059, 0.5267495087214878, 0.5440680980682373, 0.49431587968553814, 0.5384987422398159, 0.4939729315893991, 0.5706526381628854], "val_accuracy": [0.5226666927337646, 0.6620000004768372, 0.5950000286102295, 0.6903333067893982, 0.70333331823349, 0.7570000290870667, 0.7720000147819519, 0.7516666650772095, 0.7689999938011169, 0.7379999756813049, 0.768666684627533, 0.7293333411216736]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.7591428756713867, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.010327279591337, 1.379859177475167, 1.0071266745107048, 0.9059973404061414, 0.8237891134537443, 0.7832635098271413, 0.7025810424142495, 0.7188694889298866, 0.6752292096669947, 0.6316320646818461, 0.6616384921655238], "accuracy": [0.3280940353870392, 0.5285959839820862, 0.6275261044502258, 0.6553955674171448, 0.6886804699897766, 0.7077004313468933, 0.735041618347168, 0.7202483415603638, 0.7430986762046814, 0.7540615797042847, 0.7448157668113708], "val_loss": [1.433387245450701, 0.7745470489774432, 0.7816546133586338, 0.7332570041928973, 0.7403210912431989, 0.5428729397909982, 0.5309590782438006, 0.5317326613834926, 0.5004070656640189, 0.5129061937332153, 0.509463735989162], "val_accuracy": [0.5236666798591614, 0.6570000052452087, 0.628333330154419, 0.6809999942779541, 0.6763333082199097, 0.7646666765213013, 0.746999979019165, 0.7620000243186951, 0.7556666731834412, 0.7549999952316284, 0.7450000047683716]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 8, 7, 0, 1, 0, 5, 3, 2, 6, 2, 2, 8, 4, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 2, 0, 3, 3, 1, 3, 2, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.6865714192390442, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.232617234698754, 1.6036988926318028, 1.0786090391564913, 0.8775648698437059, 0.8058541795722781, 0.7691173533627449, 0.7160611874187124, 0.6740163022800129, 0.6229600554853462, 0.5975685858644625, 0.5710931590377788, 0.5486884467621616, 0.5266643925475848, 0.5066206108908123, 0.5108388845340498, 0.5002228352828599, 0.4713895713703555, 0.45356280312262914, 0.4523248349033122, 0.4424196601842987, 0.4276162652630202, 0.4318406931586537, 0.4258652886166911, 0.4135063762056073, 0.39992142490833, 0.3949250386509488, 0.3963467959265872], "accuracy": [0.228899747133255, 0.4741777777671814, 0.6310923099517822, 0.6818121671676636, 0.6950204968452454, 0.7125874757766724, 0.7271166443824768, 0.7449478507041931, 0.7675340175628662, 0.7741381525993347, 0.7864218950271606, 0.793950617313385, 0.800818920135498, 0.811649739742279, 0.8078193068504333, 0.8087438941001892, 0.8189142942428589, 0.8271034359931946, 0.829216718673706, 0.8285563588142395, 0.8364813327789307, 0.8379341959953308, 0.8352925777435303, 0.8448025584220886, 0.8459912538528442, 0.8508783578872681, 0.8462554216384888], "val_loss": [1.6786267416817802, 0.798380970954895, 0.7069607121603829, 0.5846638338906425, 0.5654285464968, 0.5633895737784249, 0.496744053704398, 0.4675827537264143, 0.4500516823359898, 0.430949798652104, 0.4300468053136553, 0.4171994754246303, 0.41154024430683683, 0.39884463378361296, 0.3996050102370126, 0.39157204968588694, 0.39703902176448275, 0.3914769632475717, 0.37048087801252094, 0.3654740793364389, 0.3636917131287711, 0.37006205320358276, 0.3713215844971793, 0.39232817717960905, 0.3753917472703116, 0.39463827439716886, 0.3767150810786656], "val_accuracy": [0.4519999921321869, 0.671999990940094, 0.7096666693687439, 0.7396666407585144, 0.7383333444595337, 0.7493333220481873, 0.7726666927337646, 0.784333348274231, 0.7876666784286499, 0.8029999732971191, 0.8073333501815796, 0.812333345413208, 0.8086666464805603, 0.8246666789054871, 0.8270000219345093, 0.8360000252723694, 0.8353333473205566, 0.8339999914169312, 0.8426666855812073, 0.8486666679382324, 0.8446666598320007, 0.856333315372467, 0.8483333587646484, 0.8529999852180481, 0.8526666760444641, 0.8543333411216736, 0.8453333377838135]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.1794285774230957, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 3, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))", "other_info": {"loss": [3.4147183107835364, 2.363956369885742, 2.45553052086856, 2.30499965561033, 2.225050435515285, 2.2234867721925937, 2.2322380584638197, 3.5273396272889816, 2.3659178362294524, 2.333647713354471, 2.348436783648375], "accuracy": [0.24118345975875854, 0.09642054885625839, 0.10672302544116974, 0.15598995983600616, 0.1624620258808136, 0.19574692845344543, 0.16483952105045319, 0.10434553027153015, 0.10210011899471283, 0.09774138033390045, 0.1014397069811821], "val_loss": [2.007159641810826, 2.0106957299368724, 1.9501300539289201, 1.8470912660871233, 1.8317901747567313, 1.7950332505362374, 1.8094346863882882, 2.017465727669852, 2.00239052091326, 2.027428831372942, 1.9976912225995744], "val_accuracy": [0.09866666793823242, 0.09799999743700027, 0.1456666737794876, 0.19300000369548798, 0.1966666728258133, 0.25333333015441895, 0.14399999380111694, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 3, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [76, 49, 44, 92]], "fitness": -0.1728571355342865, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.149627877768115, 2.30686390174772, 2.301409239278352, 2.4455171344995406, 2.3045768338801635, 2.3033725034763877, 2.3021120241588653], "accuracy": [0.18412363529205322, 0.09721305221319199, 0.11187426000833511, 0.18201030790805817, 0.09826971590518951, 0.09959053993225098, 0.10117553919553757], "val_loss": [1.9795955930437361, 1.974026884351458, 1.962580748966762, 1.976400511605399, 1.9740889413016183, 1.973372323172433, 1.971320629119873], "val_accuracy": [0.10133333504199982, 0.1706666648387909, 0.15399999916553497, 0.09866666793823242, 0.09966666996479034, 0.09866666793823242, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 0, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 63, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [1, 49, 44, 92]], "fitness": -0.12228571623563766, "mapping_values": [1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302145275819602, 2.303145222455409, 2.30057085179193, 2.3008822555854382, 2.302715695623897, 2.302571179230357, 2.29965962596526, 2.301716601639187, 2.3024518413314445, 2.302429453792227, 2.3012471899081213, 2.3010268191210486, 2.2993594532267387, 2.3006404928165325, 2.299894433562561, 2.300935297247882, 2.299254895390269, 2.299758068716301, 2.2993229588088013, 2.299543869981928, 2.300962818517598, 2.298467317230241, 2.2999344978979974, 2.2991465244310847, 2.299280147668377, 2.300163383197948, 2.2981310683376264, 2.299369480789078, 2.2988925845222137, 2.298827292849564, 2.2992300170366367, 2.297406644680087, 2.2981358904958857, 2.297512449687262, 2.2989826786236254, 2.29898710273528, 2.298257819067265, 2.2976819533304123, 2.2971130206269703, 2.2992362614557207, 2.2971884915227543, 2.2979869750890405, 2.2976307413282333, 2.296184859932721, 2.2971817341463017, 2.295989583653702, 2.2966653641897374, 2.296576121920655, 2.2955737637333535, 2.2957381007693716, 2.2952558384626895, 2.2953470955592863, 2.2971316821161687, 2.295240575138919, 2.2970440484403287, 2.2952870720208454, 2.2962057401853357, 2.29528351995876, 2.2952256854876962, 2.295751081749338, 2.295845102498623, 2.296453775022449, 2.29430403887021, 2.2938896724497875, 2.294052455057132, 2.293537161589897, 2.294082082446855, 2.2939892508303092, 2.2944833219263927, 2.2934958890066675, 2.2936311495255297, 2.2937940945950923, 2.29424088739086, 2.293926248240543, 2.2935303030327687, 2.2936599002050104, 2.2938356791599444, 2.2928356685658584, 2.2942870057821114, 2.2926455890938686, 2.292497231141215, 2.2925911701397887, 2.2930764819747185, 2.2920024265560883, 2.293482744304842, 2.2922105352404, 2.2923444425267725, 2.2927680198211933, 2.2923250305118845, 2.2900688030054983, 2.2936270770427023, 2.291073411037862, 2.2904718305456515, 2.2913213923717173, 2.292239375543349, 2.29076353055989, 2.290732900464319, 2.290504649803072, 2.2919962939301564, 2.290176692687289], "accuracy": [0.08994849026203156, 0.08994849026203156, 0.09721305221319199, 0.09681680053472519, 0.09060890227556229, 0.09074098616838455, 0.09998679161071777, 0.1010434553027153, 0.09377889335155487, 0.08889182657003403, 0.09074098616838455, 0.09708096832036972, 0.09628847241401672, 0.09417514503002167, 0.09893012791872025, 0.09417514503002167, 0.10038304328918457, 0.09760929644107819, 0.09813763201236725, 0.0940430611371994, 0.09457138925790787, 0.09972262382507324, 0.09470347315073013, 0.10051512718200684, 0.09668471664190292, 0.09047681838274002, 0.09668471664190292, 0.09945846349000931, 0.09906221181154251, 0.09351472556591034, 0.09113723784685135, 0.10236428678035736, 0.09972262382507324, 0.09893012791872025, 0.1006472036242485, 0.10606260597705841, 0.10355303436517715, 0.10289261490106583, 0.10130762308835983, 0.09800554811954498, 0.10487385839223862, 0.09391097724437714, 0.09879804402589798, 0.10593052208423615, 0.10500594228506088, 0.10447761416435242, 0.10487385839223862, 0.10513802617788315, 0.10593052208423615, 0.10817593336105347, 0.10645885765552521, 0.10685510188341141, 0.10487385839223862, 0.10817593336105347, 0.109232597053051, 0.10606260597705841, 0.10857218503952026, 0.10368511080741882, 0.109232597053051, 0.10540219396352768, 0.1018359512090683, 0.10421344637870789, 0.10989301651716232, 0.11068551242351532, 0.1146479994058609, 0.10302469879388809, 0.1154404953122139, 0.10910051316022873, 0.11042134463787079, 0.11081759631633759, 0.11451591551303864, 0.11015717685222626, 0.10579843819141388, 0.10777968913316727, 0.11913882195949554, 0.10989301651716232, 0.10962884873151779, 0.11491216719150543, 0.11438383162021637, 0.11147800832986832, 0.11359133571386337, 0.11266675591468811, 0.11662924289703369, 0.11689341068267822, 0.11002509295940399, 0.11808215826749802, 0.11121384054422379, 0.11253467202186584, 0.11438383162021637, 0.11927089840173721, 0.11240258812904358, 0.11887465417385101, 0.11940298229455948, 0.11953506618738174, 0.11147800832986832, 0.11834631860256195, 0.12098798155784607, 0.12481838464736938, 0.11821424216032028, 0.12838461995124817], "val_loss": [1.9708753313337053, 1.970768587929862, 1.9706620488848006, 1.970555101122175, 1.970447335924421, 1.9703397069658553, 1.9702323504856654, 1.9701249258858817, 1.9700169563293457, 1.9699089186532157, 1.9698006084987096, 1.9696924345833915, 1.9695867810930525, 1.9694801739283971, 1.9693736348833357, 1.9692676407950265, 1.969160488673619, 1.9690546989440918, 1.9689483642578125, 1.9688427788870675, 1.968735831124442, 1.9686297689165388, 1.9685235704694475, 1.9684175082615443, 1.968310832977295, 1.9682046345302038, 1.9680984360831124, 1.9679921013968331, 1.9678869928632463, 1.9677811350141252, 1.9676741872514998, 1.967566626412528, 1.9674607004438127, 1.9673538208007812, 1.9672466686793737, 1.967139789036342, 1.9670345442635673, 1.9669280733380998, 1.9668222154889787, 1.9667165619986398, 1.9666100910731725, 1.9665048463003976, 1.9663986478533064, 1.9662914957318987, 1.9661848885672433, 1.9660795756748743, 1.9659746033804757, 1.9658685411725725, 1.9657636369977678, 1.9656591415405273, 1.9655530793326241, 1.965447017124721, 1.96534149987357, 1.9652363913399833, 1.9651297160557337, 1.9650229045322962, 1.9649170466831751, 1.9648116656712122, 1.964705126626151, 1.9645982469831194, 1.9644935471670968, 1.96438843863351, 1.9642829213823592, 1.9641782215663366, 1.9640727043151855, 1.9639667783464705, 1.9638609204973494, 1.9637560844421387, 1.9636523383004325, 1.963545663016183, 1.9634391239711217, 1.9633328574044364, 1.9632277488708496, 1.9631221635001046, 1.963017531803676, 1.962911742074149, 1.9628069741385323, 1.9627021380833216, 1.962596825190953, 1.9624921253749303, 1.9623872893197196, 1.9622808183942522, 1.9621760504586356, 1.9620708738054549, 1.961965901511056, 1.9618618147713798, 1.9617575236729212, 1.9616520064217704, 1.9615471022469657, 1.9614439691816057, 1.9613396780831474, 1.961235727582659, 1.9611303465706962, 1.9610259873526437, 1.9609214237758092, 1.9608164514814104, 1.96071229662214, 1.9606078692844935, 1.9605029651096888, 1.960397584097726], "val_accuracy": [0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03766666725277901, 0.038333334028720856, 0.03933333232998848, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.0430000014603138, 0.04500000178813934, 0.04500000178813934, 0.04533333331346512, 0.046666666865348816, 0.04866666719317436, 0.04933333396911621, 0.05000000074505806, 0.05133333429694176, 0.05133333429694176, 0.052666667848825455, 0.0533333346247673, 0.05433333292603493, 0.054999999701976776, 0.056333333253860474, 0.05700000002980232, 0.058666665107011795, 0.058666665107011795, 0.059333331882953644, 0.05966666713356972, 0.061000000685453415, 0.06199999898672104, 0.06266666948795319, 0.06266666948795319, 0.06433333456516266, 0.06433333456516266, 0.06599999964237213, 0.0663333311676979, 0.06733333319425583, 0.0676666647195816, 0.06833333522081375, 0.070333331823349, 0.07066666334867477, 0.0716666653752327, 0.07233333587646484, 0.07266666740179062, 0.07333333045244217, 0.07466666400432587, 0.07466666400432587, 0.07566666603088379, 0.07666666805744171, 0.07833333313465118, 0.07866666465997696, 0.0806666687130928, 0.0820000022649765, 0.08299999684095383, 0.0833333358168602, 0.08399999886751175, 0.08533333241939545, 0.08766666799783707, 0.08833333104848862, 0.08866667002439499, 0.08933333307504654, 0.09133332967758179, 0.09266666322946548, 0.09300000220537186, 0.09366666525602341, 0.09466666728258133, 0.0963333323597908, 0.0976666659116745, 0.09866666793823242, 0.0989999994635582, 0.09966666996479034, 0.10100000351667404, 0.10233332961797714, 0.10333333164453506, 0.10566666722297668, 0.10700000077486038, 0.10733333230018616, 0.109333336353302, 0.11133333295583725, 0.11133333295583725, 0.11299999803304672, 0.1133333370089531, 0.11533333361148834, 0.11599999666213989, 0.11733333021402359, 0.11900000274181366, 0.12033333629369736, 0.12066666781902313, 0.12133333086967468, 0.12300000339746475, 0.12333333492279053, 0.12433333694934845, 0.125, 0.12533333897590637]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [63, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 1, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 2, 7, 1, 6, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 0, 1, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 7, 7, 3, 4, 1, 4, 3, 2, 1, 0, 12, 6, 6, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 20, 16, 9, 57, 39, 26, 75], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4069720940142103, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03011491149663925, 0.08347642421722412, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.4698572840009416, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.012000000104308128, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 6, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 9, 5, 6, 5, 9, 4, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 1, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 1, 2, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [12, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 7, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [505575830.04596627, 9716260940.82367, 45046763954.43244, 124307810550.97186, 271360396847.2709, 498051897135.98096], "accuracy": [0.10077928751707077, 0.09681680053472519, 0.09945846349000931, 0.10038304328918457, 0.09972262382507324, 0.09840179979801178], "val_loss": [1934126080.0, 15466800274.285715, 52193001472.0, 123708960182.85715, 241609221266.2857, 417488455972.5714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 7, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), grad), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.301438716392885, 2.304417725866497, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9743138722011022, 1.9835398537772042, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))", "other_info": {"loss": [2.444688184622524, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19970941543579102, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.07114285975694656, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.301774493266468, 2.3019953218386267, 2.2993747767613564, 2.299520559062764, 2.300981902773858, 2.3009956048354026, 2.299142316883235, 2.300147579236195, 2.300881368672103, 2.300380355378719, 2.29978803882289, 2.299786326813109, 2.2996624655428186, 2.3005951756830183], "accuracy": [0.09087307006120682, 0.09166556596755981, 0.09774138033390045, 0.09919429570436478, 0.09615638852119446, 0.09642054885625839, 0.10276053100824356, 0.10368511080741882, 0.09351472556591034, 0.09536388516426086, 0.0944393053650856, 0.10659094154834747, 0.09774138033390045, 0.09760929644107819], "val_loss": [1.9702551024300712, 1.969836643763951, 1.9697788102286202, 1.9697559220450265, 1.9697043555123466, 1.969712393624442, 1.9698613030569894, 1.9698470660618372, 1.9697674342564173, 1.9697778565543038, 1.9699646404811315, 1.9702215875898088, 1.9705111639840263, 1.9706779207502092], "val_accuracy": [0.0430000014603138, 0.04833333194255829, 0.054999999701976776, 0.057999998331069946, 0.06133333221077919, 0.06666667014360428, 0.06666667014360428, 0.07066666334867477, 0.07366666942834854, 0.07366666942834854, 0.07100000232458115, 0.07000000029802322, 0.07000000029802322, 0.0689999982714653]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 5, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.056857142597436905, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 3, 4, 3, 2, 1, 0, 5, 3, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.math.square(alpha)))", "other_info": {"loss": [2.302157906587838, 2.3031812440355486, 2.300631698190953, 2.300976848117333, 2.3028433784879887, 2.3027137672392572, 2.299858668508342, 2.301927912614727, 2.3027170546192455, 2.302712492293465, 2.301540250114367, 2.301370923765709, 2.2997476417217526, 2.3010503784729397, 2.3003908119748346, 2.301390975867249, 2.2997585801306086, 2.3002642849574646, 2.299888710571932, 2.300218286515542, 2.3016004096310705, 2.2991430773600894, 2.3006601170494636, 2.2998999593248772, 2.300086297127297, 2.3010128976929978, 2.2990122024708453, 2.300226956405156, 2.299888176169173, 2.2998109026639186, 2.300220836973965, 2.2984957226420817, 2.29924171752839, 2.2986307814294134, 2.3001596308214287, 2.3002317690216336, 2.299554340937953, 2.2990118215238695, 2.298517116103993, 2.300669969994048, 2.2986023094455375, 2.2995994207235833, 2.2990844846795246, 2.297764539624155, 2.298886352794014, 2.2977609230999336, 2.298510471811825, 2.2984097701148145, 2.2974636669030453, 2.297641093122205, 2.297271336231879, 2.297464654965565, 2.299201317813497, 2.2974163017189815, 2.299185372299569, 2.2975282888244943, 2.2985273641035335, 2.2978032325882687, 2.297651240917292, 2.2982205440811967, 2.298385247924718, 2.299086552034075, 2.2970583070743165, 2.296679716855937, 2.2968034653253624, 2.2962378721195615, 2.2970250390382443, 2.2968213863974913, 2.297563193701262, 2.2965890054043965, 2.296821969107488, 2.2969429587738435, 2.2975982587099106, 2.2972967903045003, 2.2969067609069245, 2.297023924791172, 2.2974206923556726, 2.2964412982138533, 2.298047019254105, 2.2962340648226878, 2.296330111862221, 2.2962946814631646, 2.2970438000390936, 2.2958710064835723, 2.2974951904305945, 2.2962692870030614, 2.296509598413431, 2.2968475008999683, 2.2964744434664044, 2.294445081267926, 2.297902165591646, 2.295386906895797, 2.2950302608859316, 2.2957998445052605, 2.2968547027093105, 2.295433122121962, 2.2955895825903636, 2.295407993131231, 2.296859228222078, 2.2953119289920694], "accuracy": [0.08968432247638702, 0.08994849026203156, 0.09721305221319199, 0.09615638852119446, 0.09087307006120682, 0.09060890227556229, 0.09893012791872025, 0.10077928751707077, 0.09325055778026581, 0.0886276587843895, 0.09034473448991776, 0.09602430462837219, 0.0952318087220192, 0.0936468094587326, 0.09853387624025345, 0.09259014576673508, 0.09879804402589798, 0.09747721254825592, 0.09655263274908066, 0.09285431355237961, 0.09417514503002167, 0.09760929644107819, 0.09417514503002167, 0.09906221181154251, 0.0944393053650856, 0.09060890227556229, 0.09655263274908066, 0.09628847241401672, 0.09694888442754745, 0.09298639744520187, 0.09008057415485382, 0.1006472036242485, 0.09866596013307571, 0.09655263274908066, 0.09853387624025345, 0.10342095047235489, 0.10091137140989304, 0.1002509593963623, 0.09813763201236725, 0.09589222073554993, 0.10157178342342377, 0.09259014576673508, 0.09628847241401672, 0.10434553027153015, 0.1010434553027153, 0.1006472036242485, 0.1002509593963623, 0.10236428678035736, 0.10170386731624603, 0.10408136248588562, 0.10302469879388809, 0.10276053100824356, 0.09972262382507324, 0.10408136248588562, 0.10368511080741882, 0.09972262382507324, 0.10196803510189056, 0.09509972482919693, 0.10553427785634995, 0.09972262382507324, 0.09602430462837219, 0.09813763201236725, 0.10487385839223862, 0.10579843819141388, 0.1088363528251648, 0.09826971590518951, 0.11028926074504852, 0.10355303436517715, 0.10751552134752274, 0.10368511080741882, 0.10527011007070541, 0.10460969805717468, 0.09945846349000931, 0.10276053100824356, 0.11266675591468811, 0.10196803510189056, 0.10249637067317963, 0.107647605240345, 0.10447761416435242, 0.1010434553027153, 0.10566636174917221, 0.10302469879388809, 0.10606260597705841, 0.10989301651716232, 0.10381719470024109, 0.10989301651716232, 0.09998679161071777, 0.10368511080741882, 0.10302469879388809, 0.11015717685222626, 0.10381719470024109, 0.10500594228506088, 0.11055342853069305, 0.11134592443704605, 0.10487385839223862, 0.1088363528251648, 0.10962884873151779, 0.11306300014257431, 0.10619468986988068, 0.11689341068267822], "val_loss": [1.9708995819091797, 1.9708185195922852, 1.9707354136875697, 1.9706589153834753, 1.9705785342625208, 1.9704959051949638, 1.9704274450029646, 1.970351082938058, 1.9702767644609724, 1.9701987675258092, 1.970118863242013, 1.970036574772426, 1.9699699538094657, 1.96989529473441, 1.9698271751403809, 1.9697503362383162, 1.969672475542341, 1.969592843736921, 1.969520092010498, 1.9694561958312988, 1.9693795612880163, 1.969308716910226, 1.969240597316197, 1.9691717284066337, 1.9691062654767717, 1.9690402575901575, 1.968977383204869, 1.9689088548932756, 1.968845980507987, 1.9687821524483817, 1.9687119211469377, 1.9686425754002161, 1.968578883579799, 1.9685158729553223, 1.9684506143842424, 1.968385968889509, 1.968329633985247, 1.9682682582310267, 1.968208176749093, 1.9681484358651298, 1.968083041054862, 1.9680262293134416, 1.9679614475795202, 1.9678989137922014, 1.967841557094029, 1.9677887644086565, 1.967738424028669, 1.9676801817757743, 1.9676260266985213, 1.967569214957101, 1.9675142424447196, 1.9674609729221888, 1.967407294682094, 1.9673541613987513, 1.9672984395708357, 1.9672425815037318, 1.967190878731864, 1.9671410151890345, 1.9670898573739188, 1.9670359747750419, 1.9669887678963798, 1.966938086918422, 1.9668901307242257, 1.9668442181178503, 1.9667929240635462, 1.9667390414646693, 1.9666906084333147, 1.9666376113891602, 1.966592720576695, 1.9665422439575195, 1.9664902005876814, 1.9664364542279924, 1.966388429914202, 1.9663425173078264, 1.9662925175258092, 1.9662378174918038, 1.9661930629185267, 1.966147014072963, 1.9660984448024206, 1.9660513741629464, 1.9660053934369768, 1.9659523282732283, 1.9659003530229842, 1.96584871837071, 1.9658000128609794, 1.965754781450544, 1.9657093456813268, 1.9656594140189034, 1.9656107085091727, 1.9655677931649345, 1.9655207225254603, 1.9654789652143205, 1.9654313496180944, 1.9653865269252233, 1.9653408186776298, 1.9652957916259766, 1.9652557373046875, 1.9652140481131417, 1.9651696341378349, 1.9651262419564384], "val_accuracy": [0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03700000047683716, 0.03733333200216293, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.041999999433755875, 0.041999999433755875, 0.041999999433755875, 0.04233333468437195, 0.04266666620969772, 0.04333333298563957, 0.04333333298563957, 0.044333335012197495, 0.04466666653752327, 0.04533333331346512, 0.04600000008940697, 0.04600000008940697, 0.04633333161473274, 0.04699999839067459, 0.047333333641290665, 0.04766666516661644, 0.04800000041723251, 0.04933333396911621, 0.049666665494441986, 0.050333332270383835, 0.05133333429694176, 0.05166666582226753, 0.052000001072883606, 0.052000001072883606, 0.05233333259820938, 0.05299999937415123, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.0560000017285347, 0.056333333253860474, 0.056333333253860474, 0.0573333315551281, 0.05766666680574417, 0.05833333358168602, 0.05833333358168602, 0.05833333358168602, 0.058666665107011795, 0.05900000035762787, 0.059333331882953644, 0.05999999865889549, 0.05999999865889549, 0.061000000685453415, 0.061666667461395264, 0.06199999898672104, 0.06333333253860474, 0.06433333456516266, 0.06499999761581421, 0.06566666811704636, 0.06599999964237213, 0.06599999964237213, 0.06599999964237213, 0.0663333311676979, 0.0676666647195816, 0.0676666647195816, 0.06833333522081375, 0.06833333522081375, 0.0689999982714653, 0.06933332979679108, 0.06966666877269745, 0.07066666334867477, 0.07133333384990692, 0.07133333384990692, 0.07199999690055847, 0.07266666740179062, 0.0729999989271164, 0.07333333045244217, 0.07366666942834854, 0.07366666942834854, 0.07633333653211594, 0.07633333653211594, 0.07733333110809326, 0.07766667008399963, 0.07900000363588333, 0.0793333351612091, 0.0793333351612091, 0.07900000363588333, 0.07999999821186066, 0.08033332973718643, 0.08033332973718643, 0.08100000023841858, 0.08166666328907013, 0.08166666328907013, 0.08266666531562805, 0.08299999684095383]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [1, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302192084084822, 2.3033077990169524, 2.300846068677397, 2.301273505827219, 2.3032257448271234, 2.303199327349458], "accuracy": [0.08994849026203156, 0.08968432247638702, 0.09681680053472519, 0.09628847241401672, 0.09034473448991776, 0.08968432247638702], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 6, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 3, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [33, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))))), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302192084084822, 2.3033077990169524, 2.300846068677397, 2.301273505827219, 2.3032257448271234, 2.303199327349458], "accuracy": [0.08994849026203156, 0.08968432247638702, 0.09681680053472519, 0.09628847241401672, 0.09034473448991776, 0.08968432247638702], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [12, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 3, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 0, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [76, 49, 44, 92]], "fitness": -0.03028571419417858, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.negative(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.math.multiply(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.995255395201266, 2.984339478938272, NaN, NaN, NaN, NaN], "accuracy": [0.19772817194461823, 0.1072513535618782, 0.11345925182104111, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.065398965563093, 3.8443640981401717, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]