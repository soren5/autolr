[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 2, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 4, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8197143077850342, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.negative(tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.201352599526535, 1.7614040725408464, 1.6115563362344791, 1.2192292445213913, 0.939528941564934, 0.8224495698857411, 0.7340889385253242, 0.719688493050384, 0.6869265409099145, 0.6685528288176031, 0.6524064064718682, 0.6339562096301008, 0.5947596312608417, 0.5763597290167294, 0.5677078893833062, 0.5624377784034942, 0.5386105619401444, 0.5228091641746854, 0.513629055852982, 0.5250754143032558, 0.4919710408002158, 0.48840313857777273, 0.4871538276441534, 0.4619153251564183, 0.47557968166935416, 0.44376683102906134, 0.46311344781634894, 0.43276516286814454, 0.4173349362629878, 0.4058472280725276, 0.41520129410094114, 0.41817965056477063, 0.39342846239893237, 0.40392487165383406, 0.39697085973797946, 0.38581394375338923, 0.39990878562964405, 0.37312713199681485, 0.39270029192697636, 0.36418486013860907, 0.3599509205745432, 0.36350041534591737, 0.3556128059317171], "accuracy": [0.2727513015270233, 0.402588814496994, 0.4496103525161743, 0.5486725568771362, 0.6406022906303406, 0.6864351034164429, 0.7211728692054749, 0.720380425453186, 0.7326641082763672, 0.7407211661338806, 0.7559106945991516, 0.7559106945991516, 0.7725531458854675, 0.7810064554214478, 0.7876105904579163, 0.7878747582435608, 0.7989697456359863, 0.8043851256370544, 0.8083476424217224, 0.8016114234924316, 0.8185180425643921, 0.8171972036361694, 0.8185180425643921, 0.8271034359931946, 0.8170651197433472, 0.834632158279419, 0.8238013386726379, 0.8385946154594421, 0.8490291833877563, 0.8475762605667114, 0.8454629778862, 0.8421608805656433, 0.8556333184242249, 0.848368763923645, 0.8514066934585571, 0.8599920868873596, 0.852859616279602, 0.86118084192276, 0.8516708612442017, 0.8628978729248047, 0.8644828796386719, 0.8646149635314941, 0.8676528930664062], "val_loss": [1.3549066952296667, 1.61373393876212, 1.2061753273010254, 0.8437577826636178, 0.6475863286427089, 0.5831218617303031, 0.5702932051249913, 0.5923266240528652, 0.4861712285450527, 0.5301936864852905, 0.5052170072283063, 0.46497489724840435, 0.4504972185407366, 0.4306717004094805, 0.4296950697898865, 0.4581317731312343, 0.40334841183253695, 0.45742223943982807, 0.3977954813412258, 0.3844508102961949, 0.39353807483400616, 0.3802697913987296, 0.36873437677110943, 0.3661105973379953, 0.3570361648287092, 0.3894612874303545, 0.3844946026802063, 0.35173116411481586, 0.3553060804094587, 0.34079110622406006, 0.3727556807654245, 0.34984716347285677, 0.34307737009865896, 0.33334243297576904, 0.3306715999330793, 0.38789452825273785, 0.3411300608089992, 0.3171021853174482, 0.31706976890563965, 0.3411987168448312, 0.3168629748480661, 0.3282671570777893, 0.33470371791294645], "val_accuracy": [0.3766666650772095, 0.43066665530204773, 0.5040000081062317, 0.609333336353302, 0.7133333086967468, 0.7266666889190674, 0.7369999885559082, 0.7269999980926514, 0.7726666927337646, 0.75, 0.765666663646698, 0.7973333597183228, 0.7906666398048401, 0.8029999732971191, 0.8036666512489319, 0.7883333563804626, 0.8203333616256714, 0.7860000133514404, 0.8256666660308838, 0.8316666483879089, 0.8276666402816772, 0.8306666612625122, 0.8393333554267883, 0.8389999866485596, 0.8446666598320007, 0.8240000009536743, 0.8206666707992554, 0.8496666550636292, 0.8496666550636292, 0.8510000109672546, 0.828000009059906, 0.847000002861023, 0.8519999980926514, 0.8640000224113464, 0.862666666507721, 0.8273333311080933, 0.8619999885559082, 0.8740000128746033, 0.8666666746139526, 0.8463333249092102, 0.8603333234786987, 0.8629999756813049, 0.8566666841506958]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8148571252822876, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 3, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2012740161519373, 1.90386114234166, 1.444059850485916, 1.1384741129451315, 0.9499133681545577, 0.8703114513030787, 0.7846770041008762, 0.7146182682346973, 0.698817847561071, 0.6850965828266378, 0.6235023803557261, 0.6475360761654296, 0.598149286426841, 0.5777398824864973, 0.581125182002338, 0.5668178545942144, 0.5449956682860151, 0.5184244508158182, 0.5138330770844183, 0.5193259749808063, 0.5049023400948363, 0.4913273050902841, 0.4795337203841373, 0.4695864841607678, 0.4737457009692942, 0.4530280434129544, 0.45600555159113176, 0.4322746291632634, 0.443051616249776, 0.4341767317528234, 0.40926782037162857, 0.40375998693765225, 0.41902673462945333, 0.39172871799957737, 0.3867491325327843, 0.3922603894194844, 0.40117495575002815, 0.3827923006936465, 0.374603977639205, 0.37629078405959304, 0.36775488717098437], "accuracy": [0.27261921763420105, 0.3711530864238739, 0.4764232039451599, 0.583410382270813, 0.6404702067375183, 0.6708492636680603, 0.702681303024292, 0.7269845604896545, 0.7293620109558105, 0.7321357727050781, 0.7651565074920654, 0.7540615797042847, 0.7729493975639343, 0.7802139520645142, 0.7832518815994263, 0.7843085527420044, 0.789988100528717, 0.8043851256370544, 0.8086118102073669, 0.8039889335632324, 0.8123101592063904, 0.8185180425643921, 0.8267071843147278, 0.8249900937080383, 0.8207634687423706, 0.8289526104927063, 0.830669641494751, 0.8404437899589539, 0.8339717388153076, 0.8411042094230652, 0.8507462739944458, 0.8486329317092896, 0.8412362933158875, 0.8533879518508911, 0.8589354157447815, 0.8535200357437134, 0.8510104417800903, 0.8581429123878479, 0.8578787446022034, 0.8609166741371155, 0.8593316674232483], "val_loss": [1.3546394961220878, 1.6891673292432512, 1.1693724223545618, 0.6692076240267072, 0.6939315285001483, 0.6714536632810321, 0.5589281490870884, 0.5586851494652885, 0.49488512107304167, 0.4727503401892526, 0.4912588085447039, 0.4668876954487392, 0.45426392555236816, 0.44256164346422466, 0.4466578960418701, 0.46451713357652935, 0.4131103924342564, 0.4645365136010306, 0.3932029604911804, 0.37774230752672466, 0.4005700775555202, 0.3792473929268973, 0.3723983679498945, 0.3693536860602243, 0.3619533010891506, 0.3658183813095093, 0.3887179834502084, 0.34949052333831787, 0.33732731001717703, 0.3636048436164856, 0.35283578293664114, 0.3433017986161368, 0.339844856943403, 0.32787743636540007, 0.3306180238723755, 0.31486694301877705, 0.33653368268694195, 0.3174910119601658, 0.32507905789784025, 0.33694920369556974, 0.3248465231486729], "val_accuracy": [0.37700000405311584, 0.3526666760444641, 0.57833331823349, 0.7026666402816772, 0.6850000023841858, 0.6869999766349792, 0.7393333315849304, 0.7483333349227905, 0.7680000066757202, 0.7803333401679993, 0.7733333110809326, 0.8023333549499512, 0.7910000085830688, 0.7979999780654907, 0.7896666526794434, 0.7839999794960022, 0.8146666884422302, 0.7853333353996277, 0.8306666612625122, 0.8396666646003723, 0.8303333520889282, 0.8366666436195374, 0.8293333053588867, 0.840666651725769, 0.8420000076293945, 0.8386666774749756, 0.8253333568572998, 0.8526666760444641, 0.8603333234786987, 0.8389999866485596, 0.8456666469573975, 0.8533333539962769, 0.859333336353302, 0.8686666488647461, 0.8579999804496765, 0.871999979019165, 0.8643333315849304, 0.8696666955947876, 0.8629999756813049, 0.8543333411216736, 0.8576666712760925]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 1, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [48, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [12, 49, 44, 92]], "fitness": -0.46314287185668945, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 3, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300802079079693, 2.3026428756429187, 2.296916645059118, 2.297966359833433, 2.2970935495034217, 2.295511772477978, 2.2958544213868497, 2.2952975607693014, 2.2941512470436827, 2.291770222542576, 2.2893905364731757, 2.2899133687352524, 2.2878173490352225, 2.2887133572316047, 2.284874701622754, 2.2862797271558213, 2.283678159359786, 2.283590201924679, 2.282831134356528, 2.280164482980561, 2.2815821902658393, 2.278368566266424, 2.278767272702077, 2.277471107687728, 2.2758457380089983, 2.2748573545955506, 2.2715992847878965, 2.272482664955763, 2.2708784385112297, 2.2694105750864777, 2.268508541491116, 2.26902788328756, 2.267047785560075, 2.2665253930072335, 2.264606471421334, 2.2623738539673948, 2.2634459412597066, 2.262661044277362, 2.2602149721590785, 2.2579111556618865, 2.256744517027946, 2.256667561141208, 2.2551007203107276, 2.252214444390598, 2.2526786705254405, 2.253177194925363, 2.2489373098196306, 2.2506598192765934, 2.247895805512311, 2.247334103841886, 2.245432710194112, 2.244634130296769, 2.2421283732315866, 2.240807309016544, 2.2395212940646356, 2.237608434407309, 2.2371240419844565, 2.234913344333484, 2.234404705455983, 2.2335868944912036, 2.231368359888329, 2.2298245854806655, 2.230224940786587, 2.2282595936774325, 2.228110282617301, 2.2252833764188718, 2.2240398160659596, 2.222512587643161, 2.220234299946801, 2.2174289203858444, 2.2168723701753668, 2.2150915542283096, 2.2139105375464, 2.21129019051621, 2.210131591699379, 2.2099279757771653, 2.2063317051999496, 2.205077308311659, 2.202709486865254, 2.2006629009319885, 2.198624697028843, 2.1955207812236583, 2.1951108759483406, 2.1955095012945947, 2.1923026379466988, 2.1909621985612717, 2.1867593001097485, 2.188859147796258, 2.1844849527598593, 2.1823321659142048, 2.178770394420359, 2.1782883927019405, 2.1762796490656275, 2.173868086139335, 2.1716682567352064, 2.1707009519363645, 2.168121860358284, 2.163781724633038, 2.1649035926917604, 2.161595836874201], "accuracy": [0.08942015469074249, 0.09021265059709549, 0.09813763201236725, 0.10091137140989304, 0.10381719470024109, 0.1072513535618782, 0.10487385839223862, 0.11187426000833511, 0.11134592443704605, 0.11728965491056442, 0.12032756209373474, 0.12191256135702133, 0.1274600476026535, 0.12481838464736938, 0.13380002975463867, 0.12798838317394257, 0.13274335861206055, 0.13353586196899414, 0.14370624721050262, 0.14251750707626343, 0.13974376022815704, 0.15678246319293976, 0.1516312211751938, 0.15691454708576202, 0.15863162279129028, 0.15876370668411255, 0.17210407555103302, 0.17117950320243835, 0.17276449501514435, 0.18134988844394684, 0.17884030938148499, 0.1728965789079666, 0.18174614012241364, 0.1912561058998108, 0.1935015171766281, 0.19957733154296875, 0.19521859288215637, 0.19455818831920624, 0.2020869106054306, 0.20644564926624298, 0.20776647329330444, 0.21120063960552216, 0.21238937973976135, 0.22533351182937622, 0.22044643759727478, 0.21212521195411682, 0.23154141008853912, 0.21833311021327972, 0.2296922504901886, 0.2312772423028946, 0.22797517478466034, 0.23801347613334656, 0.24342887103557587, 0.24382512271404266, 0.24937260150909424, 0.25161802768707275, 0.25478801131248474, 0.25703340768814087, 0.25478801131248474, 0.2514859437942505, 0.2596750855445862, 0.26218464970588684, 0.26363757252693176, 0.2616563141345978, 0.2666754722595215, 0.27684587240219116, 0.26958128809928894, 0.27301543951034546, 0.2735437750816345, 0.2814687490463257, 0.2843745946884155, 0.28661999106407166, 0.2864879071712494, 0.2917712330818176, 0.2985074520111084, 0.29203540086746216, 0.3016774654388428, 0.3007528781890869, 0.29903578758239746, 0.3063003420829773, 0.3086778521537781, 0.3160744905471802, 0.3241315484046936, 0.31264033913612366, 0.3171311616897583, 0.30418702960014343, 0.32082948088645935, 0.32281073927879333, 0.32479196786880493, 0.3263769745826721, 0.33364152908325195, 0.33086779713630676, 0.3343019485473633, 0.3315281867980957, 0.328490287065506, 0.3354906737804413, 0.33786818385124207, 0.34024566411972046, 0.3420948386192322, 0.3439439833164215], "val_loss": [1.9699560574122839, 1.9689301082066126, 1.9679131507873535, 1.9668963296072823, 1.965895448412214, 1.964891024998256, 1.9638897350856237, 1.9628969601222448, 1.9619039126804896, 1.9609149524143763, 1.9599261283874512, 1.958935124533517, 1.957944597516741, 1.9569531168256487, 1.9559591157095773, 1.954958438873291, 1.9539527893066406, 1.9529643739972795, 1.9519710540771484, 1.9509658132280623, 1.949965340750558, 1.9489549228123255, 1.9479542459760393, 1.9469490051269531, 1.9459308896745955, 1.9449182919093542, 1.9439009938921248, 1.9428726605006628, 1.941840512411935, 1.9408055714198522, 1.9397648402622767, 1.9387239728655135, 1.9376847403390067, 1.9366381508963448, 1.9355772563389368, 1.9345009667532784, 1.9334240640912737, 1.9323537009102958, 1.931276730128697, 1.9301698548453194, 1.9290589605058943, 1.9279512677873885, 1.9268292699541365, 1.92569214957101, 1.924551282610212, 1.9234090532575334, 1.9222508839198522, 1.9210917609078544, 1.9199062074933733, 1.9187185423714774, 1.917520591190883, 1.9163123539515905, 1.9150677408490862, 1.9138266699654716, 1.9125776972089494, 1.911308833530971, 1.9100311824253626, 1.9087505340576172, 1.9074551718575614, 1.906144278390067, 1.9048147201538086, 1.903467791421073, 1.9021169798714774, 1.900749955858503, 1.89937652860369, 1.8979693821498327, 1.8965610776628767, 1.8951445307050432, 1.8936868395124162, 1.892202377319336, 1.8907232965741838, 1.8892113140651159, 1.887678759438651, 1.886131422860282, 1.8845649446759904, 1.8829921994890486, 1.8813845770699638, 1.879744529724121, 1.8780817985534668, 1.8764052391052246, 1.8746974127633231, 1.8729918343680245, 1.8712504250662667, 1.86950717653547, 1.867713383265904, 1.8659209523882185, 1.8640828813825334, 1.8622540746416365, 1.860379695892334, 1.8584767750331335, 1.856534140450614, 1.8545660291399275, 1.8525769369942802, 1.8505711555480957, 1.8485402379717146, 1.8464984893798828, 1.8444044249398368, 1.842285428728376, 1.8401519911629813, 1.8379951204572404], "val_accuracy": [0.0403333343565464, 0.04766666516661644, 0.056333333253860474, 0.06333333253860474, 0.07100000232458115, 0.08033332973718643, 0.09099999815225601, 0.09966666996479034, 0.11166666448116302, 0.12266666442155838, 0.12933333218097687, 0.13866665959358215, 0.14633333683013916, 0.15399999916553497, 0.16300000250339508, 0.17399999499320984, 0.18299999833106995, 0.1913333386182785, 0.20266667008399963, 0.21033333241939545, 0.21766667068004608, 0.22699999809265137, 0.23499999940395355, 0.24266666173934937, 0.25, 0.25699999928474426, 0.26366665959358215, 0.27266666293144226, 0.2786666750907898, 0.28333333134651184, 0.28999999165534973, 0.29366666078567505, 0.296999990940094, 0.3036666810512543, 0.3073333203792572, 0.31299999356269836, 0.3173333406448364, 0.32199999690055847, 0.32633334398269653, 0.3306666612625122, 0.3336666524410248, 0.33766666054725647, 0.34166666865348816, 0.34566667675971985, 0.3473333418369293, 0.35100001096725464, 0.3529999852180481, 0.3569999933242798, 0.3583333194255829, 0.36033332347869873, 0.3623333275318146, 0.36533331871032715, 0.36500000953674316, 0.36633333563804626, 0.3700000047683716, 0.37166666984558105, 0.3733333349227905, 0.3763333261013031, 0.3779999911785126, 0.37966665625572205, 0.3813333213329315, 0.38100001215934753, 0.38366666436195374, 0.38600000739097595, 0.3880000114440918, 0.39100000262260437, 0.39266666769981384, 0.39399999380111694, 0.39533331990242004, 0.3986666798591614, 0.4013333320617676, 0.40299999713897705, 0.40400001406669617, 0.4050000011920929, 0.40700000524520874, 0.40933331847190857, 0.4113333225250244, 0.41200000047683716, 0.41333332657814026, 0.4143333435058594, 0.4153333306312561, 0.4176666736602783, 0.4189999997615814, 0.4193333387374878, 0.42133334279060364, 0.42399999499320984, 0.42533332109451294, 0.4273333251476288, 0.43033334612846375, 0.43166667222976685, 0.4320000112056732, 0.4336666762828827, 0.43533334136009216, 0.437666654586792, 0.4390000104904175, 0.4399999976158142, 0.4440000057220459, 0.44466665387153625, 0.44600000977516174, 0.4483333230018616]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [11, 49, 44, 92]], "fitness": -0.43514284491539, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3008854433278114, 2.3029328812508614, 2.297407521831204, 2.2986565965151886, 2.2979715103486495, 2.2965905664461856, 2.2971321028678044, 2.2967559759091896, 2.2958059394364314, 2.2936076841428688, 2.2914208281923516, 2.2921410418772314, 2.290236821594712, 2.2913330409347643, 2.2877027993472403, 2.2893041114230215, 2.2869208926270272, 2.2869723510465065, 2.28641678984328, 2.283987452372615, 2.2855921085752184, 2.282613980724449, 2.2831628557524395, 2.282067105534243, 2.2806902193768055, 2.279899008159766, 2.2768286587681517, 2.277948480539822, 2.2765634445356198, 2.27531653530074, 2.2746299328726547, 2.2753561385760235, 2.2735773094609555, 2.273312537205013, 2.271648004369619, 2.2697336675626034, 2.2709834576597805, 2.270374269753777, 2.268175557714333, 2.266264587959609, 2.2653491583010306, 2.265446730356616, 2.2642034413933896, 2.2616508948946232, 2.262365225645939, 2.2630487779789377, 2.259158622886306, 2.261059033037759, 2.258733285243375, 2.258432123781022, 2.2568237759166028, 2.256352422291246, 2.254372788426615, 2.2532034466342528, 2.252257383510563, 2.2507202971361067, 2.2505420405614993, 2.2486573792310076, 2.248541060408518, 2.2480677241079876, 2.246233325891995, 2.2450834539635403, 2.2457505266002897, 2.2442070726453354, 2.2444064743121097, 2.242146929824168, 2.2412710404273244, 2.2401570238063773, 2.238458431628339, 2.2362696023239925, 2.235857956130129, 2.2347342263217835, 2.2340563123315285, 2.2318786763244254, 2.2312310354474385, 2.2313351932848606, 2.2284150848834585, 2.2278266238057776, 2.2260329481192143, 2.224413513397229, 2.2231628762543587, 2.2204185721581684, 2.220644744033622, 2.2214257002916034, 2.2189593489899724, 2.218062720766724, 2.2148394867445202, 2.2171352491276752, 2.2137047124025515, 2.2121386549114126, 2.2094891545574473, 2.2095805818315637, 2.2083194822037555, 2.2065586844738907, 2.205015960418002, 2.2047889950945865, 2.2032296919252707, 2.199704977121682, 2.201358465454944, 2.198803778164548], "accuracy": [0.08915598690509796, 0.08955223858356476, 0.09694888442754745, 0.09972262382507324, 0.10170386731624603, 0.10460969805717468, 0.10170386731624603, 0.108440101146698, 0.10817593336105347, 0.11108175665140152, 0.11662924289703369, 0.11570466309785843, 0.12257297337055206, 0.11728965491056442, 0.12389380484819412, 0.12059172987937927, 0.12257297337055206, 0.12429005652666092, 0.1302337795495987, 0.13261127471923828, 0.13010171055793762, 0.14449875056743622, 0.14132875204086304, 0.14463083446025848, 0.1450270712375641, 0.14634791016578674, 0.15902787446975708, 0.15321621298789978, 0.15519747138023376, 0.1632545292377472, 0.16312244534492493, 0.15414080023765564, 0.16431118547916412, 0.1728965789079666, 0.17474573850631714, 0.18095363676548004, 0.17672698199748993, 0.1710474193096161, 0.18134988844394684, 0.18518029153347015, 0.18835029006004333, 0.1884823739528656, 0.18478403985500336, 0.20235107839107513, 0.19733192026615143, 0.19099193811416626, 0.20684190094470978, 0.19574692845344543, 0.2040681540966034, 0.20512482523918152, 0.20420023798942566, 0.21384228765964508, 0.21754062175750732, 0.218465194106102, 0.21965394914150238, 0.22295601665973663, 0.22559767961502075, 0.22691850364208221, 0.22718267142772675, 0.22255976498126984, 0.23365473747253418, 0.23405098915100098, 0.23616431653499603, 0.23523972928524017, 0.23563598096370697, 0.24356095492839813, 0.24224013090133667, 0.24303261935710907, 0.24263638257980347, 0.24924051761627197, 0.25518426299095154, 0.2546559274196625, 0.2530709207057953, 0.26059964299201965, 0.26324132084846497, 0.25782591104507446, 0.26826047897338867, 0.2705058753490448, 0.2661471366882324, 0.2731475234031677, 0.2728833854198456, 0.28041210770606995, 0.29084664583206177, 0.27763834595680237, 0.284110426902771, 0.2744683623313904, 0.2895258367061615, 0.2875445783138275, 0.29362040758132935, 0.29137498140335083, 0.2977149784564972, 0.2975828945636749, 0.2957337200641632, 0.3000924587249756, 0.29705455899238586, 0.29599788784980774, 0.29718664288520813, 0.3078853487968445, 0.3085457682609558, 0.3065645098686218], "val_loss": [1.9701436587742396, 1.9693046297345842, 1.9684723445347376, 1.9676405361720495, 1.9668201037815638, 1.9659970147269112, 1.9651768548148019, 1.9643637112208776, 1.963550022670201, 1.9627397400992257, 1.961928367614746, 1.9611189705984933, 1.9603102547781808, 1.9595002446855818, 1.9586880547659737, 1.957871573311942, 1.9570510046822684, 1.956244741167341, 1.9554360934666224, 1.9546181133815221, 1.9538050379071916, 1.9529833112444197, 1.9521708488464355, 1.95135532106672, 1.9505322320120675, 1.9497135026114327, 1.948894432612828, 1.9480695043291365, 1.947244576045445, 1.946417944771903, 1.9455883843558175, 1.9447588239397322, 1.9439331463405065, 1.9431016104561942, 1.9422609465462821, 1.9414121764046806, 1.9405621801103865, 1.9397192001342773, 1.938875947679792, 1.938014234815325, 1.937150546482631, 1.9362917627607072, 1.935422079903739, 1.9345461981637138, 1.9336679322378976, 1.9327898025512695, 1.9319025448390417, 1.9310172625950404, 1.9301133837018694, 1.9292124339512415, 1.9283055577959334, 1.9273947307041712, 1.9264612879071916, 1.9255317960466658, 1.9245999881199427, 1.9236561911446708, 1.9227123260498047, 1.921764646257673, 1.920808928353446, 1.9198472159249442, 1.918877261025565, 1.9178979737418038, 1.9169201169695174, 1.9159349032810755, 1.9149445125034876, 1.9139345714024134, 1.912928581237793, 1.9119157791137695, 1.9108811106000627, 1.9098315920148576, 1.9087884085518974, 1.907721860068185, 1.9066433225359236, 1.9055615833827428, 1.9044701031276159, 1.9033761705671037, 1.9022625514439173, 1.9011330604553223, 1.8999904905046736, 1.898841108594622, 1.8976751055036272, 1.8965123040335519, 1.8953321320669991, 1.8941563197544642, 1.8929488999503, 1.8917431831359863, 1.8905138969421387, 1.8892908777509416, 1.88804715020316, 1.8867956570216589, 1.8855188914707728, 1.8842309543064661, 1.8829332760402135, 1.8816208839416504, 1.880302974155971, 1.8789759363446916, 1.8776217188153947, 1.876248495919364, 1.8748739106314523, 1.8734848839896066], "val_accuracy": [0.03966666758060455, 0.044333335012197495, 0.05133333429694176, 0.058666665107011795, 0.06433333456516266, 0.07100000232458115, 0.07633333653211594, 0.08500000089406967, 0.09300000220537186, 0.10100000351667404, 0.11133333295583725, 0.11999999731779099, 0.12666666507720947, 0.13300000131130219, 0.14100000262260437, 0.1469999998807907, 0.1536666601896286, 0.1613333374261856, 0.16699999570846558, 0.1770000010728836, 0.18400000035762787, 0.19200000166893005, 0.20033332705497742, 0.20766666531562805, 0.2133333384990692, 0.22066666185855865, 0.22699999809265137, 0.2329999953508377, 0.2396666705608368, 0.24666666984558105, 0.2516666650772095, 0.257666677236557, 0.2633333206176758, 0.2709999978542328, 0.2773333191871643, 0.28033334016799927, 0.28566667437553406, 0.29100000858306885, 0.29233333468437195, 0.29633334279060364, 0.3023333251476288, 0.3050000071525574, 0.3083333373069763, 0.312666654586792, 0.3166666626930237, 0.32100000977516174, 0.32499998807907104, 0.328000009059906, 0.33133333921432495, 0.3343333303928375, 0.3373333215713501, 0.3396666646003723, 0.34166666865348816, 0.3449999988079071, 0.34700000286102295, 0.34933334589004517, 0.3529999852180481, 0.35366666316986084, 0.35633334517478943, 0.3583333194255829, 0.36033332347869873, 0.36133334040641785, 0.36266666650772095, 0.3643333315849304, 0.3656666576862335, 0.3659999966621399, 0.367333322763443, 0.37066665291786194, 0.3720000088214874, 0.3733333349227905, 0.37566667795181274, 0.3773333430290222, 0.37833333015441895, 0.37966665625572205, 0.38066667318344116, 0.38199999928474426, 0.3816666603088379, 0.38333332538604736, 0.3856666684150696, 0.3880000114440918, 0.390666663646698, 0.3919999897480011, 0.3943333327770233, 0.39500001072883606, 0.39633333683013916, 0.39899998903274536, 0.3996666669845581, 0.4020000100135803, 0.4033333361148834, 0.4036666750907898, 0.4050000011920929, 0.4059999883174896, 0.40799999237060547, 0.41066667437553406, 0.4116666615009308, 0.41200000047683716, 0.41233333945274353, 0.41333332657814026, 0.414000004529953, 0.41499999165534973]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.15142856538295746, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 3, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.add(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3009897813569, 2.8354319083204107, 2.5255905839950024, 2.3538185420557176, 2.480027237084595, 2.3496331594182736], "accuracy": [0.27737417817115784, 0.10500594228506088, 0.10500594228506088, 0.09945846349000931, 0.10038304328918457, 0.10077928751707077], "val_loss": [3.0678361483982632, 2.0828238895961215, 2.0609701701572964, 2.023143700190953, 2.069242545536586, 2.033623831612723], "val_accuracy": [0.12733332812786102, 0.09866666793823242, 0.10100000351667404, 0.09866666793823242, 0.09799999743700027, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [84, 49, 44, 92]], "fitness": -0.12200000137090683, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 9, 5, 1, 3, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.pow(tf.math.add(grad, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [420267353274133.6, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12481838464736938, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.12166666984558105, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 0, 4, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 4, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [0, 2], [76], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 3, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 1, 2, 8, 4, 5, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 8, 3, 4, 1, 0, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 1, 1, 1, 2, 1, 0, 3], [83, 21, 66, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 19, 11, 8, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)), tf.math.square(grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, tf.math.sqrt(beta)), tf.math.multiply(alpha, tf.math.pow(tf.math.subtract(alpha, tf.math.negative(tf.math.negative(alpha))), tf.math.add(tf.math.square(tf.math.divide_no_nan(beta, alpha)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 3, 4, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [13, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 4, 6, 9, 4, 2, 9, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [76], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(grad, tf.math.add(beta, grad))))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 1, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [6, 8, 1, 3], [1, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.062475234270095825, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 2, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [4, 2], [76], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 0, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 4, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 3, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), tf.math.pow(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [93, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [92], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [70, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(beta)))), tf.math.add(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1252263412.5365596, 24039782137.33879, 108950525633.61458, 307233817432.96265, 655633149745.8745, 1214004408280.506], "accuracy": [0.09959053993225098, 0.09470347315073013, 0.10500594228506088, 0.10236428678035736, 0.09813763201236725, 0.09959053993225098], "val_loss": [4725480594.285714, 37792547986.28571, 127537114550.85715, 302297410998.8571, 590405753709.7142, 1020198574957.7142], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 0, 2, 4, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 4, 0, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [48, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030749859039603, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 2, 2, 4, 1, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 0, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [86, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 2, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11649715900421143, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 5, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [4, 2], [36], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 0, 2, 3, 4, 5, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [72, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [12, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 9, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 4, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), beta)", "other_info": {"loss": [2.3012587540122293, 2.3042316291593936, 2.2996090178665405, 2.3017601195642614, 2.3019235244973175, 2.3014519027888327], "accuracy": [0.08836349099874496, 0.08651433140039444, 0.09192973375320435, 0.09259014576673508, 0.09192973375320435, 0.09298639744520187], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 2, 8, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 3, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012587540122293, 2.3042316291593936, 2.2996090178665405, 2.3017601195642614, 2.3019235244973175, 2.3014519027888327], "accuracy": [0.08836349099874496, 0.08651433140039444, 0.09192973375320435, 0.09259014576673508, 0.09192973375320435, 0.09298639744520187], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]