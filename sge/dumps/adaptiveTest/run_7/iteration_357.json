[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.10057667039877, 2.1218364963977407, 1.9436349430104383, 1.4441241211406843, 1.0717168488774584, 0.9344741177675415, 0.8011179487262152, 0.7773936953227817, 0.7092644592805892, 0.6608853899587053, 0.6572948856959018, 0.613997297807534, 0.6209848479524879, 0.5807505308235515, 0.5709382018487467, 0.5585913910227776, 0.5337658200942924, 0.5333686074355904, 0.5124403396105927, 0.4893440289299612, 0.503218738610923, 0.5140136702894267, 0.4710223228703747, 0.4580744110779], "accuracy": [0.3043191134929657, 0.2608638107776642, 0.3727380931377411, 0.4830273389816284, 0.5992603302001953, 0.6425835490226746, 0.7038700580596924, 0.6999075412750244, 0.7252674698829651, 0.7494386434555054, 0.7458723783493042, 0.7681944370269775, 0.765949010848999, 0.7816668748855591, 0.78113853931427, 0.7864218950271606, 0.7991018295288086, 0.8050455451011658, 0.8087438941001892, 0.8189142942428589, 0.8087438941001892, 0.8054417967796326, 0.8272355198860168, 0.8309338092803955], "val_loss": [1.4743459565298898, 1.3867079871041434, 1.5898396968841553, 0.9913401263100761, 0.6960948365075248, 0.7005740233830043, 0.6018253224236625, 0.5303447076252529, 0.5304065942764282, 0.6330944129398891, 0.5032455410276141, 0.45462991510118755, 0.47938476290021625, 0.43759814330509733, 0.4300898143223354, 0.40276232787540983, 0.44773175035204205, 0.3916840297835214, 0.38363521439688547, 0.3817668046270098, 0.42803085701806204, 0.4003309777804783, 0.3740092601094927, 0.37895443609782625], "val_accuracy": [0.437333345413208, 0.4023333191871643, 0.4673333466053009, 0.5106666684150696, 0.6673333048820496, 0.6856666803359985, 0.6976666450500488, 0.7536666393280029, 0.7559999823570251, 0.7106666564941406, 0.765333354473114, 0.8043333292007446, 0.7743333578109741, 0.8033333420753479, 0.8080000281333923, 0.8240000009536743, 0.7886666655540466, 0.8276666402816772, 0.8366666436195374, 0.8336666822433472, 0.8053333163261414, 0.8213333487510681, 0.8356666564941406, 0.8330000042915344]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8108571171760559, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1008375027333708, 2.126155021971306, 1.965270271327722, 1.3639407328264415, 1.0478513660668352, 0.9343367533645358, 0.8797685549149282, 0.7534438695228646, 0.6985983830385708, 0.6571259298234521, 0.6456133185234745, 0.605884102853282, 0.6095158557740059, 0.5769150917949836, 0.5767372011382582, 0.5527943075844767, 0.5330705110895446, 0.5309149422634232, 0.5217259383677114, 0.4924722788686907, 0.4947030773102694, 0.5196623394691146, 0.46996204954380244, 0.45501403248604533, 0.4774557323015566, 0.45860714641434247, 0.44394007514512235, 0.4516844917140412, 0.43668387058136754, 0.41532038264995114, 0.42041730568188845, 0.41313347022814634, 0.4139867842339128, 0.4059005213640369, 0.3942818780105033, 0.39216134791770363, 0.3873713615548105, 0.39334095742299086, 0.3684565946135019, 0.3955320797269182, 0.3655097245099349], "accuracy": [0.3047153651714325, 0.25756174325942993, 0.36560559272766113, 0.5157839059829712, 0.6003170013427734, 0.658961832523346, 0.6837934255599976, 0.7074362635612488, 0.7290979027748108, 0.7518161535263062, 0.7534011602401733, 0.7684586048126221, 0.7684586048126221, 0.7823272943496704, 0.7815347909927368, 0.7906485199928284, 0.7979130744934082, 0.8004226684570312, 0.8057059645652771, 0.8164047002792358, 0.8137630224227905, 0.8058380484580994, 0.8260467648506165, 0.837537944316864, 0.8181217908859253, 0.8310658931732178, 0.8355567455291748, 0.822348415851593, 0.8376700282096863, 0.8495575189590454, 0.8433496356010437, 0.8437458872795105, 0.8436138033866882, 0.8481045961380005, 0.8553691506385803, 0.8594637513160706, 0.8507462739944458, 0.8498216867446899, 0.8602562546730042, 0.8536521196365356, 0.8660678863525391], "val_loss": [1.4764834812709264, 1.3721937452043806, 1.4403839451926095, 0.8035082817077637, 0.9105206898280552, 0.7467003209250314, 0.6069289105279105, 0.5302021333149501, 0.5210193225315639, 0.5946520056043353, 0.48196288517543245, 0.49183923857552664, 0.49075707367488314, 0.42483786174229216, 0.416381231376103, 0.4063270517757961, 0.42882135084697176, 0.40353006975991385, 0.3858770557812282, 0.3818872996738979, 0.43227754320417133, 0.3959771990776062, 0.37444283281053814, 0.3686860203742981, 0.36994543245860506, 0.37088732208524433, 0.3774045280047825, 0.3644841398511614, 0.3542579582759312, 0.353534928389958, 0.35448968410491943, 0.34225701434271677, 0.34412905999592375, 0.3297489285469055, 0.38935151270457674, 0.320595451763698, 0.35016839844839914, 0.3559503810746329, 0.3340649264199393, 0.31957852840423584, 0.37577121598379953], "val_accuracy": [0.43966665863990784, 0.4663333296775818, 0.4333333373069763, 0.6366666555404663, 0.6236666440963745, 0.675000011920929, 0.6913333535194397, 0.7590000033378601, 0.7616666555404663, 0.7283333539962769, 0.7743333578109741, 0.7699999809265137, 0.765333354473114, 0.8043333292007446, 0.8190000057220459, 0.8259999752044678, 0.7956666946411133, 0.8220000267028809, 0.8363333344459534, 0.8343333601951599, 0.8069999814033508, 0.8266666531562805, 0.8370000123977661, 0.8410000205039978, 0.8483333587646484, 0.8399999737739563, 0.8289999961853027, 0.843666672706604, 0.8500000238418579, 0.8473333120346069, 0.8460000157356262, 0.8516666889190674, 0.8496666550636292, 0.862666666507721, 0.8349999785423279, 0.8669999837875366, 0.8429999947547913, 0.8410000205039978, 0.8629999756813049, 0.8640000224113464, 0.8353333473205566]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8102856874465942, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1005520598920833, 2.121354135713085, 1.9300050436781224, 1.531335559078353, 1.1812396848741822, 0.9779065016112418, 0.8044164740744835, 0.7603440196160486, 0.6984181395217554, 0.6603166259527049, 0.6566082592401616, 0.6091920051277432, 0.5950952470420673, 0.5875487723732826, 0.5610300926657684, 0.5425673233928965, 0.5472571281173745, 0.5280536879181248, 0.5185017255019865, 0.49325946800429443, 0.4875946743196075, 0.48941127261733175, 0.47806117361358064, 0.46107161600103846, 0.46919457141465953, 0.45113490038717335, 0.44311644029245717, 0.46302516939712157, 0.42440884000888796, 0.4213071121334667], "accuracy": [0.3043191134929657, 0.2615242302417755, 0.37300223112106323, 0.4776119291782379, 0.5727116465568542, 0.6369040012359619, 0.696209192276001, 0.7057191729545593, 0.7297582626342773, 0.7512878179550171, 0.7539294958114624, 0.7692511081695557, 0.7700436115264893, 0.778232753276825, 0.7885351777076721, 0.7996301651000977, 0.7926297783851624, 0.8050455451011658, 0.8055738806724548, 0.8190463781356812, 0.8166688680648804, 0.8128384351730347, 0.821820080280304, 0.8294808864593506, 0.8219521641731262, 0.8319904804229736, 0.834632158279419, 0.8228767514228821, 0.8453308939933777, 0.843481719493866], "val_loss": [1.4752605983189173, 1.3993000984191895, 1.4410385063716344, 0.7996600696018764, 0.8961999756949288, 0.6371816567012242, 0.5733485221862793, 0.5287387541362217, 0.5474988222122192, 0.6214619874954224, 0.4838298388889858, 0.49606478214263916, 0.5152707610811506, 0.431493946484157, 0.4353239962032863, 0.4116383705820356, 0.4069032073020935, 0.39139412130628315, 0.39047660146440777, 0.38323389632361277, 0.3658694199153355, 0.3999007088797433, 0.3766129527773176, 0.4072659696851458, 0.3555763193539211, 0.36666334526879446, 0.40848928689956665, 0.36707461731774466, 0.34596018280301777, 0.3595336249896458], "val_accuracy": [0.437666654586792, 0.39800000190734863, 0.4593333303928375, 0.6140000224113464, 0.6223333477973938, 0.7006666660308838, 0.7390000224113464, 0.7540000081062317, 0.7400000095367432, 0.7353333234786987, 0.7749999761581421, 0.7689999938011169, 0.75, 0.8040000200271606, 0.7960000038146973, 0.8159999847412109, 0.8159999847412109, 0.8303333520889282, 0.8309999704360962, 0.8339999914169312, 0.8443333506584167, 0.8246666789054871, 0.8316666483879089, 0.8133333325386047, 0.8513333201408386, 0.8453333377838135, 0.8026666641235352, 0.8389999866485596, 0.8503333330154419, 0.8489999771118164]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 5, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [6, 8, 1, 3], [6, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8097142577171326, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1006773621446153, 2.1240693528370977, 1.9310016958484593, 1.4328054426022179, 1.0808863371685433, 0.9809544920889834, 0.8182236110891695, 0.7587531165219474, 0.7057993836831801, 0.6652275343470964, 0.6514892600877268, 0.6103178663906278, 0.6007985658476208, 0.5933493763590219, 0.5621215823288402, 0.5602041983475318, 0.5355871037689922, 0.5342899676106783, 0.5222747050271987, 0.4938259642625828, 0.49397132945350447, 0.5002019037156136, 0.4749286382063867, 0.4621165560347104, 0.4755575651773577, 0.45493506309835274, 0.4287160016117063, 0.4686143304520374, 0.4178144659317086, 0.4402494386887553, 0.41038142857755006, 0.4118167581283941, 0.40541505353042334, 0.401036187465149, 0.3965367179198146, 0.3884771920159004, 0.3769454778445285, 0.4007190429948624, 0.36484622436901204, 0.38765426802991043, 0.37421243978198554], "accuracy": [0.3043191134929657, 0.2608638107776642, 0.3731343150138855, 0.4962356388568878, 0.590278685092926, 0.6296393871307373, 0.6975300312042236, 0.7049266695976257, 0.7273808121681213, 0.7465327978134155, 0.7503632307052612, 0.767930269241333, 0.7705719470977783, 0.7763835787773132, 0.7828556299209595, 0.7881389260292053, 0.7955356240272522, 0.7998943328857422, 0.8025360107421875, 0.8140271902084351, 0.8149517774581909, 0.8123101592063904, 0.8239334225654602, 0.8271034359931946, 0.8215559124946594, 0.8339717388153076, 0.8417646288871765, 0.8185180425643921, 0.8492933511734009, 0.8363492488861084, 0.8486329317092896, 0.8413683772087097, 0.847840428352356, 0.8477083444595337, 0.8539162874221802, 0.8585391640663147, 0.8565579056739807, 0.8494254350662231, 0.8632941246032715, 0.8553691506385803, 0.8610487580299377], "val_loss": [1.4762089593069894, 1.3821184975760323, 1.175238813672747, 0.9309769357953753, 0.8548998151506696, 0.6997109310967582, 0.6089111907141549, 0.5320374625069755, 0.5461034945079258, 0.5855415037700108, 0.4872290406908308, 0.456743632044111, 0.49112941537584576, 0.4706014394760132, 0.4370610203061785, 0.4114580920764378, 0.43217103821890696, 0.40728447266987394, 0.3927559767450605, 0.4192150831222534, 0.407877436705998, 0.3961957948548453, 0.3764453615461077, 0.41351252794265747, 0.35963852064950125, 0.372860312461853, 0.4069324050630842, 0.3557949321610587, 0.38409818921770367, 0.3580236860683986, 0.3647750530924116, 0.3382358806473868, 0.3429700221334185, 0.32780384165900095, 0.38055555309568134, 0.3174519453729902, 0.3796659622873579, 0.3500028508050101, 0.34061700105667114, 0.3186589649745396, 0.37609646150044035], "val_accuracy": [0.43799999356269836, 0.4180000126361847, 0.5789999961853027, 0.5419999957084656, 0.6176666617393494, 0.7006666660308838, 0.7076666951179504, 0.753333330154419, 0.7406666874885559, 0.7519999742507935, 0.7696666717529297, 0.8026666641235352, 0.7703333497047424, 0.7789999842643738, 0.8073333501815796, 0.828000009059906, 0.7990000247955322, 0.8169999718666077, 0.8299999833106995, 0.8096666932106018, 0.8193333148956299, 0.8263333439826965, 0.8326666951179504, 0.8083333373069763, 0.8476666808128357, 0.8416666388511658, 0.812666654586792, 0.8503333330154419, 0.8289999961853027, 0.8420000076293945, 0.8450000286102295, 0.859333336353302, 0.8529999852180481, 0.8586666584014893, 0.8403333425521851, 0.8696666955947876, 0.8289999961853027, 0.8416666388511658, 0.8486666679382324, 0.8636666536331177, 0.8333333134651184]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 0, 2, 5, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 4, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8082857131958008, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(tf.math.square(alpha), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.100599988371925, 2.1280929300023295, 1.9140019937513244, 1.4557149031410725, 1.2147759500511601, 0.9266421268991176, 0.827449253789186, 0.8076994031443335, 0.7031776840188295, 0.6671599631359265, 0.6468711244179792, 0.6455074996917382, 0.6101638669618731, 0.5823956119023798, 0.5635283693126039, 0.5616833975664329, 0.5303468338612788, 0.5305677837841168, 0.5254430351413519, 0.5021320242277777, 0.49652499348621926, 0.49550547379434007, 0.4866533669238518, 0.464338944474263, 0.4641068058676172, 0.45844319985133625, 0.4376823488259281, 0.4685896433237411, 0.4355667877852279, 0.41302882051266354, 0.4226169153140631, 0.41677560174564376, 0.4145252695999692, 0.4084769835278122, 0.389148312052873, 0.4082026827478642, 0.36906967653479983, 0.4114963906064183, 0.3863204443427975, 0.3810654543236876, 0.36716282033114117, 0.4006724205582039, 0.36291245288931384, 0.36601336809937285], "accuracy": [0.3043191134929657, 0.2591467499732971, 0.37485140562057495, 0.49993395805358887, 0.5596354603767395, 0.6568484902381897, 0.6963412761688232, 0.6972658634185791, 0.7296261787414551, 0.7526086568832397, 0.7539294958114624, 0.7585523724555969, 0.7671377658843994, 0.7788931727409363, 0.7858935594558716, 0.7885351777076721, 0.800290584564209, 0.8063663840293884, 0.8026680946350098, 0.8121780753135681, 0.8152159452438354, 0.816008448600769, 0.8166688680648804, 0.8272355198860168, 0.8253863453865051, 0.8286884427070618, 0.8366134166717529, 0.8206313848495483, 0.837141752243042, 0.8446704745292664, 0.8407079577445984, 0.8426892161369324, 0.8479725122451782, 0.8518029451370239, 0.8609166741371155, 0.8510104417800903, 0.8625016212463379, 0.8461233377456665, 0.8508783578872681, 0.858671247959137, 0.867520809173584, 0.8481045961380005, 0.8656716346740723, 0.8644828796386719], "val_loss": [1.475943156651088, 1.3836852141789027, 1.081291811806815, 1.2108440058571952, 0.8677953651973179, 0.6579241241727557, 0.6286686829158238, 0.533480133329119, 0.5673787082944598, 0.604555436543056, 0.4986610582896641, 0.4592972142355783, 0.4834362098148891, 0.48783326148986816, 0.4263119101524353, 0.4040997794696263, 0.43919226101466585, 0.4119328430720738, 0.39313281433922903, 0.4023797597203936, 0.399058929511479, 0.4097722513335092, 0.3753780892917088, 0.36666228090013775, 0.3702928253582546, 0.3690455215317862, 0.41730194432394846, 0.3800592933382307, 0.35953024455479216, 0.35766383579799105, 0.35643064975738525, 0.34165563753673006, 0.3567554439817156, 0.331796612058367, 0.34862024443490164, 0.3261122873851231, 0.3505601372037615, 0.35189283745629446, 0.32539584806987215, 0.3299412216459002, 0.4052537594522749, 0.3330103073801313, 0.33145523922783987, 0.3313785876546587], "val_accuracy": [0.44066667556762695, 0.44733333587646484, 0.565666675567627, 0.4973333477973938, 0.6293333172798157, 0.7046666741371155, 0.6776666641235352, 0.7516666650772095, 0.7409999966621399, 0.731333315372467, 0.765999972820282, 0.7883333563804626, 0.7716666460037231, 0.7643333077430725, 0.8066666722297668, 0.8216666579246521, 0.7950000166893005, 0.8209999799728394, 0.8296666741371155, 0.824999988079071, 0.8226666450500488, 0.8253333568572998, 0.8333333134651184, 0.8399999737739563, 0.8446666598320007, 0.8450000286102295, 0.7943333387374878, 0.831333339214325, 0.8453333377838135, 0.8460000157356262, 0.847000002861023, 0.8546666502952576, 0.847000002861023, 0.8603333234786987, 0.8503333330154419, 0.8643333315849304, 0.8513333201408386, 0.8426666855812073, 0.8669999837875366, 0.8560000061988831, 0.8213333487510681, 0.859333336353302, 0.859666645526886, 0.8586666584014893]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [72, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8074285984039307, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.pow(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1008254947159757, 2.1262164526233867, 1.9599816008424085, 1.4589961300657064, 1.101533701926521, 0.9497938395774659, 0.8653463463048894, 0.7656024966603966, 0.722743594281158, 0.6644509419348136, 0.6659200055850196, 0.6338749585087431, 0.6159387397381922, 0.581784793571978, 0.5752602562597635, 0.5577205327744056, 0.5330278201267593, 0.5560455511762891, 0.5183809480064376, 0.49491369316464856, 0.49408454272126984, 0.5083482004372419, 0.4817394902205124, 0.45426939326097243, 0.4778572305153232, 0.45945677978802574, 0.43988057343148285, 0.45525407886398056, 0.43041605228887114, 0.40899965737820493, 0.4352861151262565, 0.4208315902453183, 0.4124257938736828, 0.4161442035870419, 0.3864011890726665, 0.38544067408603655, 0.3877006104365316, 0.3992151963539159, 0.3679607192428593, 0.39506506405376157, 0.3699544980195, 0.38068907607847186, 0.37085766422907596, 0.36162365044994504, 0.35098899737750344], "accuracy": [0.3047153651714325, 0.25941091775894165, 0.3671905994415283, 0.48408401012420654, 0.5857878923416138, 0.6428477168083191, 0.6873596906661987, 0.7028133869171143, 0.7195879220962524, 0.7485140562057495, 0.7481178045272827, 0.7581561207771301, 0.7630431652069092, 0.7807422876358032, 0.7816668748855591, 0.7872143983840942, 0.804649293422699, 0.7886672616004944, 0.8067626357078552, 0.8131026029586792, 0.8148196935653687, 0.8131026029586792, 0.8210275769233704, 0.8334434032440186, 0.8203672170639038, 0.8318583965301514, 0.8322546482086182, 0.8241975903511047, 0.8408400416374207, 0.8490291833877563, 0.8407079577445984, 0.8399154543876648, 0.8436138033866882, 0.846387505531311, 0.8581429123878479, 0.8564258217811584, 0.852859616279602, 0.8487650156021118, 0.8628978729248047, 0.8485008478164673, 0.8663320541381836, 0.854708731174469, 0.8594637513160706, 0.8656716346740723, 0.8660678863525391], "val_loss": [1.4756230967385429, 1.3773542472294398, 1.514141627720424, 0.8542412519454956, 0.7073662451335362, 0.6803663287843976, 0.5704932894025531, 0.5461845908846173, 0.5577660288129535, 0.6118266412190029, 0.5840072972433907, 0.47605981145586285, 0.48675315720694406, 0.46141607420785086, 0.4292675256729126, 0.4052245957510812, 0.39742610284260343, 0.3920230269432068, 0.3825557657650539, 0.43084350654057096, 0.4176508869443621, 0.39742902347019743, 0.36874172517231535, 0.4214093429701669, 0.3657356245177133, 0.36695341553006855, 0.3857047302382333, 0.37235614231654574, 0.3494876282555716, 0.3516860178538731, 0.36270594596862793, 0.34239089488983154, 0.34288644790649414, 0.3568041665213449, 0.34267382110868183, 0.32915795700890677, 0.3697117141314915, 0.36014539854867117, 0.34062754256384714, 0.32981739725385395, 0.3612269333430699, 0.3437177198273795, 0.3334968771253313, 0.32287117413112093, 0.34201940468379427], "val_accuracy": [0.44066667556762695, 0.45366665720939636, 0.42266666889190674, 0.6489999890327454, 0.6786666512489319, 0.6956666707992554, 0.7450000047683716, 0.7546666860580444, 0.7459999918937683, 0.734000027179718, 0.6940000057220459, 0.7756666541099548, 0.7713333368301392, 0.7823333144187927, 0.8043333292007446, 0.8273333311080933, 0.8230000138282776, 0.8246666789054871, 0.8353333473205566, 0.8073333501815796, 0.8109999895095825, 0.8256666660308838, 0.8403333425521851, 0.809333324432373, 0.8476666808128357, 0.843999981880188, 0.8169999718666077, 0.8349999785423279, 0.8516666889190674, 0.8506666421890259, 0.843999981880188, 0.856333315372467, 0.8500000238418579, 0.8463333249092102, 0.8560000061988831, 0.8586666584014893, 0.8396666646003723, 0.8413333296775818, 0.8516666889190674, 0.8610000014305115, 0.8450000286102295, 0.8500000238418579, 0.8573333621025085, 0.8586666584014893, 0.8516666889190674]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.806857168674469, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.100704529108766, 2.1239413225324855, 1.954701003428731, 1.415011105536155, 1.1191393301203865, 0.9474295520858049, 0.8615724520833816, 0.7700920383203709, 0.708714597748885, 0.6694976785447163, 0.6634312783328691, 0.6146112494874293, 0.6069548120430637, 0.6130429338297241, 0.5774157595373085, 0.5579760840949665, 0.5444770954414492, 0.5413909376872104, 0.523716878196614, 0.49760623237066703, 0.49390144195255586, 0.522423222292967, 0.48314595316158954, 0.46275587384065603, 0.4792218545778726, 0.4517138380227135, 0.44392045475016056, 0.45311719339364054, 0.426027411148454, 0.4306650427802994, 0.41697269069158077, 0.4238662109272969, 0.4171266277602257, 0.40648665248741483, 0.39153959177283876, 0.4025676731798139, 0.37096680517540537, 0.41552986898410904, 0.3766108043811671], "accuracy": [0.3047153651714325, 0.2599392533302307, 0.36903974413871765, 0.4947827160358429, 0.5694096088409424, 0.6421872973442078, 0.6736230254173279, 0.700700044631958, 0.7224937081336975, 0.7446836829185486, 0.750759482383728, 0.7658169269561768, 0.7681944370269775, 0.7696473598480225, 0.7784969210624695, 0.7903843522071838, 0.7915731072425842, 0.8013472557067871, 0.8000264167785645, 0.8113855719566345, 0.8168009519577026, 0.8021397590637207, 0.8230088353157043, 0.8297450542449951, 0.8165367841720581, 0.8327829837799072, 0.837141752243042, 0.8296129703521729, 0.8426892161369324, 0.8360850811004639, 0.8466516733169556, 0.837141752243042, 0.8449346423149109, 0.8524633646011353, 0.8553691506385803, 0.8537842035293579, 0.8627657890319824, 0.8429533839225769, 0.8585391640663147], "val_loss": [1.4744722161974226, 1.3874058723449707, 1.421553305217198, 0.8962200369153704, 0.7619154282978603, 0.706385680607387, 0.6003249713352748, 0.5445926359721592, 0.5542244229997907, 0.6017476831163678, 0.48113090651375906, 0.4866690976279123, 0.503552964755467, 0.49239437920706614, 0.4402452962739127, 0.42015908445630756, 0.43795660563877653, 0.40592373268944876, 0.3843569755554199, 0.378602887902941, 0.4597517592566354, 0.38867253065109253, 0.38462737628391813, 0.40399000474384855, 0.3607853480747768, 0.38055722202573505, 0.37790909835270475, 0.3589866076196943, 0.35120896782193867, 0.3464933122907366, 0.3637014627456665, 0.33948573895863127, 0.34109521763665335, 0.3247462340763637, 0.34347552912575857, 0.3284113918031965, 0.35078896795000347, 0.3698454669543675, 0.3487294486590794], "val_accuracy": [0.4399999976158142, 0.41999998688697815, 0.4346666634082794, 0.5586666464805603, 0.6423333287239075, 0.6733333468437195, 0.722000002861023, 0.749666690826416, 0.7426666617393494, 0.7393333315849304, 0.7773333191871643, 0.7760000228881836, 0.7590000033378601, 0.7603333592414856, 0.8063333630561829, 0.8153333067893982, 0.7929999828338623, 0.8253333568572998, 0.8336666822433472, 0.8370000123977661, 0.7856666445732117, 0.8266666531562805, 0.82833331823349, 0.8149999976158142, 0.8500000238418579, 0.8433333039283752, 0.8246666789054871, 0.846666693687439, 0.8456666469573975, 0.8550000190734863, 0.840666651725769, 0.8576666712760925, 0.8546666502952576, 0.8653333187103271, 0.8533333539962769, 0.862333357334137, 0.8519999980926514, 0.8320000171661377, 0.8516666889190674]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 7, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1226088664.6567318, 23785909261.931053, 109777926222.71721, 308454959052.3334, 656313415209.0493, 1215269152703.349], "accuracy": [0.09351472556591034, 0.09879804402589798, 0.09628847241401672, 0.09840179979801178, 0.1010434553027153, 0.10051512718200684], "val_loss": [4720882834.285714, 37755801014.85714, 127412530614.85715, 302001104018.2857, 589834953874.2858, 1019211602797.7142], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [96, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 20, 12, 8, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.pow(beta, tf.math.subtract(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08096684515476227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 4, 2, 2, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 2, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 20, 11, 9, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14780081808567047, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [34, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(tf.math.sqrt(alpha), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(alpha), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [78, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 4, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 5, 1, 0, 1, 0, 0, 0, 0, 20, 11, 9, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.math.pow(beta, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 1, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 4, 3, 2, 4, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 1, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.multiply(alpha, alpha), tf.math.add(beta, tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [54, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(alpha), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 9, 7, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [98, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [11.071821508280369, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13089419901371002, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2956.9425223214284, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [27, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [214.36196511797286, 3288.6628970356664, 14454.631076331561, 39858.257721177026, 83993.03812244089, 154609.41618924183], "accuracy": [0.09325055778026581, 0.09919429570436478, 0.09628847241401672, 0.09813763201236725, 0.10130762308835983, 0.10038304328918457], "val_loss": [705.971906389509, 5053.939732142857, 16576.75558035714, 38788.859375, 75206.73214285714, 129345.86607142857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 0, 9, 3, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [48, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [1, 49, 44, 92, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 3, 2, 1, 1, 0, 20, 12, 8, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.subtract(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), alpha))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(alpha, beta), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3766090236.54215, 36135390788.37036, 56304019741.92471, 72163429121.58922, 85295140214.24489, 92838985453.16603, 100861494095.22441], "accuracy": [0.09708096832036972, 0.10157178342342377, 0.10302469879388809, 0.09708096832036972, 0.09708096832036972, 0.10276053100824356, 0.1018359512090683], "val_loss": [13307116105.142857, 29662719414.857143, 39562792374.85714, 46729392713.14286, 52714614198.85714, 57788181942.85714, 62172432676.57143], "val_accuracy": [0.09600000083446503, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]