[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 8, 2, 3, 3, 6, 2, 2, 8, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8054285645484924, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9632908503581914, 1.3990376799601951, 1.079179149026081, 0.9133638806110674, 0.8103364965131868, 0.7452578237500441, 0.752768239962694, 0.7263924955707641, 0.6920162698123843, 0.6507751198020263, 0.6529356034959958, 0.6563376882655384, 0.6131018644956282, 0.6246714978059994, 0.6029500446819028, 0.5734698944765075, 0.585262442269676, 0.5669205474689762, 0.5737451750132165, 0.5429443743770244, 0.5383003857535393, 0.5321641710802486, 0.5313786782718936, 0.5020224085069525, 0.5059379468961178, 0.498738131180195, 0.48932653451009966, 0.4750131724131436, 0.4941438576446438, 0.48824368128136025, 0.46239671058753035, 0.45317104360005794, 0.4479375268844266, 0.45951477751645586, 0.43505509643506823, 0.4398365704697735, 0.4537251936391108], "accuracy": [0.34222692251205444, 0.5077268481254578, 0.6040153503417969, 0.6565843224525452, 0.6999075412750244, 0.7157574892044067, 0.7194558382034302, 0.7268524765968323, 0.7396644949913025, 0.7534011602401733, 0.7519482374191284, 0.7433628439903259, 0.7683265209197998, 0.761590301990509, 0.7725531458854675, 0.7808743715286255, 0.7774402499198914, 0.7858935594558716, 0.7833839654922485, 0.7968564033508301, 0.7987055778503418, 0.7950072884559631, 0.8017435073852539, 0.8131026029586792, 0.8117818236351013, 0.8197067975997925, 0.8152159452438354, 0.8227446675300598, 0.8173292875289917, 0.8161405324935913, 0.830669641494751, 0.8272355198860168, 0.8343679904937744, 0.8241975903511047, 0.8403117060661316, 0.8368775844573975, 0.8280280232429504], "val_loss": [1.5026063919067383, 0.8434526920318604, 0.742797681263515, 0.6189513717378888, 0.5762109415871757, 0.6004627432141986, 0.5433077812194824, 0.5561043194362095, 0.516667093549456, 0.5030578204563686, 0.48241797515324186, 0.48826042243412565, 0.4687877893447876, 0.5026353597640991, 0.4507181644439697, 0.4736576591219221, 0.47055091176714214, 0.4422955172402518, 0.42893924031938824, 0.47090792655944824, 0.4294469271387373, 0.45192010913576397, 0.43935229097093853, 0.4082120656967163, 0.4000849042619978, 0.37827629702431814, 0.3941935896873474, 0.3912996734891619, 0.37802172558648245, 0.3708904641015189, 0.36119429554258076, 0.35657742193767, 0.3603711298533848, 0.36632312195641653, 0.35842236450740267, 0.3624062623296465, 0.3614779795919146], "val_accuracy": [0.38600000739097595, 0.6430000066757202, 0.6850000023841858, 0.7200000286102295, 0.7506666779518127, 0.7429999709129333, 0.7609999775886536, 0.7493333220481873, 0.7706666588783264, 0.7716666460037231, 0.7876666784286499, 0.7929999828338623, 0.7976666688919067, 0.7643333077430725, 0.8023333549499512, 0.7879999876022339, 0.7786666750907898, 0.8069999814033508, 0.8133333325386047, 0.7736666798591614, 0.7996666431427002, 0.8006666898727417, 0.7950000166893005, 0.8153333067893982, 0.8220000267028809, 0.8366666436195374, 0.8193333148956299, 0.831333339214325, 0.8389999866485596, 0.8393333554267883, 0.8426666855812073, 0.8476666808128357, 0.8463333249092102, 0.8379999995231628, 0.8460000157356262, 0.8433333039283752, 0.8456666469573975]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 3, 7, 3, 0, 9, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8045714497566223, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9632909020664606, 1.3994859797434012, 1.0834679369598317, 0.9135986831934224, 0.8163684742042275, 0.7346311586407969, 0.745392097418791, 0.7290991274924121, 0.6913571780809022, 0.6553306113050252, 0.6513995145920041, 0.6542337131837198, 0.6167679673031006, 0.6203364502673514, 0.6101528371030691, 0.5738913977638983, 0.5771438001074796, 0.5702457516861944, 0.5737415112052154, 0.5430604262500628, 0.5423196550168854, 0.5325901849300413, 0.5273231211875046, 0.5028875080696139, 0.5054791873047113, 0.49535647333416216, 0.4859074371098181, 0.475502912004815, 0.4922460410982595, 0.48730414349247736, 0.4629722111544132, 0.46226513150770904, 0.4492096294737637, 0.46112601560388083, 0.43699185514194994, 0.4396705937549312, 0.4518164455922147, 0.4356655666518284, 0.4110098812542634, 0.42316804361963756, 0.4222317641248415, 0.4077167554325857, 0.41787628703318286], "accuracy": [0.34222692251205444, 0.5079910159111023, 0.6058644652366638, 0.6571126580238342, 0.696209192276001, 0.7205125093460083, 0.7226257920265198, 0.7243428826332092, 0.7397965788841248, 0.7516840696334839, 0.7559106945991516, 0.7442874312400818, 0.7666094303131104, 0.7614582180976868, 0.7707040309906006, 0.7821952104568481, 0.7803460359573364, 0.7857614755630493, 0.7820631265640259, 0.7951393723487854, 0.7980451583862305, 0.7952714562416077, 0.8042530417442322, 0.8120459914207458, 0.8117818236351013, 0.8182538747787476, 0.8182538747787476, 0.8255184292793274, 0.8162726163864136, 0.8149517774581909, 0.83119797706604, 0.8206313848495483, 0.832650899887085, 0.8247259259223938, 0.8400475382804871, 0.8358209133148193, 0.8294808864593506, 0.8364813327789307, 0.8477083444595337, 0.8422929644584656, 0.843481719493866, 0.847840428352356, 0.8451988101005554], "val_loss": [1.5026024409702845, 0.8423841340201241, 0.7327313082558768, 0.6332147632326398, 0.5906613043376377, 0.5928904499326434, 0.5660428489957537, 0.5441729511533465, 0.518005541392735, 0.503157241003854, 0.48437254769461496, 0.49341927255902973, 0.4748842035021101, 0.5131894179752895, 0.4564821549824306, 0.4857022591999599, 0.48047101497650146, 0.43321917738233295, 0.4319286857332502, 0.47767817974090576, 0.42865816184452604, 0.44208272865840365, 0.4424532651901245, 0.4078171764101301, 0.39882043429783415, 0.3801250968660627, 0.39764792578560965, 0.3968276722090585, 0.37738060099737986, 0.3730894923210144, 0.36130264827183317, 0.35876857382910593, 0.3565166251999991, 0.36368649346487864, 0.3616316659109933, 0.36067771911621094, 0.35798169885362896, 0.3439560447420393, 0.3494619131088257, 0.38256082364491056, 0.34392298119408743, 0.35798752307891846, 0.3555477261543274], "val_accuracy": [0.3863333463668823, 0.6413333415985107, 0.6819999814033508, 0.7133333086967468, 0.7476666569709778, 0.7400000095367432, 0.7456666827201843, 0.7609999775886536, 0.765666663646698, 0.7716666460037231, 0.7839999794960022, 0.7883333563804626, 0.7953333258628845, 0.7536666393280029, 0.8046666383743286, 0.7806666493415833, 0.7746666669845581, 0.8073333501815796, 0.8083333373069763, 0.7706666588783264, 0.8003333210945129, 0.8103333115577698, 0.7886666655540466, 0.8140000104904175, 0.8213333487510681, 0.8343333601951599, 0.8143333196640015, 0.8233333230018616, 0.8363333344459534, 0.8386666774749756, 0.8416666388511658, 0.847000002861023, 0.8473333120346069, 0.8413333296775818, 0.8456666469573975, 0.8446666598320007, 0.8483333587646484, 0.8566666841506958, 0.8456666469573975, 0.828000009059906, 0.8529999852180481, 0.8410000205039978, 0.8413333296775818]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 6, 7, 3, 0, 9, 2, 2, 8, 2, 5, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 3, 3, 3, 0, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 6, 92, 70, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7991428375244141, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 20, 12, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9632864245617663, 1.3988545465431572, 1.0795897566300687, 0.9156407327652607, 0.8108671246786097, 0.7376661424104013, 0.7532004350054581, 0.7255450386444277, 0.6962643949394417, 0.6487016679430997, 0.6519523373511111, 0.6565384555643954, 0.6179716729406101, 0.618529151010633, 0.602528256668375, 0.5743717023677924, 0.5859742901265708, 0.5700456646644145, 0.5722134505375076, 0.5449619842258978], "accuracy": [0.34222692251205444, 0.5085193514823914, 0.6041474342346191, 0.659490168094635, 0.6956809163093567, 0.719852089881897, 0.7176066637039185, 0.72672039270401, 0.7384757399559021, 0.7543256878852844, 0.7556465268135071, 0.743891179561615, 0.7648923397064209, 0.7644960880279541, 0.7751948237419128, 0.78113853931427, 0.77677983045578, 0.7847048044204712, 0.7836481332778931, 0.7964601516723633], "val_loss": [1.5024124894823347, 0.8345313923699516, 0.7462812151227679, 0.6359416587012154, 0.5814336538314819, 0.5783300570079258, 0.5440629209790911, 0.5548255443572998, 0.5069733006613595, 0.5010883297239032, 0.4928852490016392, 0.495963522366115, 0.4718054873602731, 0.5181682961327689, 0.449807950428554, 0.4782781090055193, 0.4785369804927281, 0.4422841327530997, 0.4405572754996164, 0.4800656863621303], "val_accuracy": [0.3863333463668823, 0.6489999890327454, 0.6796666383743286, 0.7133333086967468, 0.7480000257492065, 0.7423333525657654, 0.7616666555404663, 0.7513333559036255, 0.7760000228881836, 0.7720000147819519, 0.7770000100135803, 0.7879999876022339, 0.7943333387374878, 0.7493333220481873, 0.8056666851043701, 0.7836666703224182, 0.7730000019073486, 0.8056666851043701, 0.8036666512489319, 0.7716666460037231]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 9, 3, 9, 3, 3, 6, 6, 3, 8, 9, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 3, 3, 3, 0, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 80, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [30, 9, 44]], "fitness": -0.6359999775886536, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2554330331081602, 1.8041107736605664, 1.286264256007006, 0.9251018227555922, 0.8439571863435688, 0.7962225746673883, 0.7501147109771591, 0.7152385059963081, 0.6913793025361926, 0.6417803388419105, 0.6218124772847021, 0.6035533174941285, 0.5903121387213763, 0.5591076232848182, 0.5459594696173657, 0.5294507249211591, 0.5071807490474024, 0.4984392410279769, 0.4966144506697642, 0.48340934518148493, 0.48667083677283807, 0.46417065460558155, 0.46414672836352333, 0.4538734945733203, 0.4325637473894416, 0.43160780201089255, 0.42205358018822847, 0.41337386793968084, 0.41719616576980023, 0.3975600526947245, 0.38669837994141554, 0.37331986885895235, 0.3798001856379395, 0.3832245091909525, 0.36579520032626606, 0.36762343103607587, 0.35161422739222914, 0.35376667119823413, 0.35382748831453703, 0.3642623449565397, 0.3497924402035333, 0.3535139489687193, 0.35493581995059, 0.3584755184612317, 0.34822663399505893, 0.36062722874670267, 0.3352404726242833, 0.3354076365942118, 0.34076979600081053, 0.3578381941633737, 0.3437099535002952, 0.33915461168990174, 0.34037587967342187], "accuracy": [0.19812442362308502, 0.43045833706855774, 0.5757495760917664, 0.6584334969520569, 0.6954167485237122, 0.6923788189888, 0.7220974564552307, 0.7353057861328125, 0.7403249144554138, 0.7543256878852844, 0.7687227725982666, 0.7701756954193115, 0.7758552432060242, 0.7906485199928284, 0.7893276810646057, 0.7993659973144531, 0.8084797263145447, 0.807158887386322, 0.8131026029586792, 0.8170651197433472, 0.8098005652427673, 0.8222163319587708, 0.8260467648506165, 0.8240655064582825, 0.8407079577445984, 0.837141752243042, 0.8408400416374207, 0.8407079577445984, 0.8462554216384888, 0.8430854678153992, 0.8459912538528442, 0.8562937378883362, 0.8539162874221802, 0.8514066934585571, 0.8532558679580688, 0.8536521196365356, 0.8564258217811584, 0.8610487580299377, 0.8626337051391602, 0.8576145768165588, 0.8632941246032715, 0.8614450097084045, 0.8647470474243164, 0.8625016212463379, 0.8658037185668945, 0.8541803956031799, 0.8659358024597168, 0.8721436858177185, 0.8704266548156738, 0.8601241707801819, 0.8704266548156738, 0.8702945709228516, 0.8634262084960938], "val_loss": [1.8021512712751115, 0.9535669258662632, 0.6865277120045253, 0.6740522044045585, 0.5748094490596226, 0.5609373194830758, 0.5668091263089862, 0.5241893189293998, 0.4737467084612165, 0.470317006111145, 0.45706301076071604, 0.44449073927743094, 0.4410646898405893, 0.44334836517061504, 0.41418083224977764, 0.41081046206610544, 0.41503810031073435, 0.4026808057512556, 0.39129182270595003, 0.3917040739740644, 0.395072409084865, 0.38427426133837017, 0.3753559078489031, 0.3744237167494638, 0.38665155853543964, 0.36027566875730244, 0.36913877725601196, 0.37287259101867676, 0.3754781654902867, 0.3571322900908334, 0.3592245749064854, 0.3809600131852286, 0.3801558954375131, 0.3772856167384556, 0.3598322187151228, 0.3620508057730539, 0.3747966204370771, 0.3844802464757647, 0.38941684791019987, 0.40238933903830393, 0.4120348266192845, 0.4128073453903198, 0.4172075731413705, 0.4443677919251578, 0.40672315870012554, 0.3883975488798959, 0.43931930405753, 0.4376146878514971, 0.4302475963320051, 0.44809023823056904, 0.4818060312952314, 0.47805013826915194, 0.451022744178772], "val_accuracy": [0.4266666769981384, 0.6566666960716248, 0.7096666693687439, 0.718666672706604, 0.7336666584014893, 0.7436666488647461, 0.7480000257492065, 0.7670000195503235, 0.7796666622161865, 0.7833333611488342, 0.7863333225250244, 0.8003333210945129, 0.7976666688919067, 0.79666668176651, 0.812333345413208, 0.8149999976158142, 0.8223333358764648, 0.8263333439826965, 0.8273333311080933, 0.8403333425521851, 0.82833331823349, 0.8416666388511658, 0.8370000123977661, 0.8433333039283752, 0.8463333249092102, 0.843999981880188, 0.8473333120346069, 0.8429999947547913, 0.8446666598320007, 0.8506666421890259, 0.8610000014305115, 0.8519999980926514, 0.8479999899864197, 0.8586666584014893, 0.8579999804496765, 0.862666666507721, 0.859000027179718, 0.8560000061988831, 0.859666645526886, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8579999804496765, 0.8646666407585144, 0.8569999933242798, 0.8586666584014893, 0.8610000014305115, 0.8676666617393494, 0.8603333234786987, 0.8643333315849304, 0.8663333058357239, 0.8610000014305115, 0.859000027179718]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 3, 7, 3, 0, 9, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 3, 3, 1, 0, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.4571428596973419, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.084549241030709, 1.5995305184407274, 0.8854517146754085, 0.7770071164680872, 0.7170834136975991, 0.704871895464105, 0.7204035299171656, 0.7464013652101783, 0.7295826449527748, 0.7509565864414225, 0.8271710134342977, 0.9420010046070246], "accuracy": [0.3535860478878021, 0.49253731966018677, 0.6734909415245056, 0.7124554514884949, 0.7263241410255432, 0.7404569983482361, 0.7421740889549255, 0.7318716049194336, 0.7357020378112793, 0.7322678565979004, 0.7129837274551392, 0.6942279934883118], "val_loss": [1.8041631153651647, 0.7108083963394165, 0.5690068858010429, 0.508621232850211, 0.49081434522356304, 0.4911789042609079, 0.4791618926184518, 0.49758665902273996, 0.4985473496573312, 0.5294721126556396, 0.6312253134591239, 0.6778690814971924], "val_accuracy": [0.5243333578109741, 0.6756666898727417, 0.7433333396911621, 0.7670000195503235, 0.7763333320617676, 0.7793333530426025, 0.7866666913032532, 0.784333348274231, 0.7753333449363708, 0.762666642665863, 0.7630000114440918, 0.7390000224113464]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 6, 7, 3, 0, 9, 0, 2, 8, 2, 6, 4, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 3, 3, 3, 0, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 92, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [89, 9, 44]], "fitness": -0.26514285802841187, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 22, 14, 5, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))))))))), grad)))), tf.math.pow(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.6939163364833134, 2.382946410057583, 2.307307285104272, 2.2655633479974777, 2.245724507389666, 2.303987284850419, 2.3033208000567043, 2.3030591340443523, 2.3028283366406237], "accuracy": [0.19455818831920624, 0.11438383162021637, 0.10091137140989304, 0.1434420794248581, 0.1320829540491104, 0.09774138033390045, 0.09694888442754745, 0.09708096832036972, 0.09338264167308807], "val_loss": [1.976254871913365, 1.9798946380615234, 1.9737303597586495, 1.5388816424778529, 1.974649293082101, 1.9737909861973353, 1.9736686434064592, 1.973733833857945, 1.9736550876072474], "val_accuracy": [0.09799999743700027, 0.10400000214576721, 0.10400000214576721, 0.2983333468437195, 0.10400000214576721, 0.10400000214576721, 0.09799999743700027, 0.09799999743700027, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 3, 7, 3, 0, 9, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 3, 3, 3, 0, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 92, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [5, 9, 44]], "fitness": -0.24942857027053833, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 3, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3011834538293128, 2.301680356661689, 2.2997043943990882, 2.3008323765985086, 2.301023459280203, 2.3007330753075497, 2.3002844006079, 2.3003403757541503, 2.299555305382201, 2.299447487594429, 2.299065045739807, 2.29890795913528, 2.29779305229444, 2.2986793936897087, 2.298094250191913, 2.2984170626183196, 2.2982506115580468, 2.297050231042524, 2.2966643653257948, 2.2964401334236797, 2.2979498798222733, 2.2966115580825694, 2.296474490010145, 2.2963350234864928, 2.2969308955054384, 2.294894079254477, 2.2942539637256623, 2.2948871961028554, 2.294593273735223, 2.295431875108712, 2.2939817450065747, 2.2942376429961264, 2.2937077084993405, 2.293103124896659, 2.294157937659154, 2.293659141302707, 2.2907102924878995, 2.291533623168718, 2.2935917467851175, 2.292219903664015, 2.2898485504042565, 2.29220083027216, 2.289330874798147, 2.2905165074665503, 2.2894561519365837, 2.2909695417212457, 2.290368861809477, 2.2886476691498845, 2.290541295535403, 2.289069750085089, 2.290315830413109, 2.2886421577474776, 2.288596108416052, 2.2884697105119005, 2.287586706189463, 2.288270139517864, 2.286699256593399, 2.2868495371048523, 2.286594065755759, 2.2863819451143774, 2.286091496711079, 2.2859575345673346, 2.2854590648358384, 2.2862838114792754, 2.2857363197891987, 2.2837531680617396, 2.2852078473893895, 2.2847235038406137, 2.2849686531232662, 2.2842120595533206, 2.2811512798759774, 2.2834141838268724, 2.284141645927817, 2.2833708831584056, 2.2835252835466844, 2.283565340481729, 2.2826399724119137, 2.282012248823372, 2.2815693688509158, 2.2814644577480845, 2.281160796433392, 2.281476110216019, 2.2808320164885174, 2.2800025918527504, 2.2797396228046085, 2.280118296064831, 2.280125154495995, 2.278480181714815, 2.2781796524978475, 2.2791884792573764, 2.278772408259055, 2.277832638869401, 2.2773849087746516, 2.278125214176785, 2.275488745534834, 2.2768610496216164, 2.2763248766260595, 2.2755963055055535, 2.2755347218070723, 2.277249680880495], "accuracy": [0.09245806187391281, 0.09774138033390045, 0.09853387624025345, 0.0936468094587326, 0.09285431355237961, 0.09087307006120682, 0.09681680053472519, 0.09668471664190292, 0.09932637959718704, 0.10091137140989304, 0.10038304328918457, 0.09721305221319199, 0.1002509593963623, 0.0956280529499054, 0.10500594228506088, 0.09602430462837219, 0.10342095047235489, 0.10289261490106583, 0.10421344637870789, 0.10672302544116974, 0.1022322028875351, 0.10751552134752274, 0.10460969805717468, 0.10632677376270294, 0.10091137140989304, 0.1080438494682312, 0.10659094154834747, 0.11227050423622131, 0.10791176557540894, 0.11121384054422379, 0.11345925182104111, 0.11517632752656937, 0.10896842926740646, 0.11359133571386337, 0.10949676483869553, 0.1142517477273941, 0.11570466309785843, 0.11570466309785843, 0.11293092370033264, 0.11359133571386337, 0.1154404953122139, 0.11927089840173721, 0.1216483935713768, 0.11728965491056442, 0.12270505726337433, 0.1200634017586708, 0.12521463632583618, 0.12429005652666092, 0.12310130894184113, 0.12521463632583618, 0.11742173880338669, 0.12679962813854218, 0.1286487877368927, 0.1258750557899475, 0.12508255243301392, 0.12270505726337433, 0.13168670237064362, 0.1306300312280655, 0.13049794733524323, 0.1302337795495987, 0.13380002975463867, 0.13776251673698425, 0.13459251821041107, 0.12574297189712524, 0.1306300312280655, 0.14159291982650757, 0.13736626505851746, 0.14291374385356903, 0.1332716941833496, 0.14040417969226837, 0.13591335713863373, 0.14132875204086304, 0.13974376022815704, 0.13749834895133972, 0.13908334076404572, 0.13472460210323334, 0.14410249888896942, 0.1442345827817917, 0.1472724825143814, 0.1476687341928482, 0.1438383311033249, 0.14410249888896942, 0.14093250036239624, 0.14449875056743622, 0.14793290197849274, 0.1472724825143814, 0.15400871634483337, 0.15453705191612244, 0.15612204372882843, 0.1500462293624878, 0.1530841439962387, 0.15480121970176697, 0.15572579205036163, 0.1546691358089447, 0.16351869702339172, 0.1574428677558899, 0.1578391194343567, 0.15902787446975708, 0.1608770340681076, 0.16312244534492493], "val_loss": [1.9707338469369071, 1.9704880033220564, 1.9702407291957311, 1.9699929101126534, 1.9697494506835938, 1.969503607068743, 1.9692529269627161, 1.969007968902588, 1.9687612397330148, 1.968515123639788, 1.968268939426967, 1.968024526323591, 1.967775549207415, 1.9675312723432268, 1.96728549684797, 1.9670391763959612, 1.9667935371398926, 1.9665499414716447, 1.9663045065743583, 1.9660594803946358, 1.9658151354108537, 1.9655727658952986, 1.9653278078351701, 1.9650861195155553, 1.9648418426513672, 1.964597565787179, 1.964352743966239, 1.9641078540257044, 1.9638641902378626, 1.9636202539716447, 1.9633771351405553, 1.963132449558803, 1.9628914424351283, 1.962651593344552, 1.962409360068185, 1.9621663774762834, 1.9619263921465193, 1.9616834095546178, 1.9614415168762207, 1.961200373513358, 1.9609575271606445, 1.960714885166713, 1.9604729924883162, 1.9602302823747908, 1.9599898202078683, 1.9597471782139368, 1.9595065116882324, 1.9592652320861816, 1.9590232712881905, 1.9587811742510115, 1.9585401671273368, 1.9582980019705636, 1.9580555643354143, 1.9578147615705217, 1.9575739588056291, 1.9573304312569755, 1.9570893560137068, 1.9568462371826172, 1.956604072025844, 1.9563623837062292, 1.9561196054731096, 1.9558744430541992, 1.9556320735386439, 1.9553914070129395, 1.955150740487235, 1.9549079622541154, 1.9546685218811035, 1.954425607408796, 1.9541828972952706, 1.9539393016270228, 1.9536948204040527, 1.9534540176391602, 1.9532126699175154, 1.9529695510864258, 1.9527290889195033, 1.9524852207728796, 1.9522408757890974, 1.9519987787519182, 1.951756136757987, 1.9515117236546107, 1.9512664249965124, 1.9510205132620675, 1.95077725819179, 1.950535774230957, 1.9502925872802734, 1.9500513076782227, 1.9498088019234794, 1.9495641844613212, 1.949319498879569, 1.9490748814174108, 1.9488309451511927, 1.9485879625592912, 1.948340960911342, 1.948096684047154, 1.9478496142796107, 1.9476046562194824, 1.9473599706377303, 1.9471143995012556, 1.9468684877668108, 1.9466235297066825], "val_accuracy": [0.036666665226221085, 0.03766666725277901, 0.03966666758060455, 0.03999999910593033, 0.04066666588187218, 0.041999999433755875, 0.04466666653752327, 0.046666666865348816, 0.04933333396911621, 0.05133333429694176, 0.05299999937415123, 0.054666668176651, 0.05700000002980232, 0.05900000035762787, 0.06066666543483734, 0.06233333423733711, 0.06400000303983688, 0.0663333311676979, 0.06800000369548798, 0.07066666334867477, 0.07133333384990692, 0.0729999989271164, 0.07466666400432587, 0.07733333110809326, 0.07966666668653488, 0.08266666531562805, 0.08433333039283752, 0.08833333104848862, 0.08933333307504654, 0.09300000220537186, 0.09466666728258133, 0.09666666388511658, 0.09933333098888397, 0.10166666656732559, 0.10400000214576721, 0.10866666585206985, 0.11133333295583725, 0.1133333370089531, 0.11599999666213989, 0.11966666579246521, 0.12099999934434891, 0.1236666664481163, 0.12533333897590637, 0.12733332812786102, 0.1289999932050705, 0.13066667318344116, 0.13300000131130219, 0.1353333294391632, 0.13766667246818542, 0.140666663646698, 0.14233332872390747, 0.14366666972637177, 0.14533333480358124, 0.1469999998807907, 0.15000000596046448, 0.15066666901111603, 0.15333333611488342, 0.156333327293396, 0.15833333134651184, 0.1613333374261856, 0.1626666635274887, 0.16500000655651093, 0.16633333265781403, 0.16866666078567505, 0.17166666686534882, 0.17599999904632568, 0.17733334004878998, 0.18033333122730255, 0.18299999833106995, 0.18433333933353424, 0.18666666746139526, 0.1889999955892563, 0.19033333659172058, 0.19366666674613953, 0.19599999487400055, 0.19766665995121002, 0.2006666660308838, 0.20266667008399963, 0.2056666612625122, 0.20666666328907013, 0.20800000429153442, 0.210999995470047, 0.2133333384990692, 0.21666666865348816, 0.2173333317041397, 0.218666672706604, 0.22033333778381348, 0.22333332896232605, 0.22633333504199982, 0.2266666740179062, 0.22866666316986084, 0.2303333282470703, 0.23233333230018616, 0.234333336353302, 0.23666666448116302, 0.23899999260902405, 0.24066667258739471, 0.2423333376646042, 0.24533332884311676, 0.24699999392032623]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 8, 2, 3, 3, 6, 2, 2, 8, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [59, 9, 44]], "fitness": -0.23428571224212646, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.345574184069308, 2.500136895564569, 2.2938899086639943, 2.3210295542214507, 2.3032857140750305, 2.3035757950724958], "accuracy": [0.18755778670310974, 0.19323734939098358, 0.10606260597705841, 0.108440101146698, 0.09681680053472519, 0.10091137140989304], "val_loss": [1.9528273854936873, 1.9748217718941825, 1.9551209041050501, 1.9741905757359095, 1.9737972531999861, 1.9736813817705428], "val_accuracy": [0.2513333261013031, 0.10400000214576721, 0.21766667068004608, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 74], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 9, 6, 7, 3, 2, 6, 2, 2, 3, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 2, 1, 3, 1, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [3, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 9, 2, 7, 3, 3, 6, 6, 3, 8, 9, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 0, 3, 1, 3, 1, 3, 1, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [30, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 19, 19, 12, 7, 3, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(beta, grad), alpha)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302746565964527, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 8, 2, 3, 3, 6, 2, 2, 8, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 3, 3, 3, 0, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300689363019845, 2.3022732787585105, 2.302581017626086, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.1018359512090683, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973043509892055, 1.9736442565917969, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09233333170413971, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 9, 3, 7, 3, 3, 6, 2, 2, 8, 8, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 0, 3, 1, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 90, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [6, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [7.440784461683113, 5.077012382305026, 2.399908970533156, 2.4025535390770996, 2.4123215060964034, 2.4238007354572573], "accuracy": [0.18280279636383057, 0.10896842926740646, 0.09760929644107819, 0.09734513610601425, 0.09919429570436478, 0.09932637959718704], "val_loss": [2.6090670994349887, 2.044053758893694, 2.084700243813651, 2.0755491937909807, 2.048825877053397, 2.037248815808977], "val_accuracy": [0.11833333224058151, 0.09799999743700027, 0.0989999994635582, 0.10066666454076767, 0.09833333641290665, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 8, 2, 3, 3, 6, 2, 2, 8, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302746565964527, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 3, 7, 3, 0, 9, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 3, 1, 3, 3, 0, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 92, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 24, 24, 15, 9, 4, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad))), tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, beta), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 9, 6, 7, 3, 2, 6, 2, 2, 3, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 1, 3, 3, 3, 0, 3, 0, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 96, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 3, 5, 1, 2, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 6, 7, 3, 0, 9, 2, 2, 8, 2, 5, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 3, 1, 3, 3, 3, 3, 0, 3, 3, 2, 3, 1, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [99, 16, 27, 6, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 3, 7, 3, 0, 9, 2, 2, 8, 2, 8, 3, 1, 3, 8, 6, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 0, 3, 1, 2, 1, 3, 1, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 92, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 6, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06485272943973541, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 8, 2, 3, 3, 6, 2, 2, 8, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [67, 9, 44]], "fitness": -0.07771428674459457, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.6791798691188404, 2.3764923972980205, 2.285740297861922, 2.575995178364996, 2.219210461823223, 2.308792799313653, 2.3037387456844796, 2.303235220918566, 2.302869281181806], "accuracy": [0.19297318160533905, 0.13393211364746094, 0.12732796370983124, 0.10910051316022873, 0.18359529972076416, 0.09893012791872025, 0.09774138033390045, 0.09153348207473755, 0.09325055778026581], "val_loss": [1.976205893925258, 1.9766407694135393, 3.5112511771065846, 1.9729063170296806, 1.986304419381278, 1.9747772897992815, 1.9738945279802596, 1.9738288606916154, 1.973588330405099], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.10133333504199982, 0.12399999797344208, 0.10400000214576721, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 9, 3, 7, 3, 3, 6, 2, 2, 8, 8, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 0, 2, 3, 1, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [30, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 19, 13, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301292268843494, 2.3020548150681424, 2.300346337982125, 2.3017449324172894, 2.3021848733950097, 2.302167184222817], "accuracy": [0.09219389408826828, 0.09734513610601425, 0.09681680053472519, 0.09192973375320435, 0.08889182657003403, 0.08796724677085876], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 8, 2, 3, 3, 6, 2, 2, 8, 2, 8, 3, 1, 3, 8, 2, 8, 2, 6, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 0, 3, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [1, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [21, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012935553150027, 2.302060023936235, 2.3003539220925573, 2.301756245884299, 2.302199961502696, 2.3021850338418015], "accuracy": [0.09219389408826828, 0.09734513610601425, 0.09681680053472519, 0.09219389408826828, 0.08902391046285629, 0.0878351628780365], "val_loss": [1.9709839820861816, 1.970987319946289, 1.970989159175328, 1.9709916796003069, 1.9709937231881278, 1.9709960392543249], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]