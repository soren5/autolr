[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8188571333885193, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2303306828431952, 2.1449564242674737, 1.7862431562461747, 1.2680193367824422, 1.0055968925354897, 0.9292802765006953, 0.8077467998115535, 0.7853311901047813, 0.741029335326365, 0.6963275260834599, 0.6544505257994476, 0.6727183386555532, 0.6318824407273689, 0.6137330113479474, 0.6092441898956747, 0.567654425434039, 0.5974350756720908, 0.5585035309579316, 0.5535805715451451, 0.539003459135177, 0.5296452684393649, 0.5243464518988437, 0.52659223621642, 0.49170327908909944, 0.4971701890966282, 0.47698846486549745, 0.49752561296722, 0.4656006847398156, 0.4770503855849049, 0.4473180879045707, 0.4404200556185015, 0.4403974462486041, 0.4233169371047906, 0.4405340377594171, 0.4243709730623326, 0.4383475431054732, 0.41837599945578513], "accuracy": [0.2639017403125763, 0.23854179680347443, 0.40285298228263855, 0.5431250929832458, 0.6299035549163818, 0.6579051613807678, 0.7005679607391357, 0.7029454708099365, 0.7194558382034302, 0.7343811988830566, 0.7532690763473511, 0.7403249144554138, 0.7607977986335754, 0.7708360552787781, 0.7733456492424011, 0.7844406366348267, 0.7751948237419128, 0.7873464822769165, 0.7832518815994263, 0.7944789528846741, 0.7957997918128967, 0.7977809906005859, 0.7944789528846741, 0.8168009519577026, 0.8119139075279236, 0.8241975903511047, 0.8095363974571228, 0.8232730031013489, 0.821820080280304, 0.8341038227081299, 0.8341038227081299, 0.8308017253875732, 0.8438779711723328, 0.8302733898162842, 0.8422929644584656, 0.8308017253875732, 0.8418967127799988], "val_loss": [1.9490259715488978, 1.8268557957240514, 1.157327720097133, 0.7802573612758091, 0.6307553734098162, 0.7431648288454328, 0.6651050022670201, 0.567476715360369, 0.5162543228694371, 0.5485508782523019, 0.5032726185662406, 0.4799114295414516, 0.4556347812925066, 0.4840849297387259, 0.4295962793486459, 0.43687898772103445, 0.4930119684764317, 0.44587857382638113, 0.4694099085671561, 0.39272422449929373, 0.40207022428512573, 0.417151289326804, 0.42855422837393625, 0.39377102681568693, 0.37922972440719604, 0.4001536454473223, 0.3749301859310695, 0.3657118592943464, 0.3530442459242685, 0.36003067663737703, 0.37734133856637136, 0.34198884453092304, 0.3906506470271519, 0.34016776936394827, 0.36409689698900494, 0.3854556253978184, 0.34380864245550974], "val_accuracy": [0.20000000298023224, 0.4026666581630707, 0.5559999942779541, 0.6786666512489319, 0.706333339214325, 0.6656666398048401, 0.7086666822433472, 0.7233333587646484, 0.7693333625793457, 0.7323333621025085, 0.7770000100135803, 0.7836666703224182, 0.7929999828338623, 0.7770000100135803, 0.8133333325386047, 0.8026666641235352, 0.7603333592414856, 0.7906666398048401, 0.7706666588783264, 0.8273333311080933, 0.812666654586792, 0.8159999847412109, 0.8066666722297668, 0.8256666660308838, 0.8383333086967468, 0.8276666402816772, 0.8339999914169312, 0.8433333039283752, 0.8500000238418579, 0.8446666598320007, 0.8286666870117188, 0.8566666841506958, 0.8190000057220459, 0.8550000190734863, 0.8413333296775818, 0.831333339214325, 0.8550000190734863]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8180000185966492, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(grad)))), alpha)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.230320566444664, 2.150094514824632, 1.8389513857250341, 1.443772894343239, 1.0899069361273543, 0.9808140450921498, 0.8213938366168557, 0.7684512368408665, 0.7360929164195561, 0.6915576116299632, 0.6663315475199595, 0.6793257235819401, 0.6191852418832523, 0.6118532869054059, 0.6230813247290553, 0.5564945008516659, 0.590207575681014, 0.565760387941012, 0.5520727450364868, 0.5312241141066465, 0.5409328820226436, 0.5113329579486603, 0.5219360250310969, 0.49557460950995796, 0.49562827663540665, 0.46988142399566835, 0.4987736066940863, 0.4722237046510316, 0.4693736513104059, 0.45914516987786114, 0.44006136518349154, 0.4329385671672599, 0.4148257407435431, 0.42329082904222887, 0.41882315522502395, 0.42407629218997106, 0.43232687958605365], "accuracy": [0.2641659080982208, 0.23695680499076843, 0.37841764092445374, 0.49465063214302063, 0.5992603302001953, 0.6391493678092957, 0.6860388517379761, 0.7160216569900513, 0.7123233675956726, 0.7404569983482361, 0.7485140562057495, 0.7347774505615234, 0.7614582180976868, 0.7621186375617981, 0.7637035846710205, 0.7845727205276489, 0.7763835787773132, 0.7847048044204712, 0.7848368883132935, 0.8018755912780762, 0.7917051911354065, 0.8095363974571228, 0.8024039268493652, 0.8098005652427673, 0.8075551390647888, 0.8253863453865051, 0.807158887386322, 0.8201030492782593, 0.8247259259223938, 0.8253863453865051, 0.8405758738517761, 0.8436138033866882, 0.8473120927810669, 0.8417646288871765, 0.8445383906364441, 0.8430854678153992, 0.8363492488861084], "val_loss": [1.9493438856942313, 1.841503688267299, 1.150061913899013, 0.8650320257459369, 0.8184735434395927, 0.6352670703615461, 0.6261954307556152, 0.5564979485103062, 0.5102674790791103, 0.5196386064801898, 0.5419256857463292, 0.47919629301343647, 0.47538271972111296, 0.5127342598778861, 0.4349138140678406, 0.442456100668226, 0.4604794979095459, 0.41818331820624216, 0.43114600011280607, 0.3994492292404175, 0.40135936226163593, 0.44152205330984934, 0.39338267701012747, 0.3806558336530413, 0.37088515928813387, 0.39214434794017244, 0.3754421131951468, 0.3702846850667681, 0.3599115524973188, 0.37306372608457294, 0.35505647318703787, 0.3427471603666033, 0.38132437637874056, 0.34583304609571186, 0.355279803276062, 0.4340990696634565, 0.3556043931416103], "val_accuracy": [0.20000000298023224, 0.4000000059604645, 0.5856666564941406, 0.6196666955947876, 0.5843333601951599, 0.7223333120346069, 0.7226666808128357, 0.7306666374206543, 0.765666663646698, 0.746666669845581, 0.7440000176429749, 0.7760000228881836, 0.7743333578109741, 0.7566666603088379, 0.8056666851043701, 0.7996666431427002, 0.7799999713897705, 0.8199999928474426, 0.8076666593551636, 0.8209999799728394, 0.8299999833106995, 0.7913333177566528, 0.8203333616256714, 0.8336666822433472, 0.8460000157356262, 0.8323333263397217, 0.8363333344459534, 0.840666651725769, 0.8486666679382324, 0.8336666822433472, 0.8510000109672546, 0.8576666712760925, 0.8276666402816772, 0.8500000238418579, 0.8456666469573975, 0.8050000071525574, 0.8556666374206543]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 2, 8, 0, 1, 2, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 5, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [0, 80, 44, 92]], "fitness": -0.3102857172489166, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.301629031197333, 2.215135683551708, 323335.5658818833, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.23154141008853912, 0.19601109623908997, 0.10685510188341141, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.965309006827218, 1.9908347129821777, 58523401.14285714, NaN, NaN, NaN, NaN], "val_accuracy": [0.07800000160932541, 0.2840000092983246, 0.16566666960716248, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 1, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [75, 80, 44, 92]], "fitness": -0.2654285728931427, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.negative(grad))), alpha)), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4404100812799374, 2.278490568306373, 2.317410321677161, 2.304283423525168, 2.303031083221496, 2.298887705176246], "accuracy": [0.21793685853481293, 0.15189538896083832, 0.17553824186325073, 0.09681680053472519, 0.09906221181154251, 0.12455421686172485], "val_loss": [1.7324036870683943, 1.9522480283464705, 1.9755478586469377, 1.9738345827375139, 1.972884041922433, 1.9518211909702845], "val_accuracy": [0.2683333456516266, 0.23366667330265045, 0.10400000214576721, 0.10466666519641876, 0.09866666793823242, 0.14633333683013916]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 2, 8, 9, 9, 2, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 3, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 5, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [0, 80, 44, 92]], "fitness": -0.10514285415410995, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.302163596638851, 2.3012701439709473, 2.3030577007931585, 2.303251125053282, 2.301158440253203, 2.301819518730074, 2.301452278319351, 2.301515887583787, 2.3014661232871845, 2.301322366772169, 2.3006090287440455, 2.300807525169706, 2.301757516232401, 2.3003785015648353, 2.3021714506588906, 2.301504140957676, 2.3002093207362213, 2.299819348841264, 2.3024335067191255, 2.299748081777389, 2.3007986582722157, 2.300546391607669, 2.300682446487733, 2.3005890194388146, 2.2994960270474665, 2.2997548414211955, 2.297606678088391, 2.299209051065441, 2.2995887637815424, 2.2990220313877745, 2.2993307747876783, 2.2990196447771742, 2.3007759836922705, 2.300891426056446, 2.2998087817116373, 2.2975887064731606, 2.298773787670667, 2.298769374391926, 2.2977051853960404, 2.2972071443834103, 2.2984251037580523, 2.2971322590947985, 2.29895113654786, 2.2972384415219538, 2.297732090732724, 2.2975885992776983, 2.29746807539515, 2.298180661732416, 2.29679609393683, 2.297587307830607, 2.297404064588606, 2.2972400833697226, 2.2975148663403036, 2.29844340741469, 2.29548593068781, 2.2965850315514715, 2.2951688223574154, 2.2969250070609437, 2.2966177148306297, 2.296890105175824, 2.297345263783832, 2.2957369646360344, 2.2973235185041467, 2.2967170389840756, 2.296211385833998, 2.2953277350952126, 2.2942734843216175, 2.2947219185242798, 2.2971149434062075, 2.2952831765176, 2.2952759842500394, 2.294210605932469, 2.2954127056692193, 2.293834827327615, 2.294113441622725, 2.294031407303735, 2.2949700592342324, 2.293501665878447, 2.296638502751548, 2.2935903611483592, 2.2943386428187065, 2.2952884541620997, 2.2936811643332664, 2.2931737254844005, 2.293129686571745, 2.2943617989279734, 2.293045748746028, 2.2931886123644127, 2.295502017187074, 2.2937730014001407, 2.2926060912505495, 2.293519737950059, 2.293536994404025, 2.2941482220154557, 2.293078997761519, 2.2924987563462134, 2.292419432397091, 2.293479164247232, 2.293361139965095, 2.291231293452178], "accuracy": [0.09391097724437714, 0.09219389408826828, 0.08796724677085876, 0.08915598690509796, 0.09377889335155487, 0.09298639744520187, 0.08849557489156723, 0.09166556596755981, 0.08889182657003403, 0.09787346422672272, 0.0944393053650856, 0.09787346422672272, 0.09417514503002167, 0.09589222073554993, 0.09008057415485382, 0.09008057415485382, 0.09496764093637466, 0.10038304328918457, 0.09311848133802414, 0.09100515395402908, 0.09192973375320435, 0.09470347315073013, 0.09800554811954498, 0.09272222965955734, 0.09893012791872025, 0.09047681838274002, 0.10130762308835983, 0.09840179979801178, 0.0944393053650856, 0.10408136248588562, 0.09906221181154251, 0.1018359512090683, 0.08955223858356476, 0.09602430462837219, 0.09787346422672272, 0.10606260597705841, 0.09351472556591034, 0.09576013684272766, 0.1002509593963623, 0.10130762308835983, 0.10289261490106583, 0.09787346422672272, 0.10117553919553757, 0.10170386731624603, 0.1010434553027153, 0.10236428678035736, 0.10117553919553757, 0.10130762308835983, 0.1014397069811821, 0.10051512718200684, 0.1018359512090683, 0.10130762308835983, 0.10421344637870789, 0.10236428678035736, 0.10619468986988068, 0.09945846349000931, 0.11015717685222626, 0.10170386731624603, 0.10130762308835983, 0.10091137140989304, 0.10130762308835983, 0.10038304328918457, 0.10540219396352768, 0.107647605240345, 0.108440101146698, 0.10685510188341141, 0.10540219396352768, 0.10896842926740646, 0.10315678268671036, 0.10659094154834747, 0.10553427785634995, 0.11200633645057678, 0.10738343745470047, 0.10368511080741882, 0.11042134463787079, 0.11332716792821884, 0.10711926966905594, 0.11081759631633759, 0.10487385839223862, 0.11068551242351532, 0.11266675591468811, 0.10857218503952026, 0.11227050423622131, 0.11161009222269058, 0.10910051316022873, 0.10962884873151779, 0.10936468094587326, 0.11068551242351532, 0.11028926074504852, 0.1162329912185669, 0.11557257920503616, 0.11557257920503616, 0.11161009222269058, 0.10910051316022873, 0.1158367469906807, 0.11821424216032028, 0.11821424216032028, 0.11187426000833511, 0.10896842926740646, 0.11834631860256195], "val_loss": [1.9708914756774902, 1.97080169405256, 1.9707122530255998, 1.9706223351614816, 1.9705308505467005, 1.970442295074463, 1.9703523090907507, 1.9702608244759696, 1.9701711109706335, 1.9700802394321986, 1.9699897084917342, 1.9698995181492396, 1.9698095321655273, 1.969719069344657, 1.9696290152413505, 1.9695399148123605, 1.9694490432739258, 1.9693586485726493, 1.969269139426095, 1.969179562159947, 1.9690897124154227, 1.9689997264317103, 1.9689101491655623, 1.968820367540632, 1.96873106275286, 1.9686414854867118, 1.9685513632638114, 1.9684616497584753, 1.9683709144592285, 1.9682824952261788, 1.968191487448556, 1.9681028638567244, 1.9680144446236747, 1.9679256166730608, 1.967836788722447, 1.967747415815081, 1.967658179146903, 1.9675684656415666, 1.967479637690953, 1.9673896517072404, 1.967299461364746, 1.9672109058925085, 1.9671212605067663, 1.96703154700143, 1.9669418334960938, 1.9668527330671037, 1.966764041355678, 1.9666746684483118, 1.9665848868233817, 1.9664959907531738, 1.9664067540849959, 1.96631806237357, 1.9662292344229562, 1.9661410876682825, 1.9660516466413225, 1.965963363647461, 1.9658740588596888, 1.9657859121050154, 1.9656965391976493, 1.9656077793666296, 1.9655180658612932, 1.9654294422694616, 1.9653404780796595, 1.965251854487828, 1.9651628221784319, 1.965073789869036, 1.9649848256792342, 1.9648962020874023, 1.9648073060171944, 1.964719023023333, 1.964629786355155, 1.9645402772086007, 1.964451857975551, 1.9643639836992537, 1.9642745426722936, 1.9641858509608678, 1.964097363608224, 1.9640092849731445, 1.9639204570225306, 1.963832105909075, 1.9637428692408971, 1.9636548587254115, 1.9635674612862724, 1.9634793145315987, 1.963390282222203, 1.9633019992283411, 1.9632142611912318, 1.9631256375994002, 1.9630368096487862, 1.9629485266549247, 1.962860107421875, 1.9627719606672014, 1.9626832008361816, 1.962594713483538, 1.9625060898917062, 1.9624176706586565, 1.9623291151864188, 1.962240559714181, 1.9621523448399134, 1.9620644024440221], "val_accuracy": [0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03700000047683716, 0.03766666725277901, 0.038333334028720856, 0.039000000804662704, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03999999910593033, 0.04066666588187218, 0.04066666588187218, 0.04066666588187218, 0.041333332657814026, 0.0416666679084301, 0.041999999433755875, 0.0430000014603138, 0.04466666653752327, 0.04500000178813934, 0.04500000178813934, 0.04633333161473274, 0.047333333641290665, 0.04833333194255829, 0.04933333396911621, 0.05000000074505806, 0.05133333429694176, 0.05133333429694176, 0.05233333259820938, 0.05233333259820938, 0.05299999937415123, 0.05366666615009308, 0.054666668176651, 0.0560000017285347, 0.05666666850447655, 0.0573333315551281, 0.058666665107011795, 0.058666665107011795, 0.059333331882953644, 0.059333331882953644, 0.05966666713356972, 0.061000000685453415, 0.06233333423733711, 0.06233333423733711, 0.06300000101327896, 0.06366666406393051, 0.06433333456516266, 0.06466666609048843, 0.06566666811704636, 0.06666667014360428, 0.06733333319425583, 0.06800000369548798, 0.06866666674613953, 0.06933332979679108, 0.07066666334867477, 0.07066666334867477, 0.07133333384990692, 0.07133333384990692, 0.07199999690055847, 0.0729999989271164, 0.07333333045244217, 0.07433333247900009, 0.07466666400432587, 0.07500000298023224, 0.07633333653211594, 0.07699999958276749, 0.07833333313465118, 0.07900000363588333, 0.07999999821186066, 0.08100000023841858, 0.08233333379030228, 0.08299999684095383, 0.0833333358168602, 0.08399999886751175, 0.08566666394472122, 0.08666666597127914, 0.08799999952316284, 0.08833333104848862, 0.08933333307504654, 0.09066666662693024, 0.09200000017881393, 0.09266666322946548, 0.09333333373069763, 0.09399999678134918, 0.09466666728258133, 0.09466666728258133, 0.0963333323597908, 0.09700000286102295, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.10000000149011612, 0.10166666656732559, 0.10166666656732559, 0.10333333164453506, 0.10433333367109299, 0.10599999874830246, 0.10733333230018616, 0.10766666382551193, 0.10899999737739563]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 9, 9, 8, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 6, 6, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024860721742315, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 5, 4, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [95760613.41392617, 1832853250.0626073, 8584091082.5074625, 23803753644.718002, 50742076716.396774, 94388298947.44049], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09774138033390045, 0.09959053993225098, 0.09879804402589798, 0.09840179979801178], "val_loss": [362784521.14285713, 2900228754.285714, 9785964836.571428, 23193660854.857143, 45296767561.14286, 78268973056.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 5, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 1, 2, 3, 3, 1, 0, 3], [39, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4729831088785.867, 5.4753371633051864e+16, 4.4606466788940503e+18, 9.878772108985947e+19, 1.049038365918723e+21, 6.939084731128629e+21], "accuracy": [0.09509972482919693, 0.0956280529499054, 0.10038304328918457, 0.10130762308835983, 0.09628847241401672, 0.09985470771789551], "val_loss": [161052568621641.16, 3.634465922183332e+17, 1.5806308052754985e+19, 2.3892808376135886e+20, 2.0074329296863974e+21, 1.1520877596415455e+22], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 2, 8, 0, 1, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [52, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 8, 4, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), alpha)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.770806961528157, 492419.57252525294, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22705058753490448, 0.10487385839223862, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12.428613662719727, 150492761.14285713, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.08533333241939545, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [40, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5.5225623300472, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.31541407108306885, 0.10910051316022873, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.864182608468192, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.009333333000540733, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 9, 9, 8, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 4, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 58, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [60, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, alpha)), grad))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 2, 0, 0, 5, 3, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 5, 1, 0, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 37, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 5, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 1, 2, 3, 3, 1, 0, 3], [0, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 8, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.square(grad)))), tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 6, 6, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 5, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.09771428257226944, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3187766536792758, 2.446972942780573, 2.842010361155373, 3.563315133188127, 4.59823842238221, 6.033280329099027, 7.669644610221439], "accuracy": [0.09206181764602661, 0.09470347315073013, 0.09681680053472519, 0.09866596013307571, 0.09879804402589798, 0.09721305221319199, 0.09879804402589798], "val_loss": [1.9940667152404785, 2.1115109579903737, 2.3900134222848073, 2.883964470454625, 3.612778527396066, 4.566948618207659, 5.7329398563929965], "val_accuracy": [0.09033333510160446, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 9, 9, 8, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.05714285746216774, "mapping_values": [1, 6, 6, 4, 2, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.790326952225717, 2.411357056778089, 2.4143382273865353, 2.810075693882499, 4.586568858535015, 8.75158247206394], "accuracy": [0.2316734939813614, 0.09998679161071777, 0.09060890227556229, 0.08942015469074249, 0.09932637959718704, 0.10117553919553757], "val_loss": [2.0580220903669084, 2.061678954533168, 2.1559745924813405, 3.069279670715332, 5.687293461390904, 10.880613599504743], "val_accuracy": [0.1003333330154419, 0.09966666996479034, 0.09799999743700027, 0.1003333330154419, 0.09966666996479034, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 2, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30220353157765, 2.301406327523355, 2.3032911775795823, 2.3035820287531394, 2.30159313195984, 2.3023414665666064], "accuracy": [0.09391097724437714, 0.09179764986038208, 0.0874389111995697, 0.08875974267721176, 0.09338264167308807, 0.09179764986038208], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 2, 8, 0, 1, 2, 0, 2, 5, 1, 6, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 5, 1, 0, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 68, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 5, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [0, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 1, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.30220353157765, 2.301406359014384, 2.3032912135423373, 2.303582060244168, 2.3015931139784622, 2.3023414665666064], "accuracy": [0.09391097724437714, 0.09179764986038208, 0.0874389111995697, 0.08875974267721176, 0.09338264167308807, 0.09179764986038208], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709817341395788, 1.9709817341395788, 1.9709817341395788], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 6, 9, 9, 8, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [33, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 8, 8, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha), beta)", "other_info": {"loss": [2.30220353157765, 2.301406327523355, 2.3032911775795823, 2.3035820287531394, 2.30159313195984, 2.3023414665666064], "accuracy": [0.09391097724437714, 0.09179764986038208, 0.0874389111995697, 0.08875974267721176, 0.09338264167308807, 0.09179764986038208], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 2, 0, 0, 5, 5, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 5, 1, 0, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 5, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 1, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30220353157765, 2.301406327523355, 2.3032911775795823, 2.3035820287531394, 2.30159313195984, 2.3023414665666064], "accuracy": [0.09391097724437714, 0.09179764986038208, 0.0874389111995697, 0.08875974267721176, 0.09338264167308807, 0.09179764986038208], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 6, 1, 9, 9, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 0, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 0, 2, 0, 0, 5, 5, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 5, 1, 0, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [71], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 2, 8, 1, 3, 2, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 1, 2, 3, 3, 1, 0, 3], [0, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.negative(grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30220353157765, 2.301406327523355, 2.3032911775795823, 2.3035820287531394, 2.30159313195984, 2.3023414665666064], "accuracy": [0.09391097724437714, 0.09179764986038208, 0.0874389111995697, 0.08875974267721176, 0.09338264167308807, 0.09179764986038208], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]