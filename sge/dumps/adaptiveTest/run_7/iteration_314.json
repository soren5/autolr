[{"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8257142901420593, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2414578381247288, 2.1658133156720627, 1.995327376922549, 1.4250971245460222, 1.0050924868710274, 0.8344824652331081, 0.7847210703634898, 0.7196082306056211, 0.6828128591803764, 0.6558115948240093, 0.6271497720283934, 0.6176696577800846, 0.604009106103786, 0.6025477902307612, 0.5551700678877528, 0.5465617695851113, 0.5325370733968775, 0.5326172235288861, 0.5156087733617217, 0.5194324580449406, 0.48167885514597425, 0.47580174177298534, 0.5117446631921391, 0.47839851230441965, 0.48833001770001394, 0.4695073749529073, 0.443676011291682, 0.479436468458478, 0.44740651385926805, 0.46054278351312394, 0.4388452541275488], "accuracy": [0.2689208686351776, 0.22784309089183807, 0.3327169418334961, 0.4959714710712433, 0.6316206455230713, 0.684982180595398, 0.700171709060669, 0.7202483415603638, 0.7405890822410583, 0.7491744756698608, 0.7675340175628662, 0.7630431652069092, 0.7740060687065125, 0.7740060687065125, 0.7862898111343384, 0.7991018295288086, 0.7987055778503418, 0.800818920135498, 0.81112140417099, 0.8043851256370544, 0.8183859586715698, 0.8189142942428589, 0.8087438941001892, 0.8207634687423706, 0.8189142942428589, 0.8248580098152161, 0.8367455005645752, 0.8248580098152161, 0.830669641494751, 0.8272355198860168, 0.8364813327789307], "val_loss": [1.903134890965053, 1.9322585378374373, 1.1532115595681327, 0.7240269013813564, 0.7603572607040405, 0.6604536601475307, 0.5513022286551339, 0.5406822987965175, 0.4822931800569807, 0.5270700965608869, 0.4514145851135254, 0.4510659490312849, 0.4783130032675607, 0.4907376085008894, 0.4225501332964216, 0.41883122069495066, 0.44418753896440777, 0.48258824007851736, 0.40318769216537476, 0.40490457841328215, 0.3859998328345163, 0.42153261389051166, 0.36701297760009766, 0.37249103614262175, 0.4077542168753488, 0.3622147100312369, 0.3732114178793771, 0.37433670248304096, 0.38003123658043997, 0.37410985571997507, 0.3701105373246329], "val_accuracy": [0.2266666740179062, 0.13233333826065063, 0.5476666688919067, 0.687333345413208, 0.6503333449363708, 0.6916666626930237, 0.7440000176429749, 0.7493333220481873, 0.7850000262260437, 0.7570000290870667, 0.8080000281333923, 0.8036666512489319, 0.7789999842643738, 0.7733333110809326, 0.8106666803359985, 0.8009999990463257, 0.7933333516120911, 0.8019999861717224, 0.8163333535194397, 0.8090000152587891, 0.8326666951179504, 0.8066666722297668, 0.840666651725769, 0.8403333425521851, 0.82833331823349, 0.8460000157356262, 0.8346666693687439, 0.8383333086967468, 0.8336666822433472, 0.840666651725769, 0.8383333086967468]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8220000267028809, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2413352603028085, 2.1620513454105215, 2.020481228765448, 1.653627772530261, 1.264310208136584, 0.9666465249721007, 0.7649041641311182, 0.7109328232594391, 0.6846349389167935, 0.6574377063290318, 0.613527520827771, 0.6230359225382721, 0.5967747514289777, 0.5800913592150749, 0.5652991079021329, 0.5394878783608315, 0.537423737627593, 0.5312832558490439, 0.5145923498441767, 0.5121556483223895, 0.5141198358058993, 0.4714232282064783, 0.48472806066569873, 0.49561803100950225, 0.48188809228768487, 0.46077963019390433, 0.4455701340348603, 0.4669355651398912, 0.45831652122828087, 0.45712088485199304, 0.44906553867360494, 0.4503822068984813, 0.4216456012781884, 0.4264197102816129, 0.45058109244697553, 0.4360542754849202, 0.4223148790348664], "accuracy": [0.26878878474235535, 0.22705058753490448, 0.3343019485473633, 0.40681546926498413, 0.5699379444122314, 0.6429798007011414, 0.7074362635612488, 0.7246070504188538, 0.7376832365989685, 0.7467969655990601, 0.7670056819915771, 0.7606657147407532, 0.7807422876358032, 0.7798177003860474, 0.7821952104568481, 0.7977809906005859, 0.8029322624206543, 0.8000264167785645, 0.809140145778656, 0.8088759779930115, 0.8100647330284119, 0.8272355198860168, 0.8198388814926147, 0.817989706993103, 0.8197067975997925, 0.8255184292793274, 0.8356888294219971, 0.830669641494751, 0.8315942287445068, 0.8298771381378174, 0.8305375576019287, 0.8310658931732178, 0.8409721255302429, 0.8359529972076416, 0.829216718673706, 0.8334434032440186, 0.8411042094230652], "val_loss": [1.9028020586286272, 1.9300152233668737, 1.1130052975245885, 1.226926531110491, 1.0119139807564872, 0.6512404339654105, 0.5771120956965855, 0.5707065377916608, 0.4871765204838344, 0.495052627154759, 0.43249112367630005, 0.43945895774023874, 0.45997253486088346, 0.5008334943226406, 0.41918792043413433, 0.4426521488598415, 0.43032575505120413, 0.46570280620029997, 0.41018033027648926, 0.4684063025883266, 0.4039797101702009, 0.3953732507569449, 0.3858047468321664, 0.40007199559892925, 0.4078765937260219, 0.3658070819718497, 0.3614752207483564, 0.40136347498212543, 0.3994983008929661, 0.4069411924907139, 0.407380427633013, 0.3443779264177595, 0.38923353808266775, 0.39334061316081453, 0.3809699160712106, 0.4168672561645508, 0.36579592738832745], "val_accuracy": [0.22499999403953552, 0.140666663646698, 0.531000018119812, 0.5463333129882812, 0.6129999756813049, 0.7086666822433472, 0.7266666889190674, 0.7300000190734863, 0.7756666541099548, 0.7823333144187927, 0.8100000023841858, 0.8090000152587891, 0.7983333468437195, 0.7786666750907898, 0.8116666674613953, 0.8003333210945129, 0.8130000233650208, 0.8073333501815796, 0.8143333196640015, 0.7956666946411133, 0.8183333277702332, 0.8299999833106995, 0.8296666741371155, 0.8270000219345093, 0.8213333487510681, 0.8416666388511658, 0.847000002861023, 0.824999988079071, 0.8270000219345093, 0.8230000138282776, 0.8180000185966492, 0.8526666760444641, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8149999976158142, 0.8423333168029785]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 2, 2, 2, 0, 3, 4, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [30], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8111428618431091, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.241314683182837, 2.1637259646964786, 2.0288778000094587, 1.4969125456105228, 1.0353836598586508, 0.8574255406580991, 0.7702306345107139, 0.7165693390276516, 0.6711485039808369, 0.6527847939982406, 0.6201165614426017, 0.6074240915196809, 0.6016673533010477, 0.5913347001907737, 0.5491917572080057, 0.5554023522899891, 0.5240908860294275, 0.5379903632667732, 0.5137387620514694, 0.5050099112212524, 0.49597158884769105, 0.5060156373189756, 0.5012638861508559, 0.47660754465738764, 0.47611258934832457, 0.46943908604286316, 0.4412036551625863, 0.47543581612452446, 0.45000832493530996, 0.4621489679596097, 0.44154006828091574, 0.43186007720557157, 0.424177651836919, 0.4073798032075249, 0.4392262340308401, 0.42560308622158183, 0.4284982181314968, 0.4186966954410005, 0.39682547144838815, 0.4050184950309265, 0.38463147694109423, 0.3939265379296664, 0.38301821612977965, 0.3735942487758558, 0.3885967748087348, 0.3992309221391901, 0.36583620128756295, 0.37021813242978047, 0.35783280031304115, 0.36430840673873044, 0.34923204729239293, 0.36205183350021153, 0.337079690782354, 0.3642375319153011, 0.3422110824970096, 0.33376954423280647, 0.343812478917575, 0.32999196752124477, 0.32299330371198653, 0.31691027072993533, 0.3257780567081204, 0.33088671715504236, 0.316435376946102, 0.3239445098717734, 0.31711892011521153, 0.30301312258482577, 0.29939587131435874, 0.2996100666988732, 0.291884280452875, 0.2851296656868005, 0.30705046460077734, 0.28822318984217976, 0.2817234203067863, 0.26992912864672464, 0.29771570037652345, 0.2683130717705805, 0.2686276067525105, 0.2703447553538659, 0.2787095540471443, 0.2602464110918836, 0.27584673332626386, 0.26586823417541766, 0.25762951386256727, 0.27141996542255814, 0.27824896947189076, 0.2544475081393338, 0.25906050190666113], "accuracy": [0.26878878474235535, 0.228899747133255, 0.32941487431526184, 0.46110156178474426, 0.6124686598777771, 0.6789063811302185, 0.7069079279899597, 0.7231541275978088, 0.741909921169281, 0.7508915662765503, 0.7667415142059326, 0.7726852297782898, 0.7729493975639343, 0.7751948237419128, 0.7887993454933167, 0.796328067779541, 0.8078193068504333, 0.7959318161010742, 0.8086118102073669, 0.8109893202781677, 0.8132346868515015, 0.8090080618858337, 0.8140271902084351, 0.8195747137069702, 0.8239334225654602, 0.8224804997444153, 0.834632158279419, 0.8280280232429504, 0.8329150676727295, 0.8269713521003723, 0.832650899887085, 0.8404437899589539, 0.843481719493866, 0.847840428352356, 0.8366134166717529, 0.8408400416374207, 0.8384625315666199, 0.8449346423149109, 0.852331280708313, 0.845859169960022, 0.8581429123878479, 0.8507462739944458, 0.8582749962806702, 0.8628978729248047, 0.8508783578872681, 0.8475762605667114, 0.8627657890319824, 0.858671247959137, 0.8681812286376953, 0.8621054291725159, 0.8705587387084961, 0.8654074668884277, 0.8739928603172302, 0.8603883385658264, 0.8683133125305176, 0.8733324408531189, 0.8669924736022949, 0.8757099509239197, 0.8794082403182983, 0.8796724081039429, 0.8782195448875427, 0.8762382864952087, 0.874389111995697, 0.8776912093162537, 0.8798044919967651, 0.8825782537460327, 0.8857482671737671, 0.8868049383163452, 0.8886540532112122, 0.8891823887825012, 0.8845595121383667, 0.8919561505317688, 0.893541157245636, 0.8945978283882141, 0.887597382068634, 0.8969752788543701, 0.9000132083892822, 0.897899866104126, 0.8945978283882141, 0.9021265506744385, 0.8936732411384583, 0.8949940800666809, 0.9021265506744385, 0.8988244533538818, 0.8928807377815247, 0.9008057117462158, 0.9038436412811279], "val_loss": [1.902639389038086, 1.9314047949654716, 1.1719774518694197, 0.9344580854688372, 0.6885455335889544, 0.6661431108202253, 0.5533124038151332, 0.5373526981898716, 0.47872224875858854, 0.5333714144570487, 0.45634089197431293, 0.4501417704990932, 0.5008544751576015, 0.4918456588472639, 0.4185566646712167, 0.4263896175793239, 0.4373305014201573, 0.46323377745492117, 0.3990452630179269, 0.4390588573047093, 0.38645364556993755, 0.42787569761276245, 0.3664777789797102, 0.38023475238255094, 0.4208806923457554, 0.3633294701576233, 0.35594253880637033, 0.3778927666800363, 0.4114922114780971, 0.3970150181225368, 0.39263451950890677, 0.35993662050792147, 0.3740816967827933, 0.3858761872564043, 0.37928139311926706, 0.42718057121549335, 0.34487034593309673, 0.3472122039113726, 0.3468343700681414, 0.35013037068503244, 0.33281480414526804, 0.35041703496660503, 0.34177738428115845, 0.33517052446092876, 0.38225144147872925, 0.34996016536440167, 0.32765132188796997, 0.33155311005456106, 0.33176164967673166, 0.3651412810598101, 0.34203224522726877, 0.32878137486321585, 0.34774514607020784, 0.3296186753681728, 0.3203897646495274, 0.31564830030713764, 0.32309307370867046, 0.3122896211487906, 0.34560708488736835, 0.309149478163038, 0.34133743388312204, 0.31982637303216116, 0.32787954807281494, 0.34239254678998676, 0.30707535573414396, 0.31171034063611713, 0.311238305909293, 0.31253686973026823, 0.31232298271996634, 0.32274240255355835, 0.30991545745304655, 0.30831070457186016, 0.2957367811884199, 0.3334092838423593, 0.30648279190063477, 0.2889675327709743, 0.30893408400671823, 0.32783573865890503, 0.31128754786082674, 0.3140774965286255, 0.30254301854542326, 0.32040189845221384, 0.31237844058445524, 0.3036330001694815, 0.3251832979066031, 0.34029064008167814, 0.31282126903533936], "val_accuracy": [0.2253333330154419, 0.12533333897590637, 0.47099998593330383, 0.5393333435058594, 0.6613333225250244, 0.6956666707992554, 0.7403333187103271, 0.7506666779518127, 0.7836666703224182, 0.7506666779518127, 0.8053333163261414, 0.7933333516120911, 0.7620000243186951, 0.7749999761581421, 0.8130000233650208, 0.796999990940094, 0.8046666383743286, 0.8003333210945129, 0.8176666498184204, 0.8033333420753479, 0.8199999928474426, 0.800000011920929, 0.8433333039283752, 0.8403333425521851, 0.8159999847412109, 0.8443333506584167, 0.8450000286102295, 0.8370000123977661, 0.815666675567627, 0.8293333053588867, 0.8240000009536743, 0.846666693687439, 0.8326666951179504, 0.8303333520889282, 0.8289999961853027, 0.8056666851043701, 0.8523333072662354, 0.8539999723434448, 0.8489999771118164, 0.8493333458900452, 0.8600000143051147, 0.8493333458900452, 0.8543333411216736, 0.8613333106040955, 0.8256666660308838, 0.8476666808128357, 0.8633333444595337, 0.859333336353302, 0.8603333234786987, 0.8386666774749756, 0.8586666584014893, 0.8650000095367432, 0.8429999947547913, 0.8576666712760925, 0.8669999837875366, 0.8659999966621399, 0.8640000224113464, 0.8656666874885559, 0.8529999852180481, 0.8686666488647461, 0.8546666502952576, 0.8663333058357239, 0.8650000095367432, 0.8539999723434448, 0.8740000128746033, 0.8740000128746033, 0.8700000047683716, 0.8763333559036255, 0.8703333139419556, 0.8659999966621399, 0.8709999918937683, 0.8730000257492065, 0.8776666522026062, 0.8676666617393494, 0.8793333172798157, 0.8799999952316284, 0.878333330154419, 0.8643333315849304, 0.8726666569709778, 0.8796666860580444, 0.8806666731834412, 0.8809999823570251, 0.8756666779518127, 0.8766666650772095, 0.8686666488647461, 0.859666645526886, 0.875333309173584]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 2, 0, 3, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 1, 2, 2, 2, 2, 1, 2, 3, 0, 0, 2, 1, 2], [99, 54, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [2, 6, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.7914285659790039, "mapping_values": [1, 14, 14, 7, 7, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, grad), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2903308577116186, 1.9569151430806433, 2.0242800469789617, 1.506127733454303, 1.0712934434768184, 0.7820627734393744, 0.728628804670774, 0.666477928835844, 0.6595515781358374, 0.621188074661331, 0.5956140228345047, 0.5624391875010691, 0.5595193508987366, 0.5359733900641563, 0.5368333300776124, 0.5255473109756589, 0.49395159055780125], "accuracy": [0.26865673065185547, 0.34024566411972046, 0.31026285886764526, 0.48170650005340576, 0.6222427487373352, 0.7061154246330261, 0.7289658188819885, 0.739400327205658, 0.7564390301704407, 0.7664773464202881, 0.774270236492157, 0.7895918488502502, 0.791441023349762, 0.7964601516723633, 0.793950617313385, 0.8031964302062988, 0.8138951063156128], "val_loss": [1.9202299799237932, 1.954829216003418, 1.4467806475503104, 1.1150081157684326, 0.7092407601220267, 0.5673740761620658, 0.5086949041911534, 0.5542184625353131, 0.4757739135197231, 0.4479476383754185, 0.4396031754357474, 0.4303651452064514, 0.4209236672946385, 0.48487825053078787, 0.428195059299469, 0.4197537217821394, 0.4256551095417568], "val_accuracy": [0.43566668033599854, 0.10100000351667404, 0.33399999141693115, 0.6259999871253967, 0.6840000152587891, 0.7390000224113464, 0.7670000195503235, 0.746666669845581, 0.781000018119812, 0.7916666865348816, 0.7919999957084656, 0.8090000152587891, 0.8083333373069763, 0.7689999938011169, 0.7976666688919067, 0.800000011920929, 0.8080000281333923]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 2, 0, 1, 3, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.7831428647041321, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2331379713903186, 1.8322987953401937, 1.2956635219671975, 1.0682737976568502, 0.9807947444059215, 0.8969491816325951, 0.8537496033204214, 0.8131659424394712, 0.8233532834330161, 0.7716587664680773, 0.7662477740963074, 0.7256270324816998, 0.7054384999728048, 0.6928584415521195, 0.6989952241110056, 0.6791461909829728, 0.6704951104014352, 0.6603756978007639, 0.6513664565302393, 0.6484524347542489, 0.6472164269656301, 0.6296773053446876, 0.62589581751033], "accuracy": [0.23576806485652924, 0.4391758143901825, 0.5591071248054504, 0.6316206455230713, 0.6468101739883423, 0.6783780455589294, 0.6919825673103333, 0.7104741930961609, 0.7005679607391357, 0.7195879220962524, 0.7172104120254517, 0.7354378700256348, 0.7353057861328125, 0.7456082701683044, 0.7429665923118591, 0.7547219395637512, 0.7528728246688843, 0.7613261342048645, 0.7637035846710205, 0.7556465268135071, 0.7600052952766418, 0.7677981853485107, 0.7675340175628662], "val_loss": [1.7584971700395857, 1.1242570877075195, 0.8363284894398281, 0.7140181575502668, 0.6478253432682582, 0.6470061881201608, 0.6079119273594448, 0.5949676547731672, 0.6132369552339826, 0.5562325716018677, 0.5343527282987323, 0.5191567625318255, 0.5197375331606183, 0.4997547183718, 0.5013541323798043, 0.49185815879276823, 0.4793529680797032, 0.47376436846596853, 0.4954210179192679, 0.48453153882707867, 0.4757817132132394, 0.473035386630467, 0.4767505781991141], "val_accuracy": [0.5086666941642761, 0.6340000033378601, 0.6800000071525574, 0.6883333325386047, 0.731333315372467, 0.7066666483879089, 0.7463333606719971, 0.734666645526886, 0.7166666388511658, 0.7453333139419556, 0.7603333592414856, 0.7726666927337646, 0.7676666378974915, 0.7766666412353516, 0.7796666622161865, 0.7789999842643738, 0.7756666541099548, 0.7910000085830688, 0.7616666555404663, 0.7836666703224182, 0.7889999747276306, 0.7883333563804626, 0.7803333401679993]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 2, 0, 1, 3, 0, 4, 3, 1, 8, 2, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [2, 2, 1, 2, 2, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 92, 62, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.6859999895095825, "mapping_values": [1, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad)), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0697309965974604, 1.1933854320313495, 0.8899610150428795, 0.7955366113812239, 0.7281985875244201, 0.643465675760994, 0.5907072726572666, 0.5721738790366723, 0.5320083413259811, 0.5311276811996645, 0.5251130143318509, 0.4949524099989621, 0.49779179249819416, 0.484558089384707, 0.46907385634613896, 0.4747600074512548, 0.4569088502480385], "accuracy": [0.30762118101119995, 0.5950337052345276, 0.6724342703819275, 0.7034738063812256, 0.7277770638465881, 0.7584202885627747, 0.7744023203849792, 0.7808743715286255, 0.8000264167785645, 0.7915731072425842, 0.8000264167785645, 0.8100647330284119, 0.8149517774581909, 0.8175934553146362, 0.8207634687423706, 0.8157442808151245, 0.8249900937080383], "val_loss": [0.9708762850080218, 0.7559047426496234, 0.6042649405343192, 0.5671607426234654, 0.4926912614277431, 0.45928878443581717, 0.4407550096511841, 0.4100700872285025, 0.4218373383794512, 0.4022552030427115, 0.4071252771786281, 0.3946259617805481, 0.39314872877938406, 0.3971003634589059, 0.4058776838438852, 0.4175512875829424, 0.4093907134873526], "val_accuracy": [0.6463333368301392, 0.6983333230018616, 0.734000027179718, 0.7490000128746033, 0.7766666412353516, 0.8016666769981384, 0.7946666479110718, 0.8133333325386047, 0.8106666803359985, 0.8293333053588867, 0.8309999704360962, 0.8420000076293945, 0.8353333473205566, 0.8393333554267883, 0.8383333086967468, 0.8416666388511658, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [9, 4, 2, 2, 0, 3, 2, 0, 4, 2, 1, 9, 0, 8, 4, 5, 0, 3, 9, 8, 3, 7, 9], [1, 2, 2, 1, 2, 2, 1, 2, 0, 0, 0, 2, 1, 2], [99, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.677142858505249, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0697314416129338, 1.1933299466571976, 0.8896624267124906, 0.7956159947539175, 0.7292551744836054, 0.6442103916785311, 0.5903270909531462, 0.5704086690042879, 0.5332278409268422, 0.5295191182239637, 0.5231178992806393, 0.5032662286765981, 0.49477527309575686, 0.4847487022596154, 0.4846883162515605, 0.487221879576333, 0.4856287382140592, 0.4749468182410546, 0.4784563937758442, 0.46622412470211805], "accuracy": [0.30762118101119995, 0.5950337052345276, 0.6715096831321716, 0.703209638595581, 0.7272487282752991, 0.7572315335273743, 0.7741381525993347, 0.780610203742981, 0.798309326171875, 0.7946110367774963, 0.8016114234924316, 0.8074230551719666, 0.8152159452438354, 0.8211596608161926, 0.8177255392074585, 0.8162726163864136, 0.8216879963874817, 0.8189142942428589, 0.8189142942428589, 0.8241975903511047], "val_loss": [0.9708765574863979, 0.756135276385716, 0.6038515567779541, 0.5680020366396222, 0.4928081716809954, 0.45743601662772043, 0.4381030968257359, 0.41172352858952116, 0.42037384850638254, 0.4002720628465925, 0.42420134374073576, 0.3881941778319223, 0.39830210379191805, 0.3957042864390782, 0.41606846026011873, 0.4211281197411673, 0.44234762872968403, 0.41139534541538786, 0.42704348053250996, 0.4398227504321507], "val_accuracy": [0.6463333368301392, 0.6993333101272583, 0.734666645526886, 0.746999979019165, 0.7760000228881836, 0.7996666431427002, 0.796999990940094, 0.8096666932106018, 0.8086666464805603, 0.8326666951179504, 0.8273333311080933, 0.8330000042915344, 0.8356666564941406, 0.8450000286102295, 0.8483333587646484, 0.8346666693687439, 0.8273333311080933, 0.8336666822433472, 0.8320000171661377, 0.8216666579246521]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 3, 2, 3, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.6608571410179138, "mapping_values": [1, 13, 13, 8, 5, 0, 1, 1, 0, 1, 0, 5, 3, 3, 0, 1, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.negative(tf.math.square(grad))), grad), tf.math.add(tf.math.square(tf.math.add(alpha, grad)), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.069731500076029, 1.1933185404648539, 0.8895853184406641, 0.7957652397773616, 0.7294112826933588, 0.6450350884559243, 0.5918928931937509, 0.5724672127976126, 0.5355536519591488, 0.528906374036077, 0.5218041049034337, 0.5052407719652493, 0.5177503250585556, 0.5005266992974322, 0.48190383310598894, 0.4803258827798292, 0.4851195681576936, 0.5270415875638056, 0.5244245966663922, 0.4911929443567153, 0.46634641672720634, 0.4910686751319559, 0.523329621316451, 0.5205959237530373, 0.5496854801235292], "accuracy": [0.30762118101119995, 0.5950337052345276, 0.6713775992393494, 0.7034738063812256, 0.7263241410255432, 0.7572315335273743, 0.7733456492424011, 0.78113853931427, 0.8005547523498535, 0.7961959838867188, 0.8038568496704102, 0.8090080618858337, 0.8123101592063904, 0.8113855719566345, 0.8189142942428589, 0.8178576231002808, 0.8063663840293884, 0.8043851256370544, 0.7971205711364746, 0.8178576231002808, 0.821820080280304, 0.8171972036361694, 0.8078193068504333, 0.8075551390647888, 0.798309326171875], "val_loss": [0.9708783626556396, 0.7560849189758301, 0.6040750401360648, 0.567804251398359, 0.4945707491465977, 0.4581588166100638, 0.4401890124593462, 0.4137908901487078, 0.41958439350128174, 0.4064417651721409, 0.4032563992909023, 0.40472460644585745, 0.43754306861332487, 0.41454511880874634, 0.3998122981616429, 0.41655492782592773, 0.4403477225984846, 0.4534666878836496, 0.4188055992126465, 0.4268511618886675, 0.4041099548339844, 0.41965192556381226, 0.4371058259691511, 0.5193699087415423, 0.4559773121561323], "val_accuracy": [0.6463333368301392, 0.6993333101272583, 0.7353333234786987, 0.746666669845581, 0.7756666541099548, 0.7990000247955322, 0.7950000166893005, 0.812333345413208, 0.815666675567627, 0.8286666870117188, 0.8399999737739563, 0.8353333473205566, 0.8243333101272583, 0.8360000252723694, 0.8423333168029785, 0.843666672706604, 0.8373333215713501, 0.8209999799728394, 0.8246666789054871, 0.8443333506584167, 0.8370000123977661, 0.8349999785423279, 0.831333339214325, 0.8186666369438171, 0.7940000295639038]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 8, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [3, 9, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [6, 4, 1, 2, 4, 1, 3, 0, 4, 3, 1, 5, 8, 0, 4, 5, 0, 3, 9, 8, 3, 7, 9], [2, 1, 2, 2, 2, 2, 1, 2, 3, 0, 0, 2, 1, 2], [99, 92, 62, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 14, 11, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 2, 1, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.negative(alpha)))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [511445.58809262887, 9600282.255976753, 45258372.42636376, 124163863.3353586, 268307684.39149386, 491381140.19495445], "accuracy": [0.1018359512090683, 0.09628847241401672, 0.10038304328918457, 0.09747721254825592, 0.09694888442754745, 0.10460969805717468], "val_loss": [1939165.642857143, 15447834.857142856, 52064731.428571425, 123328324.57142857, 240777536.0, 415950646.85714287], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 6, 2, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [3, 2, 2, 2, 2, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [5, 4, 1, 3], [2, 2], [76], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [6, 4, 2, 2, 0, 1, 3, 0, 4, 3, 2, 8, 2, 0, 0, 5, 0, 3, 9, 8, 3, 7, 9], [2, 1, 2, 2, 2, 1, 1, 2, 3, 2, 0, 2, 1, 2], [99, 21, 62, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 3, 0, 1, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(beta))", "other_info": {"loss": [6.29658169079419, 1.0158291211479973e+29, 333951.24691488285, 84433322.06841896, 21566219408.737553, 5549521769502.432, 1406065801137313.0, 3.599680546615333e+17, 9.579930839064945e+19, 2.3661389529863804e+22, 6.044319267007923e+24, 1.5896452525930223e+27], "accuracy": [0.08189142495393753, 0.10091137140989304, 0.09681680053472519, 0.10408136248588562, 0.09760929644107819, 0.10210011899471283, 0.10091137140989304, 0.09840179979801178, 0.09351472556591034, 0.09642054885625839, 0.10276053100824356, 0.09972262382507324], "val_loss": [558.950701032366, 1468.110316685268, 468377.04464285716, 108445035.42857143, 25551605760.0, 5708590350336.0, 1730873891075803.5, 4.070160363219471e+17, 1.1016254797194027e+20, 3.018668447645681e+22, 7.96876400846311e+24, 1.9176153211136034e+27], "val_accuracy": [0.09799999743700027, 0.09966666996479034, 0.09966666996479034, 0.10100000351667404, 0.09799999743700027, 0.10100000351667404, 0.10400000214576721, 0.09866666793823242, 0.10100000351667404, 0.10100000351667404, 0.09966666996479034, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [6, 4, 2, 2, 0, 9, 3, 6, 4, 3, 1, 8, 2, 0, 4, 5, 3, 3, 9, 8, 3, 7, 9], [2, 2, 2, 0, 1, 0, 2, 2, 3, 0, 0, 2, 1, 2], [87, 15, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.4147795360511273, 5.851027665877666e+27, 2.310521075281847, 2.311728392263303, 2.313207845331388, 2.3149443637614615, 2.317029581692209], "accuracy": [0.03354907035827637, 0.08255184441804886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.60921573638916, 1.9802275385175432, 1.9812041010175432, 1.9823993955339705, 1.9837990488324846, 1.9854703630719865, 1.9874334335327148], "val_accuracy": [0.013333333656191826, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 3, 8, 7, 6, 4, 2, 5, 5, 2, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [71, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 2, 8, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 3, 2, 2, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 2, 2, 2, 0, 3, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 2, 2, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [42], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302672971430204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 4, 9, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 1, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [99, 92, 62, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 5, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [14, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07026813179254532, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 2, 2, 2, 0, 3, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [1, 2, 2, 2, 2, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [68], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 3, 8, 7, 6, 4, 2, 5, 5, 2, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 2, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 8, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.302051677616942, 2.3030631866248497, 2.301846469665767, 2.3018776201505893, 2.303205890583718, 2.301582619057765], "accuracy": [0.09008057415485382, 0.08730682730674744, 0.0936468094587326, 0.08915598690509796, 0.08519349992275238, 0.0874389111995697], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [6, 4, 2, 6, 0, 1, 3, 0, 4, 8, 1, 8, 2, 0, 4, 5, 0, 8, 9, 8, 3, 7, 9], [2, 1, 2, 2, 2, 2, 1, 2, 3, 0, 0, 2, 1, 2], [58, 92, 62, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [5, 6, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), grad)), tf.math.add(alpha, tf.math.negative(alpha))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(beta))", "other_info": {"loss": [2.302051677616942, 2.3030631866248497, 2.301846469665767, 2.3018776201505893, 2.303205890583718, 2.301582619057765], "accuracy": [0.09008057415485382, 0.08730682730674744, 0.0936468094587326, 0.08915598690509796, 0.08519349992275238, 0.0874389111995697], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]