[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.1332814957660657, 1.7400869394510712, 1.4067437019582438, 1.1161175640173213, 1.0263669380123244, 0.8592533506517004, 0.7949923082995235, 0.738644145144731, 0.7402672673402256, 0.6851526394401796, 0.685962322145295, 0.6241020348644873, 0.6250427429938377, 0.612890462707834, 0.5694937345578828, 0.5976114031220188, 0.5877468142259422, 0.547583346778785, 0.5279544544234142, 0.5142987259209605, 0.509782688795788, 0.4985545016062526, 0.49739077462496273, 0.4881889013141264, 0.48012330939961523, 0.4640366925917376, 0.4521033012863825, 0.45768935507818564, 0.44795264228302584, 0.4354272808900772, 0.43278671888674664, 0.4137644106213443, 0.4210534404651789, 0.40615910504236197, 0.4013946425362097, 0.3918673704761981], "accuracy": [0.3035266101360321, 0.4447232782840729, 0.5267468094825745, 0.6057323813438416, 0.6222427487373352, 0.6800950765609741, 0.6997754573822021, 0.7185312509536743, 0.7209087014198303, 0.7404569983482361, 0.7351737022399902, 0.7652885913848877, 0.7629110813140869, 0.7697794437408447, 0.7860256433486938, 0.7753269076347351, 0.7765156626701355, 0.7969884872436523, 0.800818920135498, 0.8025360107421875, 0.8045172095298767, 0.8136309385299683, 0.8098005652427673, 0.8220842480659485, 0.8216879963874817, 0.826310932636261, 0.8296129703521729, 0.830669641494751, 0.8381983637809753, 0.841500461101532, 0.8391229510307312, 0.8475762605667114, 0.848368763923645, 0.8485008478164673, 0.8514066934585571, 0.8536521196365356], "val_loss": [1.4592132568359375, 1.3803826400211878, 0.875678403036935, 0.8472401414598737, 0.7606704064777919, 0.6264728818620954, 0.5918442181178502, 0.6132868698665074, 0.5851328883852277, 0.5142857687813895, 0.48077103069850374, 0.5471094165529523, 0.5066813230514526, 0.44933749948229107, 0.4196511507034302, 0.4565683432987758, 0.4240967461041042, 0.41394495964050293, 0.4080983740942819, 0.38691234588623047, 0.39554128476551603, 0.4026978015899658, 0.3867018478257315, 0.37256596769605366, 0.37901395559310913, 0.39484918117523193, 0.3673263021877834, 0.3761979767254421, 0.3501050727707999, 0.3435742940221514, 0.33507231303623747, 0.37045696803501676, 0.3557713287217276, 0.3721853494644165, 0.34463290657315937, 0.35357325417654856], "val_accuracy": [0.512666642665863, 0.5239999890327454, 0.6576666831970215, 0.6133333444595337, 0.6616666913032532, 0.7316666841506958, 0.7136666774749756, 0.7310000061988831, 0.7266666889190674, 0.7513333559036255, 0.7789999842643738, 0.7459999918937683, 0.7739999890327454, 0.7976666688919067, 0.8159999847412109, 0.7786666750907898, 0.7993333339691162, 0.8133333325386047, 0.8166666626930237, 0.8323333263397217, 0.8230000138282776, 0.8140000104904175, 0.8199999928474426, 0.8420000076293945, 0.8360000252723694, 0.8299999833106995, 0.8399999737739563, 0.8403333425521851, 0.8496666550636292, 0.8510000109672546, 0.8566666841506958, 0.8360000252723694, 0.8460000157356262, 0.8336666822433472, 0.8519999980926514, 0.843999981880188]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 2, 5, 8, 6, 2, 0, 4, 5, 2, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 3, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 0, 0, 2, 1, 0, 1, 1, 0, 1, 2, 2, 1, 2, 2, 0, 0, 3, 0, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 38, 39, 33, 75, 29, 81, 88, 45, 77, 73, 0, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.7114285826683044, "mapping_values": [1, 69, 69, 44, 25, 15, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 65, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))), alpha)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, grad), alpha))))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.negative(grad))), tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), grad)))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3007427364087865, 2.2948848806619804, 2.290225769912625, 2.2839840888788103, 2.277824276143282, 2.273602109748327, 2.2662671441179083, 2.2628614199616575, 2.2537193812903253, 2.249478849579299, 2.2444629234613256, 2.2359852783904492, 2.230185465459354, 2.2208309259869403, 2.213459220277068, 2.2056586238544664, 2.19759834818852, 2.1866096505210573, 2.1770271069621523, 2.164745723094293, 2.1545154962714763, 2.139942609654473, 2.1275499819953443, 2.1157703650011883, 2.0994475310457505, 2.0878164846316745, 2.0645809033133995, 2.049304224039979, 2.031468716909731, 2.0092847790968116, 1.9914086717955268, 1.968366067186874, 1.943749137888999, 1.9208588251867913, 1.8956904875336227, 1.8709056780653512, 1.841509462284642, 1.8117684123066076, 1.7912187912303223, 1.7628567405364863, 1.736841926564, 1.7004409425246985, 1.6749038885550145, 1.6491751888755322, 1.6252288722784103, 1.5957407852788061, 1.5746670270466834, 1.5449618490821477, 1.5216195148924763, 1.492939553051703, 1.4714013237790062, 1.454744937743934, 1.433029399981289, 1.4157984703129718, 1.384557239745728, 1.3740024145300425, 1.3580990176804864, 1.3411402100065617, 1.323455853374674, 1.3039873318822708, 1.2813253216755436, 1.2760558323286402, 1.263850613513312, 1.2523485739091604, 1.2421156768675383, 1.2302203355700254, 1.2185934261481493, 1.212785489838499, 1.1990072104468275, 1.179148955541028, 1.1739063727747039, 1.1535404927663484, 1.158415848836293, 1.1470910045118412, 1.1398294295428246, 1.120197381908395, 1.1121912722605851, 1.1110967062152908, 1.1013518642078632, 1.094024761934574, 1.0821005736422686, 1.0785804754077577, 1.0723715416586175, 1.046013360608602, 1.055138267105313, 1.0525040607631262, 1.0465772525745534, 1.0388426831558695, 1.0260915205447492, 1.0175448591997909, 1.0181148753048421, 1.014371002087299, 1.0109227594052639, 1.0054162080655433, 0.9861511963390954, 0.9920687133987834, 0.9863115274564481, 0.9962185032379358, 0.9801008698096633, 0.9818526648605945], "accuracy": [0.09589222073554993, 0.107647605240345, 0.12191256135702133, 0.1368379294872284, 0.15757495164871216, 0.16919825971126556, 0.187689870595932, 0.19653943181037903, 0.22440892457962036, 0.22652225196361542, 0.23695680499076843, 0.25637298822402954, 0.2584863305091858, 0.27922335267066956, 0.2945449650287628, 0.30207371711730957, 0.31026285886764526, 0.32241448760032654, 0.33139610290527344, 0.33958524465560913, 0.3485668897628784, 0.36745476722717285, 0.36705851554870605, 0.37141725420951843, 0.3819838762283325, 0.37670058012008667, 0.4002113342285156, 0.4119667112827301, 0.4017963409423828, 0.4181746244430542, 0.4173821210861206, 0.4243825078010559, 0.4348170757293701, 0.43666622042655945, 0.4410249590873718, 0.4501386880874634, 0.45066702365875244, 0.46585655212402344, 0.4600449204444885, 0.4702152907848358, 0.4687623679637909, 0.4888390004634857, 0.48712190985679626, 0.49465063214302063, 0.49491479992866516, 0.49953770637512207, 0.5120856165885925, 0.5094439387321472, 0.5115572810173035, 0.5247655510902405, 0.5332188606262207, 0.5295205116271973, 0.5386342406272888, 0.5361247062683105, 0.5484083890914917, 0.5414080023765564, 0.5584467053413391, 0.5535596609115601, 0.559371292591095, 0.5630695819854736, 0.5715228915214539, 0.5680887699127197, 0.5811649560928345, 0.5762779116630554, 0.5827499628067017, 0.5765420794487, 0.583938717842102, 0.5884295105934143, 0.5851274728775024, 0.5993924140930176, 0.5954299569129944, 0.6022982597351074, 0.6046757102012634, 0.6033549308776855, 0.6053361296653748, 0.6106194853782654, 0.6126006841659546, 0.6108836531639099, 0.6207898855209351, 0.62660151720047, 0.6219785809516907, 0.6229031682014465, 0.6213181614875793, 0.6436402201652527, 0.635451078414917, 0.6297714710235596, 0.6330735683441162, 0.6371681690216064, 0.6446968913078308, 0.646149754524231, 0.6490556001663208, 0.6427156329154968, 0.6470743417739868, 0.6435081362724304, 0.6609430909156799, 0.6563201546669006, 0.6543388962745667, 0.6472064256668091, 0.6579051613807678, 0.657508909702301], "val_loss": [1.9659357752118791, 1.9609074592590332, 1.9559202875409807, 1.950901985168457, 1.9458120891026087, 1.940674100603376, 1.9353696959359306, 1.9299673352922713, 1.9243461745125907, 1.9184762409755163, 1.91242892401559, 1.906001363481794, 1.8992936270577567, 1.8920567376273019, 1.8844030244009835, 1.8762711797441756, 1.8676165853227888, 1.858365535736084, 1.8484867640904017, 1.8378652845110213, 1.8266349520002092, 1.814464841570173, 1.8016886029924666, 1.7881701333182198, 1.773700782230922, 1.758469581604004, 1.741997173854283, 1.7247450692313058, 1.7064461026872908, 1.6870957442692347, 1.6667505672999792, 1.6454810414995467, 1.6229211262294225, 1.5994807652064733, 1.575228112084525, 1.5501141207558768, 1.5242962156023299, 1.4976987838745117, 1.471177612032209, 1.4438680921282088, 1.4165376254490443, 1.3885305609021867, 1.3610125269208635, 1.333613429750715, 1.3064584050859724, 1.2798981325966972, 1.253765617098127, 1.2283947467803955, 1.2037466594151087, 1.1797238418034144, 1.1565522125789098, 1.1347310883658273, 1.1132999147687639, 1.0929952348981584, 1.0730227742876326, 1.0546417236328125, 1.037116868155343, 1.0201976639883858, 1.0039867333003454, 0.9886638436998639, 0.9738918031964984, 0.9597782407488141, 0.9465738024030413, 0.9339398315974644, 0.9219808919089181, 0.9104835646493095, 0.8995663438524518, 0.8894151278904506, 0.8795388426099505, 0.8698110580444336, 0.8606706176485334, 0.8516198907579694, 0.842882479940142, 0.8348640033176967, 0.827084115573338, 0.8197666917528424, 0.81212660244533, 0.8054915836879185, 0.7991090331758771, 0.7930729729788644, 0.7866044555391584, 0.7806404318128314, 0.7751547949654716, 0.7692349808556693, 0.7639718226024083, 0.7587417364120483, 0.7539122104644775, 0.7493398189544678, 0.7449579579489571, 0.740148493221828, 0.7359412397657122, 0.731660110609872, 0.7275275162288121, 0.723768949508667, 0.7198594467980521, 0.7161792857306344, 0.7129552023751395, 0.7097627435411725, 0.7062561682292393, 0.7030092818396432], "val_accuracy": [0.07000000029802322, 0.11999999731779099, 0.16366666555404663, 0.2096666693687439, 0.25, 0.2853333353996277, 0.31033334136009216, 0.3323333263397217, 0.3473333418369293, 0.3606666624546051, 0.367333322763443, 0.3776666522026062, 0.3843333423137665, 0.39266666769981384, 0.4036666750907898, 0.4126666784286499, 0.41966667771339417, 0.43033334612846375, 0.43966665863990784, 0.4466666579246521, 0.45366665720939636, 0.4596666693687439, 0.46533334255218506, 0.46966665983200073, 0.476666659116745, 0.48399999737739563, 0.492333322763443, 0.49799999594688416, 0.5036666393280029, 0.5099999904632568, 0.5173333287239075, 0.5216666460037231, 0.5286666750907898, 0.534333348274231, 0.5419999957084656, 0.5456666946411133, 0.5516666769981384, 0.5586666464805603, 0.5619999766349792, 0.565666675567627, 0.5716666579246521, 0.5796666741371155, 0.5863333344459534, 0.597000002861023, 0.5996666550636292, 0.6036666631698608, 0.6056666374206543, 0.6133333444595337, 0.6206666827201843, 0.628333330154419, 0.6323333382606506, 0.6366666555404663, 0.6423333287239075, 0.6456666588783264, 0.6526666879653931, 0.6570000052452087, 0.6603333353996277, 0.6639999747276306, 0.6653333306312561, 0.6693333387374878, 0.6706666946411133, 0.6740000247955322, 0.6756666898727417, 0.6763333082199097, 0.6759999990463257, 0.6783333420753479, 0.6783333420753479, 0.6823333501815796, 0.6833333373069763, 0.6846666932106018, 0.6853333115577698, 0.6853333115577698, 0.6859999895095825, 0.6856666803359985, 0.6869999766349792, 0.6913333535194397, 0.6919999718666077, 0.6926666498184204, 0.6926666498184204, 0.6936666369438171, 0.6943333148956299, 0.6949999928474426, 0.6963333487510681, 0.6970000267028809, 0.6990000009536743, 0.6996666789054871, 0.7023333311080933, 0.703000009059906, 0.7043333053588867, 0.7049999833106995, 0.7039999961853027, 0.7039999961853027, 0.7056666612625122, 0.7106666564941406, 0.7099999785423279, 0.7093333601951599, 0.7110000252723694, 0.7126666903495789, 0.7139999866485596, 0.7160000205039978]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 1, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.7114285826683044, "mapping_values": [1, 71, 71, 47, 24, 14, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha)))))))))), tf.math.square(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), grad)))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300742799390844, 2.2948848806619804, 2.290225769912625, 2.2839840888788103, 2.277824276143282, 2.273602141239356, 2.2662671441179083, 2.2628614334713086, 2.2537194307627315, 2.2494788810703277, 2.2444630809164696, 2.235985273918723, 2.230185478969005, 2.220830795551099, 2.213459022387443, 2.2056579671090604, 2.197597569950725, 2.18660893526532, 2.1770256719789516, 2.1647439911821813, 2.1545137868124686, 2.139941390542275, 2.127549217267201, 2.11577012201641, 2.099447103680999, 2.0878172898887724, 2.0645820999724944, 2.0493057265714363, 2.0314701474212056, 2.0092861398241664, 1.9914103294990286, 1.9683692968280608, 1.943753676879927, 1.9208630065970873, 1.8956944710070573, 1.8709085863248436, 1.8415124289599927, 1.8117705265827908, 1.7912191960474977, 1.7628575953132268, 1.7368434896054694, 1.7004425371989063, 1.6749059488398288, 1.6491778948681466, 1.625231947030972, 1.5957431199449543, 1.5746696021310909, 1.5449648520509092, 1.5216203181971302, 1.4929399218588866, 1.47140029817918, 1.4547445646067336, 1.4330285046755944, 1.4157960970703134, 1.38455653319726, 1.3739996818960178, 1.3580958283793074, 1.3411395152514842, 1.3234529834555093, 1.303986861610992, 1.2813243408874513, 1.2760531532136188, 1.2638479436723988, 1.2523493158535446, 1.2421149525266393, 1.230216993332665, 1.2185931676068027, 1.2127855169050383, 1.199007363477482, 1.1791470729285982, 1.1739043527354245, 1.1535406997411353, 1.1584151336750288, 1.1470909326808043, 1.139830088901986, 1.120196684350616, 1.1121889124803412, 1.1110949655486735, 1.1013536910181898, 1.0940231695434657, 1.0820994731725215, 1.07857890323389, 1.0723685298408767, 1.0460116147144738, 1.055136764337673, 1.0525012264760605, 1.0465748565481354, 1.038839529959155, 1.0260876528087184, 1.017542648261895, 1.0181129770886077, 1.014364026729945, 1.0109187371585, 1.0054134718415413, 0.9861497814314256, 0.9920646769102018, 0.9863054851940232, 0.9962161191938544, 0.9800961868968606, 0.9818468055531743], "accuracy": [0.09589222073554993, 0.107647605240345, 0.12191256135702133, 0.1368379294872284, 0.15757495164871216, 0.16919825971126556, 0.187689870595932, 0.19653943181037903, 0.22440892457962036, 0.22652225196361542, 0.23695680499076843, 0.25637298822402954, 0.2584863305091858, 0.2793554365634918, 0.2945449650287628, 0.30220577120780945, 0.31026285886764526, 0.32241448760032654, 0.33139610290527344, 0.33958524465560913, 0.3485668897628784, 0.36745476722717285, 0.36705851554870605, 0.37141725420951843, 0.3819838762283325, 0.37670058012008667, 0.4002113342285156, 0.4119667112827301, 0.4017963409423828, 0.4181746244430542, 0.4173821210861206, 0.42425042390823364, 0.4348170757293701, 0.4365341365337372, 0.4410249590873718, 0.4501386880874634, 0.45066702365875244, 0.46585655212402344, 0.4600449204444885, 0.4702152907848358, 0.4687623679637909, 0.4888390004634857, 0.48712190985679626, 0.49465063214302063, 0.49491479992866516, 0.49953770637512207, 0.5120856165885925, 0.5094439387321472, 0.5115572810173035, 0.5246334671974182, 0.533350944519043, 0.5295205116271973, 0.5386342406272888, 0.5361247062683105, 0.5484083890914917, 0.5415400862693787, 0.5584467053413391, 0.5535596609115601, 0.559371292591095, 0.5630695819854736, 0.5715228915214539, 0.5680887699127197, 0.5811649560928345, 0.5761458277702332, 0.5827499628067017, 0.5765420794487, 0.5836745500564575, 0.588297426700592, 0.5851274728775024, 0.5993924140930176, 0.5952978730201721, 0.6022982597351074, 0.6046757102012634, 0.6033549308776855, 0.6053361296653748, 0.6104874014854431, 0.6126006841659546, 0.6108836531639099, 0.6207898855209351, 0.6264694333076477, 0.6221106648445129, 0.6229031682014465, 0.6214502453804016, 0.6436402201652527, 0.635451078414917, 0.6300356388092041, 0.6330735683441162, 0.6371681690216064, 0.6446968913078308, 0.646149754524231, 0.6490556001663208, 0.6427156329154968, 0.6470743417739868, 0.6435081362724304, 0.6609430909156799, 0.6561880707740784, 0.6543388962745667, 0.6473385095596313, 0.6580372452735901, 0.657508909702301], "val_loss": [1.9659357752118791, 1.9609074592590332, 1.9559202875409807, 1.950901985168457, 1.9458120891026087, 1.940674100603376, 1.9353697640555245, 1.929967267172677, 1.9243461745125907, 1.9184762409755163, 1.91242892401559, 1.906001363481794, 1.8992935589381628, 1.892056601388114, 1.8844024794442313, 1.876270089830671, 1.8676156997680664, 1.8583643095833915, 1.848484992980957, 1.8378634452819824, 1.8266335214887346, 1.8144639560154505, 1.8016883305140905, 1.7881695883614677, 1.7737015315464564, 1.7584706715175085, 1.7419985362461634, 1.7247467041015625, 1.7064473288399833, 1.6870973110198975, 1.6667526108878, 1.6454855033329554, 1.6229253837040492, 1.599485192980085, 1.5752310071672713, 1.550117083958217, 1.5242980207715715, 1.4977006571633475, 1.4711789744240897, 1.4438697951180595, 1.4165398393358504, 1.3885340350014823, 1.3610167162758964, 1.3336177553449358, 1.3064635140555245, 1.2799032415662492, 1.2537720203399658, 1.228398016520909, 1.2037498950958252, 1.1797253744942802, 1.1565525531768799, 1.1347300665719169, 1.1132981095995222, 1.0929921013968331, 1.07301926612854, 1.0546406677791051, 1.037113870893206, 1.0201947348458427, 1.0039838722773962, 0.9886624472481864, 0.9738899980272565, 0.9597771848951068, 0.946572984967913, 0.9339395591190883, 0.9219789164406913, 0.9104830537523542, 0.8995646068028041, 0.889411211013794, 0.8795341764177594, 0.8698080607822963, 0.8606680972235543, 0.8516184943062919, 0.8428802830832345, 0.8348618405205863, 0.827080488204956, 0.8197622469493321, 0.812123009136745, 0.8054883309773037, 0.799108488219125, 0.7930740799222674, 0.786606890814645, 0.780640687261309, 0.7751544373376029, 0.7692315919058663, 0.7639679057257516, 0.7587382282529559, 0.7539106777736119, 0.7493351697921753, 0.7449550458363124, 0.7401458365576608, 0.735939451626369, 0.7316583905901227, 0.7275255407605853, 0.7237662758146014, 0.719857999256679, 0.7161767482757568, 0.7129551001957485, 0.7097651447568621, 0.7062575476510184, 0.7030081748962402], "val_accuracy": [0.07000000029802322, 0.11999999731779099, 0.16366666555404663, 0.2096666693687439, 0.25, 0.2853333353996277, 0.31033334136009216, 0.3323333263397217, 0.3473333418369293, 0.3606666624546051, 0.367333322763443, 0.3776666522026062, 0.3843333423137665, 0.39266666769981384, 0.4036666750907898, 0.4129999876022339, 0.41966667771339417, 0.43033334612846375, 0.43966665863990784, 0.4466666579246521, 0.45366665720939636, 0.4596666693687439, 0.46533334255218506, 0.46966665983200073, 0.476666659116745, 0.48399999737739563, 0.492333322763443, 0.49799999594688416, 0.5036666393280029, 0.5099999904632568, 0.5173333287239075, 0.5216666460037231, 0.5286666750907898, 0.534333348274231, 0.5419999957084656, 0.5450000166893005, 0.5516666769981384, 0.5586666464805603, 0.5619999766349792, 0.565666675567627, 0.5716666579246521, 0.5796666741371155, 0.5863333344459534, 0.597000002861023, 0.5996666550636292, 0.6033333539962769, 0.6056666374206543, 0.6133333444595337, 0.6206666827201843, 0.628333330154419, 0.6323333382606506, 0.6370000243186951, 0.6423333287239075, 0.6456666588783264, 0.6526666879653931, 0.6573333144187927, 0.6603333353996277, 0.6636666655540466, 0.6653333306312561, 0.6693333387374878, 0.6706666946411133, 0.6743333339691162, 0.6756666898727417, 0.6763333082199097, 0.6759999990463257, 0.6783333420753479, 0.6783333420753479, 0.6823333501815796, 0.6833333373069763, 0.6846666932106018, 0.6853333115577698, 0.6853333115577698, 0.6859999895095825, 0.6856666803359985, 0.6869999766349792, 0.6913333535194397, 0.6919999718666077, 0.6926666498184204, 0.6926666498184204, 0.6936666369438171, 0.6943333148956299, 0.6949999928474426, 0.6963333487510681, 0.6970000267028809, 0.6990000009536743, 0.6996666789054871, 0.7020000219345093, 0.703000009059906, 0.7043333053588867, 0.7049999833106995, 0.7039999961853027, 0.7039999961853027, 0.7056666612625122, 0.7106666564941406, 0.7099999785423279, 0.7093333601951599, 0.7110000252723694, 0.7126666903495789, 0.7139999866485596, 0.7160000205039978]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.7114285826683044, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300742799390844, 2.2948848806619804, 2.290225769912625, 2.2839840888788103, 2.277824339125339, 2.273602159220734, 2.266267207099966, 2.2628614199616575, 2.253719444272383, 2.2494788810703277, 2.2444630809164696, 2.235985341372507, 2.230185429496599, 2.220830750550419, 2.2134588154598926, 2.205657746671859, 2.1975972055680306, 2.1866086473743347, 2.1770258609251245, 2.1647441486373253, 2.154513849794526, 2.1399411161609407, 2.1275484660487085, 2.115769303344134, 2.099446721316927, 2.087816498141326, 2.064581308225048, 2.049304894295036, 2.0314693241827304, 2.009285143385033, 1.9914093622678244, 1.968368091225514, 1.9437524847870316, 1.9208626107233642, 1.8956934925965376, 1.8709083321135136, 1.8415119926517887, 1.8117708235117014, 1.7912190363564906, 1.762857464830149, 1.7368428350959266, 1.7004425440009685, 1.6749044914035245, 1.6491764485166844, 1.6252293401721163, 1.595741583686605, 1.5746675826114136, 1.5449641680027815, 1.5216201692130729, 1.492940875627676, 1.4714025430801507, 1.4547486936946854, 1.433031802195694, 1.4158001209309923, 1.3845593535967822, 1.3740009124709505, 1.358099316750787, 1.3411418228510932, 1.3234518975346174, 1.3039894328849853, 1.2813254272807086, 1.2760529973802628, 1.263851283815606, 1.2523503037743549, 1.2421129937531563, 1.2302159020897891, 1.2185953831581344, 1.2127837897008358, 1.1990061351384123, 1.1791491197037611, 1.173900510924383, 1.1535382954325768, 1.158408224007961, 1.1470849972359494, 1.1398253352209688, 1.1201916937783347, 1.1121810244499906, 1.1110870237158998, 1.1013520494853313, 1.0940125838971142, 1.082086557615167, 1.0785696099006332, 1.0723647962015193, 1.0460045704704943, 1.0551351980683732, 1.0524976384039837, 1.0465676430556217, 1.038835268293972, 1.0260803897493251, 1.0175402624385703, 1.01811134752234, 1.0143677130855226, 1.0109199153008699, 1.0054088844489018, 0.9861470876100938, 0.9920647925531324, 0.9862995250208377, 0.9962118019784966, 0.9800934756531172, 0.9818427718594216], "accuracy": [0.09589222073554993, 0.107647605240345, 0.12191256135702133, 0.1368379294872284, 0.15757495164871216, 0.16919825971126556, 0.187689870595932, 0.19653943181037903, 0.22440892457962036, 0.22652225196361542, 0.23695680499076843, 0.25637298822402954, 0.2584863305091858, 0.2793554365634918, 0.2945449650287628, 0.30220577120780945, 0.31026285886764526, 0.32241448760032654, 0.33139610290527344, 0.33958524465560913, 0.3485668897628784, 0.36745476722717285, 0.36705851554870605, 0.37141725420951843, 0.3819838762283325, 0.37670058012008667, 0.4002113342285156, 0.4119667112827301, 0.4017963409423828, 0.41804254055023193, 0.4173821210861206, 0.42425042390823364, 0.4348170757293701, 0.4365341365337372, 0.4410249590873718, 0.4501386880874634, 0.45066702365875244, 0.46585655212402344, 0.4600449204444885, 0.4702152907848358, 0.4687623679637909, 0.4888390004634857, 0.48712190985679626, 0.49465063214302063, 0.49491479992866516, 0.4994056224822998, 0.5120856165885925, 0.5094439387321472, 0.5115572810173035, 0.5246334671974182, 0.533350944519043, 0.5295205116271973, 0.5386342406272888, 0.5361247062683105, 0.5484083890914917, 0.5414080023765564, 0.5583146214485168, 0.5535596609115601, 0.5595033764839172, 0.5630695819854736, 0.5716549754142761, 0.5679566860198975, 0.5811649560928345, 0.5761458277702332, 0.5827499628067017, 0.5765420794487, 0.583938717842102, 0.5884295105934143, 0.5851274728775024, 0.5993924140930176, 0.5954299569129944, 0.6022982597351074, 0.6046757102012634, 0.6033549308776855, 0.6056002974510193, 0.6104874014854431, 0.6126006841659546, 0.6108836531639099, 0.6207898855209351, 0.62660151720047, 0.6222427487373352, 0.6229031682014465, 0.6211860775947571, 0.6433760523796082, 0.635451078414917, 0.6300356388092041, 0.6332056522369385, 0.6373002529144287, 0.6448289752006531, 0.646149754524231, 0.6489235162734985, 0.6425835490226746, 0.6472064256668091, 0.6435081362724304, 0.6606789231300354, 0.6561880707740784, 0.6543388962745667, 0.6472064256668091, 0.6580372452735901, 0.6576409935951233], "val_loss": [1.9659357752118791, 1.9609074592590332, 1.9559202875409807, 1.950901985168457, 1.945812157222203, 1.940674100603376, 1.9353697640555245, 1.9299673352922713, 1.9243461063929967, 1.9184762409755163, 1.912428855895996, 1.9060012953622, 1.8992933545793806, 1.8920564651489258, 1.8844022750854492, 1.8762698854718889, 1.8676154954092843, 1.8583645139421736, 1.848485061100551, 1.8378634452819824, 1.8266333171299525, 1.8144632748195104, 1.801687376839774, 1.7881691796439034, 1.7737008503505163, 1.758469785962786, 1.7419978550502233, 1.7247460229056222, 1.7064467838832311, 1.6870966638837541, 1.6667520318712508, 1.645484447479248, 1.6229248046875, 1.599484886441912, 1.575230257851737, 1.5501173223767961, 1.5242987360273088, 1.4977012361798967, 1.4711793150220598, 1.4438699313572474, 1.4165401799338204, 1.3885329450879778, 1.361015898840768, 1.3336166994912284, 1.30646208354405, 1.2799015385763985, 1.2537711347852434, 1.2283991064344133, 1.203752108982631, 1.1797286782945906, 1.1565577983856201, 1.134734766823905, 1.1133028439113073, 1.0929973125457764, 1.0730245794568742, 1.0546441418784005, 1.0371174812316895, 1.020198174885341, 1.003986086164202, 0.9886647292545864, 0.9738924162728446, 0.9597773551940918, 0.9465736321040562, 0.9339398997170585, 0.9219790867396763, 0.9104819297790527, 0.8995633125305176, 0.8894099167415074, 0.879532882145473, 0.8698055062975202, 0.8606641122273037, 0.8516133853367397, 0.8428751741136823, 0.8348585196903774, 0.8270773547036308, 0.8197557244982038, 0.812118377004351, 0.8054850101470947, 0.7991030727113996, 0.7930677958897182, 0.7865968261446271, 0.7806328364780971, 0.7751452922821045, 0.7692244223185948, 0.7639627797263009, 0.7587347371237618, 0.7539051430565971, 0.7493310485567365, 0.7449499368667603, 0.7401414428438459, 0.735936198915754, 0.7316536051886422, 0.7275220836911883, 0.7237624270575387, 0.7198538439614433, 0.7161760670798165, 0.7129528522491455, 0.7097604445048741, 0.7062551294054303, 0.7030073234013149], "val_accuracy": [0.07000000029802322, 0.11999999731779099, 0.16366666555404663, 0.2096666693687439, 0.25, 0.2853333353996277, 0.31033334136009216, 0.3323333263397217, 0.3473333418369293, 0.3606666624546051, 0.367333322763443, 0.3776666522026062, 0.3843333423137665, 0.39266666769981384, 0.4036666750907898, 0.4126666784286499, 0.41966667771339417, 0.43033334612846375, 0.43966665863990784, 0.4466666579246521, 0.45366665720939636, 0.4596666693687439, 0.46533334255218506, 0.46966665983200073, 0.476666659116745, 0.48399999737739563, 0.492333322763443, 0.49799999594688416, 0.5036666393280029, 0.5099999904632568, 0.5173333287239075, 0.5216666460037231, 0.5286666750907898, 0.534333348274231, 0.5419999957084656, 0.5450000166893005, 0.5516666769981384, 0.5586666464805603, 0.5619999766349792, 0.565666675567627, 0.5716666579246521, 0.5796666741371155, 0.5863333344459534, 0.597000002861023, 0.5996666550636292, 0.6036666631698608, 0.6056666374206543, 0.6133333444595337, 0.6206666827201843, 0.628333330154419, 0.6323333382606506, 0.6366666555404663, 0.6420000195503235, 0.6456666588783264, 0.6526666879653931, 0.6570000052452087, 0.6603333353996277, 0.6636666655540466, 0.6653333306312561, 0.6693333387374878, 0.6706666946411133, 0.6743333339691162, 0.6756666898727417, 0.6763333082199097, 0.6759999990463257, 0.6783333420753479, 0.6783333420753479, 0.6823333501815796, 0.6833333373069763, 0.6846666932106018, 0.6853333115577698, 0.6853333115577698, 0.6859999895095825, 0.6856666803359985, 0.6869999766349792, 0.6913333535194397, 0.6919999718666077, 0.6926666498184204, 0.6926666498184204, 0.6936666369438171, 0.6943333148956299, 0.6946666836738586, 0.6963333487510681, 0.6970000267028809, 0.6990000009536743, 0.6996666789054871, 0.7020000219345093, 0.703000009059906, 0.7039999961853027, 0.7049999833106995, 0.7039999961853027, 0.7039999961853027, 0.7056666612625122, 0.7106666564941406, 0.7099999785423279, 0.7093333601951599, 0.7106666564941406, 0.7126666903495789, 0.7139999866485596, 0.7160000205039978]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 6, 3, 5, 0, 3, 2, 5, 8, 6, 2, 9, 4, 5, 5, 6, 1, 8, 4, 4, 5, 3, 2, 6, 6, 9, 2, 9, 1, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 8, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [5, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.7111428380012512, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300742799390844, 2.2948848806619804, 2.2902257878940024, 2.2839840888788103, 2.277824276143282, 2.273602109748327, 2.2662671126268794, 2.2628615144347437, 2.2537194307627315, 2.249478944052385, 2.2444630809164696, 2.235985341372507, 2.2301854969503827, 2.2208309394965915, 2.213458909932979, 2.2056578096539163, 2.1975974260052324, 2.18660877333845, 2.177025685488603, 2.164743968729078, 2.1545135933945696, 2.1399408777423616, 2.1275486909576364, 2.115769586763393, 2.099446928244477, 2.0878168760336715, 2.0645813441878027, 2.0493050067495, 2.0314696121681886, 2.009285381803612, 1.991409506213317, 1.968368471400959, 1.9437522823312074, 1.920861980902788, 1.8956923972125916, 1.8709068791489354, 1.8415109804671408, 1.811770477063148, 1.791218546009681, 1.7628573410546602, 1.7368430104852117, 1.7004428880719493, 1.674905703666424, 1.6491774583237597, 1.625229587486911, 1.595742181921679, 1.5746698360779439, 1.544964325599635, 1.521619802736225, 1.4929401471457067, 1.4714013741016703, 1.4547467773081273, 1.4330287453772732, 1.4157960255699324, 1.3845575993260404, 1.373998790589684, 1.3580979469382706, 1.3411330554022718, 1.3234480445914973, 1.3039789191641433, 1.2813112194417506, 1.2760445791826964, 1.2638449799414593, 1.252346375142547, 1.242104421013366, 1.2301996299824018, 1.2185898844466123, 1.2127819139377047, 1.1989862308872532, 1.179129875599039, 1.1738957525984393, 1.1535311207055194, 1.1583945539098106, 1.1470701500976153, 1.1398084652563993, 1.1201888369436923, 1.1121753248729411, 1.1110653130763464, 1.1013408542513894, 1.0939916443941284, 1.0820542288935022, 1.0785400588294187, 1.0723912080422904, 1.0459929114681712, 1.0551040946311483, 1.0524859322595905, 1.0465259500356665, 1.038815294557858, 1.026041583732418, 1.0174636152426422, 1.0180639021148803, 1.0143551114701073, 1.0109050413951615, 1.00539653968219, 0.9861305409324262, 0.9920651845849501, 0.9862973415588643, 0.9962415201253643, 0.9800881685959963, 0.9818167951853047], "accuracy": [0.09589222073554993, 0.107647605240345, 0.12191256135702133, 0.1368379294872284, 0.15757495164871216, 0.16919825971126556, 0.187689870595932, 0.19653943181037903, 0.22440892457962036, 0.22652225196361542, 0.23695680499076843, 0.25637298822402954, 0.2584863305091858, 0.2793554365634918, 0.2945449650287628, 0.30220577120780945, 0.31026285886764526, 0.32241448760032654, 0.33139610290527344, 0.33958524465560913, 0.3485668897628784, 0.36745476722717285, 0.36705851554870605, 0.37141725420951843, 0.38185179233551025, 0.37670058012008667, 0.4002113342285156, 0.4119667112827301, 0.4017963409423828, 0.4181746244430542, 0.41751420497894287, 0.42425042390823364, 0.4348170757293701, 0.4365341365337372, 0.4410249590873718, 0.4501386880874634, 0.45066702365875244, 0.46585655212402344, 0.4600449204444885, 0.4702152907848358, 0.4687623679637909, 0.4888390004634857, 0.48712190985679626, 0.49465063214302063, 0.49491479992866516, 0.49953770637512207, 0.5120856165885925, 0.5095760226249695, 0.5115572810173035, 0.5246334671974182, 0.5332188606262207, 0.5295205116271973, 0.5386342406272888, 0.5361247062683105, 0.5484083890914917, 0.5414080023765564, 0.5583146214485168, 0.5535596609115601, 0.5595033764839172, 0.5630695819854736, 0.5715228915214539, 0.5680887699127197, 0.5811649560928345, 0.5764099955558777, 0.5827499628067017, 0.5765420794487, 0.5835424661636353, 0.5884295105934143, 0.5851274728775024, 0.5993924140930176, 0.5954299569129944, 0.6024303436279297, 0.604939877986908, 0.6033549308776855, 0.6056002974510193, 0.6104874014854431, 0.6124686598777771, 0.6107515692710876, 0.6209219098091125, 0.6268656849861145, 0.6218464970588684, 0.6227710843086243, 0.6211860775947571, 0.6431118845939636, 0.6357152462005615, 0.6300356388092041, 0.6325452327728271, 0.6375643610954285, 0.6449610590934753, 0.6456214785575867, 0.6485272645950317, 0.6429798007011414, 0.6469422578811646, 0.6436402201652527, 0.6606789231300354, 0.6563201546669006, 0.6544709801673889, 0.6470743417739868, 0.6585655808448792, 0.6572447419166565], "val_loss": [1.9659357752118791, 1.9609074592590332, 1.9559202875409807, 1.950901985168457, 1.945812157222203, 1.9406740324837821, 1.9353698321751185, 1.9299673352922713, 1.9243461063929967, 1.918476172855922, 1.91242892401559, 1.906001363481794, 1.8992935589381628, 1.8920565332685197, 1.8844024113246374, 1.876270089830671, 1.8676156997680664, 1.8583644458225794, 1.848485061100551, 1.8378632409232003, 1.8266332490103585, 1.8144634791782923, 1.8016876493181502, 1.7881691115243095, 1.7737011228288924, 1.7584699903215681, 1.7419979231698173, 1.7247461591448103, 1.7064470223018102, 1.6870968001229423, 1.6667521681104387, 1.645484549658639, 1.6229241575513567, 1.5994838646480016, 1.5752294063568115, 1.5501154831477575, 1.5242976801736015, 1.4977003506251745, 1.4711790084838867, 1.4438701016562325, 1.4165405205317907, 1.3885339668818883, 1.3610168865748815, 1.3336166654314314, 1.3064627306801933, 1.2799022538321358, 1.253772292818342, 1.2283987998962402, 1.2037507125309534, 1.1797263962881905, 1.1565550054822649, 1.1347309180668421, 1.1132986204964774, 1.0929927144731795, 1.07301892553057, 1.0546394416264124, 1.0371129512786865, 1.0201928615570068, 1.00398165839059, 0.9886595521654401, 0.9738869326455253, 0.959773063659668, 0.9465678759983608, 0.9339347907475063, 0.9219754082815987, 0.9104773657662528, 0.8995593275342669, 0.8894069194793701, 0.8795291015080043, 0.8698039054870605, 0.8606654405593872, 0.8516123805727277, 0.8428765875952584, 0.8348582642418998, 0.8270782061985561, 0.8197578021458217, 0.8121272495814732, 0.805493950843811, 0.7991119452885219, 0.7930804661342076, 0.7866155760628837, 0.7806510414396014, 0.7751690660204206, 0.7692504780633109, 0.7639850548335484, 0.7587570973805019, 0.7539245571408953, 0.7493513141359601, 0.7449703727449689, 0.7401597670146397, 0.735960704939706, 0.7316878182547433, 0.7275586979729789, 0.7237989902496338, 0.7198797464370728, 0.716202872140067, 0.7129773071834019, 0.7097860745021275, 0.7062822920935494, 0.7030372108731952], "val_accuracy": [0.07000000029802322, 0.11999999731779099, 0.16366666555404663, 0.2096666693687439, 0.25, 0.2853333353996277, 0.31033334136009216, 0.3323333263397217, 0.3473333418369293, 0.3606666624546051, 0.367333322763443, 0.3776666522026062, 0.3843333423137665, 0.39266666769981384, 0.4036666750907898, 0.4129999876022339, 0.41966667771339417, 0.43033334612846375, 0.43966665863990784, 0.4466666579246521, 0.45366665720939636, 0.4596666693687439, 0.46533334255218506, 0.46966665983200073, 0.476666659116745, 0.48399999737739563, 0.492333322763443, 0.49799999594688416, 0.5036666393280029, 0.5099999904632568, 0.5173333287239075, 0.5216666460037231, 0.5286666750907898, 0.534333348274231, 0.5419999957084656, 0.5450000166893005, 0.5516666769981384, 0.5586666464805603, 0.5619999766349792, 0.565666675567627, 0.5716666579246521, 0.5796666741371155, 0.5863333344459534, 0.597000002861023, 0.5996666550636292, 0.6036666631698608, 0.6056666374206543, 0.6133333444595337, 0.6206666827201843, 0.628333330154419, 0.6320000290870667, 0.6366666555404663, 0.6423333287239075, 0.6456666588783264, 0.6526666879653931, 0.6573333144187927, 0.6603333353996277, 0.6636666655540466, 0.6653333306312561, 0.6693333387374878, 0.6706666946411133, 0.6743333339691162, 0.6756666898727417, 0.6763333082199097, 0.6759999990463257, 0.6783333420753479, 0.6783333420753479, 0.6823333501815796, 0.6830000281333923, 0.6846666932106018, 0.6853333115577698, 0.6853333115577698, 0.6859999895095825, 0.6853333115577698, 0.6869999766349792, 0.6913333535194397, 0.6916666626930237, 0.6919999718666077, 0.6926666498184204, 0.6940000057220459, 0.6943333148956299, 0.6946666836738586, 0.6963333487510681, 0.6970000267028809, 0.6986666917800903, 0.6996666789054871, 0.7020000219345093, 0.703000009059906, 0.7036666870117188, 0.7039999961853027, 0.70333331823349, 0.7036666870117188, 0.7056666612625122, 0.7106666564941406, 0.7093333601951599, 0.7093333601951599, 0.7106666564941406, 0.7126666903495789, 0.7139999866485596, 0.7149999737739563]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.6994285583496094, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.296634562751479, 2.255851620208192, 2.1727474805244666, 1.9883619758509972, 1.6569096522009399, 1.406435109762515, 1.330510612255893, 1.2197492046284402, 0.9896497679833707, 0.9098657887483617, 0.9045696991419889, 0.8588463208458411, 0.8032500349047194, 0.7902745522874584, 0.8001929753334641, 0.7898000225635363, 0.7336303759417939, 0.7051457586762078, 0.7358460473330927, 0.7234386494682135, 0.7011939835287025, 0.6915112334849607, 0.6767796970408874, 0.664204669571855, 0.6512762036353149, 0.648793448617414, 0.6188488460141339, 0.6174728287886541, 0.6116183745689427, 0.5998191524490374, 0.5774023524679764, 0.5842730876256635, 0.5693231959266434, 0.5682896943990471, 0.5626002307801655, 0.5589849151845118, 0.5602367664246338, 0.5471050939650001, 0.5216669913422178, 0.5205065513551511, 0.5259730732121315, 0.5219212185437448, 0.5201408255448227, 0.5004018520469663, 0.5105779119187248, 0.5205922419006767, 0.500464646618805, 0.49117995063469094, 0.4951882736597236, 0.48588077575775296, 0.4775473122638624, 0.4777893531772801, 0.46440403639931704, 0.4620384285242456, 0.4560642033213118, 0.4586663645539758, 0.4522495983795105, 0.45338962059121135, 0.4352763803045212, 0.44479595253244286, 0.4371799241243148], "accuracy": [0.10593052208423615, 0.21595561504364014, 0.33681151270866394, 0.413419634103775, 0.45727115869522095, 0.5172368288040161, 0.5543521046638489, 0.5992603302001953, 0.6584334969520569, 0.6597543358802795, 0.6732267737388611, 0.6892088055610657, 0.7029454708099365, 0.6992471218109131, 0.6966054439544678, 0.7111346125602722, 0.7199841737747192, 0.7306828498840332, 0.715889573097229, 0.7326641082763672, 0.739928662776947, 0.7494386434555054, 0.7446836829185486, 0.7460044622421265, 0.7532690763473511, 0.7569673657417297, 0.7703077793121338, 0.7705719470977783, 0.772288978099823, 0.7781006693840027, 0.7798177003860474, 0.7798177003860474, 0.7836481332778931, 0.7873464822769165, 0.785629391670227, 0.7880068421363831, 0.7938185334205627, 0.793422281742096, 0.7943468689918518, 0.7994980812072754, 0.7984414100646973, 0.8014793395996094, 0.802800178527832, 0.807158887386322, 0.7998943328857422, 0.7951393723487854, 0.804649293422699, 0.8115176558494568, 0.8166688680648804, 0.8109893202781677, 0.8158763647079468, 0.8186501264572144, 0.8227446675300598, 0.8211596608161926, 0.82683926820755, 0.8247259259223938, 0.826310932636261, 0.8214238286018372, 0.8319904804229736, 0.8335754871368408, 0.8284242749214172], "val_loss": [1.9490641866411482, 1.8917773791721888, 1.7771222931998116, 1.5117713042667933, 1.1201678003583635, 0.8635696853910174, 0.7704612186976841, 0.7259690420968192, 0.6661817005702427, 0.6760619538170951, 0.6825517586299351, 0.6127638135637555, 0.5837840693337577, 0.577736633164542, 0.5575053180967059, 0.5570448296410697, 0.5301154511315482, 0.550189699445452, 0.5603241579873222, 0.5399575574057442, 0.5372688259397235, 0.5199737548828125, 0.49761967999594553, 0.47988920552389963, 0.46060475281306673, 0.4553236280168806, 0.45500544139317106, 0.4614527906690325, 0.461106470652989, 0.45143137659345356, 0.44126319885253906, 0.4343774914741516, 0.4273894088608878, 0.4276377132960728, 0.4291092072214399, 0.43354042938777376, 0.4331221750804356, 0.4254734686442784, 0.4178985612733023, 0.4112392323357718, 0.41290409224373953, 0.41771278211048674, 0.41373761211122784, 0.41025971514838083, 0.4204140135220119, 0.41384613513946533, 0.40043606076921734, 0.4015523280416216, 0.40478297642299105, 0.3958472864968436, 0.3872236268860953, 0.38442013944898334, 0.3849421739578247, 0.3861652782985142, 0.3843271732330322, 0.3819729345185416, 0.3824094108172825, 0.37875304903302875, 0.3816779851913452, 0.38169470003673006, 0.3781999264444624], "val_accuracy": [0.24033333361148834, 0.3803333342075348, 0.445333331823349, 0.5083333253860474, 0.6010000109672546, 0.6696666479110718, 0.6859999895095825, 0.7039999961853027, 0.7066666483879089, 0.7276666760444641, 0.7153333425521851, 0.7303333282470703, 0.7366666793823242, 0.7329999804496765, 0.7453333139419556, 0.746666669845581, 0.7583333253860474, 0.7543333172798157, 0.7559999823570251, 0.7613333463668823, 0.7599999904632568, 0.7673333287239075, 0.7723333239555359, 0.7826666831970215, 0.7963333129882812, 0.7903333306312561, 0.7839999794960022, 0.7829999923706055, 0.7889999747276306, 0.7973333597183228, 0.7986666560173035, 0.8023333549499512, 0.8050000071525574, 0.7983333468437195, 0.8013333082199097, 0.8113333582878113, 0.8056666851043701, 0.8016666769981384, 0.8146666884422302, 0.8100000023841858, 0.8109999895095825, 0.8116666674613953, 0.8176666498184204, 0.8206666707992554, 0.8083333373069763, 0.8159999847412109, 0.8320000171661377, 0.8233333230018616, 0.8226666450500488, 0.8259999752044678, 0.8370000123977661, 0.843666672706604, 0.8410000205039978, 0.8429999947547913, 0.8486666679382324, 0.8529999852180481, 0.8493333458900452, 0.8483333587646484, 0.8496666550636292, 0.8479999899864197, 0.8496666550636292]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 8, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [10.480843940415419, 86.45601392551231, 300.4682835135651, 709.142808867074, 1421.154276817482, 2523.6151281217494], "accuracy": [0.09774138033390045, 0.09747721254825592, 0.09760929644107819, 0.1002509593963623, 0.09998679161071777, 0.09985470771789551], "val_loss": [24.305490221296036, 113.28879220145089, 310.6291765485491, 668.6043352399554, 1242.39306640625, 2082.6435546875], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 2, 3, 2, 2, 1, 4, 5, 8, 0, 2, 0, 4, 5, 4, 6, 1, 8, 4, 4, 5, 4, 2, 4, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 4, 1, 4, 8, 3, 9, 1, 6, 1, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 2, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 33, 33, 75, 48, 39, 88, 45, 30, 55, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 58, 58, 36, 22, 10, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), alpha))))))))), tf.math.pow(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [5, 2, 6, 3, 5, 0, 3, 2, 5, 8, 6, 2, 9, 4, 5, 5, 6, 1, 8, 8, 9, 9, 3, 2, 6, 6, 9, 2, 9, 1, 2, 1, 1, 5, 0, 0, 9, 1, 8, 1, 4, 8, 8, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [2, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 1, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [41, 33, 23, 15, 55, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 9, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 21, 9, 5, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), alpha))))))))))), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, alpha))))))), alpha)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 1, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(beta, tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.math.subtract(tf.math.add(sigma, beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 6, 3, 5, 0, 3, 2, 8, 8, 6, 2, 9, 4, 5, 5, 6, 1, 8, 4, 4, 5, 3, 2, 6, 0, 9, 2, 2, 5, 2, 1, 1, 5, 0, 1, 1, 6, 8, 1, 4, 8, 8, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 2, 2, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 2, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [50, 81, 23, 15, 25, 39, 33, 75, 20, 39, 82, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 42, 27, 15, 5, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))))), tf.math.add(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, alpha)))))), tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad)))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [3, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [62, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 71, 71, 47, 24, 13, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha)))))))))), tf.math.square(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), grad)))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08294808864593506, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [3, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 1, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 6, 3, 5, 0, 3, 2, 5, 8, 6, 2, 9, 4, 5, 5, 6, 1, 8, 8, 4, 5, 3, 2, 6, 6, 9, 2, 9, 1, 2, 1, 1, 5, 0, 6, 9, 6, 8, 1, 4, 8, 8, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 1, 1, 1, 0, 2, 1, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 6, 43, 31, 39, 26, 75, 29, 39, 49, 45, 77, 73, 79, 8], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 20, 11, 5, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))))))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))))))), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08466517180204391, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 6, 3, 5, 0, 3, 2, 5, 8, 6, 2, 9, 4, 5, 5, 6, 1, 8, 4, 4, 0, 3, 8, 6, 6, 9, 2, 9, 1, 2, 1, 1, 5, 0, 9, 2, 6, 8, 5, 4, 8, 8, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 0, 0, 2, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 0, 2, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 98, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 44, 29, 15, 8, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, alpha))))))))))))))), tf.math.pow(tf.math.add(alpha, alpha), alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), grad))))))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303267825312697, 2.303010940866668, 2.3029714217983956, 2.3028780210444864, 2.302940883814084, 2.3031414519400566, 2.3031443158601803, 2.3030262008838807], "accuracy": [0.09417514503002167, 0.0936468094587326, 0.0940430611371994, 0.09708096832036972, 0.09153348207473755, 0.08981640636920929, 0.0944393053650856, 0.09734513610601425], "val_loss": [1.973618507385254, 1.9736689840044295, 1.9736319950648717, 1.9736467088971819, 1.9736552238464355, 1.9736542020525252, 1.9737578119550432, 1.9737123080662318], "val_accuracy": [0.1003333330154419, 0.09866666793823242, 0.10133333504199982, 0.1003333330154419, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [76, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.07742857187986374, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [2.3025346081317646, 2.3010756512202164, 2.301136559939986, 2.3002277170394656, 2.29976957991548, 2.3005154916339814, 2.2995416862680265, 2.3010528481883648, 2.298477671512004, 2.2995718782604047, 2.299954580986709, 2.2996281161992904, 2.3000212382678233, 2.300179585615689, 2.2999180368129464], "accuracy": [0.09179764986038208, 0.0936468094587326, 0.09430722147226334, 0.09919429570436478, 0.10038304328918457, 0.09787346422672272, 0.09747721254825592, 0.10130762308835983, 0.10328886657953262, 0.1014397069811821, 0.10157178342342377, 0.10381719470024109, 0.09615638852119446, 0.09747721254825592, 0.09734513610601425], "val_loss": [1.9701770373753138, 1.969689164842878, 1.9694788796561105, 1.9694757461547852, 1.9696136202130998, 1.9696886198861259, 1.9697380747113908, 1.9697068078177316, 1.9697883469717843, 1.9698741095406669, 1.9700509480067663, 1.9703262192862374, 1.9705542155674525, 1.970719882420131, 1.9709106854030065], "val_accuracy": [0.04399999976158142, 0.05133333429694176, 0.05833333358168602, 0.06433333456516266, 0.06800000369548798, 0.07000000029802322, 0.07533333450555801, 0.07766667008399963, 0.07699999958276749, 0.07866666465997696, 0.07666666805744171, 0.07633333653211594, 0.07633333653211594, 0.07400000095367432, 0.07133333384990692]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 3, 2, 3, 0, 1, 0, 3], [63, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029762730228747, 2.3025849964231027, 2.303302220444181, 2.3024688616341855, 2.3018909885961745, 2.3030949208903637], "accuracy": [0.09074098616838455, 0.08875974267721176, 0.08770307898521423, 0.09179764986038208, 0.09325055778026581, 0.09034473448991776], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]