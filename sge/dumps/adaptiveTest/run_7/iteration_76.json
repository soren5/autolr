[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [5, 1], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8080000281333923, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0168283626529693, 1.4089270010128028, 1.0250459674043646, 0.8933993612912196, 0.7953082797093052, 0.788262596337897, 0.7633639427066526, 0.6929585666798833, 0.6528256354771586, 0.7150924160905313, 0.6731637779983941, 0.6526304904763661, 0.6166702240386643, 0.6282966471209643, 0.5818024106375876, 0.5867416526678925, 0.60451464497292, 0.5559375424741549, 0.5615902874983376, 0.549567092923031, 0.5439099143949939, 0.5207131623851782, 0.5318967593171262, 0.5584188018020244, 0.5211371802351557, 0.5039893656894279], "accuracy": [0.32862237095832825, 0.5049530863761902, 0.6255448460578918, 0.6679434776306152, 0.700171709060669, 0.6991150379180908, 0.7083608508110046, 0.7415136694908142, 0.7557786107063293, 0.7310791015625, 0.7454761862754822, 0.7519482374191284, 0.7668735980987549, 0.7609298825263977, 0.7828556299209595, 0.7799497842788696, 0.7718927264213562, 0.7932901978492737, 0.7876105904579163, 0.7901201844215393, 0.7976489067077637, 0.8083476424217224, 0.7964601516723633, 0.7901201844215393, 0.8025360107421875, 0.8109893202781677], "val_loss": [1.4353583540235246, 0.7901647090911865, 0.7617953845432827, 0.6799943958009992, 0.5850200482777187, 0.587823714528765, 0.5484517472130912, 0.5114751202719552, 0.489541905266898, 0.636511138507298, 0.5191870757511684, 0.4811675548553467, 0.5093593086515155, 0.46151304244995117, 0.4894509996686663, 0.459057126726423, 0.4553654534476144, 0.4337317432676043, 0.42006973709378925, 0.41710794823510305, 0.4174449358667646, 0.41543363673346384, 0.4206765719822475, 0.42815345525741577, 0.4334982633590698, 0.4134137545313154], "val_accuracy": [0.36666667461395264, 0.6733333468437195, 0.6776666641235352, 0.6779999732971191, 0.746999979019165, 0.7396666407585144, 0.7516666650772095, 0.7776666879653931, 0.7833333611488342, 0.7160000205039978, 0.7596666812896729, 0.7950000166893005, 0.7556666731834412, 0.7886666655540466, 0.7716666460037231, 0.7903333306312561, 0.8019999861717224, 0.8023333549499512, 0.8163333535194397, 0.8180000185966492, 0.8209999799728394, 0.8130000233650208, 0.8056666851043701, 0.8116666674613953, 0.7953333258628845, 0.8106666803359985]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [4, 4], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7837142944335938, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.03245973689382, 1.4245571878371757, 1.0879898977128506, 0.8855632783210572, 0.856596244537221, 0.7933125658010716, 0.747226527692651, 0.7254361049326861, 0.734180642755166, 0.678450976467057, 0.6619282098273717, 0.6454731374605063, 0.6453952988251215, 0.6243229361573042, 0.6190413554913615, 0.6073303083387175], "accuracy": [0.3229427933692932, 0.5215955376625061, 0.5995244979858398, 0.6744155287742615, 0.6790384650230408, 0.7078325152397156, 0.7231541275978088, 0.7292299270629883, 0.7223616242408752, 0.7460044622421265, 0.7486461400985718, 0.7593448758125305, 0.7511557340621948, 0.7643640041351318, 0.7646281719207764, 0.7652885913848877], "val_loss": [1.566802706037249, 0.8438759871891567, 0.6660679919379098, 0.6133865799222674, 0.6089843170983451, 0.5417368582316807, 0.5581261089869908, 0.5346534081867763, 0.5523982048034668, 0.5255000761577061, 0.500011682510376, 0.5236510378973824, 0.4748375245503017, 0.47707532133374897, 0.4628505025591169, 0.45880232538495747], "val_accuracy": [0.3776666522026062, 0.6083333492279053, 0.6976666450500488, 0.7243333458900452, 0.718666672706604, 0.7603333592414856, 0.7406666874885559, 0.7620000243186951, 0.7506666779518127, 0.7526666522026062, 0.7866666913032532, 0.7433333396911621, 0.7836666703224182, 0.762333333492279, 0.7760000228881836, 0.7866666913032532]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1], [1, 0, 1, 1], [1, 4], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.75342857837677, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 20, 19, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(beta, beta)))))), tf.math.add(grad, beta)), tf.math.add(beta, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.298276817951346, 2.286387130143762, 2.2782275555801745, 2.2673687861816303, 2.257781922211028, 2.2452093209604373, 2.236120483894484, 2.2223475590326593, 2.2068449959007346, 2.1889073222997624, 2.168637873930875, 2.149304189639179, 2.123675854765681, 2.096838358922043, 2.067811720910688, 2.032861765743231, 1.9981637944823731, 1.9548246260757507, 1.91721605944391, 1.8658696988538712, 1.815460201582621, 1.7662802269556077, 1.7170241463374878, 1.6637433315265007, 1.6176830304218495, 1.5716510898700684, 1.5205407227035117, 1.4872867955255817, 1.4470610050020782, 1.4128780155732348, 1.372430571255163, 1.336551243618668, 1.3095506834804327, 1.2881759585894614, 1.263400426882133, 1.234344279966051, 1.2105889104502532, 1.18928159594835, 1.1771897783746745, 1.152769323117099, 1.147458290316882, 1.1173783942236326, 1.1011774919099497, 1.0895156025524388, 1.0755463115385795, 1.0650334675329993, 1.048475735947409, 1.029536555030988, 1.039157768392355, 1.024678569365297, 1.0171009942351898, 0.997757176311497, 0.9919491272560909, 0.987991813206638, 0.9761870580342435, 0.9687023684175778, 0.9618019843145589, 0.9564068645313668, 0.9503084191509509, 0.9478435955657274, 0.9356165572778502, 0.923015745741706, 0.9225020333051902, 0.9160814299921649, 0.9050605627665698, 0.8965809558124717, 0.9036189399894832, 0.8916106433003035, 0.9004758848820884, 0.8793813568206432, 0.8725559214685319, 0.8836355627472721, 0.8681759442856063, 0.8650922412649358, 0.8579038712232341, 0.8584280977033747, 0.8522204778544293, 0.8467838558475528, 0.8393078076447383, 0.8316183652324826, 0.8338744087446603, 0.8324780014008106, 0.8236557652354791, 0.827555904306866, 0.8189790823818308, 0.8202892421825828, 0.8113085188019813, 0.8110837024263717, 0.8071621856464607, 0.8049597033435926, 0.8035752545526046, 0.8013204402848635, 0.8046795244560802, 0.7925103635300482, 0.8001876422647535, 0.7925064734196414, 0.7998780849477193, 0.7887959426672168, 0.7856338661202917, 0.7771194702315214], "accuracy": [0.09906221181154251, 0.1294412910938263, 0.15070664882659912, 0.17461365461349487, 0.20578522980213165, 0.23946638405323029, 0.25518426299095154, 0.2728833854198456, 0.30220577120780945, 0.3206973969936371, 0.340509831905365, 0.3517369031906128, 0.372209757566452, 0.3811914026737213, 0.39387133717536926, 0.4039096534252167, 0.41143837571144104, 0.4263637661933899, 0.4360058009624481, 0.4507991075515747, 0.4628186523914337, 0.46546030044555664, 0.4810461103916168, 0.4908202290534973, 0.49689605832099915, 0.5066701769828796, 0.5157839059829712, 0.5214634537696838, 0.5311055183410645, 0.5396909117698669, 0.5507858991622925, 0.5556729435920715, 0.5622771382331848, 0.5638620853424072, 0.5756174921989441, 0.5775987505912781, 0.5918636918067932, 0.5960903167724609, 0.5904107689857483, 0.6044115424156189, 0.5971469879150391, 0.6107515692710876, 0.6225069165229797, 0.6205257177352905, 0.6240919232368469, 0.6288469433784485, 0.63096022605896, 0.6416589617729187, 0.6362435817718506, 0.6440364718437195, 0.6409985423088074, 0.6514331102371216, 0.6522256135940552, 0.6516972780227661, 0.6543388962745667, 0.6568484902381897, 0.6643772125244141, 0.6590939164161682, 0.6676793098449707, 0.6682076454162598, 0.6712455153465271, 0.6734909415245056, 0.6732267737388611, 0.6800950765609741, 0.6799629926681519, 0.685510516166687, 0.6819442510604858, 0.6819442510604858, 0.6832650899887085, 0.6864351034164429, 0.6948884129524231, 0.6831330060958862, 0.6893408894538879, 0.6903975605964661, 0.6963412761688232, 0.6923788189888, 0.6984546184539795, 0.6951525807380676, 0.7000396251678467, 0.698190450668335, 0.7045304179191589, 0.7037379741668701, 0.7079645991325378, 0.7029454708099365, 0.7129837274551392, 0.7041342258453369, 0.7106062769889832, 0.7069079279899597, 0.7116629481315613, 0.7091533541679382, 0.7102100253105164, 0.7103421092033386, 0.7132478952407837, 0.7144366502761841, 0.7160216569900513, 0.7124554514884949, 0.7099458575248718, 0.7166820764541626, 0.7162858247756958, 0.7232862114906311], "val_loss": [1.9617613383701868, 1.952573503766741, 1.9434277670724052, 1.9338327135358537, 1.9236636843000139, 1.9126954078674316, 1.9007524762834822, 1.887580190386091, 1.8728088651384627, 1.8561184746878487, 1.836935588291713, 1.8156296185084753, 1.7914079938616072, 1.764446599142892, 1.7345600809369768, 1.7011054924556188, 1.6643160751887731, 1.6240485055106026, 1.5807009083884103, 1.534447465624128, 1.4860231195177351, 1.4362311363220215, 1.386279719216483, 1.3359802450452531, 1.2866919381277901, 1.2389287267412459, 1.1934014047895158, 1.1511853422437395, 1.1119587421417236, 1.0764385972704207, 1.0430161952972412, 1.0124578475952148, 0.9838118553161621, 0.9585849898202079, 0.9350849219730922, 0.9131612437111991, 0.8934366362435477, 0.8749481950487409, 0.8588657038552421, 0.8429873500551496, 0.8286839553288051, 0.8145556620189122, 0.8023722342082432, 0.790972181728908, 0.7801720755440849, 0.7695314373288836, 0.7594530582427979, 0.7500228711536953, 0.742216944694519, 0.7343271119253976, 0.7275783675057548, 0.7209995303835187, 0.7134637492043632, 0.7070801258087158, 0.7015050990240914, 0.6956055504935128, 0.6897734914507184, 0.6848836626325335, 0.6800358976636615, 0.6757003750119891, 0.670913713318961, 0.6665371315819877, 0.6616494485310146, 0.6582446949822562, 0.6544411352702549, 0.6509665421077183, 0.6470364672797067, 0.6441010407039097, 0.6417822667530605, 0.6380214520863124, 0.6344650302614484, 0.6316014868872506, 0.6284809453146798, 0.6265920911516462, 0.6222972018378121, 0.6197256701333183, 0.61731675692967, 0.6136813844953265, 0.6110223872320992, 0.6085801465170724, 0.6062125478472028, 0.6032361813953945, 0.6006558622632708, 0.5983872924532209, 0.5962245975221906, 0.5947668722697667, 0.5921151978628976, 0.5902526719229562, 0.5876998731068203, 0.5856761762074062, 0.5837946278708321, 0.5821352345602853, 0.5805288212639945, 0.5780822890145438, 0.5765809501920428, 0.5750347716467721, 0.5736247811998639, 0.5726528338023594, 0.5704280989510673, 0.5691102232251849], "val_accuracy": [0.11299999803304672, 0.19699999690055847, 0.27133333683013916, 0.31333333253860474, 0.34299999475479126, 0.36266666650772095, 0.38100001215934753, 0.4009999930858612, 0.41600000858306885, 0.4313333332538605, 0.4480000138282776, 0.46033334732055664, 0.4736666679382324, 0.48266667127609253, 0.4986666738986969, 0.5049999952316284, 0.5180000066757202, 0.527999997138977, 0.5450000166893005, 0.5516666769981384, 0.5583333373069763, 0.5686666369438171, 0.5793333053588867, 0.593666672706604, 0.6023333072662354, 0.6113333106040955, 0.624666690826416, 0.6353333592414856, 0.6460000276565552, 0.6536666750907898, 0.6600000262260437, 0.6673333048820496, 0.6723333597183228, 0.6746666431427002, 0.6743333339691162, 0.6779999732971191, 0.6819999814033508, 0.6836666464805603, 0.684333324432373, 0.6866666674613953, 0.6896666884422302, 0.6919999718666077, 0.6953333616256714, 0.6940000057220459, 0.6986666917800903, 0.7006666660308838, 0.7020000219345093, 0.7046666741371155, 0.7043333053588867, 0.706333339214325, 0.7070000171661377, 0.7066666483879089, 0.7113333344459534, 0.7149999737739563, 0.7126666903495789, 0.7143333554267883, 0.715666651725769, 0.7170000076293945, 0.7179999947547913, 0.7213333249092102, 0.722000002861023, 0.7206666469573975, 0.7239999771118164, 0.7263333201408386, 0.7253333330154419, 0.7276666760444641, 0.7283333539962769, 0.7293333411216736, 0.731333315372467, 0.734000027179718, 0.7336666584014893, 0.7353333234786987, 0.734000027179718, 0.734666645526886, 0.737666666507721, 0.7356666922569275, 0.7366666793823242, 0.7413333058357239, 0.7413333058357239, 0.7419999837875366, 0.7416666746139526, 0.7446666955947876, 0.7443333268165588, 0.7446666955947876, 0.7450000047683716, 0.7453333139419556, 0.7463333606719971, 0.7476666569709778, 0.7476666569709778, 0.7486666440963745, 0.7476666569709778, 0.7490000128746033, 0.7506666779518127, 0.75, 0.7509999871253967, 0.7519999742507935, 0.7516666650772095, 0.7506666779518127, 0.753333330154419, 0.7516666650772095]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.75342857837677, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 20, 19, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(beta, beta)))))), tf.math.add(grad, beta)), tf.math.add(beta, tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.298276817951346, 2.286387053652053, 2.2782275870712034, 2.2673687726719787, 2.2577819851930854, 2.245209388414221, 2.236121145206089, 2.222348377704935, 2.2068462734287912, 2.1889090946463545, 2.1686409644289513, 2.149307073115232, 2.123679502969877, 2.0968429878198585, 2.0678181625895764, 2.0328700652983462, 1.998173227667289, 1.9548343518123241, 1.9172280251373626, 1.865883464196638, 1.8154782921394668, 1.7663015358326157, 1.7170448370928368, 1.6637658749778022, 1.617705914039244, 1.5716776757775013, 1.5205648890764738, 1.4873103961622112, 1.447083432235738, 1.4128968528768469, 1.3724469202006608, 1.3365684349176954, 1.309571455388163, 1.2881981106387657, 1.2634163140116934, 1.2343650015038805, 1.2106079592003782, 1.189294488658963, 1.1772051722130141, 1.1527800333104696, 1.1474675137715458, 1.1173922633293392, 1.101189482056186, 1.0895189059771062, 1.0755529797009473, 1.0650368861675956, 1.0484808467839293, 1.0295383069713937, 1.0391590594143176, 1.0246850477942167, 1.017116079335483, 0.997781263988378, 0.9919554594564179, 0.9880056847765177, 0.9762433633324398, 0.968711717253773, 0.9618130547101896, 0.9564280181654755, 0.9502966829956074, 0.9478425843730468, 0.9356360140493627, 0.9230072413295756, 0.9224992504272289, 0.9160725244394368, 0.9050577131906096, 0.8965972583087018, 0.903623093231054, 0.8916418633488081, 0.900488895896624, 0.8794193431024523, 0.8725706280230405, 0.8836667956441164, 0.8681984661419346, 0.8650900625266167, 0.8578789560959529, 0.8584230339380697, 0.8522143840411902, 0.8467648978939366, 0.8393273619360944, 0.8316251476206847, 0.83387522768461, 0.8324768587330849, 0.8236535879063837, 0.8275645352971868, 0.8190090572356926, 0.8202703284344983, 0.8112788685340262, 0.8110888661914387, 0.8071670722038738, 0.8049754299397608, 0.8035882974518068, 0.8013320520585161, 0.8046917777098622, 0.7925333748750557, 0.8002796881565124, 0.7925132848661904, 0.7998801617417054, 0.7888093304168027, 0.7856528951727781, 0.777131656055138], "accuracy": [0.09906221181154251, 0.1294412910938263, 0.15070664882659912, 0.17461365461349487, 0.20578522980213165, 0.23946638405323029, 0.25518426299095154, 0.2728833854198456, 0.30220577120780945, 0.3206973969936371, 0.340509831905365, 0.3517369031906128, 0.37247392535209656, 0.3811914026737213, 0.39387133717536926, 0.40404173731803894, 0.41143837571144104, 0.4263637661933899, 0.4360058009624481, 0.4507991075515747, 0.46268656849861145, 0.46546030044555664, 0.48091402649879456, 0.4908202290534973, 0.49689605832099915, 0.5066701769828796, 0.5153876543045044, 0.5213313698768616, 0.531369686126709, 0.5396909117698669, 0.5507858991622925, 0.5556729435920715, 0.5622771382331848, 0.563730001449585, 0.5754854083061218, 0.5773345828056335, 0.5918636918067932, 0.5960903167724609, 0.5904107689857483, 0.6045436263084412, 0.5971469879150391, 0.6107515692710876, 0.6225069165229797, 0.6206578016281128, 0.6240919232368469, 0.6288469433784485, 0.63096022605896, 0.6416589617729187, 0.6363756656646729, 0.6441685557365417, 0.6411306262016296, 0.6514331102371216, 0.6523576974868774, 0.6515651941299438, 0.6539427042007446, 0.6572447419166565, 0.6642451286315918, 0.6592260003089905, 0.6676793098449707, 0.668339729309082, 0.6712455153465271, 0.6734909415245056, 0.6733588576316833, 0.6802271604537964, 0.6800950765609741, 0.6859067678451538, 0.6820763349533081, 0.6822084188461304, 0.683529257774353, 0.6865671873092651, 0.6951525807380676, 0.6836613416671753, 0.6889446377754211, 0.6905296444892883, 0.696209192276001, 0.6922467350959778, 0.6983225345611572, 0.6954167485237122, 0.6999075412750244, 0.6984546184539795, 0.7046625018119812, 0.7036058902740479, 0.7078325152397156, 0.7030775547027588, 0.7128516435623169, 0.7041342258453369, 0.7102100253105164, 0.7066437602043152, 0.7116629481315613, 0.7092854380607605, 0.7103421092033386, 0.7103421092033386, 0.7132478952407837, 0.7143045663833618, 0.715889573097229, 0.7124554514884949, 0.7098137736320496, 0.7170783281326294, 0.7164179086685181, 0.7226257920265198], "val_loss": [1.9617612702505929, 1.952573503766741, 1.9434277670724052, 1.9338326454162598, 1.923663752419608, 1.9126953397478377, 1.9007532937186105, 1.8875814165387834, 1.8728105000087194, 1.856121335710798, 1.8369391305106026, 1.8156333650861467, 1.7914134434291296, 1.7644520487104143, 1.7345687321254186, 1.701115710394723, 1.664325782230922, 1.6240583147321428, 1.5807134423937117, 1.5344622475760323, 1.486041818346296, 1.4362519127982003, 1.3863025733402796, 1.3360049043382918, 1.2867190837860107, 1.238952330180577, 1.1934271199362618, 1.1512107508523124, 1.1119778837476457, 1.0764544691358293, 1.043034587587629, 1.012474775314331, 0.9838295323508126, 0.9586056641169957, 0.9351081507546561, 0.9131774221147809, 0.8934500898633685, 0.8749590941837856, 0.858871340751648, 0.8429853745869228, 0.8286815541131156, 0.8145541974476406, 0.8023764576230731, 0.79098037311009, 0.7801801817757743, 0.7695281846182687, 0.759441580091204, 0.7500144583838326, 0.7422096729278564, 0.7343180860791888, 0.727568439074925, 0.7209945746830532, 0.7134509086608887, 0.7070690904344831, 0.7014859233583722, 0.6955876691000802, 0.6897637333188739, 0.6848656279700143, 0.680012583732605, 0.6756793771471296, 0.6708993571145194, 0.6665196589061192, 0.6616174493517194, 0.6582052026476178, 0.6543983221054077, 0.6509191479001727, 0.6470054898943219, 0.6440528120313372, 0.6417422464915684, 0.6379862001964024, 0.6344257252556937, 0.631584746497018, 0.6284489972250802, 0.6265637534005302, 0.6222811085837228, 0.6196797575269427, 0.617276804787772, 0.6136180503027779, 0.6109928914478847, 0.608560425894601, 0.6062031643731254, 0.6032179594039917, 0.6006410803113665, 0.5983864409582955, 0.596179553440639, 0.5947288274765015, 0.5920752116612026, 0.590209790638515, 0.5876590524400983, 0.5856368030820575, 0.5837784154074532, 0.5821236031396049, 0.5805261645998273, 0.5780996935708183, 0.5765948976789202, 0.575051086289542, 0.5736023017338344, 0.5726496492113385, 0.5704443284443447, 0.5691096952983311], "val_accuracy": [0.11299999803304672, 0.19699999690055847, 0.27133333683013916, 0.31333333253860474, 0.34299999475479126, 0.36266666650772095, 0.38100001215934753, 0.40066665410995483, 0.41600000858306885, 0.4313333332538605, 0.4483333230018616, 0.46033334732055664, 0.47333332896232605, 0.48266667127609253, 0.4986666738986969, 0.5049999952316284, 0.5180000066757202, 0.527999997138977, 0.5450000166893005, 0.5516666769981384, 0.5583333373069763, 0.5686666369438171, 0.5793333053588867, 0.593666672706604, 0.6023333072662354, 0.6116666793823242, 0.624666690826416, 0.6353333592414856, 0.6460000276565552, 0.6536666750907898, 0.6600000262260437, 0.6673333048820496, 0.6723333597183228, 0.6746666431427002, 0.6743333339691162, 0.6783333420753479, 0.6819999814033508, 0.6836666464805603, 0.684333324432373, 0.6866666674613953, 0.6896666884422302, 0.6916666626930237, 0.6953333616256714, 0.6940000057220459, 0.6986666917800903, 0.7006666660308838, 0.7020000219345093, 0.7046666741371155, 0.7043333053588867, 0.706333339214325, 0.7066666483879089, 0.7066666483879089, 0.7113333344459534, 0.7149999737739563, 0.7129999995231628, 0.7143333554267883, 0.715666651725769, 0.7173333168029785, 0.7179999947547913, 0.721666693687439, 0.722000002861023, 0.7206666469573975, 0.7243333458900452, 0.7256666421890259, 0.7253333330154419, 0.7276666760444641, 0.7283333539962769, 0.7289999723434448, 0.731333315372467, 0.7336666584014893, 0.734000027179718, 0.734666645526886, 0.734000027179718, 0.734666645526886, 0.737666666507721, 0.7356666922569275, 0.7366666793823242, 0.7416666746139526, 0.7406666874885559, 0.7419999837875366, 0.7416666746139526, 0.7446666955947876, 0.7443333268165588, 0.7446666955947876, 0.7453333139419556, 0.7453333139419556, 0.7463333606719971, 0.7476666569709778, 0.7480000257492065, 0.7486666440963745, 0.7476666569709778, 0.7490000128746033, 0.7506666779518127, 0.7506666779518127, 0.7509999871253967, 0.7519999742507935, 0.7516666650772095, 0.7506666779518127, 0.7536666393280029, 0.7513333559036255]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1], [1, 0, 1], [5, 1], [5, 3], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.7111428380012512, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3017504211776467, 2.295068735585725, 2.2871602360031718, 2.2713452268506495, 2.2520952352270114, 2.225280429456905, 2.1969168874266725, 2.1559206813066045, 2.102606907087373, 2.032930688079574, 1.9401508527519429, 1.836629180529681, 1.7058944630506347, 1.5860299188951223, 1.4785157310775305, 1.3975368413816842, 1.3616304353653024, 1.3370080783681753, 1.3584079170397103, 1.3710433791861825, 1.2975398372460696, 1.2448720914214404, 1.188031557072045, 1.1117977841560789, 1.011219892031355, 0.9407883048561413, 0.9028908279530675, 0.8935471534681767, 0.8732170888760685, 0.8845307961777453, 0.8880452993303132, 0.9003073332048662, 0.891323361170369, 0.8733109353303815, 0.8481117789897432], "accuracy": [0.08942015469074249, 0.10672302544116974, 0.12561088800430298, 0.1620657742023468, 0.2098798006772995, 0.2674679756164551, 0.3019416332244873, 0.33747193217277527, 0.3629639446735382, 0.3910976052284241, 0.41487252712249756, 0.43111875653266907, 0.4547615945339203, 0.4707436263561249, 0.49372607469558716, 0.5148593187332153, 0.5238409638404846, 0.5428609251976013, 0.5514463186264038, 0.5589750409126282, 0.5892220139503479, 0.6048077940940857, 0.6243560910224915, 0.6363756656646729, 0.6524897813796997, 0.6604147553443909, 0.6645092964172363, 0.6597543358802795, 0.6687359809875488, 0.6744155287742615, 0.6896050572395325, 0.6822084188461304, 0.6914542317390442, 0.7000396251678467, 0.6947563290596008], "val_loss": [1.9685720716203963, 1.9614477838788713, 1.9495318276541573, 1.9329441615513392, 1.9116324016026087, 1.8850953919546944, 1.8519223076956612, 1.8092525345938546, 1.753117288861956, 1.678840160369873, 1.5822138105119978, 1.462770870753697, 1.327228103365217, 1.1899821077074324, 1.067235333578927, 0.9673420361110142, 0.889164890561785, 0.8332642487117222, 0.8079055888312203, 0.7860345670155117, 0.7604456969669887, 0.763675434248788, 0.7572921855109078, 0.7124259642192295, 0.6645042044775826, 0.6513976880482265, 0.6550455944878715, 0.6568523134504046, 0.6630795512880597, 0.6760513782501221, 0.6878510543278286, 0.6890564135142735, 0.6774699687957764, 0.6571546282087054, 0.6341799667903355], "val_accuracy": [0.04600000008940697, 0.10366666316986084, 0.20499999821186066, 0.3076666593551636, 0.3553333282470703, 0.37433332204818726, 0.3930000066757202, 0.4129999876022339, 0.43833333253860474, 0.46933332085609436, 0.492000013589859, 0.5166666507720947, 0.5536666512489319, 0.5803333520889282, 0.609000027179718, 0.6520000100135803, 0.6620000004768372, 0.6653333306312561, 0.6766666769981384, 0.6773333549499512, 0.6893333196640015, 0.6940000057220459, 0.6990000009536743, 0.7046666741371155, 0.7153333425521851, 0.7139999866485596, 0.6993333101272583, 0.6993333101272583, 0.7120000123977661, 0.7243333458900452, 0.7170000076293945, 0.718666672706604, 0.7179999947547913, 0.718666672706604, 0.722000002861023]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0], [0, 0, 1, 1], [4, 4], [1, 3], [76], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [40, 9, 44]], "fitness": -0.423714280128479, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.193504161696786, 2.3032453728704687, 2.2885760918993756, 2.665219334594924, 2.305660412217396, 2.3032315734701543, 2.3035516557818188, 2.303187962583563], "accuracy": [0.2359001487493515, 0.1344604343175888, 0.1632545292377472, 0.14119666814804077, 0.09681680053472519, 0.09787346422672272, 0.09496764093637466, 0.09628847241401672], "val_loss": [1.9470586095537459, 1.9195384979248047, 1.7368872506277901, 1.9777636528015137, 1.974447454724993, 1.9738445281982422, 1.973660605294364, 1.9737221172877721], "val_accuracy": [0.2136666625738144, 0.20399999618530273, 0.37533333897590637, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 0], [0, 0, 1, 1], [1, 4], [5, 3], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.37142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.193733560536689, 2.306894026979117, 2.8006319942696063, 2.1963642315542726, 2.3503445947584365, 2.3036361770733174, 2.303641138705343], "accuracy": [0.23576806485652924, 0.13181878626346588, 0.15691454708576202, 0.21238937973976135, 0.11227050423622131, 0.10117553919553757, 0.09391097724437714], "val_loss": [1.9626188278198242, 1.9446891375950404, 1.914588519505092, 1.97008330481393, 1.973904814038958, 1.9736748422895158, 1.9736360822405135], "val_accuracy": [0.21299999952316284, 0.3076666593551636, 0.2199999988079071, 0.2163333296775818, 0.10100000351667404, 0.1003333330154419, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0], [0, 1, 1, 1], [4, 9], [2, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 20, 19, 1, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(beta, beta)))))), tf.math.add(grad, beta)), tf.math.add(beta, tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1], [0, 0, 1], [5, 1], [1, 0], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [3, 0, 1, 3, 1, 1], [23, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.314823931738244, 2.4140445588680857, 3.178510010061389, 5381521813.311289, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06656980514526367, 0.01558578759431839, 0.00713247898966074, 0.08347642421722412, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0153507505144392, 2.2000657490321567, 6.408481597900391, 1.9023104159495317e+26, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.006666666828095913, 0.006000000052154064, 0.028333334252238274, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0], [0, 0, 1, 1], [4, 4], [5, 6], [76], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 9, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3021342145012604, 2.302143681586269, 2.3026620655200896, 2.304880085370607, 2.314996723076293, 2.36682271636189], "accuracy": [0.10698718577623367, 0.10315678268671036, 0.10210011899471283, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973747798374721, 1.9740212304251534, 1.975179672241211, 1.979733875819615, 2.0009519713265553, 2.1136973925999234], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09799999743700027, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [4, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 6, 82], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0], [0, 0, 1, 1], [4, 9], [5, 6], [76], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 3, 5, 5, 2, 3, 1, 3, 2, 2, 0, 1, 12, 7, 5, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.square(beta)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), sigma)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0], [0, 0, 1, 1], [4, 9], [5, 6], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [3, 1, 0, 1, 1, 5, 5, 0, 7, 5], [0, 0, 0, 3, 3, 1], [73, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 13, 8, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(tf.math.negative(sigma))))))", "other_info": {"loss": [6671834244.843528, 123026070358.52806, 581464232782.6833, 1612422488151.6438, 3460015443566.0283, 6359483861504.067], "accuracy": [0.1022322028875351, 0.09549596905708313, 0.09998679161071777, 0.09655263274908066, 0.09047681838274002, 0.09576013684272766], "val_loss": [24772667099.42857, 198147861942.85715, 668712079945.1428, 1585046318518.8572, 3095713396443.4287, 5349373528356.571], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [4, 4], [5, 1], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [57, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 3, 1, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022200674538946, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0], [0, 0, 1, 1], [2, 1], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [50, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07053229212760925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [1, 1, 1, 1], [9, 1], [1, 3], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0], [1, 4, 2, 3], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 9, 6, 4, 2, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 1, 1], [0, 0, 1], [5, 1], [1, 0], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 6, 0, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(alpha), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [3, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 0], [0, 0, 1, 1], [1, 4], [4, 3], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [2.3023786545429625, 2.3004228170002143, 2.3019820298847504, 2.3013383053265795, 2.302634922142719, 2.3011575985609847], "accuracy": [0.08875974267721176, 0.09496764093637466, 0.09338264167308807, 0.09232597798109055, 0.08770307898521423, 0.0956280529499054], "val_loss": [1.9709816660199846, 1.9709815979003906, 1.9709816660199846, 1.9709815979003906, 1.9709815297807967, 1.9709815297807967], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1], [4, 4, 1, 2], [5, 3], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 6, 0, 3, 1, 5, 5, 0, 7, 5], [1, 3, 0, 3, 1, 1], [78, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.negative(sigma), tf.math.multiply(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha))))", "other_info": {"loss": [2.3023786545429625, 2.3004228799822717, 2.301982124357837, 2.3013383053265795, 2.3026349851247767, 2.301157805488535], "accuracy": [0.08875974267721176, 0.09496764093637466, 0.09338264167308807, 0.09232597798109055, 0.08770307898521423, 0.0956280529499054], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [2, 1], [5, 0], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.040571428835392, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 5, 2, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024623266473783, 2.300706057295965, 2.3025451690576584, 2.3021541270660513, 2.3037535535535003, 2.3024663723943224], "accuracy": [0.0886276587843895, 0.09311848133802414, 0.09259014576673508, 0.08889182657003403, 0.08453308790922165, 0.0944393053650856], "val_loss": [1.9711360250200545, 1.9713074820382255, 1.9714868409293038, 1.9716846602303642, 1.9719321387154716, 1.9721174240112305], "val_accuracy": [0.03266666829586029, 0.03166666626930237, 0.03099999949336052, 0.03033333271741867, 0.02800000086426735, 0.027666667476296425]}}]