[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [8, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 6, 8, 6, 4, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 83, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8339999914169312, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.305230433615585, 2.0975410437398128, 1.6063799174737936, 1.2032218805440837, 0.9343073243368035, 0.8574384653635974, 0.8008569865068661, 0.7921420897727063, 0.7022665546570535, 0.7228667385794499, 0.692851756093304, 0.6454722171351894, 0.6464405782376109, 0.6191713344529636, 0.6221145046873651, 0.5875030186402721, 0.5828483258224576, 0.6280181867067667, 0.5534915879433733, 0.5563722396129945, 0.5396109655107789, 0.530059925931367, 0.5354595909722021, 0.5359126225107964, 0.5035124849948774, 0.4840519499816537, 0.5014452109554456, 0.4897014573462462, 0.48361727617373007, 0.47312601221047057, 0.4583910569507275, 0.4502313377567176, 0.4460183270634787, 0.43378166474717844, 0.4282757976602774, 0.436816770591756, 0.4383335866593981, 0.42163583512681585, 0.41302344090021237, 0.4136515628856958, 0.4142504467893003, 0.38473336736145997, 0.37904255301756173, 0.3913725756769088, 0.379302754393973, 0.39643574372305923, 0.378915101537741, 0.38100101122404556, 0.3857892182690199, 0.35651018650713473, 0.37533739270582617, 0.34127544423041484, 0.36460138624134225, 0.35166584116089, 0.34236130935562253, 0.3430196202631089, 0.3421132496642147, 0.33710637448517683, 0.32729915911810287, 0.32151963119619575], "accuracy": [0.2763175368309021, 0.26284506916999817, 0.41262713074684143, 0.5567296147346497, 0.6440364718437195, 0.6748117804527283, 0.6983225345611572, 0.6931713223457336, 0.7339849472045898, 0.7231541275978088, 0.7345132827758789, 0.7530049085617065, 0.7552502751350403, 0.7609298825263977, 0.7581561207771301, 0.7761194109916687, 0.7790252566337585, 0.7630431652069092, 0.7950072884559631, 0.7865539789199829, 0.7973847389221191, 0.8013472557067871, 0.8025360107421875, 0.7996301651000977, 0.8108572363853455, 0.8220842480659485, 0.8119139075279236, 0.8203672170639038, 0.821820080280304, 0.819442629814148, 0.8278959393501282, 0.8323867321014404, 0.8354246616363525, 0.8422929644584656, 0.8428213000297546, 0.8378021121025085, 0.8358209133148193, 0.842028796672821, 0.8470479249954224, 0.8494254350662231, 0.8438779711723328, 0.8560295701026917, 0.8573504090309143, 0.852331280708313, 0.8574824929237366, 0.8500858545303345, 0.8607845902442932, 0.8577466607093811, 0.8540483713150024, 0.870030403137207, 0.8580108284950256, 0.8721436858177185, 0.8644828796386719, 0.8679170608520508, 0.8753136992454529, 0.8747853636741638, 0.8708229064941406, 0.8734645247459412, 0.878879964351654, 0.8813894987106323], "val_loss": [1.8744569505964006, 1.528191259929112, 1.3194238798958915, 0.6832438707351685, 0.7070644583020892, 0.751822829246521, 0.6028762034007481, 0.5386953864778791, 0.5762445756367275, 0.5189963749476841, 0.4970651354108538, 0.517467737197876, 0.5030212913240705, 0.4872192825589861, 0.4682152100971767, 0.5164909192493984, 0.4647947720118931, 0.4318107196262905, 0.46319975171770367, 0.40898488249097553, 0.4422875557626997, 0.41509475878306795, 0.4031457986150469, 0.4044720445360456, 0.40159753390720915, 0.38571726424353464, 0.4046639289174761, 0.38222198826926096, 0.3651934691837856, 0.3933130417551313, 0.3750966191291809, 0.36627084016799927, 0.35837898935590473, 0.36319330760410856, 0.3756544589996338, 0.39357892104557585, 0.37307562146868023, 0.34396246501377653, 0.3855540667261396, 0.3527178168296814, 0.3359170896666391, 0.32933874641145977, 0.3648013302258083, 0.32457779135022846, 0.32901873758860994, 0.3361447879246303, 0.3265976905822754, 0.3294628177370344, 0.32187858649662565, 0.32595719609941753, 0.31599749837602886, 0.30876234599522184, 0.3351989303316389, 0.33076508556093487, 0.3111881273133414, 0.33476950441087994, 0.3554666382925851, 0.30964474167142597, 0.31491581882749287, 0.3148584110396249], "val_accuracy": [0.19633333384990692, 0.40299999713897705, 0.4866666793823242, 0.6890000104904175, 0.70333331823349, 0.6466666460037231, 0.7303333282470703, 0.7546666860580444, 0.7283333539962769, 0.7646666765213013, 0.781000018119812, 0.7573333382606506, 0.7739999890327454, 0.7773333191871643, 0.7860000133514404, 0.7513333559036255, 0.8006666898727417, 0.8143333196640015, 0.7799999713897705, 0.8143333196640015, 0.7950000166893005, 0.8133333325386047, 0.8253333568572998, 0.8243333101272583, 0.8220000267028809, 0.8343333601951599, 0.8270000219345093, 0.8323333263397217, 0.8429999947547913, 0.8353333473205566, 0.8356666564941406, 0.843999981880188, 0.846666693687439, 0.8503333330154419, 0.8410000205039978, 0.8263333439826965, 0.8429999947547913, 0.8569999933242798, 0.8360000252723694, 0.8533333539962769, 0.8529999852180481, 0.8650000095367432, 0.8403333425521851, 0.8676666617393494, 0.8636666536331177, 0.859666645526886, 0.8633333444595337, 0.8690000176429749, 0.8646666407585144, 0.8663333058357239, 0.8706666827201843, 0.8679999709129333, 0.8553333282470703, 0.8586666584014893, 0.8740000128746033, 0.8583333492279053, 0.847000002861023, 0.8676666617393494, 0.8740000128746033, 0.8683333396911621]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 3, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 1, 0, 6, 7, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [94, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8217142820358276, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.negative(grad), tf.math.add(beta, tf.math.divide_no_nan(grad, grad)))), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3049665454072943, 2.083547066703779, 1.453784412475483, 1.2000677248017977, 0.9814150328287249, 0.8703772664038638, 0.8328461055159805, 0.7723760950551167, 0.7322080140305296, 0.7211274925145522, 0.6895564400351453, 0.6478409038369745, 0.6575259323275053, 0.6195172337005009, 0.6119481749176239, 0.5967433378129918, 0.5913930685843585, 0.6345311782741433, 0.55623202698027, 0.5649285728527397, 0.5406121689456722, 0.5388686754967732, 0.5387763457999899, 0.5395822253020652, 0.5020994886415446, 0.48824201091059194, 0.4929589178379201, 0.48720594052593896, 0.4923593983115175, 0.47403099304334506, 0.4573828923884888, 0.4626001456803838, 0.4484871904359691, 0.4464283530754011, 0.44272200548102464, 0.44010120699544547, 0.4290928512382596], "accuracy": [0.27605336904525757, 0.26535463333129883, 0.4711398780345917, 0.5551446080207825, 0.6293752193450928, 0.6680755615234375, 0.6845859289169312, 0.7119271159172058, 0.7202483415603638, 0.7244749665260315, 0.7358341217041016, 0.7512878179550171, 0.7490423917770386, 0.7607977986335754, 0.7663452625274658, 0.7693831920623779, 0.7744023203849792, 0.7604015469551086, 0.7931581139564514, 0.7854973077774048, 0.7942147850990295, 0.7971205711364746, 0.8038568496704102, 0.7992339134216309, 0.8090080618858337, 0.8203672170639038, 0.8173292875289917, 0.819970965385437, 0.8186501264572144, 0.8210275769233704, 0.8260467648506165, 0.8257825970649719, 0.8327829837799072, 0.8381983637809753, 0.8327829837799072, 0.8334434032440186, 0.8392550349235535], "val_loss": [1.8768139566693987, 1.5363373756408691, 1.1823584692818778, 0.8352163178580148, 0.6538119145802089, 0.8064471823828561, 0.605836136000497, 0.5868265628814697, 0.5779083967208862, 0.5168054785047259, 0.5170606545039585, 0.5230732475008283, 0.4833382027489798, 0.49932689326150076, 0.4913014514105661, 0.5364454303468976, 0.552699225289481, 0.4346841147967747, 0.42678055592945646, 0.420713084084647, 0.44288200991494314, 0.4267827016966684, 0.3973557438169207, 0.4048161336353847, 0.4128586394446237, 0.37842358010155813, 0.4108106664248875, 0.39959170137132916, 0.3683868646621704, 0.3735086236681257, 0.37388479709625244, 0.3678437982286726, 0.3607583897454398, 0.4081371682030814, 0.36293535573141916, 0.37866268839154926, 0.3652166894504002], "val_accuracy": [0.19599999487400055, 0.38733333349227905, 0.492000013589859, 0.6330000162124634, 0.690666675567627, 0.6536666750907898, 0.721666693687439, 0.7296666502952576, 0.7210000157356262, 0.7773333191871643, 0.7736666798591614, 0.7486666440963745, 0.7799999713897705, 0.768666684627533, 0.7633333206176758, 0.7326666712760925, 0.7429999709129333, 0.8130000233650208, 0.8100000023841858, 0.8103333115577698, 0.7956666946411133, 0.8136666417121887, 0.8276666402816772, 0.8270000219345093, 0.8163333535194397, 0.8399999737739563, 0.8206666707992554, 0.8213333487510681, 0.8410000205039978, 0.8423333168029785, 0.8356666564941406, 0.8479999899864197, 0.846666693687439, 0.8190000057220459, 0.8413333296775818, 0.8286666870117188, 0.8460000157356262]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [8, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 6, 8, 6, 4, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [41, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8208571672439575, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3050990336134354, 2.0809543279215266, 1.507293608666978, 1.1744767612296798, 1.101018752246847, 0.881621075714143, 0.8091595800262101, 0.7725150966137282, 0.7313691071153333, 0.7088138232251924, 0.6829259086672372, 0.639839593540046, 0.637863156376986, 0.6273821814500141, 0.6020678957502809, 0.594185112977875, 0.5935197950842327, 0.5950234848368736, 0.5422327757558771, 0.5475190270452484, 0.5444648703249013, 0.53155340832364, 0.5202505664503602, 0.5394796553289162, 0.5008624784147514, 0.4783256782587603, 0.5085798033932968, 0.48245949197470506, 0.48093791889586957, 0.4666201319826466, 0.4452225311935192, 0.45213296215894155, 0.4311881213140305, 0.45410891592683666], "accuracy": [0.27618545293807983, 0.26601505279541016, 0.44366663694381714, 0.5698058605194092, 0.6026945114135742, 0.6641130447387695, 0.6848500967025757, 0.705058753490448, 0.7148329019546509, 0.7259278893470764, 0.7349095344543457, 0.757099449634552, 0.7638356685638428, 0.7594769597053528, 0.7668735980987549, 0.7725531458854675, 0.7758552432060242, 0.778761088848114, 0.7988376617431641, 0.7909126877784729, 0.791969358921051, 0.7989697456359863, 0.8059701323509216, 0.7998943328857422, 0.8086118102073669, 0.8253863453865051, 0.809140145778656, 0.819442629814148, 0.8238013386726379, 0.8191784620285034, 0.837537944316864, 0.8334434032440186, 0.8389908671379089, 0.833179235458374], "val_loss": [1.8774944714137487, 1.542959383555821, 0.8586207287652152, 1.033562762396676, 0.8104486124856132, 0.6750880990709577, 0.6217060940606254, 0.5684666974203927, 0.5580201148986816, 0.5192011765071324, 0.49097536291394916, 0.4896272250584194, 0.5078707422528949, 0.4710827384676252, 0.45240739413670134, 0.4972701924187796, 0.516829116003854, 0.4231272169521877, 0.4432659660066877, 0.42056008747645784, 0.4523833819798061, 0.4052009241921561, 0.40782512937273296, 0.40014517307281494, 0.4098384210041591, 0.3776600956916809, 0.41300519023622784, 0.3785360370363508, 0.3625694513320923, 0.3788269417626517, 0.4064157349722726, 0.3661095755440848, 0.3570934108325413, 0.3889258248465402], "val_accuracy": [0.19466666877269745, 0.38333332538604736, 0.6516666412353516, 0.5506666898727417, 0.6466666460037231, 0.7006666660308838, 0.7023333311080933, 0.7366666793823242, 0.7369999885559082, 0.7716666460037231, 0.7836666703224182, 0.7673333287239075, 0.7746666669845581, 0.7879999876022339, 0.7929999828338623, 0.7676666378974915, 0.7876666784286499, 0.8153333067893982, 0.7946666479110718, 0.8116666674613953, 0.793666660785675, 0.8190000057220459, 0.8243333101272583, 0.8263333439826965, 0.8166666626930237, 0.8389999866485596, 0.8209999799728394, 0.8330000042915344, 0.8496666550636292, 0.846666693687439, 0.8206666707992554, 0.8429999947547913, 0.847000002861023, 0.8360000252723694]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 8, 9, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 1, 9, 2, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 2, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.7922857403755188, "mapping_values": [1, 3, 3, 3, 0, 1, 17, 17, 11, 6, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(grad)))))))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.278077511031, 2.205573416845815, 2.075502793613505, 1.8386594764844002, 1.5550104274473895, 1.3312033289978769, 1.1908549073979744, 1.0916049883680856, 1.0178297069865982, 0.9733423499887205, 0.9315362672024179, 0.9029237592949324, 0.8732699058578943, 0.8407025959324512, 0.8281802558596612, 0.8098335257846886, 0.7886765795203721, 0.7798375791452187, 0.7562460520043586, 0.7577957446627754, 0.7439540176737373, 0.7367069839628192, 0.7314659692450379, 0.7118784003978266, 0.7101049935104446, 0.6984706220531098, 0.696160113783151, 0.6816680290915978, 0.6812795101927098, 0.6682405778839289, 0.6680167860610688, 0.6661806829680131, 0.6611550993230348, 0.65688112529671, 0.6476884430047779, 0.6440198244183779, 0.6506025625367946, 0.6304808452207776, 0.6318346837634156, 0.6340386085758403, 0.617922740038659, 0.6262800332546046, 0.6136420835845301, 0.6118757450160192, 0.6125094018371712, 0.6117419410674579, 0.5989354494351438, 0.6020820668155901, 0.5982218461895757, 0.5979454810703435, 0.5873072452674909, 0.58508742985362, 0.5955530211453456, 0.5871122399923934, 0.5721165511696613, 0.5872437853020227, 0.5791046218455759], "accuracy": [0.15942411124706268, 0.29639413952827454, 0.38805970549583435, 0.4567428231239319, 0.5132743120193481, 0.5558050274848938, 0.5881653428077698, 0.6234315037727356, 0.6474705934524536, 0.6580372452735901, 0.6717738509178162, 0.68101966381073, 0.6951525807380676, 0.6976621150970459, 0.7054550051689148, 0.7111346125602722, 0.7124554514884949, 0.7194558382034302, 0.7265883088111877, 0.726192057132721, 0.7297582626342773, 0.7363624572753906, 0.7342491149902344, 0.735569953918457, 0.7420420050621033, 0.7461365461349487, 0.7494386434555054, 0.7494386434555054, 0.7555144429206848, 0.7580240368843079, 0.7593448758125305, 0.7586844563484192, 0.7531369924545288, 0.7637035846710205, 0.76542067527771, 0.7605336308479309, 0.7598732113838196, 0.7709681391716003, 0.7691190242767334, 0.7650244235992432, 0.7766477465629578, 0.7716285586357117, 0.7751948237419128, 0.7786290049552917, 0.7754589915275574, 0.7696473598480225, 0.7771760821342468, 0.7759873270988464, 0.778761088848114, 0.7771760821342468, 0.7877426743507385, 0.7853652238845825, 0.7823272943496704, 0.7880068421363831, 0.7918372750282288, 0.7844406366348267, 0.7862898111343384], "val_loss": [1.9143627711704798, 1.8219329289027624, 1.645740032196045, 1.3654743943895613, 1.0969186169760567, 0.9265623092651367, 0.8262729474476406, 0.7617931365966797, 0.7153350966317313, 0.6849101781845093, 0.6566645417894635, 0.6371429988316127, 0.6198837586811611, 0.6073729821613857, 0.5926257542201451, 0.5848716838019234, 0.5782686812537057, 0.5635943923677716, 0.5564193725585938, 0.5472217627934047, 0.543884141104562, 0.5376388515744891, 0.538960439818246, 0.5272783041000366, 0.5170272929327828, 0.5163066727774483, 0.5115723439625331, 0.5051321472440448, 0.5030109882354736, 0.4964271102632795, 0.49702186243874685, 0.49483593872615267, 0.4973649638039725, 0.4832801818847656, 0.4819810390472412, 0.4772849423544748, 0.4735990251813616, 0.4703780582972935, 0.47664386885506765, 0.4696496043886457, 0.47252629484449116, 0.46401192460741314, 0.4589080129350935, 0.46507210390908377, 0.45691003118242535, 0.4600167955671038, 0.4542381933757237, 0.45751871381487164, 0.45100556101117817, 0.4462686095918928, 0.4504642997469221, 0.4457346371241978, 0.4439337338720049, 0.44318876947675434, 0.4444378784724644, 0.44377176250730244, 0.4409319758415222], "val_accuracy": [0.37533333897590637, 0.4606666564941406, 0.5360000133514404, 0.5799999833106995, 0.6483333110809326, 0.6596666574478149, 0.6949999928474426, 0.6990000009536743, 0.7053333520889282, 0.7200000286102295, 0.7236666679382324, 0.7326666712760925, 0.7403333187103271, 0.7369999885559082, 0.7453333139419556, 0.749666690826416, 0.746999979019165, 0.7599999904632568, 0.753000020980835, 0.7616666555404663, 0.7609999775886536, 0.7576666474342346, 0.7603333592414856, 0.7590000033378601, 0.7763333320617676, 0.7716666460037231, 0.7703333497047424, 0.778333306312561, 0.7806666493415833, 0.7746666669845581, 0.7826666831970215, 0.7789999842643738, 0.7756666541099548, 0.7853333353996277, 0.7906666398048401, 0.7863333225250244, 0.7903333306312561, 0.7940000295639038, 0.793666660785675, 0.7950000166893005, 0.7923333048820496, 0.7979999780654907, 0.7960000038146973, 0.7940000295639038, 0.8016666769981384, 0.8033333420753479, 0.8069999814033508, 0.793666660785675, 0.8009999990463257, 0.8053333163261414, 0.7979999780654907, 0.8106666803359985, 0.8080000281333923, 0.8056666851043701, 0.8019999861717224, 0.8013333082199097, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 8, 9, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [8, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 8, 6, 8, 6, 4, 0, 6, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.7917143106460571, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.divide_no_nan(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.278077511031, 2.20557210354395, 2.075495780907791, 1.838629757030655, 1.554950236455403, 1.3311484863477503, 1.1908050398265428, 1.09151838651155, 1.0176196082739577, 0.9731691698703028, 0.9314608765379029, 0.9029257072669924, 0.873244328647478, 0.8407515837862476, 0.8282850738277745, 0.8097386498965167, 0.7885727177064936, 0.7797526363620448, 0.7560814342415643, 0.7577347744095358, 0.7438431810693434, 0.7369156960152428, 0.7314419180820049, 0.7118795806186042, 0.7104541614008082, 0.6986128790676791, 0.6961880841936654, 0.6814599134792599, 0.6808368299284852, 0.6683185085912091, 0.6688286204852008, 0.666865447776476, 0.6609398563382742, 0.6573068304399473, 0.6474689955425427, 0.6438613724651874, 0.6495992701759963, 0.6299625046343583, 0.6324552198946516, 0.6341293492431828, 0.6178315500651903, 0.6261150488653802, 0.6131991388429, 0.6116790058055117, 0.6122114651034049, 0.6116938687444694, 0.5984067017801245, 0.601318263783982, 0.5979355370930677, 0.5974611554793269, 0.5866921507624147, 0.5852220226209618, 0.5951594553052347, 0.5860426973011735, 0.5718254389669665, 0.5868601048855561, 0.5786873662728423], "accuracy": [0.15942411124706268, 0.29626205563545227, 0.3881917893886566, 0.4563465714454651, 0.5131422281265259, 0.5556729435920715, 0.588297426700592, 0.6239598393440247, 0.6473385095596313, 0.6576409935951233, 0.6719059348106384, 0.6806234121322632, 0.6950204968452454, 0.6979262828826904, 0.7042662501335144, 0.7111346125602722, 0.713379979133606, 0.7199841737747192, 0.7276449799537659, 0.7259278893470764, 0.7292299270629883, 0.7363624572753906, 0.735569953918457, 0.7351737022399902, 0.7413815855979919, 0.7460044622421265, 0.7489103078842163, 0.7511557340621948, 0.7560427784919739, 0.7593448758125305, 0.7576277852058411, 0.7577598690986633, 0.7510236501693726, 0.7630431652069092, 0.7671377658843994, 0.7602694630622864, 0.7602694630622864, 0.7726852297782898, 0.7691190242767334, 0.7648923397064209, 0.7763835787773132, 0.7718927264213562, 0.7754589915275574, 0.7788931727409363, 0.7757231593132019, 0.769911527633667, 0.7775723338127136, 0.7769119143486023, 0.7783648371696472, 0.7783648371696472, 0.7902522683143616, 0.7865539789199829, 0.7836481332778931, 0.7884030938148499, 0.7917051911354065, 0.7847048044204712, 0.7872143983840942], "val_loss": [1.914362566811698, 1.8219315665108817, 1.6457278047289168, 1.365410906927926, 1.0968383720942907, 0.9264906474522182, 0.8262617928641183, 0.7617826972688947, 0.7152960641043526, 0.6848431655338832, 0.6564298527581351, 0.6371587855475289, 0.6200764008930751, 0.6072652169636318, 0.5925667626517159, 0.5848005158560616, 0.5778563874108451, 0.5633963516780308, 0.5562870161873954, 0.5471875497273037, 0.5441933700016567, 0.5373349360057286, 0.5394106762749808, 0.5272408042635236, 0.5175228459494454, 0.5167947156088692, 0.5115184783935547, 0.5046686444963727, 0.503144349370684, 0.496387243270874, 0.49710023403167725, 0.49480806078229633, 0.49690100124904085, 0.48296388557979036, 0.4817852633340018, 0.4770803962435041, 0.4732394388743809, 0.46993461677006315, 0.4768155132021223, 0.4688577481678554, 0.47290425641196115, 0.4645630121231079, 0.4588705130985805, 0.46400138310023714, 0.45617214271000456, 0.4606682913643973, 0.4538952623094831, 0.4576280117034912, 0.4509660005569458, 0.4461473992892674, 0.45026654856545584, 0.4455291884286063, 0.44462893690381733, 0.44323829242161344, 0.4449571115630014, 0.4432897227151053, 0.4408557415008545], "val_accuracy": [0.37533333897590637, 0.4606666564941406, 0.5360000133514404, 0.5799999833106995, 0.6483333110809326, 0.6589999794960022, 0.6946666836738586, 0.6993333101272583, 0.7053333520889282, 0.7196666598320007, 0.7236666679382324, 0.7323333621025085, 0.7393333315849304, 0.737333357334137, 0.7450000047683716, 0.7486666440963745, 0.7463333606719971, 0.7596666812896729, 0.753333330154419, 0.7620000243186951, 0.7613333463668823, 0.7566666603088379, 0.7603333592414856, 0.7576666474342346, 0.7760000228881836, 0.7720000147819519, 0.7699999809265137, 0.7786666750907898, 0.781333327293396, 0.7766666412353516, 0.7820000052452087, 0.7770000100135803, 0.7753333449363708, 0.7863333225250244, 0.7916666865348816, 0.7886666655540466, 0.7933333516120911, 0.7963333129882812, 0.7926666736602783, 0.7943333387374878, 0.7926666736602783, 0.7986666560173035, 0.7983333468437195, 0.793666660785675, 0.8050000071525574, 0.8036666512489319, 0.8086666464805603, 0.7933333516120911, 0.8006666898727417, 0.8046666383743286, 0.7979999780654907, 0.812333345413208, 0.8090000152587891, 0.8059999942779541, 0.8023333549499512, 0.8023333549499512, 0.8113333582878113]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 1, 9, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 9, 1, 4, 2, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 2, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [62, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.7908571362495422, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, grad))), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2429616666976977, 1.701338644434574, 2.0888833843753196, 1.5117285570149188, 1.157266376166847, 0.9026613001022923, 0.8024559458406484, 0.731816471835421, 0.6943613846760857, 0.6583329290053187, 0.6224625290754906, 0.6045889845613664, 0.5937370223502095, 0.5932878049577878, 0.5637614487373535, 0.5412465569176583], "accuracy": [0.2723550498485565, 0.38449347019195557, 0.26958128809928894, 0.4881785809993744, 0.5777308344841003, 0.6639809608459473, 0.7096816897392273, 0.7246070504188538, 0.7329282760620117, 0.7552502751350403, 0.763967752456665, 0.7751948237419128, 0.7745344042778015, 0.7761194109916687, 0.7928939461708069, 0.7979130744934082], "val_loss": [1.481644630432129, 1.775399889264788, 1.605841841016497, 0.7860445635659354, 0.7310456889016288, 0.7501297167369297, 0.5533101728984288, 0.6084652628217425, 0.47850397654942106, 0.47841853754861013, 0.45384132862091064, 0.5069165570395333, 0.4567130463463919, 0.45430667059762136, 0.46758244718824116, 0.47384144578661236], "val_accuracy": [0.27133333683013916, 0.44066667556762695, 0.45366665720939636, 0.6736666560173035, 0.6813333630561829, 0.6790000200271606, 0.7266666889190674, 0.7116666436195374, 0.7826666831970215, 0.7839999794960022, 0.7990000247955322, 0.7549999952316284, 0.7866666913032532, 0.7789999842643738, 0.7680000066757202, 0.7919999957084656]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 0, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 73, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 5, 8, 2, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 86, 91, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [7, 2], [94], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2780774795399714, 2.2055729087065745, 2.075501502386851, 1.8386343443918034, 1.5549601298344684, 1.3311336432560135, 1.190789318701941, 1.0916747414535142, 1.0176712400594234, 0.9732016746583096, 0.9314593030492848, 0.9029116749826471, 0.8731532575054065, 0.8406628769591279, 0.8281528781890365, 0.8096998030121269, 0.7884198936961346, 0.7798126351642822, 0.7562540835865642, 0.7577498685477543, 0.743885922087119, 0.7369512168092971, 0.7313973934281032, 0.7119070504241065, 0.7100627421388033, 0.6985771029128721, 0.6961632426373002, 0.6815320912479426, 0.6813561164188096, 0.6681189133648261, 0.667683411449127, 0.6662394022346408, 0.6613807242544273, 0.6569228102392162, 0.6476786153238715, 0.6438819050883352, 0.6503835417858724, 0.6306992988340165, 0.63194828990932, 0.6342993080182996, 0.6182071892277692, 0.6261914476758186, 0.613563597139319, 0.6117406435504708, 0.61232704786246, 0.6115119264362322, 0.5987047931269694, 0.6021126521781546, 0.598044482259671, 0.598131804717546, 0.5871583991960181, 0.5853851520941163, 0.5959130212253253, 0.5871553861186363, 0.5718196228809833, 0.5868382456044101, 0.5791421062233678], "accuracy": [0.15942411124706268, 0.29626205563545227, 0.38805970549583435, 0.4566107392311096, 0.5128780603408813, 0.555408775806427, 0.5881653428077698, 0.6230352520942688, 0.6474705934524536, 0.6577730774879456, 0.6716417670249939, 0.6806234121322632, 0.6947563290596008, 0.6984546184539795, 0.7047945857048035, 0.7103421092033386, 0.7123233675956726, 0.7206445932388306, 0.7276449799537659, 0.7257958054542542, 0.7297582626342773, 0.735569953918457, 0.7351737022399902, 0.7354378700256348, 0.7420420050621033, 0.7465327978134155, 0.7494386434555054, 0.7499669790267944, 0.7567031979560852, 0.7580240368843079, 0.759080708026886, 0.7576277852058411, 0.7531369924545288, 0.7644960880279541, 0.7650244235992432, 0.7607977986335754, 0.7611940503120422, 0.7721568942070007, 0.7703077793121338, 0.7656848430633545, 0.7777044177055359, 0.7720248103141785, 0.7757231593132019, 0.7796856164932251, 0.7751948237419128, 0.7700436115264893, 0.7771760821342468, 0.776251494884491, 0.7796856164932251, 0.7786290049552917, 0.7872143983840942, 0.7854973077774048, 0.7820631265640259, 0.7887993454933167, 0.7917051911354065, 0.7853652238845825, 0.7861577272415161], "val_loss": [1.9143624986921037, 1.8219310215541296, 1.6457304613930839, 1.3654062747955322, 1.0968614646366663, 0.9265602997371128, 0.8264428036553519, 0.7618772472654071, 0.7152677774429321, 0.6848753690719604, 0.6564944301332746, 0.6371110848018101, 0.6199538026537214, 0.6072499752044678, 0.5923938070024762, 0.5847338097436088, 0.5783042907714844, 0.5633779764175415, 0.5560976266860962, 0.5471205030168805, 0.5438192061015538, 0.5377220255987984, 0.5386439221245902, 0.5272234167371478, 0.5175197124481201, 0.5169388055801392, 0.5115365641457694, 0.5049632787704468, 0.5035606452396938, 0.4967496565410069, 0.49693214893341064, 0.4949785811560495, 0.49684442792619976, 0.48322977338518414, 0.48182313782828196, 0.47745600768498014, 0.47360399791172575, 0.4703180619648525, 0.4764518737792969, 0.46912927286965506, 0.4721327338899885, 0.46390044689178467, 0.45875440325055805, 0.4638575315475464, 0.4566857303891863, 0.459647536277771, 0.45418293135506765, 0.45739039352961947, 0.45060319559914724, 0.4461279000554766, 0.45041617325374056, 0.4460032071386065, 0.4442797899246216, 0.44288891553878784, 0.4447012884276254, 0.4432823657989502, 0.4410562089511326], "val_accuracy": [0.37533333897590637, 0.4606666564941406, 0.5360000133514404, 0.5796666741371155, 0.6483333110809326, 0.6596666574478149, 0.6943333148956299, 0.6993333101272583, 0.7059999704360962, 0.7200000286102295, 0.7243333458900452, 0.7323333621025085, 0.7400000095367432, 0.7379999756813049, 0.7453333139419556, 0.7493333220481873, 0.7456666827201843, 0.7603333592414856, 0.7536666393280029, 0.7613333463668823, 0.7616666555404663, 0.7576666474342346, 0.7606666684150696, 0.7576666474342346, 0.7746666669845581, 0.7710000276565552, 0.7699999809265137, 0.778333306312561, 0.7799999713897705, 0.7739999890327454, 0.7816666960716248, 0.7773333191871643, 0.7760000228881836, 0.7856666445732117, 0.7896666526794434, 0.7866666913032532, 0.7910000085830688, 0.793666660785675, 0.7929999828338623, 0.7953333258628845, 0.7913333177566528, 0.7986666560173035, 0.796999990940094, 0.7940000295639038, 0.8026666641235352, 0.8033333420753479, 0.8090000152587891, 0.793666660785675, 0.8009999990463257, 0.8046666383743286, 0.7993333339691162, 0.8109999895095825, 0.8073333501815796, 0.8056666851043701, 0.8019999861717224, 0.8013333082199097, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 1, 0, 6, 4, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 1, 3, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [41, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.7897142767906189, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(alpha, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2432050463104956, 1.7045028059316616, 2.085256623428228, 1.4394189971328775, 1.174112058665223, 0.9280076120444859, 0.8531475498487039, 0.7665982630746933, 0.709547777296199, 0.6666882572597942, 0.637353466572999, 0.6437775978102361, 0.6286936414996, 0.6014138003539384, 0.576075666277652, 0.5459834559324978, 0.553588587066926, 0.5686838989716951], "accuracy": [0.2723550498485565, 0.38422930240631104, 0.2785629332065582, 0.49253731966018677, 0.5894861817359924, 0.652621865272522, 0.6877558827400208, 0.7086250185966492, 0.7359662055969238, 0.748778223991394, 0.7592127919197083, 0.759609043598175, 0.7633073329925537, 0.7749306559562683, 0.7865539789199829, 0.7965922355651855, 0.7935543656349182, 0.7839123010635376], "val_loss": [1.4818437099456787, 1.786308697291783, 1.3943039689745222, 1.1069915635245187, 0.6763560090746198, 0.7274714538029262, 0.5708410229001727, 0.5287837982177734, 0.5249052728925433, 0.4972207716533116, 0.4696046624864851, 0.5175038065229144, 0.4434260300227574, 0.4500665324074881, 0.46964541503361296, 0.43043691771371023, 0.45931741169520784, 0.43917410714285715], "val_accuracy": [0.2706666588783264, 0.45766666531562805, 0.40433332324028015, 0.5540000200271606, 0.7080000042915344, 0.6736666560173035, 0.7239999771118164, 0.7513333559036255, 0.7526666522026062, 0.7646666765213013, 0.7829999923706055, 0.753333330154419, 0.7983333468437195, 0.7846666574478149, 0.7673333287239075, 0.7923333048820496, 0.7776666879653931, 0.7923333048820496]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 3, 1, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 3, 0, 8, 4, 2, 8, 8, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 2, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [41, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [41, 49, 44, 92]], "fitness": -0.7882857322692871, "mapping_values": [1, 7, 7, 3, 4, 2, 16, 16, 10, 6, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.sqrt(grad))), tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), alpha), tf.math.add(beta, tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.085469588533038, 1.359377601505381, 1.069986711246242, 0.9045403609816204, 0.8436525130646655, 0.7646497380479987, 0.7809237272842386, 0.7097293828315014, 0.6960349341409396, 0.6672008093070076, 0.6396524052909022, 0.6460142563110833, 0.6573605826817106, 0.6114151018123428, 0.6130825566688092, 0.5866007352265794], "accuracy": [0.3183199167251587, 0.5152555704116821, 0.6126006841659546, 0.6699247360229492, 0.6910579800605774, 0.7132478952407837, 0.7066437602043152, 0.7401928305625916, 0.7382115721702576, 0.7516840696334839, 0.7600052952766418, 0.7553823590278625, 0.7568352818489075, 0.7666094303131104, 0.7675340175628662, 0.783119797706604], "val_loss": [1.197411366871425, 0.8964143821171352, 0.7626555647168841, 0.7161571128027779, 0.643038443156651, 0.5807955946241107, 0.5726544005530221, 0.5790414980479649, 0.5261223145893642, 0.50362685748509, 0.48168143204280306, 0.5141820907592773, 0.5254734754562378, 0.4859473875590733, 0.4717456613268171, 0.48601092611040386], "val_accuracy": [0.5676666498184204, 0.5793333053588867, 0.6826666593551636, 0.6733333468437195, 0.7126666903495789, 0.734333336353302, 0.7490000128746033, 0.7360000014305115, 0.7493333220481873, 0.7826666831970215, 0.7839999794960022, 0.7689999938011169, 0.7400000095367432, 0.765999972820282, 0.778333306312561, 0.7826666831970215]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 0, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 73, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 5, 8, 2, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 86, 91, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [7, 2], [94], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [41, 49, 44, 92]], "fitness": -0.7851428389549255, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0799127551527103, 1.4177643503605524, 1.0587333255849574, 0.9519147854108915, 0.8603892128748775, 0.7879306601810417, 0.7747972274516253, 0.7135432981197718, 0.7020634303412905, 0.6899516305289233, 0.6466785914248259, 0.6552953957850041, 0.6319722016694413, 0.6283261499321771, 0.6317270666758429, 0.6121477230019369, 0.5984565847427964, 0.5818738039253788], "accuracy": [0.32281073927879333, 0.5036323070526123, 0.6267336010932922, 0.6424514651298523, 0.6818121671676636, 0.7022850513458252, 0.7067758440971375, 0.7323999404907227, 0.7364945411682129, 0.7354378700256348, 0.7565711140632629, 0.7490423917770386, 0.7589486241340637, 0.7605336308479309, 0.7530049085617065, 0.7658169269561768, 0.7761194109916687, 0.7738739848136902], "val_loss": [1.1959397111620222, 0.9461567401885986, 0.683248485837664, 0.7162409339632306, 0.5883946248463222, 0.590175918170384, 0.5449401651109967, 0.5588224104472569, 0.5468476159232003, 0.5103963613510132, 0.493742687361581, 0.47309742655072895, 0.45953828947884695, 0.49000115053994314, 0.4711075850895473, 0.47516281264168875, 0.4709369795663016, 0.47116005420684814], "val_accuracy": [0.5446666479110718, 0.6306666731834412, 0.7009999752044678, 0.6460000276565552, 0.7369999885559082, 0.7269999980926514, 0.749666690826416, 0.7463333606719971, 0.7596666812896729, 0.7726666927337646, 0.7826666831970215, 0.7853333353996277, 0.7976666688919067, 0.7710000276565552, 0.7913333177566528, 0.7796666622161865, 0.7803333401679993, 0.7730000019073486]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 5, 9, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [68, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 1, 0, 6, 4, 0, 9, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.7802857160568237, "mapping_values": [1, 3, 3, 3, 0, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2780775425220288, 2.2055723823970097, 2.075495987646395, 1.8386353828399693, 1.5549450023157596, 1.3311140942079138, 1.1907591240485709, 1.091432823638528, 1.0171673110982824, 0.973169750336564, 0.9314299377672677, 0.9028162159121126, 0.873301560238541, 0.8406363384456934, 0.8281286025736956, 0.8095534620047592, 0.7883075379802567, 0.7799910677579951, 0.756261832647005, 0.757506971723919, 0.7435125497353942, 0.736830545706189, 0.7315788353911291, 0.7122972439214333, 0.7102777261334703, 0.6984841158959718, 0.696112810565559, 0.681220276992492, 0.6805569629517403, 0.668217578033147, 0.6687392236817672, 0.6666040818972468, 0.6609685338955861, 0.6570724685509223, 0.6475964859177203, 0.6436632520660291, 0.6501407337352474, 0.6305919870677137, 0.632177039852956, 0.6340048881081574, 0.6182582749509226, 0.6259538114283457, 0.6131117636139335], "accuracy": [0.15942411124706268, 0.29639413952827454, 0.3883238732814789, 0.4566107392311096, 0.5131422281265259, 0.5551446080207825, 0.5881653428077698, 0.6234315037727356, 0.6477347612380981, 0.6581693291664124, 0.6716417670249939, 0.6807554960250854, 0.6950204968452454, 0.6988508701324463, 0.7047945857048035, 0.7113987803459167, 0.7135120630264282, 0.7195879220962524, 0.7260599732398987, 0.726192057132721, 0.7294940948486328, 0.7351737022399902, 0.733588695526123, 0.7354378700256348, 0.7400607466697693, 0.7471932172775269, 0.7494386434555054, 0.7504953145980835, 0.7569673657417297, 0.759080708026886, 0.7581561207771301, 0.7578919529914856, 0.7512878179550171, 0.7629110813140869, 0.7676661014556885, 0.7614582180976868, 0.7598732113838196, 0.7726852297782898, 0.7691190242767334, 0.7640998363494873, 0.7763835787773132, 0.7734777331352234, 0.7754589915275574], "val_loss": [1.9143627030508858, 1.8219314302716936, 1.645742620740618, 1.3654122352600098, 1.096827609198434, 0.9265249456678119, 0.8262326206479754, 0.7614106110164097, 0.7149478026798793, 0.6848818744931903, 0.656662140573774, 0.63722825050354, 0.6198899575642177, 0.6074309519359044, 0.5922853776386806, 0.5847805908748082, 0.578020623752049, 0.5635565689631871, 0.5561619656426566, 0.5468717643192836, 0.5435513598578317, 0.5375385965619769, 0.5394860335758754, 0.5268842322485787, 0.5175538403647286, 0.5166044916425433, 0.5117024864469256, 0.5047296115330288, 0.5031672716140747, 0.4964031662259783, 0.4976594107491629, 0.4951004981994629, 0.4965078490121024, 0.4826365368706839, 0.48231988293784006, 0.4774371385574341, 0.4730389288493565, 0.46988584314073834, 0.4765998295375279, 0.46854041303907124, 0.4729466608592442, 0.464410594531468, 0.45858825956072125], "val_accuracy": [0.37533333897590637, 0.4606666564941406, 0.5360000133514404, 0.5796666741371155, 0.6483333110809326, 0.6589999794960022, 0.6946666836738586, 0.699999988079071, 0.7059999704360962, 0.7196666598320007, 0.7239999771118164, 0.7323333621025085, 0.7396666407585144, 0.7369999885559082, 0.7446666955947876, 0.7483333349227905, 0.746666669845581, 0.7603333592414856, 0.7540000081062317, 0.762666642665863, 0.7616666555404663, 0.7576666474342346, 0.7603333592414856, 0.7570000290870667, 0.7753333449363708, 0.7716666460037231, 0.7699999809265137, 0.777999997138977, 0.7816666960716248, 0.7770000100135803, 0.7806666493415833, 0.778333306312561, 0.7766666412353516, 0.7870000004768372, 0.7903333306312561, 0.7883333563804626, 0.793666660785675, 0.7993333339691162, 0.7940000295639038, 0.7923333048820496, 0.7913333177566528, 0.7990000247955322, 0.7986666560173035]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 8, 9, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [4, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 1, 8, 6, 4, 0, 9, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [32, 49, 44, 92]], "fitness": -0.7725714445114136, "mapping_values": [1, 3, 3, 3, 0, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2787777207011417, 2.209730039387961, 2.0880352489668947, 1.8637350700818285, 1.5905532346913653, 1.3694291666687408, 1.229446501291628, 1.1317634933959413, 1.062548930469269, 0.99633037153567, 0.9640144093980437, 0.9321986995022358, 0.8996578179188629, 0.8786626205531252, 0.8623909158256973, 0.8255032864244874, 0.8161947897648563, 0.8109321345459154, 0.7870046850586643, 0.7748701629023337, 0.7652525894945135, 0.7573438158849006, 0.7615468642415939, 0.7453343540512732, 0.7365483024636469, 0.7303736753955635, 0.7279423210504679, 0.7118416457144088, 0.6909212142784109, 0.7002258364235673, 0.7016087682523339, 0.6911058986286178, 0.6840132451832114, 0.672006670706906, 0.6849149980045596], "accuracy": [0.15453705191612244, 0.2833179235458374, 0.3815876245498657, 0.44128912687301636, 0.4986131191253662, 0.549068808555603, 0.5787875056266785, 0.6029586791992188, 0.627129852771759, 0.6498481035232544, 0.6651697158813477, 0.6666226387023926, 0.6833971738815308, 0.685510516166687, 0.6993792057037354, 0.7024171352386475, 0.7091533541679382, 0.7102100253105164, 0.7180029153823853, 0.7238145470619202, 0.7235503792762756, 0.724210798740387, 0.7215691208839417, 0.7316074371337891, 0.7310791015625, 0.7333245277404785, 0.7331924438476562, 0.7425703406333923, 0.7469290494918823, 0.7457403540611267, 0.743891179561615, 0.7450799345970154, 0.752740740776062, 0.748778223991394, 0.7518161535263062], "val_loss": [1.9153831345694405, 1.8277275221688407, 1.6574015617370605, 1.3878801209586007, 1.1233529022761755, 0.9416924544743129, 0.8432596070425851, 0.7700799363000053, 0.7205414601734706, 0.684289847101484, 0.6643197366169521, 0.6470389706747872, 0.6182105030332293, 0.604637861251831, 0.5965756518500192, 0.5806355476379395, 0.5731251580374581, 0.5601552043642316, 0.5579012632369995, 0.5446270193372454, 0.5403624773025513, 0.5328725576400757, 0.5278011730739048, 0.5298095771244594, 0.5239529609680176, 0.5250530753816877, 0.515950049672808, 0.506561245237078, 0.5003809928894043, 0.495484675679888, 0.5013929605484009, 0.4885958092553275, 0.4896165813718523, 0.48778063910348074, 0.48845955303737093], "val_accuracy": [0.3526666760444641, 0.4620000123977661, 0.5360000133514404, 0.5673333406448364, 0.6349999904632568, 0.6700000166893005, 0.6830000281333923, 0.699999988079071, 0.7126666903495789, 0.7253333330154419, 0.7213333249092102, 0.7296666502952576, 0.7426666617393494, 0.7486666440963745, 0.7450000047683716, 0.750333309173584, 0.753333330154419, 0.7583333253860474, 0.753333330154419, 0.7633333206176758, 0.7639999985694885, 0.7586666941642761, 0.7760000228881836, 0.7599999904632568, 0.7639999985694885, 0.7573333382606506, 0.7793333530426025, 0.7789999842643738, 0.7820000052452087, 0.7873333096504211, 0.7693333625793457, 0.7853333353996277, 0.7789999842643738, 0.7823333144187927, 0.7746666669845581]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 73, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 5, 8, 2, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302865350125189, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 1, 0, 6, 4, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [94, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 12, 12, 6, 6, 1, 3, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(grad, grad)), grad)), tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.860012503096047, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12415797263383865, 0.11398758739233017, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [688.092058454241, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 1, 0, 6, 4, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 4, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [94, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0804385170340538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 1, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 1, 6, 8, 4, 2, 8, 8, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [41, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 9, 7, 0, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.sqrt(grad))), grad)), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), grad), tf.math.add(beta, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [291417350.1419504, 5467514009.512086, 25752053225.20988, 71424778555.95087, 152286717634.15558, 280353628613.36786], "accuracy": [0.09959053993225098, 0.10249637067317963, 0.09338264167308807, 0.10117553919553757, 0.10302469879388809, 0.10210011899471283], "val_loss": [1091659849.142857, 8729009298.285715, 29455685924.57143, 69815446966.85715, 136351093321.14285, 235607612269.7143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [8, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 9, 6, 1, 6, 4, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 0, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [41, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 1, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 1, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 1, 0, 8, 4, 2, 8, 8, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 2, 1, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [41, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 17, 17, 11, 6, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(grad, grad), tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))))), beta)), tf.math.add(beta, tf.math.square(alpha))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7229422.024099402, 135358811.23656055, 637141032.449082, 1766654951.1134593, 3766167326.3304715, 6932661375.273015], "accuracy": [0.09959053993225098, 0.10249637067317963, 0.09338264167308807, 0.10117553919553757, 0.10302469879388809, 0.10196803510189056], "val_loss": [27048066.85714286, 216016790.85714287, 728647332.5714285, 1726679076.5714285, 3371853970.285714, 5825920877.714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 0, 9, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 1, 0, 8, 4, 2, 8, 8, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [94, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [1, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [2, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 6, 8, 6, 4, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [41, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [7, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 3, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [64, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 6, 7, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(sigma, beta), tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(alpha, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [2.3024528697339726, 2.302127660147471, 2.302517365124468, 2.301070096265717, 2.302662942891643, 2.302048991841568], "accuracy": [0.09589222073554993, 0.09285431355237961, 0.09126931428909302, 0.09576013684272766, 0.09179764986038208, 0.09245806187391281], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]