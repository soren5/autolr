[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [5, 1], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [47, 9, 44]], "fitness": -0.8080000281333923, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1179745377109915, 1.747213389879488, 1.138466925542935, 0.9333451120467029, 0.8386002166821358, 0.7750610594877934, 0.7344091608146115, 0.6666595141460332, 0.6454754697333364, 0.6167039475767226, 0.6204061046913867, 0.590045643229101, 0.6198468078963587, 0.5724901383295665, 0.5423292293052285, 0.5109488663262758, 0.5145213564452148, 0.518627321750827, 0.4997126921143404, 0.4992231391385058, 0.46761534080497813, 0.48150720906578837, 0.47025391127628313, 0.4537526126377744, 0.45105252539429763, 0.4575274539126098, 0.44109957432072977, 0.424744176787471, 0.40536576259909307, 0.42563674522271294, 0.3970172797621139, 0.4028616408512278, 0.3954315332570616, 0.3874640062091184, 0.3689656587261739, 0.3857714405204358, 0.384699871243739, 0.3505922431061533, 0.3614288425960435, 0.3360438502113565], "accuracy": [0.3016774654388428, 0.42728832364082336, 0.5914674401283264, 0.6453573107719421, 0.6742834448814392, 0.7037379741668701, 0.7185312509536743, 0.7413815855979919, 0.7520803213119507, 0.7651565074920654, 0.7648923397064209, 0.7766477465629578, 0.7640998363494873, 0.7828556299209595, 0.7975168228149414, 0.8030643463134766, 0.7993659973144531, 0.7994980812072754, 0.8136309385299683, 0.8127063512802124, 0.829216718673706, 0.8206313848495483, 0.8257825970649719, 0.8308017253875732, 0.8314621448516846, 0.8264430165290833, 0.8350284099578857, 0.8411042094230652, 0.8504821062088013, 0.8448025584220886, 0.8540483713150024, 0.847840428352356, 0.8512746095657349, 0.8539162874221802, 0.8614450097084045, 0.856689989566803, 0.8580108284950256, 0.8717474341392517, 0.8692378997802734, 0.8747853636741638], "val_loss": [1.8983006477355957, 0.8788726670401437, 0.8594890492303031, 0.5944050209862846, 0.6210155316761562, 0.6243500879832676, 0.524242741721017, 0.495026912008013, 0.5169177395956857, 0.5684648752212524, 0.47941371372767855, 0.590037635394505, 0.46367147990635466, 0.44237106187003, 0.3935547471046448, 0.4355292575699942, 0.4084160327911377, 0.42519685200282503, 0.37437571798052105, 0.3899968607085092, 0.41174702984946115, 0.37016930750438143, 0.375045154775892, 0.3549975412232535, 0.39584779739379883, 0.35185112271990093, 0.3733147553035191, 0.3435957431793213, 0.4588753155299595, 0.34157400471823557, 0.33524482590811594, 0.3541231495993478, 0.3567380564553397, 0.3273544226373945, 0.3236780677522932, 0.36054608651569914, 0.3295872041157314, 0.3422139883041382, 0.32301998138427734, 0.3231880579675947], "val_accuracy": [0.492000013589859, 0.5580000281333923, 0.57833331823349, 0.734333336353302, 0.6926666498184204, 0.7136666774749756, 0.765999972820282, 0.7646666765213013, 0.7680000066757202, 0.7276666760444641, 0.7753333449363708, 0.7369999885559082, 0.7826666831970215, 0.7896666526794434, 0.831333339214325, 0.79666668176651, 0.8173333406448364, 0.8073333501815796, 0.8379999995231628, 0.82833331823349, 0.8193333148956299, 0.8399999737739563, 0.8370000123977661, 0.8453333377838135, 0.8143333196640015, 0.8503333330154419, 0.8323333263397217, 0.8529999852180481, 0.7919999957084656, 0.8610000014305115, 0.8633333444595337, 0.846666693687439, 0.8456666469573975, 0.8610000014305115, 0.8679999709129333, 0.8426666855812073, 0.8569999933242798, 0.8516666889190674, 0.862333357334137, 0.8646666407585144]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [5, 1], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8008571267127991, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9745989046265593, 1.4274003012872187, 1.015691184002442, 0.9161262676747657, 0.8285472014356268, 0.7783261060777704, 0.733137548103655, 0.7031682324274073, 0.6882467363268361, 0.6603962612063925, 0.6657060082515217, 0.6396160939618062, 0.619524392193933, 0.6113618300685698, 0.5966476776643657, 0.5764817998409586, 0.5715201799942912, 0.5547364419477491, 0.5578104641380531, 0.5574827759320379, 0.5192629362472123, 0.5420973802349744, 0.5241918532745382, 0.5050319744973465, 0.5137613457207509, 0.4852496090503401, 0.5175776308152213], "accuracy": [0.3539822995662689, 0.518689751625061, 0.6275261044502258, 0.6581693291664124, 0.6884163022041321, 0.7071720957756042, 0.7226257920265198, 0.7284374833106995, 0.7411174178123474, 0.7481178045272827, 0.7553823590278625, 0.7577598690986633, 0.7684586048126221, 0.7708360552787781, 0.7795535326004028, 0.7810064554214478, 0.7766477465629578, 0.7909126877784729, 0.7852331399917603, 0.7911768555641174, 0.8062343001365662, 0.7967243194580078, 0.8038568496704102, 0.8115176558494568, 0.8041210174560547, 0.8234050869941711, 0.8031964302062988], "val_loss": [1.4190475600106376, 0.7709254537309919, 0.6654795578547886, 0.6312760284968785, 0.6657770020621163, 0.5572129487991333, 0.5449370316096714, 0.5359763417925153, 0.5379797049931118, 0.5874781949179513, 0.47451867376055035, 0.5390947205679757, 0.4659046786172049, 0.4719829389027187, 0.43548509052821566, 0.4989035129547119, 0.4328616516930716, 0.47394490242004395, 0.43898677825927734, 0.4346133129937308, 0.4280194044113159, 0.4007903678076608, 0.3958439230918884, 0.4480487108230591, 0.41203588247299194, 0.39416177783693584, 0.40380771671022686], "val_accuracy": [0.4009999930858612, 0.6803333163261414, 0.7103333473205566, 0.722000002861023, 0.6863333582878113, 0.7406666874885559, 0.7580000162124634, 0.7419999837875366, 0.7633333206176758, 0.7110000252723694, 0.7923333048820496, 0.7456666827201843, 0.7956666946411133, 0.7889999747276306, 0.8143333196640015, 0.7733333110809326, 0.8169999718666077, 0.7756666541099548, 0.7979999780654907, 0.8056666851043701, 0.8016666769981384, 0.8330000042915344, 0.8309999704360962, 0.7870000004768372, 0.8180000185966492, 0.8303333520889282, 0.8190000057220459]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 8, 2, 3, 2, 3, 3, 3, 2, 8, 2, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 2, 5, 3, 2, 3, 0, 1, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 52, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8005714416503906, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 5, 4, 2, 2, 1, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.974618050243089, 1.427774897214995, 1.0026822647146498, 0.9297065403420203, 0.8219282303141754, 0.7808113336531619, 0.7329041039970462, 0.700811246855069, 0.6805909267899666, 0.6652391718882832, 0.6624161512970437, 0.6313118929671511, 0.6214574856560354, 0.5964378913663492, 0.5972104694990985, 0.5872226027040403, 0.5845517891509233, 0.5472788728774578, 0.5623927759913216, 0.5522830437643967], "accuracy": [0.3539822995662689, 0.5178972482681274, 0.635451078414917, 0.6538106203079224, 0.6868313550949097, 0.709549605846405, 0.7251353859901428, 0.7387399077415466, 0.7441553473472595, 0.7465327978134155, 0.7532690763473511, 0.7567031979560852, 0.7658169269561768, 0.7753269076347351, 0.7792893648147583, 0.7761194109916687, 0.7761194109916687, 0.7943468689918518, 0.7836481332778931, 0.7915731072425842], "val_loss": [1.4183644567217146, 0.7711589847292218, 0.6739866222654071, 0.6328163317271641, 0.6841226305280413, 0.5547524860927037, 0.5345292602266584, 0.535848787852696, 0.5451025111334664, 0.596689258302961, 0.4715164729527065, 0.5261704240526471, 0.4600046532494681, 0.48487075737544466, 0.4330514073371887, 0.5563467570713588, 0.4300006117139544, 0.4994896480015346, 0.4356679320335388, 0.43328613894326345], "val_accuracy": [0.4009999930858612, 0.6809999942779541, 0.6923333406448364, 0.7166666388511658, 0.6733333468437195, 0.7440000176429749, 0.7726666927337646, 0.7516666650772095, 0.7599999904632568, 0.7113333344459534, 0.7886666655540466, 0.7540000081062317, 0.8009999990463257, 0.7753333449363708, 0.8143333196640015, 0.7429999709129333, 0.8130000233650208, 0.7680000066757202, 0.7986666560173035, 0.809333324432373]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [7, 7, 2, 2, 6, 6, 3, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 3, 3, 3, 0, 3, 2, 3, 2, 0, 1, 1, 3, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [11, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0], [0, 0, 1, 1], [4, 2], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7997142672538757, "mapping_values": [1, 2, 2, 1, 1, 0, 43, 43, 24, 19, 3, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), tf.math.add(beta, alpha)), grad)), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.square(tf.math.sqrt(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9746294848088497, 1.4304377536700623, 1.010911084059097, 0.9387885410992571, 0.8217585236719807, 0.7768452712856878, 0.7343493285054433, 0.702625129949053, 0.6818703114317235, 0.6621017360479415, 0.6547903768957377, 0.6156430888988433, 0.6375672388952233, 0.6038636729276695, 0.5893038079455513, 0.5591974344786999, 0.5913553767279234, 0.565076660840676, 0.5537162030519448, 0.5535076606810573], "accuracy": [0.3539822995662689, 0.5178972482681274, 0.6288469433784485, 0.655527651309967, 0.6872276067733765, 0.711530864238739, 0.7193237543106079, 0.7268524765968323, 0.7436270117759705, 0.7465327978134155, 0.7486461400985718, 0.7675340175628662, 0.7572315335273743, 0.7701756954193115, 0.7821952104568481, 0.7868181467056274, 0.7647602558135986, 0.7891955971717834, 0.7866860628128052, 0.7921014428138733], "val_loss": [1.4182441915784563, 0.7687598296574184, 0.6716510738645282, 0.6363949945994786, 0.6682123456682477, 0.5398658514022827, 0.5546099969318935, 0.5281822851725987, 0.5343231473650251, 0.5572122165134975, 0.4786231517791748, 0.5892091138022286, 0.4570386920656477, 0.4725089413779123, 0.43175690514700754, 0.5153744391032627, 0.43927454948425293, 0.44096184628350393, 0.4375348261424473, 0.4397859913962228], "val_accuracy": [0.4013333320617676, 0.6816666722297668, 0.6959999799728394, 0.718999981880188, 0.690666675567627, 0.7586666941642761, 0.7383333444595337, 0.746999979019165, 0.7516666650772095, 0.7559999823570251, 0.7873333096504211, 0.7363333106040955, 0.7976666688919067, 0.7900000214576721, 0.8143333196640015, 0.7546666860580444, 0.8029999732971191, 0.7990000247955322, 0.8023333549499512, 0.8053333163261414]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 1, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 5, 3, 3, 3, 3, 5, 2, 0, 2, 3, 1, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.7462857365608215, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2979222943423494, 2.2874166471075466, 2.278099697342544, 2.269283193780478, 2.256555832104676, 2.2458286061814086, 2.2349809349142187, 2.21866811472805, 2.206075849660305, 2.1900113460614836, 2.1684119557156585, 2.1483852117604205, 2.1260455495504074, 2.095569662870811, 2.066226051531101, 2.033132326554125, 1.9975339734496032, 1.9554821794626027, 1.9105723091262032, 1.8676363418067938, 1.8260241768001455, 1.7725324984381559, 1.7177452809460143, 1.6695978403280376, 1.6182568657116378, 1.575375873509368, 1.5358473773110324, 1.4860434771969713, 1.4383252817704897, 1.4089348983959893, 1.3691255327040068, 1.3466185228841305, 1.2998792576578866, 1.2835678354214684, 1.25375755866757, 1.236668312097695, 1.2139275768539768, 1.191798028692735, 1.1692733065547598, 1.1519347035165288, 1.1506198177941014, 1.1215415639238682, 1.1119266676628798, 1.0907195920343364, 1.0764257404798245, 1.0691689069575605, 1.0564460382328027, 1.0379905686355175, 1.0306788425813371, 1.0223655140773102, 1.0098882910361646, 0.9920370305817376, 0.9926534177699282, 0.9799920349246428, 0.9695578161767288, 0.9623798848599837, 0.9601374897328917, 0.9578314298069346, 0.9394305510102734, 0.9366845663559671, 0.9345662469766899, 0.9230933120348009, 0.9121088087991748, 0.9122126274703437, 0.9116470272420435, 0.911697623830792, 0.8886428779740737, 0.8837608623309394, 0.8869270038422088, 0.8841962795830075, 0.8650400158893226, 0.8631774698344865, 0.8573920252757412, 0.8642821021997036, 0.8538231184579882, 0.8613424282961392, 0.8484713308106734, 0.8515452703055358, 0.83669600340637, 0.8379710578899563, 0.8310042837465664, 0.8271848593626071, 0.8301452053867043, 0.8214528683374712, 0.8251113416165755, 0.8174421942906372, 0.8184153836999414, 0.8121248688034614, 0.8088984069350593, 0.8082193510328632, 0.7943542940253516, 0.7997951715881515, 0.804237971137685, 0.8017941567529666, 0.798543412868672], "accuracy": [0.10381719470024109, 0.12957337498664856, 0.14951789379119873, 0.18016114830970764, 0.21635186672210693, 0.23484347760677338, 0.25716549158096313, 0.2829216718673706, 0.3000924587249756, 0.31924447417259216, 0.33866068720817566, 0.34605732560157776, 0.3646810054779053, 0.3741909861564636, 0.3983621597290039, 0.40404173731803894, 0.4161933660507202, 0.4227975308895111, 0.44445911049842834, 0.4501386880874634, 0.4492141008377075, 0.4620261490345001, 0.47232863306999207, 0.486989825963974, 0.49425438046455383, 0.5005943775177002, 0.5054814219474792, 0.5241051316261292, 0.5349359512329102, 0.5407475829124451, 0.5502575635910034, 0.5546162724494934, 0.5678246021270752, 0.5651829242706299, 0.5753533244132996, 0.5752212405204773, 0.5842028856277466, 0.5946374535560608, 0.6040153503417969, 0.6095628142356873, 0.6026945114135742, 0.6153744459152222, 0.6164311170578003, 0.6242240071296692, 0.6213181614875793, 0.6276581883430481, 0.6287148594856262, 0.6353189945220947, 0.6411306262016296, 0.6396777033805847, 0.6507726907730103, 0.6474705934524536, 0.6516972780227661, 0.6576409935951233, 0.6622639298439026, 0.6647734642028809, 0.6639809608459473, 0.659490168094635, 0.6700568199157715, 0.6651697158813477, 0.670320987701416, 0.669792652130127, 0.6794346570968628, 0.6794346570968628, 0.6715096831321716, 0.6736230254173279, 0.6860388517379761, 0.6823405027389526, 0.6827367544174194, 0.6841896772384644, 0.6977941989898682, 0.6971337795257568, 0.6993792057037354, 0.6894729733467102, 0.6903975605964661, 0.6947563290596008, 0.6940959095954895, 0.695813000202179, 0.7008321285247803, 0.7008321285247803, 0.7033417224884033, 0.6995112895965576, 0.7033417224884033, 0.7079645991325378, 0.7074362635612488, 0.7034738063812256, 0.7120591998100281, 0.7129837274551392, 0.7053229212760925, 0.7116629481315613, 0.7128516435623169, 0.7161537408828735, 0.7104741930961609, 0.7143045663833618, 0.7137762308120728], "val_loss": [1.9617391995021276, 1.9525530678885323, 1.9432957512991769, 1.9337665012904577, 1.9234411375863212, 1.9123502458844865, 1.9002482550484794, 1.8867696353367396, 1.8716758319309779, 1.8548854419163294, 1.8357531683785575, 1.8144989694867815, 1.790557793208531, 1.7633115904671806, 1.7332208497183663, 1.699951171875, 1.6632752418518066, 1.6231298106057304, 1.5794789109911238, 1.5333093915666853, 1.485567467553275, 1.4362085206168038, 1.3861663682120187, 1.3356146471840995, 1.2866479669298445, 1.2393571649278914, 1.1951570510864258, 1.1529503209250314, 1.1129879270281111, 1.0769586563110352, 1.0429075786045618, 1.0122342450278146, 0.9833410808018276, 0.9582759312220982, 0.9339935438973563, 0.9123521532331195, 0.8921459742954799, 0.8737116881779262, 0.8568441527230399, 0.8414408138820103, 0.8278842823846, 0.814403602055141, 0.8016918216432843, 0.789566159248352, 0.7791147061756679, 0.7683746474129813, 0.7587524652481079, 0.7497235025678363, 0.7418870755604335, 0.7341054677963257, 0.7266194990703038, 0.7191028765269688, 0.7123031445911953, 0.7062179871967861, 0.700188228062221, 0.6938942670822144, 0.6886716570172992, 0.6844336816242763, 0.6784204244613647, 0.674200143132891, 0.669907638004848, 0.6660198313849313, 0.6616112164088658, 0.6573727301188877, 0.6539485965456281, 0.6505882229123797, 0.6471939086914062, 0.6437244585582188, 0.6401499680110386, 0.6366749831608364, 0.6337879555565971, 0.6296287434441703, 0.6263185739517212, 0.6237519298280988, 0.6206233671733311, 0.618309497833252, 0.6157540253230503, 0.6133869886398315, 0.6109419379915509, 0.6086504459381104, 0.6058333771569389, 0.6033044542585101, 0.6010035617010934, 0.5983273472104754, 0.5963657583509173, 0.5936598607472011, 0.5924294676099505, 0.5900670800890241, 0.5878345285143171, 0.5854517051151821, 0.5841314111437116, 0.5829097713742938, 0.5809815611158099, 0.5794132947921753, 0.577792797769819], "val_accuracy": [0.11266666650772095, 0.19833333790302277, 0.27133333683013916, 0.3190000057220459, 0.34966665506362915, 0.36899998784065247, 0.3840000033378601, 0.4033333361148834, 0.4176666736602783, 0.4309999942779541, 0.4480000138282776, 0.4586666524410248, 0.468666672706604, 0.48500001430511475, 0.5006666779518127, 0.5056666731834412, 0.5206666588783264, 0.5333333611488342, 0.5440000295639038, 0.5529999732971191, 0.5659999847412109, 0.5726666450500488, 0.5856666564941406, 0.5983333587646484, 0.6060000061988831, 0.6146666407585144, 0.6290000081062317, 0.6416666507720947, 0.6486666798591614, 0.6520000100135803, 0.6573333144187927, 0.6616666913032532, 0.6690000295639038, 0.6736666560173035, 0.6743333339691162, 0.6776666641235352, 0.6800000071525574, 0.6813333630561829, 0.6836666464805603, 0.6850000023841858, 0.6859999895095825, 0.6903333067893982, 0.6936666369438171, 0.6956666707992554, 0.6933333277702332, 0.6956666707992554, 0.6986666917800903, 0.703000009059906, 0.703000009059906, 0.70333331823349, 0.706333339214325, 0.7086666822433472, 0.7103333473205566, 0.7126666903495789, 0.7146666646003723, 0.715666651725769, 0.7149999737739563, 0.7149999737739563, 0.7196666598320007, 0.722000002861023, 0.7229999899864197, 0.7243333458900452, 0.7233333587646484, 0.7256666421890259, 0.7253333330154419, 0.7273333072662354, 0.7293333411216736, 0.7303333282470703, 0.7323333621025085, 0.7326666712760925, 0.7323333621025085, 0.7333333492279053, 0.7323333621025085, 0.7353333234786987, 0.7360000014305115, 0.7353333234786987, 0.7379999756813049, 0.7379999756813049, 0.7393333315849304, 0.7396666407585144, 0.7403333187103271, 0.7423333525657654, 0.7426666617393494, 0.746999979019165, 0.7483333349227905, 0.7476666569709778, 0.7446666955947876, 0.7490000128746033, 0.7506666779518127, 0.7519999742507935, 0.7509999871253967, 0.7486666440963745, 0.7483333349227905, 0.7490000128746033, 0.7486666440963745]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 5, 3, 8, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 5, 3, 3, 3, 2, 5, 3, 2, 3, 0, 1, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 1, 1, 1], [1, 2], [1, 0], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.19371429085731506, "mapping_values": [1, 2, 2, 1, 1, 0, 27, 27, 13, 14, 3, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, beta)))), tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.766336327105497, 2.324236953389202, 2.303608503796405, 2.2996196255251213, 2.287158889320816, 2.373897682296255, 2.3036528192002934, 2.2756959401290526, 2.3065047031695327], "accuracy": [0.21635186672210693, 0.09945846349000931, 0.10302469879388809, 0.11121384054422379, 0.16391493380069733, 0.1328754425048828, 0.10249637067317963, 0.15440496802330017, 0.10117553919553757], "val_loss": [2.077958515712193, 1.9741082191467285, 1.9726745060511999, 1.9610979216439384, 1.967930521283831, 1.9744393484933036, 1.9729103360857283, 1.9797774042401994, 1.9742554937090193], "val_accuracy": [0.09833333641290665, 0.09866666793823242, 0.10400000214576721, 0.2096666693687439, 0.14900000393390656, 0.10133333504199982, 0.10133333504199982, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 7, 1, 7, 6, 1, 6, 6, 3, 1, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 5, 3, 3, 3, 3, 5, 2, 0, 2, 3, 1, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [86, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [1, 4, 8], [1, 6], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.14971429109573364, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.477411915424273, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18795403838157654, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.276392868586949, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 0, 0], [0, 0, 1, 1], [5, 1], [1, 0], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.14571428298950195, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.4764335680442513, 16537.45062947251, NaN, NaN, NaN, NaN], "accuracy": [0.18782195448875427, 0.11266675591468811, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.291863645826067, 890256.9285714285, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10100000351667404, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 8, 2, 3, 2, 3, 3, 3, 2, 8, 2, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 2, 5, 3, 2, 3, 0, 1, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [1, 0, 1, 1], [1, 4], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.1071428582072258, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3019773913191894, 2.301202281969035, 2.301718605255895, 2.302301168819665, 2.3008498143148364, 2.3009298485756045, 2.301996666694503, 2.299683538929913, 2.3016540028273926, 2.301926197203915, 2.2995694296754596, 2.3001828184532154, 2.3010154928371906, 2.3006973391306036, 2.3004284174592504, 2.2995184325680613, 2.3001169451097723, 2.3004839326475337, 2.3006452248159763, 2.300320771675478, 2.3014146068297388, 2.3003986389440803, 2.300254052577474, 2.3007081425689107, 2.300888182102587, 2.300668815532932, 2.3008957322027075, 2.300672816436651, 2.3008593166383062, 2.300954853964047, 2.3010424486225025, 2.3011446521266765, 2.3007326487930553, 2.3008697220615], "accuracy": [0.0944393053650856, 0.09338264167308807, 0.08558975160121918, 0.08809932321310043, 0.09509972482919693, 0.09008057415485382, 0.09655263274908066, 0.09391097724437714, 0.09206181764602661, 0.09179764986038208, 0.09602430462837219, 0.09245806187391281, 0.09602430462837219, 0.09628847241401672, 0.09721305221319199, 0.10315678268671036, 0.1006472036242485, 0.09602430462837219, 0.10460969805717468, 0.09945846349000931, 0.0948355570435524, 0.09998679161071777, 0.1014397069811821, 0.09919429570436478, 0.10210011899471283, 0.10077928751707077, 0.09681680053472519, 0.10328886657953262, 0.1010434553027153, 0.10038304328918457, 0.09800554811954498, 0.10157178342342377, 0.10381719470024109, 0.10196803510189056], "val_loss": [1.970855440412249, 1.970738410949707, 1.9706470625741142, 1.970573970249721, 1.9705101421901159, 1.9704666818891252, 1.9704454285757882, 1.9704371861049108, 1.9704381397792272, 1.9704391615731376, 1.9704551696777344, 1.9704830987112862, 1.97051545551845, 1.9705633435930525, 1.9706248555864607, 1.970700945172991, 1.9707948820931571, 1.9708965165274483, 1.9710040773664201, 1.971116270337786, 1.971226487840925, 1.971338885171073, 1.9714557783944267, 1.9715722629002161, 1.971686840057373, 1.9717944008963448, 1.9718922206333704, 1.9719837733677454, 1.9720662661961146, 1.9721451486860002, 1.972226279122489, 1.972304003579276, 1.9723762784685408, 1.9724481446402413], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.04233333468437195, 0.04800000041723251, 0.050999999046325684, 0.056333333253860474, 0.056333333253860474, 0.06133333221077919, 0.06499999761581421, 0.06866666674613953, 0.0716666653752327, 0.07633333653211594, 0.07900000363588333, 0.08266666531562805, 0.0860000029206276, 0.09033333510160446, 0.09433333575725555, 0.09700000286102295, 0.0989999994635582, 0.10233332961797714, 0.10366666316986084, 0.10400000214576721, 0.10466666519641876, 0.10433333367109299, 0.10566666722297668, 0.10700000077486038, 0.10899999737739563, 0.10833333432674408, 0.10999999940395355, 0.10700000077486038, 0.10566666722297668, 0.1080000028014183, 0.10733333230018616, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 52, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0], [1, 0, 1, 1], [1, 4], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302384930925441, 2.3042767950729877, 2.3117046940989576, 2.327962997677367, 2.3813252785044923, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.08611807972192764, 0.07713644206523895, 0.08321225643157959, 0.08268392831087112, 0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97192348752703, 1.9751981326511927, 1.9823052542550224, 1.99700471333095, 2.0903682027544295, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028999999165534973, 0.020999999716877937, 0.03500000014901161, 0.08766666799783707, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 4, 2, 3, 2, 3, 6, 3, 2, 8, 2, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 52, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 1], [0, 0, 1, 1], [4, 4], [4, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 20, 20, 1, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), tf.math.multiply(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))), grad), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05309734493494034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [4, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 69, 46], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [5, 1], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 3, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 1, 1, 1], [5, 1], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 5, 5, 2, 3, 0, 2, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 7, 1, 8, 9, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 3, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [44, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [5, 3], [76], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302592511568182, 2.3034543702945953, 2.3059053990063396, 2.308986600049026, 2.309997829951945, 2.31351007840196, 2.3200406771231448, 2.320595799498885, 2.330199489315125, 2.3434935183557206, 2.3667595921852618, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.08717474341392517, 0.080042265355587, 0.08189142495393753, 0.0816272646188736, 0.07753269374370575, 0.07330603897571564, 0.07885351777076721, 0.07634394615888596, 0.0742306187748909, 0.08334434032440186, 0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9719444683619909, 1.9731755256652832, 1.9746289934430803, 1.9764415196010046, 1.978506292615618, 1.9806314195905412, 1.9837984357561385, 1.9871388162885393, 1.9928201266697474, 2.0043602670942033, 2.0404891967773438, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028999999165534973, 0.024000000208616257, 0.022333333268761635, 0.024000000208616257, 0.027666667476296425, 0.03133333474397659, 0.04533333331346512, 0.07066666334867477, 0.08799999952316284, 0.09700000286102295, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [8, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [1, 1, 1, 1], [4, 4], [5, 3], [76], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 1, 3, 1, 1], [0, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301473761562186, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [8, 1], [5, 3], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 4, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 5, 2, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 8, 2, 3, 2, 6, 3, 3, 2, 8, 2, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 0, 3, 3, 2, 5, 3, 2, 3, 0, 1, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [17, 52, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [1, 0, 1, 1], [1, 4], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [65, 9, 44]], "fitness": -0.07599999755620956, "mapping_values": [1, 2, 2, 1, 1, 0, 30, 30, 15, 15, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.multiply(beta, tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.70443058013916, 2.303858450737297, 2.2783697491324477, 2.3114608428765124, 2.303466395364383, 2.3030978937379563, 2.302972408097418], "accuracy": [0.19402985274791718, 0.10276053100824356, 0.14700831472873688, 0.09681680053472519, 0.09589222073554993, 0.09549596905708313, 0.09391097724437714], "val_loss": [1.9756179537091936, 1.9727129255022322, 2.0012874603271484, 1.9744563783918108, 1.9737779753548759, 1.973654133932931, 1.9735265459333147], "val_accuracy": [0.10400000214576721, 0.17933332920074463, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 1, 3, 3, 3, 3, 5, 2, 0, 2, 3, 1, 1, 3, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [44, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [4, 4], [5, 3], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [29, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302070345467328, 2.301501137752732, 2.3020531046329125, 2.3030295257696842, 2.3014387476004945, 2.3018871702459496], "accuracy": [0.09457138925790787, 0.09126931428909302, 0.0866464152932167, 0.09047681838274002, 0.09219389408826828, 0.08875974267721176], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 7, 8, 7, 6, 8, 6, 6, 3, 8, 2, 3, 8, 3, 3, 3, 2, 8, 2, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 2, 5, 3, 3, 3, 0, 1, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [1, 0, 1, 1], [1, 4], [1, 0], [76], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.011714286170899868, "mapping_values": [1, 1, 1, 0, 1, 0, 36, 36, 20, 16, 2, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, beta))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3060464841058903, 2.315466817942246, 2.326695094601731, 2.339234537436521, 2.351031387959174, 2.3661497128622297], "accuracy": [0.08492933213710785, 0.06538105756044388, 0.04477611929178238, 0.036322809755802155, 0.028265750035643578, 0.020208690315485], "val_loss": [1.9799207959856306, 1.989377430507115, 1.9995433943612235, 2.010715825217111, 2.0233003752572194, 2.0374723843165805], "val_accuracy": [0.01366666704416275, 0.007333333138376474, 0.006666666828095913, 0.006000000052154064, 0.00566666666418314, 0.006000000052154064]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 1, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 5, 3, 3, 3, 3, 5, 2, 0, 2, 3, 1, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [14, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.010285714641213417, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.306300083376303, 2.3163843819682843, 2.328402560290376, 2.341931045362427, 2.3549935794100234, 2.371736924598844], "accuracy": [0.08440100401639938, 0.06313564628362656, 0.04305903986096382, 0.0342094823718071, 0.026416590437293053, 0.017963280901312828], "val_loss": [1.980494499206543, 1.9906036513192313, 2.001575401851109, 2.0137483733040944, 2.0275726318359375, 2.0434015137808665], "val_accuracy": [0.012333333492279053, 0.007333333138376474, 0.006666666828095913, 0.006000000052154064, 0.006000000052154064, 0.005333333276212215]}}]