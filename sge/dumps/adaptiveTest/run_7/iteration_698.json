[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.8248571157455444, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.2269512261413484, 1.6617483157113937, 1.2342314789119162, 1.0693316259845185, 0.906270015634928, 0.8263515345944138, 0.7682231319594645, 0.7555167453793833, 0.7202753964794342, 0.6946671745402702, 0.6495043394147066, 0.6362520207377504, 0.6370941590103948, 0.609604466411778, 0.5866824621616369, 0.5887233945105007, 0.5717336225896983, 0.5353006267780641, 0.5480950281384158, 0.5458684414605486, 0.5214858528621727, 0.5114954644033008, 0.5205876442695164, 0.4777504354695665, 0.46846999370694364, 0.47565917378057027, 0.4642943685136026, 0.45375420948486317, 0.44967039370140016, 0.44815025450357937, 0.43333232094189433, 0.4341809846477549, 0.42672190664151816, 0.4116245046811034, 0.4123363268924915, 0.40701857712274814, 0.4095335434952495, 0.3979468314269152, 0.3658369325013791, 0.3979760959888131, 0.3926662311711725, 0.34978833088801126, 0.3579523352237662, 0.359126623276596, 0.3576419265270863, 0.3400695780485282, 0.35016246344104435, 0.33990825288536025], "accuracy": [0.2907145619392395, 0.4579315781593323, 0.5612204670906067, 0.6098269820213318, 0.6740192770957947, 0.6811517477035522, 0.7074362635612488, 0.7119271159172058, 0.7292299270629883, 0.7294940948486328, 0.7523444890975952, 0.7559106945991516, 0.7510236501693726, 0.7671377658843994, 0.7770439982414246, 0.7794214487075806, 0.785101056098938, 0.7993659973144531, 0.7926297783851624, 0.7977809906005859, 0.8050455451011658, 0.8129705190658569, 0.8035926818847656, 0.8248580098152161, 0.8280280232429504, 0.8230088353157043, 0.82683926820755, 0.8317263126373291, 0.8370096683502197, 0.8355567455291748, 0.8391229510307312, 0.8384625315666199, 0.8405758738517761, 0.850350022315979, 0.8444063067436218, 0.8521991968154907, 0.8495575189590454, 0.8531237840652466, 0.868049144744873, 0.8536521196365356, 0.852859616279602, 0.8741249442100525, 0.8671245574951172, 0.8652753829956055, 0.8660678863525391, 0.8737286925315857, 0.8685774803161621, 0.8725399374961853], "val_loss": [1.7038768700190954, 1.008976834160941, 0.798395207950047, 0.6856885296957833, 0.6144319772720337, 0.583465542112078, 0.6474921362740653, 0.5402126482554844, 0.6393995795931134, 0.4887573208127703, 0.47758913040161133, 0.4767886059624808, 0.52619469165802, 0.4534846373966762, 0.4216047099658421, 0.4242862803595407, 0.43744490827832905, 0.41622856685093473, 0.46338934557778494, 0.40284394366400583, 0.4241725972720555, 0.39516179050718037, 0.37562146357127596, 0.3711380021912711, 0.43003889492579866, 0.4406278133392334, 0.3967299291065761, 0.3730783036776951, 0.3551567622593471, 0.3505086217607771, 0.3413313456944057, 0.34630770342690603, 0.3318216289792742, 0.3612883687019348, 0.3558330535888672, 0.3429053681237357, 0.3706191522734506, 0.3299867936543056, 0.36255691732679096, 0.3837277037756784, 0.3157508969306946, 0.3364573802266802, 0.31122383901051115, 0.35116708278656006, 0.3202612059456961, 0.3364877275058201, 0.33850033794130596, 0.3193232502256121], "val_accuracy": [0.43066665530204773, 0.6029999852180481, 0.6370000243186951, 0.6886666417121887, 0.7243333458900452, 0.734666645526886, 0.7099999785423279, 0.7580000162124634, 0.7080000042915344, 0.7766666412353516, 0.7833333611488342, 0.7733333110809326, 0.7543333172798157, 0.8063333630561829, 0.8236666917800903, 0.8226666450500488, 0.79666668176651, 0.8090000152587891, 0.7889999747276306, 0.8263333439826965, 0.8116666674613953, 0.8323333263397217, 0.8296666741371155, 0.8403333425521851, 0.8040000200271606, 0.7903333306312561, 0.8246666789054871, 0.8416666388511658, 0.8529999852180481, 0.8489999771118164, 0.859000027179718, 0.8546666502952576, 0.8610000014305115, 0.8379999995231628, 0.8493333458900452, 0.8556666374206543, 0.8386666774749756, 0.8619999885559082, 0.8413333296775818, 0.8246666789054871, 0.8669999837875366, 0.8566666841506958, 0.8696666955947876, 0.8516666889190674, 0.8669999837875366, 0.8569999933242798, 0.8610000014305115, 0.8666666746139526]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.8157142996788025, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.226982768075404, 1.6580457335150773, 1.2380420259906002, 1.02505809166302, 0.941669710221591, 0.8559882037313056, 0.7793224798910307, 0.750802514110936, 0.7075792630476769, 0.7031507425225721, 0.6437922818644046, 0.6422748500959764, 0.6302767927856682, 0.5968658693509725, 0.5657610161476729, 0.5649596935785395, 0.5760700601581034, 0.5230666954346368, 0.5678930383915158, 0.5382708791161667, 0.5224608529150966, 0.5082229437994652, 0.5170833240914512, 0.47376570451166716, 0.46403658534903897, 0.46873080281297436, 0.46071126111163724, 0.4440886264841838, 0.4542480836163706, 0.45099945890905047, 0.44130150234348126, 0.4338812096645457, 0.42537333256438453, 0.4130422930518445, 0.4023397260881481, 0.42605922278742575, 0.4106557593566394], "accuracy": [0.29084664583206177, 0.4585919976234436, 0.5712587237358093, 0.6152423620223999, 0.6494518518447876, 0.6851142644882202, 0.703209638595581, 0.7132478952407837, 0.7321357727050781, 0.7292299270629883, 0.757099449634552, 0.7506273984909058, 0.759609043598175, 0.7753269076347351, 0.7890635132789612, 0.7878747582435608, 0.7775723338127136, 0.8017435073852539, 0.7828556299209595, 0.7994980812072754, 0.8006868362426758, 0.8090080618858337, 0.8057059645652771, 0.822348415851593, 0.8329150676727295, 0.8278959393501282, 0.824329674243927, 0.8343679904937744, 0.8309338092803955, 0.8330471515655518, 0.8362171649932861, 0.8367455005645752, 0.8436138033866882, 0.8521991968154907, 0.8506141901016235, 0.844010055065155, 0.8502179384231567], "val_loss": [1.7037502016339983, 0.9842347758156913, 0.7912742240088326, 0.7341701643807548, 0.6729310410363334, 0.5723100219454084, 0.5615541764668056, 0.5485912561416626, 0.6912825618471418, 0.4870848996298654, 0.49815826756613596, 0.4811878034046718, 0.4646845545087542, 0.45610593046460834, 0.44571575096675325, 0.44326763493674143, 0.4203959107398987, 0.4212968945503235, 0.45665151732308523, 0.3955278992652893, 0.40604702063969206, 0.408120972769601, 0.3784500445638384, 0.37105158397129606, 0.4109475868088858, 0.42700443097523283, 0.41197405542646137, 0.38219901493617464, 0.3692112990788051, 0.3714857356888907, 0.35654566969190327, 0.34529524190085276, 0.34603956767490934, 0.33675243173326763, 0.3490924579756601, 0.3502488987786429, 0.35952316011701313], "val_accuracy": [0.4333333373069763, 0.6116666793823242, 0.6679999828338623, 0.6579999923706055, 0.6933333277702332, 0.7366666793823242, 0.7540000081062317, 0.7493333220481873, 0.6973333358764648, 0.778333306312561, 0.7646666765213013, 0.7823333144187927, 0.7879999876022339, 0.8019999861717224, 0.7926666736602783, 0.7900000214576721, 0.8036666512489319, 0.8096666932106018, 0.7836666703224182, 0.8366666436195374, 0.8159999847412109, 0.8209999799728394, 0.8346666693687439, 0.8393333554267883, 0.8226666450500488, 0.7996666431427002, 0.8203333616256714, 0.8389999866485596, 0.8473333120346069, 0.8346666693687439, 0.8503333330154419, 0.8569999933242798, 0.8483333587646484, 0.8500000238418579, 0.8506666421890259, 0.8460000157356262, 0.8386666774749756]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [1, 0, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [99, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.7122856974601746, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2993841615917976, 2.294648704716495, 2.2886307549404195, 2.2835868293299666, 2.2793950167912786, 2.274798117608537, 2.2682585942353146, 2.260719154772584, 2.2564463885295596, 2.249750214608086, 2.243731040933176, 2.237190116240663, 2.2294381698361003, 2.224381571227943, 2.213440620100903, 2.2058692234476656, 2.197131675704595, 2.185662216529902, 2.17769854349971, 2.166367597678208, 2.1529816958914028, 2.142707983799709, 2.128858066867954, 2.1164071038099657, 2.1006820043473904, 2.0827900940763198, 2.0648956164361434, 2.04699917684189, 2.0300519278713614, 2.010110193633479, 1.9906885021665959, 1.9644576733091237, 1.9447066983085786, 1.9172880016282061, 1.897209311929818, 1.8716440949504873, 1.8418800333755174, 1.8171333797131357, 1.7886837246930989, 1.7576680341967974, 1.7342449549623469, 1.7060578623153058, 1.6754175298926601, 1.6499923269557537, 1.6284470300412432, 1.6034000121276486, 1.5745337508247828, 1.5484567401651945, 1.5278336188702173, 1.4944415855968256, 1.4741118986372619, 1.4609211333722896, 1.4421558118436504, 1.4137001074284705, 1.3982644700386804, 1.3708834032325257, 1.3594742691543644, 1.3430843563789012, 1.322057874888288, 1.3074840570185808, 1.2972254011813975, 1.2860787637072184, 1.2671184104746358, 1.2546780426520179, 1.2332705759243203, 1.2357279630526734, 1.2228240711089722, 1.21369587945239, 1.194736038421391, 1.179682087243241, 1.1737555211262065, 1.1699660621094368, 1.154026892726542, 1.1400974774955837, 1.1335510496198227, 1.1219444645394299, 1.1093255695555393, 1.1048738604066803, 1.1079867278989501, 1.0931455745610106, 1.0878746373825667, 1.07953677174595, 1.0763711548752206, 1.0621874683080583, 1.0550018230906064, 1.0428006575958146, 1.0401298292182959, 1.0402324275806076, 1.0405354438566843, 1.0314502147651383, 1.0175070866869582, 1.0130783978029407, 1.011443290507647, 1.0080248107527225, 0.9960126952173342, 0.9842728533056418, 0.984340185738668, 0.9926993206680695, 0.9817268173566442, 0.9804933613018353], "accuracy": [0.09774138033390045, 0.11319508403539658, 0.12455421686172485, 0.1332716941833496, 0.14938580989837646, 0.1592920422554016, 0.1764628142118454, 0.2020869106054306, 0.216880202293396, 0.227314755320549, 0.2448817789554596, 0.24897634983062744, 0.26760005950927734, 0.27077004313468933, 0.2949412167072296, 0.30682867765426636, 0.31699907779693604, 0.3283582031726837, 0.3259807229042053, 0.3413023352622986, 0.34526482224464417, 0.3535860478878021, 0.36864352226257324, 0.36507725715637207, 0.37762513756752014, 0.38924846053123474, 0.3987584114074707, 0.4031171500682831, 0.4095892310142517, 0.41408005356788635, 0.41909918189048767, 0.42808082699775696, 0.4290054142475128, 0.43309998512268066, 0.4407607913017273, 0.4500066041946411, 0.45845991373062134, 0.4613657295703888, 0.4706115424633026, 0.47232863306999207, 0.4776119291782379, 0.4811781942844391, 0.48725399374961853, 0.49214106798171997, 0.49768856167793274, 0.49412229657173157, 0.5082551836967468, 0.5079910159111023, 0.5160480737686157, 0.5283318161964417, 0.5264826416969299, 0.5304450988769531, 0.5285959839820862, 0.5375775694847107, 0.5388984084129333, 0.5478800535202026, 0.5448421835899353, 0.5528992414474487, 0.563730001449585, 0.5588429570198059, 0.5633337497711182, 0.5658433437347412, 0.5688812732696533, 0.5799762010574341, 0.5789195895195007, 0.581429123878479, 0.5879011750221252, 0.5909391045570374, 0.5970149040222168, 0.5979394912719727, 0.5963544845581055, 0.5955620408058167, 0.5999207496643066, 0.6081098914146423, 0.6107515692710876, 0.611411988735199, 0.6194690465927124, 0.6217144131660461, 0.6221106648445129, 0.6262052655220032, 0.622639000415802, 0.6231673359870911, 0.6313564777374268, 0.6304318904876709, 0.6330735683441162, 0.629111111164093, 0.6428477168083191, 0.6408664584159851, 0.6339981555938721, 0.6450931429862976, 0.6452252268791199, 0.6522256135940552, 0.6493197679519653, 0.6481310129165649, 0.6501122713088989, 0.6604147553443909, 0.6600185036659241, 0.6544709801673889, 0.6510368585586548, 0.6522256135940552], "val_loss": [1.9658895901271276, 1.960822377886091, 1.9558134760175432, 1.9508081844874792, 1.945784568786621, 1.940690313066755, 1.9354438100542342, 1.9300345012119837, 1.924351760319301, 1.9185379573277064, 1.9124243600027901, 1.9060251372201102, 1.8992671285356795, 1.8921969277518136, 1.8845396723066057, 1.8764473370143346, 1.867764949798584, 1.8584200314113073, 1.8485076086861747, 1.837911742074149, 1.82655702318464, 1.8146141597202845, 1.801788330078125, 1.7882180213928223, 1.7737545285906111, 1.75824921471732, 1.741877215249198, 1.7245018141610282, 1.7061653477805, 1.6868396827152796, 1.666484764644078, 1.644977637699672, 1.6226540633610316, 1.599247625895909, 1.574899639402117, 1.5498491014753069, 1.5238849776131767, 1.4974334239959717, 1.4705477101462228, 1.4431606701442175, 1.415656907217843, 1.388033492224557, 1.3603381769997733, 1.3328307696751185, 1.3060648441314697, 1.2795624732971191, 1.253577368600028, 1.2286844934735979, 1.204179014478411, 1.1799964223589217, 1.15675231388637, 1.1346101079668318, 1.1136019229888916, 1.0934158733912878, 1.0741774354662215, 1.0552472727639335, 1.037564958844866, 1.0204425539289201, 1.0040736539023263, 0.9886042049952916, 0.9739798137119838, 0.960268497467041, 0.9470447131565639, 0.934567758015224, 0.922551018851144, 0.9112507615770612, 0.9002002307346889, 0.889871495110648, 0.8799284866877964, 0.8701921871730259, 0.8611597163336617, 0.8524616956710815, 0.8440859488078526, 0.835854036467416, 0.8278833116803851, 0.8202746425356183, 0.8130086319787162, 0.8060836621693203, 0.7995940957750592, 0.7931946175439017, 0.7872282947812762, 0.7815791538783482, 0.7758462599345616, 0.7701528583254132, 0.7648920842579433, 0.7597745997565133, 0.7548106738499233, 0.7498972926821027, 0.7452411481312343, 0.7408441816057477, 0.7363599538803101, 0.7319420576095581, 0.7277412414550781, 0.7241267136165074, 0.7204886504581997, 0.7164494480405535, 0.712380017553057, 0.7088438953672137, 0.7055627618517194, 0.7025610889707293], "val_accuracy": [0.07066666334867477, 0.12200000137090683, 0.164000004529953, 0.21166667342185974, 0.25200000405311584, 0.2863333225250244, 0.30933332443237305, 0.3316666781902313, 0.34833332896232605, 0.36033332347869873, 0.3700000047683716, 0.3786666691303253, 0.38866665959358215, 0.4009999930858612, 0.4103333353996277, 0.414000004529953, 0.4216666519641876, 0.4323333203792572, 0.4390000104904175, 0.4476666748523712, 0.45233333110809326, 0.460999995470047, 0.4673333466053009, 0.4703333377838135, 0.4790000021457672, 0.4860000014305115, 0.492333322763443, 0.49966666102409363, 0.503000020980835, 0.5093333125114441, 0.5183333158493042, 0.5246666669845581, 0.531000018119812, 0.5400000214576721, 0.543666660785675, 0.550000011920929, 0.5540000200271606, 0.559333324432373, 0.562666654586792, 0.5669999718666077, 0.5736666917800903, 0.5793333053588867, 0.5863333344459534, 0.5943333506584167, 0.5993333458900452, 0.6016666889190674, 0.6043333411216736, 0.612333357334137, 0.6183333396911621, 0.6263333559036255, 0.6336666941642761, 0.6386666893959045, 0.6446666717529297, 0.6470000147819519, 0.652999997138977, 0.656000018119812, 0.659333348274231, 0.6639999747276306, 0.6660000085830688, 0.6693333387374878, 0.6710000038146973, 0.6733333468437195, 0.6753333210945129, 0.6763333082199097, 0.6773333549499512, 0.6783333420753479, 0.6806666851043701, 0.6816666722297668, 0.6836666464805603, 0.6859999895095825, 0.6830000281333923, 0.684333324432373, 0.6863333582878113, 0.6883333325386047, 0.6896666884422302, 0.6923333406448364, 0.6933333277702332, 0.6940000057220459, 0.6933333277702332, 0.6940000057220459, 0.6946666836738586, 0.6956666707992554, 0.6970000267028809, 0.6980000138282776, 0.6996666789054871, 0.699999988079071, 0.7013333439826965, 0.7009999752044678, 0.7016666531562805, 0.7046666741371155, 0.7039999961853027, 0.7066666483879089, 0.7076666951179504, 0.7073333263397217, 0.7080000042915344, 0.7093333601951599, 0.7123333215713501, 0.7146666646003723, 0.7129999995231628, 0.7123333215713501]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 0, 3, 5, 2, 2, 8, 2, 5, 8, 6, 2, 0, 4, 5, 2, 6, 1, 8, 2, 4, 5, 4, 2, 6, 1, 5, 2, 9, 2, 2, 1, 1, 5, 0, 2, 9, 0, 8, 0, 4, 8, 3, 6, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 2, 0, 2, 1, 0, 1, 1, 0, 1, 2, 2, 1, 2, 2, 0, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 69, 15, 38, 39, 33, 75, 0, 44, 88, 45, 77, 73, 0, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.7068571448326111, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.295239467756891, 2.254507628855153, 2.168502438038473, 1.982259541675163, 1.6517748329790907, 1.422968966739525, 1.348145979616888, 1.184230210034445, 0.9698238526557682, 0.8889576286026326, 0.8914147416803075, 0.8335181944374364, 0.7966394916013436, 0.8136656062241795, 0.8004902116437677, 0.7792455897890519, 0.7407666149392592, 0.7303605196797506, 0.7248180620249284, 0.7227496781432319, 0.694126693595591, 0.6771853590024193, 0.6623462134694946, 0.6654577226907098, 0.6680797050264077, 0.645692087120431, 0.6271286932327146, 0.5860061118505445, 0.6110223478818094, 0.601248307116925, 0.5767529451096015, 0.5766355863824859, 0.57060490437408, 0.5611849750242434, 0.550163395817978, 0.5443408284378153, 0.5306196904469003, 0.5258200332756606, 0.5318641094814407, 0.5304573062483062], "accuracy": [0.1080438494682312, 0.2242768406867981, 0.3420948386192322, 0.4084004759788513, 0.4562145173549652, 0.5016510486602783, 0.5481442213058472, 0.6168273687362671, 0.6655659675598145, 0.6645092964172363, 0.6763967871665955, 0.6959450244903564, 0.7003037929534912, 0.6894729733467102, 0.702681303024292, 0.7176066637039185, 0.7180029153823853, 0.717870831489563, 0.7209087014198303, 0.7304186820983887, 0.743891179561615, 0.7458723783493042, 0.746268630027771, 0.7503632307052612, 0.7467969655990601, 0.7588165402412415, 0.7626469135284424, 0.774798572063446, 0.7734777331352234, 0.7716285586357117, 0.7832518815994263, 0.7803460359573364, 0.7847048044204712, 0.7874785661697388, 0.7972526550292969, 0.8012151718139648, 0.7960638999938965, 0.7987055778503418, 0.7993659973144531, 0.7972526550292969], "val_loss": [1.9483534267970495, 1.890495913369315, 1.7723352568490165, 1.4980899606432234, 1.106027569089617, 0.8517926761082241, 0.7600358043398175, 0.7179516042981829, 0.6528079509735107, 0.681714653968811, 0.6604666539600917, 0.6010217666625977, 0.5825267348970685, 0.5807755674634661, 0.5718064308166504, 0.5548776047570365, 0.5434158359255109, 0.5543579714638847, 0.5554517677852085, 0.5493695735931396, 0.5348672015326363, 0.5148705073765346, 0.49927425384521484, 0.4807764802660261, 0.46995714732578825, 0.45997234753199984, 0.45256678547178, 0.4585453271865845, 0.4655628034046718, 0.46003265040261404, 0.4443136879376003, 0.43259226424353464, 0.43403869015829905, 0.42635161536080496, 0.42587171282087055, 0.4255434785570417, 0.4221006802150181, 0.42118591921670095, 0.41967685733522686, 0.41600766352244783], "val_accuracy": [0.23800000548362732, 0.37599998712539673, 0.44433334469795227, 0.5049999952316284, 0.5963333249092102, 0.6700000166893005, 0.6926666498184204, 0.7083333134651184, 0.7099999785423279, 0.7196666598320007, 0.7236666679382324, 0.7239999771118164, 0.7303333282470703, 0.7316666841506958, 0.7453333139419556, 0.7459999918937683, 0.7450000047683716, 0.7556666731834412, 0.7590000033378601, 0.7490000128746033, 0.7580000162124634, 0.7696666717529297, 0.7699999809265137, 0.7823333144187927, 0.7919999957084656, 0.7863333225250244, 0.7846666574478149, 0.7929999828338623, 0.7903333306312561, 0.7916666865348816, 0.7990000247955322, 0.8053333163261414, 0.8019999861717224, 0.8136666417121887, 0.8173333406448364, 0.8096666932106018, 0.815666675567627, 0.8116666674613953, 0.8096666932106018, 0.8103333115577698]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.29428571462631226, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3015036536025146, 2.3019880635343792, 2.301000382339383, 2.3009274915665716, 2.3018740007921754, 2.3023428242708226, 2.3009853577176105, 2.298982640267552, 2.3007594625853183, 2.2990998270457776, 2.2993433081226704, 2.2988853926640367, 2.2980423520631983, 2.299362435616113, 2.29673491707095, 2.297303918739745, 2.297105670557865, 2.2951878301219666, 2.2963536610425095, 2.2960262562478806, 2.294718397449367, 2.2949805164286774, 2.294926275839785, 2.2954048323451786, 2.294797777704449, 2.2935501299419614, 2.292437234874005, 2.291738394118886, 2.293211619206203, 2.2920764128073188, 2.2927672949606923, 2.2903034934876634, 2.2916362508255586, 2.289365781532885, 2.292302879438802, 2.290555492069082, 2.2897749576964133, 2.289597440342216, 2.288920538662573, 2.2876302846088037, 2.2893857808869513, 2.288227398539452, 2.2883444243985207, 2.2880490177642274, 2.2882895465256783, 2.287930085375293, 2.28691973567812, 2.285921180882805, 2.2863424975937225, 2.2861535064831795, 2.285175934538251, 2.2862751011866713, 2.285529232075532, 2.2841335768555417, 2.283888809244158, 2.28451686005598, 2.2820973489514715, 2.2828851186084456, 2.2817305733483337, 2.281646453378506, 2.282553397275516, 2.283092124004563, 2.28134547730384, 2.281375369312678, 2.280436693732418, 2.2806576794448103, 2.2810976608570117, 2.2809711008055524, 2.27974474806402, 2.278906340328867, 2.2786170527478724, 2.2802930013961196, 2.278289742489312, 2.2769683558061344, 2.2768680657913434, 2.2770260297044427, 2.2767450761612396, 2.2772329547984365, 2.2773452743232494, 2.2753470392117583, 2.2760473496217015, 2.2758435476504895, 2.27515696987988, 2.2738342124552005, 2.27499709499668, 2.273605208182143, 2.271870915160093, 2.2734808524712093, 2.273991419512913, 2.272928808343535, 2.271467509853558, 2.2708306407034122, 2.2710273096731797, 2.270604083031365, 2.2698595226558917, 2.2701240877008644, 2.269050866038713, 2.27143064995074, 2.269834275699767, 2.2689220786267867], "accuracy": [0.09140139818191528, 0.0940430611371994, 0.09245806187391281, 0.09232597798109055, 0.09351472556591034, 0.0874389111995697, 0.09100515395402908, 0.09840179979801178, 0.09945846349000931, 0.10130762308835983, 0.1014397069811821, 0.09906221181154251, 0.1014397069811821, 0.09879804402589798, 0.10077928751707077, 0.10394927859306335, 0.10236428678035736, 0.10857218503952026, 0.10593052208423615, 0.10289261490106583, 0.10368511080741882, 0.1138555034995079, 0.11227050423622131, 0.10896842926740646, 0.10566636174917221, 0.11068551242351532, 0.11755382269620895, 0.11451591551303864, 0.11227050423622131, 0.1150442510843277, 0.1154404953122139, 0.11795007437467575, 0.11755382269620895, 0.12257297337055206, 0.11808215826749802, 0.1154404953122139, 0.12270505726337433, 0.11966715008020401, 0.12600713968276978, 0.12561088800430298, 0.1266675442457199, 0.12759213149547577, 0.12336547672748566, 0.12270505726337433, 0.11953506618738174, 0.1258750557899475, 0.13247919082641602, 0.13010171055793762, 0.13393211364746094, 0.1320829540491104, 0.13538502156734467, 0.12838461995124817, 0.13300752639770508, 0.14040417969226837, 0.13247919082641602, 0.1402720957994461, 0.14159291982650757, 0.1406683325767517, 0.1422533392906189, 0.1484612375497818, 0.14780081808567047, 0.1372341811656952, 0.14330999553203583, 0.1442345827817917, 0.1530841439962387, 0.1442345827817917, 0.14714039862155914, 0.14238542318344116, 0.14780081808567047, 0.15519747138023376, 0.15136705338954926, 0.1504424810409546, 0.14978206157684326, 0.1570466309785843, 0.15731078386306763, 0.16232994198799133, 0.15717871487140656, 0.15414080023765564, 0.1500462293624878, 0.16457535326480865, 0.15968827903270721, 0.1674811840057373, 0.16338661313056946, 0.16431118547916412, 0.15942411124706268, 0.1728965789079666, 0.17250032722949982, 0.17117950320243835, 0.16761326789855957, 0.16761326789855957, 0.16933034360408783, 0.17580240964889526, 0.17434948682785034, 0.17884030938148499, 0.17355699837207794, 0.175670325756073, 0.17923656105995178, 0.1728965789079666, 0.1744815707206726, 0.17831197381019592], "val_loss": [1.9706677028111048, 1.970350878579276, 1.9700358935764857, 1.9697248595101493, 1.9694133486066545, 1.9691017695835658, 1.9687882832118444, 1.9684760911124093, 1.9681590625217982, 1.9678470747811454, 1.9675348826817103, 1.9672254834856306, 1.9669171742030553, 1.9666079793657576, 1.9662989207676478, 1.9659891809735979, 1.965682029724121, 1.9653739929199219, 1.9650654792785645, 1.9647560800824846, 1.9644487244742257, 1.9641395977565221, 1.963829789842878, 1.9635212762015206, 1.963212490081787, 1.9629036358424596, 1.9625965527125768, 1.9622887202671595, 1.9619812284197127, 1.9616777556283134, 1.9613711493355888, 1.9610647474016463, 1.9607585498264857, 1.960456371307373, 1.9601492881774902, 1.959846019744873, 1.959540843963623, 1.9592365537370955, 1.9589287212916784, 1.9586210250854492, 1.958313056400844, 1.9580060413905553, 1.9576969146728516, 1.9573907170976912, 1.957082884652274, 1.956775120326451, 1.9564673560006278, 1.9561607497079032, 1.9558538709368025, 1.9555484907967704, 1.9552398409162248, 1.9549341882978166, 1.9546309879847936, 1.954322678702218, 1.954014710017613, 1.9537076268877303, 1.9534025873456682, 1.9530977521623885, 1.9527902603149414, 1.9524818829127721, 1.9521735736301966, 1.951866626739502, 1.9515602929251534, 1.951254231589181, 1.9509428569248743, 1.9506357737949915, 1.9503276688711983, 1.9500186783926827, 1.9497080530439104, 1.949399811880929, 1.9490880966186523, 1.9487784930637904, 1.9484667778015137, 1.9481567655290877, 1.9478445053100586, 1.9475329944065638, 1.9472216878618513, 1.9469105175563268, 1.9466007096426827, 1.946291719164167, 1.945979390825544, 1.9456680161612374, 1.94535493850708, 1.9450432913643974, 1.9447290556771415, 1.9444144112723214, 1.9440982682364327, 1.9437808309282576, 1.9434638023376465, 1.9431492260524206, 1.9428373745509557, 1.9425206184387207, 1.9422035217285156, 1.9418860163007463, 1.9415672847202845, 1.941248553139823, 1.9409263474600655, 1.9406097957066126, 1.9402924265180315, 1.9399732181004115], "val_accuracy": [0.036666665226221085, 0.03866666555404663, 0.03933333232998848, 0.04066666588187218, 0.04233333468437195, 0.04500000178813934, 0.04899999871850014, 0.05133333429694176, 0.0533333346247673, 0.05700000002980232, 0.05900000035762787, 0.06066666543483734, 0.06300000101327896, 0.06499999761581421, 0.06800000369548798, 0.07066666334867477, 0.07199999690055847, 0.07466666400432587, 0.07733333110809326, 0.0806666687130928, 0.08366666734218597, 0.08666666597127914, 0.08966666460037231, 0.09300000220537186, 0.09666666388511658, 0.09933333098888397, 0.10166666656732559, 0.10599999874830246, 0.10966666787862778, 0.11266666650772095, 0.11699999868869781, 0.11999999731779099, 0.12300000339746475, 0.12466666847467422, 0.1276666671037674, 0.12999999523162842, 0.1313333362340927, 0.1353333294391632, 0.13766667246818542, 0.14166666567325592, 0.14300000667572021, 0.1446666717529297, 0.14766666293144226, 0.15066666901111603, 0.15266667306423187, 0.15600000321865082, 0.15966667234897614, 0.16300000250339508, 0.16566666960716248, 0.1679999977350235, 0.1693333387374878, 0.17366667091846466, 0.17800000309944153, 0.18033333122730255, 0.18199999630451202, 0.18433333933353424, 0.18833333253860474, 0.19033333659172058, 0.1940000057220459, 0.1966666728258133, 0.20000000298023224, 0.20233333110809326, 0.20733332633972168, 0.20733332633972168, 0.2096666693687439, 0.21299999952316284, 0.2163333296775818, 0.21899999678134918, 0.22233332693576813, 0.22466666996479034, 0.22699999809265137, 0.2290000021457672, 0.23100000619888306, 0.23333333432674408, 0.2356666624546051, 0.23866666853427887, 0.2396666705608368, 0.2423333376646042, 0.24500000476837158, 0.24766667187213898, 0.25, 0.25200000405311584, 0.2540000081062317, 0.25699999928474426, 0.25866666436195374, 0.2616666555404663, 0.2626666724681854, 0.26600000262260437, 0.2683333456516266, 0.2706666588783264, 0.27399998903274536, 0.27533334493637085, 0.2770000100135803, 0.27799999713897705, 0.2800000011920929, 0.28200000524520874, 0.2840000092983246, 0.28600001335144043, 0.2876666784286499, 0.28866666555404663]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 3, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 2, 5, 8, 6, 2, 6, 4, 5, 2, 6, 1, 8, 4, 2, 5, 4, 2, 2, 4, 0, 2, 9, 2, 2, 1, 1, 5, 0, 3, 8, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1, 1, 2, 2, 0, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [11, 33, 23, 15, 25, 39, 33, 75, 29, 39, 69, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 1, 8, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 72, 72, 44, 28, 12, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), grad))))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(tf.math.multiply(alpha, grad)))))))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(beta, tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(sigma, beta)))), sigma)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [6, 2], [14], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), alpha)", "other_info": {"loss": [383120597652.89233, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04873860627412796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 2, 3, 5, 6, 3, 2, 5, 0, 6, 2, 2, 4, 5, 3, 6, 2, 8, 4, 4, 0, 3, 8, 6, 6, 9, 2, 9, 1, 2, 1, 1, 5, 0, 9, 2, 6, 8, 5, 4, 8, 8, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 68, 68, 43, 25, 10, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, alpha)))))), grad))))))), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))))), grad)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.sqrt(alpha), tf.math.sqrt(alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [5, 8, 1, 3], [6, 2], [14], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), alpha)", "other_info": {"loss": [382949620348.71655, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04873860627412796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [436620114748416.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1950865089893341, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 2, 2, 3, 2, 2, 8, 4, 5, 4, 6, 2, 4, 4, 5, 5, 6, 1, 1, 4, 4, 5, 4, 2, 6, 2, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 8, 0, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 2, 0, 2, 1, 0, 1, 1, 0, 1, 2, 2, 1, 2, 2, 1, 0, 3, 1, 0, 1, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 5, 58, 33, 75, 29, 81, 88, 45, 77, 73, 0, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303462105121091, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 9, 2, 2, 2, 2, 5, 1, 6, 8, 0, 4, 5, 2, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 2, 2, 2, 1, 1, 5, 0, 3, 9, 6, 9, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 0, 0, 2, 1, 2, 1, 1, 0, 1, 2, 2, 1, 2, 2, 0, 0, 1, 2, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [24, 33, 23, 15, 38, 39, 33, 75, 29, 81, 88, 45, 77, 73, 54, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 6, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, alpha))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3038673538179792, 2.302910751686152, 2.3030482091766387, 2.3028943617393343, 2.30290563070952, 2.3030853871703383, 2.3030223549160236, 2.3029803437107135, 2.3030830081175853, 2.302874832199927], "accuracy": [0.09047681838274002, 0.0936468094587326, 0.09192973375320435, 0.09628847241401672, 0.09338264167308807, 0.09325055778026581, 0.09760929644107819, 0.0952318087220192, 0.09615638852119446, 0.09245806187391281], "val_loss": [1.9736152376447404, 1.9736482756478446, 1.9736147608075822, 1.9736448696681432, 1.9736130578177316, 1.9736279078892298, 1.9736544064113073, 1.9735722541809082, 1.9736460958208357, 1.9737218448093958], "val_accuracy": [0.10133333504199982, 0.09799999743700027, 0.10100000351667404, 0.1003333330154419, 0.10400000214576721, 0.10400000214576721, 0.1003333330154419, 0.10400000214576721, 0.10100000351667404, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [5, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 3, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [81, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 7, 5, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [1, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.3016426253391216, 2.3024734989401057, 2.301823860965054, 2.302084361935304, 2.303375112130232, 2.304179923377883], "accuracy": [0.09060890227556229, 0.09338264167308807, 0.09113723784685135, 0.08902391046285629, 0.09060890227556229, 0.08347642421722412], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 4, 5, 5, 6, 1, 8, 4, 4, 5, 4, 2, 6, 6, 9, 2, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 4, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 3, 0, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [47, 33, 23, 15, 25, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 3, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.3016426253391216, 2.3024734989401057, 2.301823860965054, 2.302084361935304, 2.303375112130232, 2.304179923377883], "accuracy": [0.09060890227556229, 0.09338264167308807, 0.09113723784685135, 0.08902391046285629, 0.09060890227556229, 0.08347642421722412], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 2, 2, 2, 8, 4, 5, 8, 5, 2, 0, 4, 5, 5, 6, 1, 4, 4, 4, 5, 0, 6, 6, 6, 9, 5, 9, 2, 2, 1, 1, 5, 0, 9, 9, 6, 8, 1, 2, 8, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 0, 0, 0, 2, 1, 0, 1, 1, 1, 1, 2, 2, 1, 2, 2, 0, 0, 3, 0, 0, 0, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [36, 61, 23, 15, 38, 39, 33, 75, 29, 81, 88, 45, 77, 73, 0, 8], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [14], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.030571429058909416, "mapping_values": [1, 44, 44, 29, 15, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))))))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027196507081693, 2.306255664083511, 2.3082788689356, 2.311246759115886, 2.315382645539856, 2.318973031199572], "accuracy": [0.08770307898521423, 0.08479725569486618, 0.07951393723487854, 0.068815216422081, 0.06656980514526367, 0.05626733601093292], "val_loss": [1.9734197344098772, 1.9759058952331543, 1.9784047263009208, 1.9809135028294154, 1.9834836551121302, 1.9860943385532923], "val_accuracy": [0.026333333924412727, 0.02133333310484886, 0.01600000075995922, 0.012333333492279053, 0.009333333000540733, 0.007333333138376474]}}]