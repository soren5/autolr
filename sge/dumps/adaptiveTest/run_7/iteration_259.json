[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8185714483261108, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.024190543869688, 1.3957341409488486, 1.1071977701720592, 0.8887092516942189, 0.7972675541199555, 0.7626512047085922, 0.755785351219336, 0.7106999219558211, 0.6742443529023723, 0.6710117329711597, 0.6455659295951749, 0.630713371741789, 0.6155253006577129, 0.6041121285321643, 0.5990540272508393, 0.5838723621741891, 0.5679378954017356, 0.5372998659022811, 0.5376910841334308, 0.5379984140821247, 0.5138729805321883, 0.5115477442662667, 0.5019169422763292, 0.5209919557737054, 0.5039570954662855, 0.4832598857474349, 0.4602289861376889, 0.4596441956346439, 0.4777989010918866, 0.46246200374025853, 0.4404140822072748, 0.4471529503666005, 0.4430850879619497, 0.4464537917607181, 0.4273135630902739, 0.42705343106104443, 0.4124560728442825, 0.4273737803536509, 0.41032084167641325, 0.3996603163541064, 0.42055834276942905], "accuracy": [0.31765949726104736, 0.5114251971244812, 0.609430730342865, 0.6647734642028809, 0.696209192276001, 0.713379979133606, 0.7121912837028503, 0.7275128960609436, 0.7442874312400818, 0.744419515132904, 0.7514199018478394, 0.7602694630622864, 0.7643640041351318, 0.7775723338127136, 0.7725531458854675, 0.7796856164932251, 0.7810064554214478, 0.7964601516723633, 0.7954035401344299, 0.7950072884559631, 0.8080834746360779, 0.8094043135643005, 0.8124422430992126, 0.8050455451011658, 0.8105930685997009, 0.8240655064582825, 0.8285563588142395, 0.8290846943855286, 0.8244617581367493, 0.8256505131721497, 0.839519202709198, 0.8337075710296631, 0.8337075710296631, 0.8339717388153076, 0.8457271456718445, 0.8372738361358643, 0.8481045961380005, 0.8430854678153992, 0.8465195894241333, 0.8502179384231567, 0.8403117060661316], "val_loss": [1.1929715701511927, 1.1927336284092493, 0.67962075982775, 0.6344739709581647, 0.6129211527960641, 0.5930555377687726, 0.5542193480900356, 0.5516235998698643, 0.4869665077754429, 0.48995057174137663, 0.4835639681134905, 0.49696479524884907, 0.47591074875422884, 0.45733376911708284, 0.47879956449781147, 0.43823202167238506, 0.4270056060382298, 0.4103343061038426, 0.4371649282319205, 0.3992633308683123, 0.41209812675203594, 0.4102847065244402, 0.4067514794213431, 0.45010457720075336, 0.38327646255493164, 0.3680136203765869, 0.36570664814540316, 0.3982390250478472, 0.37150767019816805, 0.35805944885526386, 0.3793178200721741, 0.3831296222550528, 0.3847171153341021, 0.35466322728565763, 0.3557781832558768, 0.3441393715994699, 0.3519954596246992, 0.3394432067871094, 0.33842321804591585, 0.3734737379210336, 0.3390827349254063], "val_accuracy": [0.5243333578109741, 0.5636666417121887, 0.7126666903495789, 0.7170000076293945, 0.7229999899864197, 0.7260000109672546, 0.753333330154419, 0.7423333525657654, 0.7866666913032532, 0.7739999890327454, 0.7866666913032532, 0.7639999985694885, 0.7820000052452087, 0.7919999957084656, 0.7866666913032532, 0.8040000200271606, 0.8186666369438171, 0.8236666917800903, 0.8076666593551636, 0.8306666612625122, 0.8209999799728394, 0.8230000138282776, 0.8226666450500488, 0.7996666431427002, 0.8333333134651184, 0.843999981880188, 0.8446666598320007, 0.8273333311080933, 0.8416666388511658, 0.847000002861023, 0.8356666564941406, 0.8276666402816772, 0.8253333568572998, 0.847000002861023, 0.8483333587646484, 0.8583333492279053, 0.8476666808128357, 0.8529999852180481, 0.8560000061988831, 0.831333339214325, 0.8573333621025085]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 92, 74], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8019999861717224, "mapping_values": [1, 25, 25, 15, 10, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)))))))), tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.024139861751305, 1.3865655469478728, 1.110579770593249, 0.8671084834584282, 0.8273058325434091, 0.7485461563891455, 0.7222679761485526, 0.7575697681025554, 0.6757604594023441, 0.6775142172497371, 0.6541533607533422, 0.6281427961724104, 0.6159943805914262, 0.6027696585343452, 0.5997925760518952, 0.580162820696689, 0.5670810349943962, 0.5362577524797366, 0.5490394714777386, 0.5466211494705413, 0.5172322070349823, 0.5214446509723666, 0.5020860317770233, 0.5108409190080295, 0.5089443936922358, 0.48484824628342477, 0.4600316064626376, 0.47042237937237846, 0.47163922050452395, 0.4563899141426462, 0.4544423599528788], "accuracy": [0.31779158115386963, 0.5176330804824829, 0.6082419753074646, 0.6767930388450623, 0.6841896772384644, 0.7207766771316528, 0.7243428826332092, 0.707568347454071, 0.7432307600975037, 0.7436270117759705, 0.7467969655990601, 0.7627789974212646, 0.7663452625274658, 0.7792893648147583, 0.7728173136711121, 0.7817989587783813, 0.7817989587783813, 0.7946110367774963, 0.7880068421363831, 0.7905164361000061, 0.8084797263145447, 0.8042530417442322, 0.8086118102073669, 0.8119139075279236, 0.8084797263145447, 0.8228767514228821, 0.8289526104927063, 0.8247259259223938, 0.8286884427070618, 0.8280280232429504, 0.8348963260650635], "val_loss": [1.192199400493077, 1.2201310225895472, 0.6925078630447388, 0.6713929006031581, 0.6217256273542132, 0.5848664726529803, 0.5867830174309867, 0.5490921224866595, 0.4956087384905134, 0.497378979410444, 0.48678617818014963, 0.4926251002720424, 0.482488785471235, 0.45916543688092915, 0.46795945508139475, 0.4411443131310599, 0.4284855127334595, 0.4252749596323286, 0.4436581815992083, 0.4211323687008449, 0.4125723327909197, 0.40033185482025146, 0.40145364829472135, 0.4698883465358189, 0.38678635018212454, 0.37042083059038433, 0.37248403685433523, 0.39073470660618376, 0.37030080386570524, 0.35901382991245817, 0.38654924290520803], "val_accuracy": [0.5256666541099548, 0.54666668176651, 0.6993333101272583, 0.6970000267028809, 0.718666672706604, 0.7250000238418579, 0.7243333458900452, 0.7303333282470703, 0.7739999890327454, 0.7599999904632568, 0.784333348274231, 0.7680000066757202, 0.7789999842643738, 0.7896666526794434, 0.7903333306312561, 0.800000011920929, 0.8136666417121887, 0.8176666498184204, 0.8026666641235352, 0.8183333277702332, 0.8259999752044678, 0.8243333101272583, 0.8236666917800903, 0.7919999957084656, 0.8303333520889282, 0.8423333168029785, 0.8416666388511658, 0.8309999704360962, 0.8423333168029785, 0.8416666388511658, 0.8346666693687439]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 70, 24], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.7720000147819519, "mapping_values": [1, 25, 25, 15, 10, 3, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0241934405719726, 1.3929087966739573, 1.113542275870591, 0.8798254736347473, 0.8024021954568559, 0.7655238898958371, 0.7269242202380645, 0.744139431072752, 0.6756375279597886, 0.6764174978636386, 0.6277613270756686, 0.6421315625611077, 0.6109019679841176, 0.6099787567427382], "accuracy": [0.31765949726104736, 0.514198899269104, 0.6079778075218201, 0.6664905548095703, 0.6917183995246887, 0.7112666964530945, 0.7190595865249634, 0.7121912837028503, 0.7450799345970154, 0.7407211661338806, 0.763967752456665, 0.7512878179550171, 0.7696473598480225, 0.7741381525993347], "val_loss": [1.192882674080985, 1.20930814743042, 0.6857306446347918, 0.6251341956002372, 0.6309211424418858, 0.5876736981528146, 0.5748055151530674, 0.5486373390470233, 0.4924066237040928, 0.48813230650765554, 0.49170894282204763, 0.48739802837371826, 0.4810698372977121, 0.48500847816467285], "val_accuracy": [0.5246666669845581, 0.5546666383743286, 0.7023333311080933, 0.7300000190734863, 0.7143333554267883, 0.7133333086967468, 0.7226666808128357, 0.7450000047683716, 0.7799999713897705, 0.7746666669845581, 0.7786666750907898, 0.768666684627533, 0.7713333368301392, 0.7633333206176758]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 5, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.5682857036590576, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), grad))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.301757199275196, 2.298393636630936, 2.2967437879678014, 2.294479884617616, 2.2939679435278526, 2.2913334883907925, 2.2893327478845404, 2.286943131717535, 2.2856960939047846, 2.28342533684709, 2.2802606208087304, 2.2792631660895246, 2.277190397916579, 2.2758531348107907, 2.2740512944136975, 2.271678838621529, 2.268939709603558, 2.2658863507556624, 2.2646256536776757, 2.262949077098314, 2.262895865573261, 2.261291799953412, 2.2564864099112327, 2.2538327345711413, 2.2540712319722878, 2.2511895659293923, 2.247455427061219, 2.2471964150812838, 2.2429884150830937, 2.2409634567790295, 2.238070058218004, 2.2358306389852616, 2.2332761588743444, 2.229945689837348, 2.227769637451101, 2.2273018775819518, 2.222634754223736, 2.2191281531228997, 2.2164600288170426, 2.2142427574138064, 2.2123118702446734, 2.2088637201462626, 2.2033806600748287, 2.2024785066875943, 2.1987715694551944, 2.193687009458702, 2.1898315218634625, 2.1885901556794733, 2.1827436920327754, 2.1801777657201624, 2.1765629079725763, 2.173157859960205, 2.1689370598350264, 2.16547867871074, 2.158933331418141, 2.1579304784123043, 2.1503219283598605, 2.146426117258018, 2.1431153724064775, 2.137158901621212, 2.1326012004557033, 2.1282806666677403, 2.123616608236885, 2.119019192128905, 2.1101389403324937, 2.1038188971800498, 2.1034608282165568, 2.094113625618508, 2.091026777573045, 2.082456887028142, 2.0810763195694366, 2.0713429282511764, 2.0640092626019175, 2.0574089479074815, 2.0477980959920865, 2.0456283632569923, 2.0405382674525456, 2.029680895688842, 2.023174775700134, 2.0168119798546154, 2.0083935290689183, 1.9982750717171147, 1.9976319582108666, 1.9877981083378296, 1.9764076508645605, 1.968382886671324, 1.962180751063773, 1.9542685541825098, 1.945450053853035, 1.9380503966272657, 1.9319679920998674, 1.9180372701486688, 1.9060152335929643, 1.8966610749573078, 1.8924712901102192, 1.8844816445391082, 1.870383435929409, 1.865869123575757, 1.854845571480155, 1.8439928779449635], "accuracy": [0.08796724677085876, 0.10117553919553757, 0.10328886657953262, 0.11689341068267822, 0.10936468094587326, 0.11636507511138916, 0.12112006545066833, 0.12891295552253723, 0.13340377807617188, 0.1406683325767517, 0.14463083446025848, 0.14819706976413727, 0.1562541276216507, 0.1558578759431839, 0.16338661313056946, 0.17078325152397156, 0.17302866280078888, 0.1838594675064087, 0.1958790123462677, 0.18874652683734894, 0.1904636174440384, 0.19997358322143555, 0.21133272349834442, 0.2172764539718628, 0.21384228765964508, 0.22572976350784302, 0.2292959988117218, 0.2254655957221985, 0.24316470324993134, 0.24263638257980347, 0.25544843077659607, 0.2583542466163635, 0.260071337223053, 0.2658829689025879, 0.2642979919910431, 0.2572975754737854, 0.2747325301170349, 0.2806762754917145, 0.28741249442100525, 0.29045039415359497, 0.2921674847602844, 0.29045039415359497, 0.29679039120674133, 0.3086778521537781, 0.3057720363140106, 0.31805574893951416, 0.31699907779693604, 0.31184783577919006, 0.3279619514942169, 0.32439571619033813, 0.3291507065296173, 0.32479196786880493, 0.3391890227794647, 0.3353586196899414, 0.35305771231651306, 0.34024566411972046, 0.3541143834590912, 0.3473781645298004, 0.35226520895957947, 0.3681151866912842, 0.36124685406684875, 0.3661339282989502, 0.3700964152812958, 0.368511438369751, 0.38066306710243225, 0.38581427931785583, 0.37247392535209656, 0.3847576379776001, 0.38066306710243225, 0.38502180576324463, 0.38621053099632263, 0.39228636026382446, 0.3917580246925354, 0.4007396697998047, 0.40628713369369507, 0.4031171500682831, 0.3983621597290039, 0.4107779562473297, 0.4072117209434509, 0.4113062918186188, 0.418570876121521, 0.42226919531822205, 0.418570876121521, 0.41830670833587646, 0.42028793692588806, 0.4233258366584778, 0.4221371114253998, 0.4227975308895111, 0.43243956565856934, 0.4365341365337372, 0.43059042096138, 0.4431383013725281, 0.44049662351608276, 0.44128912687301636, 0.4485536813735962, 0.44010037183761597, 0.4567428231239319, 0.4500066041946411, 0.44564786553382874, 0.4551578462123871], "val_loss": [1.9691200937543596, 1.9672542299543108, 1.9654138428824288, 1.9635917799813407, 1.9617586135864258, 1.959942136492048, 1.9581225258963448, 1.956282411302839, 1.954451084136963, 1.952638830457415, 1.9507978303091866, 1.9489614622933524, 1.9471101760864258, 1.9452512604849679, 1.9433900288173132, 1.9415086337498255, 1.9396307127816337, 1.9376985004970007, 1.9357664244515556, 1.9338036945887975, 1.9318319729396276, 1.9298381124223982, 1.9277941840035575, 1.9257418768746513, 1.9236809866768974, 1.9215596062796456, 1.9194117273603166, 1.9172370093209403, 1.9149910381862096, 1.9127237456185477, 1.910421303340367, 1.9080513545445033, 1.9056388991219657, 1.903172152382987, 1.9006421906607491, 1.8981165204729353, 1.8954992294311523, 1.8928448813302177, 1.8901211874825614, 1.8873594147818429, 1.8845084054129464, 1.8815946578979492, 1.8785606792994909, 1.875497273036412, 1.8723672458103724, 1.869138172694615, 1.8658179555620467, 1.8624519620622908, 1.8589848109654017, 1.8554325103759766, 1.851778507232666, 1.8480572019304549, 1.8442492485046387, 1.8403588703700475, 1.836348601749965, 1.83229432787214, 1.8280621256147112, 1.8237860543387276, 1.8194308962140764, 1.8149360248020716, 1.8103393145969935, 1.8056567055838448, 1.8008480753217424, 1.7959465299333846, 1.7908549989972795, 1.7856622423444475, 1.7803998674665178, 1.7749900817871094, 1.769486631665911, 1.7638631548200334, 1.7581544603620256, 1.752293518611363, 1.7462530136108398, 1.7400752476283483, 1.733766828264509, 1.7273789133344377, 1.7208782604762487, 1.7141485895429338, 1.7073085308074951, 1.700380802154541, 1.6932589326586043, 1.685971464429583, 1.6786700316837855, 1.671198947089059, 1.6635192462376185, 1.6557308265141077, 1.6478471755981445, 1.6398048060280936, 1.631626912525722, 1.6233396870749337, 1.6149677889687675, 1.6064050197601318, 1.597670010157994, 1.5887864317212785, 1.579878602709089, 1.5708796296800887, 1.5617257867540633, 1.5525409153529577, 1.5432106767381941, 1.533841337476458], "val_accuracy": [0.045666664838790894, 0.06066666543483734, 0.07433333247900009, 0.09300000220537186, 0.1120000034570694, 0.12999999523162842, 0.14499999582767487, 0.1616666615009308, 0.17933332920074463, 0.195333331823349, 0.21266666054725647, 0.22699999809265137, 0.24199999868869781, 0.25566667318344116, 0.2706666588783264, 0.28166666626930237, 0.2893333435058594, 0.2983333468437195, 0.30799999833106995, 0.3160000145435333, 0.32466667890548706, 0.3319999873638153, 0.33933332562446594, 0.3449999988079071, 0.34933334589004517, 0.35366666316986084, 0.3606666624546051, 0.3630000054836273, 0.36633333563804626, 0.3683333396911621, 0.3723333477973938, 0.37533333897590637, 0.3790000081062317, 0.38199999928474426, 0.3843333423137665, 0.3893333375453949, 0.3933333456516266, 0.39666667580604553, 0.40166667103767395, 0.40433332324028015, 0.40700000524520874, 0.41100001335144043, 0.4116666615009308, 0.41499999165534973, 0.4163333475589752, 0.4176666736602783, 0.4206666648387909, 0.4243333339691162, 0.429666668176651, 0.4313333332538605, 0.43533334136009216, 0.437666654586792, 0.4413333237171173, 0.44466665387153625, 0.44566667079925537, 0.44866666197776794, 0.45133334398269653, 0.4519999921321869, 0.45500001311302185, 0.4573333263397217, 0.46000000834465027, 0.46299999952316284, 0.4646666646003723, 0.46700000762939453, 0.468666672706604, 0.4699999988079071, 0.4726666808128357, 0.47600001096725464, 0.47966668009757996, 0.48133334517478943, 0.4846666753292084, 0.48766666650772095, 0.4896666705608368, 0.4909999966621399, 0.49533334374427795, 0.49799999594688416, 0.49933332204818726, 0.5006666779518127, 0.503000020980835, 0.5036666393280029, 0.5073333382606506, 0.5106666684150696, 0.5143333077430725, 0.515999972820282, 0.5183333158493042, 0.5199999809265137, 0.5223333239555359, 0.5239999890327454, 0.5256666541099548, 0.5299999713897705, 0.5323333144187927, 0.5336666703224182, 0.5360000133514404, 0.5400000214576721, 0.5416666865348816, 0.5433333516120911, 0.54666668176651, 0.546999990940094, 0.5496666431427002, 0.5513333082199097]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 2, 9, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.5680000185966492, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.301757199275196, 2.298393636630936, 2.2967437879678014, 2.294479884617616, 2.2939679435278526, 2.2913334883907925, 2.2893327478845404, 2.286943131717535, 2.2856960939047846, 2.2834252918464095, 2.2802605893177015, 2.2792631345984957, 2.277190397916579, 2.2758531033197618, 2.2740513573957553, 2.271678901603587, 2.268939709603558, 2.2658863822466913, 2.2646255727142406, 2.262949014116256, 2.262895865573261, 2.261291736971354, 2.2564863604388266, 2.25383276606217, 2.2540712319722878, 2.251189597420421, 2.247455427061219, 2.2471964465723127, 2.2429883385913847, 2.2409634567790295, 2.238070058218004, 2.2358305895128554, 2.233276109401938, 2.22994562685529, 2.22776966894213, 2.2273019720550384, 2.222634677732027, 2.219128166632551, 2.216460010835665, 2.214242739432429, 2.212311708317803, 2.2088637516372915, 2.2033807995485954, 2.2024785696696516, 2.1987714749821077, 2.193686852003558, 2.1898313014262607, 2.188589948751923, 2.1827435480872825, 2.1801777972111913, 2.176562764027084, 2.173157864431931, 2.168936951852289, 2.1654786112569564, 2.15893331790849, 2.1579304379778232, 2.1503218968688316, 2.1464262341842075, 2.1431150889872184, 2.137158834167428, 2.132600831601283, 2.1282805092125963, 2.1236163113079742, 2.1190185937993578, 2.1101387469145947, 2.103818519287704, 2.1034603333980213, 2.0941129103627705, 2.0910259498628436, 2.08245613580965, 2.0810755233502642, 2.0713419880865116, 2.064008290946224, 2.057408066158675, 2.0477971063550156, 2.0456274725647337, 2.0405372822872008, 2.0296799645148655, 2.0231737050996275, 2.0168108327624004, 2.008392228993285, 1.9982738526049166, 1.9976309820362101, 1.9877968915559676, 1.976406222588949, 1.9683816743139515, 1.9621794307236626, 1.954267443100286, 1.9454489269780602, 1.938049373216066, 1.931966669523894, 1.918035835165468, 1.9060136637021963, 1.8966592575627987, 1.8924692028533388, 1.8844798136821843, 1.8703817444990152, 1.8658672746902192, 1.8548432975602014, 1.843990669195694], "accuracy": [0.08796724677085876, 0.10117553919553757, 0.10328886657953262, 0.11689341068267822, 0.10936468094587326, 0.11636507511138916, 0.12112006545066833, 0.12891295552253723, 0.13340377807617188, 0.1406683325767517, 0.14463083446025848, 0.14819706976413727, 0.1562541276216507, 0.1558578759431839, 0.16338661313056946, 0.17078325152397156, 0.17302866280078888, 0.1838594675064087, 0.1958790123462677, 0.18874652683734894, 0.1904636174440384, 0.19997358322143555, 0.21133272349834442, 0.2172764539718628, 0.21384228765964508, 0.22572976350784302, 0.2292959988117218, 0.2254655957221985, 0.24316470324993134, 0.24263638257980347, 0.25544843077659607, 0.2583542466163635, 0.260071337223053, 0.2658829689025879, 0.2642979919910431, 0.2572975754737854, 0.2747325301170349, 0.2806762754917145, 0.28741249442100525, 0.29045039415359497, 0.2921674847602844, 0.29045039415359497, 0.29679039120674133, 0.3086778521537781, 0.3057720363140106, 0.31805574893951416, 0.31699907779693604, 0.31197991967201233, 0.3279619514942169, 0.32439571619033813, 0.3291507065296173, 0.32479196786880493, 0.3391890227794647, 0.3354906737804413, 0.35305771231651306, 0.3403777480125427, 0.3541143834590912, 0.3473781645298004, 0.35226520895957947, 0.3681151866912842, 0.3611147701740265, 0.3661339282989502, 0.3700964152812958, 0.368511438369751, 0.38066306710243225, 0.38581427931785583, 0.37247392535209656, 0.3847576379776001, 0.38066306710243225, 0.38502180576324463, 0.38621053099632263, 0.39228636026382446, 0.3917580246925354, 0.4007396697998047, 0.40628713369369507, 0.4031171500682831, 0.39823007583618164, 0.4107779562473297, 0.4072117209434509, 0.41104212403297424, 0.418570876121521, 0.42226919531822205, 0.418570876121521, 0.41830670833587646, 0.42028793692588806, 0.4233258366584778, 0.4221371114253998, 0.4227975308895111, 0.43243956565856934, 0.4364020526409149, 0.43059042096138, 0.4431383013725281, 0.44049662351608276, 0.4414212107658386, 0.4485536813735962, 0.44010037183761597, 0.4567428231239319, 0.4500066041946411, 0.44564786553382874, 0.4551578462123871], "val_loss": [1.9691200937543596, 1.9672542299543108, 1.9654138428824288, 1.9635917799813407, 1.9617585454668318, 1.959942136492048, 1.9581225258963448, 1.956282411302839, 1.954451084136963, 1.952638830457415, 1.9507978303091866, 1.9489614622933524, 1.9471101760864258, 1.9452512604849679, 1.9433900288173132, 1.9415084975106376, 1.9396307127816337, 1.9376984323774065, 1.9357663563319616, 1.9338037627083915, 1.9318321772984095, 1.9298381124223982, 1.9277941840035575, 1.9257418768746513, 1.9236809866768974, 1.9215596062796456, 1.9194117273603166, 1.9172370093209403, 1.9149910381862096, 1.9127237456185477, 1.910421303340367, 1.9080514226640974, 1.9056388310023717, 1.9031719480242049, 1.9006423268999373, 1.8981165204729353, 1.8954991613115584, 1.8928448132106237, 1.8901211193629675, 1.8873594829014368, 1.8845083372933524, 1.8815945897783553, 1.8785606792994909, 1.8754973411560059, 1.8723671095711845, 1.869137968335833, 1.8658178193228585, 1.8624518258231026, 1.8589846066066198, 1.8554323741367884, 1.851778507232666, 1.8480571338108607, 1.8442492485046387, 1.8403589384896415, 1.8363487379891532, 1.832294259752546, 1.8280620574951172, 1.8237859180995397, 1.8194308962140764, 1.8149358885628837, 1.8103389739990234, 1.8056565012250627, 1.8008478028433663, 1.7959461893354143, 1.7908547946384974, 1.7856616292681013, 1.7803992543901717, 1.7749892643519811, 1.7694858823503767, 1.763862473624093, 1.7581536429268974, 1.7522927692958288, 1.7462519236973353, 1.7400742258344377, 1.7337657383510046, 1.7273779596601213, 1.720877238682338, 1.7141474655696325, 1.7073074408939906, 1.7003796441214425, 1.6932578768048967, 1.6859705788748605, 1.6786691120692663, 1.6711979252951485, 1.6635180882045202, 1.6557295322418213, 1.6478461197444372, 1.639803409576416, 1.6316255501338415, 1.6233381884438651, 1.6149663243974959, 1.606403453009469, 1.597667864390782, 1.5887845243726457, 1.5798765931810652, 1.5708777904510498, 1.5617239475250244, 1.5525388717651367, 1.543208394731794, 1.533838885171073], "val_accuracy": [0.045666664838790894, 0.06066666543483734, 0.07433333247900009, 0.09300000220537186, 0.1120000034570694, 0.12999999523162842, 0.14499999582767487, 0.1616666615009308, 0.17933332920074463, 0.195333331823349, 0.21266666054725647, 0.22699999809265137, 0.24199999868869781, 0.25566667318344116, 0.2706666588783264, 0.28166666626930237, 0.2893333435058594, 0.2983333468437195, 0.30799999833106995, 0.3160000145435333, 0.32466667890548706, 0.3319999873638153, 0.33933332562446594, 0.3449999988079071, 0.34933334589004517, 0.35366666316986084, 0.3606666624546051, 0.3630000054836273, 0.36633333563804626, 0.3683333396911621, 0.3723333477973938, 0.37533333897590637, 0.3790000081062317, 0.38199999928474426, 0.3843333423137665, 0.3893333375453949, 0.3933333456516266, 0.39666667580604553, 0.40166667103767395, 0.40433332324028015, 0.40700000524520874, 0.41100001335144043, 0.4116666615009308, 0.41499999165534973, 0.4163333475589752, 0.4176666736602783, 0.4206666648387909, 0.4243333339691162, 0.429666668176651, 0.4313333332538605, 0.43533334136009216, 0.437666654586792, 0.4413333237171173, 0.44466665387153625, 0.44566667079925537, 0.44866666197776794, 0.45133334398269653, 0.4519999921321869, 0.45500001311302185, 0.4573333263397217, 0.46000000834465027, 0.46299999952316284, 0.4646666646003723, 0.46700000762939453, 0.468666672706604, 0.4699999988079071, 0.4726666808128357, 0.47600001096725464, 0.47999998927116394, 0.48133334517478943, 0.4846666753292084, 0.48766666650772095, 0.4896666705608368, 0.4909999966621399, 0.49533334374427795, 0.49799999594688416, 0.49933332204818726, 0.5006666779518127, 0.503000020980835, 0.5036666393280029, 0.5073333382606506, 0.5106666684150696, 0.5143333077430725, 0.515999972820282, 0.5183333158493042, 0.5199999809265137, 0.5223333239555359, 0.5239999890327454, 0.5256666541099548, 0.5299999713897705, 0.5323333144187927, 0.5336666703224182, 0.5360000133514404, 0.5400000214576721, 0.5416666865348816, 0.5433333516120911, 0.54666668176651, 0.546999990940094, 0.5496666431427002, 0.5513333082199097]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [66, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302697534432674, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 5, 2, 8, 3, 3, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 4, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.303186200817956, 2.3035336877250745, 2.3057057832950427, 2.3075745525518823, 2.3125541651048964, 2.31565664684012, 2.3206560919392203, 2.3252951378646607, 2.334939429505217, 2.349383284749293, 2.3977782162598427, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09179764986038208, 0.08532558381557465, 0.08770307898521423, 0.07872143387794495, 0.07555144280195236, 0.0746268630027771, 0.07819310575723648, 0.07119271159172058, 0.07568352669477463, 0.08519349992275238, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9721736226763045, 1.9735357420785087, 1.9749797412327357, 1.9768601145063127, 1.9791643278939384, 1.9819015094212122, 1.985175677708217, 1.9895580155508858, 1.9967677252633231, 2.013496058327811, 2.2065649032592773, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029333332553505898, 0.02500000037252903, 0.02433333359658718, 0.025333333760499954, 0.028333334252238274, 0.036666665226221085, 0.0533333346247673, 0.07466666400432587, 0.08966666460037231, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 7, 3, 3, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.303186200817956, 2.303534920252451, 2.305708068536021, 2.30757879889668, 2.3125621048435163, 2.315663354429256, 2.320647220790441, 2.3252916921162887, 2.3349424304742983, 2.3493708612865003, 2.397452367027564, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09179764986038208, 0.08532558381557465, 0.08770307898521423, 0.07872143387794495, 0.07568352669477463, 0.07475894689559937, 0.07806102186441422, 0.07106062769889832, 0.07568352669477463, 0.08506141602993011, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9721736226763045, 1.9735370363507951, 1.9749838284083776, 1.9768670627049036, 1.9791719572884696, 1.981898648398263, 1.9851718630109514, 1.9895589011056083, 1.9967646598815918, 2.0134658132280623, 2.201601369040353, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029333332553505898, 0.02500000037252903, 0.02433333359658718, 0.025333333760499954, 0.028333334252238274, 0.036666665226221085, 0.0533333346247673, 0.07466666400432587, 0.08966666460037231, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 2, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 62, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 7, 3, 3, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302698038289135, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 2, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [3, 1, 3, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 3, 2, 1, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302697534432674, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 8, 9, 2, 3, 0, 9, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 6, 6, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 6, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2672596.3977923715, 49550421.19667151, 233912941.48302734, 641553530.8350284, 1376138076.9525821, 2557099118.941223], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.09681680053472519, 0.09813763201236725, 0.09628847241401672, 0.09826971590518951], "val_loss": [9945578.857142856, 79374240.0, 267676598.85714287, 634243986.2857143, 1238468242.2857144, 2139735040.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 2, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 2, 0, 3, 0], [44, 49, 44, 92, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 22, 12, 10, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.subtract(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), sigma))))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05507858842611313, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.598733078294808e+35, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 5, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 7, 3, 3, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 4, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [18], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 8, 3, 6, 1, 0, 0, 7, 2, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 7, 3, 3, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 20, 11, 9, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(sigma), alpha), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 8, 0, 8, 7, 3, 3, 2, 5, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 2, 4, 4, 8, 9, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [23, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302697534432674, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 3, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [37], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [3, 1, 3, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 9, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [19312872.211192187, 358785058.96288466, 1694739080.0982697, 4649397028.011095, 9974448718.379078, 18535962072.709023], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.09681680053472519, 0.09813763201236725, 0.09628847241401672, 0.09826971590518951], "val_loss": [71957012.57142857, 574954422.8571428, 1939687131.4285715, 4596851126.857142, 8977126546.285715, 15511179264.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 5, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 2, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 1, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 0, 1, 0, 3, 0, 3], [51, 49, 61, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302581245904554, 2.301235119522744, 2.3015738867214406, 2.3012768516230655, 2.3027743083957386, 2.302074416186658], "accuracy": [0.08558975160121918, 0.09642054885625839, 0.09232597798109055, 0.09747721254825592, 0.08942015469074249, 0.08809932321310043], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]