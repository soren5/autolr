[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8334285616874695, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.267343358215072, 2.2950110659701966, 2.101972356212295, 1.5850615220346376, 1.057085186624886, 0.8651567957955832, 0.7935563095761266, 0.7314018519279617, 0.6784753217011898, 0.64149796166015, 0.6115201654419719, 0.5775077055001602, 0.5947209321874685, 0.5662085068161304, 0.5360353063787562, 0.5335932831407743, 0.5072840257225382, 0.5262084263836341, 0.48232856213361547, 0.4806672387772768, 0.4805157580364335, 0.47497936019634823, 0.45514881317610156, 0.46434327207378756, 0.4300352850720521], "accuracy": [0.24659886956214905, 0.13261127471923828, 0.29612997174263, 0.4333641529083252, 0.6284506916999817, 0.6732267737388611, 0.7041342258453369, 0.7219653725624084, 0.7473253011703491, 0.7565711140632629, 0.7714964747428894, 0.7802139520645142, 0.7717606425285339, 0.7840443849563599, 0.8001585006713867, 0.7985734939575195, 0.8127063512802124, 0.7968564033508301, 0.8231409192085266, 0.8211596608161926, 0.8212917447090149, 0.8165367841720581, 0.8267071843147278, 0.8310658931732178, 0.8363492488861084], "val_loss": [1.9722856794084822, 1.939286231994629, 1.5915203775678362, 1.007521390914917, 0.7278951576777867, 0.6465647561209542, 0.551675626209804, 0.5940137250082833, 0.4928960289273943, 0.4649817262377058, 0.4625797952924456, 0.4703536203929356, 0.455881084714617, 0.4721574442727225, 0.38958074365343365, 0.4651401383536203, 0.43976281370435444, 0.3770238161087036, 0.38215913091387066, 0.3538462945393154, 0.36053429331098286, 0.35295947960444857, 0.3762281707354954, 0.3589925595692226, 0.38176064831869944], "val_accuracy": [0.10533333569765091, 0.24033333361148834, 0.3529999852180481, 0.6600000262260437, 0.6786666512489319, 0.6766666769981384, 0.7366666793823242, 0.7513333559036255, 0.768666684627533, 0.7826666831970215, 0.7893333435058594, 0.7826666831970215, 0.7913333177566528, 0.7699999809265137, 0.824999988079071, 0.7910000085830688, 0.7903333306312561, 0.8379999995231628, 0.82833331823349, 0.8493333458900452, 0.8410000205039978, 0.843666672706604, 0.8303333520889282, 0.8396666646003723, 0.8339999914169312]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8308571577072144, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.26735740872485, 2.2949374029113945, 2.0901355885117834, 1.5772952214837972, 1.2000305998389904, 0.9139915126551884, 0.8063017389305421, 0.7268902949842212, 0.6634689112932076, 0.6545261977260863, 0.6134194404284369, 0.599482238977624, 0.6060770922301704, 0.5644224191370137, 0.5445187293055067, 0.5422289277174848, 0.5073105790406927, 0.5320014828908807, 0.4874332546872895, 0.4849941998133649, 0.47299001558881, 0.48703593823415664, 0.4627134397934929], "accuracy": [0.24659886956214905, 0.13181878626346588, 0.29599788784980774, 0.44564786553382874, 0.566239595413208, 0.6741513609886169, 0.6984546184539795, 0.7228899598121643, 0.748249888420105, 0.7519482374191284, 0.7637035846710205, 0.7737419009208679, 0.7651565074920654, 0.7843085527420044, 0.7996301651000977, 0.7906485199928284, 0.8083476424217224, 0.7959318161010742, 0.8210275769233704, 0.8190463781356812, 0.8195747137069702, 0.8153480291366577, 0.828292191028595], "val_loss": [1.9722264153616769, 1.93892240524292, 1.5339842523847307, 0.9064782006399972, 0.779516339302063, 0.6573446307863507, 0.5482334409441266, 0.5111191272735596, 0.49440572943006245, 0.4612957068852016, 0.4902064970561436, 0.4521815606525966, 0.43584065777914865, 0.4565330573490688, 0.4145981754575457, 0.45188426971435547, 0.4135179008756365, 0.3791873114449637, 0.3823115825653076, 0.40478427921022686, 0.37947515078953337, 0.37974269901003155, 0.3730705465589251], "val_accuracy": [0.10566666722297668, 0.25066667795181274, 0.35866665840148926, 0.6203333139419556, 0.718666672706604, 0.6966666579246521, 0.7480000257492065, 0.7649999856948853, 0.765666663646698, 0.7829999923706055, 0.7596666812896729, 0.7910000085830688, 0.800000011920929, 0.7773333191871643, 0.8143333196640015, 0.793666660785675, 0.8076666593551636, 0.8389999866485596, 0.8296666741371155, 0.8240000009536743, 0.8293333053588867, 0.8306666612625122, 0.8336666822433472]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 85, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.8302857279777527, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 2, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.square(grad))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.1507647462949904, 1.986012021894736, 1.43977336328673, 1.1558041082727848, 0.8795034627967334, 0.8139090929222208, 0.7685067628148272, 0.71743143810147, 0.6888577804715327, 0.6877808440252774, 0.6438940361254345, 0.6088714482226565, 0.6086947932817743, 0.5972239472185538, 0.5709092165847197, 0.5799960018684363, 0.5567748831436697, 0.5422644851001782, 0.5112842503965114, 0.5305617698321269, 0.49438919411390814, 0.5147046769347094, 0.48906837224865857], "accuracy": [0.2806762754917145, 0.32664114236831665, 0.5143309831619263, 0.5956941246986389, 0.6619997620582581, 0.6917183995246887, 0.7022850513458252, 0.7255316376686096, 0.739928662776947, 0.7360982894897461, 0.7555144429206848, 0.7703077793121338, 0.7721568942070007, 0.7696473598480225, 0.7864218950271606, 0.7770439982414246, 0.791441023349762, 0.7987055778503418, 0.8090080618858337, 0.7954035401344299, 0.8142913579940796, 0.805177628993988, 0.8152159452438354], "val_loss": [1.9446919304983956, 1.7844455582754952, 0.824059111731393, 0.7210094588143485, 0.6189968585968018, 0.5753809383937291, 0.534646919795445, 0.5430916547775269, 0.5191332101821899, 0.504805326461792, 0.5118169273648944, 0.48615123544420513, 0.46607398986816406, 0.46409004075186594, 0.49278008937835693, 0.4874067647116525, 0.45041375500815256, 0.3926635299410139, 0.419035221849169, 0.3982061914035252, 0.4280645591872079, 0.3908707925251552, 0.39950242212840487], "val_accuracy": [0.17166666686534882, 0.4076666533946991, 0.6420000195503235, 0.6669999957084656, 0.7059999704360962, 0.7353333234786987, 0.7523333430290222, 0.7463333606719971, 0.7566666603088379, 0.7633333206176758, 0.7543333172798157, 0.762333333492279, 0.7860000133514404, 0.7666666507720947, 0.7699999809265137, 0.762333333492279, 0.7900000214576721, 0.8320000171661377, 0.8083333373069763, 0.8253333568572998, 0.7993333339691162, 0.8209999799728394, 0.8186666369438171]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 2, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.826285719871521, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 2, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.square(grad))))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.1507731202948976, 1.9743995574550102, 1.4923590041737373, 1.136972471306022, 0.8831903994075532, 0.8008330268095261, 0.7616842682760594, 0.7189946939774855, 0.6496934450738671, 0.6745524205835252, 0.6344576172777658, 0.5980748945632867, 0.607023016250113, 0.587180059371198, 0.5585782068626929, 0.5676931500545094, 0.5360122112439939, 0.5484543381712267, 0.5032067469413081, 0.49670289262977685, 0.49823662765809273, 0.4975615903260827, 0.48243866272968405], "accuracy": [0.2806762754917145, 0.3319244384765625, 0.50350022315979, 0.5963544845581055, 0.663848876953125, 0.6907938122749329, 0.7098137736320496, 0.7255316376686096, 0.7524765729904175, 0.739928662776947, 0.7544577717781067, 0.7744023203849792, 0.770439863204956, 0.7738739848136902, 0.7931581139564514, 0.7773081660270691, 0.8037247657775879, 0.7930260300636292, 0.8119139075279236, 0.8125742673873901, 0.8140271902084351, 0.8109893202781677, 0.8175934553146362], "val_loss": [1.9447627748761858, 1.7317964690072196, 0.8702288355146136, 0.6839186464037214, 0.632959416934422, 0.5741067784173148, 0.5281437805720738, 0.49325694356645855, 0.5362539121082851, 0.5072647844042096, 0.5217304910932269, 0.46393273557935444, 0.4444434472492763, 0.45441693919045584, 0.4596660818372454, 0.4658591406685965, 0.44395157269069124, 0.3873142685209002, 0.403862578528268, 0.41583568709237234, 0.38538398912974764, 0.38703984022140503, 0.4132859536579677], "val_accuracy": [0.17166666686534882, 0.5146666765213013, 0.6356666684150696, 0.6919999718666077, 0.718666672706604, 0.7203333377838135, 0.7543333172798157, 0.7793333530426025, 0.7506666779518127, 0.7616666555404663, 0.7490000128746033, 0.7723333239555359, 0.7956666946411133, 0.7870000004768372, 0.7786666750907898, 0.7836666703224182, 0.7893333435058594, 0.8376666903495789, 0.8136666417121887, 0.8206666707992554, 0.8316666483879089, 0.8323333263397217, 0.8083333373069763]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [1, 2], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.970426110433408, 1.3848714158047208, 1.0363726587248925, 0.9332806495722054, 0.8251382534955203, 0.767273255051749, 0.7595593810805775, 0.6989727344542541, 0.6925543025657565, 0.6722073528146574, 0.6579686928702352, 0.635705018394643, 0.6224690267769195, 0.6190886425304375, 0.5961423828743232, 0.6208790686341199, 0.592604356057073, 0.579589695891747, 0.5402620201176341, 0.5374520746763466, 0.5321952686129056, 0.5500445703883229, 0.5139064442968135], "accuracy": [0.3361510932445526, 0.5252938866615295, 0.6388852000236511, 0.6507726907730103, 0.6923788189888, 0.7083608508110046, 0.7086250185966492, 0.7387399077415466, 0.7360982894897461, 0.7429665923118591, 0.7452120184898376, 0.7638356685638428, 0.7613261342048645, 0.7629110813140869, 0.7812706232070923, 0.7576277852058411, 0.7778365015983582, 0.783119797706604, 0.7975168228149414, 0.7980451583862305, 0.7985734939575195, 0.7866860628128052, 0.8082155585289001], "val_loss": [1.458719321659633, 0.8177184377397809, 0.8254692554473877, 0.691425085067749, 0.6024786574499947, 0.5640295403344291, 0.5265530858721051, 0.5343719209943499, 0.511829308101109, 0.48814412525721956, 0.5414109911237445, 0.4669113670076643, 0.50679463999612, 0.48707686151776997, 0.44987688745771137, 0.5148530687604632, 0.47653898171016146, 0.4195206505911691, 0.4263579079083034, 0.42908804757254465, 0.42219841480255127, 0.42058526618140085, 0.41915182556424824], "val_accuracy": [0.48366665840148926, 0.6710000038146973, 0.637333333492279, 0.6883333325386047, 0.7329999804496765, 0.7556666731834412, 0.7666666507720947, 0.765999972820282, 0.7633333206176758, 0.7786666750907898, 0.7509999871253967, 0.7736666798591614, 0.7723333239555359, 0.7613333463668823, 0.7990000247955322, 0.7526666522026062, 0.7760000228881836, 0.8220000267028809, 0.8056666851043701, 0.8043333292007446, 0.8063333630561829, 0.8116666674613953, 0.8100000023841858]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 2, 4, 5, 2, 2, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.8028571605682373, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 2, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.1508217870661643, 1.9808520964659153, 1.4832494484828747, 1.1533527359151885, 0.8576639674721046, 0.8058622033683269, 0.7428918202492413, 0.708206279820077, 0.6673946173797902, 0.6693280723274124, 0.631889368903289, 0.5980477160340555, 0.5831943725503557, 0.5970562074587817, 0.5576773817355622, 0.5706990857276115, 0.541800191586343, 0.5385758587397982, 0.5202928671999347, 0.5025709714470381, 0.49093074160733197, 0.4943868211467961, 0.48273356502727827], "accuracy": [0.2806762754917145, 0.3283582031726837, 0.5017831325531006, 0.5856558084487915, 0.6790384650230408, 0.6926429867744446, 0.7174745798110962, 0.7273808121681213, 0.7454761862754822, 0.7445515990257263, 0.761590301990509, 0.7701756954193115, 0.7804781198501587, 0.7697794437408447, 0.7930260300636292, 0.7777044177055359, 0.7972526550292969, 0.7975168228149414, 0.806630551815033, 0.8059701323509216, 0.81548011302948, 0.8087438941001892, 0.8173292875289917], "val_loss": [1.9447152273995536, 1.7778486524309431, 0.7715700183595929, 0.6735561064311436, 0.5941628387996128, 0.5627450772694179, 0.5590340920857021, 0.5241366454533168, 0.49885124819619314, 0.4739201920373099, 0.49061850139072966, 0.4541630063738142, 0.4718862090791975, 0.45882489000047955, 0.4541013411113194, 0.4804105247770037, 0.4418067591530936, 0.3851521611213684, 0.4022364020347595, 0.40384818826402935, 0.4007683736937387, 0.37639751604625155, 0.43454513379505705], "val_accuracy": [0.1720000058412552, 0.42399999499320984, 0.6499999761581421, 0.6846666932106018, 0.7379999756813049, 0.7473333477973938, 0.7443333268165588, 0.7523333430290222, 0.7710000276565552, 0.7749999761581421, 0.7583333253860474, 0.7863333225250244, 0.7806666493415833, 0.7699999809265137, 0.7833333611488342, 0.7766666412353516, 0.7943333387374878, 0.8326666951179504, 0.8176666498184204, 0.8183333277702332, 0.8213333487510681, 0.8293333053588867, 0.7940000295639038]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.7285714149475098, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3000501664937243, 2.2928888650696906, 2.285785028600989, 2.2785958393516634, 2.2721354797327002, 2.264958419819959, 2.2584156832281215, 2.2519421778366375, 2.2440536040136165, 2.2364144061991347, 2.2266124872845774, 2.217240253727371, 2.2077227714527488, 2.1950840322396004, 2.1839992373044135, 2.1709916303186465, 2.1571594826722613, 2.1423009511045477, 2.1276158458284966, 2.1086553575623825, 2.086304214951416, 2.069654975537658, 2.0485168979971276, 2.0226301024256443, 1.9953768744271556, 1.9694496049636612, 1.9442868773900381, 1.913512333021062, 1.880036410921994, 1.8525694082158353, 1.8143016075524263, 1.7866736632674487, 1.7546239830893045, 1.7212663813037894, 1.6890080381992265, 1.6564606386263294, 1.6160751412242647, 1.590169627369513, 1.5603418254486998, 1.5324035488682148, 1.4941122944108436, 1.461660218985168, 1.4411905593623922, 1.4164525021525454, 1.3949333506332113, 1.3748036502862824, 1.3489948044269156, 1.325934680351224, 1.3054712923400358, 1.293437471605169, 1.2797227204987527, 1.2564686741323172, 1.2424552651633203, 1.2312513036089268, 1.2089109320319986, 1.2011369930959381, 1.1894648361987032, 1.179351689745926, 1.15689226935773, 1.145373675376354, 1.1412517350064197, 1.1278938748628362, 1.1205471537258362, 1.0975722513336152, 1.1019973411788053, 1.0863849447073008, 1.0769382529428149, 1.076670892691143, 1.0543708954630842, 1.0418288803150972, 1.04903948954178, 1.031450675148234, 1.0197362808298835, 1.0205752728653308, 1.01982274711754, 1.0081898125249948, 1.0101476431979386, 0.9921046084086058, 0.9865694202530921, 0.9929618648864873, 0.9763020453687987, 0.9753401418246173, 0.9701462879613595, 0.9651715389694346, 0.9477828076691628, 0.9595215311612215, 0.9424302153788254, 0.9448220575915478, 0.9424520685703937, 0.9422561031653188, 0.9310905912753503, 0.926432805810197, 0.9179920223111632, 0.9219843709410583, 0.9155778730975292, 0.907200104674454, 0.9080831285685659, 0.8896565439599994, 0.9032630359476206, 0.8968676384398179], "accuracy": [0.09708096832036972, 0.11200633645057678, 0.13221503794193268, 0.1546691358089447, 0.1752740740776062, 0.1888786107301712, 0.2114647924900055, 0.21754062175750732, 0.23893804848194122, 0.2542596757411957, 0.2646942138671875, 0.2879408299922943, 0.2938845455646515, 0.31765949726104736, 0.3210936486721039, 0.33641526103019714, 0.3479065001010895, 0.3568881154060364, 0.36626601219177246, 0.3703605830669403, 0.39585259556770325, 0.3936071991920471, 0.3936071991920471, 0.41447630524635315, 0.4224012792110443, 0.42847707867622375, 0.428609162569046, 0.4387795627117157, 0.44644036889076233, 0.4473649561405182, 0.4624224007129669, 0.46387532353401184, 0.4687623679637909, 0.4761590361595154, 0.48831066489219666, 0.4842160940170288, 0.49108439683914185, 0.5066701769828796, 0.5082551836967468, 0.5144630670547485, 0.5219917893409729, 0.533879280090332, 0.533879280090332, 0.5425967574119568, 0.5407475829124451, 0.5480121374130249, 0.5522388219833374, 0.5610883831977844, 0.5645225048065186, 0.5700700283050537, 0.5728437304496765, 0.579051673412323, 0.5798441171646118, 0.5819574594497681, 0.5906749367713928, 0.5914674401283264, 0.5904107689857483, 0.5972790718078613, 0.6063928008079529, 0.6044115424156189, 0.6028265953063965, 0.6086382269859314, 0.6126006841659546, 0.6194690465927124, 0.6174877882003784, 0.6277902722358704, 0.6259410977363586, 0.6250165104866028, 0.6336019039154053, 0.6400739550590515, 0.635451078414917, 0.6445648074150085, 0.64667809009552, 0.6427156329154968, 0.6452252268791199, 0.6413947939872742, 0.6446968913078308, 0.6592260003089905, 0.6564522385597229, 0.650640606880188, 0.6572447419166565, 0.6643772125244141, 0.6600185036659241, 0.6586976647377014, 0.6659622192382812, 0.6646413803100586, 0.6693964004516602, 0.6647734642028809, 0.672170102596283, 0.6716417670249939, 0.6709813475608826, 0.6664905548095703, 0.6757363677024841, 0.67666095495224, 0.6775855422019958, 0.6738871932029724, 0.677189290523529, 0.6828688383102417, 0.6753401160240173, 0.6864351034164429], "val_loss": [1.9648086002894811, 1.958737850189209, 1.9526401247297014, 1.946462835584368, 1.9402470588684082, 1.933741841997419, 1.926946026938302, 1.9198412214006697, 1.9124151638575964, 1.9046120643615723, 1.8961405754089355, 1.8870741299220495, 1.8773072787693568, 1.866617134639195, 1.8550432068961007, 1.8423741204398019, 1.8287561961582728, 1.8140582357134138, 1.7981810569763184, 1.7809526579720634, 1.762228148324149, 1.7422338213239397, 1.7207470621381487, 1.697871174131121, 1.6732560225895472, 1.6471280711037772, 1.6195458684648787, 1.5906435421534948, 1.5601149967738561, 1.5285999774932861, 1.4962857450757707, 1.463529109954834, 1.4305814334324427, 1.3969618592943465, 1.3631972926003593, 1.329965693610055, 1.297102655683245, 1.2649720055716378, 1.233832768031529, 1.2040044920785087, 1.1749001911708288, 1.1469053200313024, 1.1204485893249512, 1.0953235966818673, 1.0716276850019182, 1.0492145333971297, 1.0279643195016044, 1.0076649529593331, 0.9888133321489606, 0.9711805071149554, 0.9546350411006382, 0.9389257771628243, 0.9237912722996303, 0.9098138128008161, 0.8964711938585553, 0.8836250986371722, 0.8719505582536969, 0.8606575216565814, 0.8499807289668492, 0.8393973452704293, 0.8300049304962158, 0.8210179805755615, 0.8126582758767265, 0.8040342501231602, 0.7960270472935268, 0.7885253599711827, 0.7813399178641183, 0.7745797974722726, 0.767818706376212, 0.7608617884772164, 0.7548955508640834, 0.7489753791264125, 0.743103197642735, 0.7371059656143188, 0.7323963812419346, 0.7277335950306484, 0.7231935432979039, 0.7183187518801007, 0.7137050117765155, 0.7094041279384068, 0.7050046239580426, 0.7013849190303257, 0.6976434332983834, 0.6939879315240043, 0.6899635451180595, 0.6865651607513428, 0.6832031522478376, 0.6797334977558681, 0.6767367976052421, 0.673308287348066, 0.6698012692587716, 0.6671007701328823, 0.6641334635870797, 0.6617848191942487, 0.6592379978724888, 0.6569386550358364, 0.654301473072597, 0.6512842518942696, 0.6489945309502738, 0.6460953099387032], "val_accuracy": [0.07999999821186066, 0.13866665959358215, 0.20000000298023224, 0.24766667187213898, 0.28833332657814026, 0.3173333406448364, 0.3386666774749756, 0.35499998927116394, 0.3656666576862335, 0.3799999952316284, 0.3933333456516266, 0.4023333191871643, 0.414000004529953, 0.4216666519641876, 0.4346666634082794, 0.4429999887943268, 0.4506666660308838, 0.45899999141693115, 0.4646666646003723, 0.47099998593330383, 0.47999998927116394, 0.4893333315849304, 0.4986666738986969, 0.5053333044052124, 0.5166666507720947, 0.5246666669845581, 0.5320000052452087, 0.5389999747276306, 0.546999990940094, 0.5516666769981384, 0.5586666464805603, 0.5640000104904175, 0.5686666369438171, 0.5789999961853027, 0.5886666774749756, 0.5946666598320007, 0.6006666421890259, 0.6056666374206543, 0.6119999885559082, 0.6186666488647461, 0.6269999742507935, 0.6383333206176758, 0.6439999938011169, 0.6473333239555359, 0.6520000100135803, 0.6583333611488342, 0.6636666655540466, 0.6646666526794434, 0.6693333387374878, 0.6706666946411133, 0.67166668176651, 0.6746666431427002, 0.6753333210945129, 0.6776666641235352, 0.6809999942779541, 0.6800000071525574, 0.6816666722297668, 0.6826666593551636, 0.6833333373069763, 0.684333324432373, 0.687333345413208, 0.6883333325386047, 0.6916666626930237, 0.6943333148956299, 0.6936666369438171, 0.6933333277702332, 0.6940000057220459, 0.6956666707992554, 0.6956666707992554, 0.6983333230018616, 0.7009999752044678, 0.7006666660308838, 0.703000009059906, 0.7036666870117188, 0.7056666612625122, 0.7066666483879089, 0.7086666822433472, 0.7099999785423279, 0.7106666564941406, 0.7123333215713501, 0.7133333086967468, 0.7139999866485596, 0.7139999866485596, 0.7143333554267883, 0.7170000076293945, 0.7163333296775818, 0.7176666855812073, 0.7203333377838135, 0.7223333120346069, 0.7210000157356262, 0.7223333120346069, 0.7246666550636292, 0.7233333587646484, 0.7263333201408386, 0.7260000109672546, 0.7250000238418579, 0.7286666631698608, 0.7276666760444641, 0.7283333539962769, 0.7316666841506958]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 2, 4, 0, 6, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 0, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 3, 3, 3, 1, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 61, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [0, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.6845714449882507, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), grad), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.295036579592353, 2.2462729318125247, 2.135614664421389, 1.8773397721666087, 1.5022261093132343, 1.3683989099334528, 1.2816175716018727, 1.0240676614980277, 0.8961290749796882, 0.8893480362940647, 0.8444409318540893, 0.8095421466561609, 0.8121388258478661, 0.7894187611658748, 0.7666970898903215, 0.722758907526082, 0.7249796214104959, 0.7325457263742345, 0.7016810760238561, 0.6909785319187103, 0.6729757675184881, 0.6682593334761939, 0.6505606601723527, 0.6282740690216585, 0.6047157991154476, 0.6028239351096107, 0.6020182059929434, 0.5840914036698266, 0.5797557362302765, 0.5711871066491492, 0.5525863939870885, 0.5498539701806807, 0.5400015344284057, 0.5223535906684366, 0.5181404106794268, 0.5211751912531678, 0.5107204941490212, 0.5008667355885265, 0.49899715352855134, 0.4956872595016274, 0.4903462967655646, 0.4868813895073864, 0.46786865727020654, 0.46498430548342795, 0.4626224902658383, 0.46466718293877013, 0.4577034697430623, 0.44953805791971124, 0.4347156791946183, 0.4315744751968152, 0.4323299872073767, 0.4231905660428045], "accuracy": [0.10962884873151779, 0.23880596458911896, 0.3615110218524933, 0.4275524914264679, 0.4935939908027649, 0.5363888740539551, 0.5838066339492798, 0.6457535624504089, 0.6600185036659241, 0.6811517477035522, 0.6902654767036438, 0.6980583667755127, 0.6927750706672668, 0.703209638595581, 0.7189275026321411, 0.7273808121681213, 0.7273808121681213, 0.7275128960609436, 0.735041618347168, 0.7449478507041931, 0.7573636174201965, 0.7458723783493042, 0.7548540234565735, 0.7664773464202881, 0.7754589915275574, 0.7741381525993347, 0.7807422876358032, 0.7840443849563599, 0.7827235460281372, 0.7835160493850708, 0.7881389260292053, 0.796328067779541, 0.7976489067077637, 0.8026680946350098, 0.8049134612083435, 0.8018755912780762, 0.8050455451011658, 0.8084797263145447, 0.8169330358505249, 0.8101968169212341, 0.8149517774581909, 0.8215559124946594, 0.8260467648506165, 0.8284242749214172, 0.8280280232429504, 0.8206313848495483, 0.8261788487434387, 0.8285563588142395, 0.8363492488861084, 0.8356888294219971, 0.8376700282096863, 0.8334434032440186], "val_loss": [1.9441635268075126, 1.875452995300293, 1.7127182824271066, 1.3343502112797327, 0.9545722007751465, 0.8026731184550694, 0.748996376991272, 0.6526615108762469, 0.6734811578478131, 0.6674590281077794, 0.6048611743109567, 0.5801906415394374, 0.5791304111480713, 0.563047068459647, 0.5442086117608207, 0.5419119085584369, 0.5600530079432896, 0.5438201938356672, 0.5246599061148507, 0.5140371492930821, 0.49438536167144775, 0.4742614371435983, 0.45626613071986605, 0.45635104179382324, 0.4507162741252354, 0.4532595191683088, 0.4449273518153599, 0.4348203795296805, 0.4292888981955392, 0.42352023294993807, 0.4207159791673933, 0.41913277762276785, 0.4196965609277998, 0.41084847279957365, 0.4037623405456543, 0.3999042170388358, 0.3952423759869167, 0.3905916213989258, 0.3912755080631801, 0.39611661434173584, 0.3925782782690866, 0.38897883892059326, 0.38539487974984304, 0.37976222378867014, 0.3768793685095651, 0.3776809573173523, 0.3756509849003383, 0.37704135690416607, 0.3765905669757298, 0.3720033083643232, 0.3667244144848415, 0.3637743762561253], "val_accuracy": [0.2669999897480011, 0.3816666603088379, 0.44866666197776794, 0.5546666383743286, 0.6546666622161865, 0.6610000133514404, 0.7009999752044678, 0.7136666774749756, 0.7289999723434448, 0.7269999980926514, 0.731333315372467, 0.7353333234786987, 0.7319999933242798, 0.7440000176429749, 0.7486666440963745, 0.7576666474342346, 0.7646666765213013, 0.7663333415985107, 0.765666663646698, 0.7670000195503235, 0.7720000147819519, 0.7860000133514404, 0.7929999828338623, 0.7863333225250244, 0.7893333435058594, 0.7916666865348816, 0.7950000166893005, 0.8013333082199097, 0.8019999861717224, 0.8006666898727417, 0.8090000152587891, 0.8146666884422302, 0.8109999895095825, 0.8220000267028809, 0.8149999976158142, 0.8180000185966492, 0.8243333101272583, 0.8306666612625122, 0.8376666903495789, 0.8330000042915344, 0.8353333473205566, 0.8339999914169312, 0.8333333134651184, 0.843999981880188, 0.8450000286102295, 0.8473333120346069, 0.8519999980926514, 0.8450000286102295, 0.8453333377838135, 0.8463333249092102, 0.8500000238418579, 0.8513333201408386]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.11571428924798965, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.584892130735733, 2.354291833198113, 3.0431824011683637, 2.247697646638988, 2.102146709001516, 2.4119806206536536, 2.375948700245424, 2.3697927586075935, 2.3617202662489496, 2.35762387127562], "accuracy": [0.23523972928524017, 0.15836745500564575, 0.1162329912185669, 0.270109623670578, 0.27961960434913635, 0.12917712330818176, 0.09985470771789551, 0.09694888442754745, 0.09840179979801178, 0.10830801725387573], "val_loss": [1.9874653135027205, 6.361579758780343, 1.7492064067295618, 1.8828740801130022, 1.5306903634752547, 2.023675033024379, 2.0355161939348494, 2.0269836017063687, 2.043576240539551, 1.987971373966762], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.2696666717529297, 0.22066666185855865, 0.42633333802223206, 0.10133333504199982, 0.10100000351667404, 0.09799999743700027, 0.09866666793823242, 0.12666666507720947]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 8, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [45, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [29, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.3025150124297054, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 5, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 0, 4, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 2, 2, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.square(grad))))), tf.math.add(beta, grad))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [1, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [2, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(beta)), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025150124297054, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [5, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [1144985.1691513183, 2.3137734789086877, 2.305225815172791, 2.30343197365447, 2.303054066728434, 2.302994954697822, 2.3030544860629734, 2.3029417114613033, 2.3031284869260413], "accuracy": [0.1018359512090683, 0.09549596905708313, 0.09893012791872025, 0.09747721254825592, 0.10091137140989304, 0.09140139818191528, 0.09628847241401672, 0.09747721254825592, 0.09906221181154251], "val_loss": [1.9890039988926478, 1.977170535496303, 1.9744203431265694, 1.9737579481942313, 1.9736384664263045, 1.9736542701721191, 1.973799160548619, 1.9737160546439034, 1.9736529758998327], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 0, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 0, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad)), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), grad)), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025150124297054, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 2, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 2, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [29, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.317095140660711, 2.35944128464777, 2.430958589148984, 2.609749467255433, 16.777947983737352, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06670188903808594, 0.028926165774464607, 0.014661206863820553, 0.01109496783465147, 0.06577730923891068, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0047424861363004, 2.0530727931431363, 2.143078122820173, 2.4758069855826244, 1425.960693359375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.006666666828095913, 0.005333333276212215, 0.0063333334401249886, 0.014666666276752949, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [72, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 1, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [10, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [2.302788550717373, 2.3022280703005364, 2.3017564751074975, 2.301387014831172, 2.301265901058672, 2.301283238255636], "accuracy": [0.09100515395402908, 0.09100515395402908, 0.08994849026203156, 0.09047681838274002, 0.09206181764602661, 0.08717474341392517], "val_loss": [1.9710194723946708, 1.971057687486921, 1.9710940633501326, 1.9711341176714217, 1.9711711066109794, 1.9712091173444475], "val_accuracy": [0.03633333370089531, 0.03566666692495346, 0.03533333167433739, 0.03466666489839554, 0.03466666489839554, 0.03466666489839554]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 2, 8, 7, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [0, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [3, 1, 0, 3, 1, 1], [29, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 3, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), alpha)", "other_info": {"loss": [2.3027729735855003, 2.3021681381805523, 2.301656200775239, 2.301239920739469, 2.3010845088593443, 2.301058751465134], "accuracy": [0.09100515395402908, 0.09100515395402908, 0.09060890227556229, 0.09060890227556229, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 8, 2, 0, 3, 4, 6, 9, 6, 5, 6, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 2, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 76, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [5, 4, 0, 3], [0, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 3, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), tf.math.add(beta, beta)))))), tf.math.negative(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.3027729735855003, 2.3021681381805523, 2.301656200775239, 2.301239920739469, 2.3010845088593443, 2.301058751465134], "accuracy": [0.09100515395402908, 0.09100515395402908, 0.09060890227556229, 0.09060890227556229, 0.09259014576673508, 0.08757099509239197], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]