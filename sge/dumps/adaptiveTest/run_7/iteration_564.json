[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 0, 3, 4, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 3, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [42, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [50, 49, 44, 92]], "fitness": -0.833142876625061, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.2796173489655893, 2.0523311009795644, 2.201223409013694, 2.0246877256495965, 1.8923112018595534, 1.6944806109078099, 1.356801127524597, 1.1125684277398191, 0.8806732817805281, 0.8010447917282463, 0.7151286757113581, 0.685941880964222, 0.6572333309612947, 0.6357892441507091, 0.6086409533453687, 0.5936935083693864, 0.5748973520062525, 0.5641106065899516, 0.5393551899740929, 0.5573732371910326, 0.5262030159808295, 0.510252627304847, 0.5199046356881756, 0.48979622262611583, 0.47099108626546166, 0.47466118789037237, 0.5033085685380304, 0.46972931279261915, 0.4579949318661965], "accuracy": [0.23206974565982819, 0.2522784173488617, 0.2094835489988327, 0.28780874609947205, 0.34024566411972046, 0.44789329171180725, 0.5431250929832458, 0.6044115424156189, 0.6667547225952148, 0.6966054439544678, 0.7327961921691895, 0.7368907928466797, 0.7500990629196167, 0.7589486241340637, 0.7646281719207764, 0.7808743715286255, 0.7872143983840942, 0.7857614755630493, 0.7975168228149414, 0.7887993454933167, 0.7998943328857422, 0.802800178527832, 0.8020076751708984, 0.8162726163864136, 0.8239334225654602, 0.8251221776008606, 0.8080834746360779, 0.8247259259223938, 0.8272355198860168], "val_loss": [1.872941017150879, 1.7180703026907784, 1.282784870692662, 1.6181553772517614, 1.4272175856998988, 1.7472543035234724, 0.7787935563496181, 0.7957039049693516, 0.578528812953404, 0.5372326033455985, 0.5286534343447004, 0.5258088452475411, 0.4790096623556955, 0.5116574253354754, 0.4396247523171561, 0.483928986958095, 0.5148557083947318, 0.42622499806540354, 0.4094843864440918, 0.44204918827329365, 0.4307192989758083, 0.4293033906391689, 0.38923866408211844, 0.3648946966443743, 0.41583317518234253, 0.4164778334753854, 0.37299770968300955, 0.37615772656032015, 0.40671167203358244], "val_accuracy": [0.2280000001192093, 0.2763333320617676, 0.41499999165534973, 0.37533333897590637, 0.5019999742507935, 0.4399999976158142, 0.6693333387374878, 0.6396666765213013, 0.7296666502952576, 0.7583333253860474, 0.7553333044052124, 0.7553333044052124, 0.7789999842643738, 0.7776666879653931, 0.7986666560173035, 0.7850000262260437, 0.7486666440963745, 0.7996666431427002, 0.8256666660308838, 0.8056666851043701, 0.7956666946411133, 0.7950000166893005, 0.8299999833106995, 0.8416666388511658, 0.812333345413208, 0.8130000233650208, 0.8360000252723694, 0.8389999866485596, 0.8066666722297668]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 2, 3, 4, 2, 2, 8, 2, 2, 2, 2, 6, 8, 3, 6, 2, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 3, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [31, 98, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [50, 49, 44, 92]], "fitness": -0.8165714144706726, "mapping_values": [1, 1, 1, 0, 1, 0, 39, 39, 22, 17, 5, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(grad), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(grad))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.279616458304822, 2.0725770640634607, 2.260726012321999, 2.3044918350272128, 2.302900673265801, 2.300380935852853, 2.278319755360718, 2.046674842674498, 2.3234522947939458, 2.2957599014102854, 2.0262745331464553, 1.6790184370357568, 1.3393559972639364, 1.1838267455877582, 0.9512438169402406, 0.8546965531291365, 0.7871960357290139, 0.7890340539726047, 0.710714778076971, 0.6940454212571525, 0.6396131827579025, 0.6572366799928445, 0.6737074680757277, 0.609351376327683, 0.6186521987967945, 0.5800140138079288, 0.5878463985267773, 0.5643908979870372, 0.5460893367464517, 0.5635116606293384, 0.5377961801752014, 0.5316843487142241], "accuracy": [0.23206974565982819, 0.25241050124168396, 0.1912561058998108, 0.09972262382507324, 0.10196803510189056, 0.11702549457550049, 0.18544445931911469, 0.3237352967262268, 0.1838594675064087, 0.12798838317394257, 0.30524370074272156, 0.4481574296951294, 0.5506538152694702, 0.5674283504486084, 0.6516972780227661, 0.6818121671676636, 0.7046625018119812, 0.7058512568473816, 0.7325320243835449, 0.7345132827758789, 0.7589486241340637, 0.7510236501693726, 0.7437590956687927, 0.7700436115264893, 0.7692511081695557, 0.785101056098938, 0.7778365015983582, 0.7907806038856506, 0.7955356240272522, 0.7877426743507385, 0.7950072884559631, 0.7977809906005859], "val_loss": [1.8729267801557268, 1.7404253823416573, 1.9754083497183663, 1.9738157136099679, 1.9726172174726213, 1.9688570840018136, 1.8177071980067663, 1.8328248432704382, 1.9742110116141183, 1.9317916461399622, 1.5578856808798653, 1.300079039164952, 0.989743743624006, 0.703092132295881, 0.6844426052910941, 0.6403054509844098, 0.714823876108442, 0.5812796694891793, 0.508480429649353, 0.49697831698826384, 0.5378171716417585, 0.5364911385944912, 0.502625857080732, 0.4393839580672128, 0.45001471042633057, 0.43776513848985943, 0.4138120583125523, 0.44055674757276264, 0.4488550765173776, 0.4071304372378758, 0.45096181120191303, 0.4138502138001578], "val_accuracy": [0.23000000417232513, 0.2916666567325592, 0.1003333330154419, 0.1003333330154419, 0.10233332961797714, 0.156333327293396, 0.3683333396911621, 0.18733333051204681, 0.10566666722297668, 0.25333333015441895, 0.4423333406448364, 0.5379999876022339, 0.6116666793823242, 0.6866666674613953, 0.6963333487510681, 0.7129999995231628, 0.6703333258628845, 0.7356666922569275, 0.7573333382606506, 0.777999997138977, 0.7676666378974915, 0.7406666874885559, 0.7576666474342346, 0.8043333292007446, 0.8090000152587891, 0.8043333292007446, 0.8293333053588867, 0.8023333549499512, 0.7913333177566528, 0.8166666626930237, 0.7816666960716248, 0.8190000057220459]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 8, 1, 3, 9, 0, 2, 3, 2, 2, 2, 2, 6, 8, 5, 6, 2, 9, 4, 2, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [54, 98, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 0, 2, 1, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7802857160568237, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 22, 15, 5, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))))))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.285466580106881, 2.2430461094820613, 2.183839178230186, 2.0926247877514736, 1.9516325162276142, 1.7648193581134826, 1.569824731329476, 1.4056547788691292, 1.2877504898178862, 1.1876867721109436, 1.1231562686618357, 1.0620436112579337, 1.02135670733033, 0.9883522745199711, 0.9399694296362976, 0.9247825081401009, 0.9036833011179772, 0.8876333389740736, 0.8687215205889651, 0.8496513630436585, 0.8278285801024909, 0.8194701697344258, 0.8146432510393485, 0.8044291591804892, 0.7822866278270358, 0.7801227912832293, 0.7710567782378988, 0.7582943588200026, 0.7526333413072439, 0.7546942820953356, 0.7367514195049821, 0.7341256714012047, 0.7225468574954597, 0.7215473033008543, 0.7060082906729447, 0.6986657306502728, 0.7067066262725983, 0.6993459161907817, 0.6865716779457186, 0.6888825152969285, 0.6824255792172893, 0.6774933634495864, 0.6741846099883622, 0.6709298200264677, 0.664154356040219, 0.6593720046378965, 0.6582909983068236, 0.6558925492683847, 0.6547654788444669, 0.6446562980963113, 0.6456544888946972, 0.6384603744878304, 0.6353469198217103, 0.6353183247551485, 0.6365808417233084, 0.6253883851328703, 0.6291144756341198, 0.6194765401821819], "accuracy": [0.13657376170158386, 0.23273015022277832, 0.32320696115493774, 0.3909655213356018, 0.4283449947834015, 0.47166821360588074, 0.5021793842315674, 0.5387663245201111, 0.5630695819854736, 0.594241201877594, 0.6086382269859314, 0.6318848133087158, 0.6436402201652527, 0.6577730774879456, 0.6660943031311035, 0.6778497099876404, 0.6828688383102417, 0.6869634389877319, 0.6900013089179993, 0.6970016956329346, 0.7034738063812256, 0.7067758440971375, 0.7119271159172058, 0.7127195596694946, 0.7169462442398071, 0.7173424959182739, 0.722757875919342, 0.7190595865249634, 0.7276449799537659, 0.7276449799537659, 0.728701651096344, 0.7341170310974121, 0.737947404384613, 0.7363624572753906, 0.7427024245262146, 0.7442874312400818, 0.7364945411682129, 0.750231146812439, 0.7512878179550171, 0.7495707273483276, 0.750759482383728, 0.748778223991394, 0.7547219395637512, 0.7594769597053528, 0.7572315335273743, 0.7625148296356201, 0.7577598690986633, 0.7582882046699524, 0.7589486241340637, 0.7684586048126221, 0.7663452625274658, 0.7693831920623779, 0.7680623531341553, 0.7714964747428894, 0.7655527591705322, 0.7703077793121338, 0.7738739848136902, 0.7737419009208679], "val_loss": [1.9334517887660436, 1.887779644557408, 1.8172471182686942, 1.7053825174059187, 1.54278336252485, 1.3447139603751046, 1.1575097356523787, 1.0137484414236886, 0.915588344846453, 0.8427273375647408, 0.7913034813744682, 0.7518259286880493, 0.7220029490334647, 0.6982572759900775, 0.6728487185069493, 0.6590967518942696, 0.6451314176831927, 0.6322309970855713, 0.6229419708251953, 0.6080139364515033, 0.60538649559021, 0.5921689782823835, 0.5861380781446185, 0.5755196809768677, 0.5720373732703072, 0.5630101476396833, 0.5618149553026471, 0.5542047023773193, 0.5482919386454991, 0.5429470368794033, 0.5387243032455444, 0.5360434225627354, 0.5299599851880755, 0.527550220489502, 0.5203044584819249, 0.5217725208827427, 0.5178494453430176, 0.517123648098537, 0.5145842858723232, 0.5063129493168422, 0.5028667279652187, 0.5008566379547119, 0.4992304188864572, 0.49537088189806255, 0.4942011833190918, 0.48821147850581575, 0.4861467054912022, 0.48353803157806396, 0.4877852201461792, 0.4792039224079677, 0.47787741252354216, 0.47519620827266146, 0.4731725624629429, 0.47584567751203266, 0.4737266642706735, 0.4702517475400652, 0.4683619226728167, 0.46737091881888254], "val_accuracy": [0.32199999690055847, 0.4086666703224182, 0.4580000042915344, 0.5099999904632568, 0.5526666641235352, 0.5809999704360962, 0.6086666584014893, 0.656333327293396, 0.6673333048820496, 0.687666654586792, 0.6949999928474426, 0.6956666707992554, 0.7089999914169312, 0.7143333554267883, 0.7210000157356262, 0.7246666550636292, 0.7276666760444641, 0.737333357334137, 0.734000027179718, 0.7396666407585144, 0.7353333234786987, 0.7476666569709778, 0.7490000128746033, 0.753000020980835, 0.7553333044052124, 0.7546666860580444, 0.7613333463668823, 0.7613333463668823, 0.762333333492279, 0.7586666941642761, 0.7639999985694885, 0.7683333158493042, 0.7739999890327454, 0.7663333415985107, 0.7730000019073486, 0.7630000114440918, 0.7666666507720947, 0.7760000228881836, 0.7663333415985107, 0.7796666622161865, 0.7776666879653931, 0.7793333530426025, 0.7766666412353516, 0.7786666750907898, 0.7823333144187927, 0.7900000214576721, 0.7943333387374878, 0.7839999794960022, 0.7796666622161865, 0.7896666526794434, 0.7976666688919067, 0.7963333129882812, 0.7996666431427002, 0.7863333225250244, 0.7870000004768372, 0.7913333177566528, 0.7993333339691162, 0.7889999747276306]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [4, 3, 2, 3, 5, 2, 1, 5, 2, 9, 2, 2, 2, 8, 0, 6, 2, 9, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [45, 85, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [8, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [21, 49, 44, 92]], "fitness": -0.7277143001556396, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.2991590942326883, 2.2925590779787326, 2.2856152377911467, 2.279465174678137, 2.27307283574438, 2.2651749761931854, 2.259676745003713, 2.2519512871835587, 2.24472698871218, 2.2352321622803415, 2.2281339114698926, 2.2166330214457473, 2.208584444634021, 2.196687050247394, 2.1821635362100857, 2.1715751975329955, 2.1572318608970877, 2.1440165257331105, 2.129064488703816, 2.109638736421532, 2.0895649415626973, 2.068774314242237, 2.049625658324492, 2.0284675815558595, 2.002212615281426, 1.9751768865920392, 1.9436109581045298, 1.9155649925345806, 1.8830829826186692, 1.85402228557958, 1.8212238221734727, 1.788448344903804, 1.753255223821671, 1.724966241636013, 1.68644440303216, 1.6540197457273356, 1.6229305187189316, 1.5910684613346378, 1.5547486446505572, 1.5324601878138613, 1.496416168457891, 1.466619492175478, 1.4460101582827334, 1.4220213843626417, 1.3937709272624228, 1.3703801138620524, 1.349607123596132, 1.3290127149079816, 1.3087021087249193, 1.2899084281077426, 1.2771422271762527, 1.2562133881709108, 1.2357684607519024, 1.232484400154278, 1.21912060473904, 1.2059566946927787, 1.1871859878990487, 1.1773226650210578, 1.1617476074939013, 1.1539507251704735, 1.1377446113434513, 1.1221243177879252, 1.1097051193213119, 1.1131889898668994, 1.0948463360615506, 1.08726807718248, 1.0767261700906678, 1.0687352488337254, 1.0498658425740877, 1.0655667567218472, 1.0495648473371304, 1.0462239825289406, 1.0354926025768265, 1.02218754514176, 1.0166720179140984, 1.0184690302090007, 1.0072536253658315, 1.0012345727660543, 0.9848322265293966, 0.9882669476879554, 0.9757482998989293, 0.9821092024408138, 0.9646355598641424, 0.9526399003122586, 0.9603291826713606, 0.9518354895202759, 0.9470286243044705, 0.960216907100151, 0.9486407042966779, 0.9449881171317321, 0.9196474023735077, 0.9240610458280558, 0.9233640181138105, 0.9188771053485394, 0.9174134650203325, 0.9187395292785835, 0.9017287528651848, 0.9046397455742236, 0.894927936427865, 0.9033663083754038], "accuracy": [0.09985470771789551, 0.11306300014257431, 0.13340377807617188, 0.15612204372882843, 0.17078325152397156, 0.1916523575782776, 0.20499274134635925, 0.21780477464199066, 0.23933430016040802, 0.25439175963401794, 0.26799631118774414, 0.2849029302597046, 0.2919033169746399, 0.3089420199394226, 0.32584863901138306, 0.33641526103019714, 0.34724608063697815, 0.3579447865486145, 0.3593977093696594, 0.3739268183708191, 0.3863426148891449, 0.38885220885276794, 0.40245673060417175, 0.40443798899650574, 0.41328755021095276, 0.41830670833587646, 0.43547746539115906, 0.43230748176574707, 0.4523840844631195, 0.448949933052063, 0.4567428231239319, 0.4679698944091797, 0.4691586196422577, 0.4756307005882263, 0.4830273389816284, 0.4934619069099426, 0.49689605832099915, 0.5054814219474792, 0.5105006098747253, 0.5114251971244812, 0.521067202091217, 0.5255580544471741, 0.5329546928405762, 0.5369172096252441, 0.5435213446617126, 0.5534275770187378, 0.5528992414474487, 0.5601637959480286, 0.5622771382331848, 0.563730001449585, 0.5727116465568542, 0.5713908076286316, 0.5838066339492798, 0.5756174921989441, 0.5781270861625671, 0.5826178789138794, 0.5921278595924377, 0.594241201877594, 0.5974111557006836, 0.5989961624145508, 0.6123365759849548, 0.6112799048423767, 0.6203936338424683, 0.6100911498069763, 0.6180161237716675, 0.6234315037727356, 0.6259410977363586, 0.6252806782722473, 0.6384889483451843, 0.6297714710235596, 0.6332056522369385, 0.6366398334503174, 0.6395456194877625, 0.6382247805595398, 0.6465460062026978, 0.6449610590934753, 0.6478668451309204, 0.6524897813796997, 0.6597543358802795, 0.656980574131012, 0.6584334969520569, 0.6491876840591431, 0.665830135345459, 0.6687359809875488, 0.6621318459510803, 0.6674151420593262, 0.6674151420593262, 0.658961832523346, 0.6679434776306152, 0.6667547225952148, 0.6700568199157715, 0.6724342703819275, 0.6749438643455505, 0.6728305220603943, 0.6749438643455505, 0.6794346570968628, 0.6814159154891968, 0.6760005354881287, 0.6903975605964661, 0.6816800832748413], "val_loss": [1.9647556032453264, 1.9586354664393835, 1.9525432586669922, 1.946432318006243, 1.9401660646711076, 1.933662278311593, 1.926952838897705, 1.919942992074149, 1.9125428199768066, 1.9045872007097517, 1.8960443905421667, 1.886861801147461, 1.8770194053649902, 1.8663462911333357, 1.8546650750296456, 1.8420443534851074, 1.8285102163042342, 1.8139662061418806, 1.798238822392055, 1.7811580385480608, 1.7626784188406808, 1.7426586151123047, 1.7214815276009696, 1.6989546162741525, 1.674750907080514, 1.6490001337868827, 1.6215599945613317, 1.5927156380244665, 1.5625063691820418, 1.5314440727233887, 1.4992620263780867, 1.4663550513131278, 1.4329378945486886, 1.3996471336909704, 1.3658269814082555, 1.332038300377982, 1.2990666457584925, 1.2667717933654785, 1.2352755410330636, 1.2051748548235213, 1.1760449409484863, 1.1481560979570662, 1.1219969136374337, 1.097102199281965, 1.0729270662580217, 1.050187281199864, 1.0290334224700928, 1.0092235973903112, 0.9901946612766811, 0.9721746785300118, 0.9554194041660854, 0.9394028527396066, 0.9243228776114327, 0.9103294100080218, 0.8973272868565151, 0.88487366267613, 0.8725817203521729, 0.8613540785653251, 0.8502610581261771, 0.8399312496185303, 0.8300873041152954, 0.8211785725184849, 0.812363999230521, 0.8039929696491787, 0.7960003784724644, 0.7883173908506121, 0.7807830912726266, 0.7738210473741803, 0.7670665979385376, 0.7609646660940987, 0.7549811942236764, 0.7498020274298531, 0.7444947957992554, 0.739026631627764, 0.7339812857764108, 0.7290560688291278, 0.7239721843174526, 0.7194692577634539, 0.7144213914871216, 0.7099308286394391, 0.7059991530009678, 0.7021213259015765, 0.6981282234191895, 0.694146820477077, 0.690552932875497, 0.6866468191146851, 0.6836639983313424, 0.6809310742786953, 0.6776408127376011, 0.6744463784354073, 0.6709536995206561, 0.6678228207996914, 0.6648104531424386, 0.6622463975633893, 0.6597217321395874, 0.6572958401271275, 0.655063101223537, 0.6522418430873326, 0.6497680630002703, 0.6477180549076625], "val_accuracy": [0.08033332973718643, 0.14166666567325592, 0.195333331823349, 0.2460000067949295, 0.2849999964237213, 0.3163333237171173, 0.33933332562446594, 0.35600000619888306, 0.3683333396911621, 0.3803333342075348, 0.3916666805744171, 0.4036666750907898, 0.41333332657814026, 0.4233333468437195, 0.4336666762828827, 0.4413333237171173, 0.45233333110809326, 0.4569999873638153, 0.46433332562446594, 0.4703333377838135, 0.4793333411216736, 0.4896666705608368, 0.5019999742507935, 0.5056666731834412, 0.515999972820282, 0.5226666927337646, 0.528333306312561, 0.5360000133514404, 0.5433333516120911, 0.5496666431427002, 0.5553333163261414, 0.5606666803359985, 0.5676666498184204, 0.5753333568572998, 0.5823333263397217, 0.5956666469573975, 0.5993333458900452, 0.6066666841506958, 0.6153333187103271, 0.6230000257492065, 0.6286666393280029, 0.637666642665863, 0.6456666588783264, 0.6493333578109741, 0.6543333530426025, 0.6586666703224182, 0.6616666913032532, 0.6639999747276306, 0.6679999828338623, 0.6700000166893005, 0.6743333339691162, 0.6766666769981384, 0.6779999732971191, 0.6793333292007446, 0.6826666593551636, 0.6830000281333923, 0.6823333501815796, 0.6833333373069763, 0.684333324432373, 0.6869999766349792, 0.6896666884422302, 0.6903333067893982, 0.6913333535194397, 0.6936666369438171, 0.6943333148956299, 0.6956666707992554, 0.6963333487510681, 0.6983333230018616, 0.6966666579246521, 0.6986666917800903, 0.7009999752044678, 0.7023333311080933, 0.699999988079071, 0.703000009059906, 0.7059999704360962, 0.7059999704360962, 0.7089999914169312, 0.7103333473205566, 0.7136666774749756, 0.7139999866485596, 0.7136666774749756, 0.7136666774749756, 0.7160000205039978, 0.7149999737739563, 0.7153333425521851, 0.7166666388511658, 0.7173333168029785, 0.718999981880188, 0.718999981880188, 0.7200000286102295, 0.7210000157356262, 0.722000002861023, 0.7226666808128357, 0.7239999771118164, 0.7236666679382324, 0.7260000109672546, 0.7250000238418579, 0.7276666760444641, 0.7273333072662354, 0.7283333539962769]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [4, 8, 2, 4, 4, 3, 2, 8, 2, 6, 2, 2, 6, 8, 1, 6, 2, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 3, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 1, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [31, 98, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [93, 49, 44, 92]], "fitness": -0.417428582906723, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [3.023154402547556, 2.2533991343120716, 2.1849718275890218, 2.341556773351373, 2.304672095344492, 2.303481175206388, 2.30295512862351, 2.3030093991288796], "accuracy": [0.18016114830970764, 0.20380398631095886, 0.17421740293502808, 0.14991414546966553, 0.09377889335155487, 0.09879804402589798, 0.10210011899471283, 0.10130762308835983], "val_loss": [1.943356718335833, 1.97552524294172, 1.6470211233411516, 1.9759690420968192, 1.9741136687142509, 1.973703180040632, 1.9736413274492537, 1.9736775670732771], "val_accuracy": [0.19066666066646576, 0.10133333504199982, 0.33633333444595337, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10400000214576721, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 2, 1, 4, 2, 0, 3, 2, 2, 2, 1, 6, 8, 3, 6, 2, 0, 3, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 3, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [47, 98, 82, 85, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 2, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [50, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.subtract(beta, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 0, 3, 4, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 9, 2, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 3, 0, 3, 1, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [21, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 30, 30, 17, 13, 4, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(beta, grad))))))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [2, 2, 2, 3, 4, 2, 0, 8, 2, 2, 2, 2, 2, 8, 3, 6, 2, 9, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [31, 98, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 4, 4, 6, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 2, 1, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 0, 3, 4, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 9, 2, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 3, 0, 3, 1, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [45, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [94], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [50, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 2, 3, 4, 2, 2, 8, 2, 2, 2, 2, 9, 8, 3, 6, 2, 9, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 99, 4, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 8, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 0, 2, 1, 0, 1, 0, 3], [50, 40, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 18, 13, 4, 1, 0, 0, 0, 0, 12, 6, 6, 3], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(grad))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(alpha), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(beta, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 0, 3, 4, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 9, 2, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 0, 3, 1, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [45, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [94], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [21, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), alpha)", "other_info": {"loss": [2.3024571664329248, 2.3044229771844966, 2.305661072363833, 2.308002932826526, 2.31277069354558, 2.315115819061122, 2.3216795203015317, 2.327718536095801, 2.335867290908729, 2.3533632708042997, 2.8037170127492774, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.08942015469074249, 0.0886276587843895, 0.08757099509239197, 0.07634394615888596, 0.08347642421722412, 0.07330603897571564, 0.07700435817241669, 0.0796460211277008, 0.07700435817241669, 0.08717474341392517, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720948083060128, 1.9736542020525252, 1.975229263305664, 1.9770955358232771, 1.979802063533238, 1.9825350216456823, 1.986135755266462, 1.9910289219447546, 1.999535356249128, 2.020929677145822, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02800000086426735, 0.022333333268761635, 0.024000000208616257, 0.025333333760499954, 0.03200000151991844, 0.04066666588187218, 0.05666666850447655, 0.08233333379030228, 0.09600000083446503, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 0, 3, 4, 0, 2, 8, 2, 2, 2, 2, 6, 8, 3, 6, 2, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 0, 3, 1, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [45, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [94], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [21, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), alpha)", "other_info": {"loss": [2.3096757619104773, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.024031094142369, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 8, 1, 3, 9, 0, 2, 3, 2, 2, 2, 2, 6, 8, 5, 6, 2, 9, 4, 2, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 0, 3, 1, 3, 1, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [94], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [21, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 2, 3, 4, 2, 2, 8, 2, 2, 2, 2, 2, 8, 0, 6, 2, 9, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 3, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [31, 98, 70, 57, 87, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [50, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 21, 14, 6, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(grad, tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.sqrt(grad), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), grad))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 1, 0, 3, 9, 0, 2, 0, 2, 2, 6, 2, 6, 8, 5, 6, 9, 9, 4, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 0, 3, 1, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [31, 98, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [88, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, tf.math.negative(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 0, 3, 4, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 5, 9, 2, 8, 8, 2, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 2, 3, 3, 0, 3, 3, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [54, 98, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [94], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [35, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 19, 12, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(grad), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(grad))))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 1, 3, 9, 0, 2, 3, 2, 2, 2, 2, 6, 8, 5, 6, 2, 9, 4, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 5, 3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [94], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 0, 2, 1, 0, 1, 0, 3], [50, 40, 44, 92]], "fitness": -0.07457143068313599, "mapping_values": [1, 9, 9, 6, 3, 2, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3016880008884946, 2.3010471723398056, 2.3002776661884075, 2.300225229027753, 2.300167160893255, 2.2993304124519005, 2.300331044458458, 2.2994102887221772, 2.300094560058346, 2.2993368223878323, 2.3005983903187297, 2.298760167076414, 2.300566365422511, 2.299589658819563, 2.297700945632868, 2.2995552226237774, 2.297977507090792, 2.2993621081409046, 2.299306044221444, 2.299447109072263, 2.299491893566516, 2.2993210043180983, 2.299810354058706], "accuracy": [0.0944393053650856, 0.09338264167308807, 0.09879804402589798, 0.10038304328918457, 0.09826971590518951, 0.09747721254825592, 0.10011887550354004, 0.10130762308835983, 0.09800554811954498, 0.09668471664190292, 0.09470347315073013, 0.10276053100824356, 0.08545766770839691, 0.10355303436517715, 0.10711926966905594, 0.09576013684272766, 0.10434553027153015, 0.10249637067317963, 0.1010434553027153, 0.10130762308835983, 0.10315678268671036, 0.09734513610601425, 0.1010434553027153], "val_loss": [1.9705237661089217, 1.970108985900879, 1.9698187283107214, 1.969663347516741, 1.9694647107805525, 1.9694882120404924, 1.9694127355303084, 1.9693423679896764, 1.9693797656467982, 1.9694252695356096, 1.9694299697875977, 1.9694294929504395, 1.9694019045148576, 1.9694484301975794, 1.969447135925293, 1.9694083077566964, 1.9693997928074427, 1.96944488797869, 1.9694888932364327, 1.9695706367492676, 1.9697177069527763, 1.9698782648359026, 1.9700251306806291], "val_accuracy": [0.0403333343565464, 0.04533333331346512, 0.04699999839067459, 0.05066666752099991, 0.05433333292603493, 0.0573333315551281, 0.06266666948795319, 0.06499999761581421, 0.06666667014360428, 0.06800000369548798, 0.06966666877269745, 0.07233333587646484, 0.07400000095367432, 0.0729999989271164, 0.07433333247900009, 0.07766667008399963, 0.07866666465997696, 0.07900000363588333, 0.07833333313465118, 0.07666666805744171, 0.07500000298023224, 0.07333333045244217, 0.07066666334867477]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 5, 3, 1, 2, 2, 8, 1, 2, 2, 2, 2, 5, 3, 6, 2, 9, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 3, 1, 3, 3, 0, 0, 3, 0, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [31, 70, 70, 57, 88, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.07371428608894348, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 21, 14, 6, 3, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, alpha)))))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.301523094683622, 2.300591792286883, 2.2998424926690295, 2.2999643178553613, 2.2998984054315517, 2.299578553350799, 2.3003981928736574, 2.2992432658792943, 2.2997424403800153, 2.299205742019625, 2.3000870526600603, 2.2987020878255833, 2.3005389803200034, 2.300217624259206], "accuracy": [0.09602430462837219, 0.09430722147226334, 0.09893012791872025, 0.09919429570436478, 0.10038304328918457, 0.09708096832036972, 0.09708096832036972, 0.10500594228506088, 0.09959053993225098, 0.09615638852119446, 0.09734513610601425, 0.10566636174917221, 0.08928807079792023, 0.10236428678035736], "val_loss": [1.9702815328325545, 1.9698286737714494, 1.9696365083966936, 1.9696886880057198, 1.9697113037109375, 1.9699221338544572, 1.9698809215000697, 1.9696636199951172, 1.9695566722324915, 1.969658306666783, 1.9697699546813965, 1.9700187274387904, 1.9702576909746443, 1.9705729484558105], "val_accuracy": [0.04466666653752327, 0.05066666752099991, 0.054999999701976776, 0.061000000685453415, 0.06733333319425583, 0.0663333311676979, 0.07233333587646484, 0.07433333247900009, 0.07599999755620956, 0.07500000298023224, 0.07400000095367432, 0.07000000029802322, 0.06933332979679108, 0.06333333253860474]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 8, 1, 3, 9, 0, 2, 3, 2, 2, 2, 2, 6, 8, 5, 6, 2, 9, 4, 2, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 3, 0, 3, 1, 3, 1, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [31, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [0, 2], [33], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 2, 1, 0, 1, 0, 3], [19, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019237332513476, 2.3019976923258203, 2.301531914407551, 2.301761995768267, 2.3023557004171544, 2.3013545901563424], "accuracy": [0.09325055778026581, 0.09259014576673508, 0.0956280529499054, 0.09708096832036972, 0.08875974267721176, 0.09311848133802414], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [1, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 8, 1, 3, 9, 0, 2, 3, 2, 2, 2, 2, 6, 8, 5, 6, 2, 9, 4, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 0, 3, 1, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [47, 98, 70, 85, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [4, 8, 1, 3], [0, 2], [94], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [88, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3019237332513476, 2.3019976923258203, 2.301531914407551, 2.301761995768267, 2.3023557004171544, 2.3013545901563424], "accuracy": [0.09325055778026581, 0.09259014576673508, 0.0956280529499054, 0.09708096832036972, 0.08875974267721176, 0.09311848133802414], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]