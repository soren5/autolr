[{"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1, 0, 1], [1], [5], [3], [76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.6034285426139832, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta), alpha))", "other_info": {"loss": [2.3007024574304977, 2.283669375913522, 2.2410813636311198, 1.9042844846027875, 1.4853913164756019, 1.1089987087054511, 0.9539742020095706, 0.989741891972881, 0.9091250459515833, 0.8426861021780397, 0.8124074361437993, 0.8788334716895253, 0.7932022785183115, 0.7765989558981111, 0.876043344879226, 0.7721143037478339, 0.7195257617261793, 0.7268158216061389, 0.7101219346053753, 0.6788108306491002, 0.6668592731651298, 0.6439126766101165, 16.061848408415994, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.1422533392906189, 0.19482234120368958, 0.3447364866733551, 0.5160480737686157, 0.5918636918067932, 0.6432439684867859, 0.631488561630249, 0.6637167930603027, 0.6870955228805542, 0.69673752784729, 0.6745476126670837, 0.713908314704895, 0.7061154246330261, 0.6861709356307983, 0.7140403985977173, 0.722757875919342, 0.7194558382034302, 0.7323999404907227, 0.7424382567405701, 0.7437590956687927, 0.7586844563484192, 0.6561880707740784, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9629461424691337, 1.9401371819632394, 1.819803033556257, 0.961933067866734, 0.7766095910753522, 0.6398567472185407, 0.6569281135286603, 0.6335940020424979, 0.5756689650671822, 0.5545177800314767, 0.6022495882851737, 0.5655651944024223, 0.5497984204973493, 0.648019518171038, 0.5153967312404087, 0.504881637437003, 0.5147210700171334, 0.5057415621621268, 0.46528373445783344, 0.4797663688659668, 0.4497185945510864, 0.4448921595300947, 15934438253.714285, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.24199999868869781, 0.414000004529953, 0.5886666774749756, 0.6886666417121887, 0.7049999833106995, 0.7089999914169312, 0.7210000157356262, 0.7413333058357239, 0.7300000190734863, 0.7419999837875366, 0.7519999742507935, 0.7473333477973938, 0.7393333315849304, 0.7556666731834412, 0.7636666893959045, 0.7676666378974915, 0.7753333449363708, 0.7943333387374878, 0.781000018119812, 0.796999990940094, 0.79666668176651, 0.10400000214576721, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1, 0, 1], [1], [5], [3], [76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5], [0, 0, 2, 3, 1], [57, 9, 50]], "fitness": -0.23228570818901062, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), beta), sigma), alpha))", "other_info": {"loss": [3.478425842155917, 6.9619502749157745, 2.369307075084051, 2.3508678900016187, 2.368868680095408, 2.348794997124199], "accuracy": [0.21555937826633453, 0.17117950320243835, 0.11042134463787079, 0.10711926966905594, 0.09866596013307571, 0.1022322028875351], "val_loss": [1.9871826171875, 1.9903815814426966, 2.0223797389439175, 2.0044103349958147, 2.0107705933707103, 2.100469248635428], "val_accuracy": [0.12966667115688324, 0.11100000143051147, 0.12333333492279053, 0.10700000077486038, 0.10000000149011612, 0.11166666448116302]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2, 0], [], [1, 1, 1, 1, 0], [1], [], [0], [11], [0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1], [2, 9], [3], [76], [0, 1, 1, 1, 1, 1, 0, 1], [3, 5, 2, 3], [1, 0, 1, 2, 1], [92, 9, 50]], "fitness": -0.14085714519023895, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4815776910543788, 6.485598378098951, NaN, NaN, NaN, NaN], "accuracy": [0.21780477464199066, 0.14317791163921356, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.6051913670131137, 29.229998997279576, NaN, NaN, NaN, NaN], "val_accuracy": [0.19466666877269745, 0.11433333158493042, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 6, 4, 2, 0, 6, 9], [2, 0, 2, 2, 2], [84, 13], [1, 1, 1, 1, 0], [1], [], [0], [11], [1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1], [2, 1, 3], [3], [76], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 5, 2, 9, 7, 5, 5], [0, 1, 2, 2], [92, 9, 50]], "fitness": -0.10914285480976105, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))", "other_info": {"loss": [2.301151842536266, 2.2995361872730853, 2.3005949335799887, 2.3013885258966984, 2.301088019479236, 2.30097993159291, 2.30227175959979], "accuracy": [0.09932637959718704, 0.1072513535618782, 0.1080438494682312, 0.10579843819141388, 0.10659094154834747, 0.10738343745470047, 0.09998679161071777], "val_loss": [1.9693242481776647, 1.9690519741603307, 1.971778188432966, 1.971257209777832, 1.9708828244890486, 1.9708828244890486, 1.9708828244890486], "val_accuracy": [0.08666666597127914, 0.10166666656732559, 0.07666666805744171, 0.07800000160932541, 0.07433333247900009, 0.07433333247900009, 0.07433333247900009]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2, 0], [], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 4, 1, 6, 2, 8, 1, 2, 7, 9, 0], [0, 5, 0, 0, 1, 4, 4, 1], [11, 43, 85, 3], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1], [2, 1, 3, 1, 3], [3, 7, 5], [76], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 1, 9, 7, 5, 5], [0, 1, 2, 2], [92, 9, 50]], "fitness": -0.10028571635484695, "mapping_values": [1, 2, 2, 1, 1, 0, 19, 19, 11, 8, 4, 11, 8, 5, 3, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, sigma))))), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5975397228328636, 5.91489947942805, 2.3808226146718154, 2.405978764588287, 2.425661886404408, 2.405228090985356], "accuracy": [0.1814819723367691, 0.11478008329868317, 0.10711926966905594, 0.10170386731624603, 0.09985470771789551, 0.10236428678035736], "val_loss": [1.9557977403913225, 2.0884037699018205, 2.0914666993277415, 2.0467987060546875, 2.0141095433916365, 2.0806354795183455], "val_accuracy": [0.12999999523162842, 0.09866666793823242, 0.09966666996479034, 0.09799999743700027, 0.10133333504199982, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0], [0, 0, 1, 0], [8, 4, 9], [0], [93, 99], [1, 1, 1, 1], [1], [], [1], [11], [0, 1, 0], [0, 1], [2], [7], [76], [1, 1, 1, 1, 1, 1, 0, 1], [9, 5, 2, 3, 6, 7, 2, 5], [1, 0, 1, 2, 1], [4, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [238675512.90683, 4716233844.047022, 23468987976.427948, 66994736315.05482, 145860205407.18427, 272850143055.90067], "accuracy": [0.10236428678035736, 0.10170386731624603, 0.1006472036242485, 0.10355303436517715, 0.10117553919553757, 0.09721305221319199], "val_loss": [806336201.1428572, 7725884269.714286, 27483422134.857143, 66707629202.28571, 132092812141.71428, 230337553554.2857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [0, 1, 1, 1], [1], [], [2], [11], [0, 0], [0, 1], [5], [3], [76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 5, 2, 3, 6, 7, 2, 5], [1, 0, 2, 2, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 10, 5, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [424.09965948176153, 5678.029635595529, 23133.774719633304, 57399.03731033714, 114658.11500503567, 207701.02749389116, 358001.820767567, 552029.8735801083], "accuracy": [0.1006472036242485, 0.09272222965955734, 0.09642054885625839, 0.10276053100824356, 0.10210011899471283, 0.10302469879388809, 0.10051512718200684, 0.10210011899471283], "val_loss": [1931.77490234375, 11913.127511160714, 34091.963169642855, 66148.30580357143, 145842.2142857143, 246159.1875, 405639.34821428574, 556008.8392857143], "val_accuracy": [0.09866666793823242, 0.1003333330154419, 0.10400000214576721, 0.09866666793823242, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [0], [2], [3], [76], [0, 0, 1, 1, 1, 1, 0, 1], [0, 5, 2, 3], [1, 0, 1, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3104454505523875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0226074627467563, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [3], [], [1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [0], [2], [3], [76], [0, 0, 1, 1, 0, 0, 1, 1], [3, 5, 2, 3], [1, 1, 2, 2], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), alpha)", "other_info": {"loss": [162.63437825511429, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10408136248588562, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4571455066697.143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [8], [0, 2], [57], [0, 1, 1, 0, 0, 1, 0, 0], [1], [], [2], [11], [0, 1, 1], [0], [4], [6], [76], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 5, 0, 3, 6, 7, 2, 5], [1, 0, 2, 2, 0], [4, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(alpha), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2, 0], [], [1, 1, 1, 1, 0], [1], [], [0], [11], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1], [2, 1, 3, 6], [3, 3], [76], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 5, 2, 9, 7, 5, 5], [1, 3, 2, 2], [92, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 9, 6, 4, 2, 0, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06934354454278946, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 0, 1, 1], [0, 4], [3, 1], [], [1, 1, 1, 1], [1], [], [2], [11], [0, 1, 0], [0, 1], [2], [6], [76], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 5, 2, 3, 6, 7, 2, 5], [1, 1, 2, 2, 3, 2, 2], [4, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(alpha), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1298375427722931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [0], [78], [0, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [1], [2], [3], [76], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5], [1, 0, 2, 2, 1], [87, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301928019652734, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [7], [3, 3], [], [1, 1, 1, 1], [1], [], [4], [11], [0, 0, 1], [0, 0], [7, 9], [3], [76], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [3, 7, 2, 3, 5, 7, 8, 4, 9], [1, 1, 2, 2, 1, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 15, 9, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(alpha, beta), tf.math.square(tf.math.add(beta, tf.math.sqrt(alpha))))), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [3], [], [1, 1, 1, 1], [0, 1, 1], [7], [2, 4], [11], [0, 0, 1], [0, 1], [2], [3], [76], [0, 0, 1, 1, 0, 0, 1, 1], [3, 5, 2, 3], [1, 1, 2, 2], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), alpha)", "other_info": {"loss": [2.3035672201913155, 2.342957158429417, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.05877691134810448, 0.08189142495393753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.981651442391532, 2.0686536516462053, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.013333333656191826, 0.04933333396911621, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 7, 4, 3, 5, 3, 9], [3, 1, 1, 1], [7], [1, 1, 1, 1], [1], [], [2], [11], [0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1], [2, 1, 7], [3], [76], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 6, 3, 8], [1, 1, 2, 2, 2, 2], [92, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 13, 7, 6, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), alpha), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), beta), beta), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [3], [], [1, 1, 1, 1, 0], [1], [], [2, 2, 2], [11], [1, 0, 1], [0, 0, 0, 1], [5], [3], [76], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 5, 2, 9, 7, 5, 5], [1, 1, 2, 2], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(alpha))", "other_info": {"loss": [2.302069594626728, 2.302539270221124, 2.3028363661601667, 2.302222141453052, 2.3025182269709443, 2.3028950921422564], "accuracy": [0.09708096832036972, 0.08942015469074249, 0.08928807079792023, 0.09351472556591034, 0.08770307898521423, 0.09126931428909302], "val_loss": [1.9710586411612374, 1.9711411339896066, 1.97122437613351, 1.9713102068219865, 1.9713924271719796, 1.9714645658220564], "val_accuracy": [0.03566666692495346, 0.03466666489839554, 0.03433333337306976, 0.033666666597127914, 0.033666666597127914, 0.033666666597127914]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 6, 7, 1, 3, 3, 5, 9], [0, 2, 0, 3, 1, 0], [37, 71, 9, 70], [0, 1, 1, 1], [1], [], [2, 2, 2], [11], [0], [1], [5], [3], [76], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [6, 5, 2, 3, 6, 7, 2, 5, 8, 7, 5, 2, 0, 1, 6, 8], [1, 1, 2, 2, 3, 2, 2, 0, 2, 3, 2], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 15, 15, 9, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 27, 16, 11, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.multiply(alpha, beta))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(sigma, tf.math.square(tf.math.sqrt(beta)))), tf.math.add(tf.math.square(beta), tf.math.add(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta), sigma)), beta))))", "other_info": {"loss": [2.302032789770229, 2.3024130035085983, 2.302623124595615, 2.3019082594730316, 2.302115490691316, 2.302436416175277], "accuracy": [0.09708096832036972, 0.08968432247638702, 0.08994849026203156, 0.09351472556591034, 0.08955223858356476, 0.09113723784685135], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [3], [], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [1], [2], [3], [76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5], [3, 0, 1, 2, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(sigma), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), beta), alpha))", "other_info": {"loss": [2.302032789770229, 2.3024130035085983, 2.302623124595615, 2.3019082594730316, 2.302115490691316, 2.302436416175277], "accuracy": [0.09708096832036972, 0.08968432247638702, 0.08994849026203156, 0.09351472556591034, 0.08955223858356476, 0.09113723784685135], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [3], [], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [0], [5], [3], [76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta), alpha))", "other_info": {"loss": [2.302069594626728, 2.302539301712153, 2.3028363661601667, 2.302222172944081, 2.3025182269709443, 2.302895029160199], "accuracy": [0.09708096832036972, 0.08942015469074249, 0.08928807079792023, 0.09351472556591034, 0.08770307898521423, 0.09126931428909302], "val_loss": [1.9710586411612374, 1.9711410658700126, 1.97122437613351, 1.9713102068219865, 1.9713924271719796, 1.9714645658220564], "val_accuracy": [0.03566666692495346, 0.03466666489839554, 0.03433333337306976, 0.033666666597127914, 0.033666666597127914, 0.033666666597127914]}}]