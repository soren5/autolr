[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 3, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7991428375244141, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.284549111120768, 2.2419681093082167, 2.18255840058277, 2.0917695059264263, 1.9488115401520563, 1.7662925158887255, 1.5758843336280437, 1.4051825371180322, 1.278616927759979, 1.1908319604048845, 1.1158175691873673, 1.0598590356357944, 1.0155313279508773, 0.9935861201948257, 0.953016463476732, 0.931257512441574, 0.9041381399975698, 0.8729813547575903, 0.8692327917464547, 0.8501353846596469, 0.8437031978519128, 0.8280393881426826, 0.8161008529312905, 0.7917739406883473, 0.7853891784961213, 0.7759955738749974, 0.7694842537412113, 0.758357924256799, 0.7579217374112234, 0.7421362497440939, 0.7284370978053976, 0.735310312566693, 0.7359902063585654, 0.7167984844356275, 0.7205384941369378, 0.7004526424811044, 0.7042843112147574, 0.6874660446564786, 0.6897726239324828, 0.6883328450338605, 0.687070681324189, 0.6759996862695548, 0.6727733301716458, 0.6712641475333231, 0.6706317116036123, 0.6701013783123105, 0.6573361677894219, 0.6643139096755614, 0.6595939858210731, 0.6414331245290101, 0.6471097615133298, 0.6472281586886114, 0.6405378864299919, 0.6418493849065058, 0.6330848264735153, 0.6370438230650189, 0.6354603176229682, 0.6299705621100624, 0.6213407503331988, 0.6201489910221591, 0.6206681530993015, 0.6214498259592617, 0.609201913276101, 0.6172304334515798, 0.6083620425700953, 0.6066484501128498, 0.5975102433250123, 0.5929277207101609, 0.6009436391993693, 0.5940123273475751, 0.6030909887803717, 0.5926881381281615, 0.5937799575495415, 0.595110156217728, 0.5905776571021372, 0.5934967964694736, 0.5910969294293713, 0.5820958503579672, 0.5782619641756479, 0.5884525149789044, 0.5825869530152021, 0.571224223424289, 0.5905315588257805], "accuracy": [0.1356491893529892, 0.23959846794605255, 0.3210936486721039, 0.3829084634780884, 0.4271562397480011, 0.4632149040699005, 0.4987452030181885, 0.5399550795555115, 0.5713908076286316, 0.5909391045570374, 0.6156386137008667, 0.6341302394866943, 0.6460176706314087, 0.6476026773452759, 0.6675472259521484, 0.6664905548095703, 0.681547999382019, 0.6873596906661987, 0.6923788189888, 0.6970016956329346, 0.6975300312042236, 0.7078325152397156, 0.7066437602043152, 0.7191916704177856, 0.718399167060852, 0.713379979133606, 0.7275128960609436, 0.7253995537757874, 0.7293620109558105, 0.7320036888122559, 0.7306828498840332, 0.7310791015625, 0.7316074371337891, 0.7374191284179688, 0.7392682433128357, 0.7471932172775269, 0.7445515990257263, 0.7541936039924622, 0.748778223991394, 0.7425703406333923, 0.7497028112411499, 0.7541936039924622, 0.7490423917770386, 0.7518161535263062, 0.7479857206344604, 0.752740740776062, 0.7597411274909973, 0.7561748623847961, 0.761590301990509, 0.767401933670044, 0.7606657147407532, 0.7647602558135986, 0.7646281719207764, 0.7711002230644226, 0.7687227725982666, 0.7643640041351318, 0.7681944370269775, 0.7676661014556885, 0.7707040309906006, 0.7746664881706238, 0.770439863204956, 0.7680623531341553, 0.7784969210624695, 0.7744023203849792, 0.7716285586357117, 0.778232753276825, 0.7814027070999146, 0.7829877138137817, 0.7804781198501587, 0.7808743715286255, 0.7777044177055359, 0.7832518815994263, 0.7821952104568481, 0.7841764688491821, 0.7783648371696472, 0.783119797706604, 0.7878747582435608, 0.7877426743507385, 0.7882710099220276, 0.7835160493850708, 0.7841764688491821, 0.7884030938148499, 0.7847048044204712], "val_loss": [1.9334697042192732, 1.8873085294451033, 1.8165826797485352, 1.7043540818350655, 1.5394776208060128, 1.3423374380384172, 1.1590377262660436, 1.0158339909144811, 0.9148237364632743, 0.8428484371730259, 0.7896830695016044, 0.7533973114831107, 0.7199532474790301, 0.6944646665028164, 0.6752651078360421, 0.6616971833365304, 0.6467133419854301, 0.6327456406184605, 0.6195730992725917, 0.612173352922712, 0.6056498118809291, 0.5939673185348511, 0.5856790372303554, 0.5788181168692452, 0.5751991612570626, 0.5670077460152763, 0.558758122580392, 0.5529843739100865, 0.5520697661808559, 0.5437348059245518, 0.538392458643232, 0.5353687490735736, 0.5322935070310321, 0.5252653190067836, 0.5245923314775739, 0.5210056475230626, 0.5168000119073051, 0.5138669354575021, 0.5073528970990863, 0.5055860962186541, 0.502859354019165, 0.5033690759113857, 0.4956544978278024, 0.49454425062452045, 0.49193077428000315, 0.49303150177001953, 0.4881777933665684, 0.4859893832887922, 0.4852692059108189, 0.48285530294690815, 0.4804098606109619, 0.4779160363333566, 0.4821131910596575, 0.47821824891226633, 0.47135785647800993, 0.471121038709368, 0.467969502721514, 0.46951591968536377, 0.467053975377764, 0.4647269419261387, 0.4657151869365147, 0.4613933392933437, 0.4635393108640398, 0.45713170937129427, 0.4582644360406058, 0.45585925238473074, 0.45683557646615164, 0.45266079902648926, 0.4558737107685634, 0.45096077237810406, 0.4464218701635088, 0.4503837994166783, 0.4456002541950771, 0.44376279626573834, 0.4466332026890346, 0.44846168586186, 0.4432328598839896, 0.44112223386764526, 0.4401466505868094, 0.43868077652794973, 0.4402589883123125, 0.43890078578676495, 0.4366340296609061], "val_accuracy": [0.3076666593551636, 0.3943333327770233, 0.4583333432674408, 0.5026666522026062, 0.5450000166893005, 0.5923333168029785, 0.6073333621025085, 0.6536666750907898, 0.6743333339691162, 0.6863333582878113, 0.6956666707992554, 0.699999988079071, 0.7036666870117188, 0.718999981880188, 0.7229999899864197, 0.7229999899864197, 0.7279999852180481, 0.7386666536331177, 0.7423333525657654, 0.737666666507721, 0.7413333058357239, 0.7459999918937683, 0.7536666393280029, 0.7486666440963745, 0.7580000162124634, 0.7583333253860474, 0.7590000033378601, 0.7559999823570251, 0.7609999775886536, 0.7609999775886536, 0.7646666765213013, 0.7609999775886536, 0.7713333368301392, 0.7760000228881836, 0.7743333578109741, 0.7733333110809326, 0.7770000100135803, 0.7760000228881836, 0.7789999842643738, 0.7746666669845581, 0.781333327293396, 0.7770000100135803, 0.7806666493415833, 0.7789999842643738, 0.7823333144187927, 0.7803333401679993, 0.777999997138977, 0.7829999923706055, 0.7803333401679993, 0.7826666831970215, 0.7896666526794434, 0.7883333563804626, 0.7823333144187927, 0.7803333401679993, 0.7993333339691162, 0.7900000214576721, 0.79666668176651, 0.7906666398048401, 0.7973333597183228, 0.800000011920929, 0.7903333306312561, 0.8006666898727417, 0.8016666769981384, 0.8019999861717224, 0.8016666769981384, 0.8016666769981384, 0.7996666431427002, 0.8033333420753479, 0.7940000295639038, 0.7979999780654907, 0.8073333501815796, 0.8036666512489319, 0.8029999732971191, 0.8130000233650208, 0.8036666512489319, 0.7979999780654907, 0.8100000023841858, 0.8166666626930237, 0.8066666722297668, 0.8140000104904175, 0.8050000071525574, 0.8109999895095825, 0.8140000104904175]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 1, 3, 2, 2, 8, 3, 5, 0, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 1, 1, 2, 2, 1, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 0, 1, 0, 1, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 33, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7985714077949524, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2845491426117968, 2.2419676549241623, 2.182556295344512, 2.091778506944208, 1.9488216497800164, 1.7663239061304954, 1.5758977145125852, 1.4051834576952773, 1.2786216311813141, 1.1908400456792942, 1.1157967541999096, 1.0598720700560371, 1.0155341285976516, 0.9935784465002897, 0.9530708323915669, 0.9312722358044191, 0.904103434836907, 0.8730117221077625, 0.8692095217105184, 0.8501222347066922, 0.8436583718524837, 0.8280786149033529, 0.8162451002103714, 0.7919356945467632, 0.7853067102228819, 0.775991995714722, 0.769429061989412, 0.7583372509081161, 0.7578582431362794, 0.7420591381578366, 0.7284527638521902, 0.7351241425957111, 0.7360852030620694, 0.7166940610737235, 0.7205688455762675, 0.7004372438088919, 0.7043373397769331, 0.6874254515315595, 0.6898313617158355, 0.6883340905827774, 0.6870692743207675, 0.6760386376726691, 0.6727269081990039, 0.6714451786250234, 0.6706342337909643, 0.6700386149205269, 0.6575625817993959, 0.6643870692321763, 0.6596926674630585, 0.6413093190844411, 0.6470416132737113, 0.6472162729115172, 0.6404684162835844, 0.6417350653392165, 0.6331098414352305, 0.6370525921198827, 0.6354999966105576, 0.6299825169233645, 0.6214999822640637, 0.6201619952031414, 0.6206076325143349, 0.6213156347891374, 0.6092447587023826, 0.616899853983355, 0.6085588099572007, 0.6068025981713878, 0.5974289609724268, 0.5929988683600546, 0.6009279756088771, 0.5942642299915742, 0.6032807270943008, 0.5924526554970394, 0.5938203437862741, 0.5952777972373791, 0.5904782292566059, 0.5935506845556624, 0.5912279697016262, 0.5820382687677371, 0.5782362528921764, 0.5885427410749633, 0.5825786846519508, 0.57124314510024, 0.5905960285747056], "accuracy": [0.1356491893529892, 0.23973055183887482, 0.3210936486721039, 0.38304054737091064, 0.42728832364082336, 0.46308282017707825, 0.49848103523254395, 0.5396909117698669, 0.5713908076286316, 0.5905428528785706, 0.6159027814865112, 0.6343944072723389, 0.6457535624504089, 0.6477347612380981, 0.6675472259521484, 0.666358470916748, 0.6820763349533081, 0.6872276067733765, 0.6925109028816223, 0.6972658634185791, 0.6979262828826904, 0.7077004313468933, 0.7067758440971375, 0.7190595865249634, 0.7181349992752075, 0.7132478952407837, 0.7276449799537659, 0.7253995537757874, 0.7304186820983887, 0.7320036888122559, 0.7313432693481445, 0.7333245277404785, 0.7313432693481445, 0.7375511527061462, 0.7391361594200134, 0.7478536367416382, 0.7442874312400818, 0.754589855670929, 0.7497028112411499, 0.7425703406333923, 0.7498348951339722, 0.7539294958114624, 0.7485140562057495, 0.7516840696334839, 0.748249888420105, 0.752740740776062, 0.7601373791694641, 0.7555144429206848, 0.7605336308479309, 0.7671377658843994, 0.7605336308479309, 0.7638356685638428, 0.7646281719207764, 0.770439863204956, 0.7688548564910889, 0.7642319202423096, 0.7693831920623779, 0.7680623531341553, 0.770439863204956, 0.7740060687065125, 0.7701756954193115, 0.7677981853485107, 0.7790252566337585, 0.7749306559562683, 0.7712323069572449, 0.7786290049552917, 0.7821952104568481, 0.7832518815994263, 0.7798177003860474, 0.78113853931427, 0.7779685854911804, 0.7835160493850708, 0.7829877138137817, 0.7849689722061157, 0.7783648371696472, 0.7840443849563599, 0.7865539789199829, 0.7868181467056274, 0.7877426743507385, 0.7839123010635376, 0.7852331399917603, 0.7884030938148499, 0.7854973077774048], "val_loss": [1.9334697042192732, 1.8873071670532227, 1.816582271030971, 1.7043703283582414, 1.5395023141588484, 1.342355762209211, 1.1590422562190466, 1.0158322198050362, 0.9148261547088623, 0.8428302833012172, 0.7896518536976406, 0.7533874000821795, 0.7200024127960205, 0.6945178168160575, 0.6752516371863229, 0.6616758448737008, 0.6467724187033517, 0.6327751874923706, 0.619558606828962, 0.6121883732931954, 0.6056599957602364, 0.5939270257949829, 0.5856953178133283, 0.5788186107363019, 0.5751890284674508, 0.5669315712792533, 0.5587836163384574, 0.5528903007507324, 0.55194434097835, 0.5436910050255912, 0.5385443823678153, 0.5354394912719727, 0.5323744671685355, 0.5251230001449585, 0.5245694432939801, 0.5209641456604004, 0.5168508631842477, 0.5138578244618007, 0.5073555537632534, 0.5057088477270943, 0.5027236427579608, 0.5033240829195295, 0.49556260449545725, 0.4945202554975237, 0.4921048028128488, 0.4929999623979841, 0.4879297358649118, 0.4858990567071097, 0.4853021928242275, 0.48293679101126535, 0.4806156669344221, 0.47812279633113314, 0.4822092907769339, 0.4783195086887905, 0.471469589642116, 0.4710008587156023, 0.46793907029288156, 0.4696811097008841, 0.46716233662196566, 0.46494461808885845, 0.4658010516847883, 0.46169442789895193, 0.46352505683898926, 0.4570771796362741, 0.4583932501929147, 0.45574634415762766, 0.45694829736437115, 0.45284225259508404, 0.4563934121813093, 0.4510494981493269, 0.446580171585083, 0.4504694768360683, 0.44556412526539396, 0.44399549279894146, 0.4470118965421404, 0.44914255823407856, 0.44326760939189364, 0.4411929760660444, 0.4403246300561087, 0.4388831853866577, 0.44045503650392803, 0.4391894681113107, 0.4368334582873753], "val_accuracy": [0.3076666593551636, 0.3943333327770233, 0.4583333432674408, 0.5026666522026062, 0.5453333258628845, 0.5923333168029785, 0.6073333621025085, 0.6536666750907898, 0.6743333339691162, 0.6863333582878113, 0.6959999799728394, 0.699999988079071, 0.7039999961853027, 0.7193333506584167, 0.7233333587646484, 0.7226666808128357, 0.7279999852180481, 0.7390000224113464, 0.7419999837875366, 0.737666666507721, 0.7409999966621399, 0.7459999918937683, 0.753333330154419, 0.7473333477973938, 0.7583333253860474, 0.7590000033378601, 0.7599999904632568, 0.7559999823570251, 0.7620000243186951, 0.7609999775886536, 0.765333354473114, 0.7620000243186951, 0.7720000147819519, 0.7763333320617676, 0.7746666669845581, 0.7726666927337646, 0.7766666412353516, 0.7756666541099548, 0.7793333530426025, 0.7743333578109741, 0.7803333401679993, 0.7773333191871643, 0.781333327293396, 0.7803333401679993, 0.7826666831970215, 0.7820000052452087, 0.7796666622161865, 0.784333348274231, 0.781333327293396, 0.781000018119812, 0.7900000214576721, 0.7873333096504211, 0.7823333144187927, 0.7796666622161865, 0.7990000247955322, 0.7896666526794434, 0.79666668176651, 0.7893333435058594, 0.796999990940094, 0.7996666431427002, 0.7913333177566528, 0.8013333082199097, 0.8023333549499512, 0.8019999861717224, 0.8009999990463257, 0.8013333082199097, 0.800000011920929, 0.8029999732971191, 0.7933333516120911, 0.7979999780654907, 0.8086666464805603, 0.8033333420753479, 0.8023333549499512, 0.8130000233650208, 0.8043333292007446, 0.7979999780654907, 0.8100000023841858, 0.8149999976158142, 0.8073333501815796, 0.8130000233650208, 0.8043333292007446, 0.8113333582878113, 0.8140000104904175]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 0, 3, 2, 2, 8, 3, 9, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 33, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7865714430809021, "mapping_values": [1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2845491426117968, 2.241968154308897, 2.18255728060433, 2.091768961446538, 1.9488053437410455, 1.7662873951640221, 1.575856713413515, 1.4051542513091189, 1.2785873105418586, 1.1907975868762462, 1.1157535074755751, 1.0597455826543813, 1.015444078434098, 0.993530199118672, 0.952997563655555, 0.9311612329431387, 0.9040737534794338, 0.8729368377166449, 0.8691948143293703, 0.8501370102895359, 0.8436067866422496, 0.8280141046333465, 0.8161753356936995, 0.7915872295676536, 0.785246642982766, 0.7758173686701308, 0.7694943623378403, 0.7582116474832573, 0.7576598706593083, 0.7421648653506792, 0.7282452971361191, 0.7351052521588607, 0.7360204394073723, 0.7167686015591882, 0.7203561073092106, 0.7004180771799734, 0.704164621340616, 0.6875125178965155, 0.6898911465286595, 0.6883573747030763, 0.6871890847898037, 0.6760390753900969, 0.6726886713430787, 0.6715724921938199, 0.6706795670478856, 0.6699006363637318, 0.6573400833681984, 0.6642651736555224, 0.6597922954340778, 0.6413118056554395, 0.6470762236857411, 0.6472193268878726, 0.640383735836426, 0.6418846936399721, 0.6331897300893542, 0.6370810494053208, 0.6355509345856766, 0.6297545394389196, 0.621442933667369, 0.620150080800702], "accuracy": [0.1356491893529892, 0.23959846794605255, 0.3210936486721039, 0.3829084634780884, 0.4271562397480011, 0.4632149040699005, 0.4987452030181885, 0.5399550795555115, 0.5713908076286316, 0.5908070206642151, 0.6149781942367554, 0.6349227428436279, 0.6457535624504089, 0.6477347612380981, 0.6674151420593262, 0.6660943031311035, 0.6816800832748413, 0.687491774559021, 0.6925109028816223, 0.6972658634185791, 0.6972658634185791, 0.7077004313468933, 0.707040011882782, 0.7202483415603638, 0.7177387475967407, 0.713379979133606, 0.7268524765968323, 0.7253995537757874, 0.7294940948486328, 0.7320036888122559, 0.7317395210266113, 0.733588695526123, 0.7312111854553223, 0.7371549606323242, 0.7409853339195251, 0.7485140562057495, 0.744419515132904, 0.7543256878852844, 0.7491744756698608, 0.7430986762046814, 0.7490423917770386, 0.7540615797042847, 0.748778223991394, 0.7523444890975952, 0.7478536367416382, 0.7534011602401733, 0.7605336308479309, 0.7560427784919739, 0.7607977986335754, 0.7680623531341553, 0.7601373791694641, 0.7635715007781982, 0.763967752456665, 0.7708360552787781, 0.7683265209197998, 0.7655527591705322, 0.7681944370269775, 0.767930269241333, 0.7707040309906006, 0.7750627398490906], "val_loss": [1.9334697042192732, 1.887308188847133, 1.8165807042803084, 1.7043556145259313, 1.5394700254712785, 1.3423281397138322, 1.158998727798462, 1.0158214909689767, 0.9147933210645404, 0.8428068671907697, 0.7895070825304303, 0.7533203193119594, 0.7199313981192452, 0.694460357938494, 0.6752657890319824, 0.6616795573915754, 0.6467384951455253, 0.6327137265886579, 0.619550313268389, 0.6122000558035714, 0.6055927787508283, 0.5936949934278216, 0.5856920310429165, 0.5785525696618217, 0.5739846740450177, 0.5667962176459176, 0.5586354221616473, 0.5525991235460553, 0.55209367615836, 0.5435100793838501, 0.5383548566273281, 0.5354383502687726, 0.5324247394289289, 0.5250415120806012, 0.5243371725082397, 0.5208485977990287, 0.5166462148938861, 0.513938341821943, 0.5074560642242432, 0.5056845120021275, 0.5027879987444196, 0.5034890345164708, 0.49568729741232737, 0.49460065364837646, 0.49195546763283865, 0.4929067577634539, 0.4880495582308088, 0.48583316802978516, 0.48540171555110384, 0.4829281909125192, 0.4802043267658779, 0.47776118346623014, 0.4819397415433611, 0.4781417335782732, 0.4711129835673741, 0.4709916285106114, 0.46777003152029856, 0.47005721500941683, 0.46700406074523926, 0.4646850824356079], "val_accuracy": [0.3076666593551636, 0.3943333327770233, 0.4583333432674408, 0.5026666522026062, 0.5450000166893005, 0.5916666388511658, 0.6073333621025085, 0.6536666750907898, 0.6743333339691162, 0.6859999895095825, 0.6959999799728394, 0.699999988079071, 0.7039999961853027, 0.718999981880188, 0.7229999899864197, 0.7229999899864197, 0.7279999852180481, 0.7383333444595337, 0.7416666746139526, 0.737333357334137, 0.7406666874885559, 0.7459999918937683, 0.7536666393280029, 0.7486666440963745, 0.7593333125114441, 0.7586666941642761, 0.7599999904632568, 0.7566666603088379, 0.762333333492279, 0.7599999904632568, 0.7649999856948853, 0.7613333463668823, 0.7726666927337646, 0.7770000100135803, 0.7743333578109741, 0.7733333110809326, 0.7766666412353516, 0.7756666541099548, 0.777999997138977, 0.7749999761581421, 0.7816666960716248, 0.7776666879653931, 0.7799999713897705, 0.7793333530426025, 0.7826666831970215, 0.7820000052452087, 0.7796666622161865, 0.784333348274231, 0.781000018119812, 0.7806666493415833, 0.7879999876022339, 0.7883333563804626, 0.781333327293396, 0.7799999713897705, 0.800000011920929, 0.7903333306312561, 0.79666668176651, 0.7886666655540466, 0.79666668176651, 0.7990000247955322]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 1, 3, 2, 2, 8, 3, 5, 0, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 33, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7865714430809021, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2845491426117968, 2.241967681943465, 2.18255672718099, 2.0917767164272925, 1.948818699039126, 1.7663058255248145, 1.5758749348313312, 1.4051883467562274, 1.278614677521279, 1.1908282500688883, 1.1158269969715717, 1.0598351979347, 1.015491014820568, 0.993563247056071, 0.953053167215538, 0.9312383519770242, 0.9041077163493109, 0.8729663713969386, 0.8692458663571229, 0.8501257495070178, 0.8436193758344543, 0.8281585132488406, 0.8161436738339335, 0.7917822859290726, 0.7853244307995031, 0.7759165566012592, 0.7694535610336024, 0.7582243223468058, 0.7578079833598295, 0.7421737099682666, 0.7283663911558712, 0.735269559577566, 0.7359530901030275, 0.7168311974501896, 0.7204618233699746, 0.7004708473346394, 0.7042206283794056, 0.6876754709096901, 0.6897040293390221, 0.6882238491430825, 0.6871661133675481, 0.6760820010712654, 0.6727391059813388, 0.6712805620903793, 0.6707086854481096, 0.6700896405587973, 0.6574610281913288, 0.6644152134023149, 0.659642126030847, 0.6413768223484257, 0.6471005973169093, 0.6471883325985536, 0.6403823471844016, 0.6416147182158128, 0.6332428999439034, 0.6370799796865633, 0.6356576110047277, 0.629951434356819, 0.6212246869501893, 0.62026177650398], "accuracy": [0.1356491893529892, 0.23973055183887482, 0.3210936486721039, 0.3829084634780884, 0.4271562397480011, 0.4632149040699005, 0.49887728691101074, 0.5398229956626892, 0.5713908076286316, 0.590278685092926, 0.615770697593689, 0.6345264911651611, 0.6456214785575867, 0.6476026773452759, 0.6674151420593262, 0.6664905548095703, 0.6816800832748413, 0.6876237988471985, 0.6922467350959778, 0.6971337795257568, 0.6976621150970459, 0.7071720957756042, 0.7063795924186707, 0.7193237543106079, 0.7190595865249634, 0.7137762308120728, 0.7275128960609436, 0.7252674698829651, 0.7294940948486328, 0.7320036888122559, 0.7310791015625, 0.7321357727050781, 0.7318716049194336, 0.7372870445251465, 0.7395324110984802, 0.7479857206344604, 0.7442874312400818, 0.7534011602401733, 0.7486461400985718, 0.7433628439903259, 0.7499669790267944, 0.7543256878852844, 0.748249888420105, 0.7523444890975952, 0.7478536367416382, 0.7528728246688843, 0.7585523724555969, 0.7552502751350403, 0.7606657147407532, 0.7672698497772217, 0.759609043598175, 0.763439416885376, 0.7643640041351318, 0.7708360552787781, 0.7681944370269775, 0.7647602558135986, 0.7681944370269775, 0.7689869403839111, 0.7708360552787781, 0.7744023203849792], "val_loss": [1.9334697042192732, 1.8873074395315987, 1.8165813173566545, 1.7043643678937639, 1.5394842284066337, 1.3423402650015694, 1.159048114504133, 1.0158418927873885, 0.9148353167942592, 0.8428776264190674, 0.7895698206765311, 0.7533470903124128, 0.7199388231549945, 0.6944634403501239, 0.6752491848809379, 0.6616447823388236, 0.6467196260179792, 0.6326797178813389, 0.6195674794060844, 0.6121429715837751, 0.6057265315737043, 0.5940450089318412, 0.5856814214161464, 0.578782320022583, 0.5751710789544242, 0.5670262234551566, 0.5588249138423375, 0.5527975218636649, 0.5519095148359027, 0.543612173625401, 0.538372312273298, 0.5353473935808454, 0.532254866191319, 0.525085619517735, 0.524403418813433, 0.5209726946694511, 0.5168878010341099, 0.5139295203345162, 0.5074531861713955, 0.5057519333703178, 0.5027374029159546, 0.5035137789590018, 0.49570793764931814, 0.49452086857386995, 0.49197726590292795, 0.4932393176215036, 0.4880644253322056, 0.4859151159014021, 0.48529112339019775, 0.4828822101865496, 0.4804091453552246, 0.47792160511016846, 0.4820906264441354, 0.47828926358904156, 0.47147577149527414, 0.4711158105305263, 0.4678744077682495, 0.46973747866494314, 0.46722682884761263, 0.4648052283695766], "val_accuracy": [0.3076666593551636, 0.3943333327770233, 0.4583333432674408, 0.5026666522026062, 0.5450000166893005, 0.5923333168029785, 0.6069999933242798, 0.6536666750907898, 0.6743333339691162, 0.6863333582878113, 0.6959999799728394, 0.699999988079071, 0.7039999961853027, 0.718666672706604, 0.7233333587646484, 0.7233333587646484, 0.7279999852180481, 0.7386666536331177, 0.7423333525657654, 0.737333357334137, 0.7409999966621399, 0.7459999918937683, 0.753333330154419, 0.7480000257492065, 0.7583333253860474, 0.7583333253860474, 0.7590000033378601, 0.7563333511352539, 0.7609999775886536, 0.7606666684150696, 0.7643333077430725, 0.7616666555404663, 0.7713333368301392, 0.7763333320617676, 0.7736666798591614, 0.7733333110809326, 0.7763333320617676, 0.7763333320617676, 0.7786666750907898, 0.7746666669845581, 0.7803333401679993, 0.7773333191871643, 0.7796666622161865, 0.7789999842643738, 0.7833333611488342, 0.7806666493415833, 0.7789999842643738, 0.7846666574478149, 0.781000018119812, 0.7816666960716248, 0.7896666526794434, 0.7879999876022339, 0.781333327293396, 0.7799999713897705, 0.7996666431427002, 0.7893333435058594, 0.7973333597183228, 0.7893333435058594, 0.796999990940094, 0.7983333468437195]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7760000228881836, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2845491426117968, 2.241968077817188, 2.182557348058114, 2.0917691278451342, 1.9488039848716614, 1.7662765847976891, 1.5758581278960562, 1.4051611992850233, 1.2785943658076981, 1.1908543173663133, 1.1158113993390393, 1.0597899472157655, 1.0155332706088263, 0.9935238787117352, 0.953035143647983, 0.9312173697013487, 0.9041146368492926, 0.8729463571869797, 0.8691768403995496, 0.8500514485659364, 0.8436034317533684, 0.8279854593464664, 0.8160506843292419, 0.791728469398374, 0.7852559208618006, 0.7759847031009983, 0.769371769730882, 0.7582404673642739, 0.757875869507488, 0.7420311721796845, 0.7283584757204525, 0.7352415242246775, 0.7359003112253465, 0.7167350114407461, 0.7203972444888891, 0.7004625432684343, 0.7042494668007653, 0.6874689566397852, 0.6897713901927017, 0.6883032175654102, 0.6870441285059546, 0.6758537392543212, 0.6726658601944142, 0.6712803037773427, 0.6705272506256743, 0.6699683554357369, 0.6574748215374929, 0.6643411864174387, 0.6595810844897909, 0.6414225263649745], "accuracy": [0.1356491893529892, 0.23959846794605255, 0.3210936486721039, 0.3829084634780884, 0.4271562397480011, 0.4633469879627228, 0.4987452030181885, 0.5400871634483337, 0.5713908076286316, 0.5898824334144592, 0.6155065298080444, 0.6345264911651611, 0.6458855867385864, 0.6477347612380981, 0.6676793098449707, 0.6662263870239258, 0.6820763349533081, 0.6873596906661987, 0.6923788189888, 0.6976621150970459, 0.6979262828826904, 0.707568347454071, 0.7065116763114929, 0.7191916704177856, 0.7185312509536743, 0.7136441469192505, 0.7277770638465881, 0.7251353859901428, 0.7301545143127441, 0.7321357727050781, 0.7306828498840332, 0.7321357727050781, 0.7318716049194336, 0.7371549606323242, 0.739928662776947, 0.7478536367416382, 0.7440232634544373, 0.7532690763473511, 0.7491744756698608, 0.7433628439903259, 0.7495707273483276, 0.7549861073493958, 0.7497028112411499, 0.7512878179550171, 0.7478536367416382, 0.7530049085617065, 0.759609043598175, 0.7563069462776184, 0.7614582180976868, 0.7671377658843994], "val_loss": [1.9334697042192732, 1.8873083932059151, 1.816580363682338, 1.704355239868164, 1.5394649165017265, 1.3423196588243758, 1.159024408885411, 1.0158188002450126, 0.9148040158408028, 0.842849748475211, 0.7895550557545253, 0.7533188888004848, 0.7199002163750785, 0.6944596937724522, 0.675231797354562, 0.6617087636675153, 0.6467604126249041, 0.6327238423483712, 0.6195492403847831, 0.612056953566415, 0.6056214400700161, 0.5939830371311733, 0.5856247799737113, 0.5788525342941284, 0.575138943535941, 0.5669980389731271, 0.5587094511304583, 0.5526249749319894, 0.5518582889011928, 0.5437134674617222, 0.538408739226205, 0.5352693285260882, 0.5321176222392491, 0.5250745500837054, 0.524404491697039, 0.5208080496106829, 0.5167896747589111, 0.5137229646955218, 0.5073068482535226, 0.5056721142360142, 0.5027353933879307, 0.5034068993159703, 0.49572358812604633, 0.49452175412859234, 0.491953934941973, 0.4930724246161325, 0.48807837281908306, 0.4858400651386806, 0.4852724756513323, 0.48275361742292133], "val_accuracy": [0.3076666593551636, 0.3943333327770233, 0.4583333432674408, 0.5026666522026062, 0.5450000166893005, 0.5923333168029785, 0.6073333621025085, 0.6536666750907898, 0.6743333339691162, 0.6866666674613953, 0.6956666707992554, 0.6996666789054871, 0.7039999961853027, 0.718666672706604, 0.7229999899864197, 0.7229999899864197, 0.7279999852180481, 0.737666666507721, 0.7423333525657654, 0.737666666507721, 0.7403333187103271, 0.7459999918937683, 0.753000020980835, 0.7483333349227905, 0.7586666941642761, 0.7590000033378601, 0.7596666812896729, 0.7563333511352539, 0.7606666684150696, 0.7603333592414856, 0.7646666765213013, 0.7613333463668823, 0.7720000147819519, 0.7766666412353516, 0.7739999890327454, 0.7730000019073486, 0.7773333191871643, 0.7760000228881836, 0.7796666622161865, 0.7743333578109741, 0.781000018119812, 0.777999997138977, 0.7799999713897705, 0.7803333401679993, 0.7829999923706055, 0.7816666960716248, 0.7796666622161865, 0.7826666831970215, 0.781000018119812, 0.7826666831970215]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 3, 0, 8, 6, 0, 0, 3, 5, 6, 6, 1, 8, 4, 4, 2, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [28, 33, 23, 26, 0, 39, 33, 75, 8, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.6248571276664734, "mapping_values": [1, 30, 30, 18, 12, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, grad)))), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))))), alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2560792962526364, 1.8165873777061767, 1.3086849487594656, 0.9424118358051898, 0.8567727804577597, 0.8215442230798754, 0.7617882328845286, 0.734965505868909, 0.6999826108727552, 0.6628415857355247, 0.6104822147476706, 0.6026961593233662, 0.5853655742002343, 0.5612300947090071, 0.5474250203409624, 0.527616413734561, 0.5145927945368672, 0.5068207165434723, 0.4977501168416051, 0.4788474599131976, 0.4727842715619152, 0.4643939046685911, 0.47237394259055027, 0.4369773577390456, 0.4394745290035333, 0.44951684916055656, 0.4416752403217961, 0.42578256932452463, 0.42708123382513064, 0.4109349239614142, 0.40598994421842405, 0.411829042967678, 0.41080528733485, 0.404943001158501], "accuracy": [0.19561484456062317, 0.4267600178718567, 0.5670320987701416, 0.6585655808448792, 0.685510516166687, 0.6991150379180908, 0.707568347454071, 0.7290979027748108, 0.7362303733825684, 0.7516840696334839, 0.7638356685638428, 0.7697794437408447, 0.7825914621353149, 0.7927618622779846, 0.7845727205276489, 0.7972526550292969, 0.806630551815033, 0.8041210174560547, 0.809140145778656, 0.8127063512802124, 0.817461371421814, 0.8214238286018372, 0.8230088353157043, 0.8322546482086182, 0.8289526104927063, 0.8327829837799072, 0.8337075710296631, 0.8403117060661316, 0.8298771381378174, 0.8413683772087097, 0.843481719493866, 0.8441421389579773, 0.8474441766738892, 0.8438779711723328], "val_loss": [1.8074021339416504, 0.9472377640860421, 0.7227992330278669, 0.7113319124494281, 0.6033345290592739, 0.5683913741792951, 0.5737318481717791, 0.5406979322433472, 0.47755157947540283, 0.4606133358819144, 0.47753208024161203, 0.4432832343237741, 0.4341980218887329, 0.43425347975322176, 0.40766879490443636, 0.40355823721204487, 0.4211061937468393, 0.41121242727552143, 0.40192754779543194, 0.3938294734273638, 0.39926977668489727, 0.3930807283946446, 0.3763911383492606, 0.3698327881949289, 0.37263405323028564, 0.38311398880822317, 0.3690621682575771, 0.36896153007234844, 0.37386581727436613, 0.370287333215986, 0.36717126199177336, 0.40325855357306345, 0.3822353993143354, 0.3921256150518145], "val_accuracy": [0.43433332443237305, 0.659333348274231, 0.7016666531562805, 0.7116666436195374, 0.7300000190734863, 0.7379999756813049, 0.7459999918937683, 0.7556666731834412, 0.7746666669845581, 0.7856666445732117, 0.7826666831970215, 0.8026666641235352, 0.7973333597183228, 0.8100000023841858, 0.8193333148956299, 0.8230000138282776, 0.8166666626930237, 0.8153333067893982, 0.8276666402816772, 0.8373333215713501, 0.8376666903495789, 0.8276666402816772, 0.8460000157356262, 0.8383333086967468, 0.8493333458900452, 0.843666672706604, 0.8500000238418579, 0.8526666760444641, 0.8529999852180481, 0.8516666889190674, 0.8506666421890259, 0.8410000205039978, 0.8426666855812073, 0.843999981880188]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 6, 3, 2, 2, 8, 2, 5, 8, 5, 2, 0, 2, 2, 5, 2, 1, 8, 2, 4, 5, 2, 9, 5, 6, 9, 2, 9, 2, 2, 9, 3, 5, 3, 9, 9, 6, 8, 2, 0, 5, 3, 9, 1, 6, 2, 3, 2, 1, 3, 5, 9, 3], [2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 98, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.6197142601013184, "mapping_values": [1, 40, 40, 25, 15, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad)))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))))), tf.math.pow(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.256079426782951, 1.8165782655722997, 1.308749082743169, 0.9423108770862751, 0.8564221245690485, 0.8221847681463229, 0.7623077703268615, 0.7348370840993178, 0.6978331411582384, 0.6627553037806052, 0.6107751068154409, 0.6029651534319586, 0.5843867355444176, 0.5640345900333663, 0.5499347706181797, 0.5306951830518118, 0.5142655192884582, 0.5067098214287469, 0.49597394718328375, 0.4810418754190171, 0.47188581972467963, 0.4601794381135994, 0.4647011626051748, 0.4315022005853463, 0.4422272728607718, 0.4351009240499687, 0.42415082489715167, 0.4230642877730711, 0.41577787066510546, 0.39656972434022847, 0.39856240955153005, 0.3985641459314311, 0.38185915947668997, 0.38258840041925185, 0.36780185241504604], "accuracy": [0.19561484456062317, 0.4266279339790344, 0.5669000148773193, 0.6572447419166565, 0.6861709356307983, 0.6963412761688232, 0.7078325152397156, 0.7285695672035217, 0.7391361594200134, 0.7515519857406616, 0.7650244235992432, 0.7705719470977783, 0.7824593782424927, 0.7917051911354065, 0.7864218950271606, 0.7918372750282288, 0.8067626357078552, 0.8053097128868103, 0.8088759779930115, 0.816008448600769, 0.8148196935653687, 0.8269713521003723, 0.8281601071357727, 0.8348963260650635, 0.8248580098152161, 0.835160493850708, 0.8399154543876648, 0.8409721255302429, 0.8399154543876648, 0.846387505531311, 0.8462554216384888, 0.8502179384231567, 0.8551049828529358, 0.8552370667457581, 0.8614450097084045], "val_loss": [1.8074001584734236, 0.947261129106794, 0.7225916385650635, 0.7105242695127215, 0.6037296227046421, 0.5673257623400006, 0.5736810139247349, 0.5401218959263393, 0.4768970012664795, 0.4590076378413609, 0.47777484144483295, 0.4443889175142561, 0.43646722180502756, 0.43888749395098003, 0.41062939167022705, 0.4040841119629996, 0.417731123311179, 0.4118057574544634, 0.40191950116838726, 0.3906872698238918, 0.3893659881183079, 0.39279712097985403, 0.38326082059315275, 0.3710114189556667, 0.37028018065861296, 0.3740153227533613, 0.37491999353681293, 0.3641622151647295, 0.3690686992236546, 0.3684991257531302, 0.3737960032054356, 0.3857512729508536, 0.39826643466949463, 0.39030468463897705, 0.37366299969809397], "val_accuracy": [0.43433332443237305, 0.6589999794960022, 0.7020000219345093, 0.7099999785423279, 0.7319999933242798, 0.7400000095367432, 0.7456666827201843, 0.7563333511352539, 0.7763333320617676, 0.7866666913032532, 0.781333327293396, 0.8026666641235352, 0.7990000247955322, 0.8013333082199097, 0.8206666707992554, 0.8236666917800903, 0.8203333616256714, 0.8213333487510681, 0.82833331823349, 0.8383333086967468, 0.8410000205039978, 0.8243333101272583, 0.8413333296775818, 0.8433333039283752, 0.8486666679382324, 0.8460000157356262, 0.8453333377838135, 0.8539999723434448, 0.8560000061988831, 0.8586666584014893, 0.8513333201408386, 0.8519999980926514, 0.8516666889190674, 0.8543333411216736, 0.8519999980926514]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.5951428413391113, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.256079188364372, 1.8165766442094449, 1.308924570736742, 0.9426774042015771, 0.8571508380447507, 0.8218840754200613, 0.7621348566934023, 0.7337060456719333, 0.6977034041185924, 0.6614216845332513, 0.608651285858958, 0.6023291024108683, 0.5862722572491799, 0.5659217722994414, 0.54960903973706, 0.5273814366131788, 0.5165532592296789, 0.5072658752579463, 0.4957535604381322, 0.48437802321749307, 0.473124526947906, 0.4601317765674634, 0.4678398854208818, 0.43214120833062225, 0.43976161199994707, 0.44029380917438915, 0.43356476965644625, 0.4313570654796902, 0.420226446133815, 0.40262759080211546, 0.4024531595293777, 0.393805361946639, 0.39769761917959856, 0.38951216801644756, 0.3743164262767198], "accuracy": [0.19561484456062317, 0.4267600178718567, 0.5667679309844971, 0.6577730774879456, 0.6851142644882202, 0.6971337795257568, 0.7074362635612488, 0.7306828498840332, 0.7380794882774353, 0.7528728246688843, 0.7640998363494873, 0.7707040309906006, 0.7814027070999146, 0.7889314293861389, 0.7903843522071838, 0.7952714562416077, 0.8058380484580994, 0.8092722296714783, 0.8094043135643005, 0.8129705190658569, 0.8204993009567261, 0.8247259259223938, 0.8227446675300598, 0.837141752243042, 0.8285563588142395, 0.835160493850708, 0.8433496356010437, 0.8400475382804871, 0.8387266993522644, 0.8445383906364441, 0.8459912538528442, 0.8474441766738892, 0.8479725122451782, 0.8545766472816467, 0.8511425256729126], "val_loss": [1.8073997497558594, 0.9472696781158447, 0.7229808739253453, 0.710769602230617, 0.6045666592461723, 0.5679788759776524, 0.573779787336077, 0.5404984951019287, 0.4764162983213152, 0.45800561564309256, 0.47834958348955425, 0.44452073744365145, 0.436755325113024, 0.44292216641562326, 0.410614584173475, 0.4045701197215489, 0.41927553926195416, 0.4151286227362497, 0.4041875771113804, 0.39106214897973196, 0.3858909862382071, 0.39646512269973755, 0.3863039016723633, 0.3716488480567932, 0.3714498792375837, 0.3854600361415318, 0.37918518270765034, 0.37166265078953337, 0.3705473116465977, 0.3704800180026463, 0.3660702960831778, 0.3856754558426993, 0.3763705236571176, 0.38207123960767475, 0.3824353814125061], "val_accuracy": [0.43433332443237305, 0.6586666703224182, 0.7013333439826965, 0.7103333473205566, 0.7316666841506958, 0.7390000224113464, 0.7456666827201843, 0.7563333511352539, 0.7770000100135803, 0.7870000004768372, 0.7846666574478149, 0.7986666560173035, 0.7963333129882812, 0.8003333210945129, 0.8176666498184204, 0.8259999752044678, 0.8163333535194397, 0.8193333148956299, 0.8223333358764648, 0.8389999866485596, 0.8446666598320007, 0.8230000138282776, 0.8386666774749756, 0.840666651725769, 0.8443333506584167, 0.8463333249092102, 0.8420000076293945, 0.8529999852180481, 0.8546666502952576, 0.8619999885559082, 0.8526666760444641, 0.8560000061988831, 0.8553333282470703, 0.8519999980926514, 0.8526666760444641]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [67, 49, 44, 92]], "fitness": -0.41342857480049133, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.48284007422503, 2.2634261381262406, 2.3071235985945497, 2.3025903872778515, 2.2776471190464544, 2.3141453588611935, 2.304223862747396, 2.303046671847594, 2.3029904671317443, 2.3030735483384954], "accuracy": [0.21054022014141083, 0.16523577272891998, 0.09509972482919693, 0.10328886657953262, 0.16338661313056946, 0.2366926372051239, 0.1014397069811821, 0.10236428678035736, 0.09589222073554993, 0.09734513610601425], "val_loss": [2.0469163485935757, 1.9816622052873885, 1.973855767931257, 1.9705448150634766, 1.5396077292306083, 1.974583693913051, 1.9738918031964983, 1.9738845825195312, 1.9724950109209334, 1.9736455508640833], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.21433334052562714, 0.4259999990463257, 0.10100000351667404, 0.09866666793823242, 0.09866666793823242, 0.12666666507720947, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [12, 49, 44, 92]], "fitness": -0.15314285457134247, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3735946048252368, 7998060880324.641, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03949280083179474, 0.04913485795259476, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.332742009844099, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.11366666853427887, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 1, 3, 2, 2, 8, 3, 5, 0, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 33, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.square(alpha))))))))), tf.math.add(alpha, tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad)))))), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(grad, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 0, 1, 3, 2, 2, 8, 3, 5, 0, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(alpha), tf.math.add(alpha, tf.math.subtract(grad, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))))))))), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), beta), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3042915087523412, 2.303189332600771, 2.3032268383216077, 2.3033858089399155, 2.3033560285037926, 2.3031310865419603, 2.3034105229418684, 2.3033633917991305, 2.303314755479689, 2.303215335562024, 2.3034262679839066], "accuracy": [0.09060890227556229, 0.0944393053650856, 0.09298639744520187, 0.09259014576673508, 0.09219389408826828, 0.09628847241401672, 0.09496764093637466, 0.0952318087220192, 0.0944393053650856, 0.09576013684272766, 0.09721305221319199], "val_loss": [1.9739343098231725, 1.9739349910191126, 1.973872525351388, 1.9738851955958776, 1.9739690508161272, 1.9737418719700404, 1.9740428243364607, 1.9739366940089635, 1.9739917346409388, 1.9737911905561174, 1.973823002406529], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.10133333504199982, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 3, 5, 8, 2, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 1, 1, 2, 1, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 0, 1, 0, 1, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 38, 39, 74, 75, 29, 74, 88, 45, 77, 61, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [280.15532674249044, 4.5323001826617906e+29, 2.330746633312753, 2.341584338614056, 2.357485393979656, 2.3817818149079923], "accuracy": [0.04147404432296753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17533142747.42857, 1.9950907570975167, 2.0030569349016463, 2.0145723479134694, 2.031843457903181, 2.059107712336949], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 6, 3, 3, 2, 4, 2, 5, 8, 5, 2, 0, 2, 9, 5, 6, 1, 8, 2, 4, 5, 4, 9, 5, 6, 9, 2, 9, 2, 2, 9, 3, 5, 3, 9, 9, 6, 8, 2, 0, 5, 3, 9, 1, 6, 2, 3, 2, 1, 3, 5, 9, 3], [1, 2, 2, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [27, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.square(alpha), tf.math.add(alpha, grad)), grad)), tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad))))), grad), tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 6, 3, 3, 2, 8, 2, 5, 8, 5, 2, 0, 2, 2, 5, 6, 1, 8, 2, 4, 5, 4, 9, 5, 6, 9, 2, 9, 2, 2, 9, 3, 5, 3, 9, 9, 6, 8, 2, 0, 5, 3, 9, 1, 6, 2, 3, 2, 1, 3, 5, 9, 3], [1, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [27, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 8, 3, 2, 2, 8, 2, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 3, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 0, 1, 2, 1, 0, 1, 2, 1, 2, 0, 2, 1, 0, 2, 0, 0, 2, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 63, 96, 87, 75, 29, 74, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 27, 14, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))))))))), tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), tf.math.add(alpha, alpha)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.multiply(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.math.subtract(tf.math.add(sigma, beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 1, 0, 2, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [89, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 3, 0, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035632543056206, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 1, 3, 2, 2, 8, 3, 5, 0, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 1, 1, 2, 2, 1, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 0, 1, 0, 1, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 33, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [514830486.17963153, 10041883074.12178, 47129384137.391624, 130166644799.83939, 282708768210.48737, 516243105476.31964], "accuracy": [0.1014397069811821, 0.10527011007070541, 0.10434553027153015, 0.09813763201236725, 0.09866596013307571, 0.10513802617788315], "val_loss": [2013781357.7142856, 16103825408.0, 54343057408.0, 128805189339.42857, 251561836544.0, 434687227611.4286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 6, 6, 9, 2, 9, 2, 2, 0, 1, 1, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [1, 2, 2, 2, 2, 1, 0, 1, 2, 0, 1, 2, 2, 1, 0, 1, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 38, 39, 74, 75, 29, 74, 88, 45, 77, 61, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 6, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [27, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.300984981872182, 2.301161027146746, 2.3009036560383582, 2.3022906765757045, 2.3026204414969786, 2.3025425629545873], "accuracy": [0.09206181764602661, 0.09206181764602661, 0.08968432247638702, 0.09192973375320435, 0.09496764093637466, 0.09219389408826828], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]