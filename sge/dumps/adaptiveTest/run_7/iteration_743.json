[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2864958334592638, 2.243848100078262, 2.1859068072561763, 2.093114837159759, 1.9518605776592695, 1.7665651604924866, 1.5680041182798528, 1.3971320360154995, 1.281003173442171, 1.1938727385080439, 1.1131525283098505, 1.059508857536845, 1.0247683933051728, 0.98671698089226, 0.9520384729609214, 0.9186497357590419, 0.9009626658522395, 0.8819272075000456, 0.8635756525743309, 0.8470530041440949, 0.834324198281839, 0.8235975479437234, 0.8006153267766065, 0.8040518272176568, 0.7843143448711875, 0.7761137887802043, 0.7680040635389974, 0.7593328590406293, 0.7557699690405498, 0.7419824899856866, 0.7409719007677484, 0.7293276705399889, 0.7230085756375317, 0.7249362257335952, 0.7111038956439348, 0.7013188452768508, 0.7049541357737868, 0.6865021262769103, 0.6884372403215124, 0.6890201911698275, 0.6894425963287922, 0.6742651795021468, 0.6715746426453223, 0.6748152932927373, 0.6669384245591597, 0.6603696868246761, 0.6559297577768914, 0.6599283096670963, 0.6485369326479131, 0.6446861708090211, 0.6472099303663871, 0.643042538640301, 0.6373296515769364, 0.643057706624982, 0.6355759784246653, 0.6312434124184512, 0.6266871548253217, 0.626803904878087, 0.6209283665485859, 0.6186669441561232, 0.6243138396351046, 0.6152791850256047, 0.6122939239765722, 0.6096806656242031, 0.6138272090217047], "accuracy": [0.13247919082641602, 0.2343151569366455, 0.3183199167251587, 0.3749834895133972, 0.4287412464618683, 0.4683661460876465, 0.5148593187332153, 0.5411438345909119, 0.5694096088409424, 0.59661865234375, 0.6181482076644897, 0.6332056522369385, 0.6392814517021179, 0.651168942451477, 0.6692643165588379, 0.6753401160240173, 0.6800950765609741, 0.6900013089179993, 0.6942279934883118, 0.69673752784729, 0.7010962963104248, 0.7066437602043152, 0.7124554514884949, 0.7125874757766724, 0.7230220437049866, 0.7217012047767639, 0.7220974564552307, 0.7260599732398987, 0.7252674698829651, 0.7341170310974121, 0.7294940948486328, 0.737022876739502, 0.7456082701683044, 0.7376832365989685, 0.7441553473472595, 0.7479857206344604, 0.7433628439903259, 0.7491744756698608, 0.7436270117759705, 0.7474573850631714, 0.7485140562057495, 0.7547219395637512, 0.7530049085617065, 0.750759482383728, 0.7565711140632629, 0.7567031979560852, 0.7589486241340637, 0.7627789974212646, 0.7602694630622864, 0.7623828053474426, 0.7656848430633545, 0.7660810947418213, 0.7718927264213562, 0.7640998363494873, 0.765949010848999, 0.7666094303131104, 0.7670056819915771, 0.772288978099823, 0.7736098170280457, 0.7724210619926453, 0.7688548564910889, 0.7773081660270691, 0.7765156626701355, 0.7796856164932251, 0.7749306559562683], "val_loss": [1.9336911610194616, 1.8881914275033134, 1.8176817893981934, 1.7061082635607039, 1.542346818106515, 1.344170366014753, 1.1573332718440466, 1.0123022965022497, 0.9126570565359933, 0.8444381271089826, 0.7920302833829608, 0.7504740272249494, 0.7206438609531948, 0.6965242113385882, 0.6762573378426688, 0.658739447593689, 0.6432045016969953, 0.6338998249598912, 0.6207931041717529, 0.6080329077584403, 0.6015557050704956, 0.594070485660008, 0.5828932523727417, 0.5773353746959141, 0.5711339030947004, 0.564282877104623, 0.5559555462428502, 0.5524791649409703, 0.5468492337635585, 0.5413273743220738, 0.5374256883348737, 0.5351857968739101, 0.5289357219423566, 0.5289327246802193, 0.5201107433864048, 0.5174468755722046, 0.5135585580553327, 0.510025177683149, 0.5070649215153286, 0.5074874332972935, 0.5040765489850726, 0.5001952137265887, 0.4994923046657017, 0.49395430088043213, 0.49087577206747873, 0.48840432507651194, 0.4877918277468, 0.48701681409563335, 0.4824108225958688, 0.48154081617082867, 0.47955032757350374, 0.4770716769354684, 0.4759028468813215, 0.47548442227499826, 0.4704446792602539, 0.4700373240879604, 0.46899754660470144, 0.46441270623888287, 0.464414153780256, 0.462957535471235, 0.46159868580954416, 0.45877225058419363, 0.4606365306036813, 0.4583391972950527, 0.45519462653568815], "val_accuracy": [0.30266666412353516, 0.390666663646698, 0.45266667008399963, 0.503333330154419, 0.5416666865348816, 0.5943333506584167, 0.637333333492279, 0.6656666398048401, 0.6766666769981384, 0.6866666674613953, 0.6953333616256714, 0.6976666450500488, 0.7093333601951599, 0.7126666903495789, 0.7200000286102295, 0.7253333330154419, 0.731333315372467, 0.7286666631698608, 0.7329999804496765, 0.7363333106040955, 0.7450000047683716, 0.7406666874885559, 0.7459999918937683, 0.7573333382606506, 0.7453333139419556, 0.7536666393280029, 0.7646666765213013, 0.7596666812896729, 0.7646666765213013, 0.7596666812896729, 0.7713333368301392, 0.7613333463668823, 0.7680000066757202, 0.7630000114440918, 0.7720000147819519, 0.7666666507720947, 0.7749999761581421, 0.7733333110809326, 0.7720000147819519, 0.7699999809265137, 0.7770000100135803, 0.7803333401679993, 0.7743333578109741, 0.7826666831970215, 0.7816666960716248, 0.7839999794960022, 0.7846666574478149, 0.7833333611488342, 0.7923333048820496, 0.7886666655540466, 0.7876666784286499, 0.7956666946411133, 0.7863333225250244, 0.7856666445732117, 0.7950000166893005, 0.7953333258628845, 0.7993333339691162, 0.8019999861717224, 0.7990000247955322, 0.8056666851043701, 0.7973333597183228, 0.8003333210945129, 0.7946666479110718, 0.7943333387374878, 0.8040000200271606]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 3, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7900000214576721, "mapping_values": [1, 21, 21, 13, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(grad))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2864958964413216, 2.2438476592038583, 2.185906272097633, 2.093109528968961, 1.9518484653435868, 1.7665665488689646, 1.5679917561930752, 1.3971089115547166, 1.280994181918934, 1.1938705236652603, 1.113187436068047, 1.059524052076336, 1.0247737594000998, 0.9867009547376803, 0.9519783740487033, 0.9186282242451361, 0.9009882951488175, 0.8819182725346966, 0.8635010029803241, 0.8470808354193713, 0.8343492479309225, 0.8236111168454525, 0.8006102997140956, 0.8041200644273043, 0.7842582308101365, 0.7761874763626448, 0.768050034615216, 0.7593187210015365, 0.7557336470438678, 0.7419379364308932, 0.7410868471560934, 0.7293325527358946, 0.7230296305708834, 0.7249089088485289, 0.7111577640088668, 0.7012701630356164, 0.7049078339236744, 0.6866188735663379, 0.6884186298005444, 0.6891906619339634, 0.6893282112050538, 0.6744552365761423, 0.6716144527143192, 0.6748367712608244, 0.6671132190494238, 0.6603399707798346, 0.6559858673740891, 0.6601080138606796, 0.6484824528138021, 0.6446640998884797, 0.6472853884689402, 0.6432333290380116, 0.6373945630820137, 0.6432709401278306, 0.6353934672309927, 0.6312926429106244, 0.6268943730693026, 0.6265949942038721, 0.6208065438421726, 0.6189158809592837, 0.6244014462286597, 0.6154311362384821, 0.6120692354309214, 0.6097293636975524, 0.6139720477731614], "accuracy": [0.13247919082641602, 0.23444722592830658, 0.31845200061798096, 0.37524765729904175, 0.4283449947834015, 0.4682340621948242, 0.5144630670547485, 0.5410117506980896, 0.5694096088409424, 0.59661865234375, 0.6181482076644897, 0.6333377361297607, 0.6392814517021179, 0.651168942451477, 0.6692643165588379, 0.6760005354881287, 0.6803592443466187, 0.6900013089179993, 0.6940959095954895, 0.6971337795257568, 0.7013604640960693, 0.7065116763114929, 0.7119271159172058, 0.7132478952407837, 0.7231541275978088, 0.7213049530982971, 0.7218332886695862, 0.7259278893470764, 0.7255316376686096, 0.7337207794189453, 0.7288337349891663, 0.7366266250610352, 0.7461365461349487, 0.737022876739502, 0.744419515132904, 0.7475894689559937, 0.7425703406333923, 0.7493065595626831, 0.7437590956687927, 0.7475894689559937, 0.7483819723129272, 0.7541936039924622, 0.7528728246688843, 0.7508915662765503, 0.7569673657417297, 0.757099449634552, 0.7594769597053528, 0.7633073329925537, 0.7601373791694641, 0.7627789974212646, 0.7656848430633545, 0.7655527591705322, 0.7720248103141785, 0.763967752456665, 0.7655527591705322, 0.7660810947418213, 0.7676661014556885, 0.7724210619926453, 0.7732135653495789, 0.7728173136711121, 0.767930269241333, 0.7766477465629578, 0.7778365015983582, 0.7791573405265808, 0.7732135653495789], "val_loss": [1.9336908885410853, 1.8881895201546806, 1.8176764760698592, 1.7060961382729667, 1.5423184462956019, 1.3441954340253557, 1.157313414982387, 1.012286560876029, 0.912663357598441, 0.8444284881864276, 0.7920270817620414, 0.7504971027374268, 0.7206337792532784, 0.6964843613760812, 0.6762322868619647, 0.6587365525109428, 0.6431005682264056, 0.6338050195149013, 0.6208393062864032, 0.6082310506275722, 0.6017963205065046, 0.594072665487017, 0.5828478166035244, 0.5773713418415615, 0.5711125816617694, 0.5643925496510097, 0.5560785702296666, 0.552805883543832, 0.5468060629708427, 0.5415293148585728, 0.5374010631016323, 0.5353115286145892, 0.5288354328700474, 0.5291451045445034, 0.5202644552503314, 0.5174891948699951, 0.5135336262839181, 0.5102507897785732, 0.5074042763028827, 0.5075713736670358, 0.5040909051895142, 0.4999282019478934, 0.4998855079923357, 0.4940605504172189, 0.4910637140274048, 0.48830270767211914, 0.4875538519450596, 0.4868273564747402, 0.48240528787885395, 0.48169948373522076, 0.47955141748700825, 0.47698899677821566, 0.47598854133061, 0.47535301957811626, 0.4703369310923985, 0.4701289279120309, 0.46904563903808594, 0.4645124503544399, 0.4645390340260097, 0.46311378479003906, 0.46172373635428293, 0.45890675272260395, 0.4606440918786185, 0.45881751605442594, 0.4553512675421579], "val_accuracy": [0.30266666412353516, 0.390666663646698, 0.45233333110809326, 0.503333330154419, 0.5416666865348816, 0.5946666598320007, 0.637333333492279, 0.6656666398048401, 0.6766666769981384, 0.6866666674613953, 0.6949999928474426, 0.6980000138282776, 0.7093333601951599, 0.7123333215713501, 0.7203333377838135, 0.7256666421890259, 0.7323333621025085, 0.7293333411216736, 0.7329999804496765, 0.7363333106040955, 0.7450000047683716, 0.7413333058357239, 0.7456666827201843, 0.7573333382606506, 0.7453333139419556, 0.753000020980835, 0.7643333077430725, 0.7580000162124634, 0.7636666893959045, 0.7596666812896729, 0.7710000276565552, 0.7613333463668823, 0.7673333287239075, 0.7630000114440918, 0.7713333368301392, 0.7666666507720947, 0.7766666412353516, 0.7726666927337646, 0.7720000147819519, 0.7696666717529297, 0.778333306312561, 0.781000018119812, 0.7723333239555359, 0.7806666493415833, 0.781333327293396, 0.7833333611488342, 0.7846666574478149, 0.7829999923706055, 0.7926666736602783, 0.7893333435058594, 0.7889999747276306, 0.793666660785675, 0.7870000004768372, 0.7853333353996277, 0.7953333258628845, 0.7946666479110718, 0.7996666431427002, 0.8023333549499512, 0.7986666560173035, 0.8059999942779541, 0.7986666560173035, 0.7996666431427002, 0.7946666479110718, 0.7950000166893005, 0.8026666641235352]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 1, 3, 2, 2, 8, 3, 5, 0, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 1, 1, 2, 2, 1, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 0, 1, 0, 1, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 33, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7897142767906189, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2864958964413216, 2.243847605259726, 2.185907837516675, 2.093112412445014, 1.9518446619201093, 1.766544140703123, 1.5679769171164446, 1.3971038780286722, 1.2810078389010708, 1.1938884365497218, 1.1131736941860966, 1.0595326007412347, 1.024759045720746, 0.9867416512870109, 0.9520764203828008, 0.9186423259672, 0.9009812864031003, 0.8819448890750277, 0.8635512482551552, 0.8470824906587002, 0.8344236805202497, 0.8236596829005363, 0.8007115916080951, 0.8041108117883294, 0.7842620121898936, 0.7761925015435668, 0.7681060137293358, 0.7593773610052447, 0.7557551270509991, 0.7418140740584168, 0.7412396754492323, 0.7294588690467908, 0.7229175705242749, 0.7249104306131322, 0.7111381176141244, 0.7012984032455201, 0.7048892494064233, 0.6865560432403724, 0.6885440141738067, 0.6893177459567781, 0.6893815329565804, 0.6744480088811745, 0.6715929578276768, 0.6750583894469121, 0.6667269491295946, 0.6603842010477263, 0.6560649518181918, 0.66031143738058, 0.6485260558276364, 0.6448322923869001, 0.6472787729044632, 0.6431341853360333, 0.6375171222454994, 0.6427013565284417, 0.635518014194817, 0.6314521637952969, 0.6271553690155437, 0.6264700828179897, 0.6213495802759668, 0.6193268858147272, 0.624467227342752, 0.6156243000284335, 0.6120596073716466, 0.610010631639314, 0.6137048033061296], "accuracy": [0.13247919082641602, 0.23444722592830658, 0.31845200061798096, 0.3751155734062195, 0.42847707867622375, 0.4682340621948242, 0.5148593187332153, 0.5408796668052673, 0.5696737766265869, 0.59661865234375, 0.6181482076644897, 0.6330735683441162, 0.6396777033805847, 0.651168942451477, 0.6691322326660156, 0.6760005354881287, 0.6802271604537964, 0.689869225025177, 0.6944921612739563, 0.6972658634185791, 0.7008321285247803, 0.7071720957756042, 0.7120591998100281, 0.7124554514884949, 0.7235503792762756, 0.7214370369911194, 0.7219653725624084, 0.7255316376686096, 0.726192057132721, 0.7341170310974121, 0.7289658188819885, 0.7372870445251465, 0.7448157668113708, 0.7368907928466797, 0.7437590956687927, 0.7477215528488159, 0.7432307600975037, 0.748249888420105, 0.7441553473472595, 0.7478536367416382, 0.7471932172775269, 0.7539294958114624, 0.7526086568832397, 0.7500990629196167, 0.757099449634552, 0.7568352818489075, 0.7588165402412415, 0.7630431652069092, 0.7611940503120422, 0.7627789974212646, 0.7672698497772217, 0.7666094303131104, 0.7707040309906006, 0.763439416885376, 0.7663452625274658, 0.7663452625274658, 0.7676661014556885, 0.7718927264213562, 0.7725531458854675, 0.774270236492157, 0.7671377658843994, 0.7783648371696472, 0.7766477465629578, 0.7791573405265808, 0.7753269076347351], "val_loss": [1.9336908885410853, 1.8881888389587402, 1.8176771572657995, 1.7060937200273787, 1.5423079558781214, 1.3441525868007116, 1.1573097365243095, 1.0122826099395752, 0.9126554216657367, 0.8444570984159198, 0.792053392955235, 0.7504798173904419, 0.7206265926361084, 0.6965709413800921, 0.6762571334838867, 0.6587020329066685, 0.6430435691561017, 0.6338728325707572, 0.6208942447389875, 0.6081027984619141, 0.6017751182828631, 0.5942394222532, 0.5827557359422956, 0.5772792611803327, 0.5711288281849453, 0.5643664087568011, 0.5559474740709577, 0.5528083869389125, 0.5469025543757847, 0.5414896351950509, 0.5375148398535592, 0.5351819310869489, 0.5289837121963501, 0.529023562158857, 0.52024245262146, 0.5175998210906982, 0.5135042667388916, 0.5101948976516724, 0.5073819501059396, 0.5076039178030831, 0.5040958949497768, 0.5001570497240339, 0.4998847075871059, 0.49414890153067453, 0.49081601415361675, 0.4880890505654471, 0.4875503437859671, 0.48714048521859304, 0.4821615900312151, 0.4814514773232596, 0.4794212750026158, 0.4769452469689505, 0.47575177465166363, 0.47539176259722027, 0.47051000595092773, 0.4701824528830392, 0.46851655415126253, 0.46439681734357563, 0.4646551268441336, 0.46315487793513704, 0.46189907618931364, 0.45874074527195524, 0.46032372542790007, 0.45852810995919363, 0.4550741229738508], "val_accuracy": [0.30266666412353516, 0.390666663646698, 0.45233333110809326, 0.503333330154419, 0.5416666865348816, 0.5943333506584167, 0.637666642665863, 0.6656666398048401, 0.6766666769981384, 0.6866666674613953, 0.6949999928474426, 0.6976666450500488, 0.7093333601951599, 0.7123333215713501, 0.7200000286102295, 0.7260000109672546, 0.7319999933242798, 0.7289999723434448, 0.7329999804496765, 0.7360000014305115, 0.7453333139419556, 0.7416666746139526, 0.7456666827201843, 0.7573333382606506, 0.7453333139419556, 0.753333330154419, 0.7639999985694885, 0.7583333253860474, 0.762666642665863, 0.7599999904632568, 0.7703333497047424, 0.7613333463668823, 0.7676666378974915, 0.7630000114440918, 0.7706666588783264, 0.7670000195503235, 0.7756666541099548, 0.7726666927337646, 0.7726666927337646, 0.7703333497047424, 0.7773333191871643, 0.7803333401679993, 0.7720000147819519, 0.781000018119812, 0.7816666960716248, 0.7836666703224182, 0.7846666574478149, 0.7829999923706055, 0.793666660785675, 0.7889999747276306, 0.7879999876022339, 0.7950000166893005, 0.7870000004768372, 0.7839999794960022, 0.7950000166893005, 0.7946666479110718, 0.7996666431427002, 0.8029999732971191, 0.7986666560173035, 0.8050000071525574, 0.7956666946411133, 0.8003333210945129, 0.7946666479110718, 0.7943333387374878, 0.8036666512489319]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 6, 3, 3, 2, 8, 2, 5, 8, 5, 2, 0, 2, 2, 5, 6, 1, 8, 2, 4, 5, 4, 9, 5, 6, 9, 2, 9, 2, 2, 9, 3, 5, 3, 9, 9, 6, 8, 2, 0, 5, 3, 9, 1, 6, 2, 3, 2, 1, 3, 5, 9, 3], [1, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 2, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [28, 33, 23, 26, 0, 39, 33, 75, 8, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [27, 49, 44, 92]], "fitness": -0.6868571639060974, "mapping_values": [1, 39, 39, 24, 15, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), alpha)), tf.math.square(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), alpha))))))))))))), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2777046793251303, 2.0821541801750416, 1.5271175614657924, 1.2981129393459798, 0.9585761506764361, 0.8955713176314762, 0.8138055733922073, 0.8083832510914927, 0.7535634484226205, 0.7443442927407016, 0.6938529974906326, 0.6682002656826049, 0.6484481010139737, 0.6266848421084206, 0.6090501876413358, 0.5785621492429069, 0.5684431208878964, 0.5585783840863302, 0.5457370626282431, 0.5286886896423896, 0.5205476060834433, 0.507655601026895, 0.4927325193136596, 0.49611725309710414, 0.4822984659920563, 0.477913904014501, 0.4713865850682209, 0.455144430211412, 0.4545875539585678, 0.4445895117704721, 0.44081622617607813, 0.42477104263440446, 0.42548802308024763, 0.42456795475376186, 0.40422943872136996, 0.4034937224005821], "accuracy": [0.1558578759431839, 0.36283186078071594, 0.48831066489219666, 0.5806366205215454, 0.6579051613807678, 0.6740192770957947, 0.6964733600616455, 0.6960771083831787, 0.7123233675956726, 0.7182670831680298, 0.7407211661338806, 0.7448157668113708, 0.748249888420105, 0.7619865536689758, 0.7676661014556885, 0.7812706232070923, 0.7862898111343384, 0.7935543656349182, 0.7931581139564514, 0.7943468689918518, 0.8026680946350098, 0.8099326491355896, 0.8133667707443237, 0.8113855719566345, 0.8104609847068787, 0.8149517774581909, 0.8201030492782593, 0.8191784620285034, 0.8294808864593506, 0.829216718673706, 0.829216718673706, 0.839519202709198, 0.8343679904937744, 0.8343679904937744, 0.8450667262077332, 0.8488970994949341], "val_loss": [1.886706829071045, 1.475670235497611, 0.8499952214104789, 0.7329250403812954, 0.7011421918869019, 0.6120000566755023, 0.5968944004603794, 0.5768496990203857, 0.5632420097078595, 0.5321872574942452, 0.5275323561259678, 0.4680215971810477, 0.4685511589050293, 0.4736885002681187, 0.44862741231918335, 0.4316725049700056, 0.41889473370143343, 0.42495311158043997, 0.4170193501881191, 0.4038070184843881, 0.3989406313214983, 0.4013221689632961, 0.3986892104148865, 0.39113393000194, 0.3842833297593253, 0.38003058092934744, 0.38095602818897795, 0.38053327798843384, 0.37731541054589407, 0.36900804724012104, 0.36306809527533396, 0.36850502661296297, 0.36719049726213726, 0.3596010037830898, 0.35721094267708914, 0.3523069790431431], "val_accuracy": [0.3606666624546051, 0.5103333592414856, 0.6736666560173035, 0.7016666531562805, 0.7160000205039978, 0.721666693687439, 0.7083333134651184, 0.7350000143051147, 0.7549999952316284, 0.765999972820282, 0.753000020980835, 0.7853333353996277, 0.781000018119812, 0.7749999761581421, 0.7903333306312561, 0.8109999895095825, 0.812666654586792, 0.8166666626930237, 0.8203333616256714, 0.8196666836738586, 0.8263333439826965, 0.8256666660308838, 0.8306666612625122, 0.8286666870117188, 0.8343333601951599, 0.843666672706604, 0.8423333168029785, 0.8389999866485596, 0.8426666855812073, 0.8450000286102295, 0.8519999980926514, 0.843666672706604, 0.8446666598320007, 0.8456666469573975, 0.8519999980926514, 0.8503333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 3, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 0, 1, 2, 1, 0, 1, 2, 1, 2, 0, 2, 1, 0, 2, 0, 0, 2, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 63, 96, 87, 75, 29, 74, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.6588571667671204, "mapping_values": [1, 37, 37, 25, 12, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))))))))), tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2577299497634855, 1.8136014905603821, 1.3060120957449772, 0.9134642761050592, 0.8441077558167024, 0.8228945164097267, 0.7508931219097551, 0.730314756090048, 0.6980836500329207, 0.6531606239885812, 0.6300676078403379, 0.5998539980203248, 0.5929372579886724, 0.5792686396570348, 0.5619974063529535, 0.5455285697612529, 0.530694129342306, 0.5076699815862734, 0.49969395083081153, 0.47578149680464005, 0.46839831665742826, 0.45860137399854345, 0.437930112198564, 0.44721831562591186, 0.42372718391606146, 0.4191320089143832, 0.40133057954115814, 0.3940124620638346, 0.38272816219885336, 0.37821192793590425, 0.37304878903654004, 0.36942261749916167, 0.36994015600907726, 0.361059267940365, 0.3499511399517568, 0.3634667672328095, 0.3451666276350375], "accuracy": [0.1942940205335617, 0.42147669196128845, 0.5646545886993408, 0.659490168094635, 0.6907938122749329, 0.6897371411323547, 0.7154933214187622, 0.722757875919342, 0.7395324110984802, 0.7560427784919739, 0.7643640041351318, 0.7775723338127136, 0.776251494884491, 0.7843085527420044, 0.7865539789199829, 0.7960638999938965, 0.7972526550292969, 0.8050455451011658, 0.8128384351730347, 0.8239334225654602, 0.8191784620285034, 0.8220842480659485, 0.8329150676727295, 0.8330471515655518, 0.8407079577445984, 0.8421608805656433, 0.8479725122451782, 0.8467837572097778, 0.8535200357437134, 0.8541803956031799, 0.8565579056739807, 0.8555012345314026, 0.8570862412452698, 0.863029956817627, 0.8595958352088928, 0.8639545440673828, 0.863558292388916], "val_loss": [1.8081567628043038, 0.9685117517198835, 0.682985782623291, 0.6753095218113491, 0.5790355375834874, 0.561156017439706, 0.5829149995531354, 0.5370003155299595, 0.4893441881452288, 0.4667633942195347, 0.44965801920209614, 0.4359331727027893, 0.42732101678848267, 0.4391954796654837, 0.41868983847754343, 0.41160174778529574, 0.41514818157468525, 0.40273275545665194, 0.39122709206172396, 0.3903901151248387, 0.3834881271634783, 0.37919516222817556, 0.3904252222606114, 0.3815985151699611, 0.36542826890945435, 0.36683997937611174, 0.3717572603906904, 0.3660519208226885, 0.36329964229038786, 0.37447243077414377, 0.36959872926984516, 0.357066742011479, 0.36697632925851004, 0.3771748798234122, 0.36997715064457487, 0.3835613301822117, 0.36635818651744295], "val_accuracy": [0.4050000011920929, 0.6543333530426025, 0.7093333601951599, 0.7146666646003723, 0.7273333072662354, 0.7413333058357239, 0.7540000081062317, 0.7556666731834412, 0.7789999842643738, 0.7816666960716248, 0.7919999957084656, 0.8069999814033508, 0.8029999732971191, 0.7956666946411133, 0.8076666593551636, 0.8173333406448364, 0.8206666707992554, 0.8213333487510681, 0.8353333473205566, 0.8370000123977661, 0.8399999737739563, 0.840666651725769, 0.8393333554267883, 0.8420000076293945, 0.8493333458900452, 0.8579999804496765, 0.8493333458900452, 0.8539999723434448, 0.8516666889190674, 0.8526666760444641, 0.8619999885559082, 0.8646666407585144, 0.8613333106040955, 0.8519999980926514, 0.862333357334137, 0.8569999933242798, 0.8610000014305115]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 2, 5, 8, 5, 2, 0, 2, 2, 5, 6, 1, 8, 2, 4, 3, 4, 2, 2, 6, 9, 2, 9, 3, 2, 0, 3, 5, 0, 9, 6, 6, 8, 2, 0, 5, 3, 9, 1, 6, 2, 3, 2, 1, 3, 5, 9, 3], [0, 2, 1, 2, 2, 1, 0, 1, 2, 0, 2, 2, 2, 1, 0, 1, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 38, 39, 74, 50, 29, 74, 88, 45, 77, 61, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 0, 1, 0, 3], [27, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 82, 82, 53, 29, 12, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 68, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, grad))))))))), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), grad)))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.multiply(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 5, 2, 8, 4, 5, 3, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 1, 1, 0, 0, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(grad, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(beta)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 6, 6, 9, 2, 9, 2, 2, 0, 1, 1, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [1, 2, 2, 2, 2, 1, 0, 1, 2, 0, 1, 2, 2, 1, 0, 1, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 38, 39, 74, 75, 29, 74, 88, 45, 77, 61, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 6, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [27, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [8, 2, 2, 4, 2, 2, 8, 8, 5, 8, 6, 2, 6, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 6, 2, 9, 2, 2, 3, 2, 9, 1, 5, 8, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [0, 2, 0, 1, 1, 1, 2, 1, 0, 0, 2, 0, 2, 1, 2, 2, 1, 0, 0, 1, 0, 1, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 38, 39, 74, 75, 29, 74, 88, 45, 77, 61, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 3, 2, 3, 0, 1, 0, 3], [95, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [136579519.76649538, 2541275314.331, 11808809554.030907, 33350194353.58711, 70094303883.91916, 129364310150.98244], "accuracy": [0.09615638852119446, 0.10117553919553757, 0.09668471664190292, 0.09721305221319199, 0.10421344637870789, 0.09602430462837219], "val_loss": [506165540.5714286, 4046767250.285714, 13654999040.0, 32363978752.0, 63206682038.85714, 109216935350.85715], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 0, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 89, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 3, 2, 3, 0, 1, 0, 3], [51, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1476144313.4420996, 27481852117.42914, 127725586574.01558, 360748512973.51685, 758242269088.5115, 1399439125192.242], "accuracy": [0.09615638852119446, 0.10117553919553757, 0.09668471664190292, 0.09721305221319199, 0.10421344637870789, 0.09602430462837219], "val_loss": [5472503954.285714, 43767600859.42857, 147701675739.42856, 350092806436.5714, 683752872813.7142, 1181515214262.8572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 8, 8, 3, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 15, 8, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))))))), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [27.16993785738992, 87363971.38745071, 2.353574635818445, 2.321872805560254, 7.351222113145851e+18, 2.324056439758087], "accuracy": [0.09708096832036972, 0.09602430462837219, 0.09787346422672272, 0.09919429570436478, 0.09853387624025345, 0.09417514503002167], "val_loss": [2.0354416029793874, 2.0356778417314803, 1.9993744577680315, 1.982111930847168, 2.003079686846052, 1.9818448339189803], "val_accuracy": [0.10400000214576721, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 6, 6, 9, 2, 9, 2, 2, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [6, 2], [75], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(grad, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 2, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 6, 6, 9, 2, 9, 2, 2, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 2, 1, 3, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [6, 2], [75], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 6, 2, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [61, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302525876834644, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [31, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), beta), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302231445540495, 2.3139414987890334, 2.8395512627730235, 13.671527902857346, 50.60454920792797, 114.74415053081802], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.975794724055699, 2.029618263244629, 4.704122952052525, 26.676624843052455, 72.1721431187221, 141.2022923060826], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))))))))), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 9, 5, 8, 5, 2, 0, 2, 2, 5, 6, 1, 8, 2, 4, 5, 4, 6, 2, 6, 3, 2, 9, 2, 2, 0, 3, 5, 0, 9, 9, 6, 8, 2, 0, 5, 3, 9, 1, 6, 2, 3, 2, 1, 3, 5, 9, 3], [1, 2, 0, 1, 2, 0, 2, 2, 2, 1, 1, 0, 2, 1, 0, 2, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 42, 39, 74, 75, 29, 74, 88, 45, 77, 61, 79, 8], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.0674285739660263, "mapping_values": [1, 24, 24, 16, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(alpha)))), grad), tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), beta), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [8.119310610833955e+16, 9.015300113561349e+16, 8.85082605735953e+16, 8.809439469416595e+16, 8.694176748211149e+16, 9.368746668478555e+16], "accuracy": [0.08506141602993011, 0.08321225643157959, 0.0866464152932167, 0.08638224750757217, 0.08928807079792023, 0.08730682730674744], "val_loss": [7.609864286738842e+16, 7.609864041312139e+16, 7.609864041312139e+16, 7.609862077898518e+16, 7.609862077898518e+16, 7.609861832471816e+16], "val_accuracy": [0.0729999989271164, 0.0729999989271164, 0.0729999989271164, 0.0729999989271164, 0.0729999989271164, 0.0729999989271164]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 0, 2, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(grad, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.302933525021963, 2.3025041276500713, 2.303077946564525, 2.302261491823883, 2.302296330789927, 2.3025989315812425], "accuracy": [0.08677849918603897, 0.09338264167308807, 0.09008057415485382, 0.08836349099874496, 0.09192973375320435, 0.08730682730674744], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 3, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302933525021963, 2.3025041276500713, 2.303077946564525, 2.302261491823883, 2.302296330789927, 2.3025989315812425], "accuracy": [0.08677849918603897, 0.09338264167308807, 0.09008057415485382, 0.08836349099874496, 0.09192973375320435, 0.08730682730674744], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 3, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 0, 2, 1, 0, 1, 2, 0, 1, 2, 2, 1, 0, 1, 1, 0, 3, 1, 0, 3, 0, 1, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 33, 57, 10, 38, 39, 74, 75, 29, 74, 88, 45, 77, 61, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [42], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 3, 2, 3, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302933525021963, 2.3025041276500713, 2.303077946564525, 2.302261491823883, 2.302296330789927, 2.3025989315812425], "accuracy": [0.08677849918603897, 0.09338264167308807, 0.09008057415485382, 0.08836349099874496, 0.09192973375320435, 0.08730682730674744], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 0, 3, 2, 2, 8, 4, 5, 8, 6, 0, 0, 3, 5, 5, 6, 1, 8, 4, 4, 5, 4, 9, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [40, 33, 23, 15, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [6, 2], [75], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 9, 9, 8, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 3, 2, 3, 0, 1, 0, 3], [14, 29, 44, 92]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036120952537678, 2.30483875777255, 2.307071044507705, 2.307946771127421, 2.3097470257937585, 2.3116705067767724], "accuracy": [0.08519349992275238, 0.08770307898521423, 0.08308017253875732, 0.07687227427959442, 0.07700435817241669, 0.06960771232843399], "val_loss": [1.9725102015904017, 1.9740456172398158, 1.9755801473345076, 1.9771368162972587, 1.9787182126726424, 1.9802902766636439], "val_accuracy": [0.029666665941476822, 0.02433333359658718, 0.02199999988079071, 0.018333332613110542, 0.015333333052694798, 0.014333332888782024]}}]