[{"genotype": [[0], [0, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [5], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1], [16, 9, 50]], "fitness": -0.7828571200370789, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), beta), tf.math.square(tf.math.square(alpha)))))", "other_info": {"loss": [2.3012228805029067, 2.3033806021817216, 2.2993842304311864, 2.2934773159127873, 2.290838710321112, 2.2862046008033836, 2.2820516942971105, 2.2782195701795627, 2.271638168398699, 2.2655995357242857, 2.258635898323548, 2.242547981585683, 2.2151842582117154, 2.166822134212433, 2.0283284531041472, 1.7410921106217576, 1.442766414814779, 1.2464201206292427, 1.1230111215817158, 1.0424606658527171, 0.9784599280927349, 0.9409396363728082, 0.9001733510564457, 0.8756574105356726, 0.8447284559453436, 0.8094670331835542, 0.8054366408715773, 0.7904732149148961, 0.7775679316109418, 0.7781472558500335, 0.7493625206560617, 0.7415391726107126, 0.7394380089456001, 0.7258237611820764, 0.7088454388482553, 0.6989676943072207, 0.6978529071244172, 0.6955633825078664, 0.6847792844793753, 0.6859100681285911, 0.6804931767234681, 0.6782044972867667, 0.6736885122005194, 0.6658088972917747, 0.6558211325433954, 0.6601187750380257, 0.6545051302907962, 0.6383673191275249, 0.6470527030127066, 0.6288208539507031, 0.6345442123007482, 0.62791409384321, 0.6096734171687745, 0.6091625842798057, 0.6177460693128987, 0.6068220392524952, 0.6043913546507275, 0.5956356132098193, 0.5911291878000777, 0.591467637285785, 0.598576800154972, 0.5763903559238337, 0.5869558671556523, 0.5910805406477221, 0.5786997140469473, 0.5768495730798888, 0.5697797450249646, 0.5672335867175746, 0.5651447307069966, 0.5556674428966146, 0.5503383292860249, 0.5531448135286542, 0.545713163472406, 0.5492987640624222, 0.5352874925784966, 0.5322388833571482, 0.5353688023518955, 0.5392647922834181, 0.539486730914342, 0.5343002726719631, 0.5224045052772122, 0.5190806084887825, 0.5109952051547288, 0.5143577611331438, 0.5169897385796756, 0.513400557262865, 0.5174793455744338, 0.5076481273240102, 0.5002868794935128, 0.5018588882616215], "accuracy": [0.09285431355237961, 0.09047681838274002, 0.10447761416435242, 0.11874257028102875, 0.12323339283466339, 0.12930920720100403, 0.1394795924425125, 0.1546691358089447, 0.16470743715763092, 0.17170783877372742, 0.1814819723367691, 0.19799233973026276, 0.21542729437351227, 0.22586184740066528, 0.2849029302597046, 0.37062475085258484, 0.4702152907848358, 0.5299167633056641, 0.5775987505912781, 0.6149781942367554, 0.6355831623077393, 0.6491876840591431, 0.6649055480957031, 0.6720380187034607, 0.6892088055610657, 0.6993792057037354, 0.7021529674530029, 0.6984546184539795, 0.7098137736320496, 0.7140403985977173, 0.7166820764541626, 0.722757875919342, 0.7211728692054749, 0.7220974564552307, 0.7301545143127441, 0.7428345084190369, 0.737947404384613, 0.7441553473472595, 0.7416457533836365, 0.7413815855979919, 0.7434949278831482, 0.7493065595626831, 0.7454761862754822, 0.7485140562057495, 0.7524765729904175, 0.7541936039924622, 0.7582882046699524, 0.763439416885376, 0.7569673657417297, 0.7607977986335754, 0.7648923397064209, 0.7667415142059326, 0.7670056819915771, 0.7671377658843994, 0.7696473598480225, 0.7754589915275574, 0.7713643908500671, 0.7825914621353149, 0.7798177003860474, 0.776251494884491, 0.77677983045578, 0.7889314293861389, 0.7796856164932251, 0.7815347909927368, 0.7825914621353149, 0.7847048044204712, 0.7901201844215393, 0.7889314293861389, 0.7903843522071838, 0.7938185334205627, 0.7971205711364746, 0.7972526550292969, 0.7964601516723633, 0.7950072884559631, 0.8024039268493652, 0.7985734939575195, 0.8020076751708984, 0.8012151718139648, 0.8017435073852539, 0.8029322624206543, 0.8074230551719666, 0.8057059645652771, 0.8113855719566345, 0.8127063512802124, 0.8086118102073669, 0.8075551390647888, 0.8053097128868103, 0.8129705190658569, 0.8148196935653687, 0.8112534880638123], "val_loss": [1.9709241730826241, 1.9697165489196777, 1.96573121207101, 1.9610115459987096, 1.957315104348319, 1.9537353515625, 1.9502097538539342, 1.9455913816179549, 1.9386602810450964, 1.930037157876151, 1.9185125487191337, 1.8984851837158203, 1.8571961266653878, 1.7628356388636999, 1.4849628720964705, 1.1228738171713692, 0.874539988381522, 0.7878922053745815, 0.7698381628308978, 0.6915808745792934, 0.6693788766860962, 0.630484938621521, 0.6223919221333095, 0.5917061226708549, 0.5724294185638428, 0.5574802500861031, 0.5566901309149606, 0.5556959424700055, 0.5464185135705131, 0.5407398428235736, 0.5280063833509173, 0.529628072466169, 0.5248176540647235, 0.5201808554785592, 0.5114884887422834, 0.5065896851675851, 0.4998053993497576, 0.5061665943690709, 0.49966066224234446, 0.4931648629052298, 0.501010503087725, 0.4872776780809675, 0.48170522281101774, 0.487798878124782, 0.48282808916909353, 0.4968475784574236, 0.47502592631748747, 0.4721552814756121, 0.47107131140572683, 0.46396676131657194, 0.4609414679663522, 0.4683095897947039, 0.4550600392477853, 0.4512655735015869, 0.45157008511679514, 0.4488821881158011, 0.44914025919778006, 0.44343980721064974, 0.44040182658604216, 0.4448842576571873, 0.42851104055132183, 0.4300808140209743, 0.4246306759970529, 0.424784106867654, 0.42111171994890484, 0.42051190989358084, 0.4187506948198591, 0.4198533892631531, 0.42108069147382465, 0.41256554637636456, 0.4269870264189584, 0.40477139609200613, 0.4020482727459499, 0.4019028885023935, 0.40081569978169035, 0.4014392239706857, 0.3955443501472473, 0.4046039070401873, 0.4033163785934448, 0.39464348554611206, 0.3900285278047834, 0.3919626474380493, 0.3910657252584185, 0.3898807764053345, 0.38363769224711824, 0.39244898727961947, 0.39248361757823397, 0.37755593231746126, 0.3772489939417158, 0.3772898146084377], "val_accuracy": [0.036666665226221085, 0.044333335012197495, 0.08666666597127914, 0.12466666847467422, 0.14433333277702332, 0.15800000727176666, 0.1860000044107437, 0.21533332765102386, 0.24666666984558105, 0.28333333134651184, 0.32100000977516174, 0.3343333303928375, 0.3636666536331177, 0.40966665744781494, 0.5080000162124634, 0.5416666865348816, 0.6176666617393494, 0.637666642665863, 0.6620000004768372, 0.7013333439826965, 0.7196666598320007, 0.7276666760444641, 0.7126666903495789, 0.734000027179718, 0.7443333268165588, 0.750333309173584, 0.7519999742507935, 0.7406666874885559, 0.7403333187103271, 0.7549999952316284, 0.7553333044052124, 0.7643333077430725, 0.7646666765213013, 0.7713333368301392, 0.7663333415985107, 0.7743333578109741, 0.7699999809265137, 0.7683333158493042, 0.7663333415985107, 0.7763333320617676, 0.762333333492279, 0.7746666669845581, 0.7833333611488342, 0.7763333320617676, 0.7766666412353516, 0.7736666798591614, 0.7856666445732117, 0.7886666655540466, 0.7870000004768372, 0.7973333597183228, 0.7893333435058594, 0.7896666526794434, 0.8003333210945129, 0.8053333163261414, 0.8019999861717224, 0.7953333258628845, 0.8019999861717224, 0.8069999814033508, 0.8009999990463257, 0.8086666464805603, 0.8163333535194397, 0.8153333067893982, 0.8146666884422302, 0.8153333067893982, 0.8226666450500488, 0.8230000138282776, 0.8233333230018616, 0.8153333067893982, 0.8220000267028809, 0.8266666531562805, 0.8206666707992554, 0.8289999961853027, 0.8306666612625122, 0.831333339214325, 0.828000009059906, 0.8339999914169312, 0.8306666612625122, 0.8223333358764648, 0.8333333134651184, 0.8339999914169312, 0.8343333601951599, 0.8363333344459534, 0.8330000042915344, 0.8323333263397217, 0.8396666646003723, 0.8316666483879089, 0.8333333134651184, 0.8376666903495789, 0.8363333344459534, 0.8370000123977661]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.7494285702705383, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta), alpha)))", "other_info": {"loss": [2.3020357728524057, 2.3001592973314335, 2.2921522134456653, 2.284731546712353, 2.278831054600333, 2.269217288379168, 2.2561751123369644, 2.2389143956823907, 2.2056981466386802, 2.1267552234713647, 1.9256788110059124, 1.5956514763432157, 1.3575422925530896, 1.167224878616746, 1.0629624754855693, 0.9938749002112909, 0.9612004938394544, 0.901999248387303, 0.8813013209957787, 0.8719256352424117, 0.8420759423407959, 0.8189605754191109, 0.8133498759490781, 0.7878634847465398, 0.7855728832942588, 0.7759509957886926, 0.7640870624309076, 0.7599452849014513, 0.7496436637988763, 0.7312343167496584, 0.7163998404151932, 0.722562744333728, 0.7096925608989916, 0.7087436652044972, 0.6994468683123258, 0.7009768726378227, 0.6832829168081882, 0.6722382109603862, 0.6708129387978219, 0.6661942599471912, 0.6620780665876685, 0.6559755897965996, 0.662291526424414, 0.654376537021062, 0.648487562138753, 0.6398904708083343], "accuracy": [0.09509972482919693, 0.09377889335155487, 0.11979923397302628, 0.1438383311033249, 0.16338661313056946, 0.18491612374782562, 0.2090873122215271, 0.2246730923652649, 0.24765552580356598, 0.27961960434913635, 0.33245277404785156, 0.43059042096138, 0.5107647776603699, 0.5719191431999207, 0.6078457236289978, 0.6304318904876709, 0.6477347612380981, 0.6618676781654358, 0.6670188903808594, 0.666358470916748, 0.6781138777732849, 0.6861709356307983, 0.694360077381134, 0.7071720957756042, 0.6980583667755127, 0.7054550051689148, 0.7063795924186707, 0.709549605846405, 0.7132478952407837, 0.7288337349891663, 0.7219653725624084, 0.7207766771316528, 0.726192057132721, 0.7320036888122559, 0.7300224304199219, 0.739400327205658, 0.7456082701683044, 0.7436270117759705, 0.7473253011703491, 0.7470611333847046, 0.7458723783493042, 0.7537974119186401, 0.7515519857406616, 0.7541936039924622, 0.7512878179550171, 0.7547219395637512], "val_loss": [1.9701497895377023, 1.9648707934788294, 1.9581961631774902, 1.9514077731541224, 1.9432837622506278, 1.933246340070452, 1.918609891619001, 1.894453457423619, 1.8444726807730538, 1.69877713067191, 1.3634825093405587, 1.0613142081669398, 0.8466062545776367, 0.7452220746449062, 0.6867345571517944, 0.6711390018463135, 0.6330763612474714, 0.6212652581078666, 0.6027934380940029, 0.5825064693178449, 0.571370005607605, 0.5675083058221, 0.569103479385376, 0.548866731779916, 0.5442579473767962, 0.5373755182538714, 0.5309421334947858, 0.5318598576954433, 0.517653056553432, 0.506888610976083, 0.514333963394165, 0.5100551162447248, 0.4995065246309553, 0.5041560104915074, 0.5154321363994053, 0.49270476613725933, 0.4809215750013079, 0.4862525633403233, 0.4834132364818028, 0.4783329112189157, 0.4754643440246582, 0.47588261536189486, 0.46101023469652447, 0.46740940638950895, 0.46074468748910086, 0.4581250122615269], "val_accuracy": [0.03966666758060455, 0.08399999886751175, 0.15933333337306976, 0.218666672706604, 0.289000004529953, 0.32199999690055847, 0.3310000002384186, 0.33500000834465027, 0.3449999988079071, 0.390666663646698, 0.47066667675971985, 0.5426666736602783, 0.624666690826416, 0.6913333535194397, 0.7006666660308838, 0.699999988079071, 0.7126666903495789, 0.7273333072662354, 0.7393333315849304, 0.7390000224113464, 0.7433333396911621, 0.7480000257492065, 0.7476666569709778, 0.7553333044052124, 0.7563333511352539, 0.7643333077430725, 0.7703333497047424, 0.7639999985694885, 0.7670000195503235, 0.7666666507720947, 0.7713333368301392, 0.7773333191871643, 0.777999997138977, 0.7763333320617676, 0.7716666460037231, 0.7870000004768372, 0.7893333435058594, 0.7803333401679993, 0.7673333287239075, 0.7836666703224182, 0.7916666865348816, 0.7853333353996277, 0.7876666784286499, 0.7900000214576721, 0.7893333435058594, 0.7870000004768372]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [3, 5, 2, 3, 2, 5, 5, 1], [1, 0, 2, 2, 0], [57, 9, 50]], "fitness": -0.6005714535713196, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta))))", "other_info": {"loss": [2.204356690785825, 2.207146905904842, 2.2084409615871, 2.0178789914386495, 1.808142566063684, 2.0011673239102183, 3.023429970306066, NaN, NaN, NaN], "accuracy": [0.2806762754917145, 0.2347113937139511, 0.23457930982112885, 0.284110426902771, 0.4053625762462616, 0.35622772574424744, 0.12534672021865845, 0.12772421538829803, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9645013128008162, 1.924274103982108, 1.8259681292942591, 1.5158789157867432, 1.0985488891601562, 2.7425174031938826, 1.499117646898542, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.23800000548362732, 0.2016666680574417, 0.46033334732055664, 0.6363333463668823, 0.10100000351667404, 0.3556666672229767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [7, 0, 1, 7, 5, 5, 9, 4, 0, 3, 2, 2, 2, 3, 3, 5, 6, 2, 7, 2, 9, 9], [3, 4, 3, 5, 3, 4, 5, 3, 2, 3, 1, 4, 0, 3, 3], [11, 84, 41, 19, 22], [0, 0, 1], [1], [2], [2], [76], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [3, 5, 2, 2, 1, 5, 5, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.48257142305374146, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))", "other_info": {"loss": [2.177481343859238, 2.1687701582640955, 2.25131571118102, 3.0478032657836613e+24, NaN, NaN, NaN], "accuracy": [0.2926958203315735, 0.23365473747253418, 0.2355038970708847, 0.23484347760677338, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9067390986851283, 1.7677958352225167, 1.4242688247135706, NaN, NaN, NaN, NaN], "val_accuracy": [0.22166666388511658, 0.47066667675971985, 0.40566667914390564, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [7, 0, 1, 9, 2, 5, 7, 4, 0, 3, 2, 2, 0, 0, 3, 3, 8, 2, 7, 2, 9, 9], [3, 3, 4, 1, 1, 3, 2, 4, 2, 1, 5, 4, 0, 3, 1], [11, 46, 41, 19, 22], [0, 0, 1], [0, 1], [2], [5], [76], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.3108571469783783, "mapping_values": [1, 2, 2, 1, 1, 0, 29, 29, 18, 11, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.negative(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.negative(tf.math.add(beta, tf.math.multiply(alpha, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.multiply(grad, tf.math.add(beta, beta)), grad))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.802226815036637, 2.5911519412493047, 2.3109596227028146, 2.285451884629342, 2.3056298210447363, 2.3037778227131804, 2.3032382390502577, 2.3034346750493944], "accuracy": [0.189274862408638, 0.1320829540491104, 0.18491612374782562, 0.1592920422554016, 0.10077928751707077, 0.09628847241401672, 0.09932637959718704, 0.09430722147226334], "val_loss": [3.5132747377668108, 1.9513818877083915, 1.6993040697915214, 1.9782498223440987, 1.9742320605686732, 1.9737721851893835, 1.9737909861973353, 1.973691735948835], "val_accuracy": [0.257666677236557, 0.19499999284744263, 0.2906666696071625, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3, 1, 1, 1, 3, 3, 0, 2, 4, 0, 0, 3, 1, 2, 5], [11, 61, 41, 19, 22], [0, 1, 1], [0, 1], [2], [0], [76], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.29171428084373474, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta)))", "other_info": {"loss": [2.2927499696673372, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11279883980751038, 0.16100911796092987, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8831306866237096, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.2150000035762787, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1], [0, 1], [0, 1], [2], [], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [2, 4, 2, 3, 4, 1, 5, 1, 4, 8, 1], [1, 0, 2, 2, 1, 2, 3, 0, 3], [57, 9, 50]], "fitness": -0.27085715532302856, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.802290257052219, 2.625170601955762, 2.912639874792244, 2.3081604196505383, 2.304054734540291, 2.3030834962915137], "accuracy": [0.189274862408638, 0.12415797263383865, 0.18134988844394684, 0.09985470771789551, 0.09721305221319199, 0.1014397069811821], "val_loss": [3.7049290793282643, 1.9678517069135393, 1.9818494660513741, 1.975212914603097, 1.9739936419895716, 1.9737140110560827], "val_accuracy": [0.26466667652130127, 0.2526666522026062, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1], [0, 1], [0], [2], [], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1, 2, 3, 0, 3], [57, 9, 50]], "fitness": -0.27000001072883606, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.8021367919789864, 2.6154111550862305, 2.4338748347978107, 2.306818862459553, 2.3035518260538113, 2.3030099684551897], "accuracy": [0.18914277851581573, 0.12336547672748566, 0.18702945113182068, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.633663994925363, 1.968991960797991, 1.98139830998012, 1.9747650963919503, 1.9739601952689034, 1.9737824031284876], "val_accuracy": [0.26233333349227905, 0.19766665995121002, 0.1003333330154419, 0.09799999743700027, 0.09866666793823242, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1], [0, 1], [0], [2], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [7, 0, 1, 7, 5, 6, 7, 4, 9, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3, 1, 1, 1, 3, 3, 0, 2, 1, 0, 0, 3, 1, 2, 5], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.16114285588264465, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 21, 15, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), beta))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))), tf.math.add(alpha, beta)), tf.math.add(beta, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.8026523232979623, 2.5268997256750474, 2.2265695205784715, 2.3049200387631488, 2.303325635819088, 2.3030811116333574, 2.302808375075792], "accuracy": [0.1884823739528656, 0.1262712925672531, 0.18901069462299347, 0.09879804402589798, 0.09840179979801178, 0.09760929644107819, 0.09642054885625839], "val_loss": [3.1321761267525807, 1.9513023921421595, 1.9761231967381068, 1.974133082798549, 1.973782675606864, 1.9736683028084892, 1.9736380577087402], "val_accuracy": [0.26100000739097595, 0.304666668176651, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.10133333504199982, 0.11533333361148834]}}, {"genotype": [[0], [1, 0, 1, 1], [0, 1], [0, 1], [0], [40], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [5, 2], [11, 61, 41, 19, 22], [0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1], [2, 6, 4], [5], [76], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [2, 4, 2, 3, 4, 1, 5, 1, 4, 8, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 4, 4, 2, 2, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3026492901765407, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1], [1, 1], [0, 1], [2], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 8, 9, 1, 5, 5, 1], [1, 0, 2, 2, 1, 2, 3, 0, 3], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0, 1], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [8, 5, 2, 3, 3, 5, 5, 1], [1, 0, 2, 2, 1, 2, 3, 0, 3], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [0, 5], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 5, 2, 4, 0, 5, 5, 1, 3, 6, 0, 9, 8, 3, 9, 4, 4, 0, 1, 7], [2, 0, 2, 2, 1], [57, 9, 50, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.square(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [1, 2, 2, 1], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 2, 3, 5, 1, 5, 1, 4, 8, 1], [1, 0, 2, 2, 1, 2, 3, 0, 3], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 12, 6, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(alpha), tf.math.subtract(tf.math.add(beta, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta), tf.math.square(tf.math.subtract(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1], [1, 1, 1, 1], [4, 5], [2, 2], [], [0, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [2, 4, 2, 3, 4, 1, 5, 1, 4, 8, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1], [96, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.829178002595177, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17210407555103302, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.122726031712124, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [3], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 5, 2, 3, 1, 5, 5, 1], [0, 0, 2, 2, 1], [61, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026492901765407, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1], [1, 1], [0], [2], [], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [9, 0, 1, 7, 5, 5, 1, 4, 0, 3, 2, 2, 2, 3, 4, 3, 8, 2, 7, 2, 9, 9], [1, 1, 1, 1, 3, 3, 0, 2, 4, 3, 0, 3, 1, 2, 1], [11, 61, 41, 19, 22], [0, 0, 1], [1], [2], [5], [76], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [3, 5, 2, 3, 1, 5, 5, 1], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0], [1, 1, 1], [0, 1], [0], [44], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [2, 4, 2, 3, 4, 1, 5, 1, 4, 8, 1], [1, 0, 2, 2, 1, 2, 3, 0, 3], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [19104137.50085138, 365097828.39994717, 1662557420.0501914, 4628940719.186369, 10101395598.421345, 18332826143.98732], "accuracy": [0.1018359512090683, 0.09708096832036972, 0.09549596905708313, 0.10632677376270294, 0.09311848133802414, 0.10011887550354004], "val_loss": [71957012.57142857, 574954422.8571428, 1939687131.4285715, 4596851126.857142, 8977126546.285715, 15511179264.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [3], [11, 61, 41, 19, 22], [1, 0, 1], [1], [2], [5], [76], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 9, 3, 1, 5, 5, 1], [2, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.014000000432133675, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.math.square(beta), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3018090798948987, 2.3300357277776587, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.06445647776126862, 0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9766544614519392, 2.0254624230521068, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.016333334147930145, 0.10499999672174454, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]