[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.817714273929596, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(alpha, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.590328838248625, 2.1719552711677776, 2.078714428356122, 1.7948860848001942, 1.2989471570737863, 1.0846301107169805, 1.0823665922895132, 0.8582528642124236, 0.8168109165222386, 0.7566233563967951, 0.7454853326243621, 0.720308904469273, 0.6846182750295167, 0.6788701376091802, 0.6272514799188834, 0.6619238541063585, 0.6096099388046728, 0.6151326467584326, 0.5781912602422228, 0.5760717494077434, 0.5600692040774454, 0.5524554835602182, 0.5552533278375836, 0.5319361447374724, 0.527514221897813, 0.5163570959743429, 0.5064290518482616, 0.49080989718547413, 0.5062447403242811, 0.4746598968014914, 0.45835749283993893, 0.45878287189357303, 0.4629585923079124, 0.43874786180307396, 0.445852590601568, 0.43140063739219725, 0.4212791629833332, 0.46185008246019105, 0.4171523399175733, 0.43631761238764244, 0.404479827745133, 0.3972985887642408, 0.39519212777667184, 0.40441117334233584, 0.3892520844637206, 0.39009290562802146], "accuracy": [0.2499009370803833, 0.25941091775894165, 0.30682867765426636, 0.4204200208187103, 0.5620129704475403, 0.59225994348526, 0.6219785809516907, 0.6785101294517517, 0.6906617283821106, 0.71100252866745, 0.7206445932388306, 0.724210798740387, 0.7452120184898376, 0.7409853339195251, 0.7627789974212646, 0.748778223991394, 0.7685906887054443, 0.7708360552787781, 0.7799497842788696, 0.7825914621353149, 0.7848368883132935, 0.7940827012062073, 0.7898560166358948, 0.7975168228149414, 0.8013472557067871, 0.8074230551719666, 0.8084797263145447, 0.8158763647079468, 0.81112140417099, 0.8239334225654602, 0.8294808864593506, 0.8289526104927063, 0.8248580098152161, 0.8366134166717529, 0.8370096683502197, 0.8417646288871765, 0.8454629778862, 0.8274996876716614, 0.8424250483512878, 0.8337075710296631, 0.8504821062088013, 0.8541803956031799, 0.852859616279602, 0.850350022315979, 0.8553691506385803, 0.8515387773513794], "val_loss": [1.9045312064034599, 1.968813214983259, 1.4006047248840332, 0.9388924666813442, 0.9038756574903216, 1.068467685154506, 0.6880442585263934, 0.6101782492228917, 0.6032731703349522, 0.5427969864436558, 0.5848504475184849, 0.5528828246252877, 0.5775559970310756, 0.4810271603720529, 0.47962914194379536, 0.4859118972505842, 0.4652750662394932, 0.43065169879368376, 0.4314902765410287, 0.4359550561223711, 0.4215835247720991, 0.4009493248803275, 0.4297796743256705, 0.4177488684654236, 0.42074975797108244, 0.40789393867765156, 0.4131208998816354, 0.39025758845465525, 0.4338802099227905, 0.36985560825892855, 0.39256737913404194, 0.3974038192204067, 0.3698633483478001, 0.3634012596947806, 0.3502735751015799, 0.3815292375428336, 0.35179610763277325, 0.35990339517593384, 0.361583479813167, 0.3502316049167088, 0.341684673513685, 0.3322769148009164, 0.35503012793404715, 0.3737922992025103, 0.33632270778928486, 0.34153553417750765], "val_accuracy": [0.25566667318344116, 0.1770000010728836, 0.4806666672229767, 0.628333330154419, 0.5713333487510681, 0.6086666584014893, 0.6763333082199097, 0.718999981880188, 0.7153333425521851, 0.7566666603088379, 0.7293333411216736, 0.7566666603088379, 0.7506666779518127, 0.7963333129882812, 0.7913333177566528, 0.7736666798591614, 0.781000018119812, 0.8069999814033508, 0.7963333129882812, 0.7996666431427002, 0.8050000071525574, 0.8106666803359985, 0.8059999942779541, 0.8119999766349792, 0.8220000267028809, 0.8100000023841858, 0.8146666884422302, 0.8246666789054871, 0.7953333258628845, 0.8429999947547913, 0.8376666903495789, 0.812666654586792, 0.8320000171661377, 0.8410000205039978, 0.843999981880188, 0.8296666741371155, 0.8543333411216736, 0.8446666598320007, 0.846666693687439, 0.846666693687439, 0.8610000014305115, 0.8529999852180481, 0.8416666388511658, 0.8433333039283752, 0.8610000014305115, 0.8583333492279053]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.088365117115761, 2.0068057529395045, 1.8557470384259438, 1.871989690852817, 1.3061945774394288, 1.0247705100848927, 0.7786829145183621, 0.7278651085748271, 0.7126856482559585, 0.6610131099113558, 0.6417106053124109, 0.606459093336353, 0.5860723122047033, 0.6220646552783844, 0.5811938603698081, 0.5746600525710781, 0.5456202742430228], "accuracy": [0.3027341067790985, 0.2859595715999603, 0.41104212403297424, 0.3807951509952545, 0.5555408596992493, 0.6326773166656494, 0.7062475085258484, 0.7195879220962524, 0.7265883088111877, 0.7477215528488159, 0.7519482374191284, 0.7687227725982666, 0.7777044177055359, 0.7663452625274658, 0.7775723338127136, 0.7790252566337585, 0.7924976944923401], "val_loss": [1.6628451687949044, 1.5363633632659912, 1.81588990347726, 1.1177540847233363, 1.0617201668875558, 0.6033934695380074, 0.577433603150504, 0.530143277985709, 0.5751495701926095, 0.5061305591038295, 0.48209084783281597, 0.4430907794407436, 0.47354657309395926, 0.5019573484148298, 0.515222566468375, 0.45368844270706177, 0.4476804903575352], "val_accuracy": [0.4336666762828827, 0.2750000059604645, 0.4166666567325592, 0.5493333339691162, 0.6330000162124634, 0.7390000224113464, 0.7269999980926514, 0.7459999918937683, 0.731333315372467, 0.7710000276565552, 0.7863333225250244, 0.800000011920929, 0.7823333144187927, 0.7540000081062317, 0.7463333606719971, 0.7856666445732117, 0.7983333468437195]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 8, 9, 4, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [32, 49, 44]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.276815164232487, 2.206064420904639, 2.068372185550519, 1.8392371793448916, 1.5501713033806395, 1.3182464622786771, 1.1975452189022886, 1.1004486677590268, 1.0364089766828501, 0.9761439459183118, 0.9351756798514065, 0.8893011210223294, 0.8740776802145369, 0.8455946339655231, 0.8245395404976656, 0.8101013710060769, 0.7910164949947801, 0.7802173293592624, 0.7694015280603024, 0.7572038896709559, 0.7514738622531757, 0.7363567086431911, 0.7193050524262925, 0.7246284986751553, 0.7046205968888932, 0.700845044688337, 0.6941250486380829, 0.6847848461887005, 0.6758083323792475, 0.6750203679896238, 0.674875056321642, 0.6655550199713233, 0.6655587329604387, 0.6499817359638, 0.6460783436250819, 0.639478408106251, 0.6389763085849376, 0.6363842962298647, 0.6385602235652358, 0.6220208176485127, 0.6226460759461185, 0.6269387966763657, 0.6182578956808443, 0.6139253476874986, 0.6152397794510002, 0.6116514356381008, 0.6096489123538532, 0.5959379262833501, 0.595189835747802, 0.5964253646287274, 0.591640287504661, 0.5929652562530018], "accuracy": [0.15691454708576202, 0.2926958203315735, 0.39426758885383606, 0.4511953592300415, 0.5112931132316589, 0.559899628162384, 0.5937128663063049, 0.6161669492721558, 0.637432336807251, 0.6598864197731018, 0.6742834448814392, 0.6868313550949097, 0.6822084188461304, 0.7003037929534912, 0.7054550051689148, 0.7104741930961609, 0.7147008180618286, 0.7215691208839417, 0.7238145470619202, 0.7276449799537659, 0.7284374833106995, 0.7360982894897461, 0.7429665923118591, 0.7351737022399902, 0.7436270117759705, 0.7453441023826599, 0.7540615797042847, 0.7491744756698608, 0.7526086568832397, 0.7518161535263062, 0.7569673657417297, 0.7578919529914856, 0.7574957013130188, 0.7652885913848877, 0.7630431652069092, 0.7677981853485107, 0.7662131786346436, 0.7725531458854675, 0.7671377658843994, 0.7770439982414246, 0.7712323069572449, 0.7708360552787781, 0.7753269076347351, 0.7770439982414246, 0.7778365015983582, 0.7777044177055359, 0.778232753276825, 0.7817989587783813, 0.7803460359573364, 0.7847048044204712, 0.7807422876358032, 0.7804781198501587], "val_loss": [1.9135488782610213, 1.820756299155099, 1.6388475213732039, 1.3629798207964217, 1.100719349724906, 0.9275535855974469, 0.8253520045961652, 0.762843268258231, 0.7175332648413522, 0.683827451297215, 0.6602876356669835, 0.6418024131229946, 0.6212911946432931, 0.6048692464828491, 0.5923868247440883, 0.5906449045453753, 0.5750791515622821, 0.5598841735294887, 0.5590032849993024, 0.5504143578665597, 0.5430490289415631, 0.5383573259626117, 0.5305114473615374, 0.5288195099149432, 0.5225777966635567, 0.5153057745524815, 0.5096734251294818, 0.5044693776539394, 0.5110349314553397, 0.4961673191615513, 0.4962599107197353, 0.4901939971106393, 0.4861613852637155, 0.48662446226392475, 0.4771679128919329, 0.4794217688696725, 0.47716220787593294, 0.4709059000015259, 0.47324749401637484, 0.4688880273274013, 0.4643689734595163, 0.46173100812094553, 0.46681674889155794, 0.4605263131005423, 0.45911215032849995, 0.45867625304630827, 0.45217818873269217, 0.45162464891161236, 0.45399975776672363, 0.44686528614589144, 0.44864646026066374, 0.449878454208374], "val_accuracy": [0.3700000047683716, 0.45366665720939636, 0.5320000052452087, 0.5960000157356262, 0.6489999890327454, 0.6836666464805603, 0.690666675567627, 0.6980000138282776, 0.7083333134651184, 0.721666693687439, 0.721666693687439, 0.7316666841506958, 0.7353333234786987, 0.7419999837875366, 0.7546666860580444, 0.7423333525657654, 0.7590000033378601, 0.7586666941642761, 0.7599999904632568, 0.7586666941642761, 0.7663333415985107, 0.7636666893959045, 0.765666663646698, 0.7746666669845581, 0.7706666588783264, 0.7803333401679993, 0.7720000147819519, 0.768666684627533, 0.7739999890327454, 0.7870000004768372, 0.7793333530426025, 0.7806666493415833, 0.7820000052452087, 0.7906666398048401, 0.7870000004768372, 0.7823333144187927, 0.7833333611488342, 0.7896666526794434, 0.7956666946411133, 0.7896666526794434, 0.793666660785675, 0.7956666946411133, 0.7973333597183228, 0.7986666560173035, 0.7933333516120911, 0.7956666946411133, 0.809333324432373, 0.8053333163261414, 0.7983333468437195, 0.8086666464805603, 0.8033333420753479, 0.7963333129882812]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.9617975865057855, 1.5073992939767522, 1.0023311812801132, 0.917002646898817, 0.8758341225225534, 0.7656388158150133, 0.765763343829111, 0.6963854747488671, 0.7097965468819966, 0.6636332617916404, 0.656308950867399, 0.621633199928396, 0.6337010257232458, 0.5962790244637448, 0.5800481864946583, 0.6004349658982376], "accuracy": [0.34526482224464417, 0.48249900341033936, 0.6293752193450928, 0.6630563735961914, 0.6660943031311035, 0.7041342258453369, 0.7024171352386475, 0.728701651096344, 0.7309470176696777, 0.7461365461349487, 0.7448157668113708, 0.7623828053474426, 0.7578919529914856, 0.7733456492424011, 0.776251494884491, 0.7709681391716003], "val_loss": [1.5891268253326416, 0.7744885853358677, 0.7295845746994019, 0.6141408681869507, 0.5962842702865601, 0.6216234820229667, 0.5707601649420602, 0.5112620932715279, 0.5307197059903827, 0.5112450463431222, 0.49764667238507954, 0.47744153227124897, 0.4561087574277605, 0.4687791040965489, 0.47020367213657926, 0.44052822249276297], "val_accuracy": [0.34566667675971985, 0.6703333258628845, 0.6523333191871643, 0.715666651725769, 0.7316666841506958, 0.7153333425521851, 0.7289999723434448, 0.765333354473114, 0.7463333606719971, 0.7459999918937683, 0.7979999780654907, 0.7906666398048401, 0.7940000295639038, 0.7856666445732117, 0.7873333096504211, 0.7916666865348816]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.1502857208251953, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [3.2737041798879947, 2.5043467270180124, 2.4088548848405726, 2.375292947531345, 2.3741506942274895, 2.3559948413001393, 2.340158749281722, 2.360591859267042, 2.35294054417704], "accuracy": [0.24237221479415894, 0.18253862857818604, 0.1394795924425125, 0.11517632752656937, 0.11808215826749802, 0.09470347315073013, 0.10408136248588562, 0.10302469879388809, 0.1002509593963623], "val_loss": [1.984833036150251, 2.0508884021214078, 1.9632200513567244, 1.9846322877066476, 2.003133978162493, 2.024099486214774, 2.0128805296761647, 2.010831560407366, 2.025731154850551], "val_accuracy": [0.09866666793823242, 0.08799999952316284, 0.12099999934434891, 0.1316666603088379, 0.09966666996479034, 0.09866666793823242, 0.10100000351667404, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [38, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 42, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [69751.55023323455, 1333142.706940959, 6225670.995377097, 17294215.63941355, 36958828.33020737, 66363468.526746795], "accuracy": [0.09800554811954498, 0.10355303436517715, 0.1014397069811821, 0.09655263274908066, 0.10051512718200684, 0.10157178342342377], "val_loss": [267628.27678571426, 2122746.285714286, 7144620.428571428, 16912541.14285714, 33005816.0, 57003725.71428572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 9, 1, 4, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [38, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 42, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [2, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.052172765135765076, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.052172765135765076, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [99, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 2, 8, 3, 3, 3, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 1, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [2, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, alpha), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(beta)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [8, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301780421200713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301780421200713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [54, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302128167751364, 2.3029611840964215, 2.302972074764878, 2.303127101667175, 2.303123982039897, 2.3029971023859868, 2.303001445786135, 2.3028802090411675, 2.302999514063446, 2.3028483216977627, 2.302875690204498], "accuracy": [0.09298639744520187, 0.09708096832036972, 0.09589222073554993, 0.09642054885625839, 0.08836349099874496, 0.09430722147226334, 0.09655263274908066, 0.0940430611371994, 0.0944393053650856, 0.09774138033390045, 0.09681680053472519], "val_loss": [1.9736940520150321, 1.9737272262573242, 1.9736286572047643, 1.973653793334961, 1.9736419405255998, 1.9735408510480608, 1.9735985483442033, 1.9736603328159876, 1.9736385345458984, 1.9737072672162737, 1.9736851964678084], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.10400000214576721, 0.10400000214576721, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 8, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 20, 13, 3, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3015079144646764, 2.3027746354930545, 2.3022001494096647, 2.302496211025866, 2.301222459152941, 2.2994776896954274], "accuracy": [0.09549596905708313, 0.08836349099874496, 0.09245806187391281, 0.09311848133802414, 0.09311848133802414, 0.0956280529499054], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 1, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [3, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(sigma)), alpha)", "other_info": {"loss": [2.3015079144646764, 2.3027746354930545, 2.3022001494096647, 2.302496211025866, 2.301222459152941, 2.2994776896954274], "accuracy": [0.09549596905708313, 0.08836349099874496, 0.09245806187391281, 0.09311848133802414, 0.09311848133802414, 0.0956280529499054], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [2, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(alpha))", "other_info": {"loss": [2.3020502513252654, 2.3051495341702917, 2.306354226311515, 2.309362090668422, 2.3101249239023067, 2.3106746215704423], "accuracy": [0.09576013684272766, 0.08400475233793259, 0.08506141602993011, 0.08400475233793259, 0.08017434924840927, 0.08598599582910538], "val_loss": [1.97208799634661, 1.9736275672912598, 1.9751253128051758, 1.977264404296875, 1.9793366023472376, 1.9812731742858887], "val_accuracy": [0.02800000086426735, 0.023000000044703484, 0.020666666328907013, 0.02199999988079071, 0.023666666820645332, 0.0273333340883255]}}]