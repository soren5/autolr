[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8268571496009827, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9522260451565612, 1.389465731542187, 0.9879282205458472, 0.8817549038084507, 0.8559673071978288, 0.7394742051749859, 0.7260155659451886, 0.6963657939895395, 0.668931701833294, 0.6381176867426473, 0.6148726869930035, 0.6087861628170893, 0.5924723139134821, 0.588245165716498, 0.5834211290725045, 0.5504983509725284, 0.5745365562581934, 0.5481725533199726, 0.5350410114063988, 0.5380823108829039, 0.5021149287795693, 0.4964064753460232, 0.5174769201944407, 0.46998801130691714, 0.48129424695656237, 0.45021337223893787, 0.49935293933734637, 0.4445984185119866], "accuracy": [0.35068023204803467, 0.49887728691101074, 0.6299035549163818, 0.6701889038085938, 0.6897371411323547, 0.7275128960609436, 0.715889573097229, 0.7334566116333008, 0.7437590956687927, 0.7585523724555969, 0.7618544697761536, 0.7685906887054443, 0.7724210619926453, 0.7816668748855591, 0.7755910754203796, 0.7942147850990295, 0.7865539789199829, 0.7909126877784729, 0.8012151718139648, 0.7959318161010742, 0.8096684813499451, 0.8170651197433472, 0.8004226684570312, 0.8269713521003723, 0.821820080280304, 0.835160493850708, 0.8132346868515015, 0.8345000743865967], "val_loss": [1.2981178760528564, 0.8380317858287266, 0.644284554890224, 0.7179921695164272, 0.5988907643726894, 0.5705268893923078, 0.5620187520980835, 0.5243121385574341, 0.4941983733858381, 0.47524777480534147, 0.4960380622318813, 0.4585085596357073, 0.491720301764352, 0.44491187163761686, 0.43062271390642437, 0.43754262583596365, 0.4116651841572353, 0.4193901675088065, 0.4640694686344692, 0.405205351965768, 0.3873322776385716, 0.4163215586117336, 0.3773793322699411, 0.3821624772889273, 0.3848949670791626, 0.4130468964576721, 0.3695837940488543, 0.3927461930683681], "val_accuracy": [0.43166667222976685, 0.6320000290870667, 0.7113333344459534, 0.6803333163261414, 0.7400000095367432, 0.7300000190734863, 0.750333309173584, 0.7566666603088379, 0.778333306312561, 0.7806666493415833, 0.7570000290870667, 0.79666668176651, 0.7756666541099548, 0.7973333597183228, 0.8159999847412109, 0.8016666769981384, 0.8163333535194397, 0.812666654586792, 0.7900000214576721, 0.8263333439826965, 0.8353333473205566, 0.8183333277702332, 0.8399999737739563, 0.8323333263397217, 0.8263333439826965, 0.8253333568572998, 0.8399999737739563, 0.8270000219345093]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 2, 3, 3, 1, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.824571430683136, "mapping_values": [1, 6, 6, 4, 2, 2, 29, 29, 18, 11, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)))), tf.math.negative(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(beta)), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), alpha))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9530344231411167, 1.3811782645732027, 0.977132284401934, 0.8935630704669778, 0.8288554129048172, 0.7458352696358678, 0.7086958248601724, 0.6989897969549737, 0.674934397299906, 0.6398062337233705, 0.6295257804573582, 0.6019976453821436, 0.5903508954626961, 0.5810116348076396, 0.5786364119223883, 0.5834830819954253, 0.543869430047961, 0.5400861334476362, 0.5406632403010437, 0.5412826040527682, 0.5030591470800638, 0.49175403254647154, 0.5259877057981497, 0.4684632970137036, 0.47899878336816115, 0.4590937599585025, 0.47851426449308243, 0.4451151568781604, 0.45808083922351905, 0.43296279893527967, 0.4314300141841854, 0.4241466340277378, 0.41068061556026936, 0.4217252718963013, 0.4063998719311, 0.41639105373558793, 0.40473445644940464], "accuracy": [0.35041606426239014, 0.4962356388568878, 0.6358473300933838, 0.6588297486305237, 0.6885483860969543, 0.7230220437049866, 0.7259278893470764, 0.7301545143127441, 0.7434949278831482, 0.7524765729904175, 0.7585523724555969, 0.7717606425285339, 0.7753269076347351, 0.7832518815994263, 0.7861577272415161, 0.7791573405265808, 0.7977809906005859, 0.7979130744934082, 0.7964601516723633, 0.7931581139564514, 0.8079513907432556, 0.8232730031013489, 0.7972526550292969, 0.82683926820755, 0.8227446675300598, 0.8281601071357727, 0.8206313848495483, 0.8337075710296631, 0.8334434032440186, 0.8376700282096863, 0.8400475382804871, 0.8438779711723328, 0.8519350290298462, 0.841500461101532, 0.8498216867446899, 0.8471800088882446, 0.8496896028518677], "val_loss": [1.2980293887002128, 0.8225523403712681, 0.7538656336920602, 0.7044804096221924, 0.5918309007372174, 0.5515448706490653, 0.5261914048876081, 0.5109563214438302, 0.48546089444841656, 0.4944396359579904, 0.5122417381831578, 0.4655252524784633, 0.4894599403653826, 0.45257445744105745, 0.4680407728467669, 0.4178385053362165, 0.4073874354362488, 0.44213177476610455, 0.4655968461717878, 0.40516904422215055, 0.3889506459236145, 0.45816067286900114, 0.37709150995526997, 0.38019066197531565, 0.39880692958831787, 0.3947935019220625, 0.36931360619408743, 0.4063629167420523, 0.3575814366340637, 0.36926026003701345, 0.3629385914121355, 0.34075935397829327, 0.35999015399387907, 0.3453280585152762, 0.3538958259991237, 0.3344332490648542, 0.34397728954042706], "val_accuracy": [0.43033334612846375, 0.6396666765213013, 0.6629999876022339, 0.6830000281333923, 0.7463333606719971, 0.7396666407585144, 0.7713333368301392, 0.7663333415985107, 0.7856666445732117, 0.7663333415985107, 0.749666690826416, 0.7946666479110718, 0.7876666784286499, 0.7973333597183228, 0.7979999780654907, 0.8159999847412109, 0.8270000219345093, 0.8053333163261414, 0.7866666913032532, 0.8253333568572998, 0.8330000042915344, 0.7900000214576721, 0.8376666903495789, 0.8326666951179504, 0.8186666369438171, 0.8309999704360962, 0.8420000076293945, 0.8190000057220459, 0.8423333168029785, 0.8353333473205566, 0.8410000205039978, 0.859333336353302, 0.840666651725769, 0.8483333587646484, 0.8416666388511658, 0.8576666712760925, 0.8476666808128357]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 6, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 6, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 39, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8208571672439575, "mapping_values": [1, 3, 3, 1, 2, 1, 30, 30, 18, 12, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), grad), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), grad))))), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9522160790017284, 1.3853482415946625, 0.9837560826887182, 0.877187724276273, 0.8127026214906332, 0.7648434375869505, 0.7216473547947201, 0.6851154527392103, 0.6719824997126356, 0.6496629475397818, 0.6301807085473571, 0.6074545880617986, 0.6133785076491538, 0.5796976723864314, 0.5809076303236551, 0.582364816565508, 0.5387321986841598, 0.5556597862072341, 0.5282908307956493, 0.5292006013352779, 0.4990880003600246, 0.520578177692301, 0.5070188270190199, 0.4758173453179585, 0.4766923595909209, 0.451738645635686, 0.48217940010084154, 0.4439593832396151], "accuracy": [0.35068023204803467, 0.49966979026794434, 0.6330735683441162, 0.6684718132019043, 0.6940959095954895, 0.7123233675956726, 0.7201162576675415, 0.7371549606323242, 0.7413815855979919, 0.750231146812439, 0.7535332441329956, 0.7700436115264893, 0.7670056819915771, 0.7843085527420044, 0.7779685854911804, 0.7837802171707153, 0.8014793395996094, 0.789988100528717, 0.8005547523498535, 0.800818920135498, 0.8149517774581909, 0.8047813773155212, 0.8064984679222107, 0.8260467648506165, 0.822348415851593, 0.8364813327789307, 0.8215559124946594, 0.8347642421722412], "val_loss": [1.2980968270983015, 0.8393323080880302, 0.64719705922263, 0.6501472847802299, 0.6379122052873883, 0.5663222074508667, 0.5564197472163609, 0.5690273727689471, 0.5312408549445016, 0.46763592106955393, 0.4896674156188965, 0.5213217054094587, 0.4805401563644409, 0.4330278379576547, 0.4411745412009103, 0.4275868535041809, 0.4161829352378845, 0.41440209320613314, 0.4315816419465201, 0.41607584272112164, 0.3970498527799334, 0.43594223260879517, 0.38261661359242033, 0.37774051087243216, 0.38123927797589985, 0.4001551440783909, 0.3730399693761553, 0.3860637290137155], "val_accuracy": [0.43166667222976685, 0.6343333125114441, 0.7080000042915344, 0.6973333358764648, 0.6949999928474426, 0.7413333058357239, 0.7553333044052124, 0.7289999723434448, 0.7480000257492065, 0.7896666526794434, 0.7753333449363708, 0.7603333592414856, 0.7773333191871643, 0.8103333115577698, 0.809333324432373, 0.8026666641235352, 0.8149999976158142, 0.8176666498184204, 0.8013333082199097, 0.8220000267028809, 0.82833331823349, 0.8013333082199097, 0.8383333086967468, 0.8356666564941406, 0.8306666612625122, 0.8289999961853027, 0.8379999995231628, 0.8296666741371155]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8162857294082642, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9528725663227822, 1.3680488361957728, 0.9677260794565269, 0.9093276485790902, 0.8173617837986753, 0.7557972023877895, 0.7098528887570227, 0.7020394472461162, 0.6748175054666562, 0.6343235394044906, 0.6517169862265254, 0.6045888003860844, 0.6143359148570056, 0.5853498035166258, 0.5795860083001464, 0.5994952380491868, 0.5516734741635059, 0.5453826095985148, 0.533748138121736, 0.533727024233242, 0.5031057742639949, 0.5239647713949526, 0.5119938414921268, 0.47246520239931167, 0.48082137550298076, 0.4723666121167372, 0.4755079023133589, 0.44847190250983215, 0.45734284819550186, 0.44314369995832414, 0.4353170606359719, 0.4290081488694088, 0.421322645831338, 0.42249000613337667, 0.4266546597420626, 0.405888619432045, 0.41207717470268707, 0.41062311329200457, 0.39396693592829835, 0.39597880741104774, 0.39111909780834864, 0.3887776920879207, 0.3725734799057186, 0.37148119794410756], "accuracy": [0.34843480587005615, 0.50785893201828, 0.6369040012359619, 0.6600185036659241, 0.6985867023468018, 0.7187954187393188, 0.7243428826332092, 0.7309470176696777, 0.7383436560630798, 0.7618544697761536, 0.7460044622421265, 0.7729493975639343, 0.7606657147407532, 0.7775723338127136, 0.7754589915275574, 0.7796856164932251, 0.7942147850990295, 0.7942147850990295, 0.7979130744934082, 0.8000264167785645, 0.8098005652427673, 0.8062343001365662, 0.8013472557067871, 0.8256505131721497, 0.8203672170639038, 0.8260467648506165, 0.8224804997444153, 0.8347642421722412, 0.830669641494751, 0.8334434032440186, 0.839519202709198, 0.8454629778862, 0.8451988101005554, 0.841500461101532, 0.8379341959953308, 0.8536521196365356, 0.8454629778862, 0.8454629778862, 0.8552370667457581, 0.8502179384231567, 0.8564258217811584, 0.8529917001724243, 0.860652506351471, 0.8610487580299377], "val_loss": [1.305602959224156, 0.8217896563666207, 0.7101508038384574, 0.7521299294063023, 0.6390486785343715, 0.5393342631203788, 0.5344430037907192, 0.5141016074589321, 0.5037506478173392, 0.48858439922332764, 0.5018860953194755, 0.5283187116895404, 0.49482977390289307, 0.44373810291290283, 0.45263947759355816, 0.4250832625797817, 0.4107774666377476, 0.4157181807926723, 0.4305563398769924, 0.41757350308554514, 0.41461803231920513, 0.44532556193215506, 0.3769566331590925, 0.37723049095698763, 0.40986454486846924, 0.38687779222215923, 0.3669190747397287, 0.40611393111092703, 0.3589134897504534, 0.3713526896068028, 0.3646074022565569, 0.3477034739085606, 0.36740006719316753, 0.3727452414376395, 0.3453695433480399, 0.3341694644519261, 0.33948956217084614, 0.33970935855593, 0.3219769767352513, 0.3364115868295942, 0.3384446586881365, 0.3381247435297285, 0.3164194311414446, 0.32250129325049265], "val_accuracy": [0.4543333351612091, 0.6633333563804626, 0.6759999990463257, 0.6700000166893005, 0.7300000190734863, 0.7553333044052124, 0.765333354473114, 0.7559999823570251, 0.7823333144187927, 0.765999972820282, 0.7670000195503235, 0.749666690826416, 0.7649999856948853, 0.7986666560173035, 0.8019999861717224, 0.8113333582878113, 0.8209999799728394, 0.8153333067893982, 0.8016666769981384, 0.8243333101272583, 0.8166666626930237, 0.7993333339691162, 0.8423333168029785, 0.8376666903495789, 0.8166666626930237, 0.8403333425521851, 0.843999981880188, 0.8196666836738586, 0.843999981880188, 0.8399999737739563, 0.8423333168029785, 0.8539999723434448, 0.8426666855812073, 0.8299999833106995, 0.8513333201408386, 0.8586666584014893, 0.8529999852180481, 0.8523333072662354, 0.8676666617393494, 0.8576666712760925, 0.8610000014305115, 0.8546666502952576, 0.8676666617393494, 0.862666666507721]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8131428360939026, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9574533732276567, 1.3705334489718088, 0.9664668820364412, 0.8871614871527682, 0.8417307130019143, 0.7505869824085505, 0.7077433755447867, 0.7122695791943355, 0.6723508397664659, 0.6391126013088693, 0.6133090686709921, 0.6343955558918691, 0.6179146416482357, 0.5759105961226108, 0.5844481046472826, 0.5885489427528487, 0.5457683307950397, 0.5361371341634656, 0.5447974798150618, 0.5475909856284976, 0.5076707076276881, 0.5006517435675835], "accuracy": [0.3486989736557007, 0.5066701769828796, 0.6332056522369385, 0.670320987701416, 0.684982180595398, 0.7235503792762756, 0.728701651096344, 0.7269845604896545, 0.7409853339195251, 0.7567031979560852, 0.7640998363494873, 0.7600052952766418, 0.7646281719207764, 0.7869502305984497, 0.7713643908500671, 0.7820631265640259, 0.7954035401344299, 0.8012151718139648, 0.7943468689918518, 0.7924976944923401, 0.805177628993988, 0.8144234418869019], "val_loss": [1.3345852919987269, 0.7910313776561192, 0.6588436535426548, 0.7610538857323783, 0.649265101977757, 0.5478066376277378, 0.5263616698128837, 0.5050293207168579, 0.503406115940639, 0.48159137793949675, 0.5592181171689715, 0.5238872255597796, 0.4848918914794922, 0.4403713771275112, 0.45577871799468994, 0.4251145805631365, 0.40771600178309847, 0.42661780970437185, 0.4789192335946219, 0.4110681584903172, 0.3880306737763541, 0.4652756452560425], "val_accuracy": [0.4440000057220459, 0.6800000071525574, 0.6983333230018616, 0.6666666865348816, 0.7260000109672546, 0.7490000128746033, 0.7609999775886536, 0.7773333191871643, 0.7706666588783264, 0.777999997138977, 0.7229999899864197, 0.7573333382606506, 0.7733333110809326, 0.8016666769981384, 0.8019999861717224, 0.8083333373069763, 0.8323333263397217, 0.8090000152587891, 0.7776666879653931, 0.8240000009536743, 0.8296666741371155, 0.777999997138977]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [1, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 2, 7, 9, 8, 1, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 4, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.4725714325904846, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.100071395471694, 1.6980895079704812, 0.9992606094673624, 1.0090596701380536, 1.0432501890246484, 2.936210957311636, 2.64070672088878, 2.5263225141690784], "accuracy": [0.3275656998157501, 0.41526877880096436, 0.6395456194877625, 0.6472064256668091, 0.6507726907730103, 0.4019284248352051, 0.11187426000833511, 0.10170386731624603], "val_loss": [1.8607027871268136, 0.8108530385153634, 0.566197122846331, 0.6562989268984113, 3.538024289267404, 2.162340368543352, 2.062406539916992, 2.3222898755754744], "val_accuracy": [0.2840000092983246, 0.6746666431427002, 0.7440000176429749, 0.7083333134651184, 0.4059999883174896, 0.17633333802223206, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.21142856776714325, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1896236891665275, 2.2224818063591605, 2.3577654384083484, 2.4834381520330884, 2.6009368863733706, 2.7252183510658528], "accuracy": [0.23325848579406738, 0.2008981704711914, 0.1578391194343567, 0.1472724825143814, 0.14449875056743622, 0.14476291835308075], "val_loss": [1.7959545680454798, 1.927096162523542, 2.020023890904018, 2.140209470476423, 2.2352430479867116, 2.345696176801409], "val_accuracy": [0.1783333271741867, 0.10766666382551193, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 5, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 0, 3, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [3, 49, 44, 92]], "fitness": -0.18085713684558868, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), beta), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302920486570869, 2.3009415831721425, 2.3017228171180157, 2.303211474132072, 2.3015619943548487, 2.3007663225280517, 2.300730655568387, 2.299942546280667, 2.301472307117529, 2.300071344934891, 2.2999975498971876, 2.2987306794438775, 2.2990348060070294, 2.301918994890716, 2.299727659372842, 2.298623554269793, 2.2991589529639334, 2.2987213694046296, 2.29996899184833, 2.298572066689621, 2.2977315203672104, 2.299896915055631, 2.2971654941912547, 2.298316498222195, 2.2969254023993195, 2.298178908532369, 2.2977936139054473, 2.296074626783039, 2.2969608295233086, 2.2971183100806063, 2.2960972523629435, 2.2969994514751524, 2.297314959462954, 2.2957971606193484, 2.2947108868075055, 2.296402829465865, 2.2962710261581094, 2.294730373078239, 2.295816220375588, 2.2938339327934507, 2.295241374475703, 2.2952874046920737, 2.2961031176300413, 2.2951745669508905, 2.2924295434736384, 2.2945765156267877, 2.2931091114042172, 2.295380595022929, 2.2934583816797884, 2.2933537758194995, 2.2933620716586733, 2.2926912764359177, 2.2917828384155547, 2.294043148922772, 2.291827276760419, 2.2920534351262214, 2.2922820663565515, 2.29149379356741, 2.292765970794422, 2.290658087384636, 2.2917726212772225, 2.2911654113542292, 2.2915719797456617, 2.290866861757806, 2.2915091079381384, 2.292058443868826, 2.289415581162422, 2.2897304390494253, 2.289726408166247, 2.2885864680674035, 2.290595831132253, 2.290115736258611, 2.290137608195214, 2.2911436312139752, 2.2887533259917685, 2.2895962867628485, 2.289720329421465, 2.288417757147921, 2.2883051633362474, 2.288774706321921, 2.287519421670037, 2.2866095113810956, 2.2870616225392637, 2.288267707087817, 2.2881800390237736, 2.285820616423698, 2.287021184783208, 2.28771403232318, 2.2861824091698564, 2.2862126251583983, 2.2860608951148893, 2.285748944826067, 2.2855381763464804, 2.2862115407333303, 2.2843364834423316, 2.284853185314339, 2.2864959139818244, 2.286230920879297, 2.284033003767893, 2.284792480058107], "accuracy": [0.08968432247638702, 0.09259014576673508, 0.09285431355237961, 0.09074098616838455, 0.09285431355237961, 0.09100515395402908, 0.09351472556591034, 0.09470347315073013, 0.09100515395402908, 0.09602430462837219, 0.09642054885625839, 0.10315678268671036, 0.09826971590518951, 0.09259014576673508, 0.09760929644107819, 0.09866596013307571, 0.09906221181154251, 0.10170386731624603, 0.09338264167308807, 0.10381719470024109, 0.10196803510189056, 0.09325055778026581, 0.1010434553027153, 0.1006472036242485, 0.09919429570436478, 0.1018359512090683, 0.1022322028875351, 0.10210011899471283, 0.09998679161071777, 0.10328886657953262, 0.10500594228506088, 0.10500594228506088, 0.10434553027153015, 0.10791176557540894, 0.11174217611551285, 0.10328886657953262, 0.10394927859306335, 0.1138555034995079, 0.10711926966905594, 0.11055342853069305, 0.107647605240345, 0.11530841141939163, 0.10527011007070541, 0.10236428678035736, 0.11332716792821884, 0.109232597053051, 0.1138555034995079, 0.10672302544116974, 0.11451591551303864, 0.11081759631633759, 0.10447761416435242, 0.11702549457550049, 0.11887465417385101, 0.11517632752656937, 0.11200633645057678, 0.11227050423622131, 0.11728965491056442, 0.11174217611551285, 0.11279883980751038, 0.11861048638820648, 0.11768590658903122, 0.11966715008020401, 0.11742173880338669, 0.11900673806667328, 0.11253467202186584, 0.11055342853069305, 0.12072381377220154, 0.12323339283466339, 0.12230881303548813, 0.1228371411561966, 0.1146479994058609, 0.11834631860256195, 0.12296922504901886, 0.11530841141939163, 0.1294412910938263, 0.12072381377220154, 0.12310130894184113, 0.12878087162971497, 0.12957337498664856, 0.12653546035289764, 0.12442214041948318, 0.13129045069217682, 0.12693171203136444, 0.12574297189712524, 0.12838461995124817, 0.13036586344242096, 0.12957337498664856, 0.1228371411561966, 0.1302337795495987, 0.13974376022815704, 0.13895125687122345, 0.12838461995124817, 0.13895125687122345, 0.1310262829065323, 0.1356491893529892, 0.13842293620109558, 0.13313961029052734, 0.13630960881710052, 0.13934750854969025, 0.13459251821041107], "val_loss": [1.9708168166024345, 1.9706508772713798, 1.9704855510166712, 1.9703198841639928, 1.9701527186802454, 1.9699878692626953, 1.9698232923235213, 1.9696582385471888, 1.9694920948573522, 1.9693278585161482, 1.9691626003810339, 1.9689959798540388, 1.9688313347952706, 1.9686668259756905, 1.9685008185250419, 1.968334129878453, 1.9681692123413086, 1.9680039542061942, 1.9678391047886439, 1.9676731654575892, 1.967508316040039, 1.9673436028616769, 1.9671785490853446, 1.9670124735151018, 1.966848645891462, 1.9666829109191895, 1.9665158135550362, 1.9663519859313965, 1.9661884989057268, 1.9660250118800573, 1.965860026223319, 1.965695517403739, 1.965531349182129, 1.9653656823294503, 1.9652021271841866, 1.9650380952017648, 1.9648740632193429, 1.9647098268781389, 1.9645464760916573, 1.964383602142334, 1.9642201832362585, 1.9640558106558663, 1.9638933454241072, 1.963728972843715, 1.963567120688302, 1.9634052004132951, 1.963242530822754, 1.96307829448155, 1.9629131044660295, 1.9627514566693987, 1.9625884464808874, 1.9624241420200892, 1.9622602462768555, 1.9620997565133231, 1.9619359288896834, 1.96177339553833, 1.9616095679146903, 1.9614462171282088, 1.9612860679626465, 1.9611241476876395, 1.9609613418579102, 1.960799285343715, 1.960637024470738, 1.9604754447937012, 1.9603135926382882, 1.9601505824497767, 1.9599885940551758, 1.9598275593348913, 1.9596659796578544, 1.959503514426095, 1.9593400274004256, 1.9591785158429826, 1.9590165274483817, 1.9588538578578405, 1.958690575190953, 1.958529336111886, 1.9583665984017509, 1.9582042694091797, 1.9580413954598563, 1.957878793988909, 1.9577161243983678, 1.9575525692531042, 1.957390580858503, 1.9572277750287737, 1.9570661272321428, 1.9569027764456612, 1.9567412648882185, 1.9565777778625488, 1.9564145633152552, 1.9562525068010603, 1.9560914039611816, 1.9559290068490165, 1.9557672909327917, 1.9556053706577845, 1.9554428373064314, 1.955282279423305, 1.9551209041050501, 1.9549569402422224, 1.9547931126185827, 1.95463194165911], "val_accuracy": [0.036666665226221085, 0.03700000047683716, 0.03799999877810478, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.04066666588187218, 0.041333332657814026, 0.041999999433755875, 0.043666668236255646, 0.04500000178813934, 0.04633333161473274, 0.04866666719317436, 0.05000000074505806, 0.05133333429694176, 0.05233333259820938, 0.0533333346247673, 0.05433333292603493, 0.05666666850447655, 0.057999998331069946, 0.059333331882953644, 0.059333331882953644, 0.06133333221077919, 0.06266666948795319, 0.06400000303983688, 0.06466666609048843, 0.0663333311676979, 0.0676666647195816, 0.0689999982714653, 0.07066666334867477, 0.07133333384990692, 0.07199999690055847, 0.07333333045244217, 0.07466666400432587, 0.07633333653211594, 0.07800000160932541, 0.07999999821186066, 0.08166666328907013, 0.0833333358168602, 0.08399999886751175, 0.08699999749660492, 0.08833333104848862, 0.08933333307504654, 0.09233333170413971, 0.09266666322946548, 0.09433333575725555, 0.09666666388511658, 0.09799999743700027, 0.0989999994635582, 0.10066666454076767, 0.10199999809265137, 0.10466666519641876, 0.10733333230018616, 0.10899999737739563, 0.11133333295583725, 0.11266666650772095, 0.11400000005960464, 0.11566666513681412, 0.11766666918992996, 0.12033333629369736, 0.12066666781902313, 0.12300000339746475, 0.12399999797344208, 0.125, 0.12700000405311584, 0.1276666671037674, 0.1289999932050705, 0.12966667115688324, 0.13066667318344116, 0.13300000131130219, 0.13566666841506958, 0.13633333146572113, 0.13699999451637268, 0.13966666162014008, 0.14133332669734955, 0.14233332872390747, 0.14266666769981384, 0.14366666972637177, 0.1446666717529297, 0.1469999998807907, 0.14800000190734863, 0.15000000596046448, 0.15066666901111603, 0.15133333206176758, 0.15333333611488342, 0.1550000011920929, 0.15733332931995392, 0.1586666703224182, 0.16033333539962769, 0.16233333945274353, 0.1626666635274887, 0.16433332860469818, 0.1653333306312561, 0.16733333468437195, 0.1679999977350235, 0.1693333387374878, 0.1706666648387909, 0.17499999701976776, 0.1770000010728836, 0.17733334004878998]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 1, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 0, 3, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [95, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [13, 26, 44, 92]], "fitness": -0.10657142847776413, "mapping_values": [1, 6, 6, 4, 2, 2, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302552242572549, 2.3001934041310577, 2.3006566977850467, 2.3017057651982817, 2.300431667175968, 2.300402175764508, 2.300414447786943, 2.300776713276426, 2.3015047140314184, 2.3013866908199767, 2.3014832453374394, 2.3017215900385875], "accuracy": [0.09087307006120682, 0.09470347315073013, 0.09272222965955734, 0.09008057415485382, 0.09866596013307571, 0.09906221181154251, 0.10117553919553757, 0.09813763201236725, 0.10196803510189056, 0.09813763201236725, 0.10051512718200684, 0.10553427785634995], "val_loss": [1.9705674307686942, 1.9704375948224748, 1.9704905918666296, 1.9707352093287878, 1.9711687905447823, 1.9716384751456124, 1.9720392908368791, 1.9723588398524694, 1.9726406506129675, 1.9728709629603796, 1.9730449404035295, 1.9731881959097726], "val_accuracy": [0.04833333194255829, 0.06133333221077919, 0.07766667008399963, 0.09200000017881393, 0.10166666656732559, 0.10400000214576721, 0.109333336353302, 0.10733333230018616, 0.10066666454076767, 0.09366666525602341, 0.09233333170413971, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 9, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(grad, tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [69, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 0, 2, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 5, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(beta, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 0, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [81, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [56, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [81, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [56, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 3, 4, 2, 2, 1, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 32, 32, 18, 14, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), grad), tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [81, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [56, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 4, 3, 2, 1, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029721991859327, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 3, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [81, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [56, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 1, 2, 2, 8, 0, 1, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [59, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [6, 8, 1, 3], [0, 2], [94], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 11, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, grad))))), tf.math.subtract(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(alpha))", "other_info": {"loss": [2.303672476813715, 2.303529104520742, 2.306354170194502, 2.311143159645896, 2.312842022457836, 2.3152032554771576, 2.3202222706761106, 2.3260105951445498, 2.3384434204091487, 2.3547077373884546, 3.6080573410358663, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.0870426595211029, 0.08374059200286865, 0.07858935743570328, 0.07647603005170822, 0.07819310575723648, 0.07845727354288101, 0.07079645991325378, 0.07172103971242905, 0.07317395508289337, 0.08506141602993011, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9722288676670618, 1.9736322675432478, 1.9752449989318848, 1.9776347024100167, 1.9802053315298898, 1.9830796377999442, 1.9863896369934082, 1.9912010601588659, 1.9998754092625208, 2.021178586142404, 13754583040.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.020999999716877937, 0.020666666328907013, 0.02033333294093609, 0.020666666328907013, 0.03166666626930237, 0.041999999433755875, 0.06366666406393051, 0.09099999815225601, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 5, 8, 0, 9, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(grad, tf.math.add(grad, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302993325572429, 2.301193987987832, 2.3021532801778135, 2.3038226574356244, 2.3023571737249373, 2.3017331349016765], "accuracy": [0.08981640636920929, 0.09166556596755981, 0.09192973375320435, 0.0886276587843895, 0.09140139818191528, 0.08968432247638702], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 2, 2, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 1, 4, 2, 3, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 2, 1, 0, 1, 0, 3], [3, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302993325572429, 2.301193987987832, 2.3021532801778135, 2.3038226574356244, 2.3023571737249373, 2.3017331349016765], "accuracy": [0.08981640636920929, 0.09166556596755981, 0.09192973375320435, 0.0886276587843895, 0.09140139818191528, 0.08968432247638702], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]