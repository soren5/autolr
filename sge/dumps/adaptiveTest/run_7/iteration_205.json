[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8360000252723694, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.1337865793693966, 1.9561503556079838, 2.1084109874622556, 1.7608373500824983, 1.5673861341579731, 1.0982771738409098, 0.8981013878493056, 0.8696438266600852, 0.7616685149833715, 0.7451513738459631, 0.6832469265694946, 0.6560662106878139, 0.6237024813910139, 0.5966304238162824, 0.602628985550016, 0.5741550498996917, 0.5611821146626057, 0.5641770400328329, 0.5608924113370487, 0.511941619375835, 0.5240617323198874, 0.5046479570402713, 0.4797603512413356, 0.48205575533531064, 0.4676532468791368, 0.48399106193180835, 0.46251670850691556], "accuracy": [0.27644962072372437, 0.3350944519042969, 0.27644962072372437, 0.3929467797279358, 0.43851539492607117, 0.5819574594497681, 0.6593580842018127, 0.6713775992393494, 0.7112666964530945, 0.711530864238739, 0.7349095344543457, 0.7499669790267944, 0.7617223858833313, 0.7729493975639343, 0.7733456492424011, 0.7853652238845825, 0.7921014428138733, 0.7935543656349182, 0.7889314293861389, 0.8115176558494568, 0.8039889335632324, 0.8108572363853455, 0.8183859586715698, 0.8253863453865051, 0.8264430165290833, 0.8133667707443237, 0.8300092220306396], "val_loss": [1.669311829975673, 1.8335461616516113, 1.463571514402117, 1.7716529709952218, 0.8312208482197353, 0.8194325651441302, 0.7275766815458026, 0.598299673625401, 0.5355224779673985, 0.5187835012163434, 0.5436086654663086, 0.4713982343673706, 0.4840336186545236, 0.4700783831732614, 0.4644733837672642, 0.4342398728643145, 0.41673349482672556, 0.43368959426879883, 0.3984012007713318, 0.43450519016810824, 0.38432490825653076, 0.35263207980564665, 0.3954134838921683, 0.3596088545663016, 0.3783901163509914, 0.3721183282988412, 0.36212476662227083], "val_accuracy": [0.4026666581630707, 0.34299999475479126, 0.37166666984558105, 0.1926666647195816, 0.6309999823570251, 0.6226666569709778, 0.6556666493415833, 0.7353333234786987, 0.7519999742507935, 0.7703333497047424, 0.7440000176429749, 0.7806666493415833, 0.7770000100135803, 0.7900000214576721, 0.7846666574478149, 0.8029999732971191, 0.8169999718666077, 0.7879999876022339, 0.8316666483879089, 0.8016666769981384, 0.8259999752044678, 0.8500000238418579, 0.8163333535194397, 0.8453333377838135, 0.8316666483879089, 0.8323333263397217, 0.8456666469573975]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8208571672439575, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(alpha, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.133786717394576, 1.948443952190594, 2.1257347279630396, 1.9332468432048686, 2.0094647027749932, 1.4030420784118263, 0.9931549435010786, 0.8598120960309411, 0.7756914638839991, 0.7125933489243997, 0.69499870442349, 0.6584606909591287, 0.6396133050769311, 0.6123487990388403, 0.6010896619111634, 0.5820333751956973, 0.5806820257354673, 0.5644009253683029, 0.564390031786926, 0.5381245943517764, 0.5516017558253153, 0.5261543187419925, 0.5044035225527996, 0.5194699984295272, 0.46995534387168286, 0.4921017763967669, 0.474735706312435, 0.4694341528590455, 0.49779470717792007, 0.447851536068005], "accuracy": [0.27644962072372437, 0.33681151270866394, 0.2859595715999603, 0.351340651512146, 0.3337736129760742, 0.5054814219474792, 0.6321489810943604, 0.6672830581665039, 0.7034738063812256, 0.7329282760620117, 0.7248712182044983, 0.7497028112411499, 0.7493065595626831, 0.7712323069572449, 0.7670056819915771, 0.7823272943496704, 0.7837802171707153, 0.7840443849563599, 0.7881389260292053, 0.800290584564209, 0.7927618622779846, 0.8058380484580994, 0.8079513907432556, 0.8037247657775879, 0.8274996876716614, 0.8119139075279236, 0.8226125836372375, 0.8253863453865051, 0.8109893202781677, 0.83119797706604], "val_loss": [1.668888773236956, 1.7999924251011439, 1.5410116059439523, 1.729987723486764, 1.0902884687696184, 0.8404202120644706, 0.7976619516100202, 0.6964693239756993, 0.5334642274039132, 0.5435003382819039, 0.518664905003139, 0.47698507990155903, 0.49681447233472553, 0.4813521248953683, 0.46320853914533344, 0.43145154203687397, 0.4277048962456839, 0.4314484511102949, 0.4486306735447475, 0.39986025435583933, 0.40364675862448557, 0.38027113676071167, 0.41367052282605854, 0.3834421123777117, 0.3673574754170009, 0.38602380241666523, 0.3725366081510271, 0.3956371375492641, 0.3722033415521894, 0.3836357167788914], "val_accuracy": [0.4036666750907898, 0.36766666173934937, 0.421999990940094, 0.34700000286102295, 0.5130000114440918, 0.6366666555404663, 0.6480000019073486, 0.6786666512489319, 0.7580000162124634, 0.734000027179718, 0.7559999823570251, 0.7806666493415833, 0.765999972820282, 0.7873333096504211, 0.7926666736602783, 0.8056666851043701, 0.812666654586792, 0.7850000262260437, 0.7956666946411133, 0.8296666741371155, 0.8226666450500488, 0.8333333134651184, 0.8043333292007446, 0.8423333168029785, 0.8460000157356262, 0.8349999785423279, 0.8446666598320007, 0.8169999718666077, 0.8420000076293945, 0.8299999833106995]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8188571333885193, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), grad), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.1337555064784697, 1.954723659051077, 2.168816904995845, 2.1445336179994023, 1.9767467660391256, 1.4319264073460691, 1.0393703249483028, 0.9745127209551409, 0.8469828343378822, 0.7865667508939915, 0.7283195892990761, 0.7337840567364464, 0.6899405537248682, 0.6756687566604533, 0.6788880350394193, 0.6278542679975754, 0.6323652100868512, 0.6137005334375336, 0.583426847937809, 0.5871559138374243, 0.5884441922149009, 0.5369907722355368, 0.5298531626382792, 0.5489540100688113, 0.520764282839, 0.5199417737630601, 0.5069356929860678, 0.48961470764720316, 0.4735767510643945], "accuracy": [0.2767137885093689, 0.339321106672287, 0.25637298822402954, 0.2921674847602844, 0.3206973969936371, 0.46929070353507996, 0.6106194853782654, 0.6428477168083191, 0.6814159154891968, 0.7008321285247803, 0.719852089881897, 0.7248712182044983, 0.7364945411682129, 0.7387399077415466, 0.7338528633117676, 0.7600052952766418, 0.7585523724555969, 0.7681944370269775, 0.7775723338127136, 0.7732135653495789, 0.7675340175628662, 0.7959318161010742, 0.796328067779541, 0.7935543656349182, 0.8017435073852539, 0.8041210174560547, 0.8062343001365662, 0.8164047002792358, 0.8186501264572144], "val_loss": [1.6708556243351527, 1.82353789465768, 1.8533893993922643, 1.986820902143206, 1.5357491970062256, 0.8081482478550502, 0.7787640265056065, 0.6908956084932599, 0.5986783163888114, 0.5531867401940482, 0.6011339766638619, 0.553572246006557, 0.5046747241701398, 0.4886389119284494, 0.48053508145468576, 0.4678602729524885, 0.47444236278533936, 0.4601053169795445, 0.45387511593954905, 0.43708992855889456, 0.43529943908963886, 0.40128430298396517, 0.4704758610044207, 0.38322435106549946, 0.42784585271562847, 0.4029647707939148, 0.42856530632291523, 0.37927662474768503, 0.3776253546987261], "val_accuracy": [0.4033333361148834, 0.3463333249092102, 0.2823333442211151, 0.1003333330154419, 0.3346666693687439, 0.6346666812896729, 0.6846666932106018, 0.6973333358764648, 0.7200000286102295, 0.734666645526886, 0.7279999852180481, 0.7316666841506958, 0.7703333497047424, 0.7716666460037231, 0.7796666622161865, 0.7950000166893005, 0.7743333578109741, 0.7820000052452087, 0.7973333597183228, 0.8066666722297668, 0.8006666898727417, 0.812666654586792, 0.784333348274231, 0.8346666693687439, 0.8029999732971191, 0.812666654586792, 0.7983333468437195, 0.8306666612625122, 0.8276666402816772]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 8, 8, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [6, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.7891428470611572, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(alpha)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.2548931945883415, 2.010225831966327, 1.5316186199854582, 1.1964906320721798, 1.0489392914965388, 0.9702547107941407, 0.9123488730679508, 0.8664914900443148, 0.8256920230402812, 0.8034979020678498, 0.7829957094883419, 0.7634059951809561, 0.7472361593891397, 0.7251658091109269, 0.7140665000314175, 0.7040830742429512, 0.7004732261354645, 0.6857695909397336, 0.6746878603414506, 0.6641296261038054, 0.6498826365696991, 0.653344960969122, 0.6418989729399474, 0.6441163722833606, 0.6331187264872989, 0.6254213064133515, 0.624689935291637, 0.613307515541324, 0.6115616735859696, 0.6041357612975159, 0.5994930127592544], "accuracy": [0.19772817194461823, 0.41328755021095276, 0.5061418414115906, 0.5844670534133911, 0.6304318904876709, 0.6502443552017212, 0.6781138777732849, 0.6840575933456421, 0.6977941989898682, 0.7036058902740479, 0.7132478952407837, 0.7234182953834534, 0.7257958054542542, 0.726192057132721, 0.7342491149902344, 0.7413815855979919, 0.7412495017051697, 0.7470611333847046, 0.7466648817062378, 0.7552502751350403, 0.7568352818489075, 0.7572315335273743, 0.7617223858833313, 0.7637035846710205, 0.7656848430633545, 0.7685906887054443, 0.76542067527771, 0.7701756954193115, 0.7777044177055359, 0.7703077793121338, 0.7784969210624695], "val_loss": [1.836094583783831, 1.4196560723440987, 0.9711720262254987, 0.795120085988726, 0.7130021538053241, 0.6778615883418492, 0.6395457472120013, 0.6070223195212228, 0.5903591087886265, 0.5682205132075718, 0.5768981661115374, 0.5413247346878052, 0.5524356024605888, 0.5195532185690743, 0.5086017847061157, 0.5168441193444389, 0.5004463366099766, 0.49543585096086773, 0.49601541246686665, 0.48947315556662424, 0.49918716294424875, 0.46557622296469553, 0.48286633832114084, 0.480197582926069, 0.47820399488721577, 0.4509986809321812, 0.4712612288338797, 0.44803483145577566, 0.45727806431906565, 0.4592150790350778, 0.4465566192354475], "val_accuracy": [0.43533334136009216, 0.5836666822433472, 0.6499999761581421, 0.6783333420753479, 0.703000009059906, 0.7126666903495789, 0.7300000190734863, 0.7403333187103271, 0.7483333349227905, 0.7549999952316284, 0.750333309173584, 0.7676666378974915, 0.7563333511352539, 0.7649999856948853, 0.7773333191871643, 0.778333306312561, 0.7856666445732117, 0.7850000262260437, 0.7823333144187927, 0.7799999713897705, 0.7793333530426025, 0.8006666898727417, 0.7916666865348816, 0.7796666622161865, 0.7886666655540466, 0.8130000233650208, 0.7883333563804626, 0.796999990940094, 0.79666668176651, 0.7943333387374878, 0.8096666932106018]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 8, 2, 4, 3, 4, 1, 9, 5, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.730571448802948, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, grad)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2981374511597825, 2.2933159754685972, 2.286333239892565, 2.2799759691165598, 2.273189428790748, 2.267593385174668, 2.2599687770593593, 2.251743057888607, 2.2450650438357336, 2.2355506216073633, 2.228548711427309, 2.217631649804106, 2.2077693535493994, 2.1988071515150454, 2.1847990809997246, 2.1733487653159163, 2.1590817446690416, 2.142296170955321, 2.1269366152928, 2.108191327364721, 2.0947224253975816, 2.0669650579912786, 2.04924914210527, 2.0266788991498057, 2.002928203375049, 1.9758711934105406, 1.949136418122279, 1.9213741897607697, 1.891234675371384, 1.8581689077203993, 1.8235950387464208, 1.7934226091464498, 1.75845177301783, 1.7241067999405333, 1.6942209011181675, 1.6515605033207659, 1.6177744866834576, 1.5881802596593688, 1.5616563205878968, 1.5271116585354243, 1.502243951138189, 1.4734379609562325, 1.4375147436588134, 1.420237699677333, 1.394066896216272, 1.3702212873152013, 1.3597236244418067, 1.3378239434550483, 1.3141849741030678, 1.2942405426113313, 1.2761083822114325, 1.2589941040368333, 1.2463835781717407, 1.218840504555481, 1.1999965679880147, 1.2020949840923547, 1.1773473407299195, 1.1764846827139581, 1.159796932669143, 1.149893650934917, 1.1420852712998537, 1.1236506038101957, 1.1186643749447924, 1.1033608997660134, 1.0981171555475646, 1.094790532746099, 1.0789613090785204, 1.069662267915199, 1.064433894215983, 1.0595366878752632, 1.0536706734012224, 1.0481275005457722, 1.0362968424827415, 1.021462108213132, 1.0177578036779773, 1.0158109970694882, 0.9948232899236799, 0.9991538321038185, 0.9968977072581859, 0.9818173552138884, 0.9873640410746755, 0.9879205952923863, 0.9678650897932626, 0.9656729616934298, 0.9585726113131081, 0.9589392879241966, 0.9519960911613115, 0.9523754320785811, 0.9230522213201355, 0.9327574605010268, 0.9242623960652199, 0.9181246734991239, 0.9257629004688059, 0.9149253899395159, 0.9152145425578339, 0.9113777657352529, 0.9233841065245061, 0.9060152953153808, 0.9015005837263386, 0.8930783343352914], "accuracy": [0.10302469879388809, 0.11147800832986832, 0.13049794733524323, 0.14568749070167542, 0.1628582775592804, 0.1814819723367691, 0.20697398483753204, 0.22176727652549744, 0.2386738806962967, 0.2565050721168518, 0.26178839802742004, 0.28424251079559326, 0.3003566265106201, 0.3077532649040222, 0.3210936486721039, 0.33284902572631836, 0.3443402349948883, 0.36362436413764954, 0.36560559272766113, 0.37643641233444214, 0.37947431206703186, 0.3945317566394806, 0.3953242599964142, 0.40628713369369507, 0.4193633496761322, 0.42028793692588806, 0.431779146194458, 0.4275524914264679, 0.43626996874809265, 0.45225200057029724, 0.4581957459449768, 0.46427157521247864, 0.46664905548095703, 0.4776119291782379, 0.48091402649879456, 0.4955752193927765, 0.4950468838214874, 0.49993395805358887, 0.50350022315979, 0.5160480737686157, 0.521067202091217, 0.5280676484107971, 0.5312376022338867, 0.5365209579467773, 0.5415400862693787, 0.5489367246627808, 0.548540472984314, 0.5535596609115601, 0.5647866725921631, 0.5645225048065186, 0.5690133571624756, 0.5756174921989441, 0.5741645693778992, 0.5914674401283264, 0.5909391045570374, 0.5886936783790588, 0.5978074073791504, 0.5904107689857483, 0.6007132530212402, 0.6069211363792419, 0.6081098914146423, 0.6116761565208435, 0.6122044920921326, 0.6189407110214233, 0.6122044920921326, 0.6190727949142456, 0.6264694333076477, 0.625148594379425, 0.6338660717010498, 0.6304318904876709, 0.6336019039154053, 0.6345264911651611, 0.6478668451309204, 0.6449610590934753, 0.6465460062026978, 0.6444327235221863, 0.6532822847366333, 0.6520935297012329, 0.6523576974868774, 0.6519614458084106, 0.6556597352027893, 0.6557918190956116, 0.6601505875587463, 0.6627922058105469, 0.6633205413818359, 0.6625280380249023, 0.666358470916748, 0.6635847091674805, 0.67666095495224, 0.6760005354881287, 0.6719059348106384, 0.6848500967025757, 0.672170102596283, 0.678642213344574, 0.6769251227378845, 0.6754721999168396, 0.6667547225952148, 0.67666095495224, 0.6823405027389526, 0.6822084188461304], "val_loss": [1.9647588048662459, 1.9586236817496163, 1.9525152615138464, 1.9463612692696708, 1.940124443599156, 1.933643204825265, 1.9269373076302665, 1.9199353626796178, 1.9125515392848425, 1.9046146529061454, 1.8962976591927665, 1.8871927942548479, 1.8773929050990514, 1.8668219021388464, 1.8552791731698173, 1.8428079060145788, 1.829329013824463, 1.8146281242370605, 1.7987209728785925, 1.7815727506365096, 1.7634127480643136, 1.7433310917445592, 1.7220239639282227, 1.6993868691580636, 1.6751033919198173, 1.649331739970616, 1.6222888742174422, 1.5938430173056466, 1.5640230860028947, 1.532877036503383, 1.5006348746163505, 1.4679159777505058, 1.4346922125135149, 1.4010087081364222, 1.367436443056379, 1.3334991250719344, 1.300065381186349, 1.2675420556749617, 1.2363592215946742, 1.2059698445456368, 1.1771489552089147, 1.1494311605181013, 1.122619594846453, 1.0975350311824255, 1.073589597429548, 1.0509579862867082, 1.0300962243761336, 1.0100454602922713, 0.9910504136766706, 0.9731889111655099, 0.9561610903058734, 0.9401953901563372, 0.9250900064195905, 0.9104923861367362, 0.8965461935315814, 0.8842734949929374, 0.8719612870897565, 0.8609977449689593, 0.8499365363802228, 0.8401435443333217, 0.8303546224321637, 0.8212083918707711, 0.8128089734486171, 0.8042522668838501, 0.7962614127567836, 0.7888251713344029, 0.7817789656775338, 0.7748930283955165, 0.7684051820210048, 0.7622574056897845, 0.7564905030386788, 0.7508610997881208, 0.7453041076660156, 0.7398119653974261, 0.7348896775926862, 0.729608314377921, 0.7246097155979702, 0.7200526680265155, 0.7155987875802177, 0.7111554656709943, 0.706743768283299, 0.7031598431723458, 0.6990247794560024, 0.6953108480998448, 0.6913054670606341, 0.6879820312772479, 0.684543217931475, 0.681545581136431, 0.6774964162281581, 0.6740883588790894, 0.671005129814148, 0.6674973283495221, 0.664989539555141, 0.6621623890740531, 0.6598266533442906, 0.6568150690623692, 0.6545618942805699, 0.6522332940782819, 0.6490330355507987, 0.6467226913997105], "val_accuracy": [0.08100000023841858, 0.140666663646698, 0.19566667079925537, 0.24566666781902313, 0.28600001335144043, 0.3176666796207428, 0.34033334255218506, 0.36000001430511475, 0.37033334374427795, 0.3813333213329315, 0.3956666588783264, 0.4046666622161865, 0.4143333435058594, 0.4243333339691162, 0.43533334136009216, 0.44433334469795227, 0.4506666660308838, 0.4586666524410248, 0.4673333466053009, 0.4726666808128357, 0.47999998927116394, 0.49266666173934937, 0.5019999742507935, 0.5086666941642761, 0.515666663646698, 0.5220000147819519, 0.5296666622161865, 0.5389999747276306, 0.5460000038146973, 0.5509999990463257, 0.5566666722297668, 0.5633333325386047, 0.5683333277702332, 0.5740000009536743, 0.5809999704360962, 0.5913333296775818, 0.5986666679382324, 0.6060000061988831, 0.6103333234786987, 0.6166666746139526, 0.6233333349227905, 0.6313333511352539, 0.6366666555404663, 0.6443333625793457, 0.6520000100135803, 0.6556666493415833, 0.6603333353996277, 0.6636666655540466, 0.6673333048820496, 0.6690000295639038, 0.6729999780654907, 0.6733333468437195, 0.6763333082199097, 0.6779999732971191, 0.6783333420753479, 0.6813333630561829, 0.684333324432373, 0.6833333373069763, 0.6833333373069763, 0.687333345413208, 0.687666654586792, 0.6896666884422302, 0.6909999847412109, 0.6930000185966492, 0.6930000185966492, 0.6940000057220459, 0.6940000057220459, 0.6936666369438171, 0.6956666707992554, 0.6976666450500488, 0.7009999752044678, 0.699999988079071, 0.7023333311080933, 0.7026666402816772, 0.7046666741371155, 0.7053333520889282, 0.7089999914169312, 0.7093333601951599, 0.7086666822433472, 0.7113333344459534, 0.7136666774749756, 0.7146666646003723, 0.7149999737739563, 0.7153333425521851, 0.7176666855812073, 0.718999981880188, 0.7200000286102295, 0.718666672706604, 0.7203333377838135, 0.722000002861023, 0.7213333249092102, 0.7223333120346069, 0.7233333587646484, 0.7236666679382324, 0.7246666550636292, 0.7250000238418579, 0.7263333201408386, 0.7269999980926514, 0.731333315372467, 0.7300000190734863]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 8, 8, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [38, 49, 44]], "fitness": -0.6868571639060974, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.0165940306174392, 1.1447280336915857, 0.8758354763848639, 0.7938752034557274, 0.6940307682452658, 0.6255450163141391, 0.5881776392042614, 0.5569076888895999, 0.5343207609714881, 0.5268997345397721, 0.49599955136576634, 0.4870252386611356, 0.47770119551040274, 0.48157737958448565, 0.4884523397163708, 0.4716661399885522, 0.4775487899803892], "accuracy": [0.31660282611846924, 0.6145819425582886, 0.6716417670249939, 0.7066437602043152, 0.7368907928466797, 0.765949010848999, 0.7798177003860474, 0.7891955971717834, 0.8018755912780762, 0.8031964302062988, 0.8183859586715698, 0.8204993009567261, 0.8290846943855286, 0.8260467648506165, 0.8145555257797241, 0.8181217908859253, 0.8206313848495483], "val_loss": [0.8764517647879464, 0.6551492725099836, 0.6158431598118373, 0.54501702104296, 0.4812521593911307, 0.4428406357765198, 0.43806157793317524, 0.4184566651071821, 0.4163547669138227, 0.40389483315604074, 0.3879310573850359, 0.3811962178775242, 0.3877007280077253, 0.39343648297446115, 0.4141224707875933, 0.39392006397247314, 0.43499769483293804], "val_accuracy": [0.6370000243186951, 0.699999988079071, 0.7390000224113464, 0.746999979019165, 0.7726666927337646, 0.7956666946411133, 0.8040000200271606, 0.8143333196640015, 0.8166666626930237, 0.8323333263397217, 0.8376666903495789, 0.8426666855812073, 0.8346666693687439, 0.8373333215713501, 0.8373333215713501, 0.8346666693687439, 0.8186666369438171]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [5, 7, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [14, 49, 44]], "fitness": -0.328000009059906, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.2991965437420387, 2.297496904172382, 2.2944931721312574, 2.292752190855563, 2.2912899666238125, 2.2914213746876655, 2.289883857610408, 2.2885779913752513, 2.288582710463373, 2.287391879822773, 2.287630475696367, 2.2873291453476265, 2.2874193833945307, 2.2885347540667342, 2.288196182364344, 2.288496574185953, 2.288786311553312, 2.2890612355092292, 2.289382638680606, 2.2895300217654806, 2.2905292805112536, 2.2897093710158054, 2.291024512020258, 2.291185191751172, 2.2917014168175127, 2.291946268352488], "accuracy": [0.10117553919553757, 0.10236428678035736, 0.11147800832986832, 0.11821424216032028, 0.12138422578573227, 0.1282525360584259, 0.13221503794193268, 0.14000792801380157, 0.14568749070167542, 0.14832915365695953, 0.15414080023765564, 0.16232994198799133, 0.1644432693719864, 0.15532954037189484, 0.16457535326480865, 0.15902787446975708, 0.16999074816703796, 0.16616034507751465, 0.16457535326480865, 0.17197199165821075, 0.16576409339904785, 0.17395325005054474, 0.16549994051456451, 0.1702549159526825, 0.1670849323272705, 0.16682076454162598], "val_loss": [1.9675429207938058, 1.9650462014334542, 1.96328524180821, 1.9620529583522253, 1.9612197875976562, 1.9605584825788225, 1.960099492754255, 1.959735597882952, 1.9594781058175224, 1.9594120979309082, 1.9595279012407576, 1.9598342350551061, 1.960207189832415, 1.9606125014168876, 1.961099488394601, 1.9615480559212821, 1.9619336809430803, 1.9623486655099052, 1.9627572468348913, 1.9630912372044154, 1.9633823803492956, 1.963719163622175, 1.96400785446167, 1.9643043790544783, 1.9645561490740096, 1.9648322377886092], "val_accuracy": [0.06266666948795319, 0.09600000083446503, 0.12266666442155838, 0.1469999998807907, 0.164000004529953, 0.18433333933353424, 0.20033332705497742, 0.2280000001192093, 0.24433332681655884, 0.25099998712539673, 0.2590000033378601, 0.2633333206176758, 0.2709999978542328, 0.273333340883255, 0.27300000190734863, 0.27566665410995483, 0.2800000011920929, 0.281333327293396, 0.2800000011920929, 0.28299999237060547, 0.2849999964237213, 0.28433331847190857, 0.28433331847190857, 0.28299999237060547, 0.28166666626930237, 0.28033334016799927]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 8, 5, 2, 4, 3, 4, 8, 9, 3, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 80, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [69, 49, 44]], "fitness": -0.10599999874830246, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), grad), tf.math.add(beta, grad))))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.8174381651315925, 2.3040388439467177, 2.374971043211736, 2.304967128873076, 2.3035108830871804, 2.302858278342305], "accuracy": [0.1900673657655716, 0.1006472036242485, 0.14449875056743622, 0.09576013684272766, 0.09549596905708313, 0.09906221181154251], "val_loss": [1.9769326618739538, 1.9670964649745397, 1.975452218736921, 1.9739257267543249, 1.9735029765537806, 1.9733824729919434], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10133333504199982, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 6, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [38, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3599042.4927485734, 68610384.95945053, 317693665.9992075, 879750279.202219, 1882721173.420684, 3494540225.242636], "accuracy": [0.09668471664190292, 0.10157178342342377, 0.10011887550354004, 0.09932637959718704, 0.10130762308835983, 0.09787346422672272], "val_loss": [13533347.714285715, 108033552.0, 364354779.4285714, 863350802.2857143, 1685876626.2857144, 2912790162.285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 8, 0, 6, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 2, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 3, 3, 3, 0, 2, 0, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 42, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [44, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [32, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(tf.math.pow(grad, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 8, 8, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 0, 8, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [38, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.sqrt(alpha)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 5, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(alpha, tf.math.subtract(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), grad)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [3.0995476420290736e+22, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05573900416493416, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 3, 4, 8, 6, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 2, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.pow(alpha, tf.math.add(beta, tf.math.sqrt(beta))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [5, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3025829070878143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 8, 8, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [38, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.3025829070878143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 8, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025829070878143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 8, 5, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 4, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3009102750747212, 2.3027629554074878, 2.3023927324184448, 2.3024712142029835, 2.30229529964768, 2.3038192378877884], "accuracy": [0.09589222073554993, 0.09060890227556229, 0.08849557489156723, 0.09192973375320435, 0.08875974267721176, 0.0874389111995697], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 5, 1, 2, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [46, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 12, 8, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))", "other_info": {"loss": [2.3009102750747212, 2.3027629554074878, 2.3023927324184448, 2.3024712142029835, 2.30229529964768, 2.3038192378877884], "accuracy": [0.09589222073554993, 0.09060890227556229, 0.08849557489156723, 0.09192973375320435, 0.08875974267721176, 0.0874389111995697], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 8, 2, 4, 3, 4, 1, 1, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [3, 1, 0, 3, 1, 1], [80, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 1, 1, 0, 0, 0, 0, 12, 8, 4, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(sigma)), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))", "other_info": {"loss": [2.3009102750747212, 2.3027629554074878, 2.3023927324184448, 2.3024712142029835, 2.30229529964768, 2.3038192378877884], "accuracy": [0.09589222073554993, 0.09060890227556229, 0.08849557489156723, 0.09192973375320435, 0.08875974267721176, 0.0874389111995697], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]