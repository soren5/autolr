[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 4, 0, 9, 2, 6, 2, 3, 8, 2, 3, 3, 2, 3, 8, 4, 8, 5, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 3, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [1, 2], [76], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8168571591377258, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 22, 14, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad)))))))))))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.006396423729577, 1.4296384281753753, 1.0179527563630566, 0.8990788188010254, 0.8214965347742377, 0.7652236119457885, 0.7425724889592503, 0.7262805795168848, 0.6718512826103812, 0.6630659061195576, 0.6639682150646019, 0.6183563342829422, 0.6289316319109285, 0.6175872885540036, 0.5962006742723425, 0.5903601547226599, 0.5712072952879167, 0.56314072673032, 0.568081298248879, 0.5571052534484813, 0.535724481240775, 0.5347255715179469, 0.527852087661874, 0.5075242775636909, 0.5054638156832926, 0.5032861406036955, 0.4914593749617258, 0.49817684915922006, 0.48987982831201565, 0.47653007768699757, 0.46384535173084346, 0.465235082165692, 0.4523087111895252, 0.44493250684054175, 0.4628267651378298, 0.45791420345655315, 0.4408714363855567], "accuracy": [0.33060362935066223, 0.5122177004814148, 0.6231673359870911, 0.6684718132019043, 0.6929071545600891, 0.7106062769889832, 0.7215691208839417, 0.7223616242408752, 0.7511557340621948, 0.7486461400985718, 0.7504953145980835, 0.7637035846710205, 0.7614582180976868, 0.7644960880279541, 0.7721568942070007, 0.7750627398490906, 0.780610203742981, 0.785629391670227, 0.7872143983840942, 0.7848368883132935, 0.7955356240272522, 0.7930260300636292, 0.8033285140991211, 0.8100647330284119, 0.8068947196006775, 0.8112534880638123, 0.8190463781356812, 0.8101968169212341, 0.8181217908859253, 0.8203672170639038, 0.8280280232429504, 0.8253863453865051, 0.8252542614936829, 0.8334434032440186, 0.8277638554573059, 0.8300092220306396, 0.8385946154594421], "val_loss": [1.3572838987622942, 0.7878447941371373, 0.6854350737162999, 0.6264545066016061, 0.585428169795445, 0.5724326542445591, 0.5767080954142979, 0.5516417367117745, 0.5214373213904244, 0.5238288300377982, 0.48601300375802176, 0.5445302213941302, 0.5119952304022652, 0.4899095296859741, 0.43957180636269705, 0.45001046998160227, 0.4807385376521519, 0.43540217195238384, 0.42713152510779245, 0.42681463275636944, 0.43498346635273527, 0.4070536323956081, 0.4016297033854893, 0.38705761092049734, 0.40027451515197754, 0.39305371046066284, 0.3980929596083505, 0.382038984979902, 0.3691475135939462, 0.379819529397147, 0.376028231212071, 0.3658719147954668, 0.36754230090550016, 0.36059887068612234, 0.3685819591794695, 0.3582914471626282, 0.3765280672482082], "val_accuracy": [0.49533334374427795, 0.6650000214576721, 0.7039999961853027, 0.7133333086967468, 0.7369999885559082, 0.7436666488647461, 0.7319999933242798, 0.7636666893959045, 0.7536666393280029, 0.7486666440963745, 0.784333348274231, 0.7326666712760925, 0.7716666460037231, 0.7723333239555359, 0.8073333501815796, 0.8029999732971191, 0.777999997138977, 0.8086666464805603, 0.809333324432373, 0.8133333325386047, 0.8009999990463257, 0.828000009059906, 0.82833331823349, 0.8346666693687439, 0.8169999718666077, 0.82833331823349, 0.8233333230018616, 0.828000009059906, 0.8463333249092102, 0.8446666598320007, 0.8366666436195374, 0.8479999899864197, 0.840666651725769, 0.843666672706604, 0.8456666469573975, 0.8396666646003723, 0.8326666951179504]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 7, 4, 9, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 3, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 54, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8002856969833374, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.006394712459835, 1.42918161950044, 1.0184785767222566, 0.8918555385290813, 0.8311074586859972, 0.7609412139747845, 0.7360576179600379, 0.7366377241213748, 0.6669085798655928, 0.6877138404137013, 0.6552757734966442, 0.6142541889690247, 0.6379552248556852, 0.6130160017256661, 0.5920250368565458, 0.6022055347235667, 0.5683208780439224, 0.563725581227072, 0.5742100528942643, 0.5624001895857053, 0.5416234887161149, 0.5379460594909475, 0.5239953558600228, 0.5066645973748409, 0.5076964780670572, 0.5055386585692342, 0.4837578623372928, 0.5015715302855441, 0.4895804975097678, 0.47583129312761896, 0.46671514234932077, 0.4665842023681199, 0.4492923044344343, 0.4450588403219214, 0.46422952085264985, 0.45749217533967623, 0.4422404954359752], "accuracy": [0.33047154545783997, 0.5128780603408813, 0.6275261044502258, 0.6671509742736816, 0.6900013089179993, 0.709021270275116, 0.7224937081336975, 0.7232862114906311, 0.7491744756698608, 0.7367587089538574, 0.7516840696334839, 0.7621186375617981, 0.7547219395637512, 0.7670056819915771, 0.7737419009208679, 0.7689869403839111, 0.7872143983840942, 0.7854973077774048, 0.785629391670227, 0.7837802171707153, 0.7944789528846741, 0.7917051911354065, 0.8025360107421875, 0.8101968169212341, 0.8070268034934998, 0.8096684813499451, 0.8244617581367493, 0.8090080618858337, 0.8144234418869019, 0.8190463781356812, 0.8267071843147278, 0.8256505131721497, 0.8308017253875732, 0.8380662798881531, 0.8280280232429504, 0.830669641494751, 0.8370096683502197], "val_loss": [1.3581999370029993, 0.7924291746956962, 0.6826978581292289, 0.643048882484436, 0.5889218534742083, 0.5795325211116246, 0.5576939071927752, 0.5237616470881871, 0.5324779408318656, 0.5302411828722272, 0.48595508507319857, 0.5380857161113194, 0.5344116858073643, 0.44798145975385395, 0.46057581901550293, 0.4542635338647025, 0.4499658686774118, 0.44159233570098877, 0.4270703707422529, 0.4286538617951529, 0.43167825256075176, 0.4100325448172433, 0.40669745206832886, 0.39119877985545565, 0.39966497250965666, 0.38742299590791973, 0.41145198685782297, 0.3825106280190604, 0.3708933506693159, 0.38180398089545114, 0.37809031350272043, 0.36392792633601595, 0.3601944957460676, 0.36304315498897005, 0.3641126070703779, 0.35499298572540283, 0.3870586667742048], "val_accuracy": [0.4959999918937683, 0.6539999842643738, 0.7070000171661377, 0.7213333249092102, 0.7393333315849304, 0.737666666507721, 0.7546666860580444, 0.7710000276565552, 0.7703333497047424, 0.7540000081062317, 0.7793333530426025, 0.7490000128746033, 0.7513333559036255, 0.8036666512489319, 0.796999990940094, 0.8006666898727417, 0.7956666946411133, 0.8009999990463257, 0.8116666674613953, 0.8096666932106018, 0.8013333082199097, 0.828000009059906, 0.8216666579246521, 0.8259999752044678, 0.8206666707992554, 0.8323333263397217, 0.8103333115577698, 0.8263333439826965, 0.8420000076293945, 0.8433333039283752, 0.8343333601951599, 0.8513333201408386, 0.8463333249092102, 0.8389999866485596, 0.8493333458900452, 0.8453333377838135, 0.8286666870117188]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7988571524620056, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.976203038613432, 1.4851815689194237, 1.0071071406176628, 0.9196720857189442, 0.791764245230398, 0.8008862274937925, 0.7007925067170264, 0.7453972202140295, 0.7189011464123997, 0.6699912712133446, 0.6652441006909114, 0.65492940878021, 0.6219433973084635, 0.6303524499115234, 0.5857015108120613, 0.5872171936553499, 0.5723187891782913, 0.5593937943955107, 0.5380007678869457], "accuracy": [0.339321106672287, 0.4846123456954956, 0.6277902722358704, 0.6546030640602112, 0.7067758440971375, 0.6968696117401123, 0.7327961921691895, 0.7174745798110962, 0.7257958054542542, 0.7450799345970154, 0.7425703406333923, 0.739400327205658, 0.7597411274909973, 0.7677981853485107, 0.7821952104568481, 0.7705719470977783, 0.7777044177055359, 0.7893276810646057, 0.7989697456359863], "val_loss": [1.5662571021488734, 0.7898417711257935, 0.7372902461460659, 0.6590358529772077, 0.5602156945637294, 0.5571081468037197, 0.6278037854603359, 0.596696036202567, 0.5575359719140189, 0.5322610139846802, 0.528588993208749, 0.47534501552581787, 0.4731426239013672, 0.4453059264591762, 0.48868208272116526, 0.4418332406452724, 0.45621955394744873, 0.4420299530029297, 0.45256640229906353], "val_accuracy": [0.35766667127609253, 0.6483333110809326, 0.6690000295639038, 0.7149999737739563, 0.753333330154419, 0.7473333477973938, 0.7213333249092102, 0.7049999833106995, 0.734666645526886, 0.7613333463668823, 0.7383333444595337, 0.781333327293396, 0.7923333048820496, 0.8059999942779541, 0.778333306312561, 0.8040000200271606, 0.7826666831970215, 0.8046666383743286, 0.7916666865348816]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7979999780654907, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.98597305001458, 1.4575323450283493, 1.0638783605595339, 0.9337447858710157, 0.8321703816480515, 0.7815731291316834, 0.7367278730880316, 0.7115860446301496, 0.6791717899930538, 0.6862730076678, 0.6787397611284489, 0.6248088607604179, 0.6229284095049313, 0.6136542079061675, 0.5860941616252209, 0.5673817003785722, 0.5905137826202568, 0.5790011480720272, 0.5828010877440587], "accuracy": [0.3401135802268982, 0.5198785066604614, 0.6131290197372437, 0.6619997620582581, 0.6983225345611572, 0.7066437602043152, 0.724739134311676, 0.7300224304199219, 0.7453441023826599, 0.7446836829185486, 0.7338528633117676, 0.7627789974212646, 0.7637035846710205, 0.7687227725982666, 0.778232753276825, 0.789988100528717, 0.7829877138137817, 0.7884030938148499, 0.7808743715286255], "val_loss": [1.4914203371320451, 0.8886136668069022, 0.8377212967191424, 0.6765828813825335, 0.6155260290418353, 0.5919292484010968, 0.5568979297365461, 0.5063753979546683, 0.5298942497798375, 0.49072941711970736, 0.4774652549198696, 0.475244402885437, 0.4650494541440691, 0.4446111406598772, 0.45143961906433105, 0.4457966259547642, 0.45969040053231375, 0.48707560130528044, 0.4463194097791399], "val_accuracy": [0.4663333296775818, 0.593999981880188, 0.6146666407585144, 0.6880000233650208, 0.7196666598320007, 0.737666666507721, 0.7456666827201843, 0.7666666507720947, 0.7556666731834412, 0.7873333096504211, 0.7929999828338623, 0.7933333516120911, 0.8009999990463257, 0.8136666417121887, 0.7943333387374878, 0.7976666688919067, 0.7853333353996277, 0.7676666378974915, 0.7950000166893005]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 9, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7979999780654907, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), alpha)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.976216657129277, 1.484960869854121, 1.0100205645679625, 0.9252427937946363, 0.7898422404365958, 0.7795592069216472, 0.7198795986181835, 0.7395558447145657, 0.694726057127246, 0.6686648731029518, 0.6694691210784428, 0.6606371302992645, 0.6196733008774438, 0.6278658218119895, 0.5868717650176197, 0.588391682002932, 0.5733158773891583, 0.5622750957250564, 0.5399269928565005], "accuracy": [0.339321106672287, 0.48474442958831787, 0.62660151720047, 0.6519614458084106, 0.7025492191314697, 0.7111346125602722, 0.7280412316322327, 0.7124554514884949, 0.7378153204917908, 0.748778223991394, 0.7387399077415466, 0.7360982894897461, 0.7564390301704407, 0.7697794437408447, 0.7791573405265808, 0.7693831920623779, 0.7778365015983582, 0.7874785661697388, 0.7991018295288086], "val_loss": [1.5667242322649275, 0.7893931525094169, 0.7272112880434308, 0.6480718340192523, 0.5572821923664638, 0.5683070421218872, 0.565145594733102, 0.5597140448434013, 0.5627908536366054, 0.5151300089699882, 0.53219245161329, 0.4758401257651193, 0.47702668394361225, 0.44406962394714355, 0.4989428349903652, 0.4430006912776402, 0.44917125361306326, 0.4431399873324803, 0.44001008783067974], "val_accuracy": [0.35766667127609253, 0.6476666927337646, 0.6650000214576721, 0.6993333101272583, 0.7526666522026062, 0.7403333187103271, 0.7356666922569275, 0.7433333396911621, 0.7269999980926514, 0.7643333077430725, 0.7396666407585144, 0.7839999794960022, 0.7879999876022339, 0.8073333501815796, 0.7676666378974915, 0.8073333501815796, 0.7889999747276306, 0.7983333468437195, 0.800000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [31, 9, 44]], "fitness": -0.7794285416603088, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.28222927110637, 2.2265863794581984, 2.1371121866639107, 1.9892013238452886, 1.7656831866037481, 1.5350754264008493, 1.3470930165586974, 1.2189567937449126, 1.1285118480573288, 1.0564872667600829, 1.0139732763295193, 0.9714502738671863, 0.933360750286917, 0.9031938940400791, 0.8876862145134675, 0.854908305034189, 0.8472748352567738, 0.8343359396332023, 0.8116894851759393, 0.7996003698553187, 0.7891557647992654, 0.7748051851480046, 0.7636051638613539, 0.7537873488422934, 0.7388470835217144, 0.7307169455751972, 0.7210222355536245, 0.7204221668039976, 0.7112250085504316, 0.7038714115677288, 0.7036257024454388, 0.6844345079814879, 0.6913730081408456, 0.6827314684199242, 0.6743498729157362, 0.6692465671206888, 0.671434392782329, 0.6693724194191482, 0.668578831526928, 0.6574256613569143, 0.6511631992357345, 0.6427812741385663, 0.645533104637878, 0.6382771363395033], "accuracy": [0.14859332144260406, 0.26878878474235535, 0.3591335415840149, 0.41328755021095276, 0.47272488474845886, 0.5085193514823914, 0.555408775806427, 0.583410382270813, 0.6123365759849548, 0.6349227428436279, 0.6419231295585632, 0.6635847091674805, 0.6709813475608826, 0.6802271604537964, 0.6885483860969543, 0.6935675740242004, 0.6996433734893799, 0.7018887996673584, 0.7112666964530945, 0.7108704447746277, 0.713908314704895, 0.7166820764541626, 0.7280412316322327, 0.7298903465270996, 0.7275128960609436, 0.7321357727050781, 0.7353057861328125, 0.7401928305625916, 0.7449478507041931, 0.7450799345970154, 0.7424382567405701, 0.7495707273483276, 0.7478536367416382, 0.7504953145980835, 0.7532690763473511, 0.7553823590278625, 0.752740740776062, 0.759609043598175, 0.7540615797042847, 0.7581561207771301, 0.7619865536689758, 0.7623828053474426, 0.7643640041351318, 0.7672698497772217], "val_loss": [1.9250775745936803, 1.8608220645359583, 1.7483410154070174, 1.5640522752489363, 1.3210750307355608, 1.1041743755340576, 0.954371724809919, 0.8573844603129795, 0.7949027504239764, 0.745537417275565, 0.7118224416460309, 0.6846304450716291, 0.6631719895771572, 0.6466846976961408, 0.6315745796476092, 0.6182464361190796, 0.6062158686774117, 0.5971462215696063, 0.5819063186645508, 0.5757150139127459, 0.5718367610658918, 0.5582209314618792, 0.5533795186451503, 0.5489651645932879, 0.5441956179482597, 0.536411029951913, 0.5356042385101318, 0.5254015581948417, 0.5233788660594395, 0.5189475502286639, 0.513067194393703, 0.511068514415196, 0.5046215397971017, 0.5025990860802787, 0.498977678162711, 0.49475189617701937, 0.49609361376081196, 0.49245597634996685, 0.48886309351239887, 0.4848348753792899, 0.48728963306971956, 0.4792665754045759, 0.47912395000457764, 0.47654424394880024], "val_accuracy": [0.3343333303928375, 0.4300000071525574, 0.4963333308696747, 0.5490000247955322, 0.5889999866485596, 0.6516666412353516, 0.6729999780654907, 0.6856666803359985, 0.6933333277702332, 0.7026666402816772, 0.718999981880188, 0.7160000205039978, 0.7196666598320007, 0.7283333539962769, 0.7386666536331177, 0.7426666617393494, 0.7443333268165588, 0.7433333396911621, 0.753333330154419, 0.7556666731834412, 0.7490000128746033, 0.7616666555404663, 0.7553333044052124, 0.7576666474342346, 0.7639999985694885, 0.7703333497047424, 0.7636666893959045, 0.7776666879653931, 0.7636666893959045, 0.7706666588783264, 0.7739999890327454, 0.7706666588783264, 0.777999997138977, 0.7749999761581421, 0.7763333320617676, 0.7789999842643738, 0.7850000262260437, 0.778333306312561, 0.7960000038146973, 0.7826666831970215, 0.7870000004768372, 0.7950000166893005, 0.7853333353996277, 0.7940000295639038]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7668571472167969, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9625656972896972, 1.4744190753899735, 1.0756763015141686, 0.8592605350465035, 0.8354967927746942, 0.7366659324072482, 0.7223601800622941, 0.6822445350804301, 0.686874583176555, 0.6971799764713795, 0.648016807638092, 0.6359045026387679, 0.604382298397681], "accuracy": [0.34724608063697815, 0.47589486837387085, 0.6129969358444214, 0.6782459616661072, 0.6756042838096619, 0.7232862114906311, 0.7298903465270996, 0.737022876739502, 0.7371549606323242, 0.7347774505615234, 0.7515519857406616, 0.7504953145980835, 0.7688548564910889], "val_loss": [1.525829587663923, 0.9296775885990688, 0.6626700333186558, 0.6537896054131644, 0.6013714075088501, 0.5854421854019165, 0.5542227881295341, 0.5009693247931344, 0.5372419868196759, 0.5500742707933698, 0.5115215608051845, 0.5141093390328544, 0.5190573079245431], "val_accuracy": [0.36633333563804626, 0.6620000004768372, 0.7116666436195374, 0.7080000042915344, 0.7239999771118164, 0.7323333621025085, 0.7506666779518127, 0.7743333578109741, 0.7593333125114441, 0.7363333106040955, 0.7490000128746033, 0.7463333606719971, 0.7436666488647461]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7574285864830017, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9622125163322048, 1.4699996304691523, 1.0697505885993233, 0.8598705073861619, 0.8314232996048283, 0.7269465353400433, 0.7517863643750412, 0.6962588810964803, 0.6727992653878232, 0.6720382371567275, 0.640216016411986], "accuracy": [0.3483027219772339, 0.4753665328025818, 0.6115440726280212, 0.6799629926681519, 0.6734909415245056, 0.7209087014198303, 0.7165499925613403, 0.7263241410255432, 0.7343811988830566, 0.7424382567405701, 0.7512878179550171], "val_loss": [1.525421176637922, 0.9280642781938825, 0.6672941957201276, 0.665405137198312, 0.5859680346080235, 0.5508363928113665, 0.5493852410997663, 0.5270447560719081, 0.6180675200053624, 0.5138945920126778, 0.5226710864475795], "val_accuracy": [0.36533331871032715, 0.6636666655540466, 0.7096666693687439, 0.6966666579246521, 0.7383333444595337, 0.7566666603088379, 0.7536666393280029, 0.7540000081062317, 0.7250000238418579, 0.7516666650772095, 0.7379999756813049]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.5854285955429077, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2853733402406378, 2.185822770548629, 7.856971047762567, 2.1179674231632903, 2.002218979917513, 2.0800398376403373, 2.2280236154956086, 2.2255267717771843, 1.8383271013662217, 1.6648517330608286, 1.9632233201929954, 1.4165911434852783, 1.4132227674215194, 1.466857203025198, 1.2706367370711027, 1.474791813063631, 1.1778599845892277], "accuracy": [0.18940694630146027, 0.21701228618621826, 0.1954827606678009, 0.23299431800842285, 0.3279619514942169, 0.33284902572631836, 0.19363360106945038, 0.26020342111587524, 0.37287017703056335, 0.4407607913017273, 0.38053098320961, 0.5075947642326355, 0.5151234865188599, 0.5168405771255493, 0.5698058605194092, 0.5208030939102173, 0.5949016213417053], "val_loss": [1.7284126281738281, 1.9008326530456543, 1.9006662368774414, 1.5837530067988805, 1.5909899302891322, 2.0056766782488142, 1.8299604143415178, 1.6768524987357003, 1.301931279046195, 1.7406748362949915, 1.243647745677403, 0.9246214798518589, 1.2277491433279855, 0.9731151035853794, 1.1654332705906458, 0.978738716670445, 0.8944170815604073], "val_accuracy": [0.2619999945163727, 0.17266666889190674, 0.20399999618530273, 0.38999998569488525, 0.34433332085609436, 0.09933333098888397, 0.2853333353996277, 0.35199999809265137, 0.48233333230018616, 0.48899999260902405, 0.4860000014305115, 0.6523333191871643, 0.48899999260902405, 0.578000009059906, 0.6156666874885559, 0.6043333411216736, 0.6140000224113464]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.3700000047683716, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2853181086920507, 2.18002994377631, 2.171218637619603, 2.367520359985549, 2.3036419262644827, 2.3033187274116615, 2.3034254379118786, 2.30304119388866], "accuracy": [0.18953903019428253, 0.21503104269504547, 0.22493726015090942, 0.12336547672748566, 0.09800554811954498, 0.09311848133802414, 0.09206181764602661, 0.09813763201236725], "val_loss": [1.724759306226458, 1.691929817199707, 2.0525921412876675, 1.9742860112871443, 1.973672798701695, 1.9735798154558455, 1.9737403733389718, 1.973705564226423], "val_accuracy": [0.2630000114440918, 0.2926666736602783, 0.36633333563804626, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.1003333330154419, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.2702857255935669, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 21, 11, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2853126986277745, 2.199988092933396, 2.6501712546199303, 2.30591383277622, 2.3036930237337896, 2.303314909943185], "accuracy": [0.1900673657655716, 0.20512482523918152, 0.14859332144260406, 0.09430722147226334, 0.1026284471154213, 0.09760929644107819], "val_loss": [1.7275183541434151, 1.9641851016453333, 1.9783314977373396, 1.9743078776768275, 1.9737441880362374, 1.9735848563058036], "val_accuracy": [0.25566667318344116, 0.11866666376590729, 0.09866666793823242, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [1, 2], [76], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [5, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3007016918520966, 2.302400516748838, 2.302582371740325, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10368511080741882, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973043509892055, 1.9736442565917969, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09233333170413971, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024385837027896, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 1, 7, 2, 3, 6, 6, 5, 9, 8, 3, 0, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 2, 1, 1, 3, 3, 3, 3, 1, 1, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 31, 31, 21, 10, 4, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(beta)), alpha), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.negative(grad), tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [59195.75786684737, 2.313590629776912, 2.305347798727507, 2.303457146449222, 2.3031241613813065, 2.3030982097504302], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.0952318087220192, 0.09615638852119446, 0.09655263274908066, 0.08994849026203156], "val_loss": [1.9886343819754464, 1.9772296633039201, 1.974503993988037, 1.9737770216805595, 1.9736572674342565, 1.9736097199576241], "val_accuracy": [0.10400000214576721, 0.1003333330154419, 0.1003333330154419, 0.10400000214576721, 0.1003333330154419, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 41, 3], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [9, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024385837027896, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024385837027896, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 88], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 1, 0, 3, 1, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023735405258483, 2.3015609676843276, 2.300270446744089, 2.3016205958529015, 2.3028580764533193, 2.303014914089773], "accuracy": [0.0936468094587326, 0.08955223858356476, 0.10315678268671036, 0.08981640636920929, 0.09351472556591034, 0.08770307898521423], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 4, 1, 2, 2, 6, 6, 3, 8, 2, 3, 3, 2, 3, 8, 0, 8, 9, 6, 4, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 1, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 63, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 3, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 22, 17, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), beta), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.3023735405258483, 2.3015609676843276, 2.300270446744089, 2.3016205958529015, 2.3028580764533193, 2.303014914089773], "accuracy": [0.0936468094587326, 0.08955223858356476, 0.10315678268671036, 0.08981640636920929, 0.09351472556591034, 0.08770307898521423], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]