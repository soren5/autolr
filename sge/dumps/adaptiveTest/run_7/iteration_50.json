[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 1, 7, 8, 5, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 2, 6, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 1, 5, 2, 3, 2, 1, 1, 3, 2, 0, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8197143077850342, "mapping_values": [1, 2, 2, 1, 1, 0, 40, 40, 22, 18, 2, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), grad), tf.math.multiply(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta))))))))))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0147130513912366, 1.4330125475887137, 1.0665167314564437, 0.8980055184427931, 0.8327537427063805, 0.7779474469412745, 0.744109998148005, 0.7178308727514191, 0.7260161368539226, 0.659757534896441, 0.6750166813033903, 0.6470376749505393, 0.6254023477590599, 0.6136693483755621, 0.6092095558889916, 0.5994335586809605, 0.5944690542993545, 0.5719779837857368, 0.5796299467642924, 0.54970052849741, 0.5387628348889903, 0.5343190813108663, 0.5353102866432781, 0.5097140661320115, 0.5132940613700729, 0.5310209686367849, 0.5252767974721632, 0.49680686600849755, 0.48602908252173915, 0.487871621475716, 0.47476617011962835, 0.45970081163907583, 0.4726393945173675, 0.45726897786668486, 0.46618640818820734, 0.44904952141524085, 0.45729278207707], "accuracy": [0.33522653579711914, 0.505349338054657, 0.6168273687362671, 0.6649055480957031, 0.6889446377754211, 0.7038700580596924, 0.7195879220962524, 0.7288337349891663, 0.7255316376686096, 0.7475894689559937, 0.739400327205658, 0.7544577717781067, 0.7560427784919739, 0.7667415142059326, 0.7677981853485107, 0.7746664881706238, 0.7733456492424011, 0.7862898111343384, 0.7817989587783813, 0.793422281742096, 0.798309326171875, 0.7973847389221191, 0.7955356240272522, 0.8062343001365662, 0.8070268034934998, 0.7993659973144531, 0.8072909712791443, 0.8149517774581909, 0.8137630224227905, 0.8203672170639038, 0.8239334225654602, 0.8253863453865051, 0.8228767514228821, 0.8314621448516846, 0.8219521641731262, 0.8318583965301514, 0.8333113193511963], "val_loss": [1.5353173187800817, 0.9802673884800502, 0.7900234631129673, 0.6056918246405465, 0.5776463747024536, 0.5649630001613072, 0.5362839358193534, 0.5611165932246617, 0.511779921395438, 0.5197368860244751, 0.4958251714706421, 0.481860739844186, 0.4654879570007324, 0.46033460753304617, 0.46547089304242817, 0.4880815403802054, 0.43036792959485737, 0.4301298260688782, 0.4700437443596976, 0.4618274824959891, 0.4077891026224409, 0.456305776323591, 0.40734221254076275, 0.41958865949085783, 0.402322666985648, 0.39011759417397635, 0.39441026960100445, 0.39010827030454365, 0.37854633160999845, 0.37369390044893536, 0.39148824555533274, 0.36213319642203196, 0.36599486214773996, 0.388950731073107, 0.3665097526141575, 0.4019858070782253, 0.3686181732586452], "val_accuracy": [0.34200000762939453, 0.5596666932106018, 0.6853333115577698, 0.734666645526886, 0.734666645526886, 0.7446666955947876, 0.7580000162124634, 0.7423333525657654, 0.762666642665863, 0.7620000243186951, 0.7766666412353516, 0.7793333530426025, 0.7896666526794434, 0.7916666865348816, 0.7919999957084656, 0.7576666474342346, 0.8023333549499512, 0.8146666884422302, 0.781000018119812, 0.781333327293396, 0.8140000104904175, 0.7850000262260437, 0.8230000138282776, 0.8080000281333923, 0.8256666660308838, 0.8333333134651184, 0.8253333568572998, 0.8293333053588867, 0.8366666436195374, 0.8326666951179504, 0.8273333311080933, 0.8473333120346069, 0.843999981880188, 0.8263333439826965, 0.8370000123977661, 0.8146666884422302, 0.840666651725769]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [7, 2, 1, 7, 8, 1, 6, 2, 3, 3, 2, 3, 2, 8, 3, 3, 3, 2, 6, 4, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 3, 1, 5, 2, 3, 1, 3, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [78, 15, 14, 1, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8134285807609558, "mapping_values": [1, 2, 2, 1, 1, 0, 62, 62, 37, 25, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, alpha)), tf.math.multiply(grad, beta)))))), tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), alpha)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad)))))))))))), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.015081277376688, 1.4301111666659605, 1.0721778001578697, 0.9020606658840066, 0.8354523235764942, 0.7596683569745523, 0.751775271817599, 0.7144782651747695, 0.7172461099171793, 0.6642099350450723, 0.6771945564769846, 0.64212092844219, 0.6245511436758417, 0.6059423365912275, 0.6112458977905861, 0.5948164053423656, 0.5854815463694788, 0.5807641467256411, 0.5857324498897342, 0.5474366398062988, 0.5412809680859489, 0.5382341605765771, 0.5364755321377225, 0.5120174675459529, 0.5136544083788441, 0.5419430926633061, 0.5231310828542035, 0.49506443961736407, 0.488147470508159, 0.48791905951821146, 0.4773856329840755, 0.46349720314603676, 0.47251802567540696, 0.4638514554558838, 0.4649657539648387, 0.4518403465194221, 0.4549050476722367], "accuracy": [0.3362831771373749, 0.5070664286613464, 0.6148461103439331, 0.6609430909156799, 0.6892088055610657, 0.7132478952407837, 0.7168141603469849, 0.7288337349891663, 0.7300224304199219, 0.7429665923118591, 0.7401928305625916, 0.7580240368843079, 0.7557786107063293, 0.7675340175628662, 0.7675340175628662, 0.7774402499198914, 0.7783648371696472, 0.7807422876358032, 0.7792893648147583, 0.7944789528846741, 0.7960638999938965, 0.7987055778503418, 0.7946110367774963, 0.8054417967796326, 0.8053097128868103, 0.7954035401344299, 0.8059701323509216, 0.813498854637146, 0.8113855719566345, 0.8201030492782593, 0.8240655064582825, 0.8238013386726379, 0.824329674243927, 0.8261788487434387, 0.8257825970649719, 0.8285563588142395, 0.833179235458374], "val_loss": [1.5385076999664307, 0.9901481355939593, 0.7698274680546352, 0.6227273089545113, 0.584465776171003, 0.5669176748820713, 0.6211377382278442, 0.5495363644191197, 0.5084813492638725, 0.4967479876109532, 0.48616823128291536, 0.4879505293709891, 0.4688983644757952, 0.45890668460300993, 0.4742490564073835, 0.453177877834865, 0.43830852849142893, 0.4373997279575893, 0.45872063296181814, 0.4717227390834263, 0.4082205125263759, 0.4641079902648926, 0.409458475453513, 0.4176557574953352, 0.3972797138350351, 0.3971590910639082, 0.3927912286349705, 0.39475240877696444, 0.38395961693355013, 0.3854250567299979, 0.39284850869859966, 0.36702982016972135, 0.36673896653311594, 0.39006154026303974, 0.3733369708061218, 0.3912766831261771, 0.38447822843279156], "val_accuracy": [0.3356666564941406, 0.559333324432373, 0.6853333115577698, 0.7260000109672546, 0.7366666793823242, 0.7443333268165588, 0.7126666903495789, 0.7543333172798157, 0.7630000114440918, 0.7940000295639038, 0.7973333597183228, 0.7820000052452087, 0.7853333353996277, 0.7933333516120911, 0.7799999713897705, 0.7990000247955322, 0.7956666946411133, 0.8090000152587891, 0.7866666913032532, 0.7703333497047424, 0.8130000233650208, 0.7833333611488342, 0.8253333568572998, 0.8119999766349792, 0.8243333101272583, 0.8213333487510681, 0.8293333053588867, 0.8230000138282776, 0.8333333134651184, 0.8236666917800903, 0.8256666660308838, 0.8443333506584167, 0.8389999866485596, 0.8233333230018616, 0.8336666822433472, 0.8213333487510681, 0.831333339214325]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 2, 5, 7, 8, 5, 6, 2, 3, 3, 6, 0, 8, 3, 3, 3, 8, 2, 7, 4, 9, 9, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 1, 5, 2, 2, 2, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8108571171760559, "mapping_values": [1, 2, 2, 1, 1, 0, 16, 16, 9, 7, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(grad, grad)))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.014973496401929, 1.4308980705715708, 1.066696553843731, 0.9046289094639745, 0.8207704750160421, 0.773797971949428, 0.7508756718804351, 0.7065923894716055, 0.725159191531024, 0.6592201545978219, 0.6739398755212863, 0.656224133221701, 0.6271489787772504, 0.6069795839334003, 0.6134054358483243, 0.5977208670875762, 0.6015156673607243, 0.5758170610122267, 0.5789004255830651, 0.5508741373950307, 0.5352486491108835, 0.5410361430585471, 0.5238227022322429, 0.50925560008423, 0.5053168841876436, 0.5543358128824412, 0.5269953162324365, 0.4990635644396015, 0.4833671637553549, 0.4896157701230241, 0.4726629289126179, 0.46184893828876866, 0.4713883780729281, 0.45842320573659007, 0.4715161648692236, 0.4490663903760337, 0.45159373075466713], "accuracy": [0.33601900935173035, 0.5050851702690125, 0.617751955986023, 0.6612072587013245, 0.6926429867744446, 0.7082287669181824, 0.7206445932388306, 0.7321357727050781, 0.7228899598121643, 0.748778223991394, 0.7396644949913025, 0.752212405204773, 0.7557786107063293, 0.7658169269561768, 0.7701756954193115, 0.7773081660270691, 0.7730814814567566, 0.7815347909927368, 0.7808743715286255, 0.7924976944923401, 0.8009510040283203, 0.7965922355651855, 0.8001585006713867, 0.806630551815033, 0.8084797263145447, 0.7895918488502502, 0.804649293422699, 0.8145555257797241, 0.8181217908859253, 0.8197067975997925, 0.8249900937080383, 0.8238013386726379, 0.824329674243927, 0.8308017253875732, 0.8207634687423706, 0.8334434032440186, 0.8333113193511963], "val_loss": [1.5391595363616943, 0.9897969109671456, 0.7639753818511963, 0.6162495613098145, 0.5735067129135132, 0.5887171881539481, 0.5628380094255719, 0.5687468562807355, 0.5092743294579642, 0.5195879084723336, 0.48992182527269634, 0.48925658634730745, 0.4675432784216745, 0.4501724583762033, 0.4727464403424944, 0.47811455386025564, 0.43084451981953215, 0.4304107683045523, 0.4789260285241263, 0.44816889081682476, 0.41396480798721313, 0.4533072369439261, 0.4072864055633545, 0.4192312104361398, 0.39649237053734915, 0.3966016684259687, 0.3917679190635681, 0.3883893830435617, 0.3827710577419826, 0.3695089306150164, 0.3858982409749712, 0.36519343512398855, 0.3670709729194641, 0.38817996638161795, 0.369092549596514, 0.38927870988845825, 0.3693007230758667], "val_accuracy": [0.33633333444595337, 0.5559999942779541, 0.6940000057220459, 0.7256666421890259, 0.7386666536331177, 0.737666666507721, 0.7236666679382324, 0.7303333282470703, 0.7620000243186951, 0.7633333206176758, 0.7889999747276306, 0.7689999938011169, 0.7866666913032532, 0.7986666560173035, 0.7853333353996277, 0.7649999856948853, 0.8033333420753479, 0.8146666884422302, 0.7736666798591614, 0.7996666431427002, 0.812333345413208, 0.7916666865348816, 0.8253333568572998, 0.8080000281333923, 0.824999988079071, 0.828000009059906, 0.8289999961853027, 0.828000009059906, 0.8330000042915344, 0.8373333215713501, 0.8299999833106995, 0.8456666469573975, 0.8399999737739563, 0.8240000009536743, 0.8376666903495789, 0.8240000009536743, 0.8420000076293945]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 7, 9, 2, 0, 4, 6, 3, 2, 2, 2, 1, 9, 0, 8, 2, 2, 5, 9, 2, 8, 6, 5, 6, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 0, 4, 0, 0, 2, 3, 2, 1, 0, 2, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1], [0, 0], [2, 8], [5], [76], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8102856874465942, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 6, 3, 2, 4, 2, 2, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.015220365913521, 1.4330800788246048, 1.0671258016174905, 0.9065415537856463, 0.8252874373948774, 0.7557978599834531, 0.7527591406929022, 0.718283125682199, 0.7287383435062523, 0.6614245809127531, 0.6717901434628814, 0.6568677831303883, 0.6275779325035286, 0.613391940556875, 0.607542183625621, 0.5934149112762509, 0.5982884561081825, 0.5734295909037255, 0.5902324075775061, 0.544683659026305, 0.5361318116285042, 0.5355661764057982, 0.5387676945451921, 0.5106810316858731, 0.517861794160263, 0.5364314305500474, 0.5300720038076733, 0.49468622955868446, 0.4908725787242012, 0.4880977794045801, 0.47100413956063975, 0.4661830589244111, 0.48069262920652855, 0.45826191371379354, 0.46559365108863093, 0.4506061402302156, 0.46020950063848537], "accuracy": [0.3362831771373749, 0.5050851702690125, 0.6160348653793335, 0.6600185036659241, 0.6933034062385559, 0.7166820764541626, 0.7165499925613403, 0.7272487282752991, 0.7246070504188538, 0.7471932172775269, 0.7412495017051697, 0.7524765729904175, 0.7532690763473511, 0.7644960880279541, 0.7711002230644226, 0.778761088848114, 0.7758552432060242, 0.7829877138137817, 0.7707040309906006, 0.7950072884559631, 0.7977809906005859, 0.7988376617431641, 0.7928939461708069, 0.8047813773155212, 0.8043851256370544, 0.7971205711364746, 0.805177628993988, 0.8152159452438354, 0.8124422430992126, 0.8202351331710815, 0.8261788487434387, 0.8227446675300598, 0.8193105459213257, 0.8284242749214172, 0.8234050869941711, 0.8317263126373291, 0.8300092220306396], "val_loss": [1.5410540103912354, 0.9828915936606271, 0.7673967906406948, 0.6552272353853498, 0.5718061413083758, 0.5737043448856899, 0.6182823521750314, 0.5523386512483869, 0.5065083163125175, 0.5096696785518101, 0.4909259932381766, 0.4855085611343384, 0.46676880972726004, 0.47314817564828054, 0.4744588988167899, 0.45170910017830984, 0.43152953897203716, 0.43052005767822266, 0.44857440676007954, 0.4458990607942854, 0.4106074145862034, 0.46956866128104074, 0.4099290115492685, 0.4149843965257917, 0.4027288726397923, 0.39975122043064665, 0.38970059156417847, 0.3953297223363604, 0.38303970439093454, 0.3768675242151533, 0.4032733014651707, 0.3655878560883658, 0.36949632849012104, 0.383250287600926, 0.36899438926151823, 0.3966699923787798, 0.37264987400599886], "val_accuracy": [0.33533334732055664, 0.5603333115577698, 0.6880000233650208, 0.7106666564941406, 0.746999979019165, 0.7490000128746033, 0.7123333215713501, 0.7599999904632568, 0.7630000114440918, 0.7770000100135803, 0.7916666865348816, 0.7770000100135803, 0.784333348274231, 0.7856666445732117, 0.7816666960716248, 0.7919999957084656, 0.7993333339691162, 0.8176666498184204, 0.7963333129882812, 0.8033333420753479, 0.8080000281333923, 0.7749999761581421, 0.8186666369438171, 0.8103333115577698, 0.8220000267028809, 0.8190000057220459, 0.8289999961853027, 0.8296666741371155, 0.8343333601951599, 0.8289999961853027, 0.8196666836738586, 0.8446666598320007, 0.8386666774749756, 0.8256666660308838, 0.8360000252723694, 0.8203333616256714, 0.8376666903495789]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 1, 1, 1, 9, 2, 2, 4, 1, 3, 2, 2, 2, 1, 3, 9, 8, 2, 2, 0, 3, 2, 8, 6, 5, 1, 1, 2, 2, 7, 2, 1, 8, 2, 3, 8, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 4, 0, 0, 2, 3, 3, 3, 0, 3, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [50, 15, 14, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2, 8], [5], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7865714430809021, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9807183211269537, 1.4167067203161472, 1.0120601560996745, 0.9444001589500358, 0.8060328903498667, 0.7622820016903538, 0.7599417592918302, 0.7279727109560893, 0.6902009683860811, 0.6549231203524128, 0.6482182272263742, 0.6732582686961744, 0.6083468216568676, 0.5979484424158378, 0.587004476432173, 0.5850958492714636, 0.5776873419171767, 0.5495270385702509], "accuracy": [0.33522653579711914, 0.5016510486602783, 0.637432336807251, 0.648659348487854, 0.6993792057037354, 0.7149649858474731, 0.7162858247756958, 0.72672039270401, 0.7321357727050781, 0.7461365461349487, 0.7516840696334839, 0.7526086568832397, 0.7689869403839111, 0.7662131786346436, 0.7684586048126221, 0.7803460359573364, 0.7795535326004028, 0.7921014428138733], "val_loss": [1.4073920590536935, 0.9230059215000698, 0.7759873526436942, 0.6231977769306728, 0.5808861936841693, 0.585284914289202, 0.5630782672337123, 0.5218868936811175, 0.5431743008749825, 0.516031163079398, 0.4997023173740932, 0.4709538732256208, 0.4502992459705898, 0.49444896834237234, 0.4481687545776367, 0.46138061795915875, 0.44227850437164307, 0.4434624058859689], "val_accuracy": [0.29766666889190674, 0.6623333096504211, 0.6173333525657654, 0.7283333539962769, 0.7289999723434448, 0.7379999756813049, 0.7163333296775818, 0.7676666378974915, 0.7553333044052124, 0.7596666812896729, 0.7723333239555359, 0.7940000295639038, 0.7993333339691162, 0.7606666684150696, 0.7960000038146973, 0.7846666574478149, 0.7976666688919067, 0.7929999828338623]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 4, 9, 7, 9, 2, 0, 4, 6, 3, 2, 2, 2, 1, 9, 0, 8, 2, 2, 5, 9, 2, 8, 6, 5, 6, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 2, 3, 1, 4, 0, 3, 2, 3, 2, 1, 0, 2, 2, 2, 3, 5, 4, 2, 2, 3, 3, 0, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2, 8], [5], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7805714011192322, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.015083593699312, 1.430425700903915, 1.0708490723805295, 0.9001859300691754, 0.8189301502671554, 0.7857019444183352, 0.7549817414803984, 0.7068243933360118, 0.7095378392943459, 0.6526000892103561, 0.687296887587846, 0.649418482950823, 0.6268754390409956, 0.6252441675734479, 0.6067866047517325, 0.5902052567839985], "accuracy": [0.3362831771373749, 0.5064060091972351, 0.6148461103439331, 0.6631884574890137, 0.6960771083831787, 0.7062475085258484, 0.7194558382034302, 0.733588695526123, 0.7342491149902344, 0.7466648817062378, 0.7326641082763672, 0.7544577717781067, 0.7563069462776184, 0.7598732113838196, 0.7716285586357117, 0.780610203742981], "val_loss": [1.538499185017177, 0.990819011415754, 0.7717396361487252, 0.6265455824988229, 0.5831633295331683, 0.5848742212568011, 0.58564179284232, 0.5553075245448521, 0.5147650923047747, 0.48852760451180594, 0.4813321317945208, 0.48647148268563406, 0.46455299854278564, 0.47987186908721924, 0.4666168349129813, 0.45129389422280447], "val_accuracy": [0.33533334732055664, 0.5583333373069763, 0.6840000152587891, 0.7289999723434448, 0.7403333187103271, 0.7366666793823242, 0.7176666855812073, 0.7366666793823242, 0.7493333220481873, 0.7943333387374878, 0.7973333597183228, 0.7820000052452087, 0.7879999876022339, 0.7766666412353516, 0.7923333048820496, 0.7933333516120911]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [7, 2, 9, 3, 5, 5, 3, 4, 6, 6, 2, 1, 2, 3, 3, 6, 5, 3, 7, 2, 9, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 1, 5, 2, 3, 2, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [78, 15, 14, 1, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7777143120765686, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.015084967463953, 1.4303517449627998, 1.0684624575604977, 0.9057399971988049, 0.8244321053337663, 0.7721460776448077, 0.74548622642636, 0.7227429409289104, 0.7292618340095588, 0.6648037246567556, 0.6741077311837899, 0.6499723888832297, 0.6284853777219717, 0.6126278679620604, 0.6142991626220152], "accuracy": [0.3362831771373749, 0.5062739253044128, 0.6166952848434448, 0.6590939164161682, 0.6894729733467102, 0.707568347454071, 0.722229540348053, 0.7283053994178772, 0.7223616242408752, 0.7464007139205933, 0.7423061728477478, 0.7553823590278625, 0.7547219395637512, 0.7643640041351318, 0.7703077793121338], "val_loss": [1.5392016002110072, 0.9885946001325335, 0.7691576991762433, 0.6344237668173653, 0.5746835810797555, 0.5684149094990322, 0.5320185422897339, 0.5386203357151577, 0.5053193739482335, 0.5014135156358991, 0.4880468675068447, 0.4853419235774449, 0.46317316804613384, 0.47311765807015554, 0.46255040168762207], "val_accuracy": [0.3343333303928375, 0.5580000281333923, 0.6869999766349792, 0.7163333296775818, 0.7333333492279053, 0.7506666779518127, 0.7546666860580444, 0.7663333415985107, 0.7696666717529297, 0.7946666479110718, 0.7933333516120911, 0.7723333239555359, 0.7860000133514404, 0.7870000004768372, 0.7933333516120911]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [7, 2, 9, 3, 5, 2, 3, 4, 6, 0, 2, 1, 2, 3, 3, 8, 8, 3, 8, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [3, 3, 5, 3, 3, 3, 1, 5, 0, 3, 2, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7594285607337952, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9842395934729828, 1.6547766384778007, 1.1183025832220925, 0.9262325538541537, 0.8034737327111128, 0.7649268701548558, 0.7351874108989052, 0.7042204904093357, 0.7032849860937682, 0.6736915889212705, 0.680342882395326, 0.6364995155194653], "accuracy": [0.33984941244125366, 0.43891164660453796, 0.6052040457725525, 0.6450931429862976, 0.6973979473114014, 0.7119271159172058, 0.7172104120254517, 0.7321357727050781, 0.7362303733825684, 0.7404569983482361, 0.7374191284179688, 0.7535332441329956], "val_loss": [1.7530226366860526, 0.8868985516684396, 0.6850137029375348, 0.6380516801561628, 0.5990489891597203, 0.5570766414914813, 0.5475313663482666, 0.5795890944344657, 0.5338191645486015, 0.5510592460632324, 0.5154974801199776, 0.5164036750793457], "val_accuracy": [0.33633333444595337, 0.6710000038146973, 0.7110000252723694, 0.7243333458900452, 0.7353333234786987, 0.7486666440963745, 0.7670000195503235, 0.7176666855812073, 0.7526666522026062, 0.7176666855812073, 0.7556666731834412, 0.7516666650772095]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [2, 2, 1, 1, 9, 1, 2, 4, 2, 3, 2, 2, 2, 1, 3, 0, 1, 2, 2, 0, 9, 2, 8, 6, 5, 6, 1, 2, 2, 7, 2, 1, 8, 2, 3, 8, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 1, 5, 2, 0, 2, 1, 2, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [18, 15, 14, 1, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.6445714235305786, "mapping_values": [1, 2, 2, 1, 1, 0, 37, 37, 20, 17, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.math.pow(grad, grad))), tf.math.add(tf.math.add(beta, grad), alpha))))), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta)), tf.math.subtract(tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, beta)), tf.math.add(beta, alpha)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.051305801593522, 1.7008770524928, 0.970357561501939, 0.7951614192495445, 0.8089820845897692, 0.73701645815141, 0.7513814695192256, 0.8272943674864597, 0.8132098640401711, 0.8229928669786535, 0.8286964659598903], "accuracy": [0.35186898708343506, 0.4987452030181885, 0.6561880707740784, 0.7099458575248718, 0.7129837274551392, 0.7260599732398987, 0.7327961921691895, 0.7135120630264282, 0.7074362635612488, 0.7086250185966492, 0.7195879220962524], "val_loss": [1.8059900147574288, 0.8856581619807652, 0.555573548589434, 0.5060596466064453, 0.5144855294908796, 0.48881525652749197, 0.5236648832048688, 0.5241583926337106, 0.5205339363643101, 0.5464858668191093, 0.5566151653017316], "val_accuracy": [0.5176666378974915, 0.6499999761581421, 0.7456666827201843, 0.7733333110809326, 0.7693333625793457, 0.7863333225250244, 0.7770000100135803, 0.7639999985694885, 0.7850000262260437, 0.7816666960716248, 0.7603333592414856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 2, 3, 3, 8, 8, 3, 7, 2, 9, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 1, 5, 2, 3, 2, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [78, 15, 14, 1, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.13914285600185394, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [10.421635241036748, 2.41286656006594, 2.3058597604438944, 2.303113853454338, 2.302861652133676, 2.303698492119451], "accuracy": [0.17276449501514435, 0.09853387624025345, 0.09708096832036972, 0.10130762308835983, 0.09893012791872025, 0.0940430611371994], "val_loss": [2.378458023071289, 1.9776714869907923, 1.9742185728890556, 1.9736970492771693, 1.9737328120640345, 1.9737200055803572], "val_accuracy": [0.10400000214576721, 0.10133333504199982, 0.1003333330154419, 0.09866666793823242, 0.09866666793823242, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 0, 2, 3, 3, 8, 8, 3, 7, 2, 9, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [0, 3, 2, 2, 3, 3, 0, 3, 2, 1, 1, 1, 0, 2, 2, 2, 3, 5, 4, 2, 2, 3, 3, 0, 3, 0, 0], [50, 15, 14, 94, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1], [0, 0], [2, 8], [5], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 35, 35, 21, 14, 5, 4, 2, 2, 0, 0, 5, 2, 3, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad)))), beta))), alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302561776607485, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 9, 7, 9, 2, 0, 4, 6, 3, 2, 2, 2, 1, 9, 0, 8, 2, 2, 5, 9, 2, 8, 6, 5, 6, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 2, 3, 3, 4, 0, 5, 2, 3, 2, 1, 0, 2, 2, 1, 3, 5, 4, 2, 2, 3, 3, 0, 3, 0, 0], [93, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1], [0, 0], [2, 8], [5], [76], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 5, 1, 2, 4, 2, 2, 0, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.712056804405558, 7.024002320195517, 17.18228940241971, 33.96231795031208, 57.616477752673454, 88.22018041624574], "accuracy": [0.09457138925790787, 0.09311848133802414, 0.10355303436517715, 0.09906221181154251, 0.09866596013307571, 0.1026284471154213], "val_loss": [3.004941531590053, 7.683987753731864, 16.15258244105748, 28.953027997698104, 46.779937744140625, 70.41940089634487], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 7, 9, 2, 0, 4, 6, 3, 2, 2, 2, 1, 9, 0, 8, 2, 2, 5, 9, 2, 8, 6, 5, 6, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 0, 4, 0, 0, 2, 3, 2, 1, 0, 2, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0], [0, 1], [2, 7], [5], [76], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 6, 3, 2, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 7, 2, 2, 0, 4, 6, 3, 2, 2, 2, 1, 9, 0, 8, 2, 2, 5, 9, 2, 8, 6, 5, 6, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 5, 5, 3, 0, 4, 0, 0, 2, 3, 2, 1, 0, 2, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1], [1, 0], [2, 8], [5], [76], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027788127780258, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [3, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 2, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 0, 1, 7, 5, 5, 2, 5, 5, 3, 2, 3, 2, 3, 3, 3, 3, 2, 7, 2, 9, 4, 5, 3, 5, 5, 1, 2, 3, 2, 8, 1, 8, 2, 3, 5, 5, 6, 4, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 2, 3, 1, 4, 0, 3, 2, 3, 2, 1, 0, 2, 2, 2, 3, 5, 4, 2, 2, 3, 3, 0, 3, 0, 0], [78, 29, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1], [0, 1], [2], [5], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 1, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(grad, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 2, 1, 7, 8, 5, 6, 0, 3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 6, 4, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 0, 3, 3, 1, 5, 2, 3, 2, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1], [0, 1], [2, 8], [5], [76], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(tf.math.sqrt(grad), grad)), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08757099509239197, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 9, 7, 8, 9, 0, 4, 6, 3, 2, 2, 2, 1, 9, 0, 8, 2, 2, 5, 9, 2, 8, 6, 5, 6, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [2, 1, 5, 3, 0, 4, 0, 0, 2, 3, 2, 1, 0, 2, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1], [0, 1], [2, 8], [5], [76], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [9, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 6, 2, 2, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027788127780258, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [7, 0, 9, 3, 5, 2, 2, 4, 4, 6, 5, 1, 2, 3, 3, 8, 8, 3, 5, 2, 5, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 1, 1, 3, 3, 3, 5, 3, 2, 3, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [21, 15, 14, 1, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [5, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.07885714620351791, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.302418661186834, 2.3018206253878084, 2.3006419463164582, 2.3002957626970577, 2.299158410499471, 2.2984749319184616, 2.2997669984698845, 2.299552846625654, 2.2999004584891747, 2.2988626092510955, 2.299102153162112, 2.2987412045959625, 2.2991075925445354, 2.2996672568398697, 2.3005438888266636, 2.30032359238991, 2.299423874235424], "accuracy": [0.09113723784685135, 0.09245806187391281, 0.0936468094587326, 0.09681680053472519, 0.10289261490106583, 0.11002509295940399, 0.09800554811954498, 0.1026284471154213, 0.10342095047235489, 0.10474177449941635, 0.10487385839223862, 0.1018359512090683, 0.10328886657953262, 0.09959053993225098, 0.0936468094587326, 0.09430722147226334, 0.10302469879388809], "val_loss": [1.97027587890625, 1.9695886884416853, 1.9692970684596471, 1.9692284039088659, 1.9693914822169714, 1.9695257459368025, 1.9696249280657088, 1.9695051056998116, 1.969419070652553, 1.9695516995021276, 1.9697157996041434, 1.9699968610491072, 1.9702516964503698, 1.9704403196062361, 1.9706578254699707, 1.9708645684378487, 1.971040861947196], "val_accuracy": [0.044333335012197495, 0.05133333429694176, 0.06199999898672104, 0.0676666647195816, 0.07066666334867477, 0.07233333587646484, 0.07100000232458115, 0.07666666805744171, 0.0806666687130928, 0.0820000022649765, 0.0820000022649765, 0.08399999886751175, 0.07800000160932541, 0.07833333313465118, 0.07833333313465118, 0.07733333110809326, 0.07733333110809326]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [7, 2, 9, 3, 5, 2, 3, 4, 2, 6, 2, 1, 2, 3, 3, 8, 8, 4, 7, 2, 9, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 1, 3, 2, 3, 2, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [78, 15, 14, 1, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 16, 16, 9, 7, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.add(tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.math.add(grad, grad), tf.math.add(beta, grad)))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302880971092574, 2.3034173040310657, 2.302976013568288, 2.3032370887774487, 2.3017927526152286, 2.3007816400793737], "accuracy": [0.08902391046285629, 0.09021265059709549, 0.08572183549404144, 0.08717474341392517, 0.09628847241401672, 0.1010434553027153], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [7, 1, 9, 7, 9, 2, 0, 4, 6, 3, 2, 2, 2, 1, 9, 0, 8, 2, 2, 5, 9, 2, 8, 6, 5, 6, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 5, 5, 3, 0, 4, 0, 0, 2, 3, 2, 1, 0, 2, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [26, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1], [0, 0], [2, 5], [5], [76], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [89, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302880971092574, 2.3034173040310657, 2.302976013568288, 2.3032370887774487, 2.3017927526152286, 2.3007816400793737], "accuracy": [0.08902391046285629, 0.09021265059709549, 0.08572183549404144, 0.08717474341392517, 0.09628847241401672, 0.1010434553027153], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]