[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 92, 74], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8205714225769043, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.006117636202317, 1.4417779493986922, 1.1107694913430568, 0.9000460621844886, 0.8098843405511574, 0.781472021861713, 0.7214828726008048, 0.7110600291210442, 0.6788847146568329, 0.6591876658230031, 0.647078724215138, 0.6345680642594058, 0.6157102578934299, 0.6192452702949296, 0.5867231601280638, 0.5931248927806048, 0.5665174129380526, 0.5545617582744155, 0.5378678617869795, 0.531449134016648, 0.5298173774455469, 0.5259037075214665, 0.4964567431290671, 0.5089597420260387, 0.4848210029023561, 0.4739326439466238, 0.47807209735942663, 0.4772563930027646, 0.4865555646176729], "accuracy": [0.3267732262611389, 0.5066701769828796, 0.601109504699707, 0.6623960137367249, 0.6950204968452454, 0.7033417224884033, 0.7364945411682129, 0.72672039270401, 0.7448157668113708, 0.7458723783493042, 0.759609043598175, 0.7593448758125305, 0.763439416885376, 0.7670056819915771, 0.7798177003860474, 0.7725531458854675, 0.7847048044204712, 0.7927618622779846, 0.7951393723487854, 0.7981772422790527, 0.8030643463134766, 0.8012151718139648, 0.8132346868515015, 0.8039889335632324, 0.8232730031013489, 0.8252542614936829, 0.8203672170639038, 0.8248580098152161, 0.8198388814926147], "val_loss": [1.5701335838862829, 0.7839926310947963, 0.718035272189549, 0.594772287777492, 0.6080403327941895, 0.5704470191683088, 0.5890449285507202, 0.5133358069828579, 0.5130895035607475, 0.4897707189832415, 0.5261328390666417, 0.4715350355420794, 0.4728344678878784, 0.46534276008605957, 0.46335649490356445, 0.49727301938193186, 0.4273539440972464, 0.41381561756134033, 0.41962794746671406, 0.4200615627425058, 0.42298197746276855, 0.4163706302642822, 0.4037310310772487, 0.377526479107993, 0.3820507100650242, 0.41006600856781006, 0.3868778944015503, 0.3791658452578953, 0.3828942435128348], "val_accuracy": [0.4086666703224182, 0.6793333292007446, 0.6753333210945129, 0.7443333268165588, 0.7196666598320007, 0.734000027179718, 0.7163333296775818, 0.7633333206176758, 0.7553333044052124, 0.7720000147819519, 0.746666669845581, 0.7836666703224182, 0.7933333516120911, 0.7839999794960022, 0.7993333339691162, 0.7603333592414856, 0.8163333535194397, 0.8133333325386047, 0.8246666789054871, 0.8153333067893982, 0.8146666884422302, 0.8159999847412109, 0.8183333277702332, 0.8403333425521851, 0.8299999833106995, 0.8190000057220459, 0.8346666693687439, 0.8370000123977661, 0.8326666951179504]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 2, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8042857050895691, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0062665515146896, 1.4364236921855345, 1.1022979483833055, 0.8819000617214843, 0.8089157910142923, 0.7972123439852682, 0.7381049985300516, 0.7160148815928575, 0.6753194820627387, 0.6523927650384269, 0.6520344064204511, 0.6374235404811562, 0.6126926122655202, 0.6209917331431536, 0.5869210544137623, 0.5905304542385812, 0.5734800713614324, 0.5567506850356234, 0.5352896229387227, 0.5363003318540613, 0.5240054242740989, 0.5285744569116123, 0.4979789717763312, 0.5059481992492932, 0.4992092966230365, 0.47814210516791444, 0.4776529840206851, 0.47081120795010734, 0.485189329143434], "accuracy": [0.3269053101539612, 0.5087835192680359, 0.6034870147705078, 0.6680755615234375, 0.7022850513458252, 0.7037379741668701, 0.7255316376686096, 0.7297582626342773, 0.7491744756698608, 0.7531369924545288, 0.7559106945991516, 0.7559106945991516, 0.7635715007781982, 0.7662131786346436, 0.7807422876358032, 0.7733456492424011, 0.780610203742981, 0.7913089394569397, 0.7952714562416077, 0.798309326171875, 0.8057059645652771, 0.8010830879211426, 0.8121780753135681, 0.8064984679222107, 0.8161405324935913, 0.8231409192085266, 0.8239334225654602, 0.8253863453865051, 0.8195747137069702], "val_loss": [1.5709562301635742, 0.7847086872373309, 0.6953875848225185, 0.6079885619027274, 0.5611660821097237, 0.5897875513349261, 0.6514951160975865, 0.5075889314923968, 0.4907553366252354, 0.49237046922956196, 0.5073172194617135, 0.4739058017730713, 0.4728445495877947, 0.4616472210202898, 0.46701295035226004, 0.507826430456979, 0.4252336025238037, 0.41663111107689993, 0.4214007088116237, 0.41622631890433176, 0.42303216457366943, 0.42475615228925434, 0.4084876946040562, 0.3828549725668771, 0.3815813490322658, 0.3955948693411691, 0.3908129930496216, 0.3865994129862104, 0.3876085451671055], "val_accuracy": [0.40933331847190857, 0.6850000023841858, 0.6916666626930237, 0.7396666407585144, 0.7446666955947876, 0.7266666889190674, 0.6936666369438171, 0.7749999761581421, 0.7746666669845581, 0.7770000100135803, 0.7570000290870667, 0.7773333191871643, 0.7926666736602783, 0.7903333306312561, 0.7960000038146973, 0.7586666941642761, 0.8180000185966492, 0.8136666417121887, 0.8233333230018616, 0.8173333406448364, 0.8136666417121887, 0.812666654586792, 0.8153333067893982, 0.8366666436195374, 0.8289999961853027, 0.8273333311080933, 0.8309999704360962, 0.8286666870117188, 0.8240000009536743]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.7994285821914673, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [1.9664278395219077, 1.5558529102791254, 1.0976833575405796, 0.8913093604321619, 0.8389168983405811, 0.7619486691897902, 0.7564558965135417, 0.6916655108928995, 0.7354216966426226, 0.6628738591510701, 0.6596228897044089, 0.6392570653092103, 0.612511307335706, 0.5997759155262856, 0.6185405424415569, 0.5937410769382598, 0.5734843425526517, 0.5730143192736795], "accuracy": [0.3357548415660858, 0.49227315187454224, 0.5983357429504395, 0.6765288710594177, 0.678642213344574, 0.7161537408828735, 0.7157574892044067, 0.7366266250610352, 0.7187954187393188, 0.7425703406333923, 0.7531369924545288, 0.7515519857406616, 0.7640998363494873, 0.7696473598480225, 0.7564390301704407, 0.7769119143486023, 0.7783648371696472, 0.7812706232070923], "val_loss": [1.4565583637782507, 0.8138325384684971, 0.7394674505506244, 0.6373941728046962, 0.5747926575796944, 0.5959582669394357, 0.5348407881600517, 0.528529303414481, 0.5103204080036708, 0.4868800640106201, 0.47402702059064594, 0.48384170872824533, 0.4399558561188834, 0.4808465242385864, 0.5014033317565918, 0.43901876892362324, 0.49710103443690706, 0.4285320554460798], "val_accuracy": [0.4976666569709778, 0.6273333430290222, 0.6936666369438171, 0.7113333344459534, 0.7416666746139526, 0.7306666374206543, 0.7616666555404663, 0.7446666955947876, 0.7573333382606506, 0.7816666960716248, 0.7816666960716248, 0.765999972820282, 0.8063333630561829, 0.777999997138977, 0.7643333077430725, 0.7929999828338623, 0.7473333477973938, 0.8053333163261414]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 2, 9, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.7771428823471069, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.274559151620881, 2.193555915328915, 2.035877568579117, 1.7525503039753685, 1.4575531571028868, 1.2631006056149843, 1.1304976506366107, 1.0458513583646962, 0.9840119800090853, 0.9433037493884241, 0.9008326891186278, 0.870162078646495, 0.8533334981700795, 0.8243098919024132, 0.807582753225167, 0.8013252255198915, 0.7634150899396581, 0.7621010973342989, 0.7512914227252119, 0.7415067274588415, 0.7316809031925874, 0.7080045819455733, 0.7119927414105065, 0.6976674617777537, 0.6922152045144381, 0.6810773122721596, 0.6747520326103721, 0.6736919168058624, 0.6664017260176961, 0.6637064700412586, 0.6626039675481568, 0.645234528179607, 0.6537396152730254], "accuracy": [0.16351869702339172, 0.30603620409965515, 0.40206050872802734, 0.469819039106369, 0.5223880410194397, 0.5688812732696533, 0.6058644652366638, 0.6339981555938721, 0.656980574131012, 0.6699247360229492, 0.677189290523529, 0.6909258961677551, 0.6944921612739563, 0.7073041796684265, 0.7124554514884949, 0.7160216569900513, 0.7232862114906311, 0.7260599732398987, 0.728701651096344, 0.7257958054542542, 0.7341170310974121, 0.7412495017051697, 0.7424382567405701, 0.7500990629196167, 0.7478536367416382, 0.7539294958114624, 0.7504953145980835, 0.7556465268135071, 0.7561748623847961, 0.7593448758125305, 0.7573636174201965, 0.763439416885376, 0.7604015469551086], "val_loss": [1.9078363691057478, 1.7995621136256628, 1.5804837090628487, 1.266472680228097, 1.0172041484287806, 0.8714545794895717, 0.7837945393153599, 0.7300185816628593, 0.6943438053131104, 0.6591740335736956, 0.6370270422526768, 0.6221692221505302, 0.6039569548198155, 0.5900208950042725, 0.5794731889452253, 0.5696977376937866, 0.5666768039975848, 0.5514215401240757, 0.5481184891292027, 0.543593168258667, 0.5331793682915824, 0.521688631602696, 0.5235521623066494, 0.5147650071552822, 0.5137964487075806, 0.5059174299240112, 0.5009924513953072, 0.496389525277274, 0.4989344903400966, 0.4903347832815988, 0.48555219173431396, 0.48423540592193604, 0.48979537827628], "val_accuracy": [0.3700000047683716, 0.4560000002384186, 0.5356666445732117, 0.6010000109672546, 0.6489999890327454, 0.6823333501815796, 0.6973333358764648, 0.7070000171661377, 0.7196666598320007, 0.7233333587646484, 0.7369999885559082, 0.7396666407585144, 0.7463333606719971, 0.7473333477973938, 0.7486666440963745, 0.7519999742507935, 0.746999979019165, 0.765666663646698, 0.7543333172798157, 0.7586666941642761, 0.7680000066757202, 0.7673333287239075, 0.7630000114440918, 0.7773333191871643, 0.7796666622161865, 0.7803333401679993, 0.7863333225250244, 0.7873333096504211, 0.781333327293396, 0.777999997138977, 0.7866666913032532, 0.7836666703224182, 0.7823333144187927]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 92, 74], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [22, 49, 44, 92]], "fitness": -0.741428554058075, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2981169172455025, 2.290761455364074, 2.284106332203023, 2.2739967070455958, 2.2643620974163197, 2.257799042277348, 2.2475893445506845, 2.237944589362184, 2.227673134862345, 2.2176439798330163, 2.2044603316665183, 2.1897117146537477, 2.176777211288656, 2.1585950642654907, 2.139146896291009, 2.1192625513984984, 2.0934699308823412, 2.07427384481454, 2.047484027648158, 2.017280223174039, 1.9879492239756213, 1.9532558694098052, 1.9180529846601546, 1.8755502939350208, 1.8450167453709436, 1.7968850877731861, 1.7573231221851404, 1.7161595867200061, 1.6727976008428953, 1.6356190046409433, 1.5997011693807845, 1.5474958216682668, 1.5262645522380753, 1.4842347375878318, 1.451498501682798, 1.4157808475238678, 1.3923281366169145, 1.3726261032728266, 1.340687930607572, 1.3140451810331928, 1.295984690577646, 1.2656068834945462, 1.2554515438183125, 1.2320303961963324, 1.223185847038921, 1.1985642585016245, 1.185312551923668, 1.1623679028683491, 1.167425341483955, 1.1378723379328362, 1.1226359014387663, 1.1136948734840713, 1.0959141462265838, 1.0871756098226644, 1.0701835891432403, 1.0612675468636037, 1.0577032258875572, 1.0479823497339655, 1.039284544330562, 1.0263221814821046, 1.026567593195246, 1.0146757086679652, 1.0063048469203102, 1.001035260289746, 0.9984079193618587, 0.9836357459652268, 0.9815612066029841, 0.966994056376043, 0.9675138496829849, 0.9579157324404749, 0.9477156356593102, 0.9433945619812762, 0.9364537514038626, 0.9274434377772067, 0.9235065738050425, 0.9119172487607202, 0.9144561884740497, 0.9145985334273169, 0.9164033211012873, 0.8996051045976311, 0.9031986047279692, 0.8979236994594584, 0.878629706405362, 0.8940717214685248, 0.8787739283814012, 0.8800401646368823, 0.8723199455461891, 0.8698323457988341, 0.8614369678128869, 0.8695632612952435, 0.8690038655790214, 0.8688280587466544, 0.8393305819961357, 0.8500516734827369, 0.8439088206344104, 0.8393089628773847, 0.8435717261919272, 0.8438263107615219, 0.8428881690644191, 0.8401172462077803], "accuracy": [0.10130762308835983, 0.11438383162021637, 0.14000792801380157, 0.16021661460399628, 0.19191652536392212, 0.20921939611434937, 0.22837141156196594, 0.25544843077659607, 0.26178839802742004, 0.28120461106300354, 0.3007528781890869, 0.32360321283340454, 0.334169864654541, 0.3435477614402771, 0.3571522831916809, 0.3683793544769287, 0.3909655213356018, 0.38621053099632263, 0.39849424362182617, 0.4095892310142517, 0.41962751746177673, 0.4278166592121124, 0.4375908076763153, 0.4447232782840729, 0.4543653428554535, 0.46546030044555664, 0.47312110662460327, 0.48289525508880615, 0.4876502454280853, 0.4931977391242981, 0.5005943775177002, 0.5126138925552368, 0.5143309831619263, 0.5248976349830627, 0.5375775694847107, 0.5400871634483337, 0.5375775694847107, 0.544710099697113, 0.5551446080207825, 0.5638620853424072, 0.5626733303070068, 0.5753533244132996, 0.574560821056366, 0.5832782983779907, 0.5803724527359009, 0.5879011750221252, 0.5960903167724609, 0.6003170013427734, 0.5992603302001953, 0.6033549308776855, 0.6139215230941772, 0.6127327680587769, 0.6133931875228882, 0.6243560910224915, 0.6300356388092041, 0.6302998065948486, 0.6336019039154053, 0.6384889483451843, 0.6353189945220947, 0.6370360851287842, 0.6429798007011414, 0.6468101739883423, 0.648659348487854, 0.6509047746658325, 0.6544709801673889, 0.656980574131012, 0.6553955674171448, 0.6616035103797913, 0.6643772125244141, 0.6633205413818359, 0.6672830581665039, 0.6733588576316833, 0.6744155287742615, 0.6748117804527283, 0.6774534583091736, 0.6753401160240173, 0.6704530715942383, 0.6656980514526367, 0.6793025732040405, 0.6856426000595093, 0.6803592443466187, 0.683000922203064, 0.6892088055610657, 0.6791704893112183, 0.6910579800605774, 0.6886804699897766, 0.6885483860969543, 0.6939638257026672, 0.6966054439544678, 0.6933034062385559, 0.6956809163093567, 0.6816800832748413, 0.6944921612739563, 0.7014925479888916, 0.6988508701324463, 0.6991150379180908, 0.7024171352386475, 0.7033417224884033, 0.7016246318817139, 0.6963412761688232], "val_loss": [1.9633502960205078, 1.9558726038251604, 1.9483554022652763, 1.9406920841761999, 1.9327101707458496, 1.9244159970964705, 1.9155970300946916, 1.9059703690665108, 1.895731040409633, 1.8845807484218053, 1.8723109109061105, 1.8585459845406669, 1.8436354909624373, 1.8271384920392717, 1.8089558737618583, 1.7889020783560616, 1.7665937968662806, 1.7427166530064173, 1.7165252140590124, 1.6882825238364083, 1.6576404912131173, 1.6245676108769007, 1.5894299915858678, 1.5520080838884627, 1.5135912895202637, 1.4731170790536063, 1.4323997156960624, 1.3911410399845667, 1.349977697644915, 1.3093762738364083, 1.269643749509539, 1.2304140499659948, 1.1942065443311418, 1.1595641544886999, 1.1261886187962122, 1.0952187946864538, 1.0660066264016288, 1.0393742833818709, 1.0144366877419608, 0.9911654676709857, 0.969874518258231, 0.9492970194135394, 0.9305503027779716, 0.9126883234296527, 0.8965106351034982, 0.881204502923148, 0.8670637437275478, 0.8537251438413348, 0.8412984098706927, 0.8289557354790824, 0.8175167696816581, 0.8069094930376325, 0.7972054822104317, 0.7878761461802891, 0.7788007259368896, 0.770493575504848, 0.7626875809260777, 0.7552185569490705, 0.748815485409328, 0.7420926094055176, 0.735222578048706, 0.7297864471163068, 0.7237258298056466, 0.7185984339032855, 0.7129883595875331, 0.7076193264552525, 0.7027651923043388, 0.6979364327022007, 0.6935561725071498, 0.6893410852977208, 0.6845485142299107, 0.6804472889219012, 0.676422085080828, 0.6717392546789986, 0.6682968650545392, 0.6645585639136178, 0.6609726633344378, 0.6578166144234794, 0.6549567154475621, 0.6514501401356289, 0.6492633478982108, 0.645750914301191, 0.6426442861557007, 0.6408472572054181, 0.6379153047289167, 0.634906700679234, 0.6324720552989415, 0.6295971870422363, 0.6264352968760899, 0.6246574095317295, 0.6224826404026577, 0.6205965791429792, 0.6183098214013236, 0.6154632908957345, 0.6134774684906006, 0.6113333531788417, 0.6099669252123151, 0.607165915625436, 0.6054796491350446, 0.6037523065294538], "val_accuracy": [0.09466666728258133, 0.164000004529953, 0.2316666692495346, 0.2823333442211151, 0.31933334469795227, 0.34599998593330383, 0.3633333444595337, 0.3776666522026062, 0.38999998569488525, 0.40566667914390564, 0.4163333475589752, 0.4269999861717224, 0.43933331966400146, 0.4493333399295807, 0.45766666531562805, 0.46833333373069763, 0.4816666543483734, 0.4959999918937683, 0.503333330154419, 0.512666642665863, 0.5239999890327454, 0.5323333144187927, 0.546999990940094, 0.5506666898727417, 0.5576666593551636, 0.5630000233650208, 0.5676666498184204, 0.5773333311080933, 0.5893333554267883, 0.5986666679382324, 0.6043333411216736, 0.6136666536331177, 0.6196666955947876, 0.6309999823570251, 0.6393333077430725, 0.6466666460037231, 0.6503333449363708, 0.6579999923706055, 0.6626666784286499, 0.6676666736602783, 0.6726666688919067, 0.6743333339691162, 0.6756666898727417, 0.6779999732971191, 0.6790000200271606, 0.6826666593551636, 0.6823333501815796, 0.6830000281333923, 0.6840000152587891, 0.6886666417121887, 0.6913333535194397, 0.6909999847412109, 0.690666675567627, 0.6959999799728394, 0.6970000267028809, 0.6970000267028809, 0.7003333568572998, 0.7003333568572998, 0.7016666531562805, 0.7020000219345093, 0.7043333053588867, 0.7056666612625122, 0.7089999914169312, 0.7083333134651184, 0.7099999785423279, 0.7126666903495789, 0.7146666646003723, 0.7139999866485596, 0.7143333554267883, 0.7163333296775818, 0.7173333168029785, 0.7196666598320007, 0.7206666469573975, 0.7229999899864197, 0.7223333120346069, 0.7239999771118164, 0.7246666550636292, 0.7246666550636292, 0.7266666889190674, 0.7279999852180481, 0.7283333539962769, 0.7296666502952576, 0.731333315372467, 0.7310000061988831, 0.7336666584014893, 0.7333333492279053, 0.7336666584014893, 0.7350000143051147, 0.734333336353302, 0.7366666793823242, 0.7353333234786987, 0.737666666507721, 0.7360000014305115, 0.7369999885559082, 0.7379999756813049, 0.7396666407585144, 0.7386666536331177, 0.7416666746139526, 0.7429999709129333, 0.7426666617393494]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 2, 9, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 4, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.5742856860160828, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), alpha)))), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.300704282209653, 2.2994852541869486, 2.298934682579781, 2.2949465468354653, 2.291896010591464, 2.2915764571401374, 2.2886787729335105, 2.287215271866506, 2.2848190409144262, 2.2840826545393367, 2.2818171957527658, 2.279758941448596, 2.278541152849803, 2.275289189121144, 2.272486209995349, 2.271533216074111, 2.2670460797225354, 2.2681318081412507, 2.266561091709855, 2.2628403120289042, 2.2623277345369392, 2.259668075208572, 2.2574328942904147, 2.2535499303316664, 2.25332100935238, 2.2495854910826716, 2.2474535729639156, 2.245466999925123, 2.2417790284482417, 2.241645310706372, 2.2391474022447726, 2.234269099606499, 2.2335141668104304, 2.230918916366702, 2.22844053744451, 2.223856792221956, 2.2224053220505793, 2.2199987806207577, 2.2167960908104005, 2.2135236160929304, 2.2120953451420386, 2.206522732331469, 2.204370918054748, 2.20249521951193, 2.199266907750277, 2.1953355074401197, 2.1925128755820125, 2.1858814244162623, 2.187348763515385, 2.1812063454164567, 2.1760262644380672, 2.1724716176005434, 2.1679344288094513, 2.16481098774764, 2.159222740711962, 2.1548836367902755, 2.1518788744571613, 2.1473462902843017, 2.1434228733593303, 2.137521143744351, 2.133800926619139, 2.1288051483984147, 2.1240380961960175, 2.1192126731988448, 2.1143058625824493, 2.1055379481662646, 2.1028099027307925, 2.0960787977949975, 2.090994449733129, 2.0832201409506808, 2.0754482470892675, 2.0746575658977338, 2.0659987584490582, 2.0549324410954615, 2.0495243751456345, 2.0426951398812956, 2.036324525569109, 2.032199192292749, 2.024517088833266, 2.014373936972456, 2.010184837322918, 2.002270512246437, 1.9897018460675695, 1.9865212113928754, 1.9761768744968389, 1.9702265602864326, 1.9569057306168243, 1.953407183881953, 1.9404526227626817, 1.9355543177786945, 1.9296282566203071, 1.9196846905543175, 1.9051911486705155, 1.900771140926282, 1.8890782086573037, 1.8773986761832298, 1.869657429879163, 1.8665682238956816, 1.8547058493753135, 1.8436430642916903], "accuracy": [0.0948355570435524, 0.09232597798109055, 0.10196803510189056, 0.1072513535618782, 0.11715757846832275, 0.11742173880338669, 0.12574297189712524, 0.12917712330818176, 0.1328754425048828, 0.14040417969226837, 0.14515915513038635, 0.1538766324520111, 0.15651829540729523, 0.16100911796092987, 0.17342491447925568, 0.1678774207830429, 0.18399155139923096, 0.17936864495277405, 0.18293488025665283, 0.20155857503414154, 0.19204860925674438, 0.20036983489990234, 0.2044644057750702, 0.2102760523557663, 0.21793685853481293, 0.22744683921337128, 0.22916391491889954, 0.23563598096370697, 0.24157971143722534, 0.24633470177650452, 0.2452780306339264, 0.25637298822402954, 0.25584468245506287, 0.2619204819202423, 0.2646942138671875, 0.27024170756340027, 0.2769779562950134, 0.278959184885025, 0.28384625911712646, 0.2915070652961731, 0.2930920720100403, 0.2958658039569855, 0.2953374683856964, 0.3023378551006317, 0.30101704597473145, 0.30643242597579956, 0.3147536516189575, 0.3187161684036255, 0.3195086419582367, 0.33126401901245117, 0.328490287065506, 0.3353586196899414, 0.3447364866733551, 0.33747193217277527, 0.349359393119812, 0.3467177450656891, 0.3461894094944, 0.3559635579586029, 0.3494914770126343, 0.35609564185142517, 0.3646810054779053, 0.368511438369751, 0.3679831027984619, 0.3743230700492859, 0.36785101890563965, 0.37485140562057495, 0.37722888588905334, 0.3813234567642212, 0.378549724817276, 0.38766345381736755, 0.39664509892463684, 0.3843613862991333, 0.3937392830848694, 0.404570072889328, 0.4072117209434509, 0.40285298228263855, 0.41183462738990784, 0.4095892310142517, 0.41249504685401917, 0.41209879517555237, 0.40681546926498413, 0.41645753383636475, 0.4157971143722534, 0.42530709505081177, 0.43059042096138, 0.4235900044441223, 0.4356095492839813, 0.42966583371162415, 0.4336283206939697, 0.4356095492839813, 0.436930388212204, 0.43309998512268066, 0.44828951358795166, 0.44049662351608276, 0.44868576526641846, 0.44630828499794006, 0.45172369480133057, 0.44010037183761597, 0.44525161385536194, 0.4485536813735962], "val_loss": [1.9691098758152552, 1.9672562054225378, 1.9654028075081962, 1.9635611942836217, 1.9617088181631905, 1.9599013328552246, 1.9580963679722376, 1.9562605449131556, 1.9544579642159599, 1.952636446271624, 1.9508107049124581, 1.9489568982805525, 1.9471132414681571, 1.9452550751822335, 1.943391936165946, 1.9415065220424108, 1.9396022387913294, 1.937704426901681, 1.9357670375279017, 1.9338089397975378, 1.9318229811532157, 1.9298137937273299, 1.9277896881103516, 1.9257283891950334, 1.923665932246617, 1.9215448924473353, 1.9193874086652483, 1.917182241167341, 1.9149347032819475, 1.9126642090933663, 1.9103747776576452, 1.907998698098319, 1.905615942818778, 1.903169768197196, 1.9006767272949219, 1.8980768067496163, 1.8954706192016602, 1.8928019659859794, 1.8900607654026575, 1.8872482436043876, 1.8843868800571986, 1.8814539909362793, 1.8784633363996233, 1.8754094668797083, 1.8722954477582658, 1.8690851756504603, 1.865811892918178, 1.8624093873160226, 1.8590071541922433, 1.855459553854806, 1.8518243517194475, 1.8481076785496302, 1.8442677089146204, 1.8403777394975935, 1.8363477843148368, 1.8322348594665527, 1.8280561310904366, 1.8237769944327218, 1.8194036483764648, 1.8148978778294154, 1.8103253500802177, 1.8056582042149134, 1.8009098597935267, 1.7959934643336706, 1.7909883090427943, 1.7858174187796456, 1.7805719375610352, 1.7751736640930176, 1.7697052955627441, 1.764087132045201, 1.7583276203700475, 1.7525014877319336, 1.7465012414114816, 1.7403153691973006, 1.7339766366141183, 1.727534294128418, 1.720978123801095, 1.7143110888344901, 1.7075347900390625, 1.7005532469068254, 1.6935091018676758, 1.686303002493722, 1.6788674082074846, 1.6714047363826208, 1.6637438705989294, 1.6559752055576868, 1.6480178151811873, 1.6400321211133684, 1.6317898886544364, 1.6234959874834334, 1.615093742098127, 1.6065658501216344, 1.5977599620819092, 1.588965892791748, 1.579970019204276, 1.570866482598441, 1.5617288521357946, 1.5525836603982108, 1.5432849952152796, 1.5338709013802665], "val_accuracy": [0.04533333331346512, 0.06066666543483734, 0.07500000298023224, 0.09233333170413971, 0.1133333370089531, 0.12966667115688324, 0.14366666972637177, 0.1613333374261856, 0.17766666412353516, 0.1940000057220459, 0.21066667139530182, 0.22566667199134827, 0.24199999868869781, 0.2540000081062317, 0.2666666805744171, 0.2783333361148834, 0.289000004529953, 0.29600000381469727, 0.3063333332538605, 0.3160000145435333, 0.3240000009536743, 0.3316666781902313, 0.3386666774749756, 0.343666672706604, 0.34966665506362915, 0.3540000021457672, 0.3596666753292084, 0.3623333275318146, 0.36633333563804626, 0.36766666173934937, 0.37166666984558105, 0.37533333897590637, 0.3779999911785126, 0.38100001215934753, 0.38466668128967285, 0.38733333349227905, 0.39100000262260437, 0.3943333327770233, 0.39899998903274536, 0.40299999713897705, 0.406333327293396, 0.41066667437553406, 0.4116666615009308, 0.4126666784286499, 0.4156666696071625, 0.4176666736602783, 0.42133334279060364, 0.4256666600704193, 0.4286666810512543, 0.4326666593551636, 0.4350000023841858, 0.437333345413208, 0.4426666796207428, 0.445333331823349, 0.4480000138282776, 0.44966667890548706, 0.4519999921321869, 0.45500001311302185, 0.45766666531562805, 0.4593333303928375, 0.46133333444595337, 0.4659999907016754, 0.46833333373069763, 0.46933332085609436, 0.4713333249092102, 0.4729999899864197, 0.47466665506362915, 0.4779999852180481, 0.4816666543483734, 0.484333336353302, 0.48633334040641785, 0.49033331871032715, 0.492333322763443, 0.49433332681655884, 0.4976666569709778, 0.49933332204818726, 0.5013333559036255, 0.5023333430290222, 0.5043333172798157, 0.5049999952316284, 0.5093333125114441, 0.5133333206176758, 0.515999972820282, 0.5183333158493042, 0.5206666588783264, 0.5226666927337646, 0.5236666798591614, 0.5239999890327454, 0.528333306312561, 0.5306666493415833, 0.534333348274231, 0.5350000262260437, 0.5376666784286499, 0.5403333306312561, 0.5440000295639038, 0.5446666479110718, 0.5473333597183228, 0.5493333339691162, 0.5503333210945129, 0.5509999990463257]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 2, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 2, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 92, 74], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [81, 49, 44, 92]], "fitness": -0.28542858362197876, "mapping_values": [1, 25, 25, 16, 9, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))))))), tf.math.negative(tf.math.add(alpha, tf.math.negative(grad))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2865346273206337, 2.2512454943429554, 2.2827556515571352, 2.2706726323249806, 2.3046105852720364, 2.302369333576328], "accuracy": [0.18782195448875427, 0.16510368883609772, 0.11438383162021637, 0.15136705338954926, 0.09826971590518951, 0.10579843819141388], "val_loss": [1.6488407339368547, 1.7837651797703333, 1.9638018608093262, 1.9760704721723283, 1.9737052917480469, 1.9706117766244071], "val_accuracy": [0.281333327293396, 0.20033332705497742, 0.12666666507720947, 0.10133333504199982, 0.10133333504199982, 0.20466665923595428]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 5, 9, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 0, 1, 1, 0, 1, 0, 3], [9, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301714229231041, 2.3025845446213125, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [67, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 92, 74], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 3, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [5.59856996346049, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03843613713979721, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [19797.91796875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 2, 9, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06432439386844635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 2, 1, 7, 2, 3, 0, 2, 9, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 0, 2, 0, 1, 0, 0], [87, 65, 82, 15, 42, 83, 96], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 19, 11, 7, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha))))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 8, 9, 2, 3, 0, 9, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [26, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [3, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 6, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 3, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, alpha)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 92, 74], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027723571171204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 2, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [62, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 9, 9, 5, 4, 3, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027723571171204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 6, 8, 7, 1, 3, 2, 2, 0, 2, 5, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 2, 0, 3, 0], [87, 92, 74, 15], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 18, 13, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad), grad))))))))))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 7, 2, 4, 5, 8, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027734593031286, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 1, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06432439386844635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 2, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 7, 8, 2, 9, 2, 0, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [98, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3027723571171204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 0, 3, 3, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.301543471174249, 2.302343741698965, 2.30381002455749, 2.3017960068351635, 2.3008271072991313, 2.3023323703514444], "accuracy": [0.09298639744520187, 0.08598599582910538, 0.08994849026203156, 0.09034473448991776, 0.09615638852119446, 0.09192973375320435], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]