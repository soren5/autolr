[{"genotype": [[0], [0, 0], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5, 2, 4, 8], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.6837142705917358, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta), alpha)))", "other_info": {"loss": [2.3002366940610837, 2.283501489240228, 2.2384128422548804, 1.920101080178868, 1.4884147975486046, 1.141073497452394, 0.9951964152125382, 0.9413319960277882, 0.9971047150791125, 0.9528180697984259, 0.8466356297242187, 0.8332020707527849, 0.7785776677605278, 0.8533807111265101, 0.8362363009420699, 0.7986515525734861, 0.7862307280518549, 0.7287484900731893, 0.7539045030824134, 0.8203785844120635, 0.781163197545611], "accuracy": [0.09536388516426086, 0.136045441031456, 0.19693566858768463, 0.33245277404785156, 0.5097081065177917, 0.5842028856277466, 0.6353189945220947, 0.6465460062026978, 0.6539427042007446, 0.657508909702301, 0.681547999382019, 0.6926429867744446, 0.7112666964530945, 0.6861709356307983, 0.7010962963104248, 0.7049266695976257, 0.7038700580596924, 0.7259278893470764, 0.7320036888122559, 0.7067758440971375, 0.7375511527061462], "val_loss": [1.962944507598877, 1.9407263483319963, 1.8231078556605749, 0.9898153373173305, 0.8369738204138619, 0.7008072137832642, 0.6666765894208636, 0.6356926986149379, 0.6909445694514683, 0.5842783451080322, 0.5782393557684762, 0.5548567942210606, 0.586816498211452, 0.5317695822034564, 0.5327508108956474, 0.5048267671040126, 0.5204488379614693, 0.5522123575210571, 0.5907862867627826, 0.5666418075561523, 0.5505965266908918], "val_accuracy": [0.10433333367109299, 0.2280000001192093, 0.4203333258628845, 0.5723333358764648, 0.612333357334137, 0.6683333516120911, 0.6996666789054871, 0.7179999947547913, 0.7089999914169312, 0.7170000076293945, 0.7483333349227905, 0.7553333044052124, 0.7363333106040955, 0.7593333125114441, 0.762666642665863, 0.7739999890327454, 0.762333333492279, 0.7609999775886536, 0.750333309173584, 0.7710000276565552, 0.7636666893959045]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1], [0, 2, 5, 5, 8, 0, 2, 4, 1, 1], [2], [18], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1], [], [3], [11], [1, 0, 1], [1], [5], [5], [76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5, 2, 4, 8], [1, 0, 1, 2, 1], [56, 9, 50]], "fitness": -0.6068571209907532, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha), beta), alpha))", "other_info": {"loss": [2.3004842276554918, 2.2844065088779226, 2.2430150717351225, 1.9572929951807985, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.13472460210323334, 0.1888786107301712, 0.31422534584999084, 0.2954695522785187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9636529513767786, 1.9424469130379813, 1.8361785071236747, 1.0408596651894706, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.21400000154972076, 0.3986666798591614, 0.5960000157356262, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5, 2, 4, 8], [1, 3, 1, 2, 1], [57, 9, 50]], "fitness": -0.2288571447134018, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.61416754856747, 2.305395100772058, 2.3038966236585607, 2.3852246473053142, 2.353194699043674, 2.304823051181058], "accuracy": [0.17540615797042847, 0.16602826118469238, 0.1002509593963623, 0.15915995836257935, 0.13129045069217682, 0.09496764093637466], "val_loss": [1.9078555788312639, 1.9745445932660783, 1.9727959632873535, 2.34321471623012, 1.9756812368120467, 1.9739600590297155], "val_accuracy": [0.18833333253860474, 0.1003333330154419, 0.1003333330154419, 0.09866666793823242, 0.09799999743700027, 0.10133333504199982]}}, {"genotype": [[0], [0, 0], [0, 0], [0, 9], [2], [8], [1, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 6, 1, 3, 7, 5, 5, 2, 4, 8], [0, 0, 2, 2, 1, 3, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302617011872013, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1], [0, 1, 6, 0], [2, 0, 2], [24, 77], [1, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1, 0, 1], [1], [2], [7], [76], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [3, 6, 1, 3, 7, 5, 5, 2, 4, 8], [0, 0, 2, 2, 1, 3, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 4, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(beta, beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [0], [78], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 0, 2, 3, 7, 5, 5, 2, 4, 8], [1, 0, 2, 1, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302617011872013, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0], [1, 1], [0], [2], [], [0, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1, 0, 1], [1], [2], [7], [76], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 1, 3, 7, 5, 5, 2, 4, 8], [0, 0, 2, 2, 1, 3, 0], [40, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302617011872013, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 7, 4, 1, 4, 2, 0, 8, 0, 6, 9, 3, 2, 2, 7, 9], [2, 0, 3, 1, 2, 2, 0, 3, 1], [48, 11, 44, 70], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [1], [2], [3], [76], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [5, 5, 2, 3, 7, 5, 5, 2, 4, 8], [1, 3, 1, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 16, 9, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), alpha)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [7, 0, 1, 7, 5, 5, 7, 4, 0, 3, 2, 2, 2, 3, 3, 3, 8, 2, 7, 2, 9, 9], [2, 2, 2, 4, 0, 0, 0, 5, 3, 5, 2, 2, 5, 1], [11, 61, 41, 19, 22], [1, 0, 1], [1], [5], [3], [76], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 5, 2, 3, 1, 5, 5, 1], [0, 0, 0, 2, 1, 0], [23, 9, 50, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 36, 36, 22, 14, 5, 1, 0, 0, 0, 0, 14, 8, 6, 4], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(grad))), tf.math.add(tf.math.add(tf.math.add(grad, tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), beta))), tf.math.add(beta, grad))))))))))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), beta)), tf.math.subtract(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [3, 3, 3, 0, 1, 2], [], [1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0], [2], [11], [1, 0, 1], [1], [5], [5], [76], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [8, 5, 2, 3, 7, 5, 5], [1, 0, 2, 2, 1], [56, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [14372474.232709343, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1846519559621811, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0817931640148895e+22, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 0, 5, 2, 2, 5, 5], [2, 1, 1, 2, 1], [], [0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0], [2], [11], [1, 0, 1], [1], [5], [3], [76], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 5, 2, 3, 0, 5, 5, 2, 4, 8], [1, 0, 1, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1632545292377472, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1], [1, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [], [0, 2, 2], [11], [0, 0, 1], [1], [2], [3], [76], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 5, 1, 3, 7, 5, 5, 2, 4, 8], [0, 0, 2, 2, 1, 3, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302617011872013, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1], [0, 6, 8, 3, 9, 5], [2, 1], [11], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [8, 8, 6, 4, 7, 1, 2, 8, 6, 4, 6, 9, 6], [2, 2, 1, 0, 1, 2, 1, 2, 1], [11, 26], [1, 0, 1], [0], [2], [5], [76], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [3, 5, 2, 3, 7, 5, 5, 2, 4, 8], [1, 3, 1, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 1, 22, 22, 13, 9, 2, 1, 0, 0, 0, 0, 12, 7, 5, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(beta, beta)), alpha), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(alpha)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), alpha)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.add(sigma, tf.math.multiply(alpha, tf.math.add(beta, tf.math.square(tf.math.square(alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1], [5, 3, 6, 9], [2, 0], [24, 77], [0, 1, 1, 1, 1], [1], [], [4, 2, 2], [11], [0, 0, 1], [1], [2], [3], [76], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 2, 3, 7, 5, 7, 5, 5], [0, 0, 2, 2, 1, 3, 0], [57, 9, 50]], "fitness": -0.043714284896850586, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301705096045411, 2.302260084836207, 2.300970232293055, 2.302821797874893, 2.301206038659826, 2.301783665406501, 2.3022581376199316, 2.301877152004955, 2.3021766503945855, 2.300298840063375, 2.301805510953622, 2.302203480184291, 2.3018105694520523, 2.303539783506503, 2.3018597103837397, 2.3012223405577266], "accuracy": [0.08981640636920929, 0.08981640636920929, 0.09311848133802414, 0.08730682730674744, 0.09100515395402908, 0.08836349099874496, 0.0940430611371994, 0.09140139818191528, 0.09272222965955734, 0.09642054885625839, 0.09060890227556229, 0.09126931428909302, 0.09245806187391281, 0.0878351628780365, 0.09206181764602661, 0.09113723784685135], "val_loss": [1.9709755352565221, 1.9709695407322474, 1.970963478088379, 1.9709573473249162, 1.9709514209202357, 1.9709456988743372, 1.970939772469657, 1.9709337779453822, 1.9709276471819197, 1.970921584538051, 1.9709155218941825, 1.970909527369908, 1.9709033966064453, 1.9708974020821708, 1.9708912031991142, 1.9708847999572754], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.035999998450279236, 0.035999998450279236, 0.03633333370089531, 0.03700000047683716, 0.03733333200216293, 0.03700000047683716, 0.03766666725277901, 0.03766666725277901, 0.03799999877810478, 0.03766666725277901, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2, 0], [48, 11], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [0], [2], [3], [76], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [5, 5, 2, 3, 7, 5, 5, 2, 4, 8], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta), beta)))", "other_info": {"loss": [2.301708271884175, 2.3022775388648875, 2.300993880260701, 2.302852538378011, 2.3012441718394117, 2.30184260807836], "accuracy": [0.08994849026203156, 0.09021265059709549, 0.09298639744520187, 0.08757099509239197, 0.09074098616838455, 0.08875974267721176], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [2], [], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [6, 1, 6, 7, 3, 3, 2, 5, 8, 6, 6, 3, 1, 0, 2, 8, 8, 0, 6, 9, 9, 1, 8, 4], [2, 5, 5, 3, 0, 1, 0, 2, 4, 2, 0, 0, 2, 0], [11, 70, 29, 8, 36, 50, 95], [1, 0, 1], [1], [2], [5], [76], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5, 2, 4, 8], [3, 3, 1, 2, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 38, 38, 24, 14, 7, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(beta)))), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(beta, beta))))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301708271884175, 2.3022775388648875, 2.300993880260701, 2.302852538378011, 2.3012441718394117, 2.30184260807836], "accuracy": [0.08994849026203156, 0.09021265059709549, 0.09298639744520187, 0.08757099509239197, 0.09074098616838455, 0.08875974267721176], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 4, 7, 7, 9, 3, 2, 9], [2, 3, 2, 2, 0], [88, 64, 38], [1, 1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [1], [2], [5], [76], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 9, 2, 3, 7, 5, 5, 2, 4, 8], [2, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301708271884175, 2.3022775388648875, 2.300993880260701, 2.302852538378011, 2.3012441718394117, 2.30184260807836], "accuracy": [0.08994849026203156, 0.09021265059709549, 0.09298639744520187, 0.08757099509239197, 0.09074098616838455, 0.08875974267721176], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 1], [0, 6, 8, 3, 9, 5], [1], [], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 3, 4, 1, 3, 2, 2, 6, 7, 7, 4, 3, 3, 5, 5, 6, 7, 2, 4, 9, 7, 8, 6, 8, 6, 7, 7, 3, 8, 6, 5, 0, 5, 4, 9, 2, 0, 0], [2, 2, 2, 1, 4, 2, 3, 2, 0, 2, 4, 2, 1, 2, 4, 2, 0, 2, 2, 2, 2, 2, 1, 4], [38, 44, 39, 53], [0, 0, 1], [0, 0], [5, 8], [3], [76], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [3, 5, 2, 3, 1, 5, 5], [1, 0, 1, 1, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 62, 62, 38, 24, 4, 3, 2, 2, 0, 0, 8, 4, 4, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(alpha, beta))))))), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, beta))))))))))))))))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))))))))))), beta), tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)))", "other_info": {"loss": [2.301708271884175, 2.3022775388648875, 2.300993880260701, 2.302852538378011, 2.3012441718394117, 2.30184260807836], "accuracy": [0.08994849026203156, 0.09021265059709549, 0.09298639744520187, 0.08757099509239197, 0.09074098616838455, 0.08875974267721176], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1], [7, 1, 1, 7, 5, 5, 7, 4, 0, 3], [2], [11, 61, 41], [0, 0, 1], [1], [5], [3], [76], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [3, 5, 1, 3, 1, 5, 5], [3, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301708271884175, 2.3022775388648875, 2.300993880260701, 2.302852538378011, 2.3012441718394117, 2.30184260807836], "accuracy": [0.08994849026203156, 0.09021265059709549, 0.09298639744520187, 0.08757099509239197, 0.09074098616838455, 0.08875974267721176], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1], [0, 1], [5], [2], [], [1, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1, 0, 1], [1], [5], [5], [76], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5, 2, 4, 8], [1, 3, 2, 2, 1, 1, 0], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(sigma, tf.math.multiply(tf.math.add(beta, beta), alpha))))", "other_info": {"loss": [2.301708271884175, 2.3022775388648875, 2.300993880260701, 2.302852538378011, 2.3012441718394117, 2.30184260807836], "accuracy": [0.08994849026203156, 0.09021265059709549, 0.09298639744520187, 0.08757099509239197, 0.09074098616838455, 0.08875974267721176], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]