[{"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1, 0, 1], [1], [5], [3], [76], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5], [1, 0, 2, 2, 1], [57, 9, 50]], "fitness": -0.6714285612106323, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), beta), alpha))", "other_info": {"loss": [2.3006107565938145, 2.2837808454324855, 2.2417283188854276, 1.906382493008523, 1.6582029717489084, 1.2733615088409296, 0.9871114488794913, 0.9386326194974677, 0.8941970990239795, 58599.507482752335, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.14463083446025848, 0.18980319797992706, 0.34222692251205444, 0.5031039714813232, 0.5415400862693787, 0.6209219098091125, 0.6399418711662292, 0.6664905548095703, 0.5106326937675476, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9626623562404089, 1.9396610941205705, 1.81761748450143, 0.9817562443869454, 1.0673473903111048, 0.6813348872320992, 0.6341598033905029, 0.6031522580555507, 0.6437817130770002, 2.601960854737439e+27, NaN, NaN, NaN], "val_accuracy": [0.10999999940395355, 0.24133333563804626, 0.40666666626930237, 0.5806666612625122, 0.5490000247955322, 0.6990000009536743, 0.7183333039283752, 0.7326666712760925, 0.7039999961853027, 0.09866666793823242, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [2, 0], [], [1, 1, 1, 1, 0], [1], [], [0], [11], [0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1], [2, 1, 3], [3], [76], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 5, 2, 9, 7, 5, 5], [1, 1, 2, 2], [92, 9, 50]], "fitness": -0.6402857303619385, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 7, 4, 3, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(alpha))", "other_info": {"loss": [2.3006107565938145, 2.2837797480960957, 2.241719189730649, 1.9064644761703364, 1.6585274549633395, 1.2721040058979947, 0.9849688576952876, 0.936372924104516, 0.8938659545752067, 1.2450558238293374, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.14463083446025848, 0.18993528187274933, 0.34288734197616577, 0.5038964748382568, 0.5428609251976013, 0.6232994198799133, 0.6399418711662292, 0.6621318459510803, 0.6586976647377014, 0.12112006545066833, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9626624924795968, 1.9396557126726424, 1.8175600596836634, 0.9823136670248849, 1.0588619709014893, 0.6807898793901715, 0.6310915436063494, 0.6093045132500785, 0.5969102893556867, 5.868212836129325, NaN, NaN, NaN, NaN], "val_accuracy": [0.10999999940395355, 0.24133333563804626, 0.4050000011920929, 0.581333339214325, 0.5529999732971191, 0.7016666531562805, 0.7269999980926514, 0.7289999723434448, 0.7336666584014893, 0.25200000405311584, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1], [1], [], [2], [11], [1, 0, 1], [0], [2], [3], [76], [0, 0, 1, 1, 0, 0, 1, 1], [3, 5, 2, 3], [1, 1, 2, 2], [57, 9, 50]], "fitness": -0.6320000290870667, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), alpha)", "other_info": {"loss": [2.3006107565938145, 2.2837796671326607, 2.2417116526048324, 1.9064014470651245, 1.659512347423043, 1.2759223920069886, 0.9844634491675219, 0.9377846274283332, 0.8926451796112973, 0.8712391549522819, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.14463083446025848, 0.1900673657655716, 0.3427552580833435, 0.5032360553741455, 0.5412759184837341, 0.6244881749153137, 0.6382247805595398, 0.6642451286315918, 0.6783780455589294, 0.30379077792167664, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9626624924795968, 1.9396558489118303, 1.8175272941589355, 0.9822909491402763, 1.0478576932634627, 0.6828289883477348, 0.6367577654974801, 0.6119392599378314, 0.6081306082861764, 0.5919719082968575, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10999999940395355, 0.24133333563804626, 0.4059999883174896, 0.5809999704360962, 0.5550000071525574, 0.7016666531562805, 0.7239999771118164, 0.7206666469573975, 0.7260000109672546, 0.7350000143051147, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [7], [0, 2], [0], [0, 1, 1, 1], [1], [], [2], [11], [0], [1], [], [6], [76], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 5, 2, 3, 6, 7, 2, 5], [1, 1, 2, 2, 3, 2, 2], [4, 43]], "fitness": -0.45571428537368774, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(alpha), alpha)", "other_info": {"loss": [2.2535657900010495, 2.3457816289857143, 2.800031325789081, 3.1088065987391604, 2.8985125403819287, 3.2316763371744837, 3.775880540130539], "accuracy": [0.15995244681835175, 0.22942808270454407, 0.13921542465686798, 0.10408136248588562, 0.1006472036242485, 0.09800554811954498, 0.09708096832036972], "val_loss": [1.9159342902047294, 2.061417920248849, 2.6610612188066756, 2.4284067835126604, 3.0478758130754744, 3.40732056753976, 2.829195022583008], "val_accuracy": [0.3083333373069763, 0.367333322763443, 0.09966666996479034, 0.1003333330154419, 0.10100000351667404, 0.09966666996479034, 0.10100000351667404]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [0, 1, 1, 1], [1], [], [2], [11], [0, 1, 1], [0], [2], [3], [76], [0, 1, 1, 1, 1, 1, 0, 1], [3, 5, 2, 3], [1, 0, 1, 2, 1], [57, 9, 50]], "fitness": -0.2531428635120392, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.3625699267364086, 3.941996449099052, 2.394863049619627, 2.412608217270367, 2.3765528998465, 2.3792599575189852], "accuracy": [0.1632545292377472, 0.13247919082641602, 0.1290450394153595, 0.10421344637870789, 0.10091137140989304, 0.10170386731624603], "val_loss": [1.935420104435512, 2.042147159576416, 2.000990867614746, 2.074777671269008, 2.034754821232387, 2.018845558166504], "val_accuracy": [0.16699999570846558, 0.09133332967758179, 0.11100000143051147, 0.09833333641290665, 0.10100000351667404, 0.09799999743700027]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [0], [51], [1, 1, 1, 1, 1], [1], [], [0, 2, 2], [11], [1], [1], [5], [6], [76], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3, 3, 5, 5], [1, 1, 2, 2, 3, 2, 2], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.302032632850432, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [7, 2, 1, 9, 0], [2, 1, 0, 0, 2], [90, 23, 12], [1, 1, 1, 1, 1], [1], [4, 4], [2], [11], [1, 0, 1], [1], [2, 0], [3], [76], [0, 1, 1, 0, 1, 1, 1, 1], [2, 5, 5, 2], [1, 2, 2, 2, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 0], [1, 9], [3], [57], [0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1], [4, 5, 1, 1], [2, 2, 2, 0], [11], [0], [1], [], [3], [76], [1, 1, 1, 0, 1, 1], [1, 5, 0, 3, 6, 7, 2, 5], [1, 0, 2, 2, 0], [4, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, beta))))), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1], [0, 0, 0, 1], [1, 9, 5], [0, 3, 0, 2, 3, 1, 0, 1, 2, 0, 2, 2, 3, 3, 0, 1, 3, 0], [57, 90], [1, 1, 1, 1, 0, 1, 0], [1], [], [2], [11], [0, 1, 1], [1], [2], [3], [76], [0, 1, 0, 0, 1, 1], [1, 4, 5, 0], [1, 0, 2, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.pow(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [96817722.91248211, 8527586.203177571, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [33404913.14285714, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1], [0, 2, 3, 9], [3, 0], [53, 87, 45, 9, 17, 26, 91], [1, 1, 1, 1], [1], [], [2], [11], [0, 0, 1], [0, 1], [2], [3], [76], [0, 0, 0, 0, 1, 0, 1, 1], [1, 4, 5, 0, 5], [1, 0, 3, 0], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 8, 5, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(tf.math.negative(alpha)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3275479744800474, 4.335902125245592, 367.5657845596517, 73830.02017928196, 18075163.70710606, 4479149441.09893, 1105457011942.8767], "accuracy": [0.09272222965955734, 0.09932637959718704, 0.09985470771789551, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.002149377550398, 17.91103199550084, 2544.5965401785716, 586300.4107142857, 145312000.0, 36045014162.28571, 8937078559305.143], "val_accuracy": [0.10100000351667404, 0.10400000214576721, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1], [0, 3, 9, 2], [3, 1], [56], [0, 1, 1, 1], [1], [], [2, 2, 2], [11], [0, 1, 0, 1, 0], [0, 0, 1], [2, 3], [3], [76], [0, 0, 0, 0, 1, 1, 1, 1], [3, 5, 2, 3], [1, 1, 2, 2], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 8, 4, 4, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.add(tf.math.multiply(alpha, alpha), beta)), beta)", "other_info": {"loss": [2.3021922846196934, 2.302218897971558, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.09391097724437714, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9709816660199846, 1.9709816660199846, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0], [0, 1], [0], [0], [0], [1, 1, 1, 1], [1], [], [2], [11], [0, 1, 1], [0], [6], [3], [76], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 5, 4, 2, 6, 7, 2, 5, 7, 2, 6, 1, 6, 9, 9, 1, 9, 8, 5, 5], [1, 1, 2, 2, 0, 0, 0, 3, 2, 0], [57, 9, 50, 79, 6, 60, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 30, 20, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(alpha), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(beta, beta)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(beta))))), tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1275746887.1898563, 21067093177.161274, 145212138.8363871, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09747721254825592, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4727883629.714286, 683684352.0, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1, 1], [0, 0, 0, 1, 1], [1, 9, 2], [2, 2], [11], [0, 1, 1], [0], [5], [3], [76], [0, 0, 1, 0, 1, 0, 1, 1], [6, 5, 2, 3, 7, 5, 5], [2, 3, 2, 2, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 2, 1, 1, 0, 0, 8, 4, 4, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(beta), tf.math.add(sigma, tf.math.multiply(beta, beta)))", "other_info": {"loss": [2.302032632850432, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6], [3, 2], [], [0, 1, 1, 1, 1], [1], [4, 4], [0, 2, 2], [11], [0, 1, 1], [0], [5], [3], [76], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 5, 2, 3, 7, 5, 5, 2, 1, 7, 8, 6, 5, 4, 7, 0, 7, 5, 2, 8, 1, 0, 9], [1, 0, 2, 2, 1, 2, 2, 2, 3, 1, 1, 1], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 26, 15, 11, 1], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.square(beta)), tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.square(tf.math.pow(beta, tf.math.add(beta, sigma)))))), alpha), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1], [0, 1], [0], [0], [93], [1, 1, 1, 1], [1], [], [1], [11], [0], [1], [2], [6], [76], [1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 2, 3, 6, 7, 2, 5], [3, 2], [4, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [0], [0], [0, 1, 1, 1], [1], [], [2], [11], [1], [1], [], [6], [76], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 5, 3, 4, 6, 7, 2, 5], [1, 1, 2, 2, 3, 2, 2], [4, 43]], "fitness": -0.09942857176065445, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(alpha), alpha)", "other_info": {"loss": [2.367809347110638, 6.159071013723083, 34.70287869279222, 148.3729726025268, 505.6595411097857, 1478.6049909489643], "accuracy": [0.08849557489156723, 0.09906221181154251, 0.10474177449941635, 0.10619468986988068, 0.09681680053472519, 0.10170386731624603], "val_loss": [2.2478722844805037, 9.969200134277344, 49.25332423618862, 185.57772391183036, 582.6162458147321, 1586.3375767299108], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [0, 3, 0, 2, 3, 1, 0, 1, 2, 0, 2, 2, 3, 3, 0, 1, 3, 0], [38], [0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1], [4, 2], [2, 1, 1], [11], [0, 1, 1], [0], [6], [3], [76], [0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 2, 3], [2, 0, 2, 2, 1, 1], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 1, 5, 5, 2, 3, 0, 3, 1, 1, 0, 0, 8, 4, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(beta), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta)))", "other_info": {"loss": [2.3021922846196934, 2.302218897971558, 2.302077197442831, 2.300869297940324, 2.3020153589504364, 2.3029100376900553], "accuracy": [0.08611807972192764, 0.09391097724437714, 0.09734513610601425, 0.09206181764602661, 0.09179764986038208, 0.08849557489156723], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0], [1, 1], [0], [2], [], [1, 1, 1, 1, 1], [1], [], [3], [11], [1, 0, 1], [1], [], [3], [76], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [5, 6, 4, 4, 3, 8, 2, 7, 0, 4, 3, 5, 4, 9, 4, 0, 9, 0, 0], [1, 0, 2, 2, 1, 0, 1, 3, 3, 0, 2, 2], [4, 27, 17, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 28, 19, 9, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(alpha, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.pow(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), alpha)), tf.math.pow(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma))), tf.math.negative(tf.math.negative(sigma))))", "other_info": {"loss": [2.3021922846196934, 2.302218897971558, 2.302077197442831, 2.300869297940324, 2.3020153589504364, 2.3029100376900553], "accuracy": [0.08611807972192764, 0.09391097724437714, 0.09734513610601425, 0.09206181764602661, 0.09179764986038208, 0.08849557489156723], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 5], [0], [93], [1, 1, 1, 1], [1], [], [2], [11], [0, 1, 1], [0], [2], [3], [76], [1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 8, 3], [3, 2], [57, 9, 50]], "fitness": -0.041999999433755875, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021922846196934, 2.302218897971558, 2.302077197442831, 2.300869297940324, 2.3020153589504364, 2.3029100376900553], "accuracy": [0.08611807972192764, 0.09391097724437714, 0.09734513610601425, 0.09206181764602661, 0.09179764986038208, 0.08849557489156723], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0], [0, 1], [0], [3], [], [1, 1, 1, 1, 1], [1], [], [2, 2, 2], [11], [1], [1], [], [3], [76], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 5, 2, 3, 6, 7, 2, 5], [1, 0, 2, 2, 1], [4, 43]], "fitness": -0.040571428835392, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.23373566759009, 3.1342612418201323, 2.437517478339755, 2.4003462841198697, 2.4557215843407265, 2.4343412568335836], "accuracy": [0.1442345827817917, 0.09747721254825592, 0.09853387624025345, 0.09813763201236725, 0.10236428678035736, 0.10091137140989304], "val_loss": [5.62705135345459, 2.0477189336504256, 2.0586840084620883, 2.139723369053432, 2.008647850581578, 2.025080748966762], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.10133333504199982, 0.09966666996479034, 0.10100000351667404, 0.10133333504199982]}}]