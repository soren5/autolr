[{"genotype": [[0], [1, 0, 0], [0, 1, 1], [7], [1, 0], [38], [0], [1], [], [0], [11], [0], [1], [], [6], [], [0, 1, 1], [3], [3, 2], []], "fitness": -0.43542855978012085, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [2.3017762403887465, 2.300023685467163, 2.3000621630956215, 2.300796253585765, 2.298389146325138, 2.2958685685111044, 2.296626482405415, 2.2961753110655105, 2.29376237629553, 2.2931947247731044, 2.2934601660244627, 2.292604137925015, 2.291849724636448, 2.2908309777934615, 2.2884525520895074, 2.2895355191543794, 2.286801718733393, 2.285990893832917, 2.2873718507096847, 2.286027418545224, 2.2835085865308455, 2.2841322758666687, 2.2830124727691783, 2.2815237207151973, 2.2800233821669873, 2.279638065653801, 2.27897488524523, 2.2781315327887333, 2.27858423374238, 2.2764575470078023, 2.276052346051314, 2.2752246159478076, 2.273727664417201, 2.2721083007074854, 2.2710381412644662, 2.272173517777888, 2.270320057097427, 2.2695359837314504, 2.2675916212991623, 2.26729087492006, 2.2650001944961518, 2.265798694563737, 2.2644367464592334, 2.2613408546311713, 2.263875354817987, 2.2615660137866294, 2.260441338271198, 2.2597089396995593, 2.256509065470597, 2.2584151333947586, 2.2566165668365112, 2.2565317110473044, 2.254412502739266, 2.253458043036601, 2.2519490724824847, 2.2516249242696182, 2.2519177739268454, 2.2494397777466175, 2.2494000462083736, 2.2483196349553993, 2.245716736568924, 2.245415711462726, 2.244683302656503, 2.242972061854816, 2.2411295066750863, 2.2411962527294107, 2.240918437960031, 2.238160393194295, 2.2381230602017514, 2.2362198574888454, 2.2361199487674317, 2.23465094486358, 2.233027097870566, 2.2341201557632546, 2.231341887301363, 2.231997549604699, 2.227359278295585, 2.2285860182822987, 2.225307651152464, 2.226219319333616, 2.222579832294944, 2.2232129764027837, 2.2218401715771523, 2.219954086379793, 2.220859014284121, 2.216644598650123, 2.216682724429317, 2.2121505262419974, 2.2139428640322016, 2.212860543572624, 2.2102736403929195, 2.2117395541136053, 2.2099868492002517, 2.2075877969039195, 2.2067592786429437, 2.2037444924004497, 2.201120495591512, 2.200373389103378, 2.1977614813225066, 2.1992202023977394], "accuracy": [0.09219389408826828, 0.0936468094587326, 0.09774138033390045, 0.09008057415485382, 0.10302469879388809, 0.1002509593963623, 0.10381719470024109, 0.11002509295940399, 0.10976093262434006, 0.10777968913316727, 0.11042134463787079, 0.11108175665140152, 0.11861048638820648, 0.12693171203136444, 0.12415797263383865, 0.12296922504901886, 0.12917712330818176, 0.13353586196899414, 0.1258750557899475, 0.13181878626346588, 0.1332716941833496, 0.13908334076404572, 0.14159291982650757, 0.14278165996074677, 0.14132875204086304, 0.1534803807735443, 0.1562541276216507, 0.15097081661224365, 0.1578391194343567, 0.15731078386306763, 0.15955619513988495, 0.16299036145210266, 0.16853784024715424, 0.1710474193096161, 0.17091533541679382, 0.17131158709526062, 0.17250032722949982, 0.17712323367595673, 0.18293488025665283, 0.18359529972076416, 0.18359529972076416, 0.18478403985500336, 0.18702945113182068, 0.19759608805179596, 0.190859854221344, 0.20499274134635925, 0.20076608657836914, 0.19891692698001862, 0.2141064554452896, 0.20618148148059845, 0.20803064107894897, 0.19918107986450195, 0.22018226981163025, 0.2141064554452896, 0.21595561504364014, 0.21780477464199066, 0.21740853786468506, 0.22744683921337128, 0.22255976498126984, 0.22163519263267517, 0.23497556149959564, 0.23444722592830658, 0.24078720808029175, 0.24659886956214905, 0.244485542178154, 0.2374851405620575, 0.24078720808029175, 0.2518821954727173, 0.2436930388212204, 0.2542596757411957, 0.252938836812973, 0.2538634240627289, 0.26139214634895325, 0.25756174325942993, 0.26376965641975403, 0.26482629776000977, 0.2709021270275116, 0.2673358917236328, 0.2723550498485565, 0.26495838165283203, 0.27816668152809143, 0.2790912687778473, 0.27420419454574585, 0.28160083293914795, 0.27380794286727905, 0.28424251079559326, 0.2837141752243042, 0.29243165254592896, 0.28860124945640564, 0.29163914918899536, 0.29401662945747375, 0.2875445783138275, 0.29401662945747375, 0.299299955368042, 0.3015453815460205, 0.3011491298675537, 0.3043191134929657, 0.30563995242118835, 0.3059041202068329, 0.31026285886764526], "val_loss": [1.9701478821890694, 1.9693197522844588, 1.9684909411839075, 1.9676703725542342, 1.9668479646955217, 1.9660239219665527, 1.9652141843523299, 1.9643959999084473, 1.9635731833321708, 1.9627559525626046, 1.9619438307625907, 1.9611255781991142, 1.960313320159912, 1.9595017433166504, 1.9586937086922782, 1.957880633217948, 1.9570629937308175, 1.9562534604753767, 1.9554412024361747, 1.954627309526716, 1.9538072177342005, 1.9529922349112374, 1.9521800449916296, 1.9513705117361886, 1.9505461965288435, 1.9497266496930803, 1.9489052636282784, 1.9480846268790108, 1.947263240814209, 1.9464355196271623, 1.9456170627049036, 1.9447859355381556, 1.9439469064985002, 1.9431121008736747, 1.942267622266497, 1.9414305005754744, 1.9405874524797713, 1.93973936353411, 1.9388865743364607, 1.9380320140293665, 1.9371704374040877, 1.9363221440996443, 1.935455254146031, 1.9345778737749373, 1.9337028094700404, 1.9328174591064453, 1.9319278853280204, 1.9310365404401506, 1.9301379748753138, 1.9292395455496651, 1.9283256530761719, 1.9274179594857352, 1.926508835383824, 1.9255826132638114, 1.924647331237793, 1.9237071446010046, 1.9227646418980189, 1.921804428100586, 1.9208557946341378, 1.9198942865644182, 1.918912615094866, 1.9179357119968958, 1.9169464111328125, 1.9159551348005022, 1.9149479866027832, 1.9139375686645508, 1.9129291943141393, 1.9119036538260323, 1.9108631270272392, 1.9098087038312639, 1.9087591171264648, 1.9077036040169852, 1.9066271781921387, 1.9055461202348982, 1.9044570241655623, 1.90336275100708, 1.9022316932678223, 1.901118346623012, 1.8999778202601842, 1.898836272103446, 1.8976678167070662, 1.8964977264404297, 1.895326818738665, 1.8941332953316825, 1.892951488494873, 1.8917340551103865, 1.890516894204276, 1.889270237513951, 1.8880149977547782, 1.8867637770516532, 1.8854904856000627, 1.8842057500566756, 1.882925578526088, 1.881619589669364, 1.8802838325500488, 1.8789441926138741, 1.8775878633771623, 1.8762172971452986, 1.874821390424456, 1.873424734388079], "val_accuracy": [0.03966666758060455, 0.04399999976158142, 0.05166666582226753, 0.057999998331069946, 0.06433333456516266, 0.07066666334867477, 0.07633333653211594, 0.08399999886751175, 0.09300000220537186, 0.1003333330154419, 0.11100000143051147, 0.11999999731779099, 0.12700000405311584, 0.13366666436195374, 0.14033333957195282, 0.14666666090488434, 0.15466666221618652, 0.1616666615009308, 0.16766667366027832, 0.17766666412353516, 0.18566666543483734, 0.19233334064483643, 0.19966666400432587, 0.20800000429153442, 0.2150000035762787, 0.2213333398103714, 0.2290000021457672, 0.23600000143051147, 0.24133333563804626, 0.24799999594688416, 0.2516666650772095, 0.2606666684150696, 0.26600000262260437, 0.27300000190734863, 0.2759999930858612, 0.28200000524520874, 0.2866666615009308, 0.28999999165534973, 0.2939999997615814, 0.29733332991600037, 0.3033333420753479, 0.3059999942779541, 0.3100000023841858, 0.312333345413208, 0.31833332777023315, 0.3226666748523712, 0.32466667890548706, 0.32733333110809326, 0.33033332228660583, 0.3336666524410248, 0.3370000123977661, 0.3409999907016754, 0.34200000762939453, 0.34466665983200073, 0.3476666808128357, 0.3499999940395355, 0.351666659116745, 0.35366666316986084, 0.3556666672229767, 0.35899999737739563, 0.36000001430511475, 0.36133334040641785, 0.3633333444595337, 0.36533331871032715, 0.3659999966621399, 0.36666667461395264, 0.36766666173934937, 0.37033334374427795, 0.3720000088214874, 0.3726666569709778, 0.37466666102409363, 0.37599998712539673, 0.37700000405311584, 0.3779999911785126, 0.37966665625572205, 0.3799999952316284, 0.38066667318344116, 0.38333332538604736, 0.38499999046325684, 0.3869999945163727, 0.3889999985694885, 0.390666663646698, 0.39100000262260437, 0.3943333327770233, 0.39533331990242004, 0.3970000147819519, 0.40033334493637085, 0.4023333191871643, 0.4033333361148834, 0.4046666622161865, 0.40533334016799927, 0.4073333442211151, 0.4086666703224182, 0.4113333225250244, 0.4113333225250244, 0.41233333945274353, 0.4129999876022339, 0.414000004529953, 0.41499999165534973, 0.41733333468437195]}, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0]}, {"genotype": [[0], [0], [1], [7], [1, 0], [38], [0], [1], [], [4], [11], [1], [1], [], [0], [76], [0, 0, 1, 1, 0, 0], [7, 6, 8, 9], [0, 2], [81, 5]], "fitness": -0.12542857229709625, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.011757104321688e+24, 3.4103296054354443e+24, 3.487952396689436e+24, 3.4690614687435427e+24, 3.412974700736881e+24, 3.424390667932415e+24], "accuracy": [0.10830801725387573, 0.11279883980751038, 0.11345925182104111, 0.11293092370033264, 0.11517632752656937, 0.11649715900421143], "val_loss": [2.0971517817979121e+24, 2.0970818241680432e+24, 2.0970119077139426e+24, 2.0969419500840737e+24, 2.0968719512784368e+24, 2.096801993648568e+24], "val_accuracy": [0.13433332741260529, 0.13433332741260529, 0.13433332741260529, 0.13433332741260529, 0.13433332741260529, 0.13433332741260529]}}, {"genotype": [[0], [1], [1], [], [1], [], [1, 1, 1, 1], [1], [], [4], [], [0], [1], [], [5], [], [0, 1], [0], [2], [96]], "fitness": -0.10342857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0015099776057266, 4.6111479138087255, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18821820616722107, 0.13076211512088776, 0.11636507511138916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0344111578805104, 2.1906703540257046, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.28166666626930237, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1], [0, 1, 1], [5], [0], [38], [0], [1], [], [4], [11], [1], [], [], [6], [], [0, 1, 0, 0, 1, 1], [3, 2, 5], [0, 0, 3], [77, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [2.3022094864682154, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [4, 7, 6, 3, 7, 8, 1, 1], [2, 2, 2, 3, 0, 0, 1], [72, 13], [0], [1], [], [4], [], [0, 0, 0], [1], [], [3], [], [1], [3], [0, 0], [68]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022094864682154, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1], [1], [], [3], [24], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [7, 4, 0, 9, 2, 8, 4, 5, 9], [2, 5, 4, 0], [15, 0, 99], [0], [1], [], [1], [], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 8, 5, 9], [0, 0, 1, 3, 3, 0, 2], [57, 9, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 9, 3, 2, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022094864682154, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 8, 2, 1, 8, 1, 4, 4, 1, 3, 0, 3, 4, 7, 0, 9], [3, 1, 0, 1, 2, 2, 2, 3, 0, 0, 2], [77, 0, 69, 15], [1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0], [5, 4, 8, 2, 7, 9], [0, 2, 3], [85, 79], [1], [], [], [], [], [0, 0, 1], [4, 9], [1, 1], [1, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 16, 11, 4, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, grad)), grad), grad)))))))))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0], [9], [2, 2, 2, 3, 0], [79], [1, 1, 0, 1, 1], [0, 1], [5], [1, 4, 0], [78], [0, 0, 1, 1, 0], [0, 1, 0, 1], [0, 8, 2], [1], [], [1], [], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [50171018252.59381, 7706022654873.343, 132236360617843.88, 931133406464040.2, 4072642668313687.0, 1.3375871806593776e+16], "accuracy": [0.10038304328918457, 0.10210011899471283, 0.09708096832036972, 0.09668471664190292, 0.09853387624025345, 0.09615638852119446], "val_loss": [427335558290.2857, 23037459188004.57, 247269550381933.72, 1347946379776585.2, 5049473250997979.0, 1.489285830807201e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1], [1], [], [2], [], [0, 0, 1, 0, 1], [1], [], [4], [82], [0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [5, 8, 4], [5, 6], [], [1], [], [0], [11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020679342937256, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [7], [1, 0], [38], [0], [1], [], [0], [11], [0], [1], [], [6], [], [1, 0, 1], [3], [3, 2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06907938420772552, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [6, 2, 0, 9], [1, 0], [44, 69], [0], [1], [], [0], [11], [0, 0, 1], [1], [4], [5], [], [0], [9], [], [15]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022041644843467, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1], [1], [], [1], [3], [0, 1, 0, 1], [0, 0, 1, 1], [5, 2], [4, 2], [], [0, 1], [1], [], [5], [], [1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302689080414062, 2.302999746845131, 2.305787845420611, 2.3098454004926863, 2.3110619479355607, 2.31168335095971, 2.3176230076140008, 2.3223300552355566, 2.3257179084219057, 2.3366102369595922, 2.3612793028519974, 2.762036631529625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.08836349099874496, 0.08479725569486618, 0.07898560166358948, 0.08030643314123154, 0.07753269374370575, 0.07938185334205627, 0.07555144280195236, 0.07647603005170822, 0.07924976944923401, 0.07753269374370575, 0.08915598690509796, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9719435146876745, 1.9728683062962122, 1.974203382219587, 1.97598055430821, 1.9782015255519323, 1.9801984514508928, 1.982666083744594, 1.9857699530465263, 1.9904570579528809, 1.999636513846261, 2.024428027016776, 62102.095982142855, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029666665941476822, 0.02500000037252903, 0.02800000086426735, 0.027666667476296425, 0.028999999165534973, 0.03700000047683716, 0.04100000113248825, 0.049666665494441986, 0.0716666653752327, 0.09133332967758179, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0], [1], [7], [1], [38], [1, 1], [0, 1], [5], [0], [28], [1], [1], [], [6], [], [0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 7, 0, 4, 9, 8], [2, 3, 2], [84]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 9, 6, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.negative(sigma), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0], [0], [9], [0], [77], [1], [1], [9], [1], [], [1], [1], [], [3], [], [1], [3], [1], [1, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1215355805.7973506, 23434833459.598995, 109926267657.70439, 304770867224.88654, 651733776036.3999, 1188484348792.0708], "accuracy": [0.10038304328918457, 0.10210011899471283, 0.09694888442754745, 0.09655263274908066, 0.09840179979801178, 0.09628847241401672], "val_loss": [4673735826.285714, 37378600374.85714, 126140036827.42857, 298983629970.2857, 583933886464.0, 1009017946112.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [], [1, 0], [38], [0, 1], [1, 1], [5], [0], [40], [0, 0, 1, 1], [0, 1, 0, 0], [5, 1], [3, 1], [], [0, 1, 1], [3], [2, 3], []], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.3021507089038202, 2.301293919130859, 2.302236985190355, 2.303834447550846, 2.302340652586494, 2.300735311170595], "accuracy": [0.09140139818191528, 0.09074098616838455, 0.09206181764602661, 0.08334434032440186, 0.09232597798109055, 0.08625016361474991], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0], [1, 1, 1], [7], [0, 2, 0, 0, 0], [38], [0, 0, 1], [1], [6, 9], [2], [67], [1], [1], [1, 4], [1], [], [1], [3], [3, 2], []], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021507089038202, 2.301293919130859, 2.302236985190355, 2.303834447550846, 2.302340652586494, 2.300735311170595], "accuracy": [0.09140139818191528, 0.09074098616838455, 0.09206181764602661, 0.08334434032440186, 0.09232597798109055, 0.08625016361474991], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1], [7], [0, 1], [65], [0, 1, 1], [0, 1, 1], [6], [4, 3], [], [1], [1], [], [6], [], [0, 1, 1], [3], [3, 2], [1, 65]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [2.3021507089038202, 2.301293919130859, 2.302236985190355, 2.303834447550846, 2.302340652586494, 2.300735311170595], "accuracy": [0.09140139818191528, 0.09074098616838455, 0.09206181764602661, 0.08334434032440186, 0.09232597798109055, 0.08625016361474991], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0], [1], [], [0], [24], [1], [1], [9], [4], [], [0, 1], [0], [0], [6], [80], [0, 0, 1, 1, 1], [3, 3], [1, 3, 3], []], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, sigma), sigma)", "other_info": {"loss": [2.3021507089038202, 2.301293919130859, 2.302236985190355, 2.303834447550846, 2.302340652586494, 2.300735311170595], "accuracy": [0.09140139818191528, 0.09074098616838455, 0.09206181764602661, 0.08334434032440186, 0.09232597798109055, 0.08625016361474991], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1], [1], [], [2], [], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 9, 4, 7, 8, 9, 6, 5], [0, 5, 4], [54, 49, 13], [1], [1], [], [], [], [1], [3], [3], [1, 65]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021507089038202, 2.301293919130859, 2.302236985190355, 2.303834447550846, 2.302340652586494, 2.300735311170595], "accuracy": [0.09140139818191528, 0.09074098616838455, 0.09206181764602661, 0.08334434032440186, 0.09232597798109055, 0.08625016361474991], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 2, 0, 3, 1, 5, 0], [2, 2, 0, 1, 2, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 0, 3, 3], [74, 69, 94, 43, 59, 26], [1, 0, 1], [0, 0, 1], [6, 9], [0], [67, 97], [1, 0, 1], [0, 0], [4], [4], [], [1], [9], [3], [15]], "fitness": -0.041999999433755875, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021507089038202, 2.301293919130859, 2.302236985190355, 2.303834447550846, 2.302340652586494, 2.300735311170595], "accuracy": [0.09140139818191528, 0.09074098616838455, 0.09206181764602661, 0.08334434032440186, 0.09232597798109055, 0.08625016361474991], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]