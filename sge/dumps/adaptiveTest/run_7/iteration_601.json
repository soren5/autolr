[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 3, 0, 1, 0, 3], [45, 49, 44, 92]], "fitness": -0.821142852306366, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0812425134739683, 1.631344259454432, 1.2359391296890827, 0.9493391669626328, 0.8807940778400384, 0.7525204042197376, 0.7763663614194596, 0.7010465121272376, 0.6807944170865936, 0.653523782272349, 0.6160964053918846, 0.6578506299879698, 0.6064603266116414, 0.5833055326857067, 0.5681345526489678, 0.5677561128396148, 0.5848042730563321, 0.5495006099605069, 0.5411227994142443, 0.5175476452977099, 0.5117497619872773, 0.49453873677874727, 0.48207795815602617, 0.5070201320623631, 0.4946175022108554, 0.46280364691620696, 0.48125098294365315, 0.45624489335729745, 0.46364432394213256, 0.4425220487297581, 0.45236283204558975, 0.4292715815127313, 0.4335812757185595, 0.4118974546179433, 0.4085006182889078, 0.409658332038565, 0.41780533297438865, 0.38862744853118975, 0.4085845527332756, 0.38948777062136186, 0.3907942145082693, 0.38188273232642295, 0.3622560257751708], "accuracy": [0.3135649263858795, 0.4336283206939697, 0.5357284545898438, 0.6404702067375183, 0.6642451286315918, 0.7170783281326294, 0.6960771083831787, 0.7327961921691895, 0.7395324110984802, 0.7493065595626831, 0.7691190242767334, 0.7495707273483276, 0.7633073329925537, 0.7753269076347351, 0.7823272943496704, 0.7845727205276489, 0.7784969210624695, 0.7935543656349182, 0.7944789528846741, 0.8068947196006775, 0.8050455451011658, 0.8144234418869019, 0.819970965385437, 0.8035926818847656, 0.8207634687423706, 0.8284242749214172, 0.8183859586715698, 0.8278959393501282, 0.8240655064582825, 0.8341038227081299, 0.8325188159942627, 0.844010055065155, 0.8383304476737976, 0.8467837572097778, 0.8490291833877563, 0.8496896028518677, 0.8421608805656433, 0.854708731174469, 0.8425571322441101, 0.8507462739944458, 0.8545766472816467, 0.8582749962806702, 0.8659358024597168], "val_loss": [1.5887805393763952, 1.0374550138201033, 0.7320795059204102, 0.7322205986295428, 0.5990796429770333, 0.5851914882659912, 0.5831675699778965, 0.5262564761298043, 0.49955928325653076, 0.4840285267148699, 0.5242040497916085, 0.5123388086046491, 0.464375376701355, 0.4477525268282209, 0.47089857714516775, 0.4334908723831177, 0.45894134044647217, 0.4341876677104405, 0.3969196677207947, 0.4327523878642491, 0.43290066719055176, 0.40139806270599365, 0.3953366535050528, 0.3797308717455183, 0.3796841927937099, 0.4180076377732413, 0.3665658065250942, 0.37247402327401297, 0.3596762078148978, 0.4535087857927595, 0.37006847347532, 0.39639614309583393, 0.3729701553072248, 0.3478485516139439, 0.3347117134502956, 0.4031276191983904, 0.3634100982121059, 0.3315533144133432, 0.33589612586157663, 0.3304800306047712, 0.3294415559087481, 0.34386838333947317, 0.3454355427197048], "val_accuracy": [0.5373333096504211, 0.5743333101272583, 0.6896666884422302, 0.6636666655540466, 0.7506666779518127, 0.7233333587646484, 0.7396666407585144, 0.7513333559036255, 0.7706666588783264, 0.7833333611488342, 0.7483333349227905, 0.765333354473114, 0.7850000262260437, 0.796999990940094, 0.7789999842643738, 0.8016666769981384, 0.7963333129882812, 0.7986666560173035, 0.8253333568572998, 0.7990000247955322, 0.8043333292007446, 0.8173333406448364, 0.8263333439826965, 0.8339999914169312, 0.8366666436195374, 0.8053333163261414, 0.8420000076293945, 0.8399999737739563, 0.8489999771118164, 0.8109999895095825, 0.8423333168029785, 0.8296666741371155, 0.8356666564941406, 0.8536666631698608, 0.8553333282470703, 0.812333345413208, 0.8366666436195374, 0.862333357334137, 0.8553333282470703, 0.8613333106040955, 0.859666645526886, 0.8486666679382324, 0.8546666502952576]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.7200000286102295, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300339303232691, 2.295746780169276, 2.282999967776112, 2.2675477162548705, 2.245514185799269, 2.2198217011808072, 2.1852257397542965, 2.1400157037963483, 2.073995490572346, 1.988464719347588, 1.89065886653882, 1.7568605074304962, 1.6173009608384248, 1.505410709070602, 1.4213444247395055, 1.3714548056199014, 1.3417743890828082, 1.3567248638421632, 1.3589370693308314, 1.2942596448804597, 1.2219890241908864, 1.1393057707829515, 1.0316951226218187, 0.944197966335724, 0.9086198289286365, 0.8913215050733856, 0.910014631851805, 0.8918568297793538, 0.9044867826175728, 0.8902308047408236, 0.8690646225671411, 0.8484831086443935, 0.8186088165334975], "accuracy": [0.09338264167308807, 0.10857218503952026, 0.13855500519275665, 0.18253862857818604, 0.2436930388212204, 0.28886541724205017, 0.33522653579711914, 0.3623035252094269, 0.38621053099632263, 0.4142121374607086, 0.4213446080684662, 0.4445911943912506, 0.4653282165527344, 0.4873860776424408, 0.5079910159111023, 0.5235767960548401, 0.54220050573349, 0.5497292280197144, 0.5528992414474487, 0.5852595567703247, 0.607449471950531, 0.6325452327728271, 0.6505085229873657, 0.657508909702301, 0.6625280380249023, 0.6606789231300354, 0.6612072587013245, 0.6814159154891968, 0.683000922203064, 0.6885483860969543, 0.6931713223457336, 0.6873596906661987, 0.6921146512031555], "val_loss": [1.967909608568464, 1.9596142087663924, 1.9463568414960588, 1.9286442484174455, 1.906632968357631, 1.879131657736642, 1.8429262297494071, 1.7934912954057967, 1.7255117552621024, 1.6328348432268416, 1.512479407446725, 1.368910278592791, 1.2183546338762556, 1.0833995682852608, 0.9755779334477016, 0.8909941741398403, 0.8289697510855538, 0.8052759340831211, 0.7792149100984845, 0.749380384172712, 0.748395596231733, 0.7284511498042515, 0.6772867781775338, 0.6495096683502197, 0.6582158122743879, 0.6674392393657139, 0.6764085633414132, 0.6876681021281651, 0.6903877769197736, 0.6774157966886248, 0.6540550674710955, 0.6296761206218174, 0.609609569822039], "val_accuracy": [0.055666666477918625, 0.1340000033378601, 0.25333333015441895, 0.3330000042915344, 0.35766667127609253, 0.3803333342075348, 0.398333340883255, 0.41966667771339417, 0.44600000977516174, 0.46933332085609436, 0.49799999594688416, 0.5336666703224182, 0.5699999928474426, 0.6079999804496765, 0.6556666493415833, 0.6623333096504211, 0.6643333435058594, 0.6683333516120911, 0.6759999990463257, 0.6959999799728394, 0.6990000009536743, 0.703000009059906, 0.7116666436195374, 0.7226666808128357, 0.6973333358764648, 0.6926666498184204, 0.7070000171661377, 0.734666645526886, 0.7296666502952576, 0.7293333411216736, 0.7286666631698608, 0.7253333330154419, 0.7246666550636292]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.40314286947250366, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300901540565516, 2.301281231426843, 2.2990269513886603, 2.2991987609938858, 2.29856578259184, 2.298527713118606, 2.2978731835475767, 2.2968383063383233, 2.2934542664951256, 2.2936075855444575, 2.296467524761411, 2.2928557905774816, 2.2935094149073967, 2.293659417416048, 2.290934705117029, 2.2911899672712175, 2.2887174605126583, 2.289530835588138, 2.288809563710217, 2.288515596026994, 2.286879028642277, 2.2880780282132047, 2.2871179904416254, 2.2858591114981865, 2.285982932522942, 2.2827320789790124, 2.2842963372617113, 2.2827651455984643, 2.2813578103558894, 2.2814629873689674, 2.2804309221826227, 2.280412044979877, 2.2781615956364023, 2.27906276656652, 2.2763823238519425, 2.2760752784168212, 2.2751910299783087, 2.2750280757448564, 2.274664160755285, 2.2728732828891762, 2.274777565303496, 2.2702409553804954, 2.270460544812161, 2.269861788813307, 2.269913500861532, 2.2697368498885195, 2.267942801064756, 2.2682674800589133, 2.2662557186058185, 2.2659386846887246, 2.266227942384733, 2.265163469560205, 2.265304155920349, 2.2647670352652622, 2.2622949621066786, 2.2610061145052383, 2.260817345060047, 2.260041817257102, 2.258987396715371, 2.2603081059635373, 2.2579358633341426, 2.2561124592346364, 2.2559946403999716, 2.25501852626924, 2.2548094644774506, 2.252005136024053, 2.2525915196070723, 2.2523766672134147, 2.2504618318719225, 2.251866115570824, 2.2509421177386546, 2.2494449574855087, 2.247053027357707, 2.246554910325733, 2.244223666150163, 2.244575379027383, 2.2452498966786902, 2.2439636727523147, 2.2427198862308337, 2.242786055338019, 2.2411302368575714, 2.240175067787992, 2.2380911357934057, 2.2383584483676597, 2.238235700431202, 2.236769261755066, 2.236137690120259, 2.2346287630867443, 2.233576167103731, 2.2336574356553736, 2.231461317626445, 2.2324171943624243, 2.2294415335503426, 2.2271508799252997, 2.2289400749108292, 2.2254205863898724, 2.2252038774111202, 2.224417104665645, 2.2228075557963693, 2.2239964623666], "accuracy": [0.09245806187391281, 0.09377889335155487, 0.09642054885625839, 0.09747721254825592, 0.1006472036242485, 0.10157178342342377, 0.09708096832036972, 0.10487385839223862, 0.11293092370033264, 0.11015717685222626, 0.10500594228506088, 0.10976093262434006, 0.10962884873151779, 0.11596883088350296, 0.11966715008020401, 0.11398758739233017, 0.12613920867443085, 0.12178047746419907, 0.12851670384407043, 0.12812046706676483, 0.13036586344242096, 0.13049794733524323, 0.12970545887947083, 0.13578127324581146, 0.1290450394153595, 0.14476291835308075, 0.1364416927099228, 0.14251750707626343, 0.14515915513038635, 0.1442345827817917, 0.1526878923177719, 0.14978206157684326, 0.151234969496727, 0.1546691358089447, 0.15915995836257935, 0.15400871634483337, 0.16219785809516907, 0.15968827903270721, 0.16232994198799133, 0.16814158856868744, 0.16536785662174225, 0.17395325005054474, 0.1736890822649002, 0.17553824186325073, 0.17633073031902313, 0.18478403985500336, 0.17659489810466766, 0.17857614159584045, 0.187689870595932, 0.1896711140871048, 0.18835029006004333, 0.19072777032852173, 0.1846519559621811, 0.18782195448875427, 0.19891692698001862, 0.1982565075159073, 0.19865275919437408, 0.20420023798942566, 0.20195482671260834, 0.20433232188224792, 0.2028794139623642, 0.21318188309669495, 0.21291771531105042, 0.2145027071237564, 0.21674811840057373, 0.21701228618621826, 0.21780477464199066, 0.22163519263267517, 0.22255976498126984, 0.22044643759727478, 0.22255976498126984, 0.2226918488740921, 0.23352265357971191, 0.2339189052581787, 0.2347113937139511, 0.23920221626758575, 0.2351076453924179, 0.23933430016040802, 0.2405230551958084, 0.2366926372051239, 0.244485542178154, 0.2534671723842621, 0.2509576082229614, 0.25056135654449463, 0.24976885318756104, 0.244485542178154, 0.24805177748203278, 0.2599392533302307, 0.25861841440200806, 0.2538634240627289, 0.26443007588386536, 0.2557125985622406, 0.26535463333129883, 0.27777042984962463, 0.2657508850097656, 0.27261921763420105, 0.272090882062912, 0.26865673065185547, 0.2736758589744568, 0.27327960729599], "val_loss": [1.970306124005999, 1.969628197806222, 1.9689529963902064, 1.9682824271065849, 1.967604092189244, 1.966930730002267, 1.966259275163923, 1.965592520577567, 1.9649173191615514, 1.964235578264509, 1.9635669163295202, 1.9628940990992956, 1.9622293881007604, 1.96155732018607, 1.9608922685895647, 1.9602338245936803, 1.9595749718802316, 1.9589104652404785, 1.9582407133919852, 1.9575644901820592, 1.956904479435512, 1.9562441962105888, 1.9555846623011999, 1.9549205643790108, 1.9542605536324638, 1.9535905974251884, 1.952928134373256, 1.9522553852626257, 1.9515900611877441, 1.950925622667585, 1.950256075177874, 1.949582304273333, 1.9489117349897112, 1.9482428005763464, 1.9475793157305037, 1.9469026838030135, 1.9462228502546037, 1.9455417905535017, 1.944866452898298, 1.9441900253295898, 1.94351441519601, 1.9428300176348006, 1.942134175981794, 1.941443852015904, 1.9407547542027064, 1.9400667463030135, 1.9393700872148787, 1.9386755398341589, 1.9379713194710868, 1.9372617857796806, 1.936556679861886, 1.9358518464224679, 1.9351427214486259, 1.9344336645943778, 1.9337160246712821, 1.9329910959516252, 1.9322696413312639, 1.9315570422581263, 1.9308156967163086, 1.9300888606480189, 1.9293480600629533, 1.9286058970860072, 1.927863529750279, 1.9271082196916853, 1.926358904157366, 1.9255992344447546, 1.924839700971331, 1.9240763528006417, 1.9232989038739885, 1.922523089817592, 1.9217455046517509, 1.9209647178649902, 1.9201677186148507, 1.9193712643214635, 1.9185680661882674, 1.9177658898489816, 1.9169604437691825, 1.916158812386649, 1.9153428758893694, 1.9145334788731165, 1.913703509739467, 1.9128740174429757, 1.9120315143040247, 1.9111838340759277, 1.9103402410234724, 1.9094877243041992, 1.908632687159947, 1.9077560561043876, 1.906881400517055, 1.9060027258736747, 1.9051072256905692, 1.9042157445635115, 1.903315612248012, 1.902397564479283, 1.9014855112348283, 1.900557586124965, 1.8996220316205705, 1.8986857278006417, 1.8977373668125697, 1.8967924118041992], "val_accuracy": [0.03933333232998848, 0.041333332657814026, 0.04699999839067459, 0.052666667848825455, 0.05900000035762787, 0.06300000101327896, 0.06833333522081375, 0.07333333045244217, 0.07966666668653488, 0.0860000029206276, 0.09300000220537186, 0.09966666996479034, 0.1080000028014183, 0.11533333361148834, 0.12266666442155838, 0.1276666671037674, 0.1316666603088379, 0.13899999856948853, 0.14366666972637177, 0.14933332800865173, 0.15466666221618652, 0.16033333539962769, 0.16566666960716248, 0.1733333319425583, 0.1809999942779541, 0.18733333051204681, 0.19333332777023315, 0.20000000298023224, 0.20633333921432495, 0.21066667139530182, 0.2163333296775818, 0.22166666388511658, 0.2266666740179062, 0.23266667127609253, 0.23800000548362732, 0.24300000071525574, 0.24799999594688416, 0.25200000405311584, 0.2590000033378601, 0.2630000114440918, 0.2680000066757202, 0.273333340883255, 0.2763333320617676, 0.2823333442211151, 0.2853333353996277, 0.28733333945274353, 0.29233333468437195, 0.29366666078567505, 0.29633334279060364, 0.30033332109451294, 0.30566665530204773, 0.3073333203792572, 0.3100000023841858, 0.312666654586792, 0.3176666796207428, 0.3190000057220459, 0.3240000009536743, 0.32499998807907104, 0.3269999921321869, 0.3306666612625122, 0.33266666531562805, 0.33500000834465027, 0.33799999952316284, 0.34066668152809143, 0.3423333466053009, 0.34466665983200073, 0.3463333249092102, 0.34833332896232605, 0.34966665506362915, 0.35066667199134827, 0.351666659116745, 0.35333332419395447, 0.35499998927116394, 0.35766667127609253, 0.35899999737739563, 0.359333336353302, 0.3616666793823242, 0.3619999885559082, 0.36500000953674316, 0.3659999966621399, 0.3659999966621399, 0.367000013589859, 0.367333322763443, 0.3686666786670685, 0.3700000047683716, 0.3713333308696747, 0.3720000088214874, 0.37400001287460327, 0.37533333897590637, 0.3763333261013031, 0.3773333430290222, 0.37933334708213806, 0.3799999952316284, 0.3803333342075348, 0.3813333213329315, 0.38333332538604736, 0.3840000033378601, 0.3843333423137665, 0.3869999945163727, 0.38966667652130127]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 0, 2, 6, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 5, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [40, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [6, 8, 1, 3], [4, 2], [94], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 0, 3, 1, 0, 1, 0, 3], [6, 49, 44, 92]], "fitness": -0.28685712814331055, "mapping_values": [1, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3010664568475176, 2.301849661564956, 2.3000010985582415, 2.3005750686296333, 2.300354834891518, 2.3007245364521065, 2.300456825075463, 2.2998106882415033, 2.2968507521597465, 2.2974542308367, 2.3006477000108405, 2.297456881247649, 2.29848805712734, 2.299072471103963, 2.296697372332729, 2.2973025647829615, 2.2951789458099374, 2.296467970642888, 2.296175733706608, 2.296379175672379, 2.294987113263865, 2.296596497938917, 2.2960042511357166, 2.2951807100633355, 2.29563269072268, 2.2928821527883914, 2.2947317727914873, 2.2937381813916957, 2.2925768825970367, 2.293129060215182, 2.2924801981790806, 2.292927924872799, 2.291038252059983, 2.2922929466959507, 2.2899919772711823, 2.2902208840795053, 2.289785809253012, 2.29001905782395, 2.2898971985643253, 2.2884719504687796, 2.2908090841595397, 2.286825714519452, 2.287593154827869, 2.287237707775944, 2.28777586423395, 2.287873774818095, 2.286601369249633, 2.2873272386917964, 2.285881809066583, 2.286034711741532, 2.286634535160299, 2.285942834492105, 2.2865297802214797, 2.2864503858269263, 2.2845055121377853, 2.2837562345321607, 2.2839433069573007, 2.28332163087444, 2.283376632223607, 2.2846876543274552, 2.282850437475438, 2.2816174552425212, 2.2818325466845786, 2.281745615164208, 2.2815517011870954, 2.2794339349162485, 2.280444621126555, 2.2806720554143713, 2.279579119580911, 2.2812406538090513, 2.2807488024211153, 2.2797998819904177, 2.2781715706087233, 2.278048675798107, 2.2764986791410435, 2.2772384150594123, 2.2783649221875524, 2.277318418679409, 2.2766282605677706, 2.2770479782272277, 2.2765981759912917, 2.275827117174718, 2.274485119550204, 2.275425803439335, 2.2757533432045127, 2.274956577410866, 2.274686444563054, 2.274128155827349, 2.273565024968073, 2.273933370871362, 2.2730789781640217, 2.2738383065408736, 2.271895837065818, 2.2704968740281615, 2.2726574857016724, 2.2702477232119693, 2.2704231273291873, 2.2703121069352767, 2.269341067646819, 2.270968036817884], "accuracy": [0.09206181764602661, 0.09311848133802414, 0.0944393053650856, 0.09325055778026581, 0.09509972482919693, 0.09694888442754745, 0.08994849026203156, 0.09826971590518951, 0.10394927859306335, 0.10038304328918457, 0.09470347315073013, 0.09919429570436478, 0.09747721254825592, 0.10394927859306335, 0.10513802617788315, 0.10011887550354004, 0.10989301651716232, 0.10500594228506088, 0.1080438494682312, 0.1080438494682312, 0.10738343745470047, 0.10949676483869553, 0.10632677376270294, 0.11042134463787079, 0.10632677376270294, 0.11517632752656937, 0.11015717685222626, 0.11359133571386337, 0.11293092370033264, 0.11398758739233017, 0.11821424216032028, 0.1138555034995079, 0.11728965491056442, 0.11491216719150543, 0.12257297337055206, 0.11676132678985596, 0.11861048638820648, 0.12059172987937927, 0.1228371411561966, 0.12508255243301392, 0.12257297337055206, 0.12917712330818176, 0.1278562992811203, 0.13181878626346588, 0.13089419901371002, 0.13617752492427826, 0.12719587981700897, 0.12996962666511536, 0.13538502156734467, 0.13829085230827332, 0.1328754425048828, 0.13353586196899414, 0.13049794733524323, 0.12653546035289764, 0.1372341811656952, 0.1402720957994461, 0.13432836532592773, 0.13895125687122345, 0.13710209727287292, 0.1394795924425125, 0.14198917150497437, 0.1472724825143814, 0.14515915513038635, 0.1460837423801422, 0.14357416331768036, 0.15031039714813232, 0.1430458277463913, 0.14674416184425354, 0.14621582627296448, 0.1460837423801422, 0.15110288560390472, 0.14912164211273193, 0.15440496802330017, 0.15057456493377686, 0.15955619513988495, 0.15770703554153442, 0.15493330359458923, 0.15863162279129028, 0.15849953889846802, 0.1578391194343567, 0.1562541276216507, 0.16166952252388, 0.1612732857465744, 0.16166952252388, 0.16180160641670227, 0.15889579057693481, 0.15876370668411255, 0.17197199165821075, 0.1624620258808136, 0.1636507660150528, 0.16880200803279877, 0.16536785662174225, 0.17342491447925568, 0.1802932173013687, 0.16655659675598145, 0.17619864642620087, 0.17976489663124084, 0.1768590658903122, 0.1842557191848755, 0.17012283205986023], "val_loss": [1.9706803730555944, 1.9703781264168876, 1.970076424734933, 1.9697765622820174, 1.9694735663277763, 1.9691719327654158, 1.9688703673226493, 1.9685700961521693, 1.9682669639587402, 1.9679604257856096, 1.967660631452288, 1.9673582485743932, 1.9670583180018835, 1.9667556626456124, 1.9664557320731026, 1.9661594799586706, 1.9658628872462682, 1.9655632291521346, 1.9652634348188127, 1.9649594851902552, 1.964663028717041, 1.9643665722438268, 1.964071546282087, 1.9637746810913086, 1.9634793826511927, 1.9631797926766532, 1.9628842217581612, 1.9625855854579382, 1.9622902870178223, 1.961996078491211, 1.9616989408220564, 1.961400372641427, 1.961103916168213, 1.9608097076416016, 1.9605163846697127, 1.9602204050336565, 1.9599227224077498, 1.959625176021031, 1.9593300819396973, 1.9590373720441545, 1.9587439809526717, 1.9584486143929618, 1.9581497737339564, 1.9578529766627721, 1.9575559071132116, 1.9572619029453822, 1.9569645609174455, 1.9566683088030135, 1.9563700812203544, 1.9560705593654089, 1.9557741710117884, 1.9554777145385742, 1.9551811899457658, 1.9548861639840263, 1.9545893669128418, 1.9542907987322127, 1.9539941379002161, 1.9537014280046736, 1.953399658203125, 1.953103814806257, 1.952806064060756, 1.952507563999721, 1.9522100857325964, 1.951909065246582, 1.9516119956970215, 1.9513139724731445, 1.951016562325614, 1.9507178579057967, 1.950416019984654, 1.9501167024884904, 1.949817384992327, 1.949519157409668, 1.949216365814209, 1.9489170483180456, 1.9486144610813685, 1.9483133724757604, 1.9480146680559431, 1.9477180753435408, 1.9474214145115443, 1.9471240043640137, 1.9468205996922083, 1.9465197835649763, 1.9462168557303292, 1.945913655417306, 1.9456112044198173, 1.945310456412179, 1.945009367806571, 1.9447040557861328, 1.9444004467555456, 1.9440982001168388, 1.943791457584926, 1.9434903008597237, 1.943185601915632, 1.942878586905343, 1.942572934286935, 1.942265442439488, 1.9419586317879813, 1.9416498456682478, 1.9413410595485143, 1.9410344532557897], "val_accuracy": [0.036666665226221085, 0.03866666555404663, 0.03933333232998848, 0.04066666588187218, 0.041999999433755875, 0.04500000178813934, 0.04766666516661644, 0.050999999046325684, 0.052666667848825455, 0.0560000017285347, 0.05833333358168602, 0.059333331882953644, 0.06266666948795319, 0.06433333456516266, 0.06700000166893005, 0.06966666877269745, 0.07133333384990692, 0.07433333247900009, 0.07599999755620956, 0.07966666668653488, 0.08233333379030228, 0.0846666693687439, 0.08799999952316284, 0.09200000017881393, 0.09333333373069763, 0.09733333438634872, 0.09933333098888397, 0.10233332961797714, 0.10733333230018616, 0.11033333092927933, 0.11299999803304672, 0.11699999868869781, 0.11966666579246521, 0.12300000339746475, 0.12533333897590637, 0.1276666671037674, 0.1289999932050705, 0.13099999725818634, 0.13466666638851166, 0.1366666704416275, 0.14000000059604645, 0.14233332872390747, 0.14399999380111694, 0.1469999998807907, 0.14933332800865173, 0.1509999930858612, 0.15399999916553497, 0.15700000524520874, 0.16033333539962769, 0.16300000250339508, 0.16500000655651093, 0.16733333468437195, 0.16966666281223297, 0.17466667294502258, 0.17733334004878998, 0.18066667020320892, 0.1823333352804184, 0.1863333284854889, 0.18833333253860474, 0.18966667354106903, 0.1940000057220459, 0.19733333587646484, 0.19966666400432587, 0.20233333110809326, 0.2070000022649765, 0.20733332633972168, 0.20866666734218597, 0.2123333364725113, 0.2150000035762787, 0.2160000056028366, 0.21933333575725555, 0.22233332693576813, 0.2253333330154419, 0.2266666740179062, 0.22833333909511566, 0.23100000619888306, 0.2329999953508377, 0.23766666650772095, 0.23866666853427887, 0.24133333563804626, 0.24433332681655884, 0.24633333086967468, 0.2486666738986969, 0.24966666102409363, 0.2513333261013031, 0.2540000081062317, 0.25699999928474426, 0.2590000033378601, 0.26100000739097595, 0.2626666724681854, 0.26499998569488525, 0.26733332872390747, 0.27000001072883606, 0.27300000190734863, 0.2750000059604645, 0.2763333320617676, 0.2770000100135803, 0.2786666750907898, 0.281333327293396, 0.2823333442211151]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 4, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [4, 2], [94], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 0, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 3, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3017817185366267, 2.3043917485389414, 2.304737907563848, 2.3080856185374463, 2.3106431887685472, 2.315983754359437, 2.3201947407148706, 2.325767616034656, 2.328749538869307, 2.3448175749427937, 2.39013394432738, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.08717474341392517, 0.08519349992275238, 0.08096684515476227, 0.08321225643157959, 0.07607977837324142, 0.07198520749807358, 0.07713644206523895, 0.08308017253875732, 0.07819310575723648, 0.07951393723487854, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720601354326521, 1.973393508366176, 1.9750639370509557, 1.9768798010689872, 1.979008606501988, 1.981928825378418, 1.9853973388671875, 1.9893507957458496, 1.9957055364336287, 2.009357452392578, 2.096181801387242, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027000000700354576, 0.024000000208616257, 0.02033333294093609, 0.021666666492819786, 0.02266666665673256, 0.029999999329447746, 0.0416666679084301, 0.058666665107011795, 0.08100000023841858, 0.09700000286102295, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 0, 4, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 1, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 3, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 18, 10, 8, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.pow(beta, tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), sigma)), alpha))), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 0, 4, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [4, 2], [94], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 3, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), alpha)", "other_info": {"loss": [2.3017817185366267, 2.3043933318448877, 2.304743854424201, 2.3080900856973376, 2.310651141922346, 2.315987501980811, 2.3201930583696386, 2.3257611166012206, 2.328748135188189, 2.344799113862503, 2.3900322048750064, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.08717474341392517, 0.08519349992275238, 0.08109892904758453, 0.08321225643157959, 0.07607977837324142, 0.07185312360525131, 0.07700435817241669, 0.08308017253875732, 0.07819310575723648, 0.0796460211277008, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97206027167184, 1.9733964375087194, 1.9750706127711706, 1.9768804822649275, 1.9790178026471819, 1.9819316182817732, 1.9853952952793665, 1.9893531118120467, 1.995706558227539, 2.0093444415501187, 2.095695904323033, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027000000700354576, 0.024000000208616257, 0.02033333294093609, 0.021666666492819786, 0.022333333268761635, 0.030666666105389595, 0.0416666679084301, 0.058666665107011795, 0.08133333176374435, 0.09700000286102295, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 9, 2, 9, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [1, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 4, 5, 9, 0, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [5, 2], [94], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [54, 53, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.pow(alpha, alpha), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 7, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 8, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 3, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.sqrt(sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 5, 7, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [4, 2], [94], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 3, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, beta)), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [277483.2804675804, 5372110.922731475, 24982620.967903845, 68483768.7893277, 146255727.95562014, 271921352.5082552], "accuracy": [0.09708096832036972, 0.1022322028875351, 0.09998679161071777, 0.1026284471154213, 0.10038304328918457, 0.10236428678035736], "val_loss": [1070171.7857142857, 8516843.714285715, 28695790.285714287, 67962768.0, 132673325.71428572, 229183035.42857143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 2, 6, 3, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 3, 0, 1, 0, 3], [54, 49, 97, 92, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 12, 7, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), beta), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 5, 7, 8, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [7, 2], [94], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 3, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 18, 10, 8, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.pow(alpha, tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma)), alpha), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 6, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [4, 2], [94], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 3, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 10, 5, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(sigma, alpha)), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.pow(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 2, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 3, 0, 3, 1, 0, 1, 0, 3], [85, 49, 97, 92, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3022548020586693, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [55, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 2, 1, 0, 1, 0, 3], [54, 49, 97, 92, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 9, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 3, 0, 1, 0, 3], [98, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022548020586693, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 0, 3, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 3, 0, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [5, 2], [94], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 3, 1, 0, 1, 0, 3], [39, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022548020586693, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 9, 9, 1, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 56, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [2, 2], [94], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [10, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.negative(alpha))", "other_info": {"loss": [1218043108.7534122, 23800932627.104477, 110985781184.16061, 304596485294.8821, 650934442663.2402, 1210745743081.1084], "accuracy": [0.09708096832036972, 0.1022322028875351, 0.09998679161071777, 0.10249637067317963, 0.10038304328918457, 0.10236428678035736], "val_loss": [4725037933.714286, 37801388324.57143, 127580901961.14285, 302418044050.2857, 590661830948.5714, 1020664592091.4286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 1, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 0, 4, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [64, 50, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [4, 2], [94], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 6, 7, 4, 3, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 3, 1, 0, 1, 0, 3], [1, 49, 44, 92]], "fitness": -0.07085714489221573, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [2.3006955309787114, 2.300921779503329, 2.2990681833484627, 2.2997148024675287, 2.2999862838871583, 2.300080759303917, 2.2997868042800875, 2.2999633077806125, 2.297891947949457, 2.2981039066954594, 2.3008437655810052, 2.299285584594501, 2.3002776444281063], "accuracy": [0.09245806187391281, 0.09496764093637466, 0.09800554811954498, 0.09391097724437714, 0.09893012791872025, 0.09681680053472519, 0.0952318087220192, 0.09919429570436478, 0.10381719470024109, 0.10434553027153015, 0.09774138033390045, 0.10117553919553757, 0.0948355570435524], "val_loss": [1.9702072143554688, 1.96974059513637, 1.9696803774152483, 1.969674723488944, 1.9698544229779924, 1.9698076929364885, 1.9696823528834753, 1.9696687289646693, 1.9697768347603934, 1.9698846680777413, 1.9700960431780135, 1.9703713825770788, 1.9705874579293388], "val_accuracy": [0.044333335012197495, 0.050333332270383835, 0.05533333495259285, 0.05900000035762787, 0.06400000303983688, 0.0689999982714653, 0.07333333045244217, 0.0793333351612091, 0.07766667008399963, 0.07833333313465118, 0.07533333450555801, 0.0716666653752327, 0.0729999989271164]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 0, 0, 2, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 9, 6, 9, 0, 2, 8, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 4, 3, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [40, 81, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0], [8, 8, 1, 3], [4, 2], [94], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 0, 1, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 3, 1, 0, 1, 0, 3], [6, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(sigma), alpha)", "other_info": {"loss": [2.3011993416831666, 2.302307310672468, 2.3007858800000016, 2.301685109130301, 2.3017974452823773, 2.302500358047959], "accuracy": [0.09140139818191528, 0.09232597798109055, 0.09192973375320435, 0.09206181764602661, 0.09179764986038208, 0.09457138925790787], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]