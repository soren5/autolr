[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8174285888671875, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9856840860983793, 1.485234447269392, 1.0487377830012095, 0.9321009190468945, 0.8264324807566485, 0.7677137862343311, 0.7560046199621101, 0.691717055558434, 0.7301574392624819, 0.6697884512426295, 0.6516484396883746, 0.629127269801431, 0.6281617235324921, 0.5898178861503667, 0.6104474542730158, 0.565092769706443, 0.5536268884400964, 0.5731369669663199, 0.5372243945813686, 0.549793846878661, 0.5223278040899152, 0.5065706143399995, 0.49698523953291307, 0.5135520729469412, 0.5020555263150717, 0.47545475351056243, 0.46661044742846614, 0.4754534608431937, 0.44853333145746105, 0.46433720380370924, 0.43706502078814263, 0.4408578314462815, 0.42416860085861985, 0.4446604001704712, 0.4262724293615084, 0.4289053787471533, 0.4159961839897474, 0.41807183760693517, 0.40950959259965214, 0.38666748388442446, 0.39729660733296274, 0.3845318046464518, 0.3930580491529023, 0.3937854942919918, 0.37875778245069347, 0.36572344369498444], "accuracy": [0.35028398036956787, 0.4802536070346832, 0.6231673359870911, 0.6542068123817444, 0.6921146512031555, 0.7099458575248718, 0.7100779414176941, 0.735569953918457, 0.7181349992752075, 0.7429665923118591, 0.7518161535263062, 0.7549861073493958, 0.7627789974212646, 0.7766477465629578, 0.7648923397064209, 0.7792893648147583, 0.793950617313385, 0.7824593782424927, 0.7980451583862305, 0.7947431206703186, 0.8000264167785645, 0.8094043135643005, 0.8138951063156128, 0.8070268034934998, 0.8131026029586792, 0.828820526599884, 0.8240655064582825, 0.8198388814926147, 0.8355567455291748, 0.8272355198860168, 0.8387266993522644, 0.8417646288871765, 0.8408400416374207, 0.8341038227081299, 0.8422929644584656, 0.8401796221733093, 0.841500461101532, 0.844010055065155, 0.8511425256729126, 0.8610487580299377, 0.8544445633888245, 0.8576145768165588, 0.8544445633888245, 0.8578787446022034, 0.8623695969581604, 0.8621054291725159], "val_loss": [1.6568958759307861, 0.9767521790095738, 0.8141382932662964, 0.6483713218144008, 0.6194718394960675, 0.6314428533826556, 0.5486601420811245, 0.5258651631219047, 0.5092883450644357, 0.5307555539267403, 0.4822453771318708, 0.4678246293749128, 0.4536151034491403, 0.49025608812059673, 0.43848357030323576, 0.45430547850472586, 0.4463743141719273, 0.45010980537959505, 0.4585637024470738, 0.4230020557131086, 0.4284640720912388, 0.3940084917204721, 0.3868182897567749, 0.38395460162843975, 0.42252188069479807, 0.3724996192114694, 0.3691072038241795, 0.3868807128497532, 0.361789345741272, 0.36967300517218454, 0.38283467292785645, 0.36272852761404856, 0.3582890714917864, 0.34441897698811125, 0.3486386707850865, 0.3810449242591858, 0.355961229119982, 0.35842121498925344, 0.34098723956516813, 0.3256374682698931, 0.3222087962286813, 0.3414833886282785, 0.3343066913740976, 0.3287964803831918, 0.3242891601153782, 0.3223357115473066], "val_accuracy": [0.2763333320617676, 0.6036666631698608, 0.6660000085830688, 0.6963333487510681, 0.6966666579246521, 0.7046666741371155, 0.7549999952316284, 0.7596666812896729, 0.7666666507720947, 0.7516666650772095, 0.7850000262260437, 0.7893333435058594, 0.7926666736602783, 0.7760000228881836, 0.8006666898727417, 0.8086666464805603, 0.79666668176651, 0.7889999747276306, 0.7866666913032532, 0.8109999895095825, 0.8113333582878113, 0.8213333487510681, 0.8333333134651184, 0.8360000252723694, 0.8046666383743286, 0.8346666693687439, 0.8396666646003723, 0.82833331823349, 0.8429999947547913, 0.8379999995231628, 0.8330000042915344, 0.8429999947547913, 0.8496666550636292, 0.8546666502952576, 0.8510000109672546, 0.8163333535194397, 0.8519999980926514, 0.846666693687439, 0.8583333492279053, 0.8636666536331177, 0.8669999837875366, 0.8560000061988831, 0.8516666889190674, 0.8633333444595337, 0.8636666536331177, 0.8653333187103271]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 6, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 6, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.6700000166893005, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0313854777597244, 1.4155495855172455, 1.0010219783263987, 121.5380868986062, 3.128075591892126, 2.5001106243942233, 2.3694400138008502, 2.347285802385448], "accuracy": [0.35345396399497986, 0.4900277256965637, 0.6431118845939636, 0.31184783577919006, 0.10394927859306335, 0.09893012791872025, 0.10474177449941635, 0.10196803510189056], "val_loss": [1.594022274017334, 0.7931407008852277, 0.835789680480957, 2.6064660208565846, 2.076692581176758, 2.000613348824637, 1.9908315794808524, 2.0760342053004672], "val_accuracy": [0.312333345413208, 0.625, 0.684333324432373, 0.17233332991600037, 0.10400000214576721, 0.10100000351667404, 0.10100000351667404, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 4, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 91, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 5, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.5979999899864197, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.math.square(alpha)))", "other_info": {"loss": [2.300546394315898, 2.2836518005813984, 2.238697936270042, 1.887755210436472, 1.4422903723326876, 1.1522483307813625, 0.9867023011523625, 0.8964827998659756, 0.8698041720822377, 0.8200247966460642, 0.8688064460363276, 0.801263287374136, 0.9420216224055328, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.13393211364746094, 0.1938977688550949, 0.3465856611728668, 0.5152555704116821, 0.5721833109855652, 0.6465460062026978, 0.666358470916748, 0.670320987701416, 0.6952846646308899, 0.6880200505256653, 0.6935675740242004, 0.6964733600616455, 0.30207371711730957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9626964841570174, 1.9397171565464564, 1.8151180403573173, 1.1542891434260778, 0.7862309898648944, 0.6792397158486503, 0.6268032448632377, 0.588516082082476, 0.5552034718649728, 0.6018762247903007, 0.5472159045083183, 0.5318580525262016, 0.982734203338623, NaN, NaN, NaN, NaN], "val_accuracy": [0.11100000143051147, 0.2370000034570694, 0.3956666588783264, 0.5556666851043701, 0.6296666860580444, 0.7043333053588867, 0.7266666889190674, 0.7400000095367432, 0.7463333606719971, 0.7459999918937683, 0.7413333058357239, 0.7613333463668823, 0.5559999942779541, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 3, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 6, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 6, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [76, 49, 44, 92]], "fitness": -0.26028570532798767, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 20, 13, 3, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))))), grad), tf.math.add(beta, grad))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.561828569225301, 2.472088417593105, 2.318286652515247, 2.289522973821305, 2.3053645496559874, 2.302540080705733], "accuracy": [0.18095363676548004, 0.1868973672389984, 0.10632677376270294, 0.1282525360584259, 0.09879804402589798, 0.10487385839223862], "val_loss": [1.955066135951451, 1.9775725092206682, 1.9739724567958288, 1.9777987343924386, 1.973803928920201, 1.971335002354213], "val_accuracy": [0.23266667127609253, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.12833333015441895]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 9, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [66, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.1225714311003685, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.622991519565706, 3.379002900124226, 4.68823475343347e+26, 3.0485367159313768, 2.9745308312726073, 2.8598785308751733, 2.9585957255707975], "accuracy": [0.201294407248497, 0.1476687341928482, 0.11055342853069305, 0.10170386731624603, 0.09734513610601425, 0.09998679161071777, 0.09800554811954498], "val_loss": [2.805232048034668, 23.033714294433594, NaN, 2.6273453576224193, 2.46290077481951, 2.524319989340646, 2.7464537620544434], "val_accuracy": [0.16200000047683716, 0.21433334052562714, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.09866666793823242, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 3, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 1, 2, 3, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [95, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 2, 1, 0, 1, 0, 3], [3, 49, 44, 92]], "fitness": -0.1168571412563324, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 4, 3, 2, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3009355701491376, 2.302567917358102, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735454150608607, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11133333295583725, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [1, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [12, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 1, 5, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 2, 3, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [66, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [3, 49, 44, 92]], "fitness": -0.1168571412563324, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3009355701491376, 2.302567917358102, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735454150608607, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11133333295583725, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 30, 30, 18, 12, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), grad))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(alpha))", "other_info": {"loss": [2.312167742406341, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08572183549404144, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0374999727521623, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08691058307886124, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [59, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 30, 30, 18, 12, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), grad)), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 7, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [1, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 1, 5, 3, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [66, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [86, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 2, 6, 4, 0, 0, 3, 1, 0, 0, 2, 2, 6, 6, 2, 8, 5, 2, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [50983314897.42386, 7729093324444.556, 130392176983129.12, 936491036071031.1, 4173866958748246.0, 1.353340950513523e+16], "accuracy": [0.10196803510189056, 0.09615638852119446, 0.1002509593963623, 0.10460969805717468, 0.09919429570436478, 0.10381719470024109], "val_loss": [429842497536.0, 23172153868288.0, 248720405673691.44, 1355903918782171.5, 5078329909126290.0, 1.4981539565666304e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 0, 9, 3, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [59, 72, 16, 9, 57, 39, 26, 75], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 2, 1, 0, 1, 0, 3], [50, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 3, 4, 0, 4, 3, 2, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1138555034995079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [12, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 6, 8, 7, 0, 1, 0, 0, 3, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 1, 2, 3, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [95, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10672302544116974, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 9, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [66, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 5, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [57, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3002718287908706, 2.300251585412822, 2.299908801690856, 2.300426686901253, 2.300906987568769, 2.3015366629082936, 2.30151134005879, 2.3018274783710244, 2.3015231064927577], "accuracy": [0.09417514503002167, 0.09391097724437714, 0.1010434553027153, 0.10870426893234253, 0.10302469879388809, 0.09245806187391281, 0.0886276587843895, 0.08453308790922165, 0.08691058307886124], "val_loss": [1.9693114416939872, 1.9701160022190638, 1.9711669513157435, 1.9719128608703613, 1.9723738942827498, 1.9726671491350447, 1.972855908530099, 1.9729655810764857, 1.9730747086661202], "val_accuracy": [0.07766667008399963, 0.09266666322946548, 0.09366666525602341, 0.09966666996479034, 0.08833333104848862, 0.0820000022649765, 0.07866666465997696, 0.07900000363588333, 0.07400000095367432]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 4, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 6, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 6, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020473809809716, 2.3032854015265696, 2.302203328240077, 2.301913834991173, 2.3019191352147406, 2.300782775960783], "accuracy": [0.09126931428909302, 0.0874389111995697, 0.09047681838274002, 0.09496764093637466, 0.09734513610601425, 0.09470347315073013], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 2, 6, 7, 1, 0, 1, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [12, 72, 16, 9, 57, 39, 26, 75], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 1, 5, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 1, 2, 3, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [95, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020473809809716, 2.3032854015265696, 2.302203328240077, 2.301913834991173, 2.3019191352147406, 2.300782775960783], "accuracy": [0.09126931428909302, 0.0874389111995697, 0.09047681838274002, 0.09496764093637466, 0.09734513610601425, 0.09470347315073013], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 2, 2, 4, 2, 0, 3, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(alpha))", "other_info": {"loss": [2.3026557168657, 2.305791170148959, 2.3068078147138444, 2.3091446433195175, 2.3118292304109413, 2.3134773238586033], "accuracy": [0.09034473448991776, 0.08426892012357712, 0.08189142495393753, 0.08426892012357712, 0.08321225643157959, 0.08030643314123154], "val_loss": [1.9721575464521135, 1.9737422806876046, 1.9754642759050642, 1.9775451932634627, 1.9796874182564872, 1.9820288249424525], "val_accuracy": [0.029333332553505898, 0.020666666328907013, 0.019999999552965164, 0.02199999988079071, 0.021666666492819786, 0.027000000700354576]}}]