[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8182857036590576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9657138083132581, 1.4683403231448595, 1.0641300519853298, 0.8779223732676851, 0.8177313397053825, 0.7532282348841787, 0.7642637560270277, 0.7198315713116207, 0.682320312580743, 0.6546043587587513, 0.6496309951201658, 0.6364184599180326, 0.6184244873170698, 0.5952325978488214, 0.6300180275615621, 0.5778726527341652, 0.587922859421779, 0.5747327579955667, 0.5467425994019011, 0.5353806768079649, 0.5458999839535699, 0.5318573774788846, 0.5266898384010472, 0.5119617585540054, 0.4935713949976281, 0.4955657281029761, 0.4747805166293318, 0.45895977717238867, 0.4887666351066809, 0.46731478296660195, 0.4577017254628494, 0.46123949970630307, 0.4603293761010687, 0.4501626966510073, 0.43075891168377956, 0.44163902540642114, 0.431117181630891, 0.4233572124616109, 0.4104850870066189, 0.4225600822065422, 0.40826907660652223, 0.4022001503417993, 0.4030786222431244], "accuracy": [0.3403777480125427, 0.4998018741607666, 0.6172236204147339, 0.6705851554870605, 0.6946242451667786, 0.7144366502761841, 0.7098137736320496, 0.7244749665260315, 0.7442874312400818, 0.755118191242218, 0.7532690763473511, 0.7573636174201965, 0.7635715007781982, 0.776251494884491, 0.7564390301704407, 0.78113853931427, 0.7765156626701355, 0.7876105904579163, 0.7938185334205627, 0.7993659973144531, 0.7979130744934082, 0.7996301651000977, 0.8018755912780762, 0.8050455451011658, 0.8168009519577026, 0.8115176558494568, 0.8239334225654602, 0.8284242749214172, 0.8190463781356812, 0.8245938420295715, 0.824329674243927, 0.8309338092803955, 0.8327829837799072, 0.8329150676727295, 0.8416325449943542, 0.835160493850708, 0.8393871188163757, 0.8429533839225769, 0.8532558679580688, 0.839519202709198, 0.8506141901016235, 0.8486329317092896, 0.8515387773513794], "val_loss": [1.5947789805276054, 1.0176457677568709, 0.7454582963671003, 0.658298168863569, 0.6699222837175641, 0.5986502851758685, 0.5402166162218366, 0.5550834621701922, 0.52215233870915, 0.4997508355549404, 0.47316224234444754, 0.49820779051099506, 0.4564325639179775, 0.48721364566258024, 0.4608239105769566, 0.4621561254773821, 0.49720912320273264, 0.43778696230479647, 0.4179787976401193, 0.44506137711661203, 0.43504752431597027, 0.42297703879220144, 0.4027364594595773, 0.42638870647975374, 0.39359315804072786, 0.3976215294429234, 0.37688847950526644, 0.4012484720775059, 0.3747415968350002, 0.3688111645834787, 0.3639992220061166, 0.37071833440235685, 0.37488679374967304, 0.36096302952085224, 0.3772712009293692, 0.36382839509419035, 0.38380396366119385, 0.33613341195242746, 0.3536720020430429, 0.3473959650312151, 0.3916264091219221, 0.33751329353877474, 0.3503429208483015], "val_accuracy": [0.4246666729450226, 0.6023333072662354, 0.6393333077430725, 0.7120000123977661, 0.6806666851043701, 0.7179999947547913, 0.7459999918937683, 0.7353333234786987, 0.7726666927337646, 0.768666684627533, 0.7839999794960022, 0.7749999761581421, 0.7976666688919067, 0.7703333497047424, 0.7953333258628845, 0.7863333225250244, 0.7630000114440918, 0.8036666512489319, 0.8226666450500488, 0.7883333563804626, 0.7900000214576721, 0.8109999895095825, 0.8256666660308838, 0.8106666803359985, 0.828000009059906, 0.8220000267028809, 0.8363333344459534, 0.8186666369438171, 0.8349999785423279, 0.843666672706604, 0.8443333506584167, 0.8446666598320007, 0.8353333473205566, 0.8463333249092102, 0.8276666402816772, 0.840666651725769, 0.8266666531562805, 0.8616666793823242, 0.8479999899864197, 0.8533333539962769, 0.8256666660308838, 0.8586666584014893, 0.8516666889190674]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 2, 4, 0, 9, 2, 6, 6, 3, 8, 2, 3, 3, 2, 3, 8, 0, 8, 9, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8142856955528259, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.multiply(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9657631982760013, 1.4643323967847621, 1.0885979750168684, 0.8869109452439967, 0.8204205318559131, 0.7740754066457082, 0.7426859859651216, 0.7103319213044264, 0.6827182476279002, 0.675242012163683, 0.666933351448892, 0.6302930517219328, 0.6216567299857573, 0.601997360160023, 0.6106006812425794, 0.5933014853298861, 0.5932429977427573, 0.5804559306823787, 0.5446883418131435, 0.5542297842653436, 0.5392244728470302, 0.5310723866060378, 0.5290839723970093, 0.5108071157897957, 0.5002722076184998, 0.48320014771847064, 0.47453196781532814, 0.46767277500144777, 0.4914976696430527, 0.4668925077789857, 0.4637411962985489, 0.4644511391214014], "accuracy": [0.3403777480125427, 0.5011227130889893, 0.609430730342865, 0.6670188903808594, 0.6922467350959778, 0.71100252866745, 0.7205125093460083, 0.7230220437049866, 0.7441553473472595, 0.7479857206344604, 0.743891179561615, 0.76106196641922, 0.7613261342048645, 0.7738739848136902, 0.7685906887054443, 0.7755910754203796, 0.7757231593132019, 0.7837802171707153, 0.7980451583862305, 0.7878747582435608, 0.8000264167785645, 0.7991018295288086, 0.8005547523498535, 0.8057059645652771, 0.8119139075279236, 0.817461371421814, 0.826310932636261, 0.8219521641731262, 0.8165367841720581, 0.8226125836372375, 0.824329674243927, 0.8276317715644836], "val_loss": [1.5925185339791434, 1.0422096252441406, 0.713661926133292, 0.6721587691988263, 0.7143146991729736, 0.6387468917029244, 0.5422459670475551, 0.5423742362431118, 0.5602406774248395, 0.5156033039093018, 0.481329083442688, 0.5040283714021955, 0.4621511697769165, 0.48676046303340365, 0.5066356999533517, 0.49948462418147493, 0.4882617677961077, 0.43529519864491056, 0.41862758568355013, 0.422099164554051, 0.4309322919164385, 0.4311618208885193, 0.4064133848462786, 0.4430693898882185, 0.39143370730536325, 0.38302401985440937, 0.3732791713305882, 0.3915461131504604, 0.3719384329659598, 0.3692664248602731, 0.3684455667223249, 0.37136538539613995], "val_accuracy": [0.42500001192092896, 0.6003333330154419, 0.6669999957084656, 0.6959999799728394, 0.6736666560173035, 0.706333339214325, 0.7506666779518127, 0.7456666827201843, 0.7509999871253967, 0.7586666941642761, 0.7853333353996277, 0.7699999809265137, 0.7923333048820496, 0.7716666460037231, 0.7576666474342346, 0.7663333415985107, 0.7670000195503235, 0.8130000233650208, 0.8223333358764648, 0.8130000233650208, 0.7950000166893005, 0.8063333630561829, 0.8246666789054871, 0.8006666898727417, 0.8323333263397217, 0.8366666436195374, 0.843999981880188, 0.8296666741371155, 0.843666672706604, 0.8429999947547913, 0.8433333039283752, 0.8416666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8011428713798523, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.965764106288326, 1.4649474714504902, 1.0853532062639981, 0.8917272363230537, 0.8197376732781516, 0.7608084163220489, 0.7461429883255667, 0.7141665635076198, 0.6846906748729343, 0.6449429190720959, 0.6872137604356836, 0.6410752673899225, 0.6206985360375328, 0.5987884217816384, 0.5936492802901212, 0.6145045690060355, 0.5953415188932967, 0.5703507295500065, 0.5436109190036938, 0.5321531293257085, 0.5484890642419326, 0.5402389793993696, 0.5343696125084934, 0.5059983748502231, 0.49666971092636025, 0.4922078175000574, 0.47958215131515275, 0.4679534518920262, 0.4786615264792059, 0.4693888615599839, 0.4603995117552607, 0.4651728291962487, 0.4612742212974101, 0.45668266880324865, 0.43364293992385544, 0.44579916714582746, 0.43580755667364623, 0.425266818867352, 0.41352541728766684, 0.42310598640236574, 0.4125456267013494, 0.4010909537692127, 0.40698044036499437], "accuracy": [0.3403777480125427, 0.5008585453033447, 0.6104874014854431, 0.6655659675598145, 0.6930392384529114, 0.7121912837028503, 0.7144366502761841, 0.728701651096344, 0.7408532500267029, 0.7600052952766418, 0.7359662055969238, 0.7548540234565735, 0.7630431652069092, 0.772288978099823, 0.7725531458854675, 0.7666094303131104, 0.7726852297782898, 0.7857614755630493, 0.7946110367774963, 0.8024039268493652, 0.7955356240272522, 0.7965922355651855, 0.7971205711364746, 0.8100647330284119, 0.8152159452438354, 0.8132346868515015, 0.8248580098152161, 0.8204993009567261, 0.8247259259223938, 0.8239334225654602, 0.8255184292793274, 0.8298771381378174, 0.8314621448516846, 0.8300092220306396, 0.8401796221733093, 0.832650899887085, 0.8370096683502197, 0.8407079577445984, 0.8495575189590454, 0.8422929644584656, 0.8477083444595337, 0.8471800088882446, 0.8486329317092896], "val_loss": [1.5924804210662842, 1.044436046055385, 0.7086705310004098, 0.6752172708511353, 0.677091121673584, 0.6263703278132847, 0.5335589476994106, 0.5510465247290475, 0.5235575437545776, 0.4975451741899763, 0.4832264355250767, 0.5123332398278373, 0.45842274597712923, 0.461369446345738, 0.5197237048830304, 0.47580063343048096, 0.4904090166091919, 0.4325113466807774, 0.414868244103023, 0.4485894441604614, 0.4396931954792568, 0.4443573270525251, 0.40860640151160105, 0.4177307145936148, 0.3944781422615051, 0.41819154364722116, 0.3777392166001456, 0.40437404598508564, 0.378069920199258, 0.3755764790943691, 0.36562165192195345, 0.37058364493506296, 0.38143045561654226, 0.3599663972854614, 0.38453423976898193, 0.36216582570757183, 0.38316050597599577, 0.33767091376440866, 0.35988894530705046, 0.34861981868743896, 0.3865051439830235, 0.3579961998122079, 0.35182784284864155], "val_accuracy": [0.42533332109451294, 0.6006666421890259, 0.6683333516120911, 0.6943333148956299, 0.675000011920929, 0.6949999928474426, 0.7536666393280029, 0.7480000257492065, 0.7713333368301392, 0.7746666669845581, 0.7906666398048401, 0.7613333463668823, 0.7943333387374878, 0.7860000133514404, 0.75, 0.7756666541099548, 0.7673333287239075, 0.8133333325386047, 0.8190000057220459, 0.7903333306312561, 0.7876666784286499, 0.8009999990463257, 0.8213333487510681, 0.8206666707992554, 0.8306666612625122, 0.8113333582878113, 0.8360000252723694, 0.8153333067893982, 0.8366666436195374, 0.8379999995231628, 0.8460000157356262, 0.8420000076293945, 0.8296666741371155, 0.846666693687439, 0.8226666450500488, 0.8413333296775818, 0.8256666660308838, 0.8606666922569275, 0.8443333506584167, 0.8529999852180481, 0.8256666660308838, 0.8503333330154419, 0.8486666679382324]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7962856888771057, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.965729852882217, 1.4669926700937184, 1.0666625855573968, 0.8796509907718316, 0.8119817200259384, 0.752467590922362, 0.7097252107897865, 0.7431865406467804, 0.6751678584510341, 0.6850333391887921, 0.6430456883730024, 0.6362483653142358, 0.6120181008336912, 0.621499862409208, 0.6191887575731995, 0.5655941188201582, 0.5926762940688077], "accuracy": [0.34024566411972046, 0.4994056224822998, 0.6161669492721558, 0.672170102596283, 0.6997754573822021, 0.7160216569900513, 0.7363624572753906, 0.7111346125602722, 0.744419515132904, 0.7395324110984802, 0.7581561207771301, 0.752212405204773, 0.772288978099823, 0.7637035846710205, 0.7594769597053528, 0.7873464822769165, 0.7745344042778015], "val_loss": [1.5960752282823836, 1.01564393724714, 0.752342769077846, 0.664203235081264, 0.6739602599825177, 0.5602937085287911, 0.5585800749914986, 0.5527075358799526, 0.5263667106628418, 0.49581706523895264, 0.4956204039709909, 0.4704858234950474, 0.4637882709503174, 0.48774572781154085, 0.45844084875924246, 0.4732412270137242, 0.5271110704966954], "val_accuracy": [0.4246666729450226, 0.6056666374206543, 0.6413333415985107, 0.7036666870117188, 0.6756666898727417, 0.7559999823570251, 0.7423333525657654, 0.7509999871253967, 0.7703333497047424, 0.778333306312561, 0.7703333497047424, 0.8009999990463257, 0.7916666865348816, 0.7706666588783264, 0.79666668176651, 0.7816666960716248, 0.7429999709129333]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7934285998344421, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9946961579715192, 1.5453860609680354, 1.0519323259407047, 0.951960718162528, 0.8164777576002258, 0.7781715488169313, 0.7748229960251509, 0.7182269449940037, 0.7102451629217322, 0.6679674524672673, 0.6686401501575465, 0.6435164645631095, 0.6403083745924049, 0.602831227770571, 0.6048809246159721, 0.6022129850601082, 0.5685018110174497], "accuracy": [0.33126401901245117, 0.4881785809993744, 0.6188086271286011, 0.6516972780227661, 0.7000396251678467, 0.7131158113479614, 0.713379979133606, 0.7304186820983887, 0.7293620109558105, 0.7477215528488159, 0.7432307600975037, 0.7573636174201965, 0.7604015469551086, 0.7717606425285339, 0.7786290049552917, 0.7691190242767334, 0.7951393723487854], "val_loss": [1.5424954210008894, 0.7541498967579433, 0.7542572872979301, 0.6286558253424508, 0.5854941776820591, 0.572908776147025, 0.588923488344465, 0.524962306022644, 0.505123461995806, 0.5344991683959961, 0.5098694222314017, 0.45845636299678255, 0.45366357054029194, 0.4740593263081142, 0.45375560011182514, 0.4444163867405483, 0.44868903500693186], "val_accuracy": [0.4206666648387909, 0.6710000038146973, 0.668666660785675, 0.7106666564941406, 0.7429999709129333, 0.7480000257492065, 0.7273333072662354, 0.7473333477973938, 0.7763333320617676, 0.7383333444595337, 0.7689999938011169, 0.8006666898727417, 0.7926666736602783, 0.7836666703224182, 0.7960000038146973, 0.7973333597183228, 0.7946666479110718]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [21, 9, 44]], "fitness": -0.7285714149475098, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.299879793572215, 2.292666445161373, 2.285627682038019, 2.278111319768037, 2.2726958043634173, 2.264398425530134, 2.26082627112918, 2.25172030092813, 2.2438652730180193, 2.236111955903446, 2.2256437692628355, 2.2186351024621134, 2.207315336963551, 2.196369763646285, 2.183708681138814, 2.173921098515122, 2.160715197024171, 2.1444905357527113, 2.1273103947211816, 2.1133834229263853, 2.090751034724415, 2.072930640737221, 2.049885519900893, 2.0261058565521948, 2.002995053192313, 1.9753623783407337, 1.948867310449164, 1.9168495865955235, 1.8892952229888165, 1.8519081406353362, 1.8208983654296316, 1.7857118690522467, 1.757870733919019, 1.7233178434024288, 1.6845972450764235, 1.6610318226758216, 1.6232410532025896, 1.5810282210065483, 1.5613094873085722, 1.5320072629904908, 1.5045751254509123, 1.4821407728191411, 1.4524061250932276, 1.4221191607005308, 1.3975708549363723, 1.3771329152192013, 1.3598154912519576, 1.3365081866435276, 1.3102387289534219, 1.294943653235047, 1.277439300520482, 1.2601465224558415, 1.2420037906277905, 1.2260692508512594, 1.2210454503070598, 1.1958631252206438, 1.184897323483568, 1.1713565317174588, 1.1550708408006791, 1.1598759426212173, 1.1391489771237195, 1.1389368474129216, 1.1208530382756716, 1.107302239652575, 1.104083329726519, 1.0838593787457949, 1.0770063836419304, 1.0613656365529751, 1.0553436953992168, 1.0550453834026057, 1.0523643928071087, 1.0477682600057892, 1.0286973555168974, 1.0356781811147964, 1.0112520795629922, 1.0120262480871693, 1.003587689815086, 0.9977837834675015, 0.9894426993768859, 0.989911887938903, 0.990510352094648, 0.9821952204379297, 0.9647820219308977, 0.968127506724942, 0.9662778957282799, 0.9550730872147938, 0.9378915873768622, 0.9573965289605024, 0.9435756790041215, 0.9344788034121909, 0.9293047440538569, 0.9229740543986482, 0.9273691548647394, 0.9174641449894525, 0.9157674190327634, 0.9127163471893438, 0.9104567784690555, 0.9078042571649513, 0.8969052075757138, 0.8965255589044924], "accuracy": [0.09708096832036972, 0.11161009222269058, 0.13036586344242096, 0.1554616242647171, 0.16734910011291504, 0.18584071099758148, 0.2020869106054306, 0.22137102484703064, 0.23352265357971191, 0.2557125985622406, 0.2727513015270233, 0.2837141752243042, 0.2969224750995636, 0.31145158410072327, 0.31924447417259216, 0.3346982002258301, 0.33905693888664246, 0.3595297932624817, 0.36600184440612793, 0.36586976051330566, 0.38581427931785583, 0.38224804401397705, 0.3975696861743927, 0.40787214040756226, 0.4157971143722534, 0.4225333631038666, 0.4243825078010559, 0.442609965801239, 0.4418174624443054, 0.459780752658844, 0.4637432396411896, 0.4653282165527344, 0.47404569387435913, 0.472989022731781, 0.4884427487850189, 0.4855369031429291, 0.4943864643573761, 0.5086514353752136, 0.5089156031608582, 0.5077268481254578, 0.5156518220901489, 0.5184255838394165, 0.5285959839820862, 0.5329546928405762, 0.5462950468063354, 0.5493329763412476, 0.5526350736618042, 0.5486725568771362, 0.5614846348762512, 0.5635979175567627, 0.5810328722000122, 0.5769383311271667, 0.5799762010574341, 0.5809007883071899, 0.5799762010574341, 0.5971469879150391, 0.5980715751647949, 0.5927882790565491, 0.6004490852355957, 0.594241201877594, 0.611940324306488, 0.6091665625572205, 0.6172236204147339, 0.6197332143783569, 0.6194690465927124, 0.6222427487373352, 0.6252806782722473, 0.6259410977363586, 0.6343944072723389, 0.6288469433784485, 0.63096022605896, 0.6306960582733154, 0.6448289752006531, 0.6366398334503174, 0.6499801874160767, 0.6450931429862976, 0.6477347612380981, 0.6503764390945435, 0.6571126580238342, 0.6588297486305237, 0.652621865272522, 0.6536785364151001, 0.661471426486969, 0.6619997620582581, 0.6588297486305237, 0.6619997620582581, 0.6734909415245056, 0.6601505875587463, 0.6715096831321716, 0.67666095495224, 0.6705851554870605, 0.6734909415245056, 0.6774534583091736, 0.6762647032737732, 0.6679434776306152, 0.6753401160240173, 0.6782459616661072, 0.6769251227378845, 0.6811517477035522, 0.685510516166687], "val_loss": [1.96473571232387, 1.9586574690682548, 1.9525488444737025, 1.946382795061384, 1.9401527813502721, 1.933725084577288, 1.9270966393607003, 1.9200703757149833, 1.9126548085893904, 1.9047500065394811, 1.8962132590157645, 1.887164865221296, 1.8773564611162459, 1.866715976170131, 1.8551090785435267, 1.8426683970860072, 1.8291966574532645, 1.8146692684718542, 1.7988323484148299, 1.781848566872733, 1.763310773032052, 1.7436018671308244, 1.7224465097699846, 1.6997765813555037, 1.6755943979535783, 1.6496616091047014, 1.6223876135689872, 1.593468461717878, 1.5634186608450753, 1.5318695136478968, 1.4996617180960519, 1.4664889403751917, 1.4333716460636683, 1.3997370174952917, 1.3660681928907121, 1.3330862862723214, 1.2999132360730852, 1.2670585768563407, 1.235914979662214, 1.205700159072876, 1.1768310751233781, 1.1492876665932792, 1.1230359418051583, 1.097997052328927, 1.074305534362793, 1.051896572113037, 1.030463763645717, 1.0103816304888045, 0.9910788536071777, 0.9736893858228411, 0.9566953182220459, 0.9408734866550991, 0.9256863253457206, 0.9114585944584438, 0.8983741487775531, 0.8853725365230015, 0.8734424454825265, 0.8619732175554548, 0.8508164031164986, 0.8412164619990757, 0.8310192653111049, 0.822123646736145, 0.8137617792401995, 0.8050850118909564, 0.7974974598203387, 0.7897442408970424, 0.7823264598846436, 0.7750458547047206, 0.7682598488671439, 0.7616657188960484, 0.7557692868368966, 0.7500361033848354, 0.7440967730113438, 0.7392881257193429, 0.733899678502764, 0.7287115710122245, 0.7238036223820278, 0.7190419265202114, 0.7142007350921631, 0.7098762307848249, 0.7061892236982074, 0.7025383029665265, 0.6984111411230904, 0.6947187014988491, 0.6913165024348668, 0.6877354553767613, 0.6841616630554199, 0.6813325030463082, 0.6781247173036847, 0.6744176489966256, 0.6711094720023019, 0.6677567447934832, 0.665207930973598, 0.6623731000082833, 0.6599142551422119, 0.6572743143354144, 0.6549759422029767, 0.6523291213171822, 0.6498653377805438, 0.6473077535629272], "val_accuracy": [0.08133333176374435, 0.1393333375453949, 0.19833333790302277, 0.24833333492279053, 0.2863333225250244, 0.31700000166893005, 0.3413333296775818, 0.3566666543483734, 0.37033334374427795, 0.3803333342075348, 0.39266666769981384, 0.40433332324028015, 0.41200000047683716, 0.4203333258628845, 0.4333333373069763, 0.4413333237171173, 0.44966667890548706, 0.4566666781902313, 0.4620000123977661, 0.4690000116825104, 0.4793333411216736, 0.4866666793823242, 0.4963333308696747, 0.5043333172798157, 0.5139999985694885, 0.5216666460037231, 0.5303333401679993, 0.5426666736602783, 0.54666668176651, 0.5526666641235352, 0.5576666593551636, 0.5659999847412109, 0.5706666707992554, 0.5759999752044678, 0.5846666693687439, 0.5929999947547913, 0.5963333249092102, 0.6026666760444641, 0.6073333621025085, 0.6169999837875366, 0.6240000128746033, 0.6356666684150696, 0.6389999985694885, 0.6470000147819519, 0.6496666669845581, 0.6566666960716248, 0.6603333353996277, 0.6623333096504211, 0.6666666865348816, 0.6696666479110718, 0.6740000247955322, 0.6753333210945129, 0.6756666898727417, 0.6806666851043701, 0.6800000071525574, 0.6826666593551636, 0.6859999895095825, 0.6863333582878113, 0.6869999766349792, 0.6853333115577698, 0.6913333535194397, 0.6930000185966492, 0.6936666369438171, 0.6936666369438171, 0.6970000267028809, 0.6963333487510681, 0.6940000057220459, 0.6956666707992554, 0.6980000138282776, 0.7003333568572998, 0.6996666789054871, 0.70333331823349, 0.7036666870117188, 0.70333331823349, 0.7039999961853027, 0.7056666612625122, 0.7070000171661377, 0.7086666822433472, 0.7099999785423279, 0.7106666564941406, 0.7113333344459534, 0.7136666774749756, 0.7143333554267883, 0.715666651725769, 0.715666651725769, 0.7179999947547913, 0.7183333039283752, 0.7179999947547913, 0.718999981880188, 0.7233333587646484, 0.7213333249092102, 0.7233333587646484, 0.7236666679382324, 0.7226666808128357, 0.7229999899864197, 0.7239999771118164, 0.7253333330154419, 0.7263333201408386, 0.7276666760444641, 0.7303333282470703]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.22114285826683044, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.217845097099549, 2.2795412402505084, 2.2595170580274817, 2.4227490630746282, 2.3058842178569448, 2.3033244151638295, 2.3033254555959304, 2.303002957796392], "accuracy": [0.19984149932861328, 0.13895125687122345, 0.16259410977363586, 0.21172896027565002, 0.09496764093637466, 0.09549596905708313, 0.09417514503002167, 0.09140139818191528], "val_loss": [1.97756256375994, 1.8109540939331055, 2.3831002371651784, 1.9795069013323103, 1.9740053585597448, 1.9736194610595703, 1.9737027032034737, 1.9738123076302665], "val_accuracy": [0.10100000351667404, 0.20633333921432495, 0.2619999945163727, 0.09799999743700027, 0.10400000214576721, 0.10400000214576721, 0.09866666793823242, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [54, 9, 44]], "fitness": -0.16828571259975433, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.558517309054565, 2.306491668717799, 2.3041538290296644, 2.3035703879998675, 2.3029037149527825, 2.3027731701839933], "accuracy": [0.20420023798942566, 0.09919429570436478, 0.09906221181154251, 0.09853387624025345, 0.09945846349000931, 0.09813763201236725], "val_loss": [1.978952407836914, 1.9748599869864327, 1.973945140838623, 1.973815986088344, 1.9735215732029505, 1.9734848567417689], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09866666793823242, 0.10400000214576721, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.13542857766151428, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.6876038509258553, 2.3125120493493707, 2.303649500077348, 2.303618644600484, 2.304321741746039, 2.3047728340119704, 2.304654564257264, 2.304074206829008, 2.3049989084541807, 2.304766655409136], "accuracy": [0.1200634017586708, 0.0956280529499054, 0.10170386731624603, 0.1018359512090683, 0.09681680053472519, 0.09232597798109055, 0.09325055778026581, 0.10038304328918457, 0.09338264167308807, 0.09760929644107819], "val_loss": [2.0062916619437083, 1.9750316483633858, 1.9761160441807337, 1.975090571812221, 1.9748406410217285, 1.9744157791137695, 1.974893365587507, 1.9764175415039062, 1.974841730935233, 1.9748183659144811], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.09799999743700027, 0.09866666793823242, 0.10400000214576721, 0.09966666996479034, 0.10133333504199982, 0.09799999743700027, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 3, 2, 9, 8, 0, 0, 2, 3, 8, 8, 8, 4, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 1, 3, 3, 3, 3, 2, 1, 3, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3043434554087314, 2.305765079611155, 2.310412936348563, 2.312611549852578, 2.3112968743485136, 2.3105583226502833, 2.3109978060633547, 2.3152620033770033], "accuracy": [0.09866596013307571, 0.09800554811954498, 0.09760929644107819, 0.09972262382507324, 0.09708096832036972, 0.09906221181154251, 0.09787346422672272, 0.0936468094587326], "val_loss": [1.9736951419285365, 1.9756255831037248, 1.9779746191842216, 1.9830553872244698, 1.9831183978489466, 1.9819422449384416, 1.9781959397452218, 1.9775567054748535], "val_accuracy": [0.09866666793823242, 0.09799999743700027, 0.10400000214576721, 0.09966666996479034, 0.10400000214576721, 0.09966666996479034, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 5, 1, 3, 3, 3, 3, 2, 0, 3, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 5, 2, 3, 8, 8, 8, 8, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 30, 30, 21, 9, 3, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301385369582372, 2.3022236785301677, 2.3025851744418886, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09589222073554993, 0.10355303436517715, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973043509892055, 1.9736442565917969, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09233333170413971, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 7, 4, 7, 1, 3, 6, 6, 5, 9, 8, 9, 2, 2, 3, 8, 8, 9, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 5, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [1, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [0, 3, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 27, 27, 17, 10, 3, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(beta, grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301385369582372, 2.3022236785301677, 2.3025851744418886, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09589222073554993, 0.10355303436517715, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973043509892055, 1.9736442565917969, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09233333170413971, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 89], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [4, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 2, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 5, 1, 3, 1, 3, 3, 1, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 69, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 36, 36, 22, 14, 4, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(alpha, tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))))))))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026638629335405, 2.30207816343014, 2.301666995396058, 2.3007182780195143, 2.3017411269154042, 2.3001335478729623], "accuracy": [0.09179764986038208, 0.08968432247638702, 0.08638224750757217, 0.09655263274908066, 0.08836349099874496, 0.09219389408826828], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [9, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 17, 17, 10, 7, 1, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302663993369382, 2.302078559303863, 2.3016677286331726, 2.300718984237326, 2.3017421435717784, 2.300134780400339], "accuracy": [0.09179764986038208, 0.08968432247638702, 0.08638224750757217, 0.09655263274908066, 0.08836349099874496, 0.09219389408826828], "val_loss": [1.9709818022591727, 1.9709820066179549, 1.9709821428571428, 1.970982483455113, 1.970982551574707, 1.9709827559334892], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 3, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 32, 32, 21, 11, 4, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.3026638629335405, 2.30207816343014, 2.301666995396058, 2.3007182780195143, 2.3017411269154042, 2.3001335478729623], "accuracy": [0.09179764986038208, 0.08968432247638702, 0.08638224750757217, 0.09655263274908066, 0.08836349099874496, 0.09219389408826828], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [2.3026637819701055, 2.3020780329942987, 2.3016667434678273, 2.3007179271464713, 2.3017405870961887, 2.30013300358202], "accuracy": [0.09179764986038208, 0.08968432247638702, 0.08638224750757217, 0.09655263274908066, 0.08836349099874496, 0.09219389408826828], "val_loss": [1.9709815979003906, 1.9709813935416085, 1.9709813254220145, 1.9709811891828264, 1.9709811210632324, 1.9709811210632324], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 7, 4, 7, 6, 3, 6, 6, 5, 9, 8, 3, 2, 2, 3, 8, 8, 8, 2, 9, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 2, 5, 3, 1, 3, 3, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 87, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [1, 4, 0, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [2.3026638944245694, 2.3020782264121977, 2.3016672067953343, 2.3007185524008484, 2.301741464278796, 2.3001339437466854], "accuracy": [0.09179764986038208, 0.08968432247638702, 0.08638224750757217, 0.09655263274908066, 0.08836349099874496, 0.09219389408826828], "val_loss": [1.9709816660199846, 1.9709817341395788, 1.9709817341395788, 1.9709818022591727, 1.9709818022591727, 1.9709820066179549], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]