[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8237142562866211, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1375938395247123, 2.4420524652466216, 2.221951518658996, 1.9409336526364604, 1.7677631016026998, 1.1023275668374488, 0.8296612192532327, 0.751462622758593, 0.7110369724761919, 0.6810186772833978, 0.6400893854506028, 0.6056021087283959, 0.6193612845598069, 0.5639009965078595, 0.5587075199149997, 0.5435729575604338, 0.5509441941248318, 0.5173651122020267, 0.5186696859193972, 0.4809276795012525, 0.5054598256164239, 0.49006373550693166, 0.49878556325120416, 0.4646845643255201, 0.45728845868159784, 0.4785113126972427, 0.4384199084701508, 0.4447074154537777, 0.4449500183364136, 0.41208337331806993, 0.415088338622674, 0.4360337275768142, 0.4330457406052824, 0.45395658597135585], "accuracy": [0.29401662945747375, 0.23378682136535645, 0.21080438792705536, 0.37339848279953003, 0.38462555408477783, 0.6149781942367554, 0.6940959095954895, 0.7189275026321411, 0.7302865982055664, 0.7458723783493042, 0.7539294958114624, 0.7680623531341553, 0.7614582180976868, 0.7911768555641174, 0.7839123010635376, 0.7935543656349182, 0.7973847389221191, 0.8074230551719666, 0.8076872229576111, 0.8204993009567261, 0.8063663840293884, 0.8189142942428589, 0.8099326491355896, 0.8278959393501282, 0.8278959393501282, 0.8206313848495483, 0.8396512866020203, 0.8337075710296631, 0.8321225643157959, 0.843481719493866, 0.8461233377456665, 0.8329150676727295, 0.8366134166717529, 0.8335754871368408], "val_loss": [1.8630725996834892, 1.96869843346732, 1.3622663702283586, 1.8540214811052596, 0.9202938761029925, 0.7036575419562203, 0.593213677406311, 0.5655872310910907, 0.567354679107666, 0.49726544107709614, 0.4582879713603428, 0.519302248954773, 0.4422609806060791, 0.4605489458356585, 0.4117226941244943, 0.4535146270479475, 0.46506507056100027, 0.4395566667829241, 0.3885853460856846, 0.42239964859826223, 0.4281869190079825, 0.41215587513787405, 0.39148989745548796, 0.3695563418524606, 0.38026009287152973, 0.3650582603045872, 0.40481070961271015, 0.36243815081460135, 0.34977313450404574, 0.3494150383131845, 0.398192686694009, 0.3831084030015128, 0.5184880495071411, 0.4007177438054766], "val_accuracy": [0.335999995470047, 0.12433333694934845, 0.5333333611488342, 0.25833332538604736, 0.6499999761581421, 0.6903333067893982, 0.7323333621025085, 0.7409999966621399, 0.7599999904632568, 0.7706666588783264, 0.7850000262260437, 0.7233333587646484, 0.800000011920929, 0.7860000133514404, 0.8196666836738586, 0.7950000166893005, 0.7946666479110718, 0.7889999747276306, 0.8320000171661377, 0.8143333196640015, 0.8193333148956299, 0.8056666851043701, 0.828000009059906, 0.843999981880188, 0.8333333134651184, 0.8386666774749756, 0.8243333101272583, 0.8410000205039978, 0.8500000238418579, 0.8489999771118164, 0.8053333163261414, 0.8326666951179504, 0.7726666927337646, 0.8349999785423279]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 2, 4, 4, 9, 0, 9, 3, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8142856955528259, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.137580335919631, 2.390957931123783, 2.105742008804787, 1.9662681778802091, 1.791009247531319, 1.3564200009557754, 1.0297515986381724, 1.010834898978271, 0.8730572460979723, 0.8497250160332038, 0.7798049319469067, 0.7085195456308822, 0.7214837083727094, 0.6738421116538446, 0.6532770647915709, 0.6221149402161662, 0.5881232422309198, 0.5953195472875874, 0.5913490164454713, 0.5593906604398149, 0.5530140591477044, 0.5555863138738483, 0.537691418591775, 0.5047675013038319, 0.5047166957563618, 0.5046012463578774, 0.5119025459095566, 0.4764071039323085, 0.4913476916619768, 0.4574649760066841, 0.45822692309482743, 0.46343215065168714, 0.4532080584505467, 0.46363264792678127, 0.4432397920851379], "accuracy": [0.2950733006000519, 0.23986263573169708, 0.2678642272949219, 0.3821159601211548, 0.4225333631038666, 0.5326905250549316, 0.6213181614875793, 0.6375643610954285, 0.6744155287742615, 0.6775855422019958, 0.7121912837028503, 0.7326641082763672, 0.7293620109558105, 0.7395324110984802, 0.7483819723129272, 0.7625148296356201, 0.7778365015983582, 0.7725531458854675, 0.7733456492424011, 0.7928939461708069, 0.7890635132789612, 0.7857614755630493, 0.7921014428138733, 0.813498854637146, 0.8108572363853455, 0.813498854637146, 0.8092722296714783, 0.8201030492782593, 0.8133667707443237, 0.8260467648506165, 0.8298771381378174, 0.8203672170639038, 0.828292191028595, 0.8334434032440186, 0.841500461101532], "val_loss": [1.8538712774004256, 1.923121656690325, 1.9215798377990723, 1.862652369907924, 1.1080153669629778, 0.8155115331922259, 0.8972131524767194, 0.6846992118018014, 0.731150780405317, 0.6621564286095756, 0.5276552438735962, 0.5970244577952794, 0.4954795837402344, 0.5618253605706351, 0.48276368209293913, 0.4550831488200596, 0.5064759254455566, 0.458559444972447, 0.4479658433369228, 0.433117185320173, 0.4594884089061192, 0.40967663696834017, 0.39250378949301584, 0.3923555612564087, 0.4014131426811218, 0.38729571444647654, 0.39296919107437134, 0.4181820409638541, 0.3690418175288609, 0.36361704553876606, 0.3701974408967154, 0.37366606507982525, 0.4884934936250959, 0.36727953808648245, 0.366305410861969], "val_accuracy": [0.32366666197776794, 0.19833333790302277, 0.31333333253860474, 0.36533331871032715, 0.5699999928474426, 0.6453333497047424, 0.5926666855812073, 0.6946666836738586, 0.6746666431427002, 0.70333331823349, 0.7613333463668823, 0.7026666402816772, 0.7689999938011169, 0.7423333525657654, 0.7766666412353516, 0.7916666865348816, 0.765666663646698, 0.7903333306312561, 0.8026666641235352, 0.8009999990463257, 0.8076666593551636, 0.8206666707992554, 0.8259999752044678, 0.8263333439826965, 0.8256666660308838, 0.831333339214325, 0.8259999752044678, 0.8119999766349792, 0.8453333377838135, 0.8486666679382324, 0.8379999995231628, 0.8320000171661377, 0.7836666703224182, 0.8413333296775818, 0.8336666822433472]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 3, 2, 0, 4, 9, 1, 2, 6, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 1, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [7, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [33, 80, 44, 92]], "fitness": -0.6997143030166626, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.218035010613817, 1.5316818616393693, 1.008165393719946, 0.8608409346464745, 0.7857119454258642, 0.7670117513441596, 0.70696633060642, 0.6558017812195928, 0.6113046855423288, 0.5961483020146982, 0.5731195795175469, 0.5639658524706348, 0.5331254107187515, 0.531390281881497, 0.5187087575631324, 0.5038473284192577, 0.5040041683151927, 0.4783174597733623, 0.4711141899167082, 0.45543084104362497, 0.4586545581893835, 0.43546573671887123, 0.4272563566526701, 0.4210897485782536, 0.42918280011091914, 0.43044743871235375, 0.4142273867394804], "accuracy": [0.23576806485652924, 0.48685774207115173, 0.6409985423088074, 0.6856426000595093, 0.6955488324165344, 0.7205125093460083, 0.7337207794189453, 0.750759482383728, 0.7652885913848877, 0.7724210619926453, 0.7794214487075806, 0.7861577272415161, 0.7968564033508301, 0.7976489067077637, 0.8014793395996094, 0.8058380484580994, 0.8109893202781677, 0.8219521641731262, 0.8226125836372375, 0.8317263126373291, 0.8289526104927063, 0.8342359066009521, 0.8376700282096863, 0.8368775844573975, 0.8392550349235535, 0.8376700282096863, 0.8387266993522644], "val_loss": [1.5848286492483956, 0.7765318666185651, 0.7027713230678013, 0.5871057340076992, 0.6097548007965088, 0.5555145740509033, 0.4828016928264073, 0.49588896547045025, 0.4514586755207607, 0.44362447943006245, 0.43219670227595736, 0.422853878566197, 0.4225937383515494, 0.40882091011319843, 0.40111962386540007, 0.41672561849866596, 0.3911652309553964, 0.3875142846788679, 0.40337363311222624, 0.39509871176310946, 0.37647660289491924, 0.36196307625089374, 0.37441245147160124, 0.3952040161405291, 0.3918388571058001, 0.3846514991351536, 0.3754493934767587], "val_accuracy": [0.48366665840148926, 0.6816666722297668, 0.7049999833106995, 0.7310000061988831, 0.715666651725769, 0.7549999952316284, 0.778333306312561, 0.7763333320617676, 0.7919999957084656, 0.8016666769981384, 0.8013333082199097, 0.8076666593551636, 0.815666675567627, 0.8230000138282776, 0.8246666789054871, 0.8333333134651184, 0.8356666564941406, 0.8383333086967468, 0.840666651725769, 0.831333339214325, 0.8496666550636292, 0.8510000109672546, 0.8453333377838135, 0.8479999899864197, 0.8453333377838135, 0.847000002861023, 0.8450000286102295]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 2, 1, 6, 9, 2, 1, 2, 6, 2, 9, 0, 5, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 2, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 19, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 3, 2, 0, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 64, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.6974285840988159, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, grad)))))), tf.math.pow(grad, tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3013650789047984, 2.296193600771623, 2.291175174077016, 2.287484334302758, 2.2826130129736426, 2.27648140133616, 2.2736233706015163, 2.2706861906299785, 2.264379015845582, 2.259399075943324, 2.254975910940033, 2.250822106089181, 2.2461845292517255, 2.2401708260093933, 2.23251535536323, 2.226264965422417, 2.2215176922628483, 2.215820509129984, 2.209245490202767, 2.2029066569517632, 2.193399350530735, 2.184346208294007, 2.1767011385363295, 2.169227588508958, 2.1579756557886327, 2.1484110167690664, 2.1393963002635816, 2.129867554561195, 2.1152616521827516, 2.102935325420764, 2.092186135953491, 2.078864738563615, 2.0648941225017365, 2.0477818371109313, 2.0341533016393276, 2.0192759367358715, 2.002590053290298, 1.983768169512413, 1.963296704398737, 1.9414887671079524, 1.929502221209388, 1.9107358499587943, 1.8878354440197072, 1.8686052898705015, 1.8466886490752683, 1.8214844034930828, 1.801074252546172, 1.7798937745397243, 1.7543251987744977, 1.730056795430237, 1.7086987305374004, 1.6839383606110203, 1.6668768476076319, 1.6427289073839793, 1.6153953179171876, 1.605713802258793, 1.5809294550158424, 1.5573268541176841, 1.5341429073797037, 1.51465855018259, 1.4942737928455248, 1.4748346027586643, 1.461933518413382, 1.4536208504336843, 1.4242421452710343, 1.408650204175184, 1.3948233996746389, 1.3860072905849457, 1.3683174603556314, 1.357148022400374, 1.3399645356674708, 1.3234695534050473, 1.3108300520460194, 1.296650953186407, 1.2920873774324568, 1.2779964135071353, 1.2697424672582382, 1.249868871151354, 1.250976483158353, 1.2318274356654102, 1.223566988707691, 1.213955863088019, 1.204331020968166, 1.1907022771991522, 1.1856104477348424, 1.176255443864227, 1.1718324869694003, 1.149749542239981, 1.1608757595612216, 1.1435733892189874, 1.1392038700177827, 1.1311243180475372, 1.1256374397046058, 1.1132081469146724, 1.111484366778952, 1.0984393543240385, 1.1017485240730454, 1.0953022931718304, 1.078573100240302, 1.0727799574712547], "accuracy": [0.09655263274908066, 0.10936468094587326, 0.11887465417385101, 0.12376172095537186, 0.14449875056743622, 0.16180160641670227, 0.160084530711174, 0.17897239327430725, 0.18861444294452667, 0.20274733006954193, 0.21925769746303558, 0.2211068570613861, 0.23537181317806244, 0.24659886956214905, 0.25558051466941833, 0.27077004313468933, 0.27961960434913635, 0.2817329168319702, 0.2934883236885071, 0.3008849620819092, 0.31197991967201233, 0.32043322920799255, 0.32743361592292786, 0.3385286033153534, 0.3407739996910095, 0.35543522238731384, 0.3547748029232025, 0.36402061581611633, 0.3778893053531647, 0.3871351182460785, 0.37921014428138733, 0.3983621597290039, 0.4002113342285156, 0.3983621597290039, 0.4085325598716736, 0.4065513014793396, 0.416589617729187, 0.4221371114253998, 0.43164706230163574, 0.43428874015808105, 0.4303262531757355, 0.4295337498188019, 0.4493461847305298, 0.439439982175827, 0.44710078835487366, 0.4551578462123871, 0.44604411721229553, 0.4600449204444885, 0.46929070353507996, 0.47272488474845886, 0.47866860032081604, 0.48527276515960693, 0.47946110367774963, 0.4979526996612549, 0.4983489513397217, 0.5027077198028564, 0.5025756359100342, 0.509311854839325, 0.5192180871963501, 0.5172368288040161, 0.5221238732337952, 0.5271430611610413, 0.5247655510902405, 0.5271430611610413, 0.5354642868041992, 0.5394267439842224, 0.5466912984848022, 0.538237988948822, 0.5456346869468689, 0.553031325340271, 0.5558050274848938, 0.5571258664131165, 0.5629374980926514, 0.5641262531280518, 0.5700700283050537, 0.5744287371635437, 0.5667679309844971, 0.5754854083061218, 0.5787875056266785, 0.5885615944862366, 0.5826178789138794, 0.588297426700592, 0.5894861817359924, 0.5954299569129944, 0.588297426700592, 0.5927882790565491, 0.600581169128418, 0.6098269820213318, 0.5993924140930176, 0.6063928008079529, 0.609430730342865, 0.6089023947715759, 0.6144498586654663, 0.6194690465927124, 0.6131290197372437, 0.6207898855209351, 0.6198652982711792, 0.6161669492721558, 0.6317527294158936, 0.6289790272712708], "val_loss": [1.9668355669294084, 1.9627453259059362, 1.9586882591247559, 1.9546190670558385, 1.9505535534449987, 1.9464184216090612, 1.9422603334699358, 1.9380557196480888, 1.9336919784545898, 1.9292343684605189, 1.924628666469029, 1.919875008719308, 1.9149435588291712, 1.9098576818193709, 1.9044393811907088, 1.8987882477896554, 1.892885684967041, 1.8866853032793318, 1.8802016122000558, 1.8732938766479492, 1.8659838948931013, 1.8583231653485979, 1.8502474512372697, 1.841792106628418, 1.8327961649213518, 1.8232767922537667, 1.8131834438868932, 1.8026998383658273, 1.7915729113987513, 1.7798527990068709, 1.7676312582833427, 1.754699775150844, 1.7412425449916296, 1.7269162450517928, 1.7120988368988037, 1.6966245855603899, 1.6804811273302351, 1.6636033058166504, 1.6459857395717077, 1.6274255003247942, 1.6086554527282715, 1.5894037314823695, 1.5693819522857666, 1.5489476748875208, 1.527972664151873, 1.5063951696668352, 1.4847008500780379, 1.462569066456386, 1.4402144636426653, 1.417567423411778, 1.3951264790126257, 1.372600759778704, 1.350170578275408, 1.327627318246024, 1.3050747939518519, 1.2833937917436873, 1.2618425914219447, 1.2409349169049944, 1.2202936581202917, 1.2003868988582067, 1.1808928421565466, 1.1620749405452184, 1.1437983172280448, 1.1263700553349085, 1.109196560723441, 1.0925793647766113, 1.0766535486493791, 1.0617067473275321, 1.0470794950212752, 1.032907247543335, 1.0191518238612585, 1.0062382561819894, 0.9936517306736538, 0.9815128190176827, 0.9698710441589355, 0.9589434351239886, 0.9483723640441895, 0.9378496919359479, 0.9277595792497907, 0.9181182043892997, 0.9086945056915283, 0.8997392313820975, 0.8911573546273368, 0.8825911794389997, 0.8744990825653076, 0.8666567802429199, 0.859410217830113, 0.8520688329424176, 0.8452001810073853, 0.838370646749224, 0.8320209298815046, 0.8256405932562692, 0.8196933950696673, 0.8139502150671822, 0.8082834822790963, 0.8026931967054095, 0.7973872252873012, 0.7923656020845685, 0.7872107539858136, 0.7823851108551025], "val_accuracy": [0.06366666406393051, 0.10266666859388351, 0.14000000059604645, 0.179666668176651, 0.21533332765102386, 0.2486666738986969, 0.27933332324028015, 0.29866665601730347, 0.3166666626930237, 0.3336666524410248, 0.3473333418369293, 0.35733333230018616, 0.36666667461395264, 0.3736666738986969, 0.3813333213329315, 0.3866666555404663, 0.39633333683013916, 0.40299999713897705, 0.41100001335144043, 0.4143333435058594, 0.42266666889190674, 0.4286666810512543, 0.43566668033599854, 0.44066667556762695, 0.44866666197776794, 0.45233333110809326, 0.4586666524410248, 0.4650000035762787, 0.4690000116825104, 0.4726666808128357, 0.47866666316986084, 0.48366665840148926, 0.49033331871032715, 0.4983333349227905, 0.5016666650772095, 0.5066666603088379, 0.5143333077430725, 0.5206666588783264, 0.5243333578109741, 0.5303333401679993, 0.5363333225250244, 0.5406666398048401, 0.5443333387374878, 0.5473333597183228, 0.5506666898727417, 0.5546666383743286, 0.5590000152587891, 0.562666654586792, 0.5653333067893982, 0.5699999928474426, 0.5746666789054871, 0.5816666483879089, 0.5860000252723694, 0.593666672706604, 0.5973333120346069, 0.6000000238418579, 0.6033333539962769, 0.6079999804496765, 0.612666666507721, 0.6190000176429749, 0.6240000128746033, 0.6316666603088379, 0.6353333592414856, 0.637666642665863, 0.6413333415985107, 0.6466666460037231, 0.6493333578109741, 0.6536666750907898, 0.6583333611488342, 0.6596666574478149, 0.6636666655540466, 0.6636666655540466, 0.6693333387374878, 0.668666660785675, 0.6703333258628845, 0.6703333258628845, 0.6729999780654907, 0.675000011920929, 0.6763333082199097, 0.6776666641235352, 0.6790000200271606, 0.6800000071525574, 0.6816666722297668, 0.6830000281333923, 0.684333324432373, 0.6833333373069763, 0.6840000152587891, 0.6859999895095825, 0.6869999766349792, 0.6869999766349792, 0.687333345413208, 0.690666675567627, 0.6903333067893982, 0.6909999847412109, 0.6919999718666077, 0.6916666626930237, 0.6936666369438171, 0.6930000185966492, 0.6946666836738586, 0.6966666579246521]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 3, 2, 4, 0, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 64, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 3, 1, 0, 3], [36, 80, 44, 92]], "fitness": -0.13600000739097595, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.6647166368464092, 3.6274731856736495, 5.620939880928359, 1203.8374651272882, NaN, NaN, NaN], "accuracy": [0.1582353711128235, 0.11306300014257431, 0.12151630967855453, 0.1022322028875351, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.346903460366385, 3.3589749336242676, 6.217344284057617, 172235968.0, NaN, NaN, NaN], "val_accuracy": [0.10966666787862778, 0.1289999932050705, 0.12333333492279053, 0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 0, 2, 4, 4, 9, 0, 9, 3, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 3, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 4, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [75, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 14, 7, 7, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.multiply(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.sqrt(tf.math.subtract(tf.math.multiply(beta, sigma), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 2, 4, 4, 9, 0, 9, 3, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 85, 57, 40, 75, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 37, 37, 24, 13, 7, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.sqrt(beta))), tf.math.add(beta, grad))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027026359793408, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 2, 4, 4, 6, 0, 9, 3, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 2, 3, 1, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 7, 3, 4, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(beta, beta), grad), alpha)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(beta, beta), tf.math.multiply(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 1, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 9, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 3, 5, 2, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [7, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 8, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 2, 2, 0, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 1, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 85, 57, 25, 75, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.pow(tf.math.add(beta, alpha), grad))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027026359793408, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.303212357738849, 2.302475472230953, 2.301834922188923, 2.3024807199274844, 2.3019914114401248, 2.3003933850753073], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09338264167308807, 0.09060890227556229, 0.09496764093637466, 0.10038304328918457], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 3, 2, 0, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 85, 57, 25, 75, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303212357738849, 2.302475472230953, 2.301834922188923, 2.3024807199274844, 2.3019914114401248, 2.3003933850753073], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09338264167308807, 0.09060890227556229, 0.09496764093637466, 0.10038304328918457], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [8, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 3, 2, 0, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 1, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [11], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, grad))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303212357738849, 2.302475472230953, 2.301834922188923, 2.3024807199274844, 2.3019914114401248, 2.3003933850753073], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09338264167308807, 0.09060890227556229, 0.09496764093637466, 0.10038304328918457], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 4, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303212357738849, 2.302475472230953, 2.301834922188923, 2.3024807199274844, 2.3019914114401248, 2.3003933850753073], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09338264167308807, 0.09060890227556229, 0.09496764093637466, 0.10038304328918457], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 3, 2, 1, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [4, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 3, 2, 3, 3, 1, 0, 3], [36, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.3032117145030946, 2.3024719408584735, 2.3018266043690105, 2.302469783597036, 2.3019807713772753, 2.300393944198524], "accuracy": [0.09232597798109055, 0.09311848133802414, 0.09338264167308807, 0.09060890227556229, 0.0952318087220192, 0.10038304328918457], "val_loss": [1.970980099269322, 1.970977783203125, 1.9709768295288086, 1.9709787368774414, 1.9709864343915666, 1.971003532409668], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.035999998450279236, 0.035999998450279236]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 3, 2, 4, 4, 9, 0, 9, 3, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [99, 89, 42, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), grad), tf.math.add(tf.math.add(beta, grad), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303212357738849, 2.302475472230953, 2.301834922188923, 2.3024807199274844, 2.3019914114401248, 2.3003933850753073], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09338264167308807, 0.09060890227556229, 0.09496764093637466, 0.10038304328918457], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 1, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.negative(alpha))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, beta)))", "other_info": {"loss": [2.303212357738849, 2.302475472230953, 2.301834922188923, 2.3024807199274844, 2.3019914114401248, 2.3003933850753073], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09338264167308807, 0.09060890227556229, 0.09496764093637466, 0.10038304328918457], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 3, 8, 4, 4, 9, 0, 9, 3, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 2, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [16, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303212357738849, 2.302475472230953, 2.301834922188923, 2.3024807199274844, 2.3019914114401248, 2.3003933850753073], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09338264167308807, 0.09060890227556229, 0.09496764093637466, 0.10038304328918457], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 5, 4, 0, 4, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 3, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 85, 57, 25, 75, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.03228571265935898, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3042727065927173, 2.305798521635161, 2.3074594091950247, 2.3103994477332117, 2.3123047843412117, 2.3131329028550676], "accuracy": [0.08994849026203156, 0.08691058307886124, 0.08175934851169586, 0.07449477910995483, 0.07290978729724884, 0.07357019931077957], "val_loss": [1.9730638095310755, 1.97519166128976, 1.97732789175851, 1.9795190947396415, 1.9816620690482003, 1.9838143757411413], "val_accuracy": [0.02666666731238365, 0.02266666665673256, 0.017666665837168694, 0.014666666276752949, 0.010999999940395355, 0.009999999776482582]}}]