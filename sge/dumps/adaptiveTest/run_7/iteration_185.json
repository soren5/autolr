[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 3, 1, 3, 0, 5, 4, 4, 3, 6, 2, 4, 1, 3, 8, 6, 8, 0, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [84, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8237142562866211, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 5, 6, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.965255595390366, 1.4682795322802655, 1.1782608698891643, 0.8782329552791783, 0.8310557439531617, 0.7639617857963276, 0.7495987407755874, 0.7235575918240585, 0.6997562439969786, 0.6666643477748996, 0.6753892483271627, 0.6427918315925745, 0.6311461870397291, 0.617961695118351, 0.6104697811290211, 0.6047731575523747, 0.5923314681851144, 0.5621266745699081, 0.5515529492732446, 0.5650117343537417, 0.5663441947627266, 0.5494813344198652, 0.5163637049965587, 0.5241211610085393, 0.5434447621877214, 0.49602420124804825, 0.49307158990480077, 0.49037551981047744, 0.4832749591527472, 0.4789869364431238, 0.4715726948795286, 0.4807898431343252, 0.4459679946411618, 0.46475708740514265, 0.45231350748971344, 0.45668071143505296, 0.4520553821987401], "accuracy": [0.3501518964767456, 0.5095760226249695, 0.583938717842102, 0.6692643165588379, 0.6836613416671753, 0.7123233675956726, 0.717870831489563, 0.7285695672035217, 0.7317395210266113, 0.7467969655990601, 0.7403249144554138, 0.759080708026886, 0.7619865536689758, 0.7631752490997314, 0.765949010848999, 0.7725531458854675, 0.7777044177055359, 0.7915731072425842, 0.7880068421363831, 0.7804781198501587, 0.7841764688491821, 0.7926297783851624, 0.8087438941001892, 0.8029322624206543, 0.7935543656349182, 0.8152159452438354, 0.8144234418869019, 0.8157442808151245, 0.8193105459213257, 0.8212917447090149, 0.8231409192085266, 0.8210275769233704, 0.8366134166717529, 0.8208954930305481, 0.8294808864593506, 0.8286884427070618, 0.830669641494751], "val_loss": [1.618854284286499, 1.2783969470432825, 0.7228670971734183, 0.67173513344356, 0.6075612136295864, 0.5547112226486206, 0.5625636237008231, 0.5242485318865094, 0.5332498550415039, 0.5302364485604423, 0.48941610540662495, 0.4900678736822946, 0.4616985150745937, 0.4988710028784616, 0.501306312424796, 0.4528226341520037, 0.4551675319671631, 0.43274887119020733, 0.4251150403703962, 0.47956676142556326, 0.4296361207962036, 0.4228720579828535, 0.39934045927865164, 0.4446076325007847, 0.3909300225121634, 0.4030436873435974, 0.400064366204398, 0.38120646136147635, 0.3767576813697815, 0.37722207818712505, 0.3891561882836478, 0.36413844994136263, 0.3716813921928406, 0.3853260704449245, 0.4104646529470171, 0.36638989618846346, 0.3732631802558899], "val_accuracy": [0.3476666808128357, 0.5046666860580444, 0.6886666417121887, 0.7036666870117188, 0.7193333506584167, 0.762333333492279, 0.75, 0.768666684627533, 0.7323333621025085, 0.7509999871253967, 0.7799999713897705, 0.7839999794960022, 0.800000011920929, 0.7720000147819519, 0.7766666412353516, 0.7960000038146973, 0.800000011920929, 0.8053333163261414, 0.8073333501815796, 0.7826666831970215, 0.8056666851043701, 0.8076666593551636, 0.8299999833106995, 0.8006666898727417, 0.8393333554267883, 0.828000009059906, 0.8286666870117188, 0.8353333473205566, 0.8323333263397217, 0.8413333296775818, 0.8343333601951599, 0.8483333587646484, 0.8363333344459534, 0.8326666951179504, 0.8100000023841858, 0.8363333344459534, 0.8333333134651184]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 3, 7, 3, 0, 1, 1, 2, 4, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 91, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8208571672439575, "mapping_values": [1, 2, 2, 1, 1, 0, 19, 19, 11, 8, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, alpha)), beta)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9652551301576522, 1.465401882178055, 1.1625800189277862, 0.8787423812040894, 0.8622584533555995, 0.7660321378830701, 0.7260465554714896, 0.7207684353389571, 0.7231638585933841, 0.6589384629915042, 0.6675921222395539, 0.6395390197790184, 0.6615277705663671, 0.6172279522812929, 0.6132849349463542, 0.612503493663547, 0.5925163307430533, 0.5629502480308125, 0.5535143660658213, 0.5584807507570756, 0.5725873844215127, 0.5503291003440491, 0.5220264010834986, 0.52033702932124, 0.5439258648057765, 0.5033039676908488, 0.49441654469831164, 0.49934973024011936, 0.48740145321204725, 0.4835283476694495, 0.46738835161529935, 0.4795618299653171, 0.44776603971978124, 0.46946582966917744, 0.4557484845916089, 0.45275407928784983, 0.4597283235047834], "accuracy": [0.3501518964767456, 0.5116893649101257, 0.588297426700592, 0.6686038970947266, 0.6730946898460388, 0.7058512568473816, 0.7276449799537659, 0.7275128960609436, 0.7275128960609436, 0.752212405204773, 0.7486461400985718, 0.7573636174201965, 0.7510236501693726, 0.7607977986335754, 0.7618544697761536, 0.7670056819915771, 0.7779685854911804, 0.7887993454933167, 0.7874785661697388, 0.7849689722061157, 0.7817989587783813, 0.7924976944923401, 0.806630551815033, 0.8072909712791443, 0.7918372750282288, 0.8108572363853455, 0.8168009519577026, 0.8131026029586792, 0.8203672170639038, 0.8190463781356812, 0.82683926820755, 0.8220842480659485, 0.8352925777435303, 0.819442629814148, 0.8290846943855286, 0.8317263126373291, 0.8255184292793274], "val_loss": [1.6188571453094482, 1.268134525844029, 0.7290986946650914, 0.68314528465271, 0.592545781816755, 0.5470033713749477, 0.5382615327835083, 0.5419791425977435, 0.5046889441353934, 0.5387883526938302, 0.5090381928852626, 0.49170947074890137, 0.47409231322152273, 0.4930403402873448, 0.5010734455926078, 0.45648275102887836, 0.452029858316694, 0.43772053718566895, 0.4246498261179243, 0.46382502147129606, 0.43331921100616455, 0.42509542192731586, 0.4001531515802656, 0.41722151211329866, 0.3931992309434073, 0.4070756094796317, 0.393970251083374, 0.3853596874645778, 0.37618161950792584, 0.3767748900822231, 0.3918889931270054, 0.3673113243920462, 0.3768463730812073, 0.3927227258682251, 0.39371418952941895, 0.3701999613216945, 0.3700184055737087], "val_accuracy": [0.3476666808128357, 0.5063333511352539, 0.6766666769981384, 0.6886666417121887, 0.7329999804496765, 0.7620000243186951, 0.7596666812896729, 0.7636666893959045, 0.7593333125114441, 0.737666666507721, 0.753333330154419, 0.7773333191871643, 0.781333327293396, 0.765999972820282, 0.7763333320617676, 0.7926666736602783, 0.8033333420753479, 0.8009999990463257, 0.8159999847412109, 0.7910000085830688, 0.8029999732971191, 0.8050000071525574, 0.8293333053588867, 0.8096666932106018, 0.8366666436195374, 0.8220000267028809, 0.8326666951179504, 0.8270000219345093, 0.8316666483879089, 0.843999981880188, 0.8293333053588867, 0.847000002861023, 0.8336666822433472, 0.8299999833106995, 0.8159999847412109, 0.8320000171661377, 0.8353333473205566]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 3, 7, 3, 0, 1, 1, 2, 4, 4, 0, 4, 1, 2, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 2, 3, 1, 1, 3, 3, 0, 3, 3, 3, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8208571672439575, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.965255060515242, 1.4674657427356101, 1.1729946747558024, 0.8801929447959836, 0.8564959292902434, 0.7623527842647506, 0.731604033890433, 0.7107034390628645, 0.7225463788239491, 0.662587461501789, 0.6660674236485545, 0.6359647519915033, 0.6587571515902836, 0.6242853120144537, 0.6152071223330142, 0.6053714555142153, 0.5963577859516015, 0.5669320559363087, 0.5463491882614692, 0.5727288536879963, 0.5691689446916859, 0.5534154008549942, 0.5218017856678895, 0.5203271469797803, 0.5429425096278807, 0.4966968660341388, 0.4957286104306002, 0.49783620981492416, 0.4820693759020089, 0.48441143806867787, 0.46591618170182086, 0.4767930078201007, 0.4490077972427855, 0.4663002089329242, 0.4516769587922767, 0.4567804495735002, 0.4601139590260281], "accuracy": [0.3501518964767456, 0.5105006098747253, 0.5864483118057251, 0.6679434776306152, 0.6737551093101501, 0.7084929347038269, 0.724210798740387, 0.7323999404907227, 0.7207766771316528, 0.7504953145980835, 0.7523444890975952, 0.7629110813140869, 0.7511557340621948, 0.76106196641922, 0.7605336308479309, 0.7687227725982666, 0.778232753276825, 0.7885351777076721, 0.7906485199928284, 0.7783648371696472, 0.7827235460281372, 0.7898560166358948, 0.8061022162437439, 0.8070268034934998, 0.793422281742096, 0.81548011302948, 0.8127063512802124, 0.8128384351730347, 0.8222163319587708, 0.8204993009567261, 0.8281601071357727, 0.8190463781356812, 0.8355567455291748, 0.8206313848495483, 0.8305375576019287, 0.8269713521003723, 0.8261788487434387], "val_loss": [1.6188559532165527, 1.2728675092969621, 0.7265442780085972, 0.6919571501868111, 0.5960067510604858, 0.5563499076025826, 0.5309543098722186, 0.5798292670931134, 0.5296912874494281, 0.499238201550075, 0.5505927460534232, 0.4842687334333147, 0.48593648842402865, 0.4920034919466291, 0.49308485644204275, 0.4562821217945644, 0.45676342078617643, 0.4326901946749006, 0.4322344405310495, 0.43374708720615934, 0.436172570501055, 0.42619078499930246, 0.40615984371730257, 0.41202994755336214, 0.3908040608678545, 0.4007091862814767, 0.39224620376314434, 0.3811549629483904, 0.37628299849373953, 0.3755609222820827, 0.39628119128090994, 0.36865562200546265, 0.37084644181387766, 0.3846053991998945, 0.4028000405856541, 0.3741755059787205, 0.3740168809890747], "val_accuracy": [0.3476666808128357, 0.5059999823570251, 0.6803333163261414, 0.6899999976158142, 0.7306666374206543, 0.762333333492279, 0.7630000114440918, 0.7243333458900452, 0.737666666507721, 0.7716666460037231, 0.7283333539962769, 0.784333348274231, 0.7799999713897705, 0.7699999809265137, 0.7816666960716248, 0.7979999780654907, 0.8006666898727417, 0.8073333501815796, 0.8086666464805603, 0.8053333163261414, 0.8050000071525574, 0.8026666641235352, 0.8230000138282776, 0.8159999847412109, 0.8360000252723694, 0.8296666741371155, 0.8363333344459534, 0.8303333520889282, 0.8326666951179504, 0.8443333506584167, 0.8233333230018616, 0.8493333458900452, 0.8396666646003723, 0.831333339214325, 0.8143333196640015, 0.8333333134651184, 0.8349999785423279]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 3, 7, 3, 0, 1, 1, 2, 4, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 91, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8151428699493408, "mapping_values": [1, 2, 2, 1, 1, 0, 28, 28, 17, 11, 2, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9644729231389884, 1.5234580593275404, 1.1687358196275173, 0.8915182810811603, 0.8300705354101292, 0.7713915657184662, 0.7688637299308404, 0.7154467431089079, 0.7080510979819181, 0.675790286815209, 0.6740222557771003, 0.6452029149577351, 0.6528443322126908, 0.6206184121926605, 0.6196191277738261, 0.6270516691757719, 0.5958766874431257, 0.5650702539042648, 0.5593220726484164, 0.5675619860618751, 0.5657735033955447, 0.5578181390843576, 0.5228482331062557, 0.5282070478821758, 0.5455913246504588, 0.5026725575656561, 0.500054837371443, 0.4989078484781666, 0.48473108530816084, 0.4923357745683456, 0.46915480279179295, 0.48463087653628806, 0.45151364319533277, 0.4736420453547361, 0.45473998988136055, 0.45313829446134946, 0.4567558188180819], "accuracy": [0.35028398036956787, 0.4928014874458313, 0.5888257622718811, 0.6613393425941467, 0.6841896772384644, 0.7079645991325378, 0.7123233675956726, 0.7293620109558105, 0.7293620109558105, 0.7448157668113708, 0.7464007139205933, 0.7548540234565735, 0.755118191242218, 0.7643640041351318, 0.7598732113838196, 0.76542067527771, 0.7775723338127136, 0.7886672616004944, 0.7857614755630493, 0.7835160493850708, 0.7837802171707153, 0.7902522683143616, 0.8062343001365662, 0.8039889335632324, 0.7923656105995178, 0.8136309385299683, 0.8133667707443237, 0.8125742673873901, 0.8206313848495483, 0.8169330358505249, 0.8251221776008606, 0.822348415851593, 0.833179235458374, 0.8177255392074585, 0.8302733898162842, 0.8304054737091064, 0.8297450542449951], "val_loss": [1.6257502010890417, 1.2437530585697718, 0.721338289124625, 0.7528776611600604, 0.5843566826411656, 0.6133399690900531, 0.5448741912841797, 0.5264420849936349, 0.5501367705208915, 0.5429064035415649, 0.5317470005580357, 0.49351678575788227, 0.47899813311440603, 0.4878221409661429, 0.5479387896401542, 0.45929253101348877, 0.45368729318891254, 0.4410721404211862, 0.4252796173095703, 0.45826796122959684, 0.43219018833977835, 0.4289435148239136, 0.4052288021360125, 0.4160080977848598, 0.3944833278656006, 0.4068869096892221, 0.39558675459453035, 0.3842619912964957, 0.3794968213353838, 0.3795161417552403, 0.3982529640197754, 0.37225341796875, 0.37532924754279, 0.3918125799724034, 0.3857369678361075, 0.3686607905796596, 0.3750572885785784], "val_accuracy": [0.34566667675971985, 0.5303333401679993, 0.6930000185966492, 0.6273333430290222, 0.7369999885559082, 0.7116666436195374, 0.7639999985694885, 0.7599999904632568, 0.7283333539962769, 0.7426666617393494, 0.7400000095367432, 0.7746666669845581, 0.7916666865348816, 0.7703333497047424, 0.7543333172798157, 0.7960000038146973, 0.800000011920929, 0.8003333210945129, 0.8130000233650208, 0.7950000166893005, 0.8040000200271606, 0.8046666383743286, 0.82833331823349, 0.8130000233650208, 0.8336666822433472, 0.8273333311080933, 0.8339999914169312, 0.8303333520889282, 0.8326666951179504, 0.8416666388511658, 0.8223333358764648, 0.8486666679382324, 0.8339999914169312, 0.8246666789054871, 0.8216666579246521, 0.8389999866485596, 0.8346666693687439]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 9, 3, 0, 1, 1, 2, 9, 5, 2, 4, 1, 2, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 0, 0, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 36, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8080000281333923, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 12, 6, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9651862652766912, 1.4546861105969144, 1.127593172744375, 0.8811380021513224, 0.8634930955200084, 0.7636240561797933, 0.7434818479741144, 0.7153811270944068, 0.701197824269049, 0.6572447126614908, 0.6749826437997749, 0.6521679833501857, 0.6257571911358358, 0.6124240066145138, 0.6273766886194416, 0.5969272190238727, 0.5907202623130119, 0.5604638332987443, 0.5470446334964075, 0.5631151131320198, 0.5604498094539947, 0.5504703078807195, 0.5167473401171169, 0.5121859521236654, 0.5395302511225161, 0.506145790355112, 0.4931720875163262, 0.4949789239454578, 0.48052776000755115, 0.48213297900207575, 0.46340743904305237, 0.47307277908650813, 0.44406738054199685, 0.4645426001893279, 0.45032626667578207, 0.4504653429940959, 0.45202093301684143], "accuracy": [0.35041606426239014, 0.5155197381973267, 0.5971469879150391, 0.6675472259521484, 0.6752080321311951, 0.7162858247756958, 0.7223616242408752, 0.7342491149902344, 0.7296261787414551, 0.7499669790267944, 0.7428345084190369, 0.752740740776062, 0.7675340175628662, 0.7663452625274658, 0.7580240368843079, 0.776251494884491, 0.783119797706604, 0.7873464822769165, 0.7910447716712952, 0.7815347909927368, 0.7864218950271606, 0.7921014428138733, 0.8074230551719666, 0.8100647330284119, 0.7951393723487854, 0.8107251524925232, 0.8150838613510132, 0.8140271902084351, 0.8253863453865051, 0.8204993009567261, 0.8277638554573059, 0.8232730031013489, 0.8376700282096863, 0.8252542614936829, 0.8321225643157959, 0.8333113193511963, 0.8304054737091064], "val_loss": [1.613133192062378, 1.2244932992117745, 0.6971108572823661, 0.7130538395472935, 0.5735526425497872, 0.5943378380366734, 0.5658892904009137, 0.5271959986005511, 0.5297514711107526, 0.49913573265075684, 0.4880553313664028, 0.49443457807813374, 0.4651914494378226, 0.4902749572481428, 0.4995177813938686, 0.45552280970982145, 0.4504396745136806, 0.433025734765189, 0.425236565726144, 0.45010900497436523, 0.43787725482668194, 0.418485735143934, 0.39610410588128225, 0.4075686846460615, 0.39100639309201923, 0.40046379395893644, 0.39246796710150583, 0.37794420548847746, 0.3749206917626517, 0.3732724189758301, 0.39503284863063265, 0.3656161938394819, 0.375498252255576, 0.38696868079049246, 0.3876592857497079, 0.36588233709335327, 0.37737167733056204], "val_accuracy": [0.3479999899864197, 0.518666684627533, 0.7160000205039978, 0.687333345413208, 0.7476666569709778, 0.7263333201408386, 0.7546666860580444, 0.7566666603088379, 0.734666645526886, 0.7713333368301392, 0.7873333096504211, 0.7839999794960022, 0.793666660785675, 0.7706666588783264, 0.7699999809265137, 0.7916666865348816, 0.8073333501815796, 0.8090000152587891, 0.8176666498184204, 0.7963333129882812, 0.7976666688919067, 0.8113333582878113, 0.8336666822433472, 0.8183333277702332, 0.8366666436195374, 0.8259999752044678, 0.8316666483879089, 0.831333339214325, 0.8356666564941406, 0.843666672706604, 0.8293333053588867, 0.8479999899864197, 0.8326666951179504, 0.8330000042915344, 0.8216666579246521, 0.8360000252723694, 0.8323333263397217]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 6, 3, 3, 9, 0, 1, 1, 2, 4, 9, 2, 4, 1, 2, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 1, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 93, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.797428548336029, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9973121444704416, 1.4280338674063349, 0.9988083006163881, 0.8851487482102666, 0.8011488488179943, 0.7499830493632875, 0.7234550087191504, 0.6819926170530636, 0.6650345261070817, 0.6693991413599527, 0.64105263253591, 0.6504327290566086, 0.5938748463647807, 0.5959038285452692, 0.5785892602947362, 0.5919579636104323, 0.5511057268768615, 0.5568548364803665, 0.5652497714820114, 0.5241349882941598, 0.5271829437853685, 0.5039036657910667], "accuracy": [0.3407739996910095, 0.5071985125541687, 0.6416589617729187, 0.672170102596283, 0.7014925479888916, 0.722229540348053, 0.7285695672035217, 0.7457403540611267, 0.7506273984909058, 0.7498348951339722, 0.7582882046699524, 0.7568352818489075, 0.7795535326004028, 0.7781006693840027, 0.7784969210624695, 0.7732135653495789, 0.8034605979919434, 0.791969358921051, 0.7884030938148499, 0.806630551815033, 0.8042530417442322, 0.8124422430992126], "val_loss": [1.4642463071005685, 0.8084438187735421, 0.698019300188337, 0.6265506233487811, 0.6198957988194057, 0.5858891180583409, 0.5398163454873222, 0.5666473252432687, 0.5618356125695365, 0.5117887258529663, 0.4815517323357718, 0.4863520179476057, 0.5058528866086688, 0.4839742864881243, 0.4498886210577829, 0.46119727407182964, 0.4319276894841875, 0.45395701272147043, 0.42842609541756765, 0.4426095059939793, 0.4290243983268738, 0.4122904283659799], "val_accuracy": [0.42366665601730347, 0.6940000057220459, 0.7009999752044678, 0.6996666789054871, 0.7023333311080933, 0.7289999723434448, 0.753000020980835, 0.7403333187103271, 0.7393333315849304, 0.7613333463668823, 0.7950000166893005, 0.7803333401679993, 0.7739999890327454, 0.7770000100135803, 0.7946666479110718, 0.7979999780654907, 0.8153333067893982, 0.7973333597183228, 0.8140000104904175, 0.7986666560173035, 0.8096666932106018, 0.8130000233650208]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 2, 3, 7, 3, 0, 1, 1, 2, 4, 5, 2, 3, 1, 2, 5, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 3, 0, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 93, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7954285740852356, "mapping_values": [1, 2, 2, 1, 1, 0, 20, 20, 11, 9, 1, 2, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, alpha)), alpha), tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9944918649449497, 1.535677478345252, 1.1012914296563874, 0.918303709642022, 0.8317850608757034, 0.8223102312550301, 0.7736297779000746, 0.719945143478705, 0.7307446965798411, 0.7035360752693839, 0.6563546657562256, 0.6750796485051125, 0.6475734256592725, 0.628247767407361, 0.637885562228237, 0.5870712035367707, 0.5996170383261148, 0.5798361325197846, 0.5778893979627695, 0.578187894252754, 0.5527156117160511, 0.5388627987590684], "accuracy": [0.34222692251205444, 0.4986131191253662, 0.6009774208068848, 0.652621865272522, 0.6864351034164429, 0.6959450244903564, 0.707568347454071, 0.7280412316322327, 0.7236824631690979, 0.7338528633117676, 0.7536653280258179, 0.748778223991394, 0.7585523724555969, 0.7635715007781982, 0.7547219395637512, 0.7839123010635376, 0.7744023203849792, 0.7795535326004028, 0.7845727205276489, 0.7845727205276489, 0.7917051911354065, 0.7985734939575195], "val_loss": [1.6741151809692383, 0.7511811426707676, 0.7314139945166451, 0.6308051688330514, 0.5938371419906616, 0.5678605522428241, 0.5477360486984253, 0.5945828982761928, 0.5153271811349052, 0.5302409614835467, 0.546268207686288, 0.4740931476865496, 0.4736623934337071, 0.4618019887379238, 0.4552759953907558, 0.44517338275909424, 0.43497391257967266, 0.4544567380632673, 0.4665146384920393, 0.43243901218686787, 0.43920508452824186, 0.4387750029563904], "val_accuracy": [0.31433331966400146, 0.6830000281333923, 0.6883333325386047, 0.7059999704360962, 0.7296666502952576, 0.7383333444595337, 0.7443333268165588, 0.7206666469573975, 0.7693333625793457, 0.7490000128746033, 0.7429999709129333, 0.7870000004768372, 0.7860000133514404, 0.7879999876022339, 0.7979999780654907, 0.7973333597183228, 0.7996666431427002, 0.7836666703224182, 0.784333348274231, 0.7963333129882812, 0.7896666526794434, 0.7903333306312561]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 3, 7, 8, 0, 1, 1, 2, 4, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 91, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7922857403755188, "mapping_values": [1, 2, 2, 1, 1, 0, 19, 19, 11, 8, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.add(beta, beta))), tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9950763910453806, 1.5324571371047, 1.085362970151953, 0.9099042550164317, 0.8486710208644169, 0.8079351301615847, 0.7529082620353306, 0.7111350790605002, 0.7054409500929374, 0.7261659499361625, 0.6565478802624789, 0.6735059261526714, 0.6570861493402768, 0.6347634297603818, 0.6379024098656669, 0.5864766142576472, 0.6026078808844569, 0.5749647873834518, 0.5811981154533661, 0.5769965443329615, 0.5529753408018214, 0.5410786332109144], "accuracy": [0.34143441915512085, 0.49927353858947754, 0.6038832664489746, 0.6655659675598145, 0.6812838315963745, 0.696209192276001, 0.713908314704895, 0.7338528633117676, 0.7366266250610352, 0.726192057132721, 0.7512878179550171, 0.7514199018478394, 0.7512878179550171, 0.7568352818489075, 0.7540615797042847, 0.7848368883132935, 0.7746664881706238, 0.7841764688491821, 0.7833839654922485, 0.7825914621353149, 0.7921014428138733, 0.7985734939575195], "val_loss": [1.6720225470406669, 0.7497522149767194, 0.7552621194294521, 0.6091557570866176, 0.5991931813103812, 0.5643795728683472, 0.5535775082451957, 0.5497142417090279, 0.5299149751663208, 0.5289622034345355, 0.5469144923346383, 0.49613405976976666, 0.4615842614855085, 0.4685666731425694, 0.4530888795852661, 0.449190616607666, 0.43585312366485596, 0.47111618518829346, 0.4965838534491403, 0.4297225901058742, 0.43550096239362446, 0.4674489838736398], "val_accuracy": [0.3163333237171173, 0.687333345413208, 0.6736666560173035, 0.7300000190734863, 0.7303333282470703, 0.7379999756813049, 0.7456666827201843, 0.7603333592414856, 0.7639999985694885, 0.7513333559036255, 0.7436666488647461, 0.7673333287239075, 0.7846666574478149, 0.7770000100135803, 0.7976666688919067, 0.7929999828338623, 0.7990000247955322, 0.765999972820282, 0.7609999775886536, 0.7979999780654907, 0.7919999957084656, 0.7736666798591614]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 9, 3, 1, 5, 0, 5, 4, 4, 3, 6, 2, 4, 1, 3, 8, 6, 8, 0, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 0, 0, 2, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [32, 9, 44]], "fitness": -0.5588571429252625, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1885541691173573, 4840421374.284833, NaN, NaN, NaN, NaN], "accuracy": [0.2509576082229614, 0.22123894095420837, 0.10672302544116974, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.5363366263253346, 2.2887955777759904e+20, NaN, NaN, NaN, NaN], "val_accuracy": [0.5653333067893982, 0.1393333375453949, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 3, 7, 3, 0, 5, 8, 2, 3, 5, 8, 6, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.3857142925262451, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.685047689540401, 2.6749103974357586, 2.3039199063932543, 2.3031022340204927, 2.3008296860050077, 2.6267371185231188], "accuracy": [0.19838859140872955, 0.1488574892282486, 0.09998679161071777, 0.09853387624025345, 0.11055342853069305, 0.16563200950622559], "val_loss": [1.7507775170462472, 1.9747866221836634, 1.9737861497061593, 1.9732283864702498, 1.962942327771868, 1.979823453085763], "val_accuracy": [0.3526666760444641, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.2173333317041397, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 3, 7, 3, 0, 1, 1, 2, 4, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 91, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.37057143449783325, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.684846656260442, 2.576413889287753, 2.303843473289086, 2.3031879076946997, 2.302921876710845, 2.3026803345051046], "accuracy": [0.19891692698001862, 0.14859332144260406, 0.09998679161071777, 0.1006472036242485, 0.09470347315073013, 0.09259014576673508], "val_loss": [1.7986104828970773, 1.9747279712132044, 1.9738152367728097, 1.973646981375558, 1.973525047302246, 1.9730726650782995], "val_accuracy": [0.3356666564941406, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10866666585206985, 0.12600000202655792]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 2, 1, 7, 3, 0, 5, 1, 2, 4, 5, 2, 3, 5, 2, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 0, 3, 3, 0, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 85, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [73, 9, 44]], "fitness": -0.34628570079803467, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 20, 13, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6844356614900002, 2.7164787350235016, 2.3038494777465304, 2.3031454866336496, 2.2895772292739633, 3.752533792425943, 2.3075294270727693, 2.3038450012967853, 2.3031629081635883, 2.302946877533088], "accuracy": [0.19865275919437408, 0.14476291835308075, 0.09893012791872025, 0.1006472036242485, 0.13591335713863373, 0.13855500519275665, 0.09998679161071777, 0.09602430462837219, 0.09708096832036972, 0.09628847241401672], "val_loss": [1.706660543169294, 1.9747734751020158, 1.9737327439444405, 1.9729796818324499, 1.8738115174429757, 1.9806006295340401, 1.9748127119881767, 1.9738755226135254, 1.9736615589686803, 1.9736763409205846], "val_accuracy": [0.351666659116745, 0.10400000214576721, 0.10400000214576721, 0.10000000149011612, 0.3786666691303253, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 3, 7, 8, 0, 1, 1, 2, 4, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 91, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [65, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 21, 21, 13, 8, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.add(beta, grad))))))), tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6012722407318205, 2.432750861311885, 2.308076481698857, 2.3042740128091013, 2.3036209582463703, 2.303426586263735, 2.303141707174845], "accuracy": [0.21014396846294403, 0.1406683325767517, 0.09813763201236725, 0.09945846349000931, 0.09589222073554993, 0.09760929644107819, 0.09417514503002167], "val_loss": [1.9941322462899345, 1.9799508367265974, 1.9753860064915247, 1.973757539476667, 1.9738358088902064, 1.9738116264343262, 1.973621027810233], "val_accuracy": [0.09799999743700027, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 3, 7, 3, 0, 1, 1, 2, 4, 5, 2, 0, 1, 6, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 2, 0, 1, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 22, 22, 13, 9, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad)))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 6, 3, 7, 3, 0, 5, 1, 6, 4, 5, 2, 4, 2, 2, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 31, 31, 18, 13, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), beta), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, alpha), grad), tf.math.add(beta, tf.math.square(tf.math.add(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)))), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [184.1601631606433, 2.6002341068863747e+31, 2.63061377706466, 2.789880588211797, 2.811026385998477, 2.714942281555742, 2.7221523909253245], "accuracy": [0.1942940205335617, 0.1022322028875351, 0.09840179979801178, 0.0944393053650856, 0.09906221181154251, 0.09879804402589798, 0.10130762308835983], "val_loss": [286360.83035714284, 2.36565249306815, 2.512512751988002, 2.0380023547581265, 2.4729950768607005, 2.365666253226144, 2.2017673764910017], "val_accuracy": [0.08566666394472122, 0.10400000214576721, 0.1003333330154419, 0.10100000351667404, 0.09966666996479034, 0.10133333504199982, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 3, 9, 3, 0, 1, 1, 2, 4, 5, 2, 4, 0, 6, 8, 1, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 16, 93, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 6, 3, 7, 3, 0, 1, 1, 2, 4, 5, 2, 4, 1, 2, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.7734668738738835e+26, 2.350595388996949, 2.386862997145244, 2.4618764636287, 2.632630917311439, 3.048754387590879], "accuracy": [0.05507858842611313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 2.030206952776228, 2.076329367501395, 2.1759960991995677, 2.416595254625593, 2.9826294354030063], "val_accuracy": [0.1003333330154419, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 3, 7, 3, 0, 5, 8, 2, 3, 5, 8, 6, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 93, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303675708769492, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 6, 3, 9, 3, 0, 1, 1, 2, 4, 5, 2, 4, 0, 6, 8, 1, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.09828571230173111, "mapping_values": [1, 2, 2, 1, 1, 0, 23, 23, 13, 10, 3, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, grad), grad))), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3100780658812616, 2.3669709457366728, 2.5304654917429152, 2.8499169543970058, 3.2396818202452935, 3.631338852019657, 4.037975261523472, 4.357277805936524], "accuracy": [0.0866464152932167, 0.0956280529499054, 0.10210011899471283, 0.09853387624025345, 0.0956280529499054, 0.10527011007070541, 0.10249637067317963, 0.11015717685222626], "val_loss": [1.9812050546918596, 2.031909942626953, 2.142366749899728, 2.312775271279471, 2.5189738954816545, 2.725693702697754, 2.8936965806143626, 3.0026373863220215], "val_accuracy": [0.08900000154972076, 0.09666666388511658, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 6, 3, 7, 3, 0, 3, 1, 5, 4, 5, 2, 4, 1, 2, 8, 8, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [27, 64, 61, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.04085714370012283, "mapping_values": [1, 17, 17, 10, 7, 1, 28, 28, 16, 12, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.square(grad)), alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031913125362253, 2.3021118497930386, 2.3024370998770034, 2.3026119695284804, 2.3025560622453973, 2.3032479697151773], "accuracy": [0.09153348207473755, 0.08809932321310043, 0.08915598690509796, 0.09457138925790787, 0.0886276587843895, 0.09496764093637466], "val_loss": [1.9712023735046387, 1.9714322090148926, 1.9716380664280482, 1.971839768545968, 1.9720593179975237, 1.972275733947754], "val_accuracy": [0.03266666829586029, 0.03266666829586029, 0.03200000151991844, 0.03033333271741867, 0.028333334252238274, 0.0273333340883255]}}]