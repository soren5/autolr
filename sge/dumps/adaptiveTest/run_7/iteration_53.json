[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 8, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 1, 5, 2, 3, 2, 1, 1, 3, 2, 0, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8199999928474426, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9569066055950597, 1.6099261436731966, 1.0950558711635028, 0.8964785922472708, 0.8283959867349312, 0.7914814445887732, 0.7404231308174486, 0.7151474786188939, 0.7331782170825898, 0.6674268305844887, 0.6559237588933587, 0.6340861894734515, 0.648857514123875, 0.6103108147147656, 0.6009231662044845, 0.5939154588409371, 0.5695804930271773, 0.5807210054175256, 0.5780718994414596, 0.5562987904648786, 0.5453666817353087, 0.5426009458762433, 0.5263662075070563, 0.5239653488144568, 0.5029561332408636, 0.5071440054330812, 0.48797371521397287, 0.5005248482075224, 0.4888262538122007, 0.4792367060422866, 0.4660994327496607, 0.46602398085084024, 0.45182411673597733, 0.45489729884404234, 0.4407808897895521, 0.4439863593838769, 0.4351562919035375, 0.44295762283076795, 0.4324489703913406, 0.43392544110547815, 0.4268213776927409, 0.4155323104481451, 0.4123766506785777, 0.4109883168747932, 0.4272428919980555, 0.4115995624597283, 0.3955463774609544, 0.38679628978158503, 0.384760999881108, 0.38285414142190444, 0.38815552127706127, 0.381016208408783, 0.3764260763647125, 0.36999952394366187, 0.3780839030634946, 0.37130299760066854, 0.3579579446774275], "accuracy": [0.34222692251205444, 0.45291242003440857, 0.5926561951637268, 0.6744155287742615, 0.6935675740242004, 0.6976621150970459, 0.7236824631690979, 0.7368907928466797, 0.7260599732398987, 0.748778223991394, 0.750759482383728, 0.7629110813140869, 0.7475894689559937, 0.7726852297782898, 0.7737419009208679, 0.77677983045578, 0.7861577272415161, 0.7820631265640259, 0.7823272943496704, 0.7857614755630493, 0.7932901978492737, 0.7932901978492737, 0.8016114234924316, 0.8058380484580994, 0.8125742673873901, 0.8078193068504333, 0.8190463781356812, 0.8132346868515015, 0.8173292875289917, 0.8210275769233704, 0.8234050869941711, 0.8198388814926147, 0.8300092220306396, 0.8315942287445068, 0.8380662798881531, 0.8305375576019287, 0.839519202709198, 0.8347642421722412, 0.8403117060661316, 0.8430854678153992, 0.8391229510307312, 0.8471800088882446, 0.843481719493866, 0.848368763923645, 0.8397833704948425, 0.8495575189590454, 0.8521991968154907, 0.8561616539955139, 0.8580108284950256, 0.8577466607093811, 0.8553691506385803, 0.8553691506385803, 0.8603883385658264, 0.8623695969581604, 0.8543124794960022, 0.8660678863525391, 0.8688416481018066], "val_loss": [1.6163317816598075, 0.9871252264295306, 0.7338438715253558, 0.6230691160474505, 0.617411596434457, 0.5713077783584595, 0.5858594690050397, 0.5955109936850411, 0.5280177082334246, 0.4919573409216745, 0.48518351146153044, 0.49438495295388357, 0.46606760365622385, 0.44900955472673687, 0.4695382458823068, 0.4620387043271746, 0.4473190648215158, 0.4452291897365025, 0.43441865273884367, 0.45748848574502127, 0.43087123121534077, 0.40797210591179983, 0.4381167548043387, 0.422184910093035, 0.39270228147506714, 0.3941834994724819, 0.37581001009259907, 0.39544475078582764, 0.3809789334024702, 0.38302580799375263, 0.36824917793273926, 0.3672588978494917, 0.3745536037853786, 0.36774517808641705, 0.35335348333631245, 0.38112915413720266, 0.34838974475860596, 0.35900733300617765, 0.3871543662888663, 0.3534216710499355, 0.3421787108693804, 0.354235087122236, 0.3591154302869524, 0.34186816215515137, 0.34364523206438335, 0.3597532936504909, 0.33637057883398874, 0.3364132046699524, 0.34522286483219694, 0.3281557559967041, 0.33923377309526714, 0.3192302669797625, 0.32559233052389963, 0.35021438768931795, 0.32024008887154715, 0.3200276919773647, 0.328811628477914], "val_accuracy": [0.3023333251476288, 0.5513333082199097, 0.6706666946411133, 0.7110000252723694, 0.721666693687439, 0.7383333444595337, 0.7369999885559082, 0.7260000109672546, 0.7630000114440918, 0.7850000262260437, 0.7760000228881836, 0.7720000147819519, 0.7926666736602783, 0.8029999732971191, 0.784333348274231, 0.7853333353996277, 0.7926666736602783, 0.8116666674613953, 0.8240000009536743, 0.7886666655540466, 0.8116666674613953, 0.8299999833106995, 0.7953333258628845, 0.809333324432373, 0.8266666531562805, 0.8320000171661377, 0.8363333344459534, 0.8330000042915344, 0.8379999995231628, 0.8299999833106995, 0.8429999947547913, 0.8423333168029785, 0.8379999995231628, 0.8323333263397217, 0.8483333587646484, 0.8373333215713501, 0.8489999771118164, 0.8370000123977661, 0.8253333568572998, 0.8496666550636292, 0.8553333282470703, 0.8483333587646484, 0.8393333554267883, 0.856333315372467, 0.8486666679382324, 0.8453333377838135, 0.8579999804496765, 0.8560000061988831, 0.8513333201408386, 0.8569999933242798, 0.8560000061988831, 0.8703333139419556, 0.8629999756813049, 0.8489999771118164, 0.8659999966621399, 0.8679999709129333, 0.859333336353302]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 0, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8091428279876709, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.956029500156393, 1.6267428847194394, 1.1053332935990658, 0.9110498089107619, 0.8405515482286814, 0.7776612791292672, 0.7505380198263049, 0.725028834007892, 0.6989702125660668, 0.6647863390265896, 0.6474609310915757, 0.6476925614093981, 0.6250528263582797, 0.6150365710384448, 0.6114494712471474, 0.5770162274934801, 0.5798360720097727, 0.5886828181466816, 0.5654042732635305, 0.5444351939902471, 0.5449546727175568, 0.527646675802351, 0.5301397927858259, 0.5188520531518317], "accuracy": [0.3427552580833435, 0.44710078835487366, 0.5900145173072815, 0.6662263870239258, 0.6900013089179993, 0.7102100253105164, 0.7160216569900513, 0.7243428826332092, 0.7383436560630798, 0.7485140562057495, 0.7537974119186401, 0.7568352818489075, 0.7625148296356201, 0.7737419009208679, 0.7725531458854675, 0.7852331399917603, 0.7836481332778931, 0.7784969210624695, 0.7836481332778931, 0.7959318161010742, 0.7936864495277405, 0.8034605979919434, 0.7985734939575195, 0.8092722296714783], "val_loss": [1.6300654070717948, 0.9570837702069964, 0.6868969031742641, 0.6480279990604946, 0.5723028012684414, 0.5809439080102103, 0.5589819805962699, 0.5395519733428955, 0.5252926349639893, 0.4913816281727382, 0.505124568939209, 0.49503558022635324, 0.47765413352421354, 0.4556619780404227, 0.4584957020623343, 0.4736612524305071, 0.48259646551949636, 0.4465779406683786, 0.4234740819249834, 0.44993938718523296, 0.42106395959854126, 0.4199784653527396, 0.4243281739098685, 0.41577098199299406], "val_accuracy": [0.2866666615009308, 0.5606666803359985, 0.6909999847412109, 0.6976666450500488, 0.7519999742507935, 0.746666669845581, 0.7463333606719971, 0.7419999837875366, 0.7633333206176758, 0.7903333306312561, 0.768666684627533, 0.7746666669845581, 0.7803333401679993, 0.8026666641235352, 0.7933333516120911, 0.7893333435058594, 0.7773333191871643, 0.8023333549499512, 0.8236666917800903, 0.7960000038146973, 0.8193333148956299, 0.8176666498184204, 0.8116666674613953, 0.8100000023841858]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 5, 1, 1, 9, 2, 5, 0, 1, 3, 2, 2, 2, 1, 3, 2, 8, 2, 2, 0, 3, 2, 8, 6, 5, 1, 1, 2, 2, 7, 2, 1, 8, 2, 3, 8, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8080000281333923, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(grad, grad))), tf.math.add(beta, tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.negative(sigma)))), alpha))))", "other_info": {"loss": [1.955988319999333, 1.6274535302016178, 1.1057196601254986, 0.9063586224071764, 0.8178239850288747, 0.8040891845212746, 0.745337190156946, 0.722639256417397, 0.7133653849941974, 0.6673957371535382, 0.6360169474034025, 0.6486551506549864, 0.6277215694156163, 0.6209016630142876, 0.6113530445990073, 0.5866924229315038, 0.5765428921770441, 0.5766608614443536, 0.5723937132481051, 0.5497152325956183, 0.5435030280701346, 0.5358841497238994, 0.5323520546552448, 0.5191899689669465, 0.5032675838615318, 0.5041596945313698, 0.4843438932640898, 0.5063807329544538, 0.48116923019776114, 0.4733494432799773, 0.4632609809599123, 0.4720485735295424, 0.45078913876330456, 0.4481050041034914, 0.44404483697654046, 0.4390525863847996, 0.4414625563531457, 0.4478141844485178, 0.4209315830635247, 0.4325494490413303, 0.4230072700848212, 0.4131919350275794, 0.4138789847070011, 0.4090742335587508, 0.4182252020938852, 0.40331460579416895], "accuracy": [0.342491090297699, 0.44670453667640686, 0.5904107689857483, 0.6691322326660156, 0.6972658634185791, 0.6948884129524231, 0.7223616242408752, 0.7323999404907227, 0.7276449799537659, 0.7524765729904175, 0.7602694630622864, 0.7491744756698608, 0.7602694630622864, 0.7675340175628662, 0.7744023203849792, 0.7759873270988464, 0.7814027070999146, 0.7820631265640259, 0.7829877138137817, 0.7928939461708069, 0.7951393723487854, 0.7985734939575195, 0.7960638999938965, 0.8094043135643005, 0.8149517774581909, 0.8072909712791443, 0.8210275769233704, 0.8125742673873901, 0.8186501264572144, 0.8230088353157043, 0.8236692547798157, 0.817989706993103, 0.8319904804229736, 0.8321225643157959, 0.8339717388153076, 0.8359529972076416, 0.8355567455291748, 0.8348963260650635, 0.8448025584220886, 0.8422929644584656, 0.8413683772087097, 0.8508783578872681, 0.8448025584220886, 0.8482366800308228, 0.8437458872795105, 0.8532558679580688], "val_loss": [1.6243541240692139, 0.9523442813328334, 0.7061200823102679, 0.6320927824292865, 0.6580117770603725, 0.5778557913643974, 0.5743923527853829, 0.533240556716919, 0.525593740599496, 0.49312141963413786, 0.49520887647356304, 0.48693004676273893, 0.46488867487226215, 0.4574222905295236, 0.45370926175798687, 0.4753855807440622, 0.4316959721701486, 0.45453107357025146, 0.42624045269829886, 0.4465365069253104, 0.4204332487923758, 0.4086703487804958, 0.42208437408719746, 0.41536872727530344, 0.39836858000074116, 0.3964642286300659, 0.37263583285467966, 0.3930684583527701, 0.39701047965458464, 0.3758620023727417, 0.38516866309302195, 0.3729051096098764, 0.3744630898748125, 0.3667633448328291, 0.3532602276120867, 0.39592706305640085, 0.37111484152930124, 0.3455484764916556, 0.4014512300491333, 0.354162974017007, 0.34353095293045044, 0.3479115877832685, 0.36269422088350567, 0.34192246198654175, 0.34113102299826487, 0.3508989300046648], "val_accuracy": [0.28566667437553406, 0.5613333582878113, 0.671999990940094, 0.7059999704360962, 0.6943333148956299, 0.7250000238418579, 0.7369999885559082, 0.7423333525657654, 0.7633333206176758, 0.7823333144187927, 0.7746666669845581, 0.7756666541099548, 0.7900000214576721, 0.7986666560173035, 0.7886666655540466, 0.778333306312561, 0.8149999976158142, 0.8006666898727417, 0.8169999718666077, 0.7893333435058594, 0.8180000185966492, 0.8299999833106995, 0.8133333325386047, 0.8116666674613953, 0.8193333148956299, 0.8296666741371155, 0.8363333344459534, 0.831333339214325, 0.8309999704360962, 0.8379999995231628, 0.8266666531562805, 0.840666651725769, 0.8366666436195374, 0.8349999785423279, 0.847000002861023, 0.8256666660308838, 0.8306666612625122, 0.8526666760444641, 0.8209999799728394, 0.8456666469573975, 0.8583333492279053, 0.8546666502952576, 0.8376666903495789, 0.8550000190734863, 0.8483333587646484, 0.8526666760444641]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 6, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8002856969833374, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9560398564850727, 1.6254190153780237, 1.1039028930437327, 0.9032203452761273, 0.8496262843283554, 0.7620008360629447, 0.7781658213939397, 0.7119083616318185, 0.7067336501651326, 0.664018535272336, 0.637786804275616, 0.6414140639854948, 0.6317123757566302, 0.62054842282217, 0.5972488876724948, 0.584588972726408, 0.5885179088714336, 0.5939122172489048, 0.5628557473346305, 0.5486033494840004, 0.5450970727171424, 0.5341855172294715, 0.5293047947969262, 0.5147494613974716, 0.49961752670552234, 0.5069624672728349, 0.4896294974206918, 0.4956619127386234, 0.4862556598481249, 0.4760588899642532, 0.46321446293175983, 0.46421581017830904, 0.45486655531384923, 0.4526602492954721, 0.44247465698301136, 0.4371974761648862, 0.4477986542855146, 0.4440277200120866, 0.4202602740646338, 0.4247109445173349, 0.42322753348354936, 0.413146921554183, 0.4135104733931469], "accuracy": [0.34288734197616577, 0.4469687044620514, 0.5894861817359924, 0.6691322326660156, 0.6880200505256653, 0.7156254053115845, 0.7033417224884033, 0.7322678565979004, 0.7309470176696777, 0.7494386434555054, 0.7565711140632629, 0.7555144429206848, 0.7585523724555969, 0.7707040309906006, 0.7794214487075806, 0.7769119143486023, 0.7808743715286255, 0.7770439982414246, 0.7868181467056274, 0.7889314293861389, 0.7935543656349182, 0.7984414100646973, 0.7997622489929199, 0.8120459914207458, 0.8146876096725464, 0.807158887386322, 0.8158763647079468, 0.8149517774581909, 0.8153480291366577, 0.8245938420295715, 0.8231409192085266, 0.8241975903511047, 0.8333113193511963, 0.8301413059234619, 0.8354246616363525, 0.8378021121025085, 0.8315942287445068, 0.8333113193511963, 0.8482366800308228, 0.8442742228507996, 0.8411042094230652, 0.8495575189590454, 0.8442742228507996], "val_loss": [1.6301239218030656, 0.9541184902191162, 0.69041679586683, 0.6678025722503662, 0.5779797009059361, 0.5864056008202689, 0.5475953136171613, 0.5222760268620082, 0.5289993286132812, 0.49341423170907156, 0.5051412922995431, 0.49529928820473806, 0.46665990352630615, 0.46016933236803326, 0.4504075901848929, 0.5469787120819092, 0.43961931126458303, 0.44455768380846294, 0.4258717043059213, 0.4510860102517264, 0.4228202870913914, 0.40877725396837505, 0.4268363969666617, 0.4094719205583845, 0.39505752495356966, 0.39684841462544035, 0.38359698227473665, 0.38907519408634733, 0.3876973731177194, 0.3772608978407724, 0.3745848706790379, 0.3741199289049421, 0.37021178007125854, 0.36884392159325735, 0.3519995042255947, 0.38622580255780903, 0.3879776086126055, 0.3453174999782017, 0.3748649614197867, 0.3478755269731794, 0.34571573563984465, 0.3472645027296884, 0.35481975759778706], "val_accuracy": [0.28700000047683716, 0.5619999766349792, 0.6893333196640015, 0.6896666884422302, 0.7419999837875366, 0.7423333525657654, 0.746999979019165, 0.7583333253860474, 0.762666642665863, 0.7860000133514404, 0.7663333415985107, 0.7763333320617676, 0.7886666655540466, 0.7963333129882812, 0.7963333129882812, 0.7543333172798157, 0.8063333630561829, 0.8056666851043701, 0.8253333568572998, 0.7896666526794434, 0.8163333535194397, 0.8293333053588867, 0.8090000152587891, 0.812333345413208, 0.8276666402816772, 0.8299999833106995, 0.8376666903495789, 0.8373333215713501, 0.8336666822433472, 0.8386666774749756, 0.8366666436195374, 0.840666651725769, 0.8383333086967468, 0.8349999785423279, 0.8513333201408386, 0.8276666402816772, 0.8193333148956299, 0.8539999723434448, 0.8320000171661377, 0.8510000109672546, 0.8539999723434448, 0.8536666631698608, 0.843666672706604]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [8, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 2, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7911428809165955, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.978961731480286, 1.3991255679418382, 1.0853735510352864, 0.8826838825530285, 0.8446518187714354, 0.7556212907926423, 0.7575211221547317, 0.7245561298267826, 0.6878061834390625, 0.6861108766177137, 0.6584730271681535, 0.6252293009264216, 0.6257805936702758, 0.620762633381424, 0.6007875909012984, 0.6026028551918058], "accuracy": [0.34486857056617737, 0.5110289454460144, 0.6008453369140625, 0.6707172393798828, 0.6796988248825073, 0.7062475085258484, 0.713908314704895, 0.7231541275978088, 0.7423061728477478, 0.7358341217041016, 0.7437590956687927, 0.7642319202423096, 0.7588165402412415, 0.7627789974212646, 0.7685906887054443, 0.7683265209197998], "val_loss": [1.3448097024645125, 0.9295838219778878, 0.6716799225125994, 0.6588947943278721, 0.5935809782573155, 0.6495474747249058, 0.5430498463766915, 0.5748529604503086, 0.5247772932052612, 0.518477371760777, 0.4712806599480765, 0.5167802742549351, 0.5045543568474906, 0.5115138292312622, 0.4814680133547102, 0.45695814064570833], "val_accuracy": [0.5053333044052124, 0.6366666555404663, 0.721666693687439, 0.7129999995231628, 0.7246666550636292, 0.7016666531562805, 0.7609999775886536, 0.7166666388511658, 0.7570000290870667, 0.7390000224113464, 0.7919999957084656, 0.7456666827201843, 0.7620000243186951, 0.7526666522026062, 0.7733333110809326, 0.7853333353996277]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7902857065200806, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9789180183265787, 1.4006518958629224, 1.088595525188028, 0.8842575648095173, 0.8383527048086651, 0.7747983380693565, 0.7362910513911879, 0.7119691171477326, 0.708208151009136, 0.6817567991763216, 0.6477300992510842, 0.6324649657539924, 0.6168645656718208, 0.6319498306551409, 0.5944333913272414, 0.6001991892550615], "accuracy": [0.34447231888771057, 0.5101043581962585, 0.6009774208068848, 0.6711134314537048, 0.6823405027389526, 0.6996433734893799, 0.7219653725624084, 0.7288337349891663, 0.72672039270401, 0.7386078238487244, 0.7537974119186401, 0.7592127919197083, 0.7598732113838196, 0.7597411274909973, 0.7717606425285339, 0.7721568942070007], "val_loss": [1.3454413754599435, 0.9357971463884626, 0.6716901063919067, 0.6668825149536133, 0.5921933650970459, 0.5884989840643746, 0.5449627637863159, 0.5893509047372001, 0.5153246096202305, 0.5081919261387416, 0.47026070526668, 0.49329844542912077, 0.4991405861718314, 0.5054278544017247, 0.5038853202547345, 0.4675577368055071], "val_accuracy": [0.5053333044052124, 0.6356666684150696, 0.721666693687439, 0.7056666612625122, 0.7176666855812073, 0.7173333168029785, 0.7570000290870667, 0.7246666550636292, 0.7670000195503235, 0.7630000114440918, 0.7883333563804626, 0.7543333172798157, 0.7726666927337646, 0.7606666684150696, 0.7573333382606506, 0.7736666798591614]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1], [0, 0, 1], [2, 1], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [67, 16, 44]], "fitness": -0.3254285752773285, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1326528542140344, 2.6689546346003117, 2.56464504899602, 2.3038791984756624, 2.3007811456702214, 4.4530253944427205, 2.316264171893838], "accuracy": [0.26878878474235535, 0.19072777032852173, 0.1530841439962387, 0.09694888442754745, 0.11134592443704605, 0.17078325152397156, 0.09998679161071777], "val_loss": [1.988577025277274, 1.9202795709882463, 1.9748001098632812, 1.9732343128749303, 1.9628311565944128, 1.9931820460728236, 1.979034083230155], "val_accuracy": [0.15066666901111603, 0.22166666388511658, 0.1003333330154419, 0.1003333330154419, 0.15466666221618652, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [7, 2, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 4, 0, 0, 2, 0, 3, 3, 0, 3, 2, 1, 3, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [20, 15, 14, 52, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2, 8], [5], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [81, 9, 44]], "fitness": -0.2711428701877594, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 20, 19, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(grad, grad))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, alpha))))), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1259725718623566, 3.01238297446214, 2.1838785400007694, 4.225497589229734, 2.3062709537967634, 2.3036607382178165], "accuracy": [0.2565050721168518, 0.14330999553203583, 0.18214239180088043, 0.11438383162021637, 0.09774138033390045, 0.09747721254825592], "val_loss": [5.615303993225098, 1.9735668046133858, 13.385206495012556, 1.9774810246058874, 1.974292550768171, 1.9729777063642229], "val_accuracy": [0.21899999678134918, 0.09866666793823242, 0.18299999833106995, 0.10100000351667404, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 4, 0, 0, 2, 3, 3, 3, 0, 3, 2, 1, 3, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 77, 44]], "fitness": -0.13171428442001343, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.071564318024959, 7.971400140409126, 2.6888734989508882, 2.9249428834236215, 3.3440155994307963, 3.863428720724408, 4.213613045387233], "accuracy": [0.0330207385122776, 0.08308017253875732, 0.09628847241401672, 0.10328886657953262, 0.09879804402589798, 0.10091137140989304, 0.09774138033390045], "val_loss": [2.378509385245187, 2.2489657402038574, 2.3588243893214633, 2.6795786448887418, 3.1144187109810963, 3.4832893099103654, 3.4468654905046736], "val_accuracy": [0.08233333379030228, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [4, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302290040519905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 1, 7, 4, 1, 6, 6, 3, 6, 5, 3, 2, 0, 4, 3, 3, 2, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 4, 0, 0, 3, 3, 3, 3, 0, 3, 2, 1, 3, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2, 8], [5], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 13, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 31, 31, 16, 15, 3, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), grad)))))), tf.math.add(beta, grad))))), tf.math.negative(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))))), tf.math.multiply(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302290040519905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 1, 7, 0, 5, 6, 8, 3, 6, 2, 3, 2, 3, 3, 3, 3, 2, 6, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 5, 3, 3, 4, 0, 0, 3, 3, 3, 3, 3, 3, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2, 8], [5], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 3, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 16, 16, 9, 7, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.square(grad))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2095197339.9038901, 40588879181.93951, 186158083002.61523, 519198040867.9435, 1111031503596.4897, 2049943915899.655], "accuracy": [0.10249637067317963, 0.09945846349000931, 0.09945846349000931, 0.10077928751707077, 0.10236428678035736, 0.09972262382507324], "val_loss": [7940858441.142858, 63510659072.0, 214330966016.0, 508025485019.4286, 992211744475.4286, 1714509053952.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [9, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [64, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302290040519905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [7, 2, 1, 1, 8, 5, 1, 6, 6, 6, 2, 3, 5, 3, 2, 2, 3, 6, 6, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 3, 1, 3, 2, 3, 2, 1, 1, 3, 2, 0, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1], [0, 1], [2], [5], [76], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 3, 0, 3, 1, 1], [25, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 5, 5, 0, 3, 2, 1, 1, 0, 12, 8, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.sqrt(tf.math.add(beta, grad)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.square(sigma), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.negative(sigma))))", "other_info": {"loss": [2.2954745011133775, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10949676483869553, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9707612310137068, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [3, 3, 5, 3, 3, 3, 1, 5, 2, 3, 2, 1, 1, 3, 2, 0, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0], [0, 0, 1], [2, 3], [5], [76], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, tf.math.add(beta, grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.344970663824196, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11940298229455948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1496.441929408482, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [7, 2, 1, 7, 8, 1, 6, 6, 6, 5, 2, 3, 2, 3, 1, 5, 3, 2, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 3, 3, 4, 3, 0, 3, 3, 3, 3, 3, 3, 2, 1, 0, 3, 4, 2, 2, 3, 3, 0, 3, 0, 0], [74, 40, 32, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2, 8], [5], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 13, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 27, 27, 14, 13, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, grad))))))), grad)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302290040519905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 2, 1, 2, 8, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 2, 2, 8, 9, 4, 5, 8, 0, 5, 8, 2, 3, 7, 2, 9, 8, 0, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 1, 1, 2, 3, 2, 1, 1, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2, 8], [5], [76], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3016941470240777, 2.302566403332419, 2.30224364837714, 2.300399163143746, 2.302749111919733, 2.3020871923174826], "accuracy": [0.09509972482919693, 0.08836349099874496, 0.08928807079792023, 0.0956280529499054, 0.08717474341392517, 0.09351472556591034], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 9, 1, 7, 8, 5, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 2, 6, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 1, 1, 5, 2, 3, 2, 1, 1, 3, 2, 0, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 69, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2], [5], [76], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 17, 17, 10, 7, 1, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 10, 6, 4, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3016941470240777, 2.302566403332419, 2.30224364837714, 2.300399163143746, 2.302749111919733, 2.3020871923174826], "accuracy": [0.09509972482919693, 0.08836349099874496, 0.08928807079792023, 0.0956280529499054, 0.08717474341392517, 0.09351472556591034], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 9, 3, 5, 2, 3, 4, 6, 6, 2, 1, 9, 3, 3, 8, 9, 3, 2, 2, 1, 9, 5, 4, 5, 5, 1, 2, 3, 7, 2, 1, 8, 2, 3, 5, 5, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [2, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [74, 40, 14, 19, 16, 30, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0, 0], [2, 8], [5], [76], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 9, 3, 1, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3016941470240777, 2.302566403332419, 2.30224364837714, 2.300399163143746, 2.302749111919733, 2.3020871923174826], "accuracy": [0.09509972482919693, 0.08836349099874496, 0.08928807079792023, 0.0956280529499054, 0.08717474341392517, 0.09351472556591034], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 5, 1, 1, 9, 2, 5, 0, 1, 3, 2, 2, 2, 1, 3, 2, 8, 2, 2, 0, 3, 2, 8, 6, 5, 1, 1, 2, 2, 7, 2, 1, 8, 2, 3, 8, 3, 5, 8, 3, 2, 5, 0, 0, 2, 8, 0], [3, 3, 5, 3, 3, 3, 1, 5, 2, 3, 2, 1, 1, 3, 2, 0, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1], [0], [2], [5], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))))", "other_info": {"loss": [2.3016940480792654, 2.302565773511843, 2.302242870139345, 2.300398447888009, 2.3027477984289217, 2.302085766277734], "accuracy": [0.09509972482919693, 0.08836349099874496, 0.08915598690509796, 0.0956280529499054, 0.08717474341392517, 0.0936468094587326], "val_loss": [1.9709812573024206, 1.9709810529436385, 1.9709811210632324, 1.9709811891828264, 1.9709807804652624, 1.9709807804652624], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]