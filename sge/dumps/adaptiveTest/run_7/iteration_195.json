[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.7911428809165955, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.95960471420996, 1.5652005941545675, 1.0088861113163963, 0.881425994939304, 0.7921943260127243, 0.7806946192797322, 0.723681360518597, 0.6985434766899656, 0.6877527039410999, 0.6668661062145246, 0.6399364629599239, 0.6270794989709699, 0.6058567027374265, 0.60727884561284, 0.5722775585489849, 0.5686402784252306, 0.5797239540747805], "accuracy": [0.3473781645298004, 0.4691586196422577, 0.644300639629364, 0.6777176260948181, 0.7017567157745361, 0.7094175219535828, 0.7251353859901428, 0.7341170310974121, 0.7449478507041931, 0.7500990629196167, 0.7559106945991516, 0.7655527591705322, 0.7788931727409363, 0.7677981853485107, 0.7872143983840942, 0.7898560166358948, 0.7821952104568481], "val_loss": [1.659963539668492, 0.8810616561344692, 0.7865749427250454, 0.6338577781404767, 0.6297372920172555, 0.5740511247089931, 0.581138116972787, 0.5203037432261876, 0.5211240904671806, 0.5403724568230766, 0.5222429207393101, 0.46859616892678396, 0.5483839511871338, 0.4898700714111328, 0.4606747967856271, 0.5191836186817714, 0.4489085503986904], "val_accuracy": [0.3893333375453949, 0.643666684627533, 0.6643333435058594, 0.7039999961853027, 0.7066666483879089, 0.7443333268165588, 0.7250000238418579, 0.7670000195503235, 0.7596666812896729, 0.7356666922569275, 0.7673333287239075, 0.7996666431427002, 0.7360000014305115, 0.7670000195503235, 0.7886666655540466, 0.7483333349227905, 0.79666668176651]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.7894285917282104, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.9595900605052705, 1.567179555181877, 0.9982847279844786, 0.8973021747854644, 0.7896511332233899, 0.7740489428132485, 0.7153472208768905, 0.6958881345218466, 0.6871814764391524, 0.6792433270846281, 0.6325020410239562, 0.6261009690531997, 0.6033763100584154, 0.6005126914532745, 0.5743946225698897, 0.5573621689367918, 0.5855509596903248], "accuracy": [0.3475102484226227, 0.4694227874279022, 0.6510368585586548, 0.6695284843444824, 0.7047945857048035, 0.7059833407402039, 0.7281733155250549, 0.7300224304199219, 0.7458723783493042, 0.739928662776947, 0.7658169269561768, 0.76542067527771, 0.78113853931427, 0.7688548564910889, 0.7868181467056274, 0.7996301651000977, 0.7783648371696472], "val_loss": [1.6596174921308244, 0.8844593933650425, 0.7887639658791679, 0.6391874892371041, 0.6003608192716327, 0.5809016908918109, 0.5719250610896519, 0.551343287740435, 0.5271216630935669, 0.5418135608945575, 0.515275205884661, 0.46724084445408415, 0.53543450151171, 0.4878964253834316, 0.4551745653152466, 0.4859538418906076, 0.45474633148738314], "val_accuracy": [0.3893333375453949, 0.6396666765213013, 0.6613333225250244, 0.7046666741371155, 0.7203333377838135, 0.7390000224113464, 0.7306666374206543, 0.7509999871253967, 0.7556666731834412, 0.7360000014305115, 0.7716666460037231, 0.7953333258628845, 0.7486666440963745, 0.7609999775886536, 0.7926666736602783, 0.7716666460037231, 0.7906666398048401]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 1, 4, 1, 1, 1, 9, 8, 2, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 1, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.7894285917282104, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.959617391033825, 1.5644318835925213, 1.0101135301709632, 0.8810474856764869, 0.7809841056793373, 0.7982270286587393, 0.7259963631566961, 0.6925216172081904, 0.691895633443881, 0.668519103264119, 0.6376697998147016, 0.6305860779729769, 0.5986618333567624, 0.6023352610326447, 0.5715764004320375, 0.5592609676135735, 0.5854690597986643], "accuracy": [0.34724608063697815, 0.4694227874279022, 0.6432439684867859, 0.6802271604537964, 0.7041342258453369, 0.7012283802032471, 0.7248712182044983, 0.7360982894897461, 0.7440232634544373, 0.7465327978134155, 0.761590301990509, 0.7606657147407532, 0.7824593782424927, 0.7688548564910889, 0.7897239327430725, 0.7955356240272522, 0.7825914621353149], "val_loss": [1.6599515506199427, 0.8781660284314837, 0.7921768256596157, 0.6319274221147809, 0.5901026896068028, 0.5747559581484113, 0.5747489248003278, 0.5212781429290771, 0.5068393264498029, 0.5522103479930333, 0.5154263121741158, 0.4685842309679304, 0.534691504069737, 0.47538556371416363, 0.45977633340018137, 0.5040584121431623, 0.46708124024527414], "val_accuracy": [0.3893333375453949, 0.6453333497047424, 0.6620000004768372, 0.7059999704360962, 0.7310000061988831, 0.7450000047683716, 0.734666645526886, 0.7683333158493042, 0.7726666927337646, 0.7316666841506958, 0.768666684627533, 0.7979999780654907, 0.7546666860580444, 0.781333327293396, 0.7929999828338623, 0.7666666507720947, 0.7823333144187927]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 5, 0, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.7397142648696899, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(sigma))", "other_info": {"loss": [2.2991992274390047, 2.2917787539031544, 2.282827563368334, 2.275118128781967, 2.2666491383590466, 2.2591857173581085, 2.252484508178584, 2.2415750564569654, 2.2323084806233915, 2.2211895662606778, 2.2105337013075332, 2.1947061642049848, 2.184377058039504, 2.1673337003070254, 2.1536020080348237, 2.1344786727307197, 2.114839552730822, 2.091382819899888, 2.065938260781688, 2.0436432555587523, 2.0146434456365867, 1.9836537260279254, 1.953613648624342, 1.9186851044907909, 1.8780573603971806, 1.8447149927117616, 1.8012111547081116, 1.7584640949535457, 1.7258629439104156, 1.6859762898651585, 1.6451765267982175, 1.617056406909417, 1.5691681756099076, 1.5405703809487743, 1.5031095377253567, 1.4725797775162996, 1.4373923973117002, 1.4141995942729606, 1.3839532065589935, 1.359948084275988, 1.3281720428576385, 1.313044739342668, 1.283197354851555, 1.2621889427558164, 1.2502610041968905, 1.2307591192820888, 1.2089885961519744, 1.2096833302722458, 1.187701987064494, 1.1678955730524643, 1.1539963250146992, 1.1333858250249031, 1.1329057825680784, 1.110332957033342, 1.1145740886799584, 1.0973539577105482, 1.077990223970616, 1.0779453800842824, 1.0610877578331888, 1.0588252187137355, 1.0517368974970347, 1.0282971968094687, 1.021356969036525, 1.0168888768531297, 1.011771392072779, 1.0020042710127282, 0.9905635466145455, 0.9913444997864062, 0.9848147505908327, 0.9612556730735697, 0.972612422557476, 0.9653235354427931, 0.9570881555723145, 0.9590409324389911, 0.9522595894476835, 0.9353519654182663, 0.9280590642366143, 0.92884611063913, 0.9311493049759387, 0.9160961537722662, 0.9199654749828228, 0.9071374571617836, 0.9156366769490603, 0.9085145426967975, 0.8936338404528359, 0.8920340946778457, 0.89061613364573, 0.8806193734613533, 0.8813529165508158, 0.8724841495168648, 0.8761842607696059, 0.8748531865642182, 0.8654798899407337, 0.8677785442316647, 0.8552113057536975, 0.8620889555067985, 0.8478932177559134, 0.8625341679725224, 0.8539941485500323, 0.8448579703197976], "accuracy": [0.09932637959718704, 0.11610091477632523, 0.137630432844162, 0.1636507660150528, 0.18980319797992706, 0.20618148148059845, 0.22176727652549744, 0.24501386284828186, 0.26680755615234375, 0.28199708461761475, 0.29124289751052856, 0.31462156772613525, 0.3205653131008148, 0.3409060835838318, 0.3399814963340759, 0.3556993901729584, 0.3741909861564636, 0.3801347315311432, 0.39624884724617004, 0.3987584114074707, 0.41262713074684143, 0.4231937527656555, 0.4221371114253998, 0.43204331398010254, 0.4443270266056061, 0.454629510641098, 0.459780752658844, 0.4772156774997711, 0.4765552878379822, 0.4799894392490387, 0.4843481779098511, 0.4896314740180969, 0.5042926669120789, 0.5075947642326355, 0.5208030939102173, 0.5218597054481506, 0.5385021567344666, 0.5404834151268005, 0.5414080023765564, 0.5548804402351379, 0.5569937825202942, 0.5621450543403625, 0.5650508403778076, 0.573107898235321, 0.5848633050918579, 0.5838066339492798, 0.5842028856277466, 0.5868445634841919, 0.5908070206642151, 0.5947695374488831, 0.6077136397361755, 0.6131290197372437, 0.6112799048423767, 0.6197332143783569, 0.6110157370567322, 0.6222427487373352, 0.6185444593429565, 0.6289790272712708, 0.6318848133087158, 0.63096022605896, 0.6383568644523621, 0.6432439684867859, 0.6402060389518738, 0.6445648074150085, 0.6472064256668091, 0.6527539491653442, 0.653150200843811, 0.6518293619155884, 0.6579051613807678, 0.6635847091674805, 0.6601505875587463, 0.6647734642028809, 0.663848876953125, 0.6666226387023926, 0.6623960137367249, 0.6713775992393494, 0.6713775992393494, 0.6740192770957947, 0.67666095495224, 0.6836613416671753, 0.6779817938804626, 0.6802271604537964, 0.6787742972373962, 0.6827367544174194, 0.6866992712020874, 0.6868313550949097, 0.6836613416671753, 0.6833971738815308, 0.6894729733467102, 0.6901333928108215, 0.6907938122749329, 0.6881521344184875, 0.6927750706672668, 0.6889446377754211, 0.6977941989898682, 0.6942279934883118, 0.6999075412750244, 0.6930392384529114, 0.7017567157745361, 0.7017567157745361], "val_loss": [1.9637128284999303, 1.956547669001988, 1.9494067600795202, 1.9421231406075614, 1.934619699205671, 1.9267056328909737, 1.9184877531869071, 1.909646715436663, 1.900123119354248, 1.8897134917122977, 1.8784875188555037, 1.8660561016627721, 1.8525630405970983, 1.8375500270298548, 1.8212836810520716, 1.8033053534371513, 1.7836942672729492, 1.762183666229248, 1.738530090876988, 1.7131907939910889, 1.6857585566384452, 1.6560005460466658, 1.6242895126342773, 1.5906835283551897, 1.5548808574676514, 1.517791679927281, 1.479255540030343, 1.4398036684308733, 1.400618042264666, 1.3611529554639543, 1.3220933505467005, 1.2840094906943185, 1.2464244025094169, 1.2109430517469133, 1.1763807705470495, 1.1443160942622594, 1.113468885421753, 1.0849077360970634, 1.0577223982129778, 1.0323897770472936, 1.008601086480277, 0.9870399747576032, 0.9661863190787179, 0.9466832705906459, 0.928955078125, 0.9117041655949184, 0.8958126476832798, 0.8820558616093227, 0.8681902374540057, 0.8550731284277779, 0.8427550622395107, 0.8312526089804513, 0.8209314516612461, 0.8104513883590698, 0.8013203314372471, 0.7919602223805019, 0.7829262699399676, 0.7749921764646258, 0.7671183688299996, 0.760315111705235, 0.7531189237322126, 0.7460499831608364, 0.7397546086992536, 0.7337408236094883, 0.7278093610491071, 0.722097567149571, 0.7167351586478097, 0.7117556163242885, 0.7064992359706334, 0.7011584213801793, 0.6965943064008441, 0.6922802754810878, 0.6883929797581264, 0.6854386329650879, 0.6810257605143956, 0.6770988873073033, 0.6731723546981812, 0.6699317353112357, 0.6662196091243199, 0.6630121299198696, 0.6606355735233852, 0.6576016971043178, 0.6547029869897025, 0.6516409942081997, 0.6482803821563721, 0.6454773630414691, 0.6434838431222099, 0.6404422351292202, 0.6378517150878906, 0.6353030204772949, 0.6329219000680106, 0.6307096481323242, 0.6288566248757499, 0.6261488369532994, 0.6236883572169712, 0.6219196149281093, 0.6190467391695295, 0.6170379093715123, 0.6153237819671631, 0.6132753576551165], "val_accuracy": [0.09099999815225601, 0.1586666703224182, 0.2253333330154419, 0.2783333361148834, 0.3166666626930237, 0.34566667675971985, 0.3643333315849304, 0.3779999911785126, 0.3880000114440918, 0.4009999930858612, 0.4129999876022339, 0.4206666648387909, 0.43433332443237305, 0.44566667079925537, 0.4573333263397217, 0.4650000035762787, 0.4723333418369293, 0.48366665840148926, 0.49533334374427795, 0.5043333172798157, 0.5120000243186951, 0.5226666927337646, 0.5316666960716248, 0.5419999957084656, 0.5476666688919067, 0.5550000071525574, 0.5590000152587891, 0.5686666369438171, 0.5759999752044678, 0.5873333215713501, 0.5950000286102295, 0.6010000109672546, 0.609000027179718, 0.6176666617393494, 0.6286666393280029, 0.637666642665863, 0.6460000276565552, 0.6499999761581421, 0.6573333144187927, 0.6636666655540466, 0.6653333306312561, 0.6669999957084656, 0.6700000166893005, 0.6729999780654907, 0.6756666898727417, 0.6790000200271606, 0.6806666851043701, 0.6806666851043701, 0.6840000152587891, 0.684333324432373, 0.6866666674613953, 0.6866666674613953, 0.6903333067893982, 0.690666675567627, 0.6923333406448364, 0.6930000185966492, 0.6959999799728394, 0.6970000267028809, 0.6990000009536743, 0.699999988079071, 0.7013333439826965, 0.7039999961853027, 0.7023333311080933, 0.70333331823349, 0.7066666483879089, 0.7083333134651184, 0.7096666693687439, 0.7103333473205566, 0.7123333215713501, 0.7129999995231628, 0.7149999737739563, 0.715666651725769, 0.7163333296775818, 0.7179999947547913, 0.722000002861023, 0.7206666469573975, 0.722000002861023, 0.722000002861023, 0.7253333330154419, 0.7246666550636292, 0.7243333458900452, 0.7250000238418579, 0.7263333201408386, 0.7296666502952576, 0.731333315372467, 0.7293333411216736, 0.7296666502952576, 0.731333315372467, 0.7323333621025085, 0.7310000061988831, 0.7306666374206543, 0.7329999804496765, 0.734666645526886, 0.7363333106040955, 0.7369999885559082, 0.7363333106040955, 0.7366666793823242, 0.7390000224113464, 0.7383333444595337, 0.7390000224113464]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [20, 49, 44]], "fitness": -0.7131428718566895, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.300171339973215, 2.295096792675296, 2.288460247300289, 2.2830659293574174, 2.277155971577485, 2.272509046092781, 2.2688003680363087, 2.2614261085929463, 2.2560673810235574, 2.249479111143784, 2.243821489781027, 2.2341180630899173, 2.230079785817965, 2.2211101207246933, 2.215240005205462, 2.2063208899525066, 2.1977989611262263, 2.186618138518489, 2.1761479144712967, 2.167597768644001, 2.1550522846332267, 2.142473260220472, 2.1306368729000975, 2.115418139890893, 2.098532372587912, 2.0847464370815714, 2.0652273832736094, 2.045336210811143, 2.030350504739016, 2.0102082413295634, 1.9873510025999628, 1.9712448972736794, 1.9424533240783484, 1.921967654117362, 1.8976930074876939, 1.8711810327555605, 1.8425146736063898, 1.8182440701099103, 1.7912566825273157, 1.76411267900511, 1.7317044149064242, 1.7086921822613792, 1.674892996138806, 1.6472788439167332, 1.6249014436608182, 1.600567661634195, 1.566090699546546, 1.5547200048509888, 1.5274124447821689, 1.5015195633174405, 1.4771714836394452, 1.449574790185453, 1.4344695652827075, 1.411257539364199, 1.4015483306052898, 1.3786069966893013, 1.3561052753940754, 1.3477860650429243, 1.32306922440988, 1.3148279183607816, 1.301461655828128, 1.2756520696461648, 1.2611874053349443, 1.250080076222564, 1.2402892970547559, 1.229568923028264, 1.209287003755349, 1.2073984943943379, 1.193558542798649, 1.169547170821812, 1.1733571269083585, 1.1650711801372986, 1.1525592145477666, 1.150097770855301, 1.1426553059688664, 1.1195155114954993, 1.109559591546145, 1.1079264689493236, 1.1076948487322487, 1.0914136129772785, 1.0875386746804223, 1.0753382203790254, 1.080694903094204, 1.0724182214876758, 1.0521525074037121, 1.0510213742355676, 1.046721719542924, 1.032980003046432, 1.0303156739763848, 1.0210325937733407, 1.02354163413255, 1.0212320009667908, 1.0073692595654822, 1.0098431288306393, 0.9923945314313254, 0.997637325888218, 0.982457375151685, 0.9965218398013939, 0.9865865581118436, 0.9743433692247137], "accuracy": [0.09734513610601425, 0.10659094154834747, 0.12191256135702133, 0.13736626505851746, 0.16114120185375214, 0.1710474193096161, 0.18082155287265778, 0.19614318013191223, 0.21582353115081787, 0.23114515841007233, 0.2366926372051239, 0.25320300459861755, 0.2694492042064667, 0.28041210770606995, 0.2775062620639801, 0.3004887104034424, 0.31264033913612366, 0.31779158115386963, 0.3263769745826721, 0.3354906737804413, 0.3517369031906128, 0.3549068868160248, 0.35345396399497986, 0.3677189350128174, 0.38026681542396545, 0.3879276216030121, 0.38647469878196716, 0.4107779562473297, 0.40681546926498413, 0.4142121374607086, 0.4193633496761322, 0.41183462738990784, 0.4309866726398468, 0.43428874015808105, 0.4439307749271393, 0.43811914324760437, 0.4600449204444885, 0.4550257623195648, 0.4637432396411896, 0.47153612971305847, 0.47747984528541565, 0.4773477613925934, 0.488971084356308, 0.4951789677143097, 0.5028398036956787, 0.4991414546966553, 0.5114251971244812, 0.5050851702690125, 0.514198899269104, 0.518161416053772, 0.5271430611610413, 0.5387663245201111, 0.5342755317687988, 0.5432571768760681, 0.5337471961975098, 0.5472196340560913, 0.5464271306991577, 0.5538238286972046, 0.5583146214485168, 0.5654470920562744, 0.5680887699127197, 0.5781270861625671, 0.5749570727348328, 0.5741645693778992, 0.5761458277702332, 0.579051673412323, 0.5881653428077698, 0.5869766473770142, 0.5933166146278381, 0.6052040457725525, 0.5978074073791504, 0.6029586791992188, 0.6079778075218201, 0.6041474342346191, 0.6028265953063965, 0.6145819425582886, 0.617751955986023, 0.6225069165229797, 0.6173557043075562, 0.6254127621650696, 0.6269977688789368, 0.6283186078071594, 0.6222427487373352, 0.6264694333076477, 0.6413947939872742, 0.6341302394866943, 0.6332056522369385, 0.6380926966667175, 0.6407343745231628, 0.6424514651298523, 0.6485272645950317, 0.6404702067375183, 0.6462818384170532, 0.643772304058075, 0.6543388962745667, 0.6468101739883423, 0.6564522385597229, 0.651168942451477, 0.6559239029884338, 0.656980574131012], "val_loss": [1.9659006255013602, 1.960890225001744, 1.9559205600193568, 1.9509006227765764, 1.9458646093096053, 1.9407260077340263, 1.9355180604117257, 1.9301205362592424, 1.924562726702009, 1.9186929294041224, 1.9126526968819755, 1.9061945506504603, 1.8994415146963937, 1.8922664097377233, 1.88474212374006, 1.8766825539725167, 1.8681002344403947, 1.8589060647147042, 1.848961012704032, 1.8384960719517298, 1.827254159109933, 1.8152262142726354, 1.8024804932730538, 1.788903032030378, 1.7742572511945451, 1.7588790484837122, 1.7423711504255022, 1.724747794015067, 1.7064028467450822, 1.6869698933192663, 1.6664882046835763, 1.6451717104230608, 1.6225520883287703, 1.5992923464093889, 1.5750073024204798, 1.5500545161111015, 1.5241639614105225, 1.4979039941515242, 1.4710029193333216, 1.4440555231911796, 1.4164518969399589, 1.3891010625021798, 1.361440794808524, 1.3339285169328963, 1.3070521695273263, 1.2802680560520716, 1.2540325096675329, 1.2291362285614014, 1.2046194417136056, 1.180790833064488, 1.1576693739209856, 1.1352917126246862, 1.1143547466823034, 1.0935043948037284, 1.0743979045322962, 1.055812222617013, 1.0378234386444092, 1.0210553577968053, 1.0048021929604667, 0.9896546431950161, 0.9752192156655448, 0.9610010555812291, 0.9476030894688198, 0.9349956853049142, 0.9228241784232003, 0.9113988876342773, 0.9000892639160156, 0.8896163872310093, 0.8794929300035749, 0.8692739691053119, 0.8601076773234776, 0.8514013631003243, 0.8430193322045463, 0.8354678324290684, 0.8277361903871808, 0.8202054670878819, 0.8128061124256679, 0.8062090362821307, 0.7997257198606219, 0.7933595180511475, 0.7876058646610805, 0.7816794770104545, 0.7761588607515607, 0.7706850256238665, 0.7651863779340472, 0.7600180762154716, 0.7553456851414272, 0.7502208607537406, 0.7455668449401855, 0.7410027980804443, 0.7367713962282453, 0.7328419855662754, 0.7289796216147286, 0.7251337596348354, 0.7211807114737374, 0.7177187544958932, 0.713694589478629, 0.7103660787854876, 0.707001873425075, 0.7036378894533429], "val_accuracy": [0.07133333384990692, 0.12166666984558105, 0.1626666635274887, 0.20866666734218597, 0.25, 0.2863333225250244, 0.3149999976158142, 0.33266666531562805, 0.3486666679382324, 0.36000001430511475, 0.3683333396911621, 0.3779999911785126, 0.38466668128967285, 0.3970000147819519, 0.40666666626930237, 0.41499999165534973, 0.42100000381469727, 0.43066665530204773, 0.43700000643730164, 0.44566667079925537, 0.45100000500679016, 0.45899999141693115, 0.4673333466053009, 0.47200000286102295, 0.47699999809265137, 0.48366665840148926, 0.4896666705608368, 0.4986666738986969, 0.503333330154419, 0.5096666812896729, 0.5170000195503235, 0.5220000147819519, 0.5316666960716248, 0.5366666913032532, 0.5450000166893005, 0.5493333339691162, 0.5533333420753479, 0.5576666593551636, 0.5649999976158142, 0.5669999718666077, 0.5713333487510681, 0.578000009059906, 0.5870000123977661, 0.5923333168029785, 0.5946666598320007, 0.6010000109672546, 0.6069999933242798, 0.612666666507721, 0.6179999709129333, 0.6243333220481873, 0.6346666812896729, 0.6380000114440918, 0.6463333368301392, 0.6510000228881836, 0.652999997138977, 0.6570000052452087, 0.6616666913032532, 0.6633333563804626, 0.6669999957084656, 0.6683333516120911, 0.6710000038146973, 0.6740000247955322, 0.6733333468437195, 0.6746666431427002, 0.675000011920929, 0.6769999861717224, 0.6800000071525574, 0.6806666851043701, 0.6809999942779541, 0.6830000281333923, 0.6833333373069763, 0.6840000152587891, 0.6853333115577698, 0.6850000023841858, 0.6893333196640015, 0.6899999976158142, 0.6916666626930237, 0.6916666626930237, 0.6933333277702332, 0.6940000057220459, 0.6933333277702332, 0.6940000057220459, 0.6980000138282776, 0.6986666917800903, 0.7003333568572998, 0.7009999752044678, 0.7006666660308838, 0.7016666531562805, 0.7016666531562805, 0.7016666531562805, 0.7036666870117188, 0.7046666741371155, 0.7049999833106995, 0.7073333263397217, 0.7080000042915344, 0.7099999785423279, 0.7116666436195374, 0.7129999995231628, 0.7139999866485596, 0.7136666774749756]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 6, 2, 4, 0, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [3, 4, 0, 3, 2, 5, 5, 0, 7, 5], [0, 3, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10085714608430862, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.multiply(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(tf.math.negative(alpha))))", "other_info": {"loss": [2.3008985073811123, 2.299686240734221, 2.3026353208821257, 2.3025659571990142, 2.3027047533416445, 2.3031859608563168], "accuracy": [0.09721305221319199, 0.10051512718200684, 0.07515519857406616, 0.08836349099874496, 0.09879804402589798, 0.09087307006120682], "val_loss": [1.9679961885724748, 1.9736082213265556, 1.9736171449933733, 1.9737542016165597, 1.9741689137050085, 1.975057533809117], "val_accuracy": [0.1223333328962326, 0.03466666489839554, 0.08533333241939545, 0.11299999803304672, 0.10599999874830246, 0.09200000017881393]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 6, 2, 4, 0, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 4, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 2, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [3.9624409705051955e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05124818533658981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 1, 4, 1, 1, 1, 9, 8, 2, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 1, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1250149.2532822345, 24324687.411438383, 111986426.90054154, 314150259.26509047, 676509839.8245939, 1237529232.838991], "accuracy": [0.09826971590518951, 0.09615638852119446, 0.1022322028875351, 0.09932637959718704, 0.09972262382507324, 0.10342095047235489], "val_loss": [4845011.428571428, 38641214.85714286, 130283081.14285715, 308664219.4285714, 602679606.8571428, 1041224850.2857143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 80, 46, 23], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 3, 1, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [48, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [1, 3, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 4, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)))), tf.math.negative(grad))))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12429005652666092, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [69, 67], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 1, 4, 1, 1, 1, 9, 8, 2, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [48, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 6, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 2, 2, 1, 1, 0, 5, 2, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, alpha), tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06987188011407852, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [42, 11], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [2, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(beta)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303043179964865, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 8, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(alpha))", "other_info": {"loss": [2.3029786607041696, 2.3051118125154706, 2.3059064712443798, 2.3079884763344043, 2.310542230199215, 2.315563881953064, 2.3226481879061365, 2.325261043661448, 2.3343429004259555, 2.3523093136845485, 2.4187564575881564, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.08492933213710785, 0.08598599582910538, 0.07977809756994247, 0.08347642421722412, 0.07898560166358948, 0.07568352669477463, 0.07357019931077957, 0.07726852595806122, 0.08136309683322906, 0.08691058307886124, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720796857561385, 1.9735338347298759, 1.9751450674874442, 1.9770806857517786, 1.9794467517307825, 1.9822778020586287, 1.9857161385672433, 1.9896388053894043, 1.997260229928153, 2.0152920995439803, 2.550692694527762, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027666667476296425, 0.023333333432674408, 0.023000000044703484, 0.024000000208616257, 0.0273333340883255, 0.035999998450279236, 0.04933333396911621, 0.06599999964237213, 0.08900000154972076, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 87], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 1, 4, 1, 1, 1, 9, 8, 2, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [2, 3, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 2, 17, 17, 10, 7, 2, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(beta)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 5, 1, 8, 7, 5, 3, 0, 2, 0, 2, 9, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 0, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 5, 5, 4, 6, 1, 6, 5, 2, 5, 5, 0, 1, 1, 2, 0, 8, 4, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 1, 0, 3, 3, 2, 2, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 24, 13, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, beta)))), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05547483637928963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 9, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [12, 49, 44]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.484245161606478, 4.605524372667165, 9.751132574095276, 18.195371299293203, 30.11262665984023, 45.555039641249685], "accuracy": [0.09668471664190292, 0.09826971590518951, 0.10130762308835983, 0.10077928751707077, 0.09893012791872025, 0.10342095047235489], "val_loss": [2.4162475722176686, 4.712768963405064, 9.03418322971889, 15.40693119594029, 24.073659079415457, 35.302556719098774], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 3, 7, 3, 2, 5, 5, 0, 7, 5], [0, 1, 1, 3, 1, 1], [43, 49, 44]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.square(sigma)), tf.math.square(alpha)), alpha)))", "other_info": {"loss": [1.095989852499192e+22, 3.4573230670621207e+22, 3.7870252397155695e+22, 2.1322538339403968e+22, 3.936265556051265e+22, 2.9237917541321413e+22], "accuracy": [0.09813763201236725, 0.0944393053650856, 0.09166556596755981, 0.09496764093637466, 0.09325055778026581, 0.0936468094587326], "val_loss": [1.9867348924539607e+22, 1.9867348924539607e+22, 1.9867348924539607e+22, 1.9867348924539607e+22, 1.9867348924539607e+22, 1.9867348924539607e+22], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 3, 4, 6, 1, 1, 3, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 9, 7, 3, 2, 5, 5, 0, 7, 5], [3, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302422375553682, 2.302822971073171, 2.3015688570373016, 2.301428050790811, 2.301014311388263, 2.301936033773164], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.08942015469074249, 0.09417514503002167, 0.09602430462837219, 0.09391097724437714], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [5, 6, 1, 8, 7, 1, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 1, 3, 0, 3, 0, 0], [68, 93, 80, 17, 97, 35], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 1, 4, 1, 1, 1, 9, 8, 2, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 3, 0, 3, 2, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [12, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 30, 30, 19, 11, 6, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))))), tf.math.negative(alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302422375553682, 2.302822971073171, 2.3015688570373016, 2.301428050790811, 2.301014311388263, 2.301936033773164], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.08942015469074249, 0.09417514503002167, 0.09602430462837219, 0.09391097724437714], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 3, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68, 60, 5], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 1, 1, 8, 1, 1, 9, 0, 2, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 0, 3, 2, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [12, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 25, 25, 15, 10, 3, 16, 16, 10, 6, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(grad, alpha))), tf.math.add(alpha, grad)))), tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302422375553682, 2.302822971073171, 2.3015688570373016, 2.301428050790811, 2.301014311388263, 2.301936033773164], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.08942015469074249, 0.09417514503002167, 0.09602430462837219, 0.09391097724437714], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [69, 67], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 1, 3, 1, 4, 1, 1, 1, 9, 8, 2, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [48, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 6, 0, 3, 2, 5, 5, 0, 7, 5], [1, 2, 3, 3, 1, 1], [43, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(beta, sigma))", "other_info": {"loss": [2.302422375553682, 2.302822971073171, 2.3015688570373016, 2.301428050790811, 2.301014311388263, 2.301936033773164], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.08942015469074249, 0.09417514503002167, 0.09602430462837219, 0.09391097724437714], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]