[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8217142820358276, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.575320740732393, 2.3011940255251386, 2.2222423394122193, 1.8120346361887596, 1.5016280295212412, 1.2701827678949984, 0.9582157745148449, 0.9460583211266842, 0.7956063961781185, 0.7689344952324079, 0.7201726534158452, 0.6847368464367879, 0.687122142255078, 0.6672210929857001, 0.6382834440476828, 0.5992876303399071, 0.5855969833565615, 0.5854943331127799, 0.5739091716233403, 0.5510530777422192, 0.5820596287704305, 0.5257980824540304, 0.525718725919566, 0.50867838185099, 0.5064079437934806, 0.497676992291205, 0.4915909917559905, 0.4837160422943366, 0.48062362026591987], "accuracy": [0.24395720660686493, 0.11927089840173721, 0.20697398483753204, 0.3700964152812958, 0.4888390004634857, 0.5511821508407593, 0.6395456194877625, 0.6543388962745667, 0.6923788189888, 0.7059833407402039, 0.7268524765968323, 0.737022876739502, 0.728701651096344, 0.7440232634544373, 0.7568352818489075, 0.7714964747428894, 0.7754589915275574, 0.7814027070999146, 0.7778365015983582, 0.7868181467056274, 0.7724210619926453, 0.8055738806724548, 0.802800178527832, 0.8080834746360779, 0.8096684813499451, 0.8158763647079468, 0.8182538747787476, 0.8177255392074585, 0.8226125836372375], "val_loss": [1.974759238106864, 1.963144098009382, 1.6553117207118444, 0.9767911093575614, 1.2244500432695662, 0.8200377396174839, 0.9294893401009696, 0.6215380941118512, 0.5955164432525635, 0.5252496174403599, 0.5418150084359306, 0.4707503148487636, 0.47513176713671, 0.47184344700404574, 0.4950815268925258, 0.4298153264181955, 0.4909151451928275, 0.44366274561200825, 0.4294764825275966, 0.5242748771395002, 0.4536694288253784, 0.4145445227622986, 0.4039249505315508, 0.38157542262758526, 0.3895274060113089, 0.3672179750033787, 0.40773476873125347, 0.3674125671386719, 0.4112146071025303], "val_accuracy": [0.09966666996479034, 0.22633333504199982, 0.3400000035762787, 0.5503333210945129, 0.5806666612625122, 0.6343333125114441, 0.612666666507721, 0.70333331823349, 0.7350000143051147, 0.7586666941642761, 0.7369999885559082, 0.7839999794960022, 0.781333327293396, 0.7796666622161865, 0.7583333253860474, 0.7990000247955322, 0.7673333287239075, 0.7910000085830688, 0.8033333420753479, 0.7436666488647461, 0.7886666655540466, 0.8119999766349792, 0.8226666450500488, 0.8376666903495789, 0.8206666707992554, 0.8293333053588867, 0.8173333406448364, 0.8356666564941406, 0.8116666674613953]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 2, 4, 0, 6, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 0, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [3, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8102856874465942, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.572239342083501, 2.3011901482866897, 2.2233570824682185, 1.719881939661265, 1.8269341017639065, 1.6934974378267882, 1.1960240514318405, 0.9685117855693655, 0.8591787525219075, 0.77744390109999, 0.7504528208793572, 0.6876133988089707, 0.6504370406271995, 0.6660918956734422, 0.5877647067514534, 0.6115286861979462, 0.5760787000603853, 0.585323953460063, 0.5658950098926648, 0.5349860321875529, 0.5747007789187947, 0.5317270883070306, 0.5481421341513126, 0.5099557948197514, 0.49250879462573666, 0.5009181187129559, 0.4769439412783544, 0.4807972293078954, 0.4792710484577885, 0.46808638477904874, 0.46460345894858, 0.46037662482343533, 0.42896494547673, 0.4453937070221083, 0.4558823487746355], "accuracy": [0.244485542178154, 0.11728965491056442, 0.2078985571861267, 0.3761722445487976, 0.4434024691581726, 0.40826839208602905, 0.5717870593070984, 0.6436402201652527, 0.6798309087753296, 0.7016246318817139, 0.7157574892044067, 0.7333245277404785, 0.7564390301704407, 0.748249888420105, 0.7808743715286255, 0.7658169269561768, 0.785101056098938, 0.7769119143486023, 0.7857614755630493, 0.7980451583862305, 0.7845727205276489, 0.804649293422699, 0.7956677079200745, 0.8083476424217224, 0.8101968169212341, 0.8146876096725464, 0.8226125836372375, 0.8249900937080383, 0.8178576231002808, 0.8252542614936829, 0.8278959393501282, 0.829216718673706, 0.8405758738517761, 0.8348963260650635, 0.8315942287445068], "val_loss": [1.9746896880013602, 1.9630845614842005, 1.6690471512930733, 1.3333197321210588, 1.3865061828068324, 0.9601714951651437, 0.788100004196167, 0.7159265109470913, 0.5534175634384155, 0.5192511933190482, 0.49002931799207416, 0.4880196196692331, 0.5083422320229667, 0.4791327033724104, 0.49252985204969135, 0.4424159526824951, 0.4962890829358782, 0.4074651939528329, 0.4873071738651821, 0.5391967296600342, 0.44127810852868216, 0.3983092648642404, 0.4059241158621652, 0.3977162667683193, 0.38440278598240446, 0.3766012191772461, 0.38311139174870085, 0.3963069830621992, 0.37632601601736887, 0.3685522590364729, 0.42727948086602346, 0.35689522538866314, 0.3751918503216335, 0.35919047253472464, 0.3517132146017892], "val_accuracy": [0.09966666996479034, 0.18000000715255737, 0.3296666741371155, 0.518666684627533, 0.38600000739097595, 0.5979999899864197, 0.6679999828338623, 0.6729999780654907, 0.7386666536331177, 0.7666666507720947, 0.7770000100135803, 0.7823333144187927, 0.7603333592414856, 0.7820000052452087, 0.7713333368301392, 0.79666668176651, 0.765999972820282, 0.8149999976158142, 0.7763333320617676, 0.7620000243186951, 0.79666668176651, 0.8209999799728394, 0.8136666417121887, 0.828000009059906, 0.8299999833106995, 0.8323333263397217, 0.8330000042915344, 0.8243333101272583, 0.8353333473205566, 0.8460000157356262, 0.8016666769981384, 0.8373333215713501, 0.8326666951179504, 0.8453333377838135, 0.843666672706604]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 2, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.7857142686843872, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.135177597346449, 1.4192296148936794, 1.1079992463071946, 0.9207598563230048, 0.8495643932301968, 0.7900604372168765, 0.7685176625054636, 0.720311238686674, 0.6985322703869272, 0.6774092393386885, 0.6635112302760879, 0.6468544864005826, 0.6582735455692751, 0.6245657669916885, 0.6103335603148536, 0.6065060388945853, 0.5810014149610786, 0.6076902806278642, 0.6188818490610714, 0.587598528891601, 0.564421428413502], "accuracy": [0.2999603748321533, 0.497820645570755, 0.6015057563781738, 0.6627922058105469, 0.6870955228805542, 0.702681303024292, 0.7152291536331177, 0.7308149337768555, 0.7392682433128357, 0.7436270117759705, 0.7473253011703491, 0.7519482374191284, 0.7458723783493042, 0.7670056819915771, 0.7648923397064209, 0.7746664881706238, 0.778761088848114, 0.7621186375617981, 0.7621186375617981, 0.7751948237419128, 0.7906485199928284], "val_loss": [1.3323791027069092, 0.9742466041019985, 0.7342429501669747, 0.6847542013440814, 0.6213793413979667, 0.5845519644873483, 0.5838673114776611, 0.5328713144574847, 0.5363754715238299, 0.5804568018232074, 0.5103620120457241, 0.5441707032067435, 0.49768195833478657, 0.4705383777618408, 0.49638121468680246, 0.4581106219972883, 0.48131377356392996, 0.5288321120398385, 0.46532985142299105, 0.4652255432946341, 0.47462827818734304], "val_accuracy": [0.5860000252723694, 0.5433333516120911, 0.6896666884422302, 0.6959999799728394, 0.7306666374206543, 0.7413333058357239, 0.7323333621025085, 0.7636666893959045, 0.7566666603088379, 0.7333333492279053, 0.7593333125114441, 0.7483333349227905, 0.7763333320617676, 0.7873333096504211, 0.753333330154419, 0.793666660785675, 0.7763333320617676, 0.753000020980835, 0.7910000085830688, 0.7823333144187927, 0.7746666669845581]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [50, 86, 85, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 6, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.7848571538925171, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 2, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.square(grad))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.135178875110688, 1.4187439493830052, 1.1091056625525932, 0.9206769580712582, 0.8526708104858908, 0.7896499485308862, 0.7606495702428872, 0.7241589986196267, 0.7018539119453289, 0.67647050425613, 0.6501722129942828, 0.6722027872295554, 0.6435384943170035, 0.6163953580892223, 0.6127026351514415, 0.6138400284920575, 0.5826884851857514, 0.6085832982314592, 0.6155464833737868, 0.5881649023191315, 0.5620135120932358], "accuracy": [0.2999603748321533, 0.49808478355407715, 0.6009774208068848, 0.6656980514526367, 0.6856426000595093, 0.7037379741668701, 0.7207766771316528, 0.7250033020973206, 0.7371549606323242, 0.7469290494918823, 0.7526086568832397, 0.739400327205658, 0.7567031979560852, 0.7680623531341553, 0.7684586048126221, 0.7721568942070007, 0.778232753276825, 0.7650244235992432, 0.7621186375617981, 0.7766477465629578, 0.7924976944923401], "val_loss": [1.3324875831604004, 0.9762931891850063, 0.7362188271113804, 0.6867859193256923, 0.6280919143131801, 0.5825904948370797, 0.6237467527389526, 0.5329217570168632, 0.5424351692199707, 0.5074171509061541, 0.49630955287388395, 0.5221383741923741, 0.48597608293805805, 0.47213421549115864, 0.48993114062717985, 0.45988283838544575, 0.4906537873404367, 0.5177912882396153, 0.4644865649087088, 0.4591856173106602, 0.4971164124352591], "val_accuracy": [0.5849999785423279, 0.5396666526794434, 0.687333345413208, 0.6959999799728394, 0.7296666502952576, 0.7456666827201843, 0.7093333601951599, 0.765333354473114, 0.765666663646698, 0.7723333239555359, 0.7850000262260437, 0.7683333158493042, 0.7829999923706055, 0.7913333177566528, 0.7886666655540466, 0.7973333597183228, 0.7633333206176758, 0.7580000162124634, 0.7833333611488342, 0.7870000004768372, 0.7593333125114441]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 2, 4, 5, 2, 2, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 3, 3, 3, 1, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [42, 61, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.7268571257591248, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, grad)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.299401174557129, 2.292700306425446, 2.28818501659026, 2.277458982381996, 2.2720571182753826, 2.2670555093647105, 2.257497848568182, 2.251193899094956, 2.2427171477079866, 2.2340653437066624, 2.2255649930056864, 2.2194488421407246, 2.2079777997545578, 2.194094574793124, 2.184685879537159, 2.170145739905665, 2.1583218503984023, 2.1426805660410047, 2.125543049345116, 2.1107069726444396, 2.091862893202175, 2.0688090745122, 2.047111668465176, 2.0255057742141886, 2.0010758408339995, 1.9709752856338847, 1.9458546675333273, 1.9212058157480594, 1.8815338588929242, 1.8552292758101219, 1.8191245014263482, 1.7893978356212878, 1.7561410796514765, 1.7166780375880084, 1.6848199209280774, 1.655323236121824, 1.6198132822400528, 1.5897759335498611, 1.5576101834700644, 1.5310585424490986, 1.4896177713031136, 1.4715362241034808, 1.4446482649411287, 1.4162937088444751, 1.392892653711279, 1.379709146530117, 1.3519000540855397, 1.333219961829709, 1.315794124295919, 1.2957679322839428, 1.2825835420943332, 1.2540830471858593, 1.2464398163940456, 1.2294063450653696, 1.2205583919481815, 1.2021229907018067, 1.1875317300929527, 1.1698990181657254, 1.1542899785119276, 1.1418901422099037, 1.1349310132380506, 1.130271582335151, 1.108531791488996, 1.1062102854889555, 1.0950513136243587, 1.0925307904157688, 1.0892368469885736, 1.0736405716722102, 1.063090252696783, 1.0509615719294771, 1.0371192719847881, 1.037105740305455, 1.0377693182646464, 1.0225466159844616, 1.0150062326175064, 1.0133062626912122, 1.0032870353504242, 0.9929274773285957, 0.9937772933659914, 0.9815934662097134, 0.9868371801259196, 0.9619955387113589, 0.9720217662637952, 0.9655874677542698, 0.9467027959271256, 0.9515390683946168, 0.9484005346825377, 0.9384018976643352, 0.9404183573506181, 0.9328139613506391, 0.9286351423804565, 0.9359033441326291, 0.9237342216807617, 0.9206918371178769, 0.9202822689304042, 0.9055460446058184, 0.8966486984555118, 0.9061597396731927, 0.8982173184740104, 0.8928667400979473], "accuracy": [0.09879804402589798, 0.10936468094587326, 0.12679962813854218, 0.160084530711174, 0.1776515692472458, 0.18438778817653656, 0.2032756507396698, 0.22335226833820343, 0.23801347613334656, 0.26244881749153137, 0.2685246467590332, 0.275260865688324, 0.2919033169746399, 0.31924447417259216, 0.3140932619571686, 0.337339848279953, 0.3427552580833435, 0.3559635579586029, 0.36705851554870605, 0.36864352226257324, 0.3815876245498657, 0.40087175369262695, 0.40126800537109375, 0.4060229957103729, 0.4189670979976654, 0.43059042096138, 0.4309866726398468, 0.4279487431049347, 0.4435345530509949, 0.44802534580230713, 0.4625544846057892, 0.46189406514167786, 0.4651961326599121, 0.4745740294456482, 0.4861973226070404, 0.4934619069099426, 0.49887728691101074, 0.5064060091972351, 0.507330596446991, 0.5172368288040161, 0.5311055183410645, 0.531369686126709, 0.5367851257324219, 0.5385021567344666, 0.5415400862693787, 0.5439175963401794, 0.5493329763412476, 0.5563333630561829, 0.5622771382331848, 0.5650508403778076, 0.5649187564849854, 0.5789195895195007, 0.5791836977005005, 0.5828820466995239, 0.5881653428077698, 0.5845991373062134, 0.5863162279129028, 0.5933166146278381, 0.6034870147705078, 0.6042794585227966, 0.609959065914154, 0.6123365759849548, 0.6193369626998901, 0.6149781942367554, 0.6211860775947571, 0.6184123754501343, 0.6239598393440247, 0.6305639743804932, 0.6297714710235596, 0.6353189945220947, 0.6396777033805847, 0.637432336807251, 0.6296393871307373, 0.6336019039154053, 0.6495839357376099, 0.6519614458084106, 0.6491876840591431, 0.6642451286315918, 0.6547351479530334, 0.6561880707740784, 0.6522256135940552, 0.6646413803100586, 0.6618676781654358, 0.6585655808448792, 0.663848876953125, 0.667811393737793, 0.6716417670249939, 0.6713775992393494, 0.6690001487731934, 0.672698438167572, 0.6745476126670837, 0.6712455153465271, 0.6742834448814392, 0.6770572066307068, 0.6717738509178162, 0.6767930388450623, 0.6824725866317749, 0.6824725866317749, 0.6814159154891968, 0.6820763349533081], "val_loss": [1.9647142546517509, 1.9585541997637068, 1.952474525996617, 1.9462203298296248, 1.9399668829781669, 1.9334887095860072, 1.9266574723379952, 1.919581753867013, 1.9120006561279297, 1.9040164947509766, 1.895484106881278, 1.8865154130118233, 1.8767433847699846, 1.866032532283238, 1.8545173236301966, 1.8418855667114258, 1.8284303801400321, 1.8137806483677454, 1.7979270390101842, 1.7809450285775321, 1.7625370025634766, 1.7426929473876953, 1.721498693738665, 1.6987934112548828, 1.6747752598353796, 1.6489205701010567, 1.621612855366298, 1.5931124346596854, 1.562818969999041, 1.5317036764962333, 1.499185391834804, 1.4662378515516008, 1.432919672557286, 1.3990168912070138, 1.365595476967948, 1.332413979939052, 1.299208062035697, 1.266981942313058, 1.235438551221575, 1.2052165099552699, 1.1757680007389613, 1.1479672704424178, 1.1216938495635986, 1.096581084387643, 1.0726664406912667, 1.0504175594874792, 1.0292485782078333, 1.0091958727155412, 0.9905159814017159, 0.9724770614079067, 0.956383500780378, 0.9402164391108921, 0.9252575465611049, 0.9113106046404157, 0.8980051108769008, 0.8852246148245675, 0.8731473173413958, 0.861780047416687, 0.8506757361548287, 0.8401913472584316, 0.8302113328661237, 0.8209185600280762, 0.8119476011821202, 0.8033889532089233, 0.7955489839826312, 0.7877005508967808, 0.781069312776838, 0.7742022616522652, 0.7675951038088117, 0.761084931237357, 0.7549254894256592, 0.7491661650793893, 0.7440578256334577, 0.7385998112814767, 0.7331718036106655, 0.7277988536017281, 0.7231927769524711, 0.7177894115447998, 0.7131197111947196, 0.7084767307553973, 0.7046100412096296, 0.7005960089819772, 0.6963948351996285, 0.6930381740842547, 0.6890152522495815, 0.6855600731713432, 0.682304961340768, 0.67928147315979, 0.6761932713644845, 0.6730039119720459, 0.6704209872654506, 0.6676130975995745, 0.6649634327207293, 0.6619993618556431, 0.6592814411435809, 0.6565278768539429, 0.6541589839117867, 0.651476229940142, 0.6491345167160034, 0.647108827318464], "val_accuracy": [0.08166666328907013, 0.14300000667572021, 0.1966666728258133, 0.24833333492279053, 0.28733333945274353, 0.3153333365917206, 0.33799999952316284, 0.35366666316986084, 0.36500000953674316, 0.3766666650772095, 0.3889999985694885, 0.4023333191871643, 0.41233333945274353, 0.42233332991600037, 0.4320000112056732, 0.44200000166893005, 0.4533333480358124, 0.4606666564941406, 0.4676666557788849, 0.47200000286102295, 0.48100000619888306, 0.4909999966621399, 0.5009999871253967, 0.5070000290870667, 0.5176666378974915, 0.5223333239555359, 0.5293333530426025, 0.5386666655540466, 0.5453333258628845, 0.5496666431427002, 0.5563333630561829, 0.5606666803359985, 0.5663333535194397, 0.5753333568572998, 0.5830000042915344, 0.5960000157356262, 0.6010000109672546, 0.6046666502952576, 0.612333357334137, 0.6226666569709778, 0.6359999775886536, 0.6383333206176758, 0.6456666588783264, 0.6516666412353516, 0.656333327293396, 0.6616666913032532, 0.6646666526794434, 0.6646666526794434, 0.6679999828338623, 0.6700000166893005, 0.6740000247955322, 0.6740000247955322, 0.675000011920929, 0.6783333420753479, 0.6796666383743286, 0.6826666593551636, 0.6830000281333923, 0.6856666803359985, 0.684333324432373, 0.6859999895095825, 0.6899999976158142, 0.6919999718666077, 0.6933333277702332, 0.6930000185966492, 0.6946666836738586, 0.6956666707992554, 0.6956666707992554, 0.6993333101272583, 0.6996666789054871, 0.7003333568572998, 0.7020000219345093, 0.7046666741371155, 0.7059999704360962, 0.7056666612625122, 0.7056666612625122, 0.7059999704360962, 0.7066666483879089, 0.7103333473205566, 0.7110000252723694, 0.7123333215713501, 0.7129999995231628, 0.7126666903495789, 0.7160000205039978, 0.715666651725769, 0.7193333506584167, 0.7170000076293945, 0.7179999947547913, 0.7179999947547913, 0.7206666469573975, 0.7233333587646484, 0.7226666808128357, 0.7229999899864197, 0.7233333587646484, 0.7233333587646484, 0.7263333201408386, 0.7263333201408386, 0.7253333330154419, 0.7253333330154419, 0.7276666760444641, 0.7266666889190674]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 2, 9, 4, 0, 2, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 0, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 0, 1, 1, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 61, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.7022857069969177, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.846100750521835, 1.129535693211279, 0.8508476488987973, 0.8752892576172808, 0.7751153577446324, 0.776280350185042, 0.7318495685760419, 0.8122690052734847, 0.8461155437475277, 0.7977444974973988, 0.8215296754763347], "accuracy": [0.3895126283168793, 0.5964865684509277, 0.6794346570968628, 0.6900013089179993, 0.7168141603469849, 0.72672039270401, 0.735041618347168, 0.7129837274551392, 0.6892088055610657, 0.7193237543106079, 0.6995112895965576], "val_loss": [0.9668432303837368, 0.6300468615123204, 0.6538040637969971, 0.5620394604546683, 0.6233208179473877, 0.5107980796269008, 0.665311166218349, 0.6094305344990322, 0.5660160609654018, 0.5841552870614188, 0.5525908640452794], "val_accuracy": [0.5746666789054871, 0.7223333120346069, 0.7333333492279053, 0.7433333396911621, 0.7576666474342346, 0.7763333320617676, 0.7526666522026062, 0.7476666569709778, 0.7599999904632568, 0.734333336353302, 0.7559999823570251]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [12, 49, 44]], "fitness": -0.5788571238517761, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.201649437742998, 2.1624381403645283, 1.9048797225341223, 1.780849018447734, 1.7809687181785674, 1.6543666434530506, 1.6641470730627501, 1.6358446789266505, 1.5983635473245044, 1.6075302876847972, 1.5578046248116908, 1.5528390696177534, 1.519680157124705], "accuracy": [0.2896578907966614, 0.21093647181987762, 0.2859595715999603, 0.32479196786880493, 0.3237352967262268, 0.3583410382270813, 0.36164310574531555, 0.3563597798347473, 0.3699643313884735, 0.37670058012008667, 0.3941355049610138, 0.3987584114074707, 0.40866464376449585], "val_loss": [1.947761126926967, 1.768315247126988, 1.3843202590942383, 1.3169187137058802, 1.2125094958714075, 1.307098422731672, 1.261641366141183, 1.084029027393886, 1.108123438698905, 0.9855418886457171, 0.9656739575522286, 1.0512232439858573, 1.0939183916364397], "val_accuracy": [0.18266665935516357, 0.3330000042915344, 0.37166666984558105, 0.49266666173934937, 0.5373333096504211, 0.5080000162124634, 0.4779999852180481, 0.6226666569709778, 0.5569999814033508, 0.6186666488647461, 0.6186666488647461, 0.596666693687439, 0.5523333549499512]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 5, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [5.136576421988546e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.057852331548929214, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 2, 4, 5, 2, 2, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022938824254195, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 2, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [9, 4, 0, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), beta))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3022938824254195, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 8, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))", "other_info": {"loss": [2.939587334978141, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03354907035827637, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17723.54296875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 85, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1270285.4813893463, 24371773.868181217, 114267398.6506406, 311502992.6995113, 670228260.0787214, 1246937831.299432], "accuracy": [0.10500594228506088, 0.10117553919553757, 0.09893012791872025, 0.09972262382507324, 0.10711926966905594, 0.09311848133802414], "val_loss": [4845011.428571428, 38641214.85714286, 130283081.14285715, 308664219.4285714, 602679606.8571428, 1041224850.2857143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 85, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022938824254195, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 2, 2, 4, 5, 2, 8, 0, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 85, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 3, 3, 3, 1, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [0, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 9, 6, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma))))", "other_info": {"loss": [2.433424152349297e+26, 2.7652432895282295e+26, 2.8636608872552237e+26, 2.8518457300357502e+26, 2.8622457690760346e+26, 2.7879057654851177e+26], "accuracy": [0.1006472036242485, 0.09681680053472519, 0.10130762308835983, 0.09668471664190292, 0.09391097724437714, 0.09972262382507324], "val_loss": [2.331942095188975e+26, 2.331942095188975e+26, 2.331942095188975e+26, 2.331942095188975e+26, 2.331942095188975e+26, 2.331942095188975e+26], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 0, 0, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 85, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 9, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 2, 1, 1, 0, 0, 4, 3, 1, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [281256.670087122, 5375452.031964074, 25175701.300224543, 68599099.9466385, 147558682.76951525, 274482790.6104874], "accuracy": [0.10474177449941635, 0.10117553919553757, 0.09893012791872025, 0.09972262382507324, 0.10711926966905594, 0.09311848133802414], "val_loss": [1070171.7857142857, 8516843.714285715, 28695790.285714287, 67962768.0, 132673325.71428572, 229183035.42857143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))", "other_info": {"loss": [2.9396455050805903, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03354907035827637, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17723.242745535714, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 3, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [79, 49, 44]], "fitness": -0.06914285570383072, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))), alpha)", "other_info": {"loss": [2.302101663295477, 2.301851759056421, 2.30358111019132, 2.299658480164177, 2.3005190127718764, 2.30206318387203, 2.3001271277654283, 2.3005230563459396, 2.30052749591969, 2.2998419112186737, 2.2999899044422314, 2.3015233818503136, 2.3010144056409123, 2.2988340985017635, 2.3010105796383673, 2.2995935180136526, 2.2998412494976854, 2.2999336649287945, 2.3004200605274807, 2.300740406576511, 2.301310945448386, 2.3000118780633665, 2.3002318305236127, 2.3011229681915153, 2.3003943628717516, 2.2990228260323953, 2.3002586999920145, 2.301369428886572, 2.2995903727841682, 2.2997142819208225, 2.299177996155892, 2.300327264621761, 2.3000113671844065, 2.2988287484278973, 2.29901380747411, 2.2996962788460547, 2.3005528955128307, 2.300184181164505, 2.2993255274690387, 2.300041759869111], "accuracy": [0.09232597798109055, 0.08809932321310043, 0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.0886276587843895, 0.09417514503002167, 0.09906221181154251, 0.09034473448991776, 0.09734513610601425, 0.09430722147226334, 0.09298639744520187, 0.0948355570435524, 0.1022322028875351, 0.09496764093637466, 0.09668471664190292, 0.09760929644107819, 0.09813763201236725, 0.09655263274908066, 0.09602430462837219, 0.09325055778026581, 0.09668471664190292, 0.09509972482919693, 0.09509972482919693, 0.09866596013307571, 0.09470347315073013, 0.09536388516426086, 0.08928807079792023, 0.10593052208423615, 0.10249637067317963, 0.09377889335155487, 0.09721305221319199, 0.1022322028875351, 0.1010434553027153, 0.1022322028875351, 0.09826971590518951, 0.09879804402589798, 0.09747721254825592, 0.09708096832036972, 0.09734513610601425], "val_loss": [1.9707786696297782, 1.970590659550258, 1.970400674002511, 1.970301559993199, 1.9701934541974748, 1.9700590542384557, 1.9699888910566057, 1.9699187278747559, 1.969860553741455, 1.9698214530944824, 1.9697769709995814, 1.9697237695966447, 1.9697305134364538, 1.9697467940194267, 1.9697386196681432, 1.9697324207850866, 1.9697507449558802, 1.969742979322161, 1.9697909355163574, 1.96981566292899, 1.9698262214660645, 1.9698587145124162, 1.969881807054792, 1.969862461090088, 1.9698685918535506, 1.9698998587472099, 1.9698880059378487, 1.9698654583522253, 1.9698741095406669, 1.9698652539934431, 1.9698613030569894, 1.969851289476667, 1.9698237010410853, 1.9698279925755091, 1.969789913722447, 1.96977356501988, 1.9697418212890625, 1.9697449547903878, 1.9697504724775041, 1.9697576931544714], "val_accuracy": [0.03733333200216293, 0.0403333343565464, 0.0430000014603138, 0.0430000014603138, 0.04333333298563957, 0.04466666653752327, 0.046666666865348816, 0.04766666516661644, 0.04899999871850014, 0.050999999046325684, 0.052666667848825455, 0.05400000140070915, 0.055666666477918625, 0.05766666680574417, 0.057999998331069946, 0.05900000035762787, 0.05833333358168602, 0.05966666713356972, 0.06066666543483734, 0.061666667461395264, 0.06233333423733711, 0.06300000101327896, 0.06366666406393051, 0.06466666609048843, 0.06599999964237213, 0.06599999964237213, 0.06700000166893005, 0.06833333522081375, 0.06933332979679108, 0.07066666334867477, 0.07100000232458115, 0.07133333384990692, 0.07233333587646484, 0.07433333247900009, 0.07533333450555801, 0.07500000298023224, 0.07533333450555801, 0.07400000095367432, 0.07500000298023224, 0.07500000298023224]}}]