[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8122857213020325, "mapping_values": [1, 3, 3, 1, 2, 1, 16, 16, 11, 5, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), grad), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.062350459055358, 1.4623632035660408, 1.066454654372269, 0.9504735763550687, 0.8275319445071802, 0.7689697582723914, 0.7431884002235225, 0.7185869222272421, 0.6791301795032125, 0.6614722271463764, 0.6386685781648304, 0.6379961165785396, 0.6033937827770216, 0.6126151616389741, 0.5864477710102873, 0.5879359457077462, 0.5534057777949202, 0.5420455232965254, 0.5332933369014777, 0.5238682832566424, 0.5247495605598871, 0.5279895714355608, 0.5031638009405532, 0.4935012893819412, 0.4802598751507667, 0.4831392438955563, 0.4809723663733163, 0.4634214982758455, 0.44721857648972174, 0.4560010539990973, 0.4490798920326072], "accuracy": [0.3167349100112915, 0.5101043581962585, 0.6155065298080444, 0.6460176706314087, 0.6896050572395325, 0.7103421092033386, 0.722757875919342, 0.7323999404907227, 0.7384757399559021, 0.7386078238487244, 0.7491744756698608, 0.7574957013130188, 0.7646281719207764, 0.7663452625274658, 0.776251494884491, 0.7718927264213562, 0.7902522683143616, 0.7942147850990295, 0.7952714562416077, 0.8043851256370544, 0.8061022162437439, 0.8049134612083435, 0.8053097128868103, 0.8158763647079468, 0.8235371708869934, 0.8215559124946594, 0.8215559124946594, 0.8240655064582825, 0.8354246616363525, 0.8274996876716614, 0.8347642421722412], "val_loss": [1.5463810307638985, 0.8619212933949062, 0.8694351400647845, 0.6300001655306134, 0.6321623155048915, 0.6437040397099086, 0.57473771912711, 0.5648208345685687, 0.5240751675197056, 0.5114654302597046, 0.5270886761801583, 0.4913391556058611, 0.4868752786091396, 0.4391073840005057, 0.45819296155657085, 0.4440929208483015, 0.43433633872440885, 0.4156269942011152, 0.42105615990502493, 0.394659229687282, 0.4472465515136719, 0.4392907960074289, 0.40624951464789255, 0.38220354488917757, 0.39017358848026823, 0.3744120512689863, 0.3781452945300511, 0.37985652685165405, 0.3873532840183803, 0.3764570270265852, 0.41536163432257517], "val_accuracy": [0.4986666738986969, 0.6353333592414856, 0.6079999804496765, 0.7223333120346069, 0.7269999980926514, 0.7103333473205566, 0.7473333477973938, 0.7236666679382324, 0.7446666955947876, 0.7413333058357239, 0.7543333172798157, 0.7703333497047424, 0.7746666669845581, 0.8053333163261414, 0.8016666769981384, 0.8019999861717224, 0.7963333129882812, 0.8206666707992554, 0.812666654586792, 0.8273333311080933, 0.7900000214576721, 0.8053333163261414, 0.8133333325386047, 0.8330000042915344, 0.831333339214325, 0.8383333086967468, 0.8349999785423279, 0.8366666436195374, 0.8299999833106995, 0.8323333263397217, 0.8100000023841858]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [53, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 3, 0, 6, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 30, 30, 17, 13, 3, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.negative(beta))))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0629529414191428, 1.4910790754929668, 1.077860219650863, 0.9132109677330252, 0.8401928688981954, 0.7835165353703729, 0.7329684402476275, 0.722862638093225, 0.6787465395094177, 0.6637741947422852, 0.6517368945400271, 0.6509918940065716, 0.6123212430345195, 0.6161432834254784, 0.5828451025345858, 0.5887712292651679, 0.5585260991926726, 0.5425127554705051, 0.5611611466996028, 0.5290561433457869, 0.517468752846537, 0.5305767227252083, 0.5015976041252304, 0.502794895158263, 0.4840842708463068], "accuracy": [0.31660282611846924, 0.509311854839325, 0.6063928008079529, 0.668339729309082, 0.6894729733467102, 0.7041342258453369, 0.7235503792762756, 0.7300224304199219, 0.7375511527061462, 0.7353057861328125, 0.7470611333847046, 0.7539294958114624, 0.7602694630622864, 0.7650244235992432, 0.7777044177055359, 0.7733456492424011, 0.7906485199928284, 0.7922335267066956, 0.7841764688491821, 0.8010830879211426, 0.8083476424217224, 0.8017435073852539, 0.8074230551719666, 0.8129705190658569, 0.819970965385437], "val_loss": [1.551386901310512, 0.8358961003167289, 0.8099921430860247, 0.605521525655474, 0.6298797471182687, 0.6157067332948957, 0.5535073791231427, 0.533575177192688, 0.4935893160956247, 0.5198965924126762, 0.576574546950204, 0.485247084072658, 0.4793240342821394, 0.4436034219605582, 0.45512921469552176, 0.4522977386202131, 0.42533821719033377, 0.4282757554735456, 0.42256832122802734, 0.4015471764973232, 0.44550372873033794, 0.44161839144570486, 0.4189814669745309, 0.39824301855904715, 0.40577065093176706], "val_accuracy": [0.5226666927337646, 0.6620000004768372, 0.6573333144187927, 0.734000027179718, 0.7233333587646484, 0.7146666646003723, 0.7613333463668823, 0.7426666617393494, 0.7723333239555359, 0.7429999709129333, 0.7279999852180481, 0.7799999713897705, 0.7763333320617676, 0.8016666769981384, 0.8029999732971191, 0.8016666769981384, 0.8059999942779541, 0.8040000200271606, 0.8159999847412109, 0.8233333230018616, 0.7943333387374878, 0.8023333549499512, 0.8086666464805603, 0.8199999928474426, 0.8199999928474426]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [2, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8088571429252625, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0628926950501825, 1.4988808752507612, 1.0834826760918095, 0.9130288864470051, 0.8413743309341071, 0.7755733158027555, 0.7330875351932528, 0.7035796378881011, 0.6990458221877051, 0.6662572273378595, 0.6426304930929557, 0.6583321612067998, 0.5975714537996926, 0.6271009864729661, 0.592959482176051, 0.608050063553582, 0.5681764507306297, 0.5491094397610489, 0.5491475382375207, 0.5394220981757245, 0.5246630694651726, 0.5273523572224668, 0.5112401072485508, 0.4980540982980329, 0.4871720888941846], "accuracy": [0.31660282611846924, 0.505349338054657, 0.6066569685935974, 0.6662263870239258, 0.6885483860969543, 0.7098137736320496, 0.7213049530982971, 0.7407211661338806, 0.7327961921691895, 0.735569953918457, 0.7535332441329956, 0.7479857206344604, 0.7716285586357117, 0.7629110813140869, 0.7725531458854675, 0.7691190242767334, 0.7847048044204712, 0.7887993454933167, 0.7887993454933167, 0.7993659973144531, 0.8083476424217224, 0.8050455451011658, 0.8064984679222107, 0.8157442808151245, 0.8175934553146362], "val_loss": [1.5501226357051305, 0.8388885259628296, 0.8343148572104317, 0.6777397394180298, 0.6589152302060809, 0.5785127537591117, 0.5712862014770508, 0.49724178654806955, 0.49835433278764996, 0.5348472765513829, 0.5649957997458321, 0.4791950668607439, 0.5260582481111798, 0.44131859711238314, 0.4883523668561663, 0.4490074600492205, 0.4456103358949934, 0.4261966943740845, 0.43295206342424664, 0.4001309445926121, 0.4409288593700954, 0.44952339785439627, 0.4126885448183332, 0.4061610358101981, 0.40739292757851736], "val_accuracy": [0.5246666669845581, 0.6650000214576721, 0.6473333239555359, 0.7013333439826965, 0.7023333311080933, 0.7276666760444641, 0.749666690826416, 0.7723333239555359, 0.7736666798591614, 0.734666645526886, 0.7336666584014893, 0.7829999923706055, 0.7436666488647461, 0.8056666851043701, 0.7846666574478149, 0.8019999861717224, 0.7923333048820496, 0.8046666383743286, 0.8066666722297668, 0.8193333148956299, 0.79666668176651, 0.8013333082199097, 0.8090000152587891, 0.8159999847412109, 0.8190000057220459]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 6, 2, 2, 0, 0, 2, 0, 0, 2, 0, 6, 2, 9, 2, 4, 8, 9, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 2, 3, 3, 3, 2, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [2, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.7937142848968506, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, alpha))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.029099382476847, 1.6362426986374388, 1.0050756862969399, 0.9454551112414068, 0.8075427924952157, 0.7780334587031666, 0.7272580270801222, 0.7151315364351425, 0.7074539222658712, 0.6770317336555958, 0.6562403526131062, 0.6326468983315017, 0.6295633448695998, 0.6189054297323886, 0.5659526305790071, 0.5870593296790309, 0.5649254499740132, 0.5584726896756487, 0.5657212074012993], "accuracy": [0.32545238733291626, 0.47232863306999207, 0.6460176706314087, 0.657508909702301, 0.698718786239624, 0.7100779414176941, 0.7246070504188538, 0.7250033020973206, 0.7323999404907227, 0.7378153204917908, 0.7497028112411499, 0.7518161535263062, 0.7577598690986633, 0.7652885913848877, 0.7872143983840942, 0.7749306559562683, 0.785101056098938, 0.78113853931427, 0.7848368883132935], "val_loss": [1.645012446812221, 0.8321831396647862, 0.7970455033438546, 0.6458110809326172, 0.5971286467143467, 0.5837775639125279, 0.5680306298392159, 0.5171720811298915, 0.5095508439200265, 0.5454008749553135, 0.4618969644818987, 0.4693163292748587, 0.4578676564352853, 0.44740050179617746, 0.48784899711608887, 0.4657317740576608, 0.45313778945377897, 0.4477660741124834, 0.43408574376787457], "val_accuracy": [0.3553333282470703, 0.6846666932106018, 0.6516666412353516, 0.7113333344459534, 0.7170000076293945, 0.718999981880188, 0.734666645526886, 0.7726666927337646, 0.7593333125114441, 0.7459999918937683, 0.7816666960716248, 0.7763333320617676, 0.7996666431427002, 0.8013333082199097, 0.7646666765213013, 0.7776666879653931, 0.7833333611488342, 0.7940000295639038, 0.7976666688919067]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 5, 6, 2, 2, 0, 0, 1, 0, 0, 2, 0, 6, 2, 9, 2, 4, 8, 9, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [6, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.7882857322692871, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.02910032412159, 1.637440105895986, 1.0143169575930429, 0.9351293020921692, 0.7980313439489497, 0.814982583163484, 0.7163358120366551, 0.7171170689709796, 0.6980352345521912, 0.6853910368179459, 0.6777452596143063, 0.6310264612815604, 0.6292480740879726, 0.6131270908566199, 0.5734325950140368, 0.5806223632023083, 0.575727826277373, 0.5655371650744423], "accuracy": [0.32545238733291626, 0.4707436263561249, 0.6419231295585632, 0.6619997620582581, 0.6996433734893799, 0.696209192276001, 0.7300224304199219, 0.7210407853126526, 0.7333245277404785, 0.7428345084190369, 0.7429665923118591, 0.7474573850631714, 0.7574957013130188, 0.7650244235992432, 0.7821952104568481, 0.7779685854911804, 0.7758552432060242, 0.7824593782424927], "val_loss": [1.6450212682996477, 0.832226003919329, 0.747133697782244, 0.6401111568723407, 0.6703857353755406, 0.5446408816746303, 0.5514217955725533, 0.5023554222924369, 0.5136575698852539, 0.5873518501009259, 0.5094900642122541, 0.49381249291556223, 0.4615252699170794, 0.44601075989859446, 0.5303240503583636, 0.4819848707744053, 0.4547741413116455, 0.44683973278318134], "val_accuracy": [0.3553333282470703, 0.6846666932106018, 0.6896666884422302, 0.7026666402816772, 0.6923333406448364, 0.7523333430290222, 0.731333315372467, 0.7723333239555359, 0.7699999809265137, 0.7366666793823242, 0.7396666407585144, 0.7603333592414856, 0.8026666641235352, 0.8003333210945129, 0.750333309173584, 0.7630000114440918, 0.7766666412353516, 0.796999990940094]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [7, 7, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [13, 49, 44, 92]], "fitness": -0.5002856850624084, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301906333859602, 2.2995719317951537, 2.299096439240899, 2.2985858870629605, 2.297175626492755, 2.2946641636940277, 2.2934041950350283, 2.2911743370454705, 2.290959170087926, 2.2903549396571323, 2.287703498605535, 2.287178611994703, 2.285837254645786, 2.2845983355666637, 2.283100890949528, 2.2822553776101255, 2.2787978623316762, 2.2787714512466897, 2.2779002398421753, 2.275526761882703, 2.275473185565572, 2.2742329243388015, 2.272324501861907, 2.2719019943807166, 2.2690236447840286, 2.2680220632914616, 2.2660120393243903, 2.2661232030024823, 2.2650032133521374, 2.263748129896437, 2.2619395938767983, 2.260158686133392, 2.257997518391295, 2.256754237584245, 2.2549021270816447, 2.253472923964809, 2.252271689853459, 2.251027937720181, 2.2483747502391083, 2.2493518140133046, 2.2479893409218596, 2.2458926002662163, 2.2433094063203223, 2.2411724176735626, 2.240071188961085, 2.2374445179339806, 2.237391569390509, 2.2356922874014846, 2.232123430520631, 2.230566433029971, 2.2287331437075757, 2.22636019426204, 2.2243745312509975, 2.2230650867217285, 2.22319321710483, 2.2189956223408873, 2.2189287423237265, 2.215528685639421, 2.21493585017442, 2.211603619970146, 2.2124004877632353, 2.2102761553609533, 2.2052681350027803, 2.2058970047388065, 2.20032508624244, 2.1994379500450947, 2.19830195237113, 2.195187753674345, 2.193676145463147, 2.1917209858907576, 2.189734186683396, 2.186073160725751, 2.1810512593110256, 2.1812296589178857, 2.176956370774041, 2.1762986391952026, 2.1738569931095273, 2.1721388279029705, 2.16812558262938, 2.1654319667135957, 2.1617523689217113, 2.1597614070727067, 2.1534358732074623, 2.1535833917352516, 2.150143589467704, 2.147581870041629, 2.1458286912197826, 2.1433696769814623, 2.1378214276776952, 2.1346768021599303, 2.1303343626139988, 2.13018660872226, 2.1229528932681, 2.123183768202742, 2.1194346032327176, 2.1173148991929036, 2.1131029143199282, 2.1073959186769606, 2.104614227360675, 2.10135792734884], "accuracy": [0.09074098616838455, 0.09787346422672272, 0.1006472036242485, 0.10170386731624603, 0.09708096832036972, 0.11002509295940399, 0.11649715900421143, 0.11610091477632523, 0.12772421538829803, 0.11768590658903122, 0.1294412910938263, 0.12402588874101639, 0.13498876988887787, 0.13961167633533478, 0.14463083446025848, 0.13578127324581146, 0.15519747138023376, 0.1472724825143814, 0.15400871634483337, 0.16338661313056946, 0.16470743715763092, 0.16549994051456451, 0.16589617729187012, 0.17038699984550476, 0.1818782240152359, 0.1744815707206726, 0.18782195448875427, 0.18319904804229736, 0.18623696267604828, 0.1970677524805069, 0.19812442362308502, 0.2044644057750702, 0.20974771678447723, 0.2036719024181366, 0.2078985571861267, 0.21859727799892426, 0.21463479101657867, 0.22176727652549744, 0.2285034954547882, 0.21793685853481293, 0.2292959988117218, 0.23722097277641296, 0.2382776439189911, 0.24620261788368225, 0.2475234419107437, 0.2538634240627289, 0.25241050124168396, 0.25214633345603943, 0.258090078830719, 0.2645621597766876, 0.2716946303844452, 0.26495838165283203, 0.2697133719921112, 0.27380794286727905, 0.2769779562950134, 0.28001585602760315, 0.28318583965301514, 0.29626205563545227, 0.2895258367061615, 0.2915070652961731, 0.28978997468948364, 0.2833179235458374, 0.29784706234931946, 0.29982829093933105, 0.30920618772506714, 0.30643242597579956, 0.3077532649040222, 0.30484744906425476, 0.31620657444000244, 0.31343284249305725, 0.31898030638694763, 0.3147536516189575, 0.3343019485473633, 0.3203011453151703, 0.3366794288158417, 0.33562275767326355, 0.3295469582080841, 0.3329811096191406, 0.3358869254589081, 0.3365473449230194, 0.3440760672092438, 0.34645357728004456, 0.35583147406578064, 0.34764233231544495, 0.35001981258392334, 0.3505481481552124, 0.3485668897628784, 0.3501518964767456, 0.36045435070991516, 0.3571522831916809, 0.36520934104919434, 0.3681151866912842, 0.37643641233444214, 0.3737947344779968, 0.3727380931377411, 0.3703605830669403, 0.36983224749565125, 0.37022849917411804, 0.37485140562057495, 0.37141725420951843], "val_loss": [1.9697303090776717, 1.96849148614066, 1.9672556604657854, 1.9660305295671736, 1.964803695678711, 1.963571344103132, 1.9623349053519112, 1.9611153602600098, 1.9598911149161202, 1.9586498396737235, 1.957411289215088, 1.9561779839651925, 1.954954011099679, 1.9537277221679688, 1.9524929864065987, 1.9512792314801897, 1.9500437464032854, 1.9488185473850794, 1.9475881031581335, 1.9463332039969308, 1.9450789179120744, 1.943824631827218, 1.9425450733729772, 1.9412874494280135, 1.9400035994393485, 1.9387200219290597, 1.9374285425458635, 1.9361326353890556, 1.9348294394356864, 1.9335176604134696, 1.9322011130196708, 1.9308556147984095, 1.9295035089765276, 1.9281420026506697, 1.9267550195966447, 1.925367764064244, 1.9239682470049178, 1.922555650983538, 1.9211199624197823, 1.9196829114641463, 1.9182312829153878, 1.9167682102748327, 1.9152609961373466, 1.9137259210859026, 1.9122085571289062, 1.9106599262782507, 1.9090931756155831, 1.9074875286647253, 1.9058707782200404, 1.9042374747140067, 1.9025722231183733, 1.9008691651480538, 1.8991708755493164, 1.897421223776681, 1.8956664630344935, 1.893869059426444, 1.8920584406171526, 1.8902174404689245, 1.888369015284947, 1.886467524937221, 1.8845699855259486, 1.8826287814549036, 1.880652700151716, 1.8786589758736747, 1.8765948840550013, 1.8745147841317313, 1.872414997645787, 1.8702683448791504, 1.868091447012765, 1.8658841678074427, 1.863663673400879, 1.8613836424691337, 1.8590373992919922, 1.8566893168858118, 1.854276520865304, 1.8518178803580148, 1.8493398938860213, 1.8468362263270788, 1.8442810603550501, 1.8417027337210519, 1.8390509741646903, 1.836381094796317, 1.833610943385533, 1.830848557608468, 1.8280482292175293, 1.8251876831054688, 1.8223058155604772, 1.8194009235927038, 1.8164026396615165, 1.8133830342973982, 1.8102760996137346, 1.8071690968104772, 1.8039773532322474, 1.8007805688040597, 1.7975290843418665, 1.7942563465663366, 1.790938445499965, 1.787517888205392, 1.784055301121303, 1.7805630820138114], "val_accuracy": [0.04066666588187218, 0.050999999046325684, 0.06066666543483734, 0.06933332979679108, 0.08033332973718643, 0.09366666525602341, 0.10499999672174454, 0.12066666781902313, 0.1303333342075348, 0.14100000262260437, 0.1496666669845581, 0.1626666635274887, 0.17499999701976776, 0.18666666746139526, 0.1979999989271164, 0.2083333283662796, 0.21966665983200073, 0.22733333706855774, 0.23933333158493042, 0.24833333492279053, 0.25833332538604736, 0.26766666769981384, 0.2746666669845581, 0.28333333134651184, 0.2893333435058594, 0.2926666736602783, 0.30000001192092896, 0.3070000112056732, 0.31166666746139526, 0.3179999887943268, 0.3233333230018616, 0.32899999618530273, 0.3336666524410248, 0.3386666774749756, 0.34066668152809143, 0.3453333377838135, 0.3490000069141388, 0.3526666760444641, 0.3556666672229767, 0.3583333194255829, 0.3610000014305115, 0.3633333444595337, 0.36533331871032715, 0.36666667461395264, 0.36899998784065247, 0.3713333308696747, 0.37400001287460327, 0.37700000405311584, 0.3776666522026062, 0.3799999952316284, 0.38199999928474426, 0.382999986410141, 0.3853333294391632, 0.38999998569488525, 0.39266666769981384, 0.3946666717529297, 0.39766666293144226, 0.3996666669845581, 0.4026666581630707, 0.40433332324028015, 0.4059999883174896, 0.4090000092983246, 0.41066667437553406, 0.4113333225250244, 0.4116666615009308, 0.4129999876022339, 0.4163333475589752, 0.4183333218097687, 0.4193333387374878, 0.4203333258628845, 0.42399999499320984, 0.42533332109451294, 0.4286666810512543, 0.4309999942779541, 0.4323333203792572, 0.4359999895095825, 0.43700000643730164, 0.4390000104904175, 0.4423333406448364, 0.4440000057220459, 0.445333331823349, 0.44733333587646484, 0.44866666197776794, 0.4503333270549774, 0.45133334398269653, 0.45266667008399963, 0.4543333351612091, 0.4566666781902313, 0.4583333432674408, 0.4596666693687439, 0.46133333444595337, 0.4620000123977661, 0.46399998664855957, 0.4659999907016754, 0.46700000762939453, 0.46799999475479126, 0.46933332085609436, 0.47099998593330383, 0.4723333418369293, 0.4729999899864197]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [53, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 9, 0, 0, 1, 0, 0, 2, 0, 6, 2, 9, 2, 4, 8, 9, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 2, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 72, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [44, 58, 44, 92]], "fitness": -0.4537142813205719, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), beta))), tf.math.negative(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.152024039912296, 1.9410800350938948, 2.4664129957688594, 1.987114089717167, 4.484519851087728e+25, NaN], "accuracy": [0.27222296595573425, 0.38528597354888916, 0.19455818831920624, 0.32901862263679504, 0.17791573703289032, 0.09998679161071777], "val_loss": [1.9195169721330916, 1.9924670628138952, 1.8410831178937639, 1.853234086717878, NaN, NaN], "val_accuracy": [0.4203333258628845, 0.3423333466053009, 0.22599999606609344, 0.32733333110809326, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 1, 6, 2, 2, 0, 0, 1, 0, 2, 2, 6, 6, 2, 9, 2, 4, 8, 9, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [2, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 2, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.36314284801483154, "mapping_values": [1, 3, 3, 1, 2, 1, 30, 30, 17, 13, 4, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(grad, grad)))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.0749482679297784, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.3357548415660858, 0.26984545588493347, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.7884231976100378, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.31200000643730164, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 4, 6, 4, 2, 2, 0, 3, 6, 3, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 7, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [86, 49, 44, 92]], "fitness": -0.2945714294910431, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 5, 3, 2, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.295629861836326, 2.3869119739456894, 2.2834812586790285, 3.7894448257786895, 2.3050256426371227, 2.303228913674879, 2.3029845024789597, 2.3029425229851155], "accuracy": [0.22057852149009705, 0.11530841141939163, 0.14251750707626343, 0.15902787446975708, 0.10091137140989304, 0.09509972482919693, 0.09615638852119446, 0.09959053993225098], "val_loss": [2.0625385556902205, 1.9734800202505929, 1.4934163434164864, 1.9766906329563685, 1.9740015438624792, 1.9737045424325126, 1.9736567905970983, 1.9736662592206682], "val_accuracy": [0.2006666660308838, 0.1003333330154419, 0.304666668176651, 0.09866666793823242, 0.10400000214576721, 0.10400000214576721, 0.10433333367109299, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 2, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [53, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 8, 0, 0, 1, 0, 0, 9, 2, 6, 2, 2, 8, 5, 9, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 58, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.negative(grad))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1217568804.0118096, 23938552697.423325, 108981158240.73967, 307053507637.1544, 659475923134.4362, 1198677897765.127], "accuracy": [0.10447761416435242, 0.09694888442754745, 0.10421344637870789, 0.09998679161071777, 0.09945846349000931, 0.09932637959718704], "val_loss": [4724401737.142858, 37798929554.28571, 127575031808.0, 302407745536.0, 590647188333.7142, 1020638527488.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 5, 6, 2, 2, 0, 5, 1, 0, 0, 2, 0, 6, 2, 9, 2, 4, 8, 9, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [13, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [2, 8, 1, 3], [0, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 1, 1, 0, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [29.84734485864545, 326.41852072676835, 1253.492683472115, 3313.260702394932, 6900.95320110248, 12331.076321113253], "accuracy": [0.10421344637870789, 0.09694888442754745, 0.10408136248588562, 0.09985470771789551, 0.09972262382507324, 0.09932637959718704], "val_loss": [81.91776602608817, 460.83082798549106, 1408.2752162388392, 3200.7877371651784, 6115.041294642857, 10425.07924107143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [73, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [28294377.881879818, 2.691483626890302, 2.4859639796220616, 2.6127558097768815, 2.649461833729389, 2.5013314611041677], "accuracy": [0.09536388516426086, 0.10302469879388809, 0.10038304328918457, 0.09760929644107819, 0.09760929644107819, 0.09840179979801178], "val_loss": [2.3266031401497975, 2.312737056187221, 2.3241621426173618, 2.2000483785356795, 2.3294495855058943, 2.2986159324645996], "val_accuracy": [0.10400000214576721, 0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.09799999743700027, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 1, 2, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 2, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [99, 26, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 2, 2, 2, 2, 0, 0, 1, 1, 0, 2, 2, 6, 2, 2, 3, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 3, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 31, 31, 17, 14, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), grad))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.2949666635094162e+33, 2.653562129181547, 2.8953146734856157, 3.7793017773344184, 4.588176824854129, 2.391282442617158], "accuracy": [0.06485272943973541, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 2.308253356388637, 2.6572911398751393, 3.8657095772879466, 2.0444553239004954, 2.057114669254848], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [0, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 5, 4, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 8, 1, 3], [6, 2], [94], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [59, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1977709.039375507, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 1, 2, 2, 6, 0, 3, 6, 1, 5, 2, 5, 1, 1, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 44, 2, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 2, 1, 0, 1, 0, 3], [44, 26, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 38, 38, 23, 15, 4, 4, 2, 2, 0, 0, 3, 1, 2, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), grad)), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [5.03696350836256e+25, 7.549266134349504, 27.608738193957876, 61.99201205012632, 110.60428910916114, 173.5106072265238], "accuracy": [0.06577730923891068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.669306891305106, 14.61009270804269, 39.04109191894531, 75.71022469656808, 124.62518310546875, 185.77981567382812], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 6, 3, 5, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [0, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 0, 4, 3, 2, 1, 1, 6, 4, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(alpha, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))))))))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 0, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 0, 0, 2, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 4, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 30, 30, 18, 12, 3, 1, 0, 0, 0, 0, 12, 6, 6, 2], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), grad)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(beta, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 1, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [75, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 30, 30, 18, 12, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(alpha))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), grad)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302456620850851, 2.3014699912987617, 2.3023360414181275, 2.3031474620973778, 2.3030745738438485, 2.3019037537051386], "accuracy": [0.08968432247638702, 0.09113723784685135, 0.09351472556591034, 0.08942015469074249, 0.08440100401639938, 0.09074098616838455], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 9, 1, 5, 5, 5, 4, 3, 0, 6, 0, 0, 4, 5, 0, 3, 6, 5, 3, 7, 6, 2, 1, 8, 9, 5, 6, 3, 4, 1, 0, 0], [3, 0, 2, 0, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 3, 1, 0, 2, 3], [45, 72, 16, 9, 57, 39, 26, 75], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 6, 2, 2, 8, 5, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [36, 86, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0], [7, 8, 1, 3], [6, 2], [94], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 9, 7, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 1, 0, 2, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302456620850851, 2.3014699912987617, 2.3023360414181275, 2.3031474620973778, 2.3030745738438485, 2.3019037537051386], "accuracy": [0.08968432247638702, 0.09113723784685135, 0.09351472556591034, 0.08942015469074249, 0.08440100401639938, 0.09074098616838455], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]